{"version":3,"file":"static/js/main.592ce07f.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js","../node_modules/use-sync-external-store/with-selector.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","components/CitySearch.tsx","assets/icons/LocationIcon.tsx","components/GeolocationSearch.tsx","assets/icons/World.tsx","pages/SplashPage.tsx","hooks/useLocalStorage.ts","../node_modules/redux/src/utils/formatProdErrorMessage.ts","../node_modules/redux/src/utils/symbol-observable.ts","../node_modules/redux/src/utils/actionTypes.ts","../node_modules/redux/src/utils/isPlainObject.ts","../node_modules/redux/src/createStore.ts","../node_modules/redux/src/combineReducers.ts","../node_modules/redux/src/compose.ts","../node_modules/redux/src/utils/isAction.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@reduxjs/toolkit/node_modules/immer/src/utils/env.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/utils/errors.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/utils/common.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/utils/plugins.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/core/scope.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/core/finalize.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/core/proxy.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/core/immerClass.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/core/current.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/plugins/patches.ts","../node_modules/@reduxjs/toolkit/node_modules/immer/src/immer.ts","../node_modules/reselect/src/utils.ts","../node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/reselect/src/weakMapMemoize.ts","../node_modules/reselect/src/createSelectorCreator.ts","../node_modules/reselect/src/createStructuredSelector.ts","../node_modules/redux-thunk/dist/redux-thunk.mjs","../node_modules/@reduxjs/toolkit/src/devtoolsExtension.ts","../node_modules/@reduxjs/toolkit/src/createDraftSafeSelector.ts","../node_modules/@reduxjs/toolkit/src/tsHelpers.ts","../node_modules/@reduxjs/toolkit/src/createAction.ts","../node_modules/@reduxjs/toolkit/src/utils.ts","../node_modules/@reduxjs/toolkit/src/getDefaultMiddleware.ts","../node_modules/@reduxjs/toolkit/src/autoBatchEnhancer.ts","../node_modules/@reduxjs/toolkit/src/getDefaultEnhancers.ts","../node_modules/@reduxjs/toolkit/src/mapBuilders.ts","../node_modules/@reduxjs/toolkit/src/nanoid.ts","../node_modules/@reduxjs/toolkit/src/matchers.ts","../node_modules/@reduxjs/toolkit/src/createAsyncThunk.ts","../node_modules/@reduxjs/toolkit/src/createSlice.ts","../node_modules/@reduxjs/toolkit/src/createReducer.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/exceptions.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/utils.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/task.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/index.ts","../node_modules/@reduxjs/toolkit/src/combineSlices.ts","../node_modules/@reduxjs/toolkit/src/formatProdErrorMessage.ts","../node_modules/@reduxjs/toolkit/src/query/core/apiState.ts","../node_modules/@reduxjs/toolkit/src/query/utils/joinUrls.ts","../node_modules/@reduxjs/toolkit/src/query/utils/isAbsoluteUrl.ts","../node_modules/@reduxjs/toolkit/src/query/utils/flatten.ts","../node_modules/@reduxjs/toolkit/src/query/utils/copyWithStructuralSharing.ts","../node_modules/@reduxjs/toolkit/src/query/fetchBaseQuery.ts","../node_modules/@reduxjs/toolkit/src/query/HandledError.ts","../node_modules/@reduxjs/toolkit/src/query/retry.ts","../node_modules/@reduxjs/toolkit/src/query/core/setupListeners.ts","../node_modules/@reduxjs/toolkit/src/query/endpointDefinitions.ts","../node_modules/@reduxjs/toolkit/src/query/utils/isNotNullish.ts","../node_modules/@reduxjs/toolkit/src/query/utils/countObjectKeys.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildInitiate.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildThunks.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildSlice.ts","../node_modules/@reduxjs/toolkit/src/query/utils/isOnline.ts","../node_modules/@reduxjs/toolkit/src/query/utils/isDocumentVisible.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildSelectors.ts","../node_modules/@reduxjs/toolkit/src/query/defaultSerializeQueryArgs.ts","../node_modules/@reduxjs/toolkit/src/query/createApi.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/cacheCollection.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/invalidationByTags.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/polling.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/cacheLifecycle.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/queryLifecycle.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/devMiddleware.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/batchActions.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/index.ts","../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/windowEventHandling.ts","../node_modules/@reduxjs/toolkit/src/query/tsHelpers.ts","../node_modules/@reduxjs/toolkit/src/query/core/module.ts","../node_modules/@reduxjs/toolkit/src/query/core/index.ts","../node_modules/react-redux/src/utils/react.ts","../node_modules/react-redux/src/components/Context.ts","../node_modules/react-redux/src/utils/useSyncExternalStore.ts","../node_modules/react-redux/src/hooks/useReduxContext.ts","../node_modules/react-redux/src/hooks/useSelector.ts","../node_modules/react-redux/src/utils/react-is.ts","../node_modules/react-redux/src/utils/batch.ts","../node_modules/react-redux/src/utils/Subscription.ts","../node_modules/react-redux/src/utils/useIsomorphicLayoutEffect.ts","../node_modules/react-redux/src/utils/shallowEqual.ts","../node_modules/react-redux/src/utils/hoistStatics.ts","../node_modules/react-redux/src/components/Provider.tsx","../node_modules/react-redux/src/hooks/useStore.ts","../node_modules/react-redux/src/hooks/useDispatch.ts","../node_modules/react-redux/src/exports.ts","../node_modules/@reduxjs/toolkit/src/query/utils/capitalize.ts","../node_modules/react-redux/src/index.ts","../node_modules/react-redux/src/components/connect.tsx","../node_modules/@reduxjs/toolkit/src/query/react/constants.ts","../node_modules/@reduxjs/toolkit/src/query/react/useSerializedStableValue.ts","../node_modules/@reduxjs/toolkit/src/query/react/useShallowStableValue.ts","../node_modules/@reduxjs/toolkit/src/query/react/buildHooks.ts","../node_modules/@reduxjs/toolkit/src/query/react/module.ts","../node_modules/@reduxjs/toolkit/src/query/react/index.ts","redux/api.ts","utils/addressHandler.ts","pages/weather_page/components/city_date/Clock.tsx","pages/weather_page/components/city_date/CityDate.tsx","utils/getCurrentDate.ts","assets/icons/forecast_icons/ClearDay.tsx","assets/icons/forecast_icons/ClearNight.tsx","assets/icons/forecast_icons/Cloudy.tsx","assets/icons/forecast_icons/Fog.tsx","assets/icons/forecast_icons/CloudyDay.tsx","assets/icons/forecast_icons/CloudyNight.tsx","assets/icons/forecast_icons/Rain.tsx","assets/icons/forecast_icons/Snow.tsx","assets/icons/forecast_icons/Windy.tsx","pages/weather_page/components/WeatherIcon.tsx","utils/conditionHandler.tsx","pages/weather_page/components/current_condition_icon/CurrentConditionIcon.tsx","assets/icons/Compass.tsx","assets/icons/CompassArrow.tsx","pages/weather_page/components/wind_info/WindInfo.tsx","assets/icons/CloseIcon.tsx","pages/weather_page/components/HourlyForecast.tsx","pages/weather_page/components/weekly_forecast/DayForecast.tsx","pages/weather_page/components/weekly_forecast/WeeklyForecast.tsx","redux/forecastsSlice.ts","pages/weather_page/ForecastPage.tsx","assets/icons/WorldMapIcon.tsx","pages/weather_page/components/buttons/MapBtn.tsx","assets/icons/ArrowForwardIcon.tsx","assets/icons/ArrowBackIcon.tsx","pages/weather_page/components/buttons/ArrowBtn.tsx","assets/icons/WorldMap.tsx","pages/weather_page/components/map/map_components/MapLocation.tsx","pages/weather_page/components/map/map_components/MapAddress.tsx","pages/weather_page/components/map/Map.tsx","pages/weather_page/WeatherPage.tsx","App.tsx","redux/store.ts","../node_modules/@reduxjs/toolkit/src/configureStore.ts","../node_modules/redux/src/applyMiddleware.ts","index.tsx"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var g=require(\"react\");function n(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var p=\"function\"===typeof Object.is?Object.is:n,q=g.useSyncExternalStore,r=g.useRef,t=g.useEffect,u=g.useMemo,v=g.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,h){var c=r(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=u(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==h&&f.hasValue){var b=f.value;if(h(b,a))return k=b}return k=a}b=k;if(p(d,a))return b;var e=l(a);if(void 0!==h&&h(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,h]);var d=q(a,c[0],c[1]);\nt(function(){f.hasValue=!0;f.value=d},[d]);v(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-sync-external-store-with-selector.production.min.js');\n} else {\n  module.exports = require('./cjs/use-sync-external-store-with-selector.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { useContext, useState } from \"react\";\nimport { locationsContext } from \"../App\";\nimport \"./citySearch.scss\";\nexport const CitySearch = () => {\n\tconst [value, setValue] = useState<string>(\"\");\n\tconst { locations, setLocations } = useContext(locationsContext);\n\treturn (\n\t\t<input\n\t\t\tclassName=\"city-search\"\n\t\t\ttype=\"text\"\n\t\t\tvalue={value}\n\t\t\tonChange={(event) => setValue(event.target.value)}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\tif (\n\t\t\t\t\tevent.key === \"Enter\" &&\n\t\t\t\t\t!(locations as Array<string>).includes(value) &&\n\t\t\t\t\tvalue.length !== 0\n\t\t\t\t) {\n\t\t\t\t\tsetLocations((prev: Array<string>) => [...prev, value]);\n\t\t\t\t\tsetValue(\"\");\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n};\n","import React from \"react\";\n\nexport const LocationIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"15\" viewBox=\"0 -960 960 960\" width=\"15\">\n\t\t\t<path\n\t\t\t\tfill=\"white\"\n\t\t\t\td=\"M480-480q33 0 56.5-23.5T560-560q0-33-23.5-56.5T480-640q-33 0-56.5 23.5T400-560q0 33 23.5 56.5T480-480Zm0 294q122-112 181-203.5T720-552q0-109-69.5-178.5T480-800q-101 0-170.5 69.5T240-552q0 71 59 162.5T480-186Zm0 106Q319-217 239.5-334.5T160-552q0-150 96.5-239T480-880q127 0 223.5 89T800-552q0 100-79.5 217.5T480-80Zm0-480Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n};\n","import React, { useContext } from \"react\";\nimport { locationsContext } from \"../App\";\nimport \"./geolocationSearch.scss\";\nimport { LocationIcon } from \"../assets/icons/LocationIcon\";\nexport const GeolocationSearch = () => {\n\tconst { locations, setLocations } = useContext(locationsContext);\n\tfunction handleLocationClick() {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(success, error);\n\t\t} else {\n\t\t\t//ERROR MESSAGE:'Geolocation not supported, please enter city name'\n\t\t\tconsole.log(\"Geolocation not supported\");\n\t\t}\n\t}\n\n\tfunction success(position: any) {\n\t\tconst latitude = position.coords.latitude;\n\t\tconst longitude = position.coords.longitude;\n\t\tconst url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`;\n\t\tfetch(url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (!(locations as Array<any>).includes(data.address.city)) {\n\t\t\t\t\tsetLocations((prev: Array<string>) => [...prev, data.address.city]);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t.catch((error) => {\n\t\t\t\t//ERROR MESSAGE: 'Unable to retrieve your location, please enter city name'\n\t\t\t});\n\t}\n\tfunction error() {\n\t\t//ERROR MESSAGE: 'Unable to retrieve your location, please enter city name'\n\t\tconsole.log(\"Unable to retrieve your location\");\n\t}\n\n\treturn (\n\t\t<button className=\"geolocation-search button\" onClick={handleLocationClick}>\n\t\t\t<span className=\"button_text\">\n\t\t\t\tgeol\n\t\t\t\t<span className=\"letter\">\n\t\t\t\t\t<span className=\"letter_o\">o</span>\n\t\t\t\t\t<div className=\"letter_icon\">\n\t\t\t\t\t\t<LocationIcon />\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\tcation\n\t\t\t</span>\n\t\t</button>\n\t);\n};\n","import React from \"react\";\n\nexport const World = () => {\n\treturn (\n\t\t<svg viewBox=\"0 0 1000 700\">\n\t\t\t<path\n\t\t\t\td=\"m 479.68275,331.6274 -0.077,0.025 -0.258,0.155 -0.147,0.054 -0.134,0.027 -0.105,-0.011 -0.058,-0.091 0.006,-0.139 -0.024,-0.124 -0.02,-0.067 0.038,-0.181 0.086,-0.097 0.119,-0.08 0.188,0.029 0.398,0.116 0.083,0.109 10e-4,0.072 -0.073,0.119 z\"\n\t\t\t\tid=\"AD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 632.89475,388.8674 0.184,0.251 0.026,1.701 0.042,0.121 -0.098,0.018 -0.11,0.129 -0.129,0.199 -0.177,0.103 -0.142,0.116 -0.134,0.144 -0.12,0.031 -0.155,-0.183 -0.107,-0.187 0.026,-0.041 0.075,-0.013 0.028,-0.097 -0.045,-0.14 -0.105,-0.053 -0.132,-0.004 -0.127,0.063 -0.135,0.124 -0.076,0.133 -0.011,0.267 0.035,0.3 -10e-4,0.146 -0.074,0.181 -0.026,0.266 0.053,0.206 0.048,0.123 0.005,0.104 -0.126,0.328 0.109,0.062 0.361,0.023 0.106,0.222 0.072,0.152 -0.02,0.09 -0.256,0.067 -0.322,0.074 -0.231,-0.021 -0.418,0.1 -0.223,0.154 0.065,0.096 0.077,0.074 0.035,0.203 -0.065,0.288 -0.118,0.279 -0.147,0.348 -0.17,0.399 -0.233,0.6 -0.197,0.471 -0.021,0.339 0.005,0.221 -0.022,0.441 -0.187,0.243 -0.042,0.007 -0.223,-0.029 -0.075,-0.01 -0.213,-0.028 -0.33,-0.043 -0.429,-0.057 -0.507,-0.066 -0.565,-0.075 -0.604,-0.08 -0.625,-0.082 -0.624,-0.082 -0.605,-0.08 -0.565,-0.074 -0.507,-0.067 -0.428,-0.057 -0.33,-0.043 -0.213,-0.028 -0.075,-0.01 -0.236,-0.031 -0.127,-0.164 -0.154,-0.198 -0.155,-0.199 -0.154,-0.199 -0.154,-0.199 -0.154,-0.199 -0.154,-0.199 -0.154,-0.199 -0.154,-0.199 -0.154,-0.2 -0.154,-0.199 -0.155,-0.2 -0.154,-0.2 -0.154,-0.2 -0.154,-0.2 -0.154,-0.2 -0.154,-0.2 -0.104,-0.134 -0.057,-0.151 -0.011,-0.396 0,-0.087 0.104,-0.16 0.05,0.114 0.116,0.155 0.197,-0.038 0.092,0.026 0.068,0.549 0.145,0.195 0.176,0.078 0.597,0.043 0.371,-0.074 0.731,-0.358 0.384,-0.129 1.062,0.022 0.851,0.149 1.325,0.088 0.257,-0.023 0.715,-0.288 0.438,-0.254 0.261,-0.073 0.172,-0.246 0.113,-0.32 0.101,-0.209 0.129,-0.1 0.122,-0.178 0.099,-0.289 0.246,-0.292 0.986,-0.711 0.576,-0.602 0.051,-0.195 0.313,-0.292 0.251,-0.32 1.175,-0.916 0.235,-0.379 0.139,-0.425 0.017,-0.03 0.101,-0.018 0.144,0.064 0.015,0.318 -0.053,0.3 -0.006,0.318 -0.021,0.172 0.109,0.141 0.186,0.061 0.081,-0.007 0.048,-0.071 z m -0.046,1.283 0.017,-0.133 -0.029,-0.069 -0.12,-0.009 -0.05,0.115 -0.017,0.165 0.083,0.014 0.116,-0.083 z m -5.096,2.438 -0.025,0.06 -0.079,-0.005 -0.198,-0.054 -0.064,-0.086 0.124,-0.103 0.055,-0.005 0.079,0.108 0.108,0.085 z m -3.181,0.564 -0.208,0.017 -0.188,-0.116 0.397,-0.155 0.107,-0.07 0.116,-0.143 0.093,0.123 -0.103,0.193 -0.073,0.083 -0.141,0.068 z m -2.008,-0.091 -0.047,0.022 -0.05,-0.165 0.003,-0.052 0.129,-0.075 0.079,0.135 -0.114,0.135 z m 3.679,0.34 10e-4,0.104 -0.285,-0.03 -0.076,0.054 -0.234,-0.03 -0.229,-0.075 0.155,-0.125 0.404,-0.147 0.168,0.134 0.096,0.115 z\"\n\t\t\t\tid=\"AE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 685.07675,350.8434 -0.144,0.023 -0.204,-0.084 -0.08,-0.128 -0.034,-0.018 -0.162,0.084 -0.309,0.106 -0.524,0.277 0.012,0.071 0.341,0.281 0.08,0.093 0.042,0.029 -0.309,0.135 -0.664,0.304 -0.437,0.248 -0.104,0.009 -0.264,-0.104 -0.39,-0.124 -0.104,0.002 -0.9,0.021 -0.827,0.046 -0.344,0.06 -0.639,0.057 -0.402,0.02 -0.257,0.096 -0.281,0.126 -0.292,0.082 -0.217,0.027 -0.261,0.118 -0.172,0.234 -0.491,0.346 -0.276,0.167 -0.139,0.189 -0.158,0.018 -0.27,-0.034 -0.209,0.204 -0.231,0.292 -0.423,0.423 -0.225,0.171 -0.134,0.276 0.099,0.143 0.344,0.214 0.154,0.202 0.084,0.16 0.157,0.41 0.1,0.403 0.148,0.174 0.043,0.295 0.038,0.181 -0.081,0.129 -0.074,0.143 0,0.136 0.089,0.14 0.078,0.124 0.043,0.099 -0.053,0.11 -0.157,0.168 -0.08,0.172 -0.174,0.287 -0.272,0.196 -0.18,0.142 -0.191,0.3 -0.316,0.333 -0.133,0.278 -0.139,0.153 -0.143,0.082 0.037,0.15 0.124,0.187 0.205,0.209 -0.009,0.325 -0.01,0.234 0.007,0.283 -0.112,0.238 -0.57,0.228 -0.546,0.1 -0.669,0.006 -0.253,-0.036 -0.202,-0.05 -0.726,-0.256 -0.295,0.151 -0.061,0.369 0.53,0.598 0.217,0.333 0.241,0.556 0.18,0.286 -0.064,0.268 -0.48,0.304 -0.477,0.285 -0.608,0.059 -0.382,0.102 -0.185,0.147 -0.136,0.623 -0.137,0.228 0.003,0.271 -0.129,0.307 -0.195,0.197 -0.137,0.322 0.043,0.609 0.064,1.03 -0.259,0.324 -0.292,0.328 -0.308,0.234 -0.293,0.108 -0.243,-0.04 -0.192,-0.202 -0.114,-0.17 -0.212,-0.142 -0.216,0.029 -0.217,0.13 -0.347,-0.043 -0.296,-0.13 -0.15,0.014 -0.086,0.131 -0.317,0.28 -0.778,0.425 -0.318,0.031 -0.136,0.106 0.054,0.174 0.139,0.142 0.243,0.1 0.012,0.116 -0.214,0.101 -0.183,0.115 -0.403,0.141 -0.465,0.055 -0.48,-0.082 -0.247,-0.187 -0.292,-0.018 -0.266,0.137 -0.275,0.226 -0.3,0.484 -0.08,0.085 -0.081,0.077 -0.196,0.104 -0.281,0.17 -0.141,0.356 -0.169,0.633 0.04,0.34 0.013,0.589 -0.066,0.413 -0.122,0.271 0.024,0.213 0.186,0.242 -0.075,0.157 -0.156,0.174 -0.151,0.097 -0.605,0.183 -0.829,0.249 -0.548,0.16 -0.815,0.238 -0.238,0.058 -0.496,0.021 -0.257,-0.036 -0.348,-0.01 -0.512,0.009 -0.357,0.065 -0.358,0.119 -0.264,0.15 -0.152,0.148 -0.054,0.071 -0.359,-0.122 -1.131,-0.218 -3.063,0.288 -0.289,-0.055 -1.045,-0.337 -1.347,-0.434 -0.833,-0.269 -1.069,-0.352 0.732,-0.87 0.638,-0.76 0.64,-0.764 0.63,-0.755 0.075,-0.265 0.01,-0.519 -0.166,-0.695 -0.267,-0.317 -0.881,-0.128 -0.661,-0.097 -0.721,-0.105 -0.092,-0.039 -0.082,-0.543 0.035,-0.242 -0.047,-0.469 0.007,-0.362 0.104,-0.595 0.006,-0.269 -0.333,-1.161 -0.186,-0.645 -0.19,-0.667 -0.041,-0.213 -0.004,-0.263 0.442,-0.62 0.137,-0.135 0.259,-0.309 0.162,-0.165 -0.028,-0.113 -0.282,-0.065 -0.426,-0.006 -0.227,-0.094 -0.177,-0.169 -0.07,-0.246 0.116,-0.437 -0.116,-0.851 0.237,-0.422 0.204,-0.295 0.692,-0.042 -0.24,-0.334 -0.116,-0.194 -0.074,-0.056 -0.028,-0.089 0.037,-0.09 0.177,-0.034 0.12,-0.112 0.195,-0.157 0.102,-0.068 0.018,-0.191 0.093,-0.134 0.14,-0.169 0.111,-0.192 -0.028,-0.225 0.102,-0.27 0.047,-0.17 0.074,-0.147 -0.065,-0.214 -0.056,-0.181 -0.018,-0.215 0.111,-0.057 0.14,-0.079 0.027,-0.17 0.074,-0.215 0.056,-0.171 0.093,-0.135 0.01,-0.137 -0.056,-0.227 0.231,-0.034 0.093,0.125 0.124,0.162 0.339,0.302 0.22,0.088 0.277,0.044 0.341,-0.041 0.272,-0.057 0.128,0.015 0.297,0.219 0.347,0.307 0.111,0.137 0.052,0.209 0.102,0.062 0.222,-0.207 0.214,-0.068 0.197,0.039 0.217,0.023 0.218,-0.076 0.097,-0.055 0.379,-0.268 0.344,-0.204 0.214,-0.125 0.077,-0.42 0.099,-0.239 0.141,-0.139 -0.052,-0.173 -0.059,-0.132 -0.06,-0.179 0.06,-0.095 0.137,-0.042 0.344,0 0.605,-0.189 0.504,-0.189 0.466,-0.154 0.212,-0.025 0.201,0.026 0.092,-0.045 0.025,-0.147 0.114,-0.155 0.259,-0.126 0.487,-0.267 0.43,-0.397 0.153,-0.302 0.104,-0.441 0.201,-0.682 0.222,-0.749 0.082,-0.331 0.094,-0.255 0.38,-0.215 0.388,-0.156 0.601,-0.031 0.705,-0.016 0.149,-0.411 0.093,-0.35 0.117,-0.181 0.171,-0.147 0.06,-0.029 0.38,0.215 0.583,0.329 0.679,0.164 0.341,0.082 0.142,-0.013 0.857,-0.08 0.677,0.128 0.355,0.35 0.349,0.089 0.342,-0.169 0.212,-0.031 0.082,0.109 0.17,0.046 0.26,-0.017 0.15,0.097 0.016,0.097 0.02,0.112 0.192,0.266 0.347,0.323 0.308,0.078 0.405,-0.251 0.137,0.029 0.067,-0.081 0.041,-0.183 0.245,-0.172 0.448,-0.161 0.254,-0.144 0.091,-0.119 0.151,-0.034 0.165,0.036 0.118,-0.045 0.041,-0.113 0.047,-0.049 0.084,-0.04 0.075,-0.02 0.136,0.031 0.251,0.206 0.366,0.38 0.238,0.174 0.109,-0.029 0.14,-0.117 0.171,-0.202 0.042,-0.292 -0.085,-0.381 0.058,-0.308 0.203,-0.234 0.375,-0.144 0.547,-0.055 0.336,0.033 0.124,0.121 0.168,0.066 0.211,0.013 0.194,-0.137 0.175,-0.289 0.01,-0.357 -0.155,-0.427 0.042,-0.136 0.067,-0.059 0.21,-0.155 0.293,-0.321 0.283,-0.414 0.273,-0.508 0.337,-0.314 0.401,-0.121 0.486,0.138 0.573,0.396 0.215,0.486 -0.14,0.577 -0.012,0.316 0.116,0.059 0.196,-0.016 0.275,-0.09 0.18,-0.005 0.085,0.082 -0.005,0.162 -0.096,0.243 -0.115,0.681 -0.071,0.588 -0.071,0.577 -0.061,0.506 0.109,0.394 0.166,0.594 0.187,0.392 0.191,0.125 0.192,0.045 0.191,-0.035 0.393,-0.252 0.593,-0.468 0.576,-0.288 0.838,-0.162 0.281,-0.503 0.388,-0.333 0.886,-0.495 0.481,-0.19 0.277,-0.032 0.346,0.089 0.079,0.032 0.068,0.024 0.179,0.041 0.037,0.151 -0.047,0.163 -0.191,0.134 -0.061,0.104 0.073,0.078 0.27,0.027 0.559,-0.181 0.362,-0.116 0.251,-0.046 0.101,-0.151 0.158,-0.152 0.251,-0.011 0.269,0.081 0.223,0.047 0.379,-0.043 0.2,0.132 0.28,0.249 0.126,0.155 z\"\n\t\t\t\tid=\"AF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 301.68975,414.7024 -0.09,0.116 -0.313,-0.047 -0.063,-0.145 -0.014,-0.102 0.196,-0.207 0.221,0.088 0.085,0.098 0.063,0.02 -10e-4,0.083 -0.024,0.061 -0.06,0.035 z m -0.087,-1.572 -0.042,0.077 -0.229,-0.139 -0.07,-0.261 0.007,-0.055 0.039,-0.029 0.091,0.05 0.121,0.019 0.077,0.085 0.006,0.253 z\"\n\t\t\t\tid=\"AG\"\n\t\t\t/>\n\t\t\t<path d=\"m 298.08375,411.2344 -0.446,0.148 0.018,-0.085 0.358,-0.203 0.13,0.014 z\" id=\"AI\" />\n\t\t\t<path\n\t\t\t\td=\"m 531.20475,331.4604 0.111,0.086 0.231,0.374 0.153,0.33 0.303,0.114 0.168,0.128 0.217,0.195 0.104,0.195 0.148,0.597 0.017,0.36 -0.043,0.164 -0.036,0.043 -0.135,0.584 0.032,0.297 -10e-4,0.196 -0.114,0.077 -0.076,0.123 0.123,0.484 -0.015,0.207 0.006,0.236 0.221,0.538 0.131,0.166 0.116,0.079 0.15,0.494 0.088,0.085 0.363,-0.047 0.178,0.055 0.071,0.117 0.016,0.08 -0.024,0.276 0.09,0.212 0.121,0.218 0,0.133 -0.082,0.218 -0.145,0.253 -0.192,0.098 -0.212,0.082 -0.102,0.197 -0.051,0.209 -0.095,0.155 -0.058,0.17 -0.091,0.346 -0.021,0.125 -0.143,0.127 -0.222,0.052 -0.2,0.011 -0.134,0.059 -0.069,0.118 -0.127,0.095 -0.076,0.042 0,0.105 0.092,0.219 0.105,0.178 0.003,0.142 -0.052,0.04 -0.163,-0.018 -0.034,0.052 -0.018,0.16 -0.043,0.135 -0.067,0.083 -0.116,0.09 -0.213,-0.029 -0.2,-0.136 -0.104,-0.042 -0.06,0.004 -0.016,-0.333 -0.087,-0.259 -0.316,-0.625 -1.031,-0.608 -0.243,-0.274 -0.106,-0.231 -0.107,-0.218 0.102,-0.006 0.101,0.055 0.129,0.067 0.053,-0.109 -0.056,-0.239 -0.266,-0.558 -0.02,-0.154 0.13,-0.468 0.217,-0.527 -0.014,-0.64 0.067,-0.485 -0.075,-0.315 -0.036,-0.386 0.159,-0.515 0.137,-0.127 0.084,-0.164 0.005,-0.55 -0.307,-0.258 -0.353,-0.048 0.008,-0.187 0.044,-0.297 -0.025,-0.099 0.026,-0.17 -0.086,-0.226 -0.14,-0.164 0.135,-0.289 0.198,-0.351 0.184,-0.278 0.223,-0.29 0.149,-0.278 0.159,-0.241 0.138,-0.073 0.068,0.051 0.037,0.105 -0.009,0.31 0.047,0.107 0.095,0.079 0.201,-0.039 0.222,-0.077 0.3,-0.164 z\"\n\t\t\t\tid=\"AL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 605.37075,344.8974 -0.485,-0.021 -0.414,0.156 -0.156,-0.031 -0.104,-0.277 -0.089,-0.225 -0.264,-0.579 0.071,-0.237 -0.147,-0.137 -0.354,-0.247 -0.091,-0.102 0.05,-0.141 0.035,-0.257 -0.034,-0.208 -0.096,-0.063 -0.177,-0.004 -0.215,0.052 -0.432,0.201 -0.3,-0.128 -0.173,-0.129 -0.101,-0.108 -0.225,0.09 -0.055,-0.043 -0.012,-0.268 -0.068,-0.145 -0.135,-0.169 -0.126,-0.081 -0.461,0.167 -0.277,0.057 -0.097,-0.156 -0.487,-0.514 -0.451,-0.395 -0.31,-0.163 -0.312,0.017 -0.484,0.079 -0.178,-0.033 -0.422,-0.172 -0.352,-0.205 0.048,-0.085 0.074,-0.062 -0.089,-0.267 -0.196,-0.43 0.021,-0.135 -0.062,-0.186 -0.068,-0.141 0.276,-0.337 0.126,-0.271 0.028,-0.265 -0.074,-0.275 -0.182,-0.499 -0.112,-0.145 -0.208,-0.136 -0.175,-0.222 -0.044,-0.157 0.147,-0.031 0.429,-0.004 0.416,-0.054 0.326,-0.104 0.472,-0.087 0.194,-0.078 0.227,-0.037 0.689,0.083 0.258,-0.064 0.776,-0.012 0.02,-0.033 -0.105,-0.106 10e-4,-0.04 0.462,-0.067 0.072,-0.05 0.06,0.168 0.174,0.187 0.189,0.075 0.102,0.103 0.005,0.078 -0.335,0.095 -0.023,0.047 0.022,0.046 0.1,0.023 0.47,0.234 0.268,0.005 0.141,0.071 0.07,0.14 0.224,0.19 0.179,0.184 0.011,0.063 -0.034,0.093 -0.5,0.359 -0.063,0.124 -0.008,0.131 0.219,0.389 0.323,0.424 0.466,0.322 0.643,0.349 0.008,0.216 -0.102,0.256 -0.087,0.174 -0.04,0.118 -0.078,0.049 -0.64,-0.011 -0.096,0.042 -0.042,0.05 -0.003,0.042 0.23,0.078 0.359,0.273 0.207,0.265 0.215,0.116 0.241,0.211 0.193,0.196 0.301,0.254 0.335,-0.083 0.448,0.226 0.019,0.153 -0.028,0.137 -0.282,0.149 -0.035,0.062 0,0.052 0.037,0.073 0.165,0.122 0.195,0.181 0.219,0.27 -0.098,0.081 -0.205,0.012 -0.159,-0.033 -0.056,0.055 0.003,0.088 0.208,0.205 0.041,0.149 -0.009,0.259 0.014,0.329 z m -4.117,-7.736 0.014,-0.099 -0.021,-0.089 -0.075,-0.028 -0.092,0.023 -0.007,0.099 0.028,0.094 0.093,0.042 0.06,-0.042 z m 1.484,1.519 -0.107,0.061 -0.1,-0.027 0,-0.152 0.072,-0.061 0.083,0.003 0.079,0.055 -0.027,0.121 z\"\n\t\t\t\tid=\"AM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 511.58375,475.8564 -0.043,0.045 -0.308,0.124 -0.331,0.116 -0.435,0.472 -0.22,0.204 -0.064,0.051 -0.199,0.113 -0.144,0.097 0.005,0.053 0.096,0.062 0.098,0.102 -0.01,0.771 -0.042,0.76 -0.054,0.064 -0.276,0.025 -0.367,0.053 -0.117,0.034 -0.041,-0.075 -0.123,-0.278 0.069,-0.264 0.074,-0.197 -0.083,-0.401 -0.187,-0.357 -0.198,-0.453 -0.061,-0.087 0.167,-0.146 0.251,-0.32 0.105,-0.166 0.291,-0.037 0.108,-0.116 0.077,-0.186 0.03,-0.108 0.328,-0.088 0.394,-0.157 0.218,-0.172 0.221,-0.11 0.14,-0.004 0.092,0.045 0.253,0.298 0.215,0.188 0.071,0.045 z m 30.573,17.559 0.062,0.372 0.061,0.517 0.043,0.372 0.044,0.167 0.015,0.089 -0.049,0.096 -0.04,0.223 -0.079,0.198 -0.044,0.138 0.037,0.254 -0.03,0.364 -0.031,0.385 -0.01,0.371 0.105,0.664 -0.015,0.204 -0.131,0.348 -0.099,0.264 -0.064,0.306 -0.012,0.16 0.24,0.452 -0.014,0.09 -0.184,0.028 -0.152,0.008 -0.582,0 -0.834,0 -0.834,0 -0.834,0 -0.767,0 -0.734,0 -0.647,0 0,0.446 0,0.92 0,0.921 0,0.922 0,0.924 0,0.925 0,0.926 0,0.927 0,0.929 0,0.671 0.169,0.892 0.31,0.972 0.121,0.09 0.312,0.179 0.433,0.366 0.243,0.277 0.494,0.481 0.657,0.614 0.633,0.551 0.559,0.486 -0.877,0.171 -1.247,0.242 -0.841,0.164 -1.021,0.199 -0.68,0.125 -0.847,0.155 -0.135,-0.003 -0.227,-0.107 -0.49,-0.021 -0.576,0.148 -0.457,0.04 -0.338,-0.068 -0.33,-0.129 -0.322,-0.191 -0.557,-0.07 -0.793,0.052 -0.764,-0.037 -0.736,-0.126 -0.526,-0.05 -0.317,0.027 -0.34,-0.041 -0.363,-0.109 -0.303,-0.185 -0.364,-0.39 -0.285,-0.372 -0.074,-0.053 -0.09,-0.057 -0.089,-0.017 -0.808,-0.01 -0.767,-0.009 -0.439,-10e-4 -1.074,-0.001 -1.074,-10e-4 -1.074,-0.002 -1.074,-0.001 -1.074,-0.002 -1.074,-10e-4 -1.074,-0.002 -1.074,-10e-4 -0.57,-10e-4 -0.53,0.03 -0.585,0.032 -0.084,-0.014 -0.139,-0.045 -0.095,-0.082 -0.315,-0.211 -0.274,-0.16 -0.373,-0.27 -0.241,-0.295 -0.203,-0.094 -0.359,-0.053 -0.27,-0.052 -0.22,-0.012 -0.387,0.139 -0.292,0.138 -0.208,0.133 -0.361,0.152 -0.304,0.152 -0.53,-0.02 -0.115,0.022 -0.295,-0.01 -0.278,-0.133 -0.282,0.012 -0.313,0.169 -0.448,0.066 0.104,-1.103 0.109,-0.487 0.003,-0.582 -0.064,-1.504 -0.077,-0.207 -0.052,-0.242 0.277,-0.184 0.141,-0.141 0.191,-0.249 0.136,-0.349 0.16,-0.768 0.582,-1.763 0.276,-1.723 0.35,-0.814 0.131,-0.912 0.974,-1.175 0.24,-0.721 0.504,-0.353 0.713,-0.376 0.508,-0.669 0.246,-0.463 0.28,-0.887 -0.003,-0.925 0.178,-1.233 -0.039,-0.354 -0.266,-0.49 -0.049,-0.35 -0.247,-0.344 -0.264,-0.26 -0.124,-0.464 -0.458,-0.731 -0.125,-0.487 -0.219,-0.35 -0.035,-0.431 -0.115,-0.456 -0.224,-0.45 -0.209,-0.515 0,-0.161 0.136,-0.194 0.129,-0.063 -0.043,0.098 -0.086,0.115 0.021,0.089 0.856,-0.902 0.054,-0.176 -0.029,-0.197 -0.004,-0.241 0.034,-0.28 -0.808,-1.661 -0.641,-1.542 -0.109,-0.779 -0.848,-1.023 -0.334,-0.665 -0.19,-0.466 -0.143,-0.176 0.054,-0.089 0.218,-0.023 0.486,-0.108 0.666,-0.118 0.615,-0.27 0.164,-0.12 0.326,-0.024 0.332,0.072 0.123,-0.052 0.07,-0.004 0.779,0 0.324,-0.018 0.601,0.005 0.379,0.022 0.216,0.03 0.583,0.047 0.728,-0.011 0.257,-0.024 0.954,-0.016 0.942,-0.016 0.847,-0.014 0.936,0.003 0.716,0.002 0.326,0.097 0.296,0.184 0.135,0.167 0.064,0.074 0.088,0.176 0.162,0.14 0.058,0.216 -0.047,0.293 0.023,0.353 0.094,0.412 0.197,0.432 0.298,0.454 0.13,0.36 -0.039,0.267 0.092,0.282 0.222,0.297 0.162,0.157 0.094,0.119 0.252,0.456 0.467,0.728 0.35,0.546 0.123,0.065 0.179,-0.023 0.38,-0.054 0.376,-0.011 0.269,0.112 0.108,-0.019 0.405,-0.217 0.402,-0.066 0.42,-0.09 0.219,-0.092 0.255,0 0.687,0.175 0.13,0.009 0.556,0 0.556,-0.098 0.082,-0.732 0.005,-0.145 0.134,-0.275 0.17,-0.24 0.021,-0.229 -0.01,-0.313 0.123,-0.379 0.373,-0.302 0.603,-0.143 0.343,-0.028 0.541,-0.084 0.82,-0.085 0.303,0.011 0.024,0.043 -0.174,0.524 -0.003,0.171 0.063,0.173 0.139,0.094 0.851,0.01 0.784,0.01 0.899,0.033 0.674,0.024 0.086,0.026 0.068,0.039 0.1,0.26 -0.022,0.508 -0.15,0.742 0.058,0.694 0.267,0.646 0.027,0.993 -0.094,0.593 -0.119,0.748 -0.046,0.849 0.122,0.355 0.258,0.371 0.394,0.389 0.305,0.503 0.216,0.619 0.078,0.39 -0.058,0.161 0.004,0.278 0.067,0.396 -0.075,0.263 -0.216,0.129 -0.072,0.178 0.109,0.342 0.027,0.311 0.085,0.119 0.062,0.086 0.102,0.013 0.219,-0.111 0.262,-0.207 0.21,-0.087 0.296,0.011 0.416,0.059 0.734,0.021 0.226,-0.037 0.683,-0.279 0.179,-0.021 0.27,0.026 0.383,0.083 0.386,0.017 0.188,-0.086 0.017,-0.113 0.06,-0.147 0.104,-0.055 z\"\n\t\t\t\tid=\"AO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 299.06575,526.5414 0.071,0.083 -0.001,0.087 0.237,0.178 0.474,0.271 0.444,0.523 0.414,0.777 0.389,0.576 0.363,0.372 0.334,0.264 0.305,0.154 0.163,0.125 0.021,0.096 0.285,0.199 0.549,0.303 0.347,0.303 0.146,0.302 0.542,0.313 0.939,0.322 0.683,0.154 0.426,-0.014 0.611,0.257 0.796,0.53 0.486,0.368 0.175,0.205 0.521,0.333 1.3,0.689 0.573,0.173 0.272,0.158 0.161,0.2 0.159,0.062 0.157,-0.078 0.326,0.072 0.496,0.222 0.388,0.269 0.499,0.593 0.159,0.237 0.067,0.212 -0.024,0.187 -0.152,0.2 -0.28,0.212 -0.083,0.093 -0.006,0.089 -0.071,0.179 -0.232,0.382 -0.059,0.178 -0.013,0.132 -0.147,0.144 -0.391,0.266 -0.081,0.129 -0.02,0.139 -0.049,0.083 -0.053,0.035 -0.075,0.139 -0.061,0.231 -0.006,0.296 0.048,0.362 -0.01,0.117 -0.086,0.062 -0.049,0.084 -0.017,0.169 -0.074,0.124 -0.129,0.079 -0.048,0.09 0.034,0.103 -0.095,0.101 -0.224,0.1 -0.137,0.146 -0.051,0.191 -0.125,0.171 -0.199,0.151 -0.065,0.201 0.104,0.372 1.226,-0.129 0.999,0.136 1.182,0.358 0.784,0.125 0.387,-0.108 0.287,0.015 0.187,0.139 0.251,0.028 0.315,-0.082 0.261,0.063 0.206,0.208 0.187,-0.052 0.168,-0.31 0.193,-0.227 0.218,-0.142 0.271,-0.043 0.325,0.057 0.259,0.114 0.194,0.171 0.211,-0.005 0.229,-0.181 0.11,-0.217 -0.01,-0.253 0.091,-0.181 0.191,-0.109 0.129,-0.147 0.067,-0.186 0.227,-0.113 0.387,-0.041 0.203,-0.091 0.018,-0.141 0.114,-0.13 0.211,-0.119 0.145,-0.148 0.078,-0.177 0.127,-0.112 0.178,-0.045 0.198,-0.373 0.217,-0.698 0.129,-0.942 0.045,-1.333 0.219,10e-4 0.102,0.099 0.162,0.051 0.17,-0.112 0.145,-0.052 0.229,-0.004 0.124,-0.126 0.145,-0.02 0.099,0.068 0.096,0.083 0.204,0.019 0.162,0.216 0.178,0.066 0.076,0.248 0.115,0.653 0.214,0.386 0.212,0.44 0.008,0.196 -0.119,0.198 -0.02,0.285 -0.074,0.697 -0.025,0.257 0.074,0.175 0.027,0.245 -0.115,0.299 -0.224,0.448 -0.217,0.121 -0.056,0.005 -0.294,0.259 -0.207,0.097 -0.12,-0.065 -0.137,0.112 -0.154,0.291 -0.188,0.13 -0.34,0.072 -0.102,0.034 -0.198,-0.01 -0.17,0.072 -0.142,0.155 -0.151,0.058 -0.161,-0.039 -0.146,0.057 -0.131,0.153 -0.076,0.166 -0.021,0.179 -0.128,0.122 -0.236,0.065 -0.082,0.09 0.015,0.125 -0.106,0.097 -0.399,0.102 -0.289,0.18 -0.178,0.259 -0.188,0.163 -0.296,0.1 -0.402,0.264 -0.058,0.163 0.153,0.15 0.055,0.134 -0.043,0.117 -0.125,0.016 -0.208,-0.085 -0.148,-0.018 -0.088,0.05 -0.042,0.094 0.005,0.138 -0.074,0.094 -0.154,0.05 -0.097,0.114 -0.041,0.179 -0.193,0.226 -0.344,0.272 -0.271,0.367 -0.199,0.462 -0.232,0.304 -0.266,0.146 -0.183,0.208 -0.1,0.27 -0.284,0.418 -0.466,0.568 -0.423,0.39 -0.38,0.212 -0.213,0.24 -0.047,0.267 -0.246,0.305 -0.445,0.342 -0.126,0.154 -0.104,0.126 -0.015,0.22 -0.173,0.289 -0.333,0.359 -0.116,0.311 0.151,0.393 0.022,0.477 -0.066,0.191 -0.146,0.065 -0.033,0.123 0.079,0.182 0.004,0.239 -0.07,0.297 -0.154,0.34 -0.239,0.383 -0.058,0.256 0.124,0.129 0.061,0.137 -0.002,0.146 -0.051,0.211 -0.099,0.277 -0.15,0.206 -0.201,0.134 -0.061,0.17 0.081,0.205 0.011,0.214 -0.058,0.223 0.034,0.217 0.126,0.211 -0.009,0.241 -0.219,0.495 -0.053,0.306 0.137,1.313 -0.083,0.184 -0.139,0.212 -0.165,0.016 -0.188,-0.037 -0.136,0.132 -0.085,0.583 -0.259,1.264 0.046,0.301 0.208,0.489 0.076,0.312 0.058,0.235 0.046,0.446 -0.121,0.201 -0.112,0.035 -0.141,0.113 0.167,0.545 0.133,0.251 0.38,0.516 1.459,0.718 0.605,0.424 0.685,0.579 0.374,0.596 0.033,0.492 -0.547,0.737 -0.061,0.62 0.112,0.437 0.198,0.406 0.53,0.528 0.39,0.194 0.527,-0.021 0.09,0.148 0.054,0.13 0.083,1.075 -0.01,0.405 -0.155,0.372 -1.012,1.714 -0.864,1.052 -0.313,0.583 -0.111,0.625 -0.277,0.298 -1.498,0.948 -2.324,0.849 -1.878,0.442 -0.427,0.149 -3.019,0.487 -0.584,0.068 -0.76,-0.043 -0.617,0.065 -0.688,-0.133 -0.614,-0.153 -0.344,-0.38 -0.408,-0.047 -0.111,0.19 0.199,0.485 -0.097,0.585 0.121,0.334 0.241,0.067 0.232,0.173 0.205,0.232 -0.353,0.024 0.137,0.185 0.151,0.108 -0.017,0.387 -0.137,0.934 -0.344,0.2 -0.092,0.054 -0.104,0.202 -0.219,0.898 -0.07,0.584 0.094,0.377 0.413,0.794 -0.156,0.517 -0.261,0.281 -1.131,0.579 -0.452,0.232 -0.712,0.159 -1.147,0.027 -0.424,-0.036 -0.983,-0.528 -0.73,-0.316 -0.668,-0.251 -0.65,-0.15 0.093,-0.076 0.043,-0.136 -0.183,-0.076 -0.133,-0.017 -0.428,0.273 -0.18,0.279 -0.052,0.245 -0.009,0.588 0.076,0.495 0.308,1.223 0.032,0.667 -0.146,0.844 0.204,0.498 0.248,0.225 0.557,0.223 0.216,0.152 0.238,-0.024 0.073,0.059 -0.035,0.109 -0.14,0.215 0.009,0.227 0.422,0.067 0.438,-0.046 0.459,-0.101 0.108,-0.158 0.003,-0.33 -0.538,-0.058 0.068,-0.123 0.408,-0.134 0.534,-0.219 0.273,-0.041 0.186,0.147 0.125,0.135 0.154,0.355 0.096,0.469 0.004,0.565 -0.064,0.533 -0.076,0.189 -0.135,0.227 -0.96,0.29 -0.269,-0.076 -0.25,-0.403 -0.079,-0.417 -0.214,-0.281 -0.459,-0.223 -0.457,0.068 -0.453,0.387 -0.445,0.125 -0.158,0.353 1.116,0.572 0.527,0.16 0.172,-0.006 0.171,0.075 -0.159,0.213 -0.159,0.132 -0.794,0.292 -0.35,0.204 -0.409,0.402 -0.573,0.879 -0.176,0.192 -0.088,0.224 -0.059,0.609 0.186,1.015 -0.196,0.426 0.121,0.474 -0.068,0.317 -0.2,0.457 -0.804,0.723 -0.143,0.53 0.279,0.313 -0.019,0.274 -0.093,0.249 -0.334,-0.003 -1.214,-0.167 -0.442,0.272 -0.41,0.333 -0.112,0.159 -0.145,0.1 -0.835,0.178 -0.165,0.118 -0.888,1.275 -0.38,0.794 -0.459,0.782 -0.12,0.332 -0.026,0.461 0.064,0.416 0.064,0.307 0.16,0.395 0.336,0.451 1.711,1.847 0.355,0.162 1.83,0.199 0.406,0.259 0.237,0.412 0.087,0.364 -0.105,0.924 -0.109,0.29 -0.202,0.264 -0.433,0.34 -0.518,0.181 0.148,0.129 0.21,-0.019 0.458,-0.11 0.198,0.11 0.15,0.367 -0.287,0.148 -0.087,0.179 -0.207,0.271 -1.056,1.084 -0.569,0.325 -0.523,0.437 -0.702,0.443 -0.275,0.255 -0.372,0.536 -0.569,0.585 -0.614,1.261 -0.024,0.245 0.089,0.164 -0.341,2.231 -0.119,0.264 -0.247,0.282 -0.65,0.466 -0.313,0.058 -0.414,-0.27 -0.233,-0.282 -0.229,-0.482 -0.276,-0.496 -0.014,0.177 0.096,0.302 -0.065,0.316 -0.706,0.144 -0.187,0.148 0.637,-0.066 0.434,0.096 0.184,0.115 0.165,0.241 0.146,0.29 -0.122,0.161 -0.348,0.133 -0.45,0.245 -0.532,0.443 -0.295,0.514 -0.127,0.37 -0.144,0.748 -0.038,0.496 -0.225,0.382 -0.347,0.345 0.02,0.079 0.235,-0.177 0.188,-0.056 0.162,0.46 0.218,0.923 0.101,0.642 -0.016,0.19 -0.065,0.262 -0.448,0.063 -0.4,-0.008 -0.294,0.112 0.158,0.116 0.27,-0.041 0.373,0.276 0.414,-0.118 0.189,0.185 0.136,0.169 0.634,1.354 0.554,0.841 0.28,0.5 -0.139,0.228 -0.05,-0.303 -0.361,-0.079 -0.352,-0.081 -0.587,-0.217 -0.791,-0.328 -0.792,0 -0.629,-0.277 -0.695,-0.306 -1.467,-0.027 -1.292,-0.019 -1.324,-0.019 -0.847,-0.013 -0.567,-0.008 -0.147,-0.115 0.05,-0.38 -0.21,-0.28 -0.305,-0.338 -0.371,-0.238 -0.184,-0.319 -0.206,-0.358 0.116,-0.317 0.178,-0.769 0.003,-0.338 -0.161,-0.236 -0.049,-0.335 0.049,-0.157 0.145,-0.119 0.087,-0.547 -0.068,-0.535 -0.111,-0.477 -0.147,-0.21 -0.189,-0.1 -0.14,-0.019 -0.31,0.178 -0.514,-0.045 -0.175,0.068 -0.251,0.191 -0.356,0.282 -0.198,-0.098 -0.061,-0.302 -0.132,-0.261 -0.084,-0.23 -0.063,-0.379 -0.105,-0.485 -0.21,-0.573 -0.322,-0.462 -0.018,-0.415 -0.06,-0.52 0.164,-0.505 -0.096,-0.418 -0.201,-0.497 0.062,-0.514 0.198,-0.284 0.062,-0.36 0.916,-0.057 -0.038,-0.483 0.152,-0.39 0.171,-0.353 0.146,-0.16 0.326,-0.14 0.384,-0.203 0.217,-0.232 0.104,-0.208 0.063,-0.268 0.017,-0.285 -0.063,-0.605 0.072,-0.186 0.238,-0.245 0.402,-0.217 0.173,-0.575 -0.099,-0.499 -0.223,-0.395 -0.284,-0.178 -0.025,-0.405 0.128,-0.384 0.167,-0.411 0.199,-0.471 -0.012,-0.329 0.177,-0.192 0.504,-0.428 0.173,-0.418 0.177,-0.113 0.207,-0.05 0.012,-0.236 -0.151,-0.234 -0.024,-0.293 0.018,-0.324 0.046,-0.433 0.235,-0.162 0.348,-0.35 0.093,-0.222 0.012,-0.297 -0.101,-0.612 -0.086,-0.438 -0.044,-0.161 -0.158,-0.296 -0.117,-0.187 0.187,-0.234 0.35,-0.245 0.148,-0.355 -0.136,-0.301 -0.198,-0.159 -0.062,-0.46 0.074,-0.583 0.148,-0.176 0.52,-0.088 0.049,-0.299 0.396,-0.422 -0.012,-0.403 -0.252,-0.247 -0.247,-0.398 -0.182,-0.351 -0.606,-0.192 -0.644,-0.104 -0.087,-0.331 0.025,-0.191 0.299,0.077 0.489,-0.067 0.368,-0.015 0.256,-0.034 0.295,-0.048 0.272,0.139 0.272,-0.087 0.111,-0.521 0.173,-0.277 0.025,-0.26 -0.173,-0.207 -0.317,-0.064 -1.387,-0.164 -0.042,-0.207 0.012,-0.347 0.052,-0.354 0,-0.174 0.126,-0.153 0.144,-0.32 0.101,-0.213 -0.101,-0.276 -0.221,-0.407 0.161,-0.188 0.013,-0.224 -0.05,-0.219 -0.23,-0.243 -0.203,-0.335 0,-0.356 0.238,-0.095 0.158,-0.109 0.037,-0.22 -0.087,-0.271 -0.329,-0.083 -0.438,-0.166 -0.134,-0.139 -0.124,-0.29 0.092,-0.813 -0.046,-0.489 -0.039,-0.27 0.107,-0.208 0.146,-0.187 -0.069,-0.435 -0.13,-0.228 0.046,-0.175 0.123,-0.176 0.107,-0.217 0.092,-0.051 0.138,0.124 0.233,-0.073 0.281,-0.175 0.03,-0.206 -0.056,-0.294 -0.209,-0.738 -0.188,-0.455 0.039,-0.164 0.074,-0.172 -0.059,-0.624 0.019,-0.376 0.014,-1.105 0.021,-0.376 -0.192,-0.384 0.026,-0.359 0.135,-0.262 0.127,-0.354 0.095,-0.313 0.1,-0.141 0.169,-0.07 0.039,-0.171 -0.077,-0.13 -0.218,-0.203 -0.05,-0.248 0.046,-0.19 0.107,-0.11 0.166,0.001 0.125,-0.271 0.036,-0.334 0.026,-0.155 -0.096,-0.195 -0.069,-0.459 -0.065,-0.26 0.077,-0.109 0.107,-0.04 0.189,0.062 0.133,-0.032 0.023,-0.139 0.015,-0.149 0.051,-0.101 0.119,-0.336 0.127,-0.416 0.03,-0.293 -0.045,-0.793 0.067,-0.182 0.136,-0.166 0.189,-0.156 0.249,-0.129 0.309,-0.186 0.38,-0.068 0.154,-0.206 0.107,-0.274 0.03,-0.225 -0.146,-0.156 -0.192,-0.186 -0.091,-0.467 -0.049,-0.431 -0.028,-0.542 -0.191,-0.465 -0.2,-0.522 -0.054,-0.464 0.067,-0.253 0.079,-0.402 -0.084,-0.183 -0.1,-0.327 0.104,-0.256 0.126,-0.397 -0.015,-0.201 -0.1,-0.479 -0.092,-0.268 0.092,-0.286 0.146,-0.267 0.115,-0.143 -0.019,-0.23 0.05,-0.189 0.218,-0.126 0.204,-0.234 0.146,-0.028 0.176,0 0.115,-0.066 0.046,-0.18 0.031,-0.199 0.281,-0.247 0.165,-0.227 0.299,-0.047 0.146,-0.246 0.003,-0.315 -0.034,-0.318 0.1,-0.367 -0.111,-0.56 0.011,-0.296 -0.115,-0.244 0.023,-0.263 -0.062,-0.168 -0.174,-0.063 -0.064,-0.209 0.084,-0.103 0.164,-0.079 0.206,-0.16 0.154,-0.768 0.073,-0.228 0.071,-0.273 -0.009,-0.142 0.099,-0.205 0.124,-0.311 0.195,-0.3 0.111,-0.206 0.108,-0.277 0.031,-0.167 0.138,-0.083 0.159,-0.021 0.187,-0.052 0.077,-0.102 -0.014,-0.148 -0.012,-0.327 -0.056,-0.519 -0.036,-0.667 0.033,-0.438 0.123,-0.439 0.115,-0.238 -0.031,-0.183 -0.031,-0.201 -0.215,-0.11 -0.204,0.095 -0.143,-0.026 -0.183,-0.233 -0.054,-0.247 0.031,-0.337 0.143,-0.21 0.056,-0.264 -0.084,-0.082 -0.18,-0.175 -0.17,-0.602 0.021,-0.512 -0.169,-0.136 -0.079,-0.399 -0.174,-0.143 -0.069,-0.298 -0.054,-0.307 0.023,-0.135 0.182,-0.038 0.103,-0.242 -0.077,-0.135 -0.138,-0.117 -0.176,0.009 -0.158,-0.138 -0.211,-0.577 -0.167,-0.318 0.053,-0.463 0.033,-0.361 0.072,-0.309 0.026,-0.243 0.13,-0.116 0.123,0.053 0.115,-0.027 0.106,-0.197 0.116,-0.124 -0.007,-0.098 -0.069,-0.106 -0.033,-0.187 0.081,-0.223 0.14,-0.509 0.212,-0.56 0.091,-0.209 -0.023,-0.177 0.046,-0.08 0.144,0.089 0.409,-0.098 0.138,-0.248 0.054,-0.221 0.123,-0.124 -0.054,-0.176 -0.169,-0.053 -0.102,-0.083 0.041,-0.2 0.06,-0.459 -0.01,-0.337 -0.154,-0.719 -0.124,-0.71 0.087,-0.237 0.268,-0.324 0.203,-0.146 0.037,-0.185 0.201,-0.834 0.023,-0.455 0.132,-0.251 0.087,-0.472 0.364,-0.406 0.107,-0.269 0.146,-0.026 0.077,-0.087 0.193,-0.299 0.251,-0.307 0.216,-0.155 0.054,-0.242 0.103,-0.33 0.214,-0.547 0.12,-0.381 0.161,-0.137 0.188,-0.498 0.081,-0.292 0.215,-0.12 0.168,-0.034 0.161,0.137 0.169,-0.026 0.154,-0.171 0.37,-0.117 0.167,-0.063 0.077,-0.171 0,-0.3 -0.154,-0.222 -0.313,-0.425 -0.27,-0.475 -0.029,-0.149 -0.002,-0.163 0.046,-0.206 0.129,-0.233 0.324,-0.384 -0.035,-0.274 -0.236,-1.007 -0.087,-0.277 -0.164,-0.513 0.023,-0.203 0.144,-0.566 0.125,-0.228 0.184,-0.042 0.1,-0.076 0.031,-0.101 -0.123,-0.126 -0.054,-0.16 -0.054,-0.228 -0.17,-0.08 -0.098,-0.189 0,-0.277 0.153,-0.361 0.169,-0.101 0.069,-0.16 0.181,-0.146 0.165,-0.113 0.138,-0.209 0.569,-0.256 0.452,-0.199 0.882,-0.38 0.605,-0.261 0.058,-0.18 0.046,-0.123 0.28,-0.917 0.363,-1.183 0.227,-0.74 -0.522,-0.544 0.092,-0.145 0.299,-0.372 0.062,-0.298 0.119,-0.128 0.536,-0.303 0.092,-0.201 0.047,-0.223 0.109,-0.16 0.204,-0.033 0.371,-0.142 0.398,-0.135 0.12,-0.183 0.113,-0.318 0.097,-0.352 0.077,-0.083 0.128,0.009 0.213,0.088 0.112,0.133 0.557,0.422 0.25,0.241 0.238,0.032 0.47,-0.047 0.095,0.011 1.199,0.014 0.183,0.021 0.419,0.103 0.237,0.083 0.165,0.043 0.265,0.13 0.23,0.431 0.129,0.343 0.09,0.302 0.201,0.531 0.137,0.202 0.049,-0.098 0.117,-0.581 0.161,-0.338 0.217,-0.379 0.437,-0.884 0.153,-0.132 0.17,-0.064 0.119,-0.005 0.121,0.066 0.165,0 0.117,-0.07 1.146,-0.011 1.189,-0.01 0.025,0.005 0.054,0.152 0.198,0.332 0.222,0.176 0.044,0.053 z m 2.176,55.359 0.028,0.228 -0.146,-0.027 -0.347,-0.218 -0.117,-0.204 -0.027,-0.086 0.354,0.093 0.167,0.085 0.088,0.129 z m -19.021,65.026 0.016,-1.096 0.022,-1.464 0.004,-1.297 0.004,-1.256 0.004,-1.292 0.004,-1.283 0.005,-1.363 0.005,-1.375 0.165,0.195 0.652,0.95 0.17,0.39 0.107,0.456 -0.261,-0.29 -0.275,0.166 -0.136,0.272 -0.116,0.296 0,0.209 0.09,0.183 0.268,0.159 0.651,0.054 0.048,0.06 0.38,1.151 0.191,0.258 0.222,0.205 0.514,0.592 0.493,0.64 0.585,0.609 0.63,0.469 0.574,0.356 0.547,0.437 0.584,0.612 0.635,0.446 0.682,0.315 0.689,0.264 1.061,-0.103 0.329,0.028 0.205,0.194 -0.206,0.537 -0.263,0.433 -0.351,0.179 -0.371,0.066 -0.335,-0.009 -0.334,-0.08 -0.314,0.045 -0.3,0.183 -0.313,0.091 -0.322,0.012 -0.314,0.154 -0.315,0.111 -0.327,-0.092 -0.85,-0.432 -0.552,-0.103 -1.87,-0.171 -0.6,-0.099 -0.598,-0.149 -0.313,-0.007 -0.447,0.097 -0.358,-0.012 -0.095,0.099 z m 11.518,-0.667 0.31,0.112 0.612,-0.085 0.323,-10e-4 0.142,0.04 0.063,0.06 0.422,-0.094 0.187,0.011 -0.048,0.208 -0.389,0.207 -0.16,-0.088 -0.827,0.019 -0.366,0.214 -0.156,-0.002 -0.361,0.305 -0.264,-0.193 -0.073,-0.177 0.191,-0.252 0.18,-0.005 0.123,-0.102 0.091,-0.177 z\"\n\t\t\t\tid=\"AR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 1006.0897,503.3594 -0.121,0.025 -0.144,-0.137 0.28,-0.104 0.089,-0.054 0.34,0.027 -0.203,0.045 z\"\n\t\t\t\tid=\"AS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 522.47375,307.2434 -0.011,0.043 -0.016,0.159 -0.109,0.201 -0.118,0.262 0.008,0.23 0.301,0.794 0.268,0.481 0.05,0.183 0.172,0.141 -0.163,0.177 -0.032,0.262 -0.106,0.117 -0.028,0.149 0.045,0.136 -10e-4,0.17 0.059,0.233 -0.262,0.051 -0.311,-0.008 -0.111,0.014 -0.104,0.064 -0.107,-0.032 -0.282,-0.219 -0.158,-0.049 -0.112,0.013 -0.084,0.096 -0.145,0.122 -0.135,0.086 0.03,0.075 0.583,0.197 0.103,0.302 -0.112,0.246 -0.038,0.121 -0.137,0.094 -0.167,0.083 -0.202,0.021 -0.024,0.133 0.079,0.389 -0.064,0.084 -0.064,0.121 0.06,0.319 0.125,0.023 0.028,0.072 -0.022,0.13 -0.022,0.137 -0.044,0.145 -0.022,0.065 -0.083,0.04 -0.258,-0.021 -0.223,0.124 -0.448,0.444 -0.156,0.076 -0.17,0.178 0.01,0.389 -0.023,0.036 -0.041,0.08 -0.535,-0.138 -0.018,0.003 -0.359,0.05 -0.245,0.178 -0.297,0.103 -0.624,-0.055 -0.607,0.069 -0.144,0.052 -0.157,0.03 -0.148,0.104 -0.085,0.146 -0.151,0.184 -0.215,0.145 -0.233,0.112 -0.056,0.093 -0.076,0.054 -0.131,-0.07 -0.105,0.004 -0.129,-0.048 -0.429,-0.052 -0.47,-0.086 -0.225,-0.082 -0.254,-0.066 -0.274,-0.053 -0.245,-0.012 -0.124,-0.025 -0.589,-0.143 -0.389,-0.01 -0.513,-0.06 -1.019,-0.216 -0.297,-0.088 -0.283,-0.027 -0.336,-0.075 -0.255,-0.123 -0.163,-0.234 -0.175,-0.31 -0.319,-0.407 -0.066,-0.203 0.098,-0.178 0.1,-0.135 -0.011,-0.057 -0.078,-0.03 -0.561,0.174 -0.544,0.22 -0.214,0.006 -0.207,-0.048 -0.276,-0.004 -0.264,0.059 -0.53,0.03 -0.31,0.162 -0.198,0.315 -0.107,0.254 -0.09,0.082 -0.185,0.031 -0.276,-0.024 -0.194,-0.073 -0.198,-0.217 -0.307,-0.031 -0.282,-0.005 -0.075,-0.04 0.005,-0.142 -0.111,-0.266 -0.184,-0.083 -0.476,0.501 -0.13,0.045 -0.383,-0.139 -0.335,-0.214 -0.036,-0.157 -0.055,-0.129 -0.281,-0.122 -0.351,-0.083 -0.112,0 0.044,-0.076 0.041,-0.129 -0.026,-0.102 -0.082,-0.107 -0.045,-0.113 -0.014,-0.11 -0.025,-0.09 -0.015,-0.085 -0.026,-0.066 0.229,-0.5 0.047,-0.311 -0.2,-0.183 -0.085,-0.054 0.07,-0.041 0.285,0.034 0.181,-0.103 0.095,-0.103 0.253,0.097 0.372,0.194 0.175,0.132 0.072,0.101 0.041,0.085 -0.022,0.146 0.084,0.057 0.175,0.021 0.117,0.045 -0.041,0.192 -0.008,0.157 0.161,-0.022 0.203,-0.12 0.158,-0.217 0.098,-0.211 0.074,-0.514 0.026,-0.043 0.122,0.04 0.493,-0.022 0.233,0.096 0.369,0.016 -0.007,0.08 0.065,0.126 0.164,0.181 0.08,0.118 0.171,0.021 0.265,-0.065 0.154,-0.068 0.059,0.048 0.241,-0.047 0.214,-0.146 0.053,-0.111 0.216,-0.079 0.292,-0.181 0.401,-0.139 1.315,-0.15 0.051,-0.113 -0.019,-0.259 0.035,-0.038 0.165,0.064 0.266,0.061 0.205,0.091 0.131,0.12 0.123,0.005 0.19,-0.084 0.257,-0.054 0.24,0.125 0.07,0.134 -0.042,0.069 0.004,0.109 0.075,0.091 0.195,0.148 0.25,0.127 0.13,-0.01 0.048,-0.123 0.046,-0.295 0.017,-0.316 -0.057,-0.181 -0.135,-0.044 -0.161,-0.015 -0.086,-0.038 0.031,-0.099 0.128,-0.258 -10e-4,-0.345 -0.291,-0.394 -0.253,-0.381 10e-4,-0.13 0.152,-0.226 0.233,-0.18 0.519,-0.3 0.163,-0.062 0.21,-0.05 0.302,-0.124 0.145,-0.127 0.098,-0.138 0.142,-0.719 0.033,-0.031 0.042,-0.042 0.529,0.249 0.047,-0.042 0.09,-0.04 0.172,-0.191 0.038,-0.144 -0.004,-0.275 0.016,-0.259 0.033,-0.083 0.079,0.031 0.228,0.134 0.181,0.152 0.169,0.381 0.395,0.101 0.499,0.01 0.178,-0.17 0.162,-0.039 0.183,0.052 0.386,0.059 0.043,-0.307 0.222,-0.321 0.101,-0.112 0.283,0.011 0.069,-0.24 0.07,-0.665 0.059,-0.073 0.206,0.014 0.205,0.121 0.061,0.099 0.107,-0.008 0.149,-0.068 0.163,-0.043 0.259,0.071 0.551,0.302 0.285,0.111 0.18,-0.021 0.169,0.004 0.651,0.466 0.455,0.065 0.415,0.002 0.134,-0.14 0.176,-0.119 0.185,0.016 0.161,0.061 0.314,0.202 0.145,0.052 0.193,0.033 0.141,0.045 0.125,0.35 z\"\n\t\t\t\tid=\"AT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 840.87475,494.6464 -0.102,-0.256 0.045,-0.064 0.052,-0.034 0.066,0.008 0.26,0.274 0.113,0.075 0.166,0.199 0.375,0.024 0.45,-0.214 0.21,0.087 0.1,-0.016 0.33,-0.203 0.215,-0.058 0.144,-0.15 0.146,0.162 0.326,0.188 0.103,0.197 0.138,0.093 0.046,0.062 -0.199,0.207 -0.025,0.223 -0.213,-0.015 -0.255,0.366 -0.957,0.614 -0.859,-0.524 -0.373,-0.354 -0.25,-0.49 -0.052,-0.401 z m 18.467,12.683 0.032,0.145 0.152,0.141 0.12,-0.134 -0.063,-0.116 -0.019,-0.218 -0.154,-0.197 -0.066,0.167 -0.063,0.039 -0.059,0.133 0.12,0.04 z m 6.327,2.884 0.123,0.002 0.2,-0.066 0.104,-0.14 0.109,0.036 0.217,-0.256 0.146,-0.126 0.388,-0.042 -0.262,-0.325 -0.047,-0.023 -0.362,0.126 -0.466,0.083 -0.18,0.175 -0.186,0.287 -0.042,0.256 0.033,0.081 0.225,-0.068 z m 8.218,-18.834 0.068,-0.195 -0.121,-0.095 -0.144,0.199 0.124,0.168 0.073,-0.077 z m -15.629,3.476 0.401,-0.523 0.109,-0.518 -0.137,0.035 -0.013,0.228 -0.047,0.153 -0.063,0.055 -0.109,0.097 -0.25,0.416 -0.107,0.103 0.014,0.128 0.202,-0.174 z m -11.52,-0.611 0.224,0.439 0.056,-0.044 0.101,-0.38 -0.091,-0.178 -0.01,-0.309 -0.041,-0.082 -0.115,0.169 -0.151,0.025 0.091,0.224 -0.064,0.136 z m 10.904,1.193 0.256,-0.21 0.025,-0.123 -0.085,0.06 -0.511,0.254 -0.244,0.286 0.444,-0.212 0.115,-0.055 z m 1.312,11.606 0.045,-0.021 0.077,-0.09 -0.037,-0.25 -0.088,0.12 0.003,0.241 z m 14.83,-14.284 -0.015,0.079 0.032,0.18 0.152,0.085 0.234,-0.163 -0.216,-0.32 -0.187,0.139 z m -15.795,14.156 0.032,0.128 0.047,0.015 0.168,-0.012 0.061,-0.244 -0.074,-0.03 -0.178,0.027 -0.056,0.116 z m 1.074,-3.999 -0.276,-0.113 -0.104,-0.123 -0.013,-0.122 0.12,-0.365 0.075,-0.11 0.079,-0.031 0.176,-0.2 -0.042,-0.116 -0.057,-0.066 -0.071,-0.037 -0.114,0.263 -0.131,0.008 -0.121,-0.119 -0.053,-0.223 0.017,-0.128 -0.13,-0.016 -0.204,0.13 -0.138,0.208 -0.307,0.205 -0.037,0.42 0.046,0.331 -0.1,0.142 -0.159,0.104 0.078,0.049 0.272,0.016 0.531,0.132 0.318,-0.021 0.368,0.057 0.104,-0.135 0.055,-0.178 -0.047,-0.015 -0.135,0.053 z m 40.28,28.299 0.065,-0.041 0.097,-0.128 -0.061,-0.158 -0.128,-0.224 0.032,-0.198 -0.079,-0.05 -0.088,0.009 -0.096,-0.077 -0.243,-0.092 -0.075,0.212 0.424,0.641 0.152,0.106 z m 5.091,6.157 0.071,-0.085 0.018,-0.212 0.162,-0.525 0.586,-1.388 0.025,-0.263 -0.172,-0.192 -0.045,-0.544 -0.07,-0.029 -0.095,0.033 -0.119,0.078 -0.104,0.154 0.12,0.055 0.156,0.276 -0.041,0.256 -0.107,0.2 -0.424,0.377 0.063,0.337 -0.026,0.161 -0.146,0.291 -0.063,0.318 0.085,0.55 0.126,0.152 z m 1.035,4.845 0.061,-0.047 -0.045,-0.36 0.113,-0.513 -0.097,-0.025 -0.147,0.061 -0.042,0.28 0.032,0.303 0.125,0.301 z m -0.056,0.55 -0.014,0.502 0.086,0.13 0.073,0.017 0.242,-0.867 -0.048,-0.044 -0.242,-0.054 -0.097,0.316 z m -8.094,-15.959 0.09,-0.047 -0.076,-0.237 -0.094,-0.053 -0.01,0.172 -0.063,0.121 0.072,0.051 0.081,-0.007 z m -1.651,-0.39 -10e-4,-0.132 -0.044,-0.303 -0.104,0.076 -0.017,0.23 0.067,0.22 0.099,-0.091 z m -10.7,-11.602 0.211,0.207 0.125,0.258 0.177,0.1 0.079,-0.106 0.042,-0.143 -0.121,-0.217 -0.058,-0.279 -0.082,-0.016 -0.051,0.045 -0.124,0.041 -0.247,-0.01 0.049,0.12 z m -10.767,-23.153 0.167,-0.176 -0.112,-0.147 -0.225,0.026 -0.066,0.141 0.059,0.103 0.177,0.053 z m 18.681,28.641 0.058,-0.045 0.033,-0.269 -0.103,0.073 -0.07,0.098 -0.055,0.124 0.074,0.032 0.063,-0.013 z m 0.145,0.451 0.091,0.002 0.067,-0.033 0.004,-0.042 -0.114,-0.167 -0.066,-0.202 -0.118,0.387 0.136,0.055 z m -26.741,-9.579 -0.143,0.121 0.037,0.12 0.105,-0.05 0.313,-0.059 -0.03,-0.153 -0.188,-0.15 -0.094,0.171 z m 16.916,67.796 -0.169,-0.145 -0.368,0.017 -0.026,0.079 -0.016,0.177 0.156,0.108 0.423,-0.236 z m 7.889,5.881 -0.077,-0.069 -0.258,-0.103 -0.499,-0.659 -0.188,-0.115 -0.264,0.384 -0.202,0.141 0.127,0.146 0.18,-0.018 0.083,0.24 -0.043,0.157 0.376,0.575 0.063,0.149 0.075,0.103 0.09,0.078 0.294,-0.104 0.25,-0.224 0.039,0.004 0.027,-0.106 -0.203,-0.165 0.109,-0.125 0.021,-0.289 z m -0.17,1.939 -0.052,-0.037 -0.071,-0.007 -0.213,0.067 0.027,0.083 0.171,0.179 0.138,-0.285 z m -8.724,-7.203 0.399,-0.028 0.236,0.133 -0.017,-0.067 -0.098,-0.169 -0.074,-0.066 -0.196,-0.048 -0.25,0.245 z m -0.966,7.172 0.018,-0.244 -0.021,-0.02 -0.09,0.13 -0.115,0.055 0.105,0.383 0.103,-0.304 z m -24.205,-85.169 -0.071,0.047 -0.034,0.079 0.002,0.104 0.255,0.055 0.066,-0.032 0.106,-0.096 -0.05,-0.243 -0.118,-0.12 -0.156,0.206 z m 63.812,143.65 -0.171,0.957 0.026,0.22 0.094,-0.191 0.188,-0.652 0.037,-0.495 -0.174,0.161 z m -29.666,-59.215 -0.36,0.187 -0.391,-0.003 -0.136,0.087 0.027,0.086 0.231,0.174 0.313,0.022 0.296,-0.084 0.094,0.23 0.144,-0.039 0.197,-0.199 -0.15,-0.24 -0.265,-0.221 z m 0.041,6.706 -0.036,-0.141 -0.074,-0.127 0,-0.135 0.039,-0.288 -0.078,-0.42 0.025,-0.635 -0.027,-0.341 0.008,-0.336 0.063,-0.43 -0.017,-0.434 -0.041,-0.217 -0.018,-0.22 0.021,-0.624 -0.218,-0.341 -0.512,-0.273 -0.181,-0.005 -0.269,0.344 -0.155,-0.003 -0.55,-0.1 -0.119,0.114 -0.221,0.328 -0.129,0.139 -0.188,-0.06 -0.189,-0.107 -0.145,0.012 -0.141,0.088 -0.317,0.04 -0.325,-0.007 -0.197,0.094 -0.177,0.15 -0.058,0.189 0.034,0.218 -0.175,-0.202 -0.175,-0.132 -0.205,0.142 -0.214,0.097 -0.721,0.078 -0.579,-0.168 -0.813,-0.347 -0.129,-0.102 -0.117,-0.13 -0.134,-0.085 -0.308,-0.129 -0.12,-0.148 -0.136,-0.042 -0.156,0.021 -0.225,-0.118 -0.187,-0.208 -0.165,-0.018 -0.184,0.094 -0.325,-0.014 -0.63,-0.24 -0.28,-0.182 -0.025,0.408 -0.179,0.732 0.046,0.363 0.1,0.415 0.187,0.561 0.005,0.181 0.034,0.107 0.386,0.841 0.393,0.685 0.513,0.725 0.059,0.33 -0.067,0.338 0.167,-0.022 0.103,-0.166 0.024,0.165 0.058,0.139 0.438,0.48 0.03,0.127 -0.166,0.397 -0.094,-0.328 -0.174,-0.257 -0.488,-0.407 0.107,0.85 0.087,0.337 0.616,1.455 0.084,0.094 0.14,0.064 0.119,0.116 0.201,0.297 0.34,0.644 0.198,0.186 0.286,-0.059 0.421,0.131 0.144,-0.036 0.089,0.055 0.052,0.15 -0.33,-0.003 -0.321,0.083 -0.035,0.125 0.088,0.141 0.084,0.395 0.403,-0.133 0.636,0.026 0.38,-0.042 0.423,0.359 0.379,0.067 0.111,-0.026 0.227,-0.425 0.141,-0.511 0.087,-0.195 0.117,-0.166 -0.252,-0.219 -0.008,-0.111 0.033,-0.128 0.494,0.382 0.202,-0.154 0.042,-0.343 0,-0.212 0.059,-0.151 0.124,-0.07 0.05,-0.188 0.014,-0.145 -0.128,-0.328 -0.012,-0.189 0.31,0.393 0.124,0.533 0.237,-0.141 0.034,-0.084 -0.037,-0.369 0.106,-0.123 0.336,0.1 0.299,0.214 0.021,0.099 -0.02,0.1 -0.074,0.088 -0.243,-0.09 -0.111,0.156 0.144,0.39 0.244,0.374 0.147,-0.096 0.3,-0.051 0.1,-0.095 -0.064,-0.752 -0.12,-0.55 -0.008,-0.601 0.034,-0.327 0.138,-0.252 0.101,-0.266 -0.013,-0.343 0.05,-0.324 0.123,-0.336 0.172,-0.251 0.08,-0.058 -0.042,-0.07 0.073,-0.217 0.13,-0.159 0.079,0.195 -0.104,0.076 -0.061,0.085 0.204,0.143 0.061,0.127 0.021,0.14 -0.021,0.174 0.037,0.134 0.115,0.025 0.032,-0.175 -0.033,-0.212 0.027,-0.18 z m 14.691,-47.646 -0.339,-0.608 -0.075,-0.477 -0.119,-0.408 -0.527,-1.146 -0.228,-0.661 0.127,-0.664 -0.219,-2.121 0.227,-1.056 -0.11,-0.129 -0.273,-0.163 -0.121,-0.167 -0.181,-0.396 -0.02,-0.793 -0.35,-0.488 -0.378,-0.223 -0.256,-0.4 -0.172,-0.333 -0.024,-0.185 -0.104,-0.313 -0.29,-0.215 -0.199,-0.102 -0.427,-0.313 -0.209,-0.316 -0.429,-0.899 -0.199,-0.239 -0.396,-0.258 -0.324,-0.015 -0.209,-0.064 -0.742,-0.572 -0.231,-0.125 -0.186,-0.268 -0.278,-0.288 -0.161,-0.212 -0.247,-0.225 -0.169,-0.855 0,-0.83 -0.054,-0.989 -0.257,-0.477 -0.139,-0.154 -0.152,0.051 -0.012,0.308 0.042,0.21 -0.107,0.01 -0.382,-0.272 -0.478,-0.29 -0.258,-0.324 -0.188,-0.304 -0.156,0.012 -0.11,0.048 -0.11,0.374 0.179,0.645 -0.088,0.088 -0.151,-0.149 -0.275,-0.337 -0.143,0.11 -0.189,0.043 -0.165,-0.338 -0.139,-0.213 -0.201,-0.705 -0.18,-0.776 -0.017,-0.561 -0.351,-0.308 -0.137,-0.529 -0.109,-0.147 -0.103,-0.375 -0.405,-0.49 -0.416,-0.346 -0.345,-0.327 -0.297,-0.463 0.13,-0.335 0.211,0.071 0.224,-0.032 -0.179,-0.341 -0.174,-0.229 -0.445,-0.429 -0.207,-0.108 -0.448,-0.063 -0.498,-0.391 -0.305,-0.169 -0.215,-0.027 -0.249,-0.061 -0.176,-0.221 -0.311,-0.073 -0.438,-0.437 -0.215,-0.44 -0.108,-0.162 -0.147,-0.122 -0.216,0.073 -0.178,0.033 -0.392,-0.062 -0.129,-0.179 -0.253,-0.227 -0.487,-0.06 -0.385,-0.143 -0.294,-0.141 -0.298,-0.18 -0.274,-0.3 -0.243,-0.401 0.042,-0.514 0.061,-0.333 -0.31,-0.129 -0.535,-0.697 -0.026,-0.285 0.144,-0.582 0.146,-1.002 -0.213,-0.744 -0.415,-0.907 0.028,-0.46 -0.209,-0.006 -0.232,-0.09 -0.327,-0.447 -0.248,-0.294 -0.167,-0.271 -0.181,-0.367 0.029,-0.294 0.043,-0.198 0.018,-0.524 -0.231,-0.509 -0.073,-0.521 -0.219,-0.651 0.061,-0.432 -0.048,-0.356 -0.068,-0.308 0.071,-0.196 0.029,-0.249 -0.302,-0.249 -0.324,-0.19 -0.418,-0.336 -0.751,-0.524 -0.173,-0.396 -0.318,-0.354 -0.425,0.137 -0.313,0.065 -0.292,0.267 -0.404,0.197 -0.392,-0.178 -0.186,-0.15 -0.138,-0.53 -0.179,-0.578 -0.152,-0.29 -0.114,-0.35 0.107,-0.853 -0.16,-0.401 -0.05,-0.599 -0.152,-0.684 -0.169,-0.342 0.012,-0.275 -0.314,-0.403 -0.1,-0.289 -0.178,-0.104 -0.226,-0.165 -0.032,-0.221 0.017,-0.161 0.135,-0.267 0.073,-0.346 -0.315,-0.086 -0.219,-0.015 -0.153,-0.109 -0.172,-0.169 -0.062,-0.538 0.006,-0.57 -0.045,-0.356 -0.094,-0.265 -0.066,-0.28 -0.159,-0.298 -0.478,-0.387 0.035,-0.156 0.111,-0.202 -0.169,-0.116 -0.248,0 -0.14,0.27 -0.226,0.232 -0.443,0.177 -0.083,0.928 -0.275,1.02 -0.25,0.753 0.046,0.228 -0.02,0.223 -0.135,-0.1 -0.119,-0.125 -0.182,0.298 -0.329,0.773 -0.03,0.401 0.193,0.108 0.135,0.106 0.161,0.035 0.073,0.099 0.041,0.194 0.104,0.167 -0.026,0.181 -0.125,-0.071 -0.263,10e-4 -0.134,0.157 -0.339,0.314 0.089,0.904 -0.159,0.476 -0.153,0.369 -0.173,0.7 0.023,0.371 0.153,0.264 0.165,0.386 -0.1,0.532 -0.101,0.381 0.226,1.104 0.063,0.588 -0.124,0.401 -0.364,1.186 -0.164,0.868 0.053,0.479 -0.158,0.44 -0.18,0.704 -0.203,0.532 -0.711,1.074 -0.141,0.52 -0.239,0.648 -0.511,0.378 -0.386,0.236 -0.846,0.234 -0.488,-0.005 -0.252,-0.143 -0.145,-0.124 -0.575,-0.207 -0.699,-0.468 -0.538,-0.152 -0.266,-0.47 -0.026,-0.195 -0.096,-0.254 -0.282,-0.334 -0.532,-0.113 -0.546,-0.241 -0.337,0.034 -0.731,-0.207 -0.487,-0.295 -0.445,-0.409 -0.587,-0.708 -0.498,-0.191 -0.637,-0.293 -0.366,-0.244 -0.222,-0.118 -0.246,-0.183 -0.224,0.041 -0.387,0.005 -0.243,-0.172 -0.031,-0.135 0.037,-0.106 0.014,-0.193 -0.085,-0.029 -0.086,0 -0.071,0.052 -0.099,0.038 -0.342,-0.148 -0.479,-0.247 -0.09,-0.217 -0.151,-0.265 -0.662,-0.385 -0.384,-0.318 -0.848,-0.461 -0.217,-0.223 -0.071,-0.195 -0.063,-0.281 0.19,-0.292 0.185,-0.207 0.577,-0.859 0.173,-0.15 0.217,-0.233 0.199,-0.627 0.099,-0.358 -0.169,-0.542 -0.006,-0.91 0.67,-0.353 0.187,-0.046 0.173,-0.078 0.198,0.11 0.133,0.171 0.138,-0.031 0.374,-0.634 -0.06,-0.264 -0.155,-0.225 0.054,-0.139 1.152,-1.241 -0.141,-0.304 -0.171,-0.07 -0.328,0.021 -0.309,-0.265 -0.194,-0.501 -0.272,-0.018 -0.486,0.514 -0.057,0.118 0.118,0.067 0.103,0.312 -0.19,0.366 -0.19,0.003 -0.312,-0.036 -0.142,-0.261 -0.064,-0.398 -0.198,-0.112 -0.226,0.075 -0.187,0.14 -0.132,0.04 -0.11,-0.091 -0.006,-0.166 0.285,-0.276 0.239,-0.177 0.019,-0.066 -0.174,-0.054 0.026,-0.128 0.222,-0.227 -0.104,-0.012 -0.271,0.243 -0.289,0.14 -0.384,0.298 -0.551,0.195 -0.378,0.264 -0.527,-0.08 -0.491,-0.26 -0.107,-0.137 -0.242,-0.201 -0.539,0.218 -0.339,-0.023 -0.187,-0.077 -0.319,-0.052 -0.274,-0.193 -0.66,-0.308 -0.701,-0.059 -0.34,0.014 -0.253,-0.159 -0.244,-0.091 -0.479,-0.064 -0.199,-0.239 -0.251,-0.481 -0.18,-0.129 -0.291,-0.046 -0.309,0.221 -0.181,0.104 -0.353,-0.395 -0.627,-0.408 -0.2,-0.056 -0.105,0.099 -0.076,0.188 -0.119,0.018 -0.139,-0.085 -0.245,-0.241 -0.16,-0.044 -0.42,0.257 0.029,0.088 0.343,0.131 0.36,0.359 0.171,0.074 0.404,-0.094 0.554,0.068 0.559,0.448 -0.082,0.223 -0.042,0.31 0.015,0.338 -0.013,0.229 0.23,0.252 -0.103,0.019 -0.26,-0.057 -0.205,0.07 -0.193,0.119 -0.086,0.339 -0.109,-0.16 -0.334,-0.152 -0.198,0.117 -0.332,0.154 -0.302,-0.062 -0.192,-0.078 -0.454,0.132 -0.809,-0.004 -0.27,-0.19 -0.079,-0.326 -0.063,-0.08 -0.074,0.146 -0.127,0.168 -0.489,0.034 -0.073,0.069 0.029,0.163 -0.019,0.205 -0.188,0.015 -0.232,0.054 0.025,0.251 0.043,0.196 -0.086,0.098 -0.255,-0.179 -0.114,-0.193 -0.179,-0.06 -0.14,0.069 -0.036,0.172 0.021,0.444 -0.127,0.05 -0.331,-0.017 -0.152,0.084 -0.229,0.558 -0.421,0.213 -0.064,0.291 -0.028,0.248 0.35,0.449 -0.169,0.23 -0.178,0.188 -0.178,0.08 -0.378,0.073 -0.278,0.205 -0.117,0.216 -0.022,0.206 -0.077,0.264 -0.121,0.313 -0.024,0.169 -0.253,0.168 -0.45,0.503 -0.227,0.515 0.296,0.28 0.348,0.201 0.253,-0.006 0.002,0.051 -0.264,0.207 0.164,0.212 0.253,0.198 0.154,0.029 0.113,0.084 -0.239,0.047 -0.354,0.017 -0.068,0.216 0.043,0.249 0.063,0.216 -0.044,0.153 -0.132,-0.105 -0.058,-0.162 -0.304,-0.33 -0.218,-0.101 -0.319,-0.078 -0.096,0.1 0.013,0.503 -0.063,0.231 -0.113,-0.131 -0.028,-0.368 -0.301,-0.298 -1.186,-0.298 -0.168,-0.019 -0.276,0.039 -0.189,0.118 -0.019,0.116 -0.126,0.094 -0.205,0.107 -0.188,0.164 -0.122,0.137 -0.006,0.171 0.152,0.321 0.089,0.093 -0.012,0.153 -0.148,-0.159 -0.13,-0.051 -0.123,0.25 -0.118,0.05 0.031,-0.698 0.123,-0.473 0.1,-0.279 0.11,-0.218 -0.053,-0.115 -0.822,-0.653 -0.348,-0.535 -0.255,-0.3 -0.397,-0.289 -0.207,-0.182 -0.461,-0.278 -0.544,-0.193 -0.262,-0.261 -0.289,-0.093 -0.358,0.127 -0.03,0.243 0.045,0.236 -0.285,0.386 -0.307,0.206 -0.245,-0.236 -0.223,-0.172 -0.225,0.124 -0.068,0.213 -0.113,0.079 -0.085,-0.145 -0.123,-0.32 -0.183,-0.127 -0.183,0.056 0.055,0.254 0.105,0.14 -0.029,0.202 -0.132,0.093 -0.025,0.191 -0.079,0.254 0.012,0.355 -0.209,0.075 -0.156,0.281 -0.113,-0.06 -0.029,-0.183 -0.057,-0.187 -0.228,-0.071 -0.084,0.174 -0.051,0.059 -0.081,0.012 0.055,-0.142 0,-0.266 0.066,-0.278 -0.216,-0.1 -0.086,0.062 0.003,0.24 -0.052,0.35 -0.214,0.055 -0.19,0.157 -0.281,0.003 -0.143,0.076 -0.051,0.185 -0.247,0.191 0.005,0.229 0.166,0.232 0.011,0.202 0.395,0.205 -0.023,0.206 -0.056,0.096 -0.149,-0.038 -0.319,-0.178 -0.325,-0.038 -0.098,-0.082 -0.039,0.059 -0.002,0.137 -0.126,0.1 -0.181,0.01 -0.211,0.147 0.15,0.23 -0.027,0.091 0.074,0.11 0.322,0.02 0.137,-0.029 0.014,0.196 -0.041,0.196 -0.131,0.07 -0.125,-0.18 -0.621,-0.345 -0.163,-0.033 -0.034,0.108 0.029,0.141 -0.131,0.171 -0.231,0.224 -0.157,-0.061 -0.186,0.053 -0.12,0.383 -0.042,0.383 0.206,0.268 0.138,0.353 0.287,-0.434 0.117,-0.05 10e-4,0.188 -0.112,0.195 -0.066,0.24 -0.022,0.271 -0.188,0.007 -0.211,-0.036 -0.051,0.086 -0.079,0.202 0.046,0.279 0.14,0.105 0.325,-0.01 0.277,0.02 0.247,0.101 0.041,0.085 -0.223,-0.048 -0.456,0.026 -0.217,-0.038 -0.431,0.026 -0.32,-0.159 -0.158,-0.159 -0.239,-0.041 -0.233,0.064 -0.13,0.223 -0.157,0.054 -0.365,-0.552 -0.229,-0.037 -0.113,0.129 0.11,0.346 -0.058,0.213 -0.125,0.159 -0.158,-0.01 -0.098,0.067 0.078,0.146 0.25,0.371 0.205,0.162 0.182,0.225 0.093,0.194 0.22,-0.009 0.051,0.157 -0.126,0.228 0.004,0.362 -0.09,0.019 -0.127,-0.08 -0.252,-0.223 -0.13,-0.043 -0.067,0.064 -0.021,0.153 0.061,0.4 -0.129,0.571 0.026,0.167 -0.023,0.142 -0.106,-0.103 -0.13,-0.221 -0.269,-0.343 -0.329,-0.747 -0.348,-0.506 -0.189,-0.431 -0.291,-0.811 -0.151,-0.012 -0.193,0.349 -0.213,0.459 -0.145,0.226 -0.344,0.225 -0.212,0.228 -0.254,0.08 -0.279,0.26 -0.201,0.223 -0.282,0.52 -0.048,0.335 0.012,0.353 0.123,0.501 0.13,0.728 0.191,0.078 0.154,0.123 -0.043,0.22 -0.234,0.139 -0.718,0.689 -0.483,0.246 -0.138,0.173 -0.177,0.365 -0.256,0.461 -0.116,0.291 -0.269,0.564 -0.438,0.63 -0.443,0.468 -0.511,0.375 -0.335,0.179 -1.248,0.524 -0.666,0.2 -1.203,0.146 -0.51,0.237 -0.638,-0.077 -0.714,-0.051 -0.991,0.792 -0.822,0.193 -0.728,0.145 -0.313,0.13 -0.716,0.457 -0.417,0.209 -0.778,0.234 -0.319,-0.024 -0.431,-0.215 -0.403,0.05 -0.446,-0.031 -0.364,0.02 -0.283,0.178 -1.669,0.946 -0.33,0.258 -0.343,0.375 -0.492,0.347 -0.393,0.4 -0.826,0.417 -0.85,0.316 -0.42,0.263 -0.299,0.357 -0.521,0.96 -0.11,0.243 -0.208,0.253 -0.276,0.092 -0.179,0.082 0.063,-0.482 -0.199,-0.428 0.14,-0.817 -0.052,-0.244 -0.284,0.159 -0.181,0.174 -0.459,1.184 -0.314,0.923 0.238,0.53 0.077,0.308 -10e-4,0.331 -0.084,0.476 0.006,0.31 -0.028,0.413 -0.572,0.958 -0.178,0.417 -0.192,0.802 -0.023,0.372 0.014,0.557 0.241,0.488 0.184,0.302 0.285,0.874 0.342,0.581 0.563,1.171 0.621,0.95 0.04,0.364 -0.07,0.49 0.034,0.507 -0.111,0.149 -0.24,0.175 -0.275,-0.225 -0.14,-0.195 -0.176,-0.718 -0.072,-0.041 -0.118,0.314 -0.13,0.137 -0.118,-0.093 -0.09,-0.119 -0.022,-0.124 0.04,-0.148 0.043,-0.538 -0.258,-0.307 -0.229,-0.33 -0.247,-0.081 -0.152,0.149 -0.005,0.205 0.331,0.574 0.213,0.622 0.329,0.389 0.194,0.1 0.217,0.237 -0.047,0.525 -0.157,0.196 -0.131,0.1 -0.427,-0.116 -0.099,-0.378 -0.334,-0.743 -0.108,-0.288 -0.092,-0.078 -0.037,0.142 0.007,0.256 -0.062,0.11 -0.065,-0.011 -0.132,-0.134 -0.119,-0.072 -0.072,0.025 0.13,0.185 0.286,0.548 1.056,1.344 0.895,1.566 0.197,0.62 0.099,1.364 0.089,0.33 0.528,0.679 0.517,0.787 0.152,0.392 -0.003,0.336 0.105,0.319 0.642,0.866 0.286,0.93 0.035,0.34 -0.082,0.584 0.075,1.033 0.072,0.562 0.233,1.114 0.278,0.804 0.329,0.5 0.45,1.112 0.684,1.284 0.111,0.635 -0.035,1.693 -0.049,0.552 -0.15,0.095 -0.101,0.233 0.146,1.114 0.034,0.636 -0.221,0.6 -0.25,0.533 -0.439,0.364 -0.497,0.012 -0.231,-0.212 -0.295,-0.217 -0.052,0.969 -0.006,0.832 0.09,0.317 0.01,0.374 0.334,0.291 0.188,-0.113 0.232,-0.016 0.807,0.412 0.453,0.34 0.73,0.914 0.646,0.241 0.842,0.416 0.978,0.132 0.782,0.024 1.229,0.219 0.263,-0.078 0.526,-0.068 0.402,-0.142 0.362,-0.091 1.08,-0.849 1.053,-0.874 0.521,-0.069 0.467,-0.01 0.57,-0.298 0.518,-0.903 0.264,-0.201 0.351,-0.225 0.997,-0.132 0.587,0.093 0.314,-0.146 0.797,-0.163 1.658,-0.15 0.91,0.121 0.608,-0.02 0.322,0.06 0.252,0.395 1.759,-0.34 0.5,-0.024 0.313,0.057 0.394,0.295 0.442,-0.279 0.397,0.037 0.402,-0.269 0.611,-0.806 0.278,-0.503 0.445,-1.059 0.33,-0.38 0.363,-0.189 0.426,-0.061 0.657,-0.191 1.425,-0.891 0.553,-0.192 0.292,-0.168 0.981,-0.691 0.615,-0.133 1.804,0.179 0.855,-0.046 0.662,-0.108 1.005,-0.372 1.094,-0.28 1.343,-0.588 1.122,-0.608 0.679,-0.14 1.069,-0.107 1.574,-0.158 1.833,0.082 0.464,-0.125 0.228,-0.111 0.321,-0.119 0.396,0.083 0.304,0.09 0.92,0.485 1.386,1.021 0.306,0.043 0.912,-0.233 0.305,0.023 1.276,0.75 0.529,0.016 0.423,-0.019 0.32,0.081 0.34,0.204 0.403,0.472 0.853,0.453 0.043,0.366 -0.063,0.238 -0.192,0.009 -0.163,0.051 0.205,0.767 0.358,0.62 0.86,0.084 0.313,0.217 0.201,0.245 0.157,0.389 0.117,0.609 0.431,0.508 0.402,0.434 0.094,0.179 0.189,0.615 0.072,0.18 0.157,0.609 0.229,0.696 -0.063,0.071 -0.136,-0.015 -0.242,-0.177 -0.213,-0.197 -0.114,0.031 -0.13,0.135 -0.019,0.167 0.19,-0.044 0.111,0.024 0.263,0.213 0.245,0.248 0.194,0.145 0.468,0.618 0.183,-0.138 0.224,-0.123 0.356,0.336 0.142,0.067 0.081,-0.129 -0.135,-0.603 -0.135,-0.146 -0.032,-0.214 0.167,-0.153 0.081,-0.183 0.397,-0.451 0.869,-1.347 0.267,-0.154 0.308,-0.295 0.416,-0.225 0.43,-0.267 0.274,-0.104 0.269,-0.055 0.301,-0.247 0.328,-0.668 0.247,-0.791 0.264,-0.348 0.404,-0.371 0.311,-0.515 -0.025,-0.403 0.004,-0.411 0.224,0.317 0.141,0.322 0.223,1.077 -0.191,0.237 -0.202,0.119 0.039,0.378 0.135,0.493 0.05,0.395 -0.424,0.417 -0.366,0.524 -0.439,1.018 -0.028,0.308 -0.069,0.428 0.026,0.377 0.068,0.365 -0.108,0.566 -0.177,0.506 -0.232,0.013 -0.158,-0.019 -0.347,0.045 -0.32,-0.03 -0.367,1.106 0.233,0.052 0.178,-0.063 0.321,0 0.359,-0.198 0.525,-0.162 0.3,0.057 0.352,-0.018 0.512,-1.416 0.127,-0.921 0.261,-0.413 0.081,-0.285 0.135,-0.27 0.272,0.464 0.219,0.451 0.482,0.732 0.151,0.365 0.06,0.888 -0.313,1.03 -0.188,0.295 -0.227,0.257 -0.19,0.433 0.575,0.11 0.373,-0.008 0.583,-0.315 0.115,-0.042 0.293,-0.005 0.112,-0.165 0.287,-0.157 0.214,-0.184 0.277,-0.145 0.252,0.096 0.057,0.083 0.063,0.093 -0.093,0.204 -0.008,0.431 -0.165,-0.047 -0.147,-0.256 -0.184,0.066 -0.128,0.193 -0.275,-0.061 0.046,0.126 0.147,0.247 0.581,0.476 0.621,0.631 0.231,0.298 0.506,0.951 0.36,1.011 -0.029,0.299 -0.177,0.54 -0.127,0.549 0.011,0.288 0.117,0.365 0.255,0.374 0.946,1.021 0.5,0.9 0.665,0.467 1.077,0.172 0.569,0.338 0.591,0.682 0.188,0.058 0.287,0.028 0.368,-0.415 0.561,0.044 0.738,0.412 0.439,-0.098 0.313,0.051 0.438,0.233 0.641,0.461 0.68,0.232 0.404,0.349 0.314,0.052 0.563,0.227 0.414,-0.194 0.352,-0.244 0.813,-0.845 0.637,-0.407 0.335,-0.158 0.269,-0.07 0.341,-0.264 -0.212,-0.186 -0.201,0.031 -0.344,-0.105 0.196,-0.122 0.205,-0.091 0.99,-0.628 0.263,0.186 0.182,0.208 0.197,0.285 -0.148,0.403 -0.132,0.19 -0.305,0.305 -0.368,0.012 -0.175,-0.025 0.363,0.342 0.314,0.23 0.65,-0.418 0.162,-0.329 0.123,-0.191 0.206,-0.042 0.308,0.064 0.119,0.241 0.067,0.294 -0.223,0.08 -0.108,0.218 -0.076,0.207 0.388,0.266 0.199,0.169 0.24,-0.004 0.277,0.041 0.21,0.391 0.196,0.451 0.232,-0.125 0.145,-0.118 0.248,0.113 0.27,0.355 0.219,0.403 0.022,0.17 0.168,0.078 0.159,-0.12 0.076,-0.17 -0.006,-0.313 -0.043,-0.494 -0.111,-0.075 -0.253,0.268 -0.144,-0.194 -0.194,-0.206 0.003,-0.199 0.211,-0.099 0.179,0.043 0.224,0 1.182,-0.173 1.512,-1.585 0.662,-0.581 0.688,-0.431 0.712,-0.277 0.371,-0.089 1.912,-0.149 0.995,0.048 0.512,-0.109 0.237,-0.146 0.402,-0.399 0.282,-0.244 0.346,-0.068 0.084,-0.298 10e-4,-0.319 0.066,-0.333 -0.101,-0.625 0.027,-0.821 0.078,-0.428 0.209,-0.601 0.092,-0.617 0.094,-0.874 0.083,-0.518 0.104,-0.473 0.271,-0.521 0.23,-0.337 0.543,-1.268 0.188,-0.125 0.157,0 0.068,-0.077 0.021,-0.07 -0.046,-0.051 -0.069,-0.147 0.046,-0.119 0.165,-0.118 0.052,0.045 0.084,-0.025 0.013,-0.065 -0.078,-0.347 0.114,-0.486 0.139,-0.849 0.157,-0.381 0.093,-0.303 0.363,-0.455 0.397,-0.448 -0.113,-0.048 -0.186,-0.034 0.12,-0.107 0.095,-0.032 0.121,0.071 0.1,-0.197 0.022,-0.309 0.097,-0.456 -0.086,-0.397 0.184,-0.124 0.209,-0.075 0.088,-0.416 0.058,-0.167 0.13,-0.155 0.218,-0.331 0.171,-0.345 0.405,-0.658 0.396,-0.269 0.59,-0.208 0.066,-0.119 -0.15,-0.073 0.006,-0.072 0.222,0 0.09,-0.23 0.234,-0.17 0.391,-0.392 0.13,-0.36 0.081,-0.288 0.039,-0.651 0.636,-0.854 0.443,-1.153 0.107,-0.739 0.11,-0.399 0.074,-0.584 -0.067,-0.608 0.019,-0.509 0.442,-1.292 0.101,-0.533 0.136,-0.342 0.209,-1.273 0.004,-0.66 0.32,-0.768 0.399,-0.625 0.034,-0.578 -0.134,-0.444 0.019,-0.938 z m -65.797,-48.962 0.522,-0.151 0.52,0.182 0.291,-0.054 -0.01,-0.123 -0.064,-0.103 -0.106,-0.097 -0.231,-0.067 -0.074,-0.249 -0.133,-0.234 -0.024,-0.256 -0.105,-0.236 -0.124,0 -0.123,0.067 -0.276,0.333 0.097,0.182 0.029,0.333 -0.164,0.11 -0.188,-0.046 -0.081,0.304 0.094,0.108 0.15,-0.003 z m -47.708,41.786 -10e-4,-0.216 -0.1,-0.209 -0.319,-0.913 -0.1,0.035 -0.108,0.119 0.157,0.66 0.539,0.967 0.074,-0.128 -0.097,-0.246 -0.045,-0.069 z m 6.332,-15.474 0.163,-0.233 0.031,-0.213 -0.064,-0.144 -0.225,0.233 -0.129,0.193 0.026,0.118 0.198,0.046 z m 25.64,-15.989 0.1,0.025 0.105,-0.082 0.022,-0.131 -0.114,-0.132 -0.038,-0.117 -0.089,-0.008 -0.043,0.072 -0.06,0.139 0.115,0.122 0.002,0.112 z m 1.893,-2.431 -0.015,-0.078 0.013,-0.224 -0.107,-0.054 -0.119,0.104 -0.073,0.288 0.122,0.144 0.179,-0.18 z m 62.175,92.398 -0.071,0.131 -0.023,0.118 -0.064,0.063 0.117,0.083 0.031,0.188 0.064,0.032 0.176,0 -0.104,-0.47 -0.126,-0.145 z m -0.113,0.767 -0.08,-0.005 -0.14,0.198 -0.04,0.157 -0.06,0.03 -0.039,0.11 -0.061,0.086 -0.164,-0.067 10e-4,0.07 0.137,0.266 0.218,-0.065 0.218,0.068 0.132,-0.4 -0.038,-0.195 -0.084,-0.253 z m 2.331,-2.538 -0.197,-0.087 -0.141,0.18 0.023,0.087 -0.004,0.196 0.053,0.017 0.157,-0.034 -0.011,-0.113 0.193,-0.11 -0.073,-0.136 z m -28.666,-24.877 -0.261,0.124 -0.672,-0.081 0.005,-0.057 0.104,-0.226 -0.142,-0.125 -0.153,-0.052 -0.551,-0.043 -0.68,0.245 -1.271,0.293 -0.168,0.206 -0.107,0.281 0.137,0.156 0.465,0.338 0.442,0.046 0.317,-0.079 0.342,0.053 0.174,-0.196 0.484,0.133 0.186,0.187 0.398,-0.165 0.09,-0.307 0.137,-0.139 0.462,-0.104 0.495,0.137 0.153,-0.024 0.16,-0.167 -0.216,-0.335 -0.33,-0.099 z m 17.378,14.355 -0.083,-0.535 -0.254,-0.21 -0.146,0.013 -0.027,0.27 -0.168,0.152 -0.049,0.138 0.009,0.313 -0.074,0.291 0.138,0.29 -0.033,0.293 0.064,0.206 0.082,-0.015 0.3,-0.138 0.217,-0.205 0.081,-0.25 -0.098,-0.291 0.041,-0.322 z m -57.605,-86.254 -0.002,-0.029 -0.063,-0.005 0.002,0.029 0.063,0.005 z\"\n\t\t\t\tid=\"AU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 278.72375,427.9294 0.01,0.083 -0.13,-0.045 -0.174,-0.177 -0.174,-0.133 0.043,-0.143 0.044,-0.048 0.174,0.133 0.172,0.249 z\"\n\t\t\t\tid=\"AW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 530.99575,250.1104 0.086,0.001 0.039,-0.048 0.15,0.034 0.226,0.219 0.046,0.119 0.155,0.061 0.054,0.123 -0.18,0.382 -0.111,0.007 -0.083,-0.048 -0.147,0.042 -0.086,0.072 -0.029,0.159 0.005,0.332 -0.657,0.066 -0.151,-0.097 -0.207,-0.755 0.042,-0.196 0.139,-0.083 0.119,-0.018 0.018,0.408 0.175,-0.041 0.055,-0.269 0.012,-0.189 -0.047,-0.096 -0.119,-0.074 -0.069,-0.127 0.099,-0.205 0.183,-0.089 0.158,0.274 0.125,0.036 z m -0.919,0.927 0.015,0.126 -0.107,-0.032 -0.083,0.043 -0.056,0.155 -0.122,-0.056 -0.049,-0.223 0.091,-0.334 0.217,-0.013 0.094,0.334 z m 2.664,0.823 -0.022,0.133 -0.229,0.029 -0.096,-0.118 -0.214,0.015 -0.037,-0.059 0.089,-0.118 0.17,-0.074 0.222,0.03 0.117,0.162 z\"\n\t\t\t\tid=\"AX\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 611.21475,334.1134 0.258,0.217 0.447,0.588 0.637,0.954 0.156,0.27 0.103,0.312 0.089,0.377 0.146,0.333 0.646,0.837 0.279,0.309 0.455,0.398 0.162,0.089 0.212,0.025 0.391,10e-4 0.36,0.156 0.178,0.109 0.184,0.158 0.165,0.183 0.166,0.486 -0.625,-0.16 -0.63,0.025 -0.355,0.104 -0.346,0.143 -0.331,0.201 -0.207,0.391 -0.174,0.902 -0.255,0.841 0.009,0.388 0.111,0.373 -0.013,0.176 -0.116,0.075 -0.146,0.158 -0.195,0.766 -0.097,0.153 -0.125,0.095 -0.034,-0.09 0.008,-0.201 -0.275,-0.177 -0.145,0.199 -0.101,0.421 -0.201,0.441 -0.01,0.084 0.05,1.359 -0.08,-0.006 -0.575,0.138 -0.12,-0.044 -0.492,-0.626 -0.102,-0.069 -0.212,-0.028 -0.125,-0.103 -0.101,-0.168 -0.058,-0.125 -0.509,-0.34 -0.075,-0.125 -0.011,-0.11 0.075,-0.099 0.086,-0.083 0.249,-0.085 0.29,-0.073 0.093,-0.053 0.047,-0.091 -0.003,-0.146 -0.047,-0.144 -0.417,-0.261 -0.046,-0.113 -0.013,-0.138 0.023,-0.145 0.065,-0.113 0.34,-0.154 0.182,-0.16 -0.113,-0.178 -0.367,-0.407 -0.436,-0.448 -0.291,-0.004 -0.335,0.132 -0.536,0.382 -0.296,0.163 -0.387,0.27 -0.421,0.3 -0.345,0.318 -0.215,0.263 -0.382,0.114 -0.195,0.22 -0.641,0.658 -0.18,-0.008 -0.011,-0.327 0.009,-0.259 -0.041,-0.149 -0.208,-0.205 -0.003,-0.088 0.056,-0.055 0.159,0.033 0.205,-0.012 0.098,-0.081 -0.219,-0.27 -0.195,-0.181 -0.165,-0.122 -0.037,-0.073 0,-0.052 0.035,-0.062 0.282,-0.149 0.028,-0.137 -0.019,-0.153 -0.448,-0.226 -0.335,0.083 -0.301,-0.254 -0.193,-0.196 -0.241,-0.211 -0.215,-0.116 -0.207,-0.265 -0.359,-0.273 -0.23,-0.078 0.003,-0.042 0.042,-0.05 0.096,-0.042 0.64,0.011 0.078,-0.049 0.04,-0.118 0.087,-0.174 0.102,-0.256 -0.008,-0.216 -0.643,-0.349 -0.466,-0.322 -0.323,-0.424 -0.219,-0.389 0.008,-0.131 0.063,-0.124 0.5,-0.359 0.034,-0.093 -0.011,-0.063 -0.179,-0.184 -0.224,-0.19 -0.07,-0.14 -0.141,-0.071 -0.268,-0.005 -0.47,-0.234 -0.1,-0.023 -0.022,-0.046 0.023,-0.047 0.335,-0.095 -0.005,-0.078 -0.102,-0.103 -0.189,-0.075 -0.174,-0.187 -0.06,-0.168 0.605,-0.492 0.179,-0.099 0.396,0.091 0.823,0.327 -0.056,0.181 0.083,0.102 0.189,0.138 0.363,0.14 0.307,0.072 0.155,-0.062 0.236,-0.052 0.307,0.162 0.283,0.205 0.141,0.083 0.076,0.025 0.215,-0.068 0.258,-0.264 0.102,-0.319 0.028,-0.154 -0.15,-0.212 -0.31,-0.23 -0.347,-0.202 -0.223,-0.179 -0.143,-0.353 -0.144,-0.039 -0.036,-0.046 -0.024,-0.121 0.006,-0.168 0.049,-0.13 0.141,-0.056 0.142,-0.02 0.128,-0.124 0.161,-0.243 0.068,-0.135 0.302,0.077 0.041,0.218 0.054,0.046 0.125,-0.026 0.208,-0.091 0.166,0.07 0.214,0.259 0.295,0.273 0.16,0.184 0.063,0.126 0.151,0.123 0.221,0.144 0.176,0.226 0.157,0.524 0.159,0.121 0.569,0.199 0.2,0.041 0.559,0.07 0.197,-0.05 0.288,-0.451 0.259,-0.465 0.242,-0.097 0.437,-0.225 0.262,-0.213 0.11,-0.23 0.247,-0.434 0.153,-0.243 z m -8.477,4.567 0.028,-0.122 -0.079,-0.055 -0.083,-0.003 -0.072,0.061 0,0.152 0.1,0.027 0.106,-0.06 z m -1.484,-1.519 -0.061,0.042 -0.093,-0.042 -0.028,-0.094 0.007,-0.099 0.092,-0.023 0.075,0.028 0.021,0.089 -0.013,0.099 z m 3.061,7.839 -0.541,-0.108 -0.973,-0.233 -0.268,-0.12 -0.253,-0.323 -0.151,-0.156 -0.223,-0.2 -0.184,-0.076 -0.139,-0.14 -0.079,-0.207 -0.117,-0.186 -0.2,-0.219 -0.455,-0.745 -0.059,-0.078 -0.095,-0.124 -0.042,-0.069 0.277,-0.057 0.461,-0.167 0.126,0.081 0.135,0.169 0.068,0.145 0.012,0.268 0.055,0.043 0.225,-0.09 0.101,0.108 0.173,0.129 0.3,0.128 0.432,-0.201 0.215,-0.052 0.177,0.004 0.096,0.063 0.034,0.208 -0.035,0.257 -0.05,0.141 0.091,0.102 0.354,0.247 0.147,0.137 -0.071,0.237 0.264,0.579 0.089,0.225 0.103,0.28 z\"\n\t\t\t\tid=\"AZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 522.37775,320.8624 0.58,0.416 0.239,0.062 0.135,-0.057 0.183,0.026 0.408,0.122 0.093,0.051 0.123,-0.009 0.301,-0.162 0.103,0.02 0.344,0.318 0.173,0.004 0.208,-0.137 0.134,-0.119 0.396,0.089 0.226,-0.054 0.188,-0.005 0.204,0.054 0.186,0.074 0.181,0.064 0.489,0.033 0.234,0.202 0.094,0.195 0.002,0.119 0.023,0.127 0.134,0.125 0.295,0.071 0.185,-0.015 0.098,-0.009 0.251,-0.112 0.296,-0.058 0.212,0.067 0.101,0.065 0.023,0.089 -0.063,0.307 -0.119,0.33 -0.193,0.343 -0.202,0.323 -0.052,0.17 -0.015,0.272 -0.025,0.213 0.028,0.116 0.066,0.109 0.223,0.086 0.302,0.214 0.256,0.278 0.329,0.315 0.102,0.117 0,0.126 -0.096,0.093 -0.281,0.036 -0.292,-0.028 -0.112,-0.032 -0.105,0.038 -0.065,0.072 0.035,0.085 0.299,0.382 0.349,0.547 0.019,0.235 -0.042,0.184 -0.081,0.128 -0.144,-0.022 -0.111,-0.1 -0.167,0.007 -0.13,0.028 -0.169,0.198 -0.084,-0.009 -0.145,0.03 -0.091,0.039 -0.145,-0.058 -0.153,-0.038 -0.066,0.061 -0.029,0.116 0.094,0.209 0.177,0.327 -0.028,0.25 -0.135,0.027 -0.124,-0.208 -0.109,-0.034 -0.125,0.008 -0.286,0.241 -0.211,0.203 -0.048,0.141 -0.076,0.154 -0.023,0.112 0.005,0.371 -0.379,0.059 -0.079,0.055 -0.046,0.112 0.031,0.475 0.031,0.255 0.217,0.392 0.008,0.124 -0.031,0.082 -0.155,0.155 -0.073,0.056 -0.049,0.018 -0.252,-0.102 -0.12,-0.049 -0.505,-0.346 -0.223,-0.193 -0.353,-0.252 -0.217,-0.144 -0.11,-0.218 -0.174,-0.05 -0.204,0.07 -0.231,-0.158 0.164,-0.081 0.04,-0.078 -0.021,-0.102 -0.072,-0.138 -0.624,-0.598 -0.307,-0.41 -0.049,-0.147 -0.005,-0.392 -0.072,-0.094 -0.459,-0.179 -0.512,-0.511 -0.53,-0.503 -0.072,-0.14 -0.272,-0.381 -0.333,-0.347 -0.265,-0.222 -0.217,-0.252 -0.241,-0.354 -0.125,-0.535 -0.111,-0.476 -0.075,-0.185 -0.153,-0.066 -0.474,-0.567 -0.403,-0.33 0.004,-0.357 0.066,-0.597 0.075,-0.679 0.097,-0.095 0.184,-0.051 0.21,0.019 0.183,0.085 0.362,0.465 0.207,0.181 0.175,0.07 0.201,-0.196 0.248,-0.411 0.217,-0.217 0.73,0.079 z\"\n\t\t\t\tid=\"BA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 307.92775,426.1274 -0.08,0.057 -0.251,-0.114 -0.088,-0.138 -0.011,-0.438 0.155,-0.042 0.291,0.347 0.169,0.126 z\"\n\t\t\t\tid=\"BB\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 734.70575,400.0724 0.022,0.114 0.004,0.996 0.025,0.425 0.09,0.35 0.018,0.133 -0.089,0.108 -0.088,0.021 -0.083,-0.169 -0.188,-0.129 -0.278,-0.138 -0.118,-0.092 -0.143,0.037 -0.201,0.209 -0.08,0.194 0.035,0.272 0.063,0.268 0.14,0.153 0.011,0.169 0.05,0.219 0.072,0.2 0.034,0.217 -0.046,0.004 -0.167,-0.278 -0.15,-0.301 -0.389,-0.57 -0.127,-1.022 -0.008,-0.506 -0.267,-0.596 -0.177,-0.826 -0.071,-0.215 0.093,-0.268 0.016,-0.1 -0.05,0.022 -0.136,0.138 -0.177,-0.33 -0.116,-0.296 -0.458,-0.613 -0.133,-0.271 -0.006,-0.265 -0.198,0.266 -0.269,0.187 -0.274,0.281 -0.182,0.085 -0.577,0.052 -0.334,-0.376 -0.479,-0.921 -0.063,-0.208 0.063,-0.543 -0.114,-0.515 0.002,-0.271 -0.034,-0.182 -0.086,0.04 -0.033,0.125 0.019,0.191 -0.035,0.16 -0.414,-0.031 -0.39,-0.073 0.343,0.271 0.369,0.063 0.19,0.242 0.023,0.189 -0.012,0.213 -0.188,0.149 -0.173,0.094 0.031,0.204 0.21,0.248 -0.254,0.07 -0.069,0.162 -0.006,0.231 0.128,0.204 0.051,0.151 -0.031,0.139 0.124,0.149 0.18,0.313 0.058,0.222 -0.075,0.313 -0.103,0.122 -0.165,0.118 -0.388,0.394 -0.19,0.448 -0.161,0.209 -0.202,0.039 -0.078,-0.092 -0.167,-0.12 -0.004,-0.219 0.051,-0.173 0.341,-0.419 -0.186,0.056 -0.21,0.12 -0.32,0.227 -0.102,-0.281 -0.067,-0.26 -0.001,-0.319 0.257,-0.477 -0.291,0.238 -0.08,0.297 0.036,0.35 -0.038,0.248 -0.113,0.323 -0.155,0.194 -0.25,0.125 -0.11,0.191 -0.168,0.14 -0.005,-0.28 -0.054,-0.37 -0.181,-0.879 -0.039,0.189 0.094,0.545 -0.006,0.354 -0.137,0.28 -0.275,0.3 -0.211,0.042 -0.124,-0.046 -0.188,-0.186 -0.206,-0.266 -0.034,-0.428 -0.085,-0.235 0.013,-0.281 -0.017,-0.266 -0.221,-0.713 -0.143,-0.366 0.018,-0.118 -0.01,-0.05 -0.066,-0.472 -0.092,-0.289 -0.046,-0.308 0.218,-0.443 -0.088,-0.072 -0.251,-0.059 -0.233,-0.077 -0.057,-0.115 0.104,-0.437 -0.121,-0.171 -0.174,-0.173 -0.055,-0.069 -0.058,-0.09 -0.08,-0.22 0.155,-0.463 0.217,-0.538 0.039,-0.205 0.036,-0.356 0.02,-0.137 -0.028,-0.135 -0.229,-0.156 -0.403,-0.063 -0.285,-0.131 -0.166,-0.198 -0.142,-0.079 -0.175,0.059 -0.223,-0.077 -0.187,-0.197 -0.156,-0.239 0.02,-0.112 0.041,-0.149 0.294,-0.62 0.109,-0.019 0.255,0.119 0.095,0 0.167,-0.245 0.234,-0.699 0.33,0.002 0.291,0.022 0.196,0.036 0.195,-0.022 0.205,-0.056 0.111,-0.088 0.061,-0.112 -0.021,-0.097 -0.251,-0.132 -0.097,-0.099 -0.07,-0.281 -0.073,-0.105 -0.493,-0.015 -0.256,-0.129 -0.141,-0.116 -0.25,-0.383 -0.31,-0.284 -0.296,-0.067 -0.114,-0.092 -0.062,-0.146 0.035,-0.211 0.089,-0.192 0.062,-0.214 0.236,-0.283 0.277,-0.247 0.124,-0.17 0.175,-0.179 0.021,-0.098 -0.03,-0.112 -0.142,-0.107 -0.099,-0.034 -0.016,-0.069 0.068,-0.185 0.135,-0.023 0.281,0.168 0.286,0.271 0.169,0.242 0.007,0.191 0.11,0.031 0.111,0.007 0.186,0.084 0.192,-0.025 0.124,0.047 0.083,-0.017 0.031,-0.11 -0.093,-0.162 -0.068,-0.115 0.078,-0.116 0.089,-0.023 0.099,0.029 0.135,0.104 0.099,0.213 0.019,0.331 0.219,0.299 0.289,0.212 0.226,0.098 0.272,0.07 0.233,-0.067 0.116,-0.208 -0.053,-0.187 0.037,-0.167 0.093,-0.092 0.146,0.006 0.108,0.132 0.317,0.714 -0.065,0.316 0.071,0.866 -0.08,0.57 0.013,0.123 0.037,0.095 0.054,0.039 0.093,-0.001 0.386,0.107 0.325,0.119 0.367,0.108 0.53,0.084 0.325,-0.027 0.162,-0.003 0.329,0.025 0.864,-0.045 0.715,-0.012 0.291,0.082 0.233,0.029 0.796,-0.057 0.804,-0.027 0.435,0.181 0.474,0.295 0.267,0.219 0.048,0.125 -0.029,0.107 -0.089,0.059 -0.164,0.002 -0.375,-0.143 -0.064,0.042 0.007,0.292 -0.012,0.046 -0.08,0.262 -0.226,0.589 -0.044,0.263 -0.048,0.067 -0.059,0.037 -0.177,0.01 -0.139,0.043 -0.058,0.096 -0.09,0.198 -0.063,0.2 -0.086,0.062 -0.207,-0.108 -0.129,0.017 -0.162,0.046 -0.162,0.114 -0.111,0.142 -0.126,0.048 -0.376,-0.028 -0.071,0.02 -0.048,0.101 -0.038,0.127 -0.293,0.3 -0.111,0.481 -0.09,0.312 0.015,0.242 0.247,0.631 0.173,0.818 0.066,0.083 0.058,0.026 0.026,-0.019 -0.006,-0.169 0.011,-0.205 0.081,-0.048 0.104,0.042 0.099,0.178 0.111,0.326 0.119,0.128 0.186,0.036 0.211,-0.077 0.157,-0.147 0.064,-0.16 -0.045,-0.314 -0.01,-0.235 0.101,-0.224 0.362,-0.334 0.052,-0.103 -0.023,-0.285 10e-4,-0.268 0.137,-0.018 0.185,0.043 0.232,-0.131 0.071,-0.003 0.098,0.141 0.165,-0.024 0.122,0.582 0.125,0.513 10e-4,0.239 0.021,0.524 0.057,0.427 0.089,0.097 0.104,0.228 0.096,0.265 0.075,0.148 0.051,0.483 0.063,0.348 0.083,1.092 0.038,0.209 z m -5.425,-2.974 0.05,0.13 -0.156,-0.078 -0.117,-0.09 -0.072,-0.12 0.122,-0.063 0.173,0.221 z m 0.381,2.639 -0.488,0.106 -0.249,-0.033 0.465,-0.791 -0.016,-0.354 -0.072,-0.289 -0.236,-0.232 -0.013,-0.166 -0.106,-0.227 -0.055,-0.266 0.262,-0.085 0.213,0.152 0.03,0.084 0.046,0.217 0.105,0.226 0.368,0.465 -0.007,0.285 -0.101,0.695 -0.146,0.213 z m 2.186,-0.882 -0.13,0.089 -0.122,-0.077 -0.156,-0.294 0.077,-0.372 0.049,-0.053 0.078,0.121 0.109,0.259 0.071,0.197 0.024,0.13 z m -1.139,0.624 -0.297,0.211 0.097,-1.25 0.222,0.466 0.056,0.249 -0.078,0.324 z m 2.029,1.032 -0.102,0.246 -0.05,-0.179 0.043,-0.227 0.044,-0.125 0.029,10e-4 0.06,0.129 -0.024,0.155 z m 0.212,0.973 -0.169,0.014 -0.083,-0.089 0.039,-0.125 -0.046,-0.403 0.143,-0.042 0.073,0.002 0.041,0.119 0.038,0.218 -0.036,0.306 z\"\n\t\t\t\tid=\"BD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 488.41175,294.8954 0.013,0.093 0.077,0.039 0.269,-0.02 0.136,-0.169 0.108,-0.106 0.08,0.072 0.039,0.208 0.074,0.27 0.321,0.302 0.271,0.086 0.334,-0.059 0.132,-0.054 0.09,0.045 0.089,0.16 0.191,0.182 0.404,0.13 0.123,0.073 0.086,0.123 -0.025,0.174 -0.192,0.435 -0.025,0.128 0.026,0.043 -0.038,0.08 -0.25,0.291 -0.022,0.102 0.083,0.167 0.069,0.138 0.002,-0.027 0.383,-0.125 0.173,0.251 0.284,0.009 0.034,0.081 0.319,0.234 0.098,0.185 0.229,0.179 -0.19,0.226 0.029,0.101 0.068,0.103 0.258,0.06 0.129,0.148 0.008,0.227 0.059,0.368 -0.532,0.366 -0.151,0.408 -0.014,0.08 -0.018,-0.012 -0.058,-0.135 -0.097,0.002 -0.22,-0.057 -0.307,0.368 -0.139,0.306 -0.082,0.224 -0.124,0.181 -0.025,0.191 0.016,0.081 -0.042,0.103 -0.002,0.109 0.176,0.213 0.045,0.116 0.215,0.379 -0.067,0.137 -0.053,0.149 -0.062,0.106 -0.073,0.067 -0.222,-0.004 -0.282,0.047 -0.19,0.075 -0.098,0 -0.204,-0.188 -0.228,-0.282 -0.144,-0.135 -0.066,-0.116 -0.179,-0.049 -0.255,-0.139 -0.177,-0.152 -0.152,-0.095 -0.214,-0.047 -0.177,0.005 -0.051,-0.256 -0.022,-0.292 -0.144,-0.197 0.198,-0.768 -0.118,-0.075 -0.128,0.061 -0.186,0.184 -0.089,0.218 -0.053,0.194 -0.312,0.183 -0.495,0.067 -0.541,-0.067 -0.074,-0.049 -0.035,-0.056 0,-0.067 0.037,-0.104 0.094,-0.127 0.024,-0.18 -0.097,-0.156 -0.063,-0.061 0.025,-0.151 0.071,-0.189 0.015,-0.109 -0.367,-0.327 -0.265,-0.064 -0.257,-0.012 -0.195,-0.037 -0.114,0.016 -0.081,0.095 -0.083,0.069 -0.062,-0.082 -0.114,-0.582 -0.088,-0.088 -0.332,-0.098 -0.452,-0.035 -0.12,-0.106 -0.066,-0.263 -0.042,-0.316 -0.148,-0.304 -0.076,-0.077 -0.135,-0.134 -0.236,0.055 -0.283,0.177 -0.167,0.048 -0.064,0.019 -0.225,-0.172 -0.254,-0.269 -0.203,-0.286 -0.049,-0.159 0.062,-0.193 -0.074,-0.148 -0.109,-0.271 -0.031,-0.212 1.221,-0.752 0.744,-0.386 0.351,-0.117 0.084,0.388 0.064,0.123 0.083,0.08 0.11,0.016 0.127,-0.096 0.178,-0.101 0.285,0.047 0.207,0.093 0.073,0.097 0.138,0.092 0.2,0.022 0.387,-0.176 0.372,-0.268 0.109,-0.187 0.041,-0.169 0.22,0.112 0.194,0.024 0.086,-0.05 -0.055,-0.271 0.158,-0.145 0.175,-0.066 0.079,0.117 0.161,0.12 0.127,0.001 0.341,-0.312 0.08,0.062 0.074,0.111 z\"\n\t\t\t\tid=\"BE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 475.50575,420.8694 -0.039,0.134 -0.002,0.237 -0.05,0.375 -0.06,0.449 0.244,0.29 0.292,0.312 0.078,0.121 -0.078,0.307 0.055,0.18 0.154,0.3 0.262,0.381 0.269,0.391 0.186,0.051 0.177,0.032 0.108,0.07 0.157,0.068 0.157,0.044 0.136,0.086 0.087,0.084 0.113,0.241 0.303,0.159 0.212,0.157 -0.085,0.08 -0.264,-0.032 -0.248,-0.069 -0.033,0.116 -0.01,0.442 0.039,0.367 0.058,0.049 0.25,0.068 0.595,0.477 0.538,0.452 0.181,0.117 0.297,0.044 0.334,0.019 0.143,-0.042 0.323,-0.227 0.172,-0.025 0.159,0.006 0.086,0.036 0.155,0.186 0.145,0.28 0.041,0.207 -0.013,0.111 -0.049,0.042 -0.265,0.053 -0.115,0.042 -0.028,0.06 0.041,0.139 0.051,0.09 0.289,0.403 0.418,0.544 0.129,0.139 -0.073,0.162 -0.213,0.424 -0.159,0.177 -0.703,0.6 -0.344,-0.071 -0.723,0.121 -0.108,-0.138 -0.169,-0.018 -0.209,0.024 -0.076,0.052 -0.023,0.059 -0.075,0.083 -0.134,0.238 -0.103,0.06 -0.128,0.037 -0.158,-0.005 -0.092,0.031 0,0.118 -0.028,0.102 -0.107,0.052 -0.045,0.114 0.008,0.113 -0.062,0.052 -0.136,-0.028 -0.081,-0.032 -0.076,0.146 -0.094,0.099 -0.067,-0.001 -0.723,0.029 -0.263,0.078 -0.158,0.002 -0.006,-0.066 -0.019,-0.039 -0.912,-0.221 -0.639,-0.131 -0.648,-0.145 -0.037,0.136 -0.093,0.088 -0.14,0.006 -0.097,-0.021 -0.065,0.105 -0.108,0.139 -0.15,0.067 -0.147,0.086 -0.083,0.075 -0.06,10e-4 -0.148,-0.176 -0.197,-0.018 -0.368,0.029 -0.166,-0.048 -0.226,-0.023 -0.534,0.036 -0.853,-0.072 -0.14,0.039 -0.037,0.032 -0.845,0.008 -0.929,0.009 -0.778,0.008 -0.681,0.007 -0.001,-0.03 -0.219,-0.004 -0.024,0.059 -0.193,0.708 -0.021,0.385 0.103,0.239 0.115,0.152 0.129,0.063 0.013,0.086 -0.104,0.111 0.009,0.113 0.122,0.117 0.03,0.124 -0.062,0.129 0.015,0.31 0.09,0.491 0.003,0.318 -0.086,0.145 0.041,0.249 0.167,0.351 0.03,0.148 -0.06,0.069 -0.139,0.091 -0.141,-0.003 -0.164,-0.212 -0.072,-0.095 -0.132,-0.216 -0.113,-0.216 -0.152,-0.095 -0.15,-0.088 -0.182,-0.275 -0.176,-0.131 -0.186,0.037 -0.271,-0.051 -0.547,-0.068 -0.588,0.02 -0.244,0.063 -0.241,0.1 -0.611,0.221 -0.241,0.108 -0.183,0.276 -0.208,-0.006 -0.207,-0.088 -0.13,-0.125 -0.279,0.027 -0.269,-0.121 -0.26,-0.239 -0.192,-0.079 -0.245,-0.173 -0.067,-0.33 -0.155,-0.231 -0.142,-0.322 -0.212,-0.144 -0.244,-0.077 -0.337,0.016 -0.221,-0.129 -0.175,-0.188 0.046,-0.163 0.079,-0.232 0.009,-0.223 0.052,-0.362 -0.032,-0.453 -0.061,-0.316 0.186,-0.132 0.215,-0.118 0.134,-0.215 0.139,-0.483 0.058,-0.417 -0.043,-0.155 -0.071,-0.123 -0.057,-0.18 -0.033,-0.22 0.039,-0.192 0.163,-0.178 0.204,-0.148 0.145,-0.072 0.384,-0.074 0.48,-0.11 0.277,-0.126 0.202,-0.125 0.113,-0.1 0.115,-0.203 0.186,-0.158 0.144,-0.16 0.02,-0.443 -10e-4,-0.253 -0.107,-0.14 -0.058,-0.119 0.711,-0.348 0.005,-0.245 -0.099,-0.274 -0.139,-0.221 -0.052,-0.19 0.197,-0.225 0.175,-0.169 0.127,-0.143 0.28,-0.218 0.292,-0.057 0.263,0.082 0.779,0.514 0.135,0.033 0.162,-0.039 0.206,-0.136 0.266,-0.106 0.098,-0.344 -0.009,-0.506 0.061,-0.232 0.14,-0.042 0.448,0.097 0.117,0.005 0.13,-0.032 0.095,-0.089 -0.004,-0.164 -0.021,-0.145 0.146,-0.47 0.267,-0.354 0.539,-0.442 0.168,-0.089 0.195,-0.045 0.966,0.304 0.157,-0.075 0.236,-0.754 0.262,-0.072 0.314,-0.013 0.204,-0.065 0.106,-0.052 0.46,-0.287 0.81,-0.39 0.436,-0.168 0.085,-0.063 0.312,-0.277 0.414,-0.318 0.264,-0.064 0.365,-0.023 0.23,0.052 0.062,0.09 0.076,0.046 0.476,-0.135 0.682,0.215 z\"\n\t\t\t\tid=\"BF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 555.11975,326.8804 -0.066,0.931 -0.271,0.431 -0.409,-0.144 -0.522,0.12 -0.276,0.49 -0.157,0.145 -0.141,0.17 -0.091,0.634 -0.022,1.034 -0.198,0.125 -0.181,0.039 -0.755,0.906 0.435,0.254 0.192,0.193 0.318,0.537 0.452,0.605 0.09,0.295 -0.38,-0.066 -0.132,0.02 -0.085,0.093 -0.177,-0.019 -0.218,10e-4 -0.228,0.107 -0.126,0.045 -0.168,-0.098 -0.315,-0.294 -0.191,-0.205 -0.141,-0.052 -0.143,0.061 -0.51,0.07 -0.121,0.119 -0.236,0.132 -0.236,0.063 -0.341,0.045 -0.179,-0.006 -0.1,0.063 -0.084,0.193 -0.057,0.188 -0.05,0.076 -0.424,0.093 -0.094,0.108 -0.025,0.105 0.008,0.105 -0.338,-0.102 -0.261,0.069 -0.062,0.08 -0.054,0.116 0.03,0.123 0.096,0.12 0.091,0.324 0.033,0.323 -0.056,0.184 -0.194,0.13 -0.401,0.145 -0.389,-0.069 -0.17,0.057 -0.288,0.018 -0.265,0.038 -0.407,0.132 -0.368,0.078 -0.33,-0.269 -0.392,-0.183 -0.412,-0.109 -0.143,0.079 -0.062,0.063 -0.345,-0.238 -0.154,-0.085 -0.075,-0.092 -0.143,-0.318 -0.085,-0.01 -0.284,0.118 -0.274,-0.005 -0.165,-0.022 -0.49,0.014 -0.065,0.217 -0.06,0.033 -0.106,0.029 -0.26,-0.014 -0.333,0.161 -0.357,0.098 -0.279,0.002 -0.287,-0.047 -0.172,0.034 -0.371,0.017 -0.235,0.234 -0.366,-0.013 -0.308,-0.039 0.038,-0.074 0.062,-0.931 0.152,-0.417 -0.006,-0.086 -0.033,-0.065 -0.135,-0.067 -0.097,-0.226 -0.203,-0.595 -0.115,-0.12 -0.319,-0.126 -0.279,-0.172 -0.237,-0.228 -0.433,-0.562 0.219,-0.056 0.066,-0.115 0.219,-0.31 0.025,-0.152 -0.023,-0.086 -0.147,-0.149 -0.1,-0.327 0.075,-0.305 0.007,-0.157 -0.074,-0.156 0.077,-0.194 0.158,-0.106 0.099,-0.031 0.415,-0.021 0.263,-0.389 0.16,-0.124 0.164,-0.221 0.076,-0.081 0.072,-0.172 0.025,-0.176 -0.329,-0.247 -0.112,-0.186 -0.147,-0.206 -0.198,-0.142 -0.399,-0.244 -0.156,-0.248 -0.07,-0.322 -0.106,-0.244 -0.117,-0.159 -0.022,-0.13 -0.049,-0.159 -0.011,-0.313 0.095,-0.417 0.061,-0.148 0.135,-0.041 0.36,-0.223 0.017,-0.285 0.065,-0.178 0.114,-0.102 0.106,-0.068 0.197,0.166 0.478,0.265 0.233,0.192 -0.012,0.119 -0.109,0.118 -0.208,0.116 -0.121,0.153 -0.033,0.189 0.031,0.134 0.144,0.117 0.858,-0.153 0.87,0.079 1.168,0.259 0.774,0.09 0.573,-0.12 1.059,0.217 0.987,0.202 0.947,0.059 0.53,-0.158 0.373,-0.213 0.321,-0.402 0.793,-0.531 0.767,-0.299 1.006,-0.242 0.672,-0.082 0.094,0.082 0.855,0.489 0.381,0.002 0.308,0.087 0.113,0.129 0.077,0.032 0.41,-0.121 0.181,0.267 0.283,0.374 0.483,0.192 0.43,0.108 0.136,0.017 z\"\n\t\t\t\tid=\"BG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 616.92475,388.1464 -0.091,0.237 -0.087,-0.083 -0.22,-0.41 0.066,-0.288 -0.103,-0.412 0.049,-0.118 0.264,-0.055 0.061,0.018 -0.079,0.132 0.146,0.23 0.022,0.379 z\"\n\t\t\t\tid=\"BH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 560.64375,469.6144 -0.056,0.073 -0.257,0.522 -0.05,0.079 0.028,0.048 0.11,0.099 -0.065,0.165 -0.025,0.044 -0.049,0.153 0.027,0.141 0.062,0.052 0.167,0.068 0.25,0.049 0.295,0.118 0.199,0.021 0.047,0.085 -0.009,0.151 0.048,0.131 10e-4,0.235 -0.059,0.207 -0.304,0.097 -0.157,0.106 -0.042,0.054 0.038,0.062 0.02,0.083 -0.286,0.207 -0.294,0.269 -0.07,0.181 -0.059,0.215 -0.086,0.137 -0.224,0.198 -0.229,0.398 -0.112,0.258 -0.561,0.62 -0.499,0.31 -0.145,0.105 -0.883,-0.018 -0.067,-0.418 -0.134,-0.571 -0.304,-0.515 -0.032,-0.216 0.014,-0.416 10e-4,-0.584 -0.02,-0.314 0.007,-0.229 0.038,-0.398 -0.005,-0.238 -0.199,-0.274 -0.248,-0.292 -0.136,-0.143 -0.007,-0.115 10e-4,-0.107 0.04,-0.155 0.097,-0.173 0.109,-0.019 0.268,0.069 0.279,0.147 0.148,0.331 0.114,0.047 0.206,-10e-4 0.527,-0.043 0.131,0.005 0.239,-0.079 0.238,-0.139 0.069,-0.144 0.055,-0.325 0.05,-0.583 0.122,-0.006 0.332,0.207 0.072,0.014 0.069,-0.007 0.116,-0.103 0.141,-0.084 0.105,0.002 0.386,-0.097 0.207,0.176 0.13,0.055 z\"\n\t\t\t\tid=\"BI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 484.98575,430.0844 -0.116,0.183 -0.178,0.378 -0.008,0.295 0.424,0.622 0.049,0.063 0.109,0.097 0.059,0.116 0.051,0.306 0.029,0.345 0.034,0.232 0.205,0.326 0.013,0.131 -0.142,0.487 -0.034,0.052 -0.037,0.013 -0.22,-0.042 -0.094,0.053 -0.12,0.165 -0.073,0.165 -0.004,0.069 0.195,0.306 -0.123,0.441 -0.126,0.275 -0.226,0.157 -0.202,0.037 -0.141,0.074 -0.082,0.097 0.012,0.315 -0.298,0.287 -0.165,0.201 -0.08,0.121 0.034,0.37 -0.106,0.374 -0.184,0.295 -0.412,0.064 -0.346,0.036 -0.118,0.751 0.006,0.475 -0.032,0.485 -0.057,0.198 0.024,0.278 -0.026,0.629 -0.046,0.495 0.061,0.133 0.035,0.291 -0.002,0.301 0.088,0.209 0.096,0.183 -0.003,0.094 -0.051,0.059 -0.043,0.077 0,0.708 0.018,0.212 -0.026,0.134 -0.074,0.112 0.029,0.358 0.06,0.228 0.06,0.168 -0.058,0.14 -0.051,0.185 -0.077,0.472 -0.005,0.164 -1.177,0.115 -1.316,0.189 -0.549,0.123 -0.032,-0.095 0.468,-0.123 -0.097,-0.369 -0.292,-0.436 -0.114,-0.08 -0.059,-0.217 0.071,-0.142 -0.034,-0.096 -0.024,-0.294 -0.144,-0.325 0.263,-0.013 0,-1.045 0,-1.004 0,-0.856 0,-0.678 -0.051,-0.813 -0.007,-0.597 -0.011,-0.788 -0.095,-0.246 -0.398,-0.417 -0.109,-0.216 -0.019,-0.287 -0.089,-0.295 -0.005,-0.517 -0.007,-0.602 -0.036,-0.097 -0.432,-0.287 -0.611,-0.407 -0.466,-0.31 -0.034,-0.023 -0.047,-0.076 0.068,-0.918 0.096,-0.12 0.149,-0.378 0.072,-0.306 0.067,0.001 0.094,-0.099 0.076,-0.146 0.081,0.032 0.136,0.028 0.062,-0.052 -0.008,-0.113 0.045,-0.114 0.107,-0.052 0.028,-0.102 0,-0.118 0.092,-0.031 0.158,0.005 0.128,-0.037 0.103,-0.06 0.134,-0.238 0.075,-0.083 0.023,-0.059 0.076,-0.052 0.209,-0.024 0.169,0.018 0.108,0.138 0.723,-0.121 0.344,0.071 0.703,-0.6 0.159,-0.177 0.213,-0.424 0.073,-0.162 0.066,-0.292 -0.139,-0.539 0.008,-0.096 0.29,-0.116 0.362,-0.09 0.14,-0.007 0.093,-0.046 0.132,-0.117 0.215,-0.085 0.127,0.028 0.078,0.017 0.762,0.713 0.331,0.36 0.088,0.184 0.171,0.133 0.252,0.082 0.23,0.183 z\"\n\t\t\t\tid=\"BJ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 298.55875,412.2484 -0.043,0.003 -0.033,-0.024 -0.03,-0.044 -0.017,-0.044 0.004,-0.026 0.025,0.012 0.184,0.028 -0.02,0.033 -0.032,0.035 z\"\n\t\t\t\tid=\"BL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 797.71675,449.2464 -0.229,0.122 -0.226,0.152 -0.226,0.131 -0.105,0.103 0.037,0.144 0.055,0.317 0.03,0.249 0.079,0.099 0.062,0.099 -0.025,0.108 -0.134,0.206 0.076,0.04 -0.097,0.273 -0.144,0.202 -0.199,0.165 -0.128,0.038 -0.103,-0.07 -0.168,-0.181 -0.183,-0.251 -0.085,-0.146 -0.263,-0.02 -0.094,-0.116 -0.006,-0.142 -0.074,-0.166 -0.104,-0.178 -0.154,-0.138 -0.207,-0.107 -0.088,-0.077 0.32,0.005 0.341,-0.045 0.351,-0.149 0.338,-0.18 0.284,-0.206 0.267,-0.232 0.279,-0.183 0.435,-0.213 0.146,0.017 -0.001,0.151 -0.057,0.179 z m 0,0 0.318,0 0.079,0.092 0.167,0.325 0.109,0.326 0.035,0.497 0.133,0.211 -0.021,0.043 -0.08,0.036 -0.124,0.015 -0.214,-0.048 -0.178,-0.073 -0.156,-0.538 -0.069,-0.304 0.006,-0.363 -0.005,-0.219 z\"\n\t\t\t\tid=\"BN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 311.67075,520.3484 0.056,-0.493 -0.057,-0.427 -0.057,-0.11 -0.825,-0.508 -0.749,-0.462 -0.98,-0.604 -1.264,0.017 -1.309,0.017 -1.247,0.27 -1.227,0.265 -0.582,0.126 -1.167,0.252 -0.687,0.116 -0.18,0.486 -0.269,0.73 -0.267,0.427 -0.308,0.449 -0.434,0.633 -10e-4,0.77 0,0.733 -0.305,1.035 -0.26,0.88 -0.25,0.852 -0.172,0.589 -0.064,0.15 -0.04,-0.048 -0.222,-0.176 -0.198,-0.332 -0.054,-0.151 -0.025,-0.006 -1.19,0.01 -1.145,0.011 -0.117,0.07 -0.165,-10e-4 -0.121,-0.065 -0.118,0.005 -0.171,0.064 -0.153,0.133 -0.437,0.884 -0.216,0.378 -0.161,0.339 -0.117,0.581 -0.049,0.097 -0.136,-0.201 -0.201,-0.531 -0.09,-0.303 -0.129,-0.343 -0.23,-0.431 -0.265,-0.13 -0.165,-0.043 -0.237,-0.082 -0.419,-0.103 -0.183,-0.021 -1.199,-0.014 -0.095,-0.011 -0.47,0.047 -0.238,-0.032 -0.25,-0.24 -0.557,-0.422 -0.112,-0.134 -0.214,-0.088 -0.127,-0.009 -0.078,0.083 -0.096,0.352 -0.114,0.318 -0.119,0.183 -0.398,0.135 -0.371,0.141 -0.204,0.033 -0.109,0.159 -0.048,0.223 -0.091,0.201 -0.536,0.303 -0.119,0.127 -0.062,0.299 -0.299,0.371 -0.092,0.145 -0.47,0.102 -0.611,0.11 -0.357,-0.007 -0.244,-0.029 -0.074,-0.067 -0.165,-0.105 -0.028,-0.117 -0.002,-0.166 0.046,-0.299 -0.023,-0.414 -0.192,-0.482 0.015,-0.155 -0.025,-0.236 -0.097,-0.443 -0.248,-0.223 -0.07,-0.368 -0.029,-0.323 -0.209,-0.404 -0.034,-0.514 0.005,-0.44 -0.328,-0.511 -0.342,-0.542 -0.276,-0.074 -0.068,-0.065 -0.03,-0.155 -0.006,-0.241 0.022,-0.146 0.213,-0.237 0.008,-0.036 -0.043,-0.05 -0.55,-0.354 -0.139,-0.103 -0.043,-0.126 0.004,-0.114 0.131,-0.116 0.067,-0.086 -0.129,-0.252 0.013,-0.228 -0.082,-0.098 0.009,-0.074 0.08,-0.063 0.357,-0.073 0.111,-0.231 0.004,-0.192 -0.054,-0.136 -0.33,-0.343 -0.007,-0.058 0.346,-0.477 0.248,-0.313 0.068,-0.064 -0.021,-0.068 -0.061,-0.083 -0.157,-0.12 -0.204,-0.132 -0.169,-0.16 -0.22,-0.237 -0.277,-0.203 -0.205,-0.202 -0.105,-0.168 -0.002,-0.172 -0.028,-0.285 -0.134,-0.462 -0.036,-0.312 -0.058,-0.345 -0.058,-0.225 -0.032,-0.217 -0.096,-0.235 -0.053,-0.172 0.077,-0.121 0.077,-0.094 -0.009,-0.059 -0.529,-0.251 -0.088,-0.064 -0.125,-0.502 -0.384,-0.446 -0.045,-0.332 0,-0.004 0,-0.13 -0.031,-0.209 -0.117,-0.163 -0.175,-0.113 -0.055,-0.134 0.058,-0.141 0.341,-0.279 0.183,-0.047 0.048,-0.142 0.111,-0.112 0.321,-0.41 0.189,-0.269 0.189,-0.162 0.219,-0.112 0.095,-0.094 -0.05,-0.289 0.015,-0.195 0.076,-0.123 0.219,-0.13 0.197,-0.099 0.042,-0.049 -0.017,-0.073 -0.181,-0.148 -0.373,-0.129 -0.247,0.013 -0.151,-0.114 -0.083,-0.097 -0.489,-1.196 -0.081,-0.279 0.006,-0.108 0.328,-0.59 0.133,-0.193 0.23,-0.278 -0.041,-0.11 -0.403,-0.461 -0.124,-0.219 0.003,-0.219 0.04,-0.265 0.234,-0.143 0.067,-0.216 0.049,-0.213 0.1,-0.07 0.102,-0.121 0.121,-0.174 0.188,-0.152 0.111,-0.116 0.024,-0.323 0.092,-0.088 0.257,-0.103 0.026,-0.083 -0.058,-0.217 -0.128,-0.229 -0.104,-0.112 -0.137,-0.562 -0.143,-0.279 0.06,-0.112 0.099,-0.142 0.096,-0.281 0.031,-0.327 -0.024,-1.202 0.006,-0.237 0.126,-0.165 0.185,-0.192 0.157,-0.073 0.148,-0.121 -0.011,-0.227 0.098,-0.134 0.121,-0.168 -0.375,-0.661 -0.33,-0.581 -0.309,-0.545 -0.358,-0.63 -0.235,-0.415 -0.293,-0.515 -0.257,-0.452 -0.351,-0.616 0.326,-0.011 0.657,0.022 0.636,0.11 0.431,0.048 0.18,0.094 0.04,0.151 0.119,0.07 0.138,-0.027 0.156,-0.01 0.349,-0.154 0.282,-0.103 0.243,-0.123 0.125,-0.12 0.303,-0.421 0.244,-0.232 0.225,-0.081 0.439,-0.034 0.139,0.066 0.179,-0.008 0.155,-0.239 0.236,-0.264 0.465,-0.329 0.236,-0.09 0.147,-0.115 0.252,-0.017 0.222,-0.12 1.071,-0.831 0.434,-0.214 0.27,-0.039 0.224,-0.051 0.38,-0.119 0.952,-0.116 0.611,-0.047 0.196,0.115 0.22,-0.033 0.187,-0.186 0.155,-0.06 0.114,0.005 0.164,0.22 0.08,0.234 -0.053,0.178 0.01,0.259 0.073,0.338 -0.041,0.302 -0.231,0.394 -0.116,0.161 -0.029,0.166 0.02,0.224 0.106,0.364 0.191,0.506 0.029,0.374 -0.134,0.243 -0.062,0.21 0.011,0.177 0.047,0.124 0.086,0.071 0.047,0.141 0.01,0.212 0.112,0.205 0.213,0.198 0.087,0.188 -0.04,0.18 0.011,0.113 0.062,0.044 0.058,-0.036 0.078,-0.05 0.069,0.018 0.15,0.251 0.019,0.051 0.081,0.208 0.025,0.157 0.219,0.088 0.237,0.069 0.131,0.082 0.262,0.249 0.22,0.164 0.276,0.134 0.091,0.215 0.169,0.324 0.465,0.124 0.542,0.062 0.346,0.071 0.422,-0.172 0.279,0.024 0.289,0.117 0.123,0.08 0.215,0.167 0.333,0.214 0.272,0.079 0.194,-0.119 0.179,-0.042 0.139,0.05 0.073,0.233 0.073,0.157 0.161,0.119 0.345,0.305 0.195,0.125 0.22,-0.009 0.454,0.201 0.484,0.195 0.25,0.032 0.246,-0.029 0.163,0.076 0.066,0.235 0.421,0.47 0.198,0.185 0.236,0.158 0.601,-0.003 0.18,0.047 0.268,-0.042 0.806,-0.08 0.146,-0.025 0.456,0.205 0.539,0.296 0.357,0.232 0.249,0.128 0.13,0.208 0.106,0.217 0.049,0.234 -0.065,0.232 -0.098,0.094 -0.033,0.15 0.041,0.225 0.179,0.201 0.066,0.247 0.098,0.438 0.11,0.138 0.071,1.357 -0.361,0.011 -0.509,0.016 0.149,0.13 0.421,0.506 0.387,0.467 0.062,0.75 0.038,0.473 0.055,0.668 0.032,0.399 0.967,0.036 1.114,0.041 1.339,0.05 1.177,0.044 0.116,-0.005 0.204,-0.054 0.136,-0.071 0.083,0.002 0.014,0.162 -0.028,0.204 10e-4,0.235 -0.337,0.464 -0.021,0.146 0.051,0.612 0.119,0.496 0.06,0.448 0.135,0.14 0.399,0.237 0.603,0.438 0.241,0.057 0.204,-0.06 0.122,0.179 0.024,0.289 0.333,0.807 0.211,0.513 0.097,0.179 0.158,0.092 -0.03,0.067 -0.131,0.027 -0.059,0.096 -0.183,0.576 -0.241,0.759 -0.163,0.535 0.147,0.008 0.006,0.148 0.033,0.226 -0.181,0.028 -0.054,0.081 -0.208,0.439 -0.272,0.575 -0.282,0.596 -0.167,0.353 0.285,0.261 0.475,0.436 -0.075,0.121 -0.204,0.061 -0.171,0.042 -0.131,0.165 -0.073,0.121 z\"\n\t\t\t\tid=\"BO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 293.23075,367.6474 -0.252,0.112 -0.07,-0.009 -0.05,-0.038 0.257,-0.112 0.215,-0.262 0.074,0.017 z\"\n\t\t\t\tid=\"BM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 283.47675,428.8064 -0.136,0.321 -0.078,-0.143 -0.014,-0.255 -0.056,-0.1 -0.116,-0.061 -0.063,-0.084 0.005,-0.126 0.42,0.202 0.038,0.246 z m 14.785,-15.444 -0.068,0.061 -0.06,-0.005 -0.04,-0.059 -0.007,-0.098 0.057,0.027 0.021,0.015 0.018,0.02 0.079,0.039 z m -0.828,-0.373 -0.025,0.011 -0.036,-0.027 0.006,-0.048 0.03,-0.02 0.023,0.014 0.018,0.038 -0.016,0.032 z\"\n\t\t\t\tid=\"BQ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 316.37675,457.5064 0.084,0.027 0.188,0.023 0.446,0.107 0.582,0.121 0.159,-0.042 0.095,-0.085 0.022,-0.249 0.018,-0.176 -0.131,-0.155 -0.163,-0.176 -0.15,-0.219 -0.18,-0.063 0.023,-0.113 0.117,-0.117 0.12,-0.064 0.069,-0.079 0.076,-0.292 0.05,-0.052 0.051,-0.013 0.06,0.011 0.119,0.076 0.458,0.232 0.201,-0.035 0.768,-0.061 0.116,-0.134 0.163,-0.03 0.276,-0.134 0.109,-0.009 0.098,0.032 0.123,-0.025 0.181,-0.125 0.076,-0.013 0.029,0.138 0.117,0.143 0.142,0.131 0.068,0.03 0.238,-0.042 0.125,0.037 0.054,0.122 0.016,0.106 0.1,0.09 0.128,0.002 0.068,0.037 0.117,0.058 0.099,0.133 0.23,0.106 0.393,0.148 0.183,0.002 0.17,0.045 0.104,0.045 0.113,-0.083 0.402,-0.229 0.196,-0.128 0.132,-0.097 0.099,-0.092 0.074,-0.024 0.05,0.055 0.043,0.074 0.144,0.043 0.336,0.086 0.154,0.024 0.216,-0.073 0.185,-0.125 0.088,-0.043 0.137,0.125 0.094,0.175 0.063,0.077 0.139,-0.018 0.275,0.027 0.203,0.056 0.126,-0.005 0.172,-0.078 0.093,-0.154 0.244,-0.141 0.232,-0.13 0.133,-0.173 0.197,-0.288 0.066,-0.123 0.014,-0.208 0.277,-0.604 0.105,-0.111 0.062,-0.191 0.111,-0.221 0,-0.185 0.081,-0.179 0.159,-0.154 0.117,-0.097 0.188,-0.26 0.131,-0.245 0.327,-0.543 0.025,-0.154 0.13,-0.092 0.043,-0.117 0.139,-0.145 0.146,-0.114 0.063,-0.169 0.107,-0.175 0.234,-0.131 0.087,-0.06 0.266,-0.482 0.03,-0.215 0.24,-0.008 0.377,0.249 0.301,0.367 0.403,1.179 0.067,1.089 0.163,0.57 0.469,1.188 0.03,0.22 0.075,0.266 0.148,0.282 0.164,0.464 0.006,0.086 -0.106,0.126 0.156,0.009 0.141,0.075 0.092,0.294 0.117,0.199 0.212,0.272 0.434,0.089 0.328,0.033 0.373,0.154 0.274,0.197 0.212,0.669 -0.069,0.42 0.021,0.296 -0.11,0.116 -0.307,0.194 -0.067,0.103 -0.627,0.5 -0.137,0.236 -0.336,0.317 -0.333,0.604 -0.487,0.552 -0.172,0.14 -0.263,0.032 -0.16,0.085 -0.378,0.451 -0.508,0.15 -0.047,0.261 -0.293,0.596 -0.259,0.326 -0.165,0.11 -0.415,0.594 -0.053,0.26 0.002,0.455 -0.277,0.277 -0.288,0.176 -0.036,0.389 -0.13,0.133 -0.111,0.086 -0.586,-0.102 -0.91,0.423 -0.311,0.105 0.993,0.021 0.319,0.225 0.699,-0.149 0.846,-0.536 0.323,-0.113 0.656,-0.364 0.267,-0.243 0.486,-0.291 0.104,-0.128 0.272,-0.136 0.148,0.173 0.012,0.109 -0.224,0.213 0.058,0.137 0.147,0.172 0.053,0.238 0.02,0.181 0.091,0.317 0.301,0.429 0.01,0.142 -0.042,0.187 0.144,0.154 0.149,0.091 0.512,0.462 0.4,-0.258 0.247,-0.075 0.157,-0.108 0.33,-0.072 0.27,0.108 0.515,0.155 0.377,-0.165 0.762,-0.378 -0.238,0.669 -0.173,0.614 -0.131,0.248 -0.13,0.668 -0.128,0.179 -0.104,0.204 0.17,-0.071 0.146,-0.097 0.187,-0.257 0.14,-0.447 0.552,-1.193 0.158,-0.106 0.459,-0.136 0.79,-0.954 0.309,0.003 0.198,0.219 0.187,0.13 0.048,-0.261 0.27,-0.106 -0.285,-0.129 -0.046,-0.117 -0.027,-0.195 0.194,-0.264 -0.116,-0.234 0.402,-0.294 -0.031,-0.221 0.144,-0.182 0.182,-0.188 0.206,-0.091 0.038,-0.161 0.13,-0.066 0.102,-0.024 0.201,0.18 0.218,-0.212 0.212,-0.083 0.095,0.037 0.119,0.094 0.125,0.04 0.101,-0.017 0.263,-0.136 0.243,0.219 0.146,0.048 -0.04,-0.123 -0.077,-0.114 0.06,-0.093 0.115,-0.058 0.364,0.052 0.191,0.098 0.207,0.181 0.287,0.013 0.226,-0.019 0.142,0.102 0.231,-10e-4 0.116,0.159 0.352,0.223 0.076,0.151 0.283,0.073 0.266,0.093 0.283,0.025 0.286,-0.022 0.012,0.191 0.209,0.052 0.269,-0.042 0.203,0.235 0.543,0.177 0.376,0.271 0.247,-0.048 0.276,0.072 0.296,0.589 0.067,0.418 0.132,-0.058 0.123,-0.187 0.158,-0.342 0.297,-0.113 0.142,0.131 0.297,0.21 0.256,0.23 0.108,0.148 0.193,0.024 -0.161,0.182 0.162,-0.019 0.195,-0.129 0.167,0.268 0.126,0.292 0.025,0.297 -0.119,0.17 -0.104,0.107 -0.116,0.21 -0.137,0.038 -0.137,0.068 0.156,0.153 0.107,0.147 0.234,-0.398 0.165,-0.112 0.238,-0.062 0.124,0.283 0.026,0.268 -0.388,0.111 -10e-4,0.211 -0.116,0.12 -0.076,0.138 -0.061,0.288 -0.079,0.239 -0.231,1.06 -0.004,0.175 0.282,-0.187 0.52,-0.54 0.158,-0.575 0.205,-0.567 0.223,-0.178 0.139,0 0.207,0.062 0.012,0.186 -0.032,0.107 -0.222,0.282 -0.094,0.154 0.091,0.152 0.503,-0.467 0.226,-0.164 0.192,0.033 0.381,-0.216 0.768,-0.045 0.058,-0.247 0.153,-0.105 0.422,0.028 0.822,0.22 0.293,0.18 0.439,0.167 0.231,0.199 0.965,0.366 0.701,0.039 0.347,-0.166 0.433,0.174 0.229,0.195 0.45,0.105 0.454,0.055 0.347,-0.14 0.896,-0.046 1.125,-0.207 0.671,0.049 0.76,0.135 0.542,0.347 0.456,0.196 0.276,0.193 0.445,0.201 0.949,0.539 0.333,0.312 0.588,0.424 0.591,0.178 0.319,0.444 0.253,0.2 0.626,0.75 0.71,0.525 0.475,0.525 0.912,0.338 0.356,0.558 0.617,0.068 0.263,0.083 0.32,0.235 0.439,0.131 0.572,-0.037 0.631,0.027 0.511,-0.11 1.208,0.209 0.19,0.103 0.25,0.237 0.441,0.885 0.263,0.982 0.13,0.751 0.301,0.584 0.164,1.098 0.14,0.346 0.011,0.267 0.119,0.06 0.08,0.742 -0.031,0.299 -0.116,0.389 -0.008,0.174 0.017,0.11 -0.051,0.163 -0.016,0.156 0.117,0.35 0.006,0.28 -0.157,0.34 -0.214,0.889 -0.536,1.475 -0.514,0.848 -0.719,0.876 -0.469,0.458 -0.186,0.047 -0.17,-0.091 0.121,0.242 -0.105,0.213 -0.476,0.646 -0.473,0.422 -0.491,0.734 -0.037,0.017 -0.629,0.284 -0.372,0.232 -0.476,0.422 -0.437,0.666 -0.09,0.085 -0.161,-0.047 0.005,0.338 -0.376,0.536 -0.115,0.079 0.003,-0.152 0.065,-0.116 0.03,-0.123 -0.002,-0.146 -0.105,0.106 -0.223,0.402 0.075,0.294 -0.161,0.445 -0.616,1.272 -0.754,1.071 -0.174,0.331 -0.619,0.723 -0.455,0.349 -0.128,0.002 -0.145,-0.03 -0.073,-0.556 -0.362,-0.336 -0.104,-0.059 -0.148,0.356 -0.124,0.098 -0.179,0.021 0.191,0.155 0.056,0.18 -0.195,0.36 -0.006,0.327 -0.348,0.361 -0.202,0.264 -0.102,0.331 -0.062,0.309 0.153,-0.084 0.073,0.065 0.057,0.096 -0.035,0.142 -0.112,0.269 0.017,0.669 -0.037,0.152 0.111,0.165 0.118,-0.281 0.068,0.079 -0.329,1.796 0.129,0.81 0.048,0.919 0.148,0.899 0.163,0.804 0.013,0.064 -0.225,0.935 -0.288,0.924 -0.173,0.755 -0.109,0.816 -0.109,0.393 -0.035,0.402 0.125,0.954 0.047,0.181 -0.349,0.426 -0.377,0.207 -0.208,0.206 -0.46,0.77 -0.25,1.14 -0.006,0.607 0.118,1.274 -0.088,0.521 -0.146,0.349 -0.172,0.229 -0.439,0.275 -0.394,0.671 -0.171,0.706 -0.27,0.258 -0.055,0.396 -0.217,0.428 -0.563,0.639 -0.366,0.186 -0.174,0.179 -0.111,0.375 -0.353,0.618 -0.26,0.803 0.068,0.273 0.004,0.042 0.095,0.93 -0.035,0.237 -0.343,0.257 -1.292,0.48 -0.344,0.199 -0.771,0.818 -0.048,0.193 0.032,0.276 0.126,0.159 -0.13,0.172 -0.154,0.309 -0.225,-0.019 -1.287,0 -0.696,0.098 -0.362,-0.019 -0.163,-0.074 -0.182,-0.121 -0.055,-0.159 0.099,-0.24 -0.059,-0.143 -0.191,0.005 -0.209,0.068 -0.036,0.143 0.015,0.103 0.078,0.149 0.043,0.184 -0.086,0.159 -0.408,0.021 -0.458,0.146 -0.572,0.061 -0.456,0.106 -0.21,-0.134 0.21,-0.067 0.302,0.032 0.324,-0.111 -0.076,-0.131 -0.458,-0.168 -0.509,0.103 -0.282,0.201 -0.617,-0.019 -0.756,0.153 -0.123,0.156 0.021,0.302 0.147,0.066 0.145,0.138 -0.139,0.129 -0.135,0.057 -0.798,0.141 -0.74,0.591 -0.309,0.074 -0.275,0.261 -0.028,0.223 -0.087,0.135 -0.176,0.007 -0.386,-0.122 -0.501,-0.003 -0.362,0.097 -1.849,0.961 -0.664,0.386 -0.757,0.787 -1.277,0.884 -0.671,0.529 -0.127,0.137 -0.106,0.007 -0.21,0.11 0.083,0.091 0.143,0.008 -0.059,0.309 -0.267,0.211 -0.501,0.555 -0.111,-0.041 0.159,-0.289 -0.246,-0.011 -0.362,-0.106 -0.157,0.119 0.087,0.286 -0.136,0.123 -0.247,0.014 -0.224,-0.034 -0.246,-0.209 0.111,0.379 0.52,0.092 0.216,0.089 0.081,0.146 -0.404,0.677 -0.338,0.088 -0.037,0.096 0.186,0 0.103,0.188 -0.121,0.758 -0.167,0.144 -0.098,0.004 -0.097,0.13 0.133,0.248 0.138,0.181 -0.019,0.352 -0.052,0.291 -0.003,0.283 0.174,0.548 0.063,0.563 0.07,0.205 0.04,0.228 -0.116,0.213 0.066,0.342 -0.198,0.583 0.104,0.842 -0.042,0.792 -0.078,0.417 -0.126,0.326 -0.292,0.42 -0.006,0.421 -0.629,0.393 -0.695,0.549 -0.642,0.652 -0.691,0.921 -0.806,1.406 -0.747,2.017 -0.899,1.532 -0.36,0.555 -0.486,0.622 -0.647,0.726 -0.866,0.728 -0.948,0.65 -0.342,0.293 -0.334,0.413 -0.083,-0.171 0.072,-0.282 -0.046,-0.211 -0.01,-0.273 0.191,-0.051 0.286,0.174 0.146,-0.118 0.106,-0.116 0.345,-0.073 0.658,-0.713 0.488,-0.263 0.275,-0.449 0.047,-0.238 -0.011,-0.483 0.156,-0.123 0.353,0.042 0.072,-0.138 -0.031,-0.152 0.069,-0.332 0.479,-0.294 0.227,-0.354 -0.076,-0.902 0.088,-0.041 0.197,0.14 0.093,-0.058 0.099,-0.395 -0.048,-0.205 -0.232,-0.054 -0.802,0.445 -0.261,-0.019 -0.043,-0.349 -0.39,-0.16 -0.152,-0.29 -0.045,-0.198 -0.135,-0.081 0.008,0.343 0.037,0.333 0.35,0.389 -0.085,0.155 -0.166,0.18 -0.116,0.401 0.013,0.521 -0.094,-0.159 -0.12,-0.092 -0.049,0.56 -0.232,0.215 -0.073,0.211 0.061,0.245 -0.12,0.169 -0.591,0.455 -0.589,0.311 -0.128,0.146 -0.063,0.348 -0.09,0.357 -0.261,0.315 -0.207,0.626 0.005,0.27 0.069,0.398 0.111,0.262 -0.176,0.175 -0.237,0.34 -0.188,0.384 -0.468,1.445 -0.403,0.875 -0.311,0.429 -0.443,0.453 -1.262,1.141 -0.076,-0.016 -0.185,-0.092 -0.155,-0.109 -0.035,-0.073 -0.018,-0.109 0.021,-0.411 -0.003,-1.102 0.055,-0.208 0.082,-0.134 0.246,-0.194 0.239,-0.277 0.27,-0.353 0.249,-0.28 -0.089,-0.188 -0.208,-0.182 -0.369,-0.146 -0.355,-0.258 -0.315,-0.332 -0.146,-0.345 -0.134,-0.372 -0.127,-0.293 -0.042,-0.134 -0.125,-0.056 -0.198,-0.149 -0.124,-0.139 -0.181,-0.08 -0.324,-0.087 -0.337,-0.153 -0.419,-0.362 -0.302,-0.401 -0.149,-0.265 -0.159,-0.186 -0.865,-0.308 -0.393,-0.367 -0.155,0.115 -0.231,-0.112 -0.228,-0.176 -0.068,-0.136 -0.096,-0.139 -0.09,-0.159 -0.058,-0.152 -0.234,-0.267 -0.303,-0.288 -0.128,-0.082 -0.068,0.024 -0.065,0.11 -0.042,0.107 -0.114,0.071 -0.141,0.132 -0.145,0.162 -0.185,0.107 -0.22,0.037 -0.148,-0.005 -0.03,-0.064 -0.008,-0.221 0.055,-0.503 -0.128,-0.194 -0.171,-0.208 -0.197,-0.277 -0.648,-0.587 -0.883,-0.843 -0.312,-0.257 -0.293,-0.02 -0.268,0.029 -0.247,0.111 -0.187,0.389 -0.077,0.06 -0.476,-0.008 -0.473,-0.063 -0.159,-0.237 0.126,-0.154 0.445,-0.342 0.246,-0.305 0.047,-0.267 0.213,-0.24 0.38,-0.212 0.423,-0.39 0.466,-0.568 0.284,-0.418 0.1,-0.27 0.183,-0.208 0.266,-0.146 0.232,-0.304 0.199,-0.462 0.271,-0.367 0.344,-0.272 0.193,-0.226 0.041,-0.179 0.097,-0.114 0.154,-0.05 0.074,-0.094 -0.005,-0.138 0.042,-0.094 0.088,-0.05 0.148,0.018 0.208,0.085 0.125,-0.016 0.043,-0.117 -0.055,-0.134 -0.153,-0.15 0.058,-0.163 0.402,-0.264 0.296,-0.1 0.188,-0.163 0.178,-0.259 0.289,-0.18 0.399,-0.102 0.106,-0.097 -0.015,-0.125 0.082,-0.09 0.236,-0.065 0.128,-0.122 0.021,-0.179 0.076,-0.166 0.131,-0.153 0.146,-0.057 0.161,0.039 0.151,-0.058 0.142,-0.155 0.17,-0.072 0.198,0.01 0.102,-0.034 0.34,-0.072 0.188,-0.13 0.154,-0.291 0.137,-0.112 0.12,0.065 0.207,-0.097 0.294,-0.259 0.056,-0.005 0.217,-0.121 0.224,-0.448 0.115,-0.299 -0.027,-0.245 -0.074,-0.175 0.025,-0.257 0.074,-0.697 0.02,-0.285 0.119,-0.198 -0.008,-0.196 -0.212,-0.44 -0.214,-0.386 -0.115,-0.653 -0.076,-0.248 -0.178,-0.066 -0.162,-0.216 -0.204,-0.019 -0.096,-0.083 -0.099,-0.068 -0.145,0.02 -0.124,0.126 -0.229,0.004 -0.145,0.052 -0.17,0.112 -0.162,-0.051 -0.102,-0.099 -0.219,-10e-4 0.015,-0.443 0.386,-0.656 0.104,-0.305 -0.05,-0.173 0.115,-0.609 0.281,-1.042 0.09,-0.681 -0.102,-0.321 -0.003,-0.224 0.145,-0.19 0.07,-0.057 -0.362,-0.232 -0.195,-0.212 -0.25,-0.151 -0.269,-0.121 -0.13,0.051 -0.139,0.07 -0.269,0.111 -0.306,0.192 -0.158,0.07 -0.279,0.071 -0.315,0.061 -0.26,-0.04 -0.223,-0.041 -0.14,-0.121 -0.074,-0.263 0,-0.222 -0.046,-0.322 -0.167,-0.182 -0.056,-0.141 -0.009,-0.171 0.019,-0.191 0.046,-0.141 -0.028,-0.171 -0.074,-0.121 0.019,-0.211 -0.037,-0.292 -0.111,-0.181 -0.056,-0.21 0,-0.21 -0.083,-0.21 -0.009,-0.23 0.074,-0.21 0.028,-0.21 -0.083,-0.15 -0.158,-0.09 -0.121,-0.24 -0.019,-0.31 -0.13,-0.169 -0.139,-0.14 -0.158,0 -0.241,-0.08 -0.213,0.01 -0.344,-0.01 -0.158,-0.05 -0.083,-0.109 -0.213,-0.149 -0.121,-0.259 -0.148,-0.05 -0.214,0.08 -0.074,0.1 -0.083,0.14 -0.148,0.16 -0.195,-0.01 -0.204,0.09 -0.195,0.01 -0.26,0.02 -0.26,-0.08 -0.315,-0.09 -0.27,-0.06 -0.26,0.06 -0.176,-0.05 -0.232,-0.03 -0.26,-0.02 -0.204,-0.16 -0.223,-0.089 -0.121,0.03 -0.158,0.1 -0.167,-0.02 -0.214,-0.08 -0.083,-0.189 0.019,-0.12 0.046,-0.12 0.083,-0.169 -0.046,-0.179 0.019,-0.159 0.037,-0.139 0.037,-0.159 -0.028,-0.149 -0.009,-0.159 -0.019,-0.149 -0.028,-0.159 0.111,-0.228 0.093,-0.188 -0.056,-0.158 0.019,-0.109 0.074,-0.178 0.093,-0.218 -0.009,-0.406 -0.083,-0.237 -0.091,-0.064 -0.023,-0.071 0.044,-0.094 -0.048,-0.096 -0.019,-0.099 0.048,-0.086 -0.066,-0.17 -0.133,-0.049 -0.046,-0.049 -0.046,-0.188 -0.037,-0.217 0.019,-0.167 -0.065,-0.147 -0.093,-0.089 -0.093,-0.157 -0.093,-0.118 -0.037,-0.167 -0.062,-0.216 0.185,-0.04 0.073,-0.121 0.13,-0.164 0.171,-0.043 0.204,-0.06 0.075,-0.121 -0.475,-0.436 -0.285,-0.261 0.167,-0.354 0.282,-0.595 0.272,-0.576 0.208,-0.438 0.053,-0.081 0.182,-0.028 -0.033,-0.226 -0.006,-0.148 -0.146,-0.008 0.163,-0.534 0.241,-0.76 0.183,-0.575 0.059,-0.096 0.131,-0.027 0.03,-0.066 -0.158,-0.092 -0.097,-0.179 -0.211,-0.513 -0.333,-0.808 -0.024,-0.289 -0.122,-0.178 -0.204,0.06 -0.241,-0.057 -0.603,-0.438 -0.399,-0.237 -0.135,-0.14 -0.06,-0.449 -0.119,-0.495 -0.051,-0.612 0.021,-0.146 0.337,-0.464 -10e-4,-0.234 0.028,-0.205 -0.014,-0.162 -0.083,-0.002 -0.135,0.071 -0.205,0.054 -0.116,0.005 -1.177,-0.044 -1.339,-0.05 -1.114,-0.042 -0.967,-0.036 -0.032,-0.399 -0.055,-0.667 -0.039,-0.474 -0.062,-0.75 -0.388,-0.467 -0.421,-0.506 -0.148,-0.13 0.509,-0.016 0.361,-0.011 -0.071,-1.357 -0.11,-0.138 -0.098,-0.438 -0.066,-0.248 -0.179,-0.2 -0.041,-0.226 0.033,-0.15 0.098,-0.093 0.065,-0.232 -0.049,-0.233 -0.106,-0.217 -0.13,-0.208 -0.249,-0.128 -0.356,-0.232 -0.54,-0.295 -0.456,-0.206 -0.146,0.025 -0.806,0.08 -0.268,0.042 -0.18,-0.047 -0.601,0.002 -0.236,-0.158 -0.198,-0.185 -0.421,-0.47 -0.065,-0.235 -0.163,-0.075 -0.247,0.029 -0.25,-0.032 -0.484,-0.195 -0.454,-0.2 -0.22,0.008 -0.195,-0.125 -0.345,-0.305 -0.161,-0.119 -0.073,-0.158 -0.073,-0.232 -0.139,-0.05 -0.179,0.042 -0.194,0.119 -0.272,-0.079 -0.333,-0.214 -0.215,-0.167 -0.123,-0.079 -0.289,-0.117 -0.279,-0.024 -0.422,0.172 -0.346,-0.071 -0.542,-0.062 -0.464,-0.125 -0.169,-0.324 -0.091,-0.214 -0.276,-0.134 -0.22,-0.164 -0.262,-0.249 -0.13,-0.083 -0.237,-0.069 -0.219,-0.088 -0.024,-0.157 -0.082,-0.207 -0.019,-0.051 -0.149,-0.251 -0.07,-0.018 -0.077,0.05 -0.058,0.036 -0.063,-0.044 -0.011,-0.112 0.04,-0.18 -0.086,-0.188 -0.213,-0.198 -0.112,-0.205 -0.01,-0.212 -0.047,-0.141 -0.085,-0.072 -0.048,-0.124 -0.01,-0.176 0.062,-0.21 0.134,-0.243 -0.029,-0.375 -0.191,-0.506 -0.106,-0.364 -0.02,-0.224 0.029,-0.166 0.116,-0.161 0.231,-0.395 0.041,-0.301 -0.073,-0.339 -0.01,-0.259 0.053,-0.178 -0.08,-0.233 -0.164,-0.22 -0.114,-0.005 -0.155,0.06 -0.187,0.186 -0.22,0.033 -0.195,-0.115 -0.612,0.048 -0.951,0.115 -0.38,0.119 -0.224,0.051 -0.271,0.039 -0.434,0.214 -1.071,0.831 -0.222,0.121 -0.252,0.017 -0.147,0.115 -0.236,0.09 -0.464,0.329 -0.236,0.264 -0.155,0.239 -0.179,0.008 -0.139,-0.066 -0.439,0.033 -0.225,0.082 -0.244,0.232 -0.303,0.42 -0.125,0.12 -0.244,0.124 -0.282,0.103 -0.349,0.154 -0.156,0.01 -0.138,0.027 -0.119,-0.07 -0.04,-0.151 -0.18,-0.095 -0.43,-0.048 -0.637,-0.11 -0.657,-0.021 -0.326,0.01 -0.268,0.007 -0.465,-0.059 -0.339,-0.01 -0.297,0.149 -0.432,0.185 -0.197,0.047 -0.145,0.007 -0.141,-0.023 -0.165,-0.096 -0.231,-0.221 -0.178,0.085 -0.128,0.095 0.002,-0.481 0.003,-0.723 0.003,-0.637 0.002,-0.509 0.002,-0.594 0.002,-0.419 0.121,-0.159 0.074,-0.178 -0.089,-0.238 0.02,-0.218 0.062,-0.152 0.081,-0.148 -0.187,0.074 -0.082,0.041 -0.1,0.112 -0.242,0.152 -0.162,0.152 -0.191,0.124 -0.242,0.273 -0.199,0.15 -0.207,0.096 -0.344,0.321 -0.285,0.064 -0.754,0.049 -0.784,-0.001 -0.717,-10e-4 -0.108,-0.004 0.007,-0.265 0.018,-0.187 -0.245,-0.197 -0.017,-0.243 -0.065,-0.168 -0.082,-0.205 -0.171,-0.131 -0.241,-0.051 -0.395,-0.113 -0.586,-0.118 -0.56,-0.008 -0.549,0.011 0.335,-0.412 0.335,-0.411 -0.01,-0.358 -0.271,-0.312 -0.146,-0.194 -0.226,-0.267 -0.279,-0.185 -0.152,-0.246 0.014,-0.149 -0.024,-0.098 -0.106,-0.057 -0.106,-0.09 -0.146,-0.099 -0.171,-0.131 0,-0.131 -0.065,-0.139 -0.106,-0.163 0,-0.131 -0.098,-0.205 -0.106,-0.147 -0.106,-0.098 -0.155,-0.139 0.008,-0.114 0.114,-0.057 0.049,-0.131 -0.016,-0.131 -0.13,-0.082 -0.155,-0.041 -0.204,-0.237 -0.147,-0.123 -0.098,-0.074 -0.057,-0.082 0.057,-0.057 0.065,-0.082 0.017,-0.131 -0.033,-0.122 0,-0.106 0.098,-0.033 0.106,0.017 0.106,-0.065 0.139,-0.024 0.155,-0.017 0.082,-0.073 -0.008,-0.13 -0.098,-0.253 -0.098,-0.106 -0.033,-0.155 0.08,-0.298 0.051,-0.191 0.179,-0.202 0.546,-0.433 0.49,-0.294 0.239,-0.03 0.177,-0.109 0.112,-0.167 0.031,-0.182 -0.025,-0.159 -0.091,-0.234 -0.109,-0.292 -0.082,-0.163 0.073,-0.195 0.13,-0.267 0.266,-0.403 0.248,-0.434 0.027,-0.126 0.032,-0.265 0.114,-0.54 0.063,-0.292 -0.033,-0.113 0.057,-0.098 0.155,-0.082 0.374,-0.074 0.254,-0.161 0.391,-0.303 0.326,-0.322 0.27,-0.104 0.489,-0.298 0.281,-0.189 0.11,-0.059 0.276,-0.137 0.495,-0.047 0.412,-0.049 0.233,-0.09 0.341,-0.037 0.229,-0.101 0.255,-0.003 0.479,-0.103 0.163,-0.154 0.139,-0.184 0.187,-0.157 0.219,-0.041 0.244,0.027 0.292,-0.003 0.354,-0.049 0.171,0.122 0.075,0.149 0.218,0.151 0.155,-0.008 0.155,-0.033 0.212,0.13 0.139,-0.016 0.089,-0.073 0.017,-0.182 0.05,-0.099 0.104,-0.57 0.172,-0.941 0.156,-0.853 0.172,-0.943 0.179,-0.974 0.181,-0.986 0.148,-0.809 0.127,-0.695 0.079,-0.427 0.122,-0.559 0.048,-0.491 0.049,-0.141 -0.031,-0.119 -0.106,-0.169 10e-4,-0.074 0.012,-0.098 -0.012,-0.086 -0.111,-0.092 -0.086,-0.055 -0.068,-0.08 -0.031,-0.111 -0.056,-0.111 -0.025,-0.117 -0.081,-0.092 -0.024,-0.117 0.056,-0.111 0.024,-0.117 -0.024,-0.11 -0.031,-0.129 -0.062,-0.123 -0.094,-0.075 -0.225,-0.083 -0.226,-0.199 -0.267,-0.178 -0.34,-0.338 -0.074,-0.16 -10e-4,-0.439 0.015,-0.476 0.022,-0.719 0.011,-0.366 0.192,-0.021 0.169,-0.01 0.177,-0.025 0.154,-0.025 0.142,-0.053 0.106,-0.065 0.126,-0.042 0.099,0.015 0.099,-0.058 0.109,-0.055 0.106,-0.045 0.154,-0.038 0.144,0.088 0.081,0.088 0.094,0.042 0.088,-0.01 0.061,0.008 0.063,0.07 0.081,0.005 0.116,-0.013 0.109,-0.015 0.05,-0.021 0.008,-0.045 -0.028,-0.078 -0.038,-0.073 0.03,-0.113 0.003,-0.136 0.005,-0.173 -0.086,-0.096 -0.086,-0.181 -0.096,-0.146 -0.149,-0.098 -0.139,-0.038 -0.116,0.061 -0.108,0.01 -0.081,-0.055 -0.131,-0.002 -0.142,-0.018 -0.149,-0.021 -0.27,0.04 -0.096,-0.049 -0.131,-0.005 -0.152,0.053 0.004,-0.695 0.004,-0.655 0.002,-0.46 0.136,0.01 0.169,-0.083 0.251,-0.013 0.193,-0.087 0.108,-0.007 0.204,0.042 0.213,0.09 0.209,0.013 0.548,0 0.592,0 0.659,0 0.66,0 0.572,0 0.177,0.005 -0.103,-0.153 -0.12,-0.198 0.046,-0.156 0.059,-0.157 0.069,-0.082 0.178,0.087 0.149,0.267 0.124,0.201 0.121,0.099 0.15,0.011 0.17,-0.034 0.17,-0.083 0.29,-0.368 0.288,-0.315 0.149,-0.106 0.158,-0.097 0.118,-0.037 0.161,0.012 0.136,0.086 0.088,0.15 0.322,0.522 0.243,0.394 0.082,0.246 0.005,0.6 -0.015,0.531 0.032,0.069 0.048,0.02 0.531,-0.125 0.721,0.644 0.533,0.476 0.23,0.152 0.128,0.042 0.31,-0.032 0.368,-0.062 0.179,-0.068 0.198,-0.149 0.321,-0.207 0.262,-0.114 0.103,-0.015 0.104,0.037 0.221,0.124 0.121,0.23 -0.111,0.267 0.019,0.166 0.232,-0.009 0.186,-0.276 0.13,-0.218 0.272,-0.177 0.265,-0.251 0.185,-0.24 0.217,-0.14 0.327,-0.171 0.259,-0.104 0.242,0.011 0.18,-0.113 0.233,-0.212 0.163,-0.17 0.113,-0.061 0.227,0.017 0.283,-0.023 0.278,-0.207 0.253,-0.25 0.134,-0.422 0.088,-0.374 0.076,-0.076 0.092,-0.06 0.108,-0.039 0.26,-0.027 0.456,-0.199 0.314,-0.202 0.298,-0.043 0.088,-0.054 0.108,-0.187 0.054,-0.329 -0.041,-0.199 -0.548,-0.062 -0.359,0 -0.594,-0.051 -0.283,-0.082 -0.061,-0.057 -0.006,-0.063 0.057,-0.143 0.055,-0.267 -0.081,-0.362 -0.296,-0.567 -0.211,-0.558 -0.028,-0.389 0.005,-0.411 0.017,-0.269 -0.152,-0.21 -0.821,-0.663 -0.284,-0.313 -0.094,-0.217 -0.324,-0.399 0.082,-0.123 0.187,0.004 0.159,0.104 0.146,0.222 0.104,0.05 0.143,0 0.757,-10e-4 0.177,0.038 0.107,0.075 0.091,0.093 0.136,0.259 0.146,0.126 0.3,-0.004 0.47,-0.005 0.264,-0.023 0.158,0.072 0.196,0.06 0.413,-0.138 0.115,-0.003 0.124,0.061 0.445,0.463 0.255,0.195 0.215,0.259 0.313,0.001 0.26,-0.222 0.069,-0.747 0.078,-0.217 0.131,-0.061 0.156,-0.007 0.185,-0.117 0.2,-0.152 0.174,-0.051 0.723,0.163 0.201,-0.078 0.732,-0.197 0.748,-0.254 0.21,-0.32 0.313,-0.086 0.246,-0.234 0.198,0.024 0.3,0.01 0.186,-0.041 0.094,-0.044 0.103,-0.11 0.169,-0.313 0.205,-0.119 0.257,-0.126 0.176,-0.148 0.145,-0.183 0.067,-0.159 -0.002,-0.126 -0.085,-0.245 -0.104,-0.23 -0.112,-0.076 -0.084,-0.029 0.255,-0.054 0.21,0.081 0.328,0.012 0.143,-0.062 0.207,0.03 0.262,-0.165 0.168,0.054 0.111,0 0.101,0.125 0.079,0.141 0.245,0.171 -0.024,0.26 -0.045,0.23 -0.032,0.266 -0.014,0.202 -0.104,0.207 -0.156,0.193 -0.046,0.078 -0.022,0.102 0.105,0.062 0.186,0.018 0.232,0.008 0.158,0.06 0.204,0.012 0.246,0.166 0.119,0.1 0.01,0.077 -0.078,0.184 -0.031,0.17 0.061,0.108 0.072,0.078 0.199,0.384 0.095,0.133 0.08,0.043 0.019,0.074 -0.068,0.14 -0.082,0.178 -0.185,0.187 -0.025,0.148 -0.147,0.093 -0.345,0.221 0.06,0.35 0.012,0.177 -0.006,0.138 -0.118,0.185 -0.204,0.545 -0.075,0.272 -0.066,0.628 0.004,0.211 0.094,0.283 0.2,0.629 0.114,0.101 0.263,0.147 0.033,0.425 -0.023,0.444 -0.012,0.172 0.043,0.074 0.118,0.036 0.084,0.053 0.013,0.131 -0.008,0.137 0.196,0.079 0.171,0.05 0.158,0.188 0.285,0.293 0.114,0.054 0.057,0.121 0.241,0.247 0.367,0.09 0.37,0.109 0.146,0.155 0.152,0.126 0.115,0.006 0.097,-0.02 0.16,-0.109 0.128,-0.094 0.223,0.006 0.262,-0.016 0.045,-0.077 0.025,-0.099 -0.054,-0.253 0.093,-0.077 0.217,-0.043 0.043,-0.135 0.049,-0.074 0.062,-0.086 0.074,-0.012 0.093,0.049 0.143,0.031 0.161,0.043 0.086,0.086 0.143,0.007 0.159,-0.016 0.064,-0.055 0.047,-0.096 0.035,-0.207 0.102,-0.006 0.205,-0.046 0.218,-0.091 0.292,-0.014 0.273,0.002 0.137,-0.061 0.127,-0.133 0.246,-0.377 0.129,-0.087 0.139,-0.065 0.118,0.012 0.241,-0.063 0.198,-0.09 0.074,0.023 0.154,0.193 0.078,0.042 0.114,0.014 0.373,0.098 0.198,-0.031 0.214,-0.062 0.206,-0.023 0.148,0.043 0.107,-0.056 0.093,-0.037 z m 17.355,0.01 -0.28,0.127 -0.161,-0.049 -0.148,-0.332 0.05,-0.276 0.203,-0.092 0.157,0.02 0.058,0.035 0.14,0.453 -0.019,0.114 z m 0.41,4.31 -0.305,0.094 -0.057,-0.088 0,-0.351 0.086,-0.192 0.388,-0.054 0.04,-0.057 0.111,-0.036 0.062,0.121 -0.009,0.201 -0.316,0.362 z m -0.767,0.707 -0.05,0.41 -0.505,-0.173 0.038,-0.419 0.236,-0.118 0.209,-0.223 0.072,-0.273 0.004,-0.372 0.078,-0.064 0.068,-0.026 0.061,0.025 0.024,0.558 0.029,0.342 -0.264,0.333 z m 1.931,-0.359 0.115,0.146 -0.397,0.583 -0.219,0.084 -0.24,0.017 -0.311,-0.174 -0.484,0.013 -0.151,-0.041 -0.016,-0.254 0.203,-0.271 0.406,0.015 0.699,-0.218 0.395,0.1 z m 0.826,1.061 -0.744,0.087 -0.34,-0.139 0.077,-0.117 0.254,-0.187 0.309,-0.132 0.277,-0.059 0.289,0.074 0.079,0.157 -0.024,0.158 -0.177,0.158 z m -3.393,0.053 -0.768,0.546 -0.26,-0.179 -0.054,-0.104 0.044,-0.105 -0.009,-0.044 0.086,-0.187 0.429,-0.153 0.216,-0.026 0.276,0.048 0.046,0.134 -0.006,0.07 z m 2.874,0.273 0.262,0.012 0.371,-0.053 0.249,-0.13 0.278,-0.026 0.275,0.014 0.927,0.145 0.557,0.045 0.204,0.046 0.199,0.066 0.146,0.071 0.036,0.154 -0.135,0.248 -0.101,0.26 -0.094,0.363 -0.073,0.073 -0.122,-0.019 0.076,0.325 -0.027,0.13 -0.061,0.126 -0.149,0.262 -0.226,0.334 -0.067,0.07 -0.172,0.116 -0.14,0.148 0.03,0.14 0.07,0.141 -0.083,0.176 -0.267,0.257 -0.16,0.062 -0.147,0.026 -0.136,-0.025 -0.241,-0.258 -0.025,0.202 -0.065,0.207 -0.082,0.113 -0.311,-0.012 -0.173,-0.111 -0.281,-0.123 -0.053,0.332 -0.175,0.229 -0.176,0.072 -0.276,0.048 -0.158,0.098 -0.298,-0.076 -0.277,-0.152 -0.157,-0.013 -0.122,0.123 -0.643,0.023 -0.295,0.125 -0.18,-0.035 -0.265,-0.252 -0.042,-0.167 -0.158,-0.339 -0.142,-0.403 -0.101,-0.366 0.085,-0.316 0.172,0.01 0.203,0.047 0.043,-0.022 0.01,-0.102 -0.045,-0.084 -0.327,0.013 -0.207,-0.188 -0.036,-0.29 0.042,-0.604 0.027,-0.124 0.145,-0.173 0.047,-0.153 -0.036,-0.162 0.062,-0.295 0.135,-0.255 0.516,-0.322 0.599,-0.115 1.741,0.313 z m -6.185,3.358 -0.297,0.053 0.383,-0.698 0.342,-0.325 0.005,-0.644 0.371,-0.573 0.341,-0.233 0.479,-0.068 0.262,0.349 -0.325,0.99 -0.095,0.006 -0.435,0.522 -0.484,0.365 -0.547,0.256 z m 19.504,-0.323 -0.18,0.134 -0.059,0.069 -0.148,-0.052 0.027,-0.077 0.044,0.008 0.048,-0.224 0.253,0.027 0.015,0.115 z m 1.077,4.524 -0.276,0.274 0.091,-0.317 -0.046,-0.219 0.036,-0.169 0.189,-0.164 0.057,-0.024 -0.016,0.202 0.013,0.062 -0.048,0.355 z m 16.152,28.639 -0.11,0.062 -0.011,-0.182 0.287,-0.229 0.047,-0.271 0.15,0.125 0.04,0.139 -0.002,0.058 -0.401,0.298 z m -0.448,1.078 -0.096,0.169 -0.111,-0.025 -0.044,-0.113 -0.082,-0.11 0.044,-0.086 0.074,-0.049 0.205,0.007 0.01,0.207 z m -14.666,28.45 0.088,0.083 -0.162,-0.008 -0.182,0.073 -0.279,0.065 -0.112,-0.122 0.241,-0.17 0.088,-0.127 0.063,0.027 0.081,0.092 0.174,0.087 z m -3.174,2.275 -0.002,0.159 -0.117,-0.081 -0.31,0.062 -0.108,-0.12 0.418,-0.513 0.084,0.075 0.065,0.093 0.045,0.13 -0.048,0.084 -0.027,0.111 z m -9.329,7.747 -0.052,0.038 -0.176,-0.387 0.354,-0.371 0.118,0.15 -0.094,0.294 -0.104,0.208 -0.046,0.068 z m 0.277,4.281 -0.193,0.143 0.035,-0.749 0.104,-0.25 0.113,-0.187 0.14,-0.115 0.104,0.163 -0.089,0.361 -0.245,0.443 0.031,0.191 z\"\n\t\t\t\tid=\"BR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 258.16275,388.0814 -0.059,0.027 -0.244,-0.311 -0.196,-0.09 0.306,-0.22 0.133,-0.189 -0.003,-0.413 0.075,-0.227 -0.025,-0.196 0.067,-0.2 -0.091,-0.225 -0.256,-0.179 -0.507,-0.711 -0.801,-0.173 -0.415,-0.007 0.228,-0.115 0.21,0.014 0.324,0.068 0.388,0.033 0.237,0.209 0.226,0.278 0.205,0.112 0.084,0.071 -0.009,0.081 0.034,0.076 0.267,0.13 0.269,0.209 0.079,0.613 -0.362,0.29 -0.066,0.886 -0.098,0.159 z m -3.557,-2.569 0.34,0.098 0.183,-0.014 0.109,-0.063 0.503,0.026 0.406,-0.094 0.061,0.166 -0.01,0.087 -0.864,0.081 -0.792,0.244 -0.434,0.165 -0.204,0.019 -0.156,-0.087 -0.523,-0.502 0.14,0.05 0.386,0.284 0.24,-0.052 0.223,-0.188 0.034,-0.142 -0.033,-0.067 0.101,-0.225 0.29,0.214 z m 5.175,3.86 0.462,0.348 0.394,0.132 0.426,0.436 0.184,0.155 0.033,0.141 -0.072,0.644 -0.096,0.387 0.014,0.339 -0.1,-0.101 -0.101,-0.222 -0.166,-0.127 -0.056,-0.067 0.298,-0.015 0.026,-0.35 0.146,-0.276 -0.022,-0.288 -0.348,-0.317 -0.238,-0.279 -0.367,-0.09 -0.339,-0.278 -0.202,-0.034 -0.247,0.049 0.089,-0.166 0.062,-0.22 0.045,-0.042 0.175,0.241 z m -3.073,2.404 -0.006,0.372 0.031,0.278 -0.028,0.099 -0.304,0.186 -0.078,0.104 -0.286,0.105 -0.173,0.146 -0.087,-0.237 -0.168,-0.146 -0.028,-0.249 -0.128,0.084 -0.186,-0.051 -0.306,-0.188 -0.193,-0.256 0.271,-0.044 0.056,0.159 0.214,-0.195 -0.049,-0.103 -0.039,-0.013 -0.07,-0.191 0.322,-0.502 0.07,-0.324 -0.146,-0.521 0.137,-0.034 0.363,0.183 0.163,0.18 0.005,0.247 0.153,0.19 0.221,0.457 0.269,0.264 z m 1.113,-0.943 -0.317,0.064 -0.227,-0.063 -0.058,-0.051 0.097,-0.085 0.213,-0.071 0.343,-0.007 0.15,0.084 0.018,0.037 -0.219,0.092 z m 5.723,2.499 0.019,0.155 -0.188,-0.031 -0.278,0.061 -0.1,0.002 0.062,-0.107 0.193,-0.144 0.01,-0.137 -0.239,-0.198 -0.277,-0.493 -0.13,-0.117 -0.062,-0.186 -0.233,-0.199 0.048,-0.106 0.048,-0.025 0.157,0.051 0.356,0.71 0.023,0.068 0.591,0.696 z m -6.594,-0.152 0.005,0.07 -0.278,0.193 0.202,0.138 0.19,-0.3 0.151,0.244 0.083,0.456 -0.014,0.08 0.014,0.068 0.029,0.087 0.007,0.126 -0.154,0.397 -0.554,-0.041 -0.013,-0.335 -0.086,-0.065 -0.129,-0.479 -0.173,-0.154 -0.241,-0.394 0.14,-0.102 0.187,0.034 0.096,-0.048 0.259,-0.038 0.157,-0.054 0.122,0.117 z m 9.06,0.555 -0.223,0.331 -0.119,-0.028 0.067,-0.417 0.154,-0.066 0.061,0.004 0.06,0.176 z m -3.466,1.884 -0.117,0.018 -0.209,-0.081 -0.491,-0.37 -0.228,-0.032 0.075,-0.209 0.174,0.073 0.396,0.319 0.149,0.16 0.251,0.122 z m 2.313,1.687 -0.018,0.078 -0.354,-0.605 -0.446,-0.147 -0.256,-0.146 0.053,-0.083 0.178,-0.036 0.03,-0.192 -0.076,-0.208 -0.235,-0.42 -0.132,-0.285 -0.061,-0.066 -0.018,-0.239 0.279,0.371 0.116,0.329 0.187,0.322 0.125,0.554 0.357,0.188 0.257,0.268 0.014,0.317 z m 2.197,0.517 0.064,0.054 -0.179,0.122 -0.403,-0.15 -0.091,0.011 -0.08,-0.16 -0.031,-0.118 0.02,-0.109 0.24,0.084 0.129,0.157 0.331,0.109 z m -0.419,1.539 -0.197,0.091 0.044,-0.156 0.377,-0.265 0.209,-0.233 0.119,-0.083 0.042,-0.064 0.166,-0.086 0.083,-0.15 -0.023,-0.123 -0.173,-0.203 0.002,-0.143 0.06,-0.101 0.292,-0.047 -0.077,0.152 0.115,0.43 -0.388,0.535 -0.332,0.166 -0.319,0.28 z m 3.272,-0.649 0.174,0.043 0.095,-0.003 0.321,0.09 0.191,0.125 0.043,0.051 -0.103,0.111 -0.295,-0.21 -0.258,-0.027 -0.362,0.005 -0.145,-0.04 0.097,-0.226 0.242,0.081 z m 0.351,2.775 -0.374,0.147 -0.038,-0.173 0.191,-0.139 0.221,0.165 z m -0.312,0.942 -0.089,0.219 -0.297,0.418 -0.663,0.105 -0.73,0.02 -0.056,-0.114 -0.016,-0.1 0.053,-0.157 -0.005,-0.062 -0.03,-0.063 0.268,-0.067 0.174,-0.194 0.277,-0.033 0.345,0.137 0.186,0.005 0.275,-0.15 0.221,-0.325 0.131,0.042 -0.044,0.319 z\"\n\t\t\t\tid=\"BS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 732.05875,382.2754 -0.016,0.071 -0.079,0.191 -0.052,0.206 0.043,0.17 0.178,0.201 0.239,0.161 0.303,0.012 0.28,-0.062 0.111,0.026 0.152,0.269 0.109,0.232 -0.148,0.24 -0.08,0.21 -0.028,0.149 0.018,0.065 0.09,0.12 0.105,0.206 0.015,0.189 -0.067,0.125 -0.144,0.062 -0.154,-0.018 -0.127,0.003 -0.158,0.022 -0.248,0.069 -0.23,0.09 -0.433,-0.016 -0.173,-0.187 -0.081,-10e-4 -0.393,0.242 -0.429,-0.043 -0.78,0.081 -0.327,0.019 -0.335,-0.027 -0.17,-0.051 -0.314,-0.17 -0.286,-0.123 -0.29,0.113 -0.103,0.021 -0.232,0.29 -0.505,0.096 -0.503,0.07 -0.149,-0.038 -0.284,-0.018 -0.01,-0.068 0.009,-0.066 -0.065,-0.052 -0.115,-0.054 -0.198,-0.023 -0.254,-0.072 -0.146,-0.069 -0.516,0.102 -0.301,-0.153 -0.342,-0.211 -0.173,-0.091 -0.062,-0.326 -0.061,-0.105 -0.135,-0.111 -0.075,-0.13 0.061,-0.133 0.34,-0.249 0.027,-0.059 0.158,-0.464 0.219,-0.17 0.216,-0.235 0.163,-0.374 0.314,-0.385 0.346,-0.395 0.238,-0.322 0.157,-0.15 0.326,-0.161 0.272,-0.095 0.189,-0.215 0.227,-0.121 0.233,-0.054 0.347,0.03 0.326,0.076 0.358,0.108 0.041,0.087 -0.031,0.152 -0.051,0.156 -10e-4,0.079 0.054,0.044 0.35,0.03 0.429,-0.024 0.24,0.021 0.536,0.143 0.156,0.101 0.164,0.077 0.161,-0.013 0.202,-0.166 0.213,-0.14 0.132,-0.023 0.095,0.045 0.17,0.134 0.354,0.126 0.314,0.095 0.103,0.09 -0.036,0.387 z\"\n\t\t\t\tid=\"BT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 484.61275,644.9594 -0.051,0.023 -0.127,-10e-4 -0.043,0.006 -0.063,0.047 -0.02,-0.02 -0.023,-0.036 -0.01,-0.094 0.028,-0.105 0.041,-0.049 0.072,-0.043 0.058,-0.025 0.056,-0.01 0.03,0.003 0.105,0.077 0.008,0.055 -0.016,0.068 -0.017,0.049 z\"\n\t\t\t\tid=\"BV\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 545.78375,513.3534 -0.055,0.145 -0.043,0.211 0.052,0.158 0.112,0.212 0.162,0.185 0.124,0.11 0.147,0.273 0.148,0.342 0.194,0.266 0.569,0.61 0.063,0.219 0.079,0.217 0.358,0.417 0.056,0.139 -0.024,0.283 0.368,0.852 0.242,0.498 0.205,0.092 0.655,0.531 0.572,0.428 0.669,0.289 0.491,0.19 0.243,0.139 0.122,0.133 0.098,0.256 0.051,0.446 0.017,0.288 0.528,-0.011 0.437,0.026 0.153,0.058 0.057,0.082 -0.013,0.19 0.006,0.284 0.02,0.229 -0.045,0.244 -0.031,0.288 -0.021,0.358 0.067,0.139 0.423,0.451 0.177,0.292 0.189,0.443 0.11,0.142 0.089,0.057 0.382,0.048 0.983,0.186 0.606,0.17 0.481,0.175 0.201,0.046 0.097,0.047 0.033,0.043 -0.06,0.386 0.021,0.125 0.054,0.112 0.082,0.088 0.099,0.054 0.365,0.042 0.22,0.235 0.138,0.109 -0.659,0.059 -0.327,0.196 -0.189,0.352 -0.298,0.259 -0.405,0.165 -0.428,0.113 -0.452,0.062 -0.482,0.303 -0.511,0.545 -0.261,0.343 -0.011,0.142 -0.114,0.122 -0.219,0.103 -0.124,0.125 -0.028,0.145 -0.117,0.069 -0.204,-0.006 -0.144,0.107 -0.083,0.218 -0.18,0.133 -0.28,0.047 -0.241,0.123 -0.203,0.2 -0.155,0.102 -0.11,0.003 -0.171,0.163 -0.277,0.386 -0.046,0.179 -0.38,1.458 -0.208,0.173 -0.402,0.301 -0.326,0.361 -0.14,0.213 -0.153,0.095 -0.748,0.178 -0.277,0.095 -0.337,0.138 -0.084,0.124 -0.083,0.454 -0.232,0.65 -0.188,0.481 -0.122,0.419 -0.212,0.521 -0.184,0.175 -0.209,0.16 -0.274,0.079 -0.373,0.05 -0.339,-0.014 -0.262,0.007 -0.364,0.184 -0.34,0.013 -0.54,-0.107 -0.437,-0.103 -0.195,-0.021 -0.386,-0.341 -0.248,0.006 -0.379,-0.027 -0.213,-0.078 -0.197,-0.174 -0.429,-0.342 -0.419,-0.277 -0.371,-0.164 -0.346,-0.076 -0.329,0.068 -0.256,0.073 -0.099,0.036 -0.199,0.143 -0.203,0.271 -0.169,0.424 -0.064,0.26 -0.188,0.553 -0.249,0.664 -0.119,0.191 -0.138,0.142 -0.218,0.126 -0.711,0.529 -0.356,0.597 -0.224,0.174 -0.27,0.081 -0.229,0.051 -0.126,0.1 -0.141,0.302 -0.122,0.107 -0.135,0.041 -0.407,-0.036 -0.13,-0.031 -1.078,0.059 -0.329,-0.095 -0.233,-0.039 -0.367,0.126 -0.154,-0.083 -0.123,-0.251 -0.06,-0.504 0.019,-0.428 0.2,-0.323 0.166,-0.236 0.163,-0.309 0.021,-0.138 -0.033,-0.124 -0.032,-0.253 -0.018,-0.26 -0.231,-0.566 -0.284,-0.749 -0.383,-0.833 -0.119,-0.229 -0.24,-0.361 -0.888,-0.686 -0.136,-0.093 0,-0.076 0,-0.664 -10e-4,-0.878 -10e-4,-0.877 -10e-4,-0.874 -0.001,-0.873 -10e-4,-0.87 -10e-4,-0.869 0,-0.867 -10e-4,-0.865 -10e-4,-0.73 0.64,0 0.791,0 0.941,0 0.416,0 0.024,-0.115 0,-0.535 -0.002,-1.224 -0.002,-1.221 -0.002,-1.217 -10e-4,-1.214 -0.002,-1.21 -0.002,-1.208 -0.002,-1.204 -10e-4,-1.203 -0.001,-0.592 0.726,-0.036 0.833,-0.121 1.352,-0.196 1.259,-0.244 0.822,-0.142 0.974,-0.169 0.335,-0.029 0.091,0.023 0.132,0.058 0.452,0.598 0.282,0.456 0.057,0.196 0.054,0.021 0.133,-0.032 0.15,-0.073 0.459,-0.455 0.096,-0.119 0.293,-0.22 0.355,-0.225 0.322,-0.159 0.323,-0.132 0.149,0.033 0.176,0.114 0.156,0.071 0.734,-0.551 0.328,-0.127 0.862,-0.099 z\"\n\t\t\t\tid=\"BW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 553.89175,272.5424 0.383,0.437 0.09,0.017 0.213,-0.172 0.042,-0.011 0.44,-0.015 0.204,0.152 0.152,0.296 0.14,0.236 0.152,0.064 0.428,-0.297 0.237,-0.099 0.156,0.003 0.549,0.267 0.258,0.146 0.059,0.132 0.006,0.156 -0.07,0.231 -0.055,0.251 0.167,0.296 0.194,0.201 0.415,-0.332 0.153,-0.092 0.167,-0.003 0.224,-0.123 0.162,-0.186 0.155,-0.064 0.297,0.044 0.536,-0.044 0.625,0.291 0.054,0.09 0.312,0.34 0.109,0.169 0.103,0.054 0.166,0.166 0.223,0.104 0.154,-0.032 0.074,0.055 0.069,0.13 0.005,0.222 -0.022,0.632 -0.109,0.182 -0.115,0.148 -0.029,0.115 0.011,0.139 0.177,0.272 0.228,0.421 0.053,0.243 0,0.183 -0.311,0.536 -0.103,0.125 -0.072,0.263 -0.038,0.267 0.022,0.111 0.52,0.424 0.385,0.229 0.086,0.112 0.008,0.07 -0.204,0.453 -0.02,0.122 0.308,0.187 0.171,0.295 0.15,0.48 0.293,0.459 0.631,0.406 0.459,0.264 0.096,0.12 0.033,0.142 -0.035,0.313 -0.119,0.381 -0.081,0.211 0.187,0.088 0.481,-0.024 0.585,0.074 0.701,0.418 0.002,0.187 -0.072,0.171 0.048,0.179 0.076,0.152 0.607,0.465 0.058,0.135 0.01,0.226 -0.016,0.165 -0.168,0.034 -0.187,0.077 -0.305,0.198 -0.12,0.279 -0.494,0.384 -0.304,0.174 -0.243,0.007 -0.578,-0.078 -0.203,-0.189 -0.084,-0.174 -0.222,-0.079 -0.295,-0.007 -0.407,0.03 -0.083,0.053 -0.067,0.213 -0.173,0.365 -0.124,0.205 0.102,0.126 0.162,0.262 0.252,0.332 0.26,0.295 0.083,0.18 -0.004,0.129 -0.123,0.151 0.018,0.304 0.252,0.399 -0.085,0.064 -0.026,0.489 0.003,0.521 0.068,0.126 0.135,0.104 0.115,0.19 0.191,0.432 0.013,0.113 -0.532,-0.032 -0.639,0.013 -0.359,0.251 -0.14,-0.058 -0.25,-0.064 -0.277,0.14 -0.378,0.423 -0.254,0.263 -0.247,0.368 -0.078,0.199 -0.156,0.366 -0.143,0.418 0.078,0.292 0.117,0.271 0.026,0.292 0.058,0.228 -0.156,0.166 -0.091,0.239 -0.266,-0.042 -0.326,-0.229 -0.069,-0.332 -0.251,-0.231 -0.165,-0.121 -0.272,-0.018 -0.435,0.108 -0.569,0.083 -0.429,0.022 -0.234,0.118 -0.346,0.116 -0.134,-0.138 -0.192,-0.377 -0.157,-0.376 -0.109,-0.165 -0.094,-0.046 -0.116,0.009 -0.133,0.119 -0.1,0.123 -0.141,0.043 -0.218,0.099 -0.159,0.134 -0.174,0.346 -0.115,-0.024 -0.119,-0.08 -0.137,-0.387 -0.188,-0.089 -0.301,-0.005 -0.373,-0.082 -0.303,-0.118 -0.11,0.028 -0.181,0.165 -0.194,0.024 -0.428,-0.147 -0.083,0.068 -0.113,0.217 -0.133,0.209 -0.116,0.021 -0.065,-0.054 0.036,-0.371 -0.248,-0.131 -0.418,-0.021 -0.294,0.054 -0.143,-0.015 -0.074,-0.072 -0.36,-0.625 -0.19,-0.04 -0.341,0.031 -0.503,-0.076 -0.58,-0.141 -0.319,-0.052 -0.165,-0.141 -0.357,-0.048 -0.96,-0.265 -0.391,-0.047 -0.577,-0.004 -0.878,-0.059 -0.563,0.033 -0.261,0.088 -0.301,0.055 -0.509,0.048 -0.207,-0.005 -0.326,0.029 -0.374,0.071 -0.107,0.131 -0.123,0.289 -0.43,0.498 -0.417,0.33 -0.076,0.028 -0.244,-0.175 -0.203,-0.059 -0.239,-0.019 -0.169,0.056 -0.106,0.083 0.014,0.383 -0.024,0.033 -0.184,-0.454 0.015,-0.412 0.102,-0.236 0.125,-0.213 -0.051,-0.319 0.122,-0.423 0.004,-0.307 -0.054,-0.132 -0.099,-0.153 -0.272,-0.17 -0.12,-0.133 -0.368,-0.178 -0.365,-0.221 -0.062,-0.136 0.017,-0.093 0.064,-0.142 0.279,-0.415 0.302,-0.404 0.193,-0.162 1.025,-0.52 0.158,-0.182 0.04,-0.308 0.002,-0.224 -0.019,-0.4 -0.063,-0.57 -0.078,-0.394 -0.196,-0.742 -0.534,-1.543 -0.321,-1.613 0.209,0.095 0.49,0.035 0.389,-0.111 0.202,-0.016 0.18,0.036 0.268,-0.064 0.245,-0.026 0.127,0.145 0.228,0.128 0.451,-0.184 0.399,-0.229 0.414,0.025 0.059,-0.113 0.103,-0.575 0.123,-0.126 0.495,0.058 0.183,-0.104 0.192,-0.284 0.292,-0.178 0.244,10e-4 0.254,-0.2 0.125,0.134 0.061,0.239 -0.084,0.19 0.036,0.075 0.176,0.094 0.301,-0.003 0.193,-0.078 0.045,-0.109 0,-0.198 -0.048,-0.185 -0.128,-0.159 -0.24,-0.083 -0.167,-0.002 -0.028,-0.102 0.057,-0.217 0.148,-0.402 0.182,-0.363 0.111,-0.137 0.019,-0.127 -0.021,-0.22 -0.004,-0.397 0.163,-0.56 0.22,-0.418 0.295,-0.137 0.361,-0.073 0.231,-0.2 0.114,-0.23 0.043,-0.195 0.055,-0.168 0.115,-0.074 0.868,0.046 0.133,-0.363 0.075,-0.101 0.166,-0.108 0.116,-0.129 -0.043,-0.1 -0.222,-0.064 -0.522,-0.057 -0.105,-0.121 0.033,-0.145 0.139,-0.376 0.133,-0.486 0.069,-0.377 0.007,-0.223 0.075,-0.06 0.425,-0.071 0.143,-0.076 0.366,-0.516 0.279,-0.088 0.721,0.133 0.33,-0.01 0.09,0.012 0.33,0.023 0.036,-0.052 0.148,-0.511 0.146,-0.149 0.567,-0.675 0.381,-0.287 0.241,-0.063 z\"\n\t\t\t\tid=\"BY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 227.09475,410.4984 -0.15,0.334 0.15,0.043 0.136,-0.031 0.329,0.012 0.126,0.366 -0.033,0.307 -0.31,0.808 -0.039,0.277 -0.141,0.415 0.191,0.273 -0.179,0.362 -0.061,0.234 -0.014,0.352 0.09,0.668 -0.145,0.962 -0.256,0.42 -0.159,0.159 -0.284,0.417 -0.373,0.124 -0.517,0.671 -0.091,0.176 0.05,0.19 -0.121,0.002 -0.495,-0.031 -0.335,0.035 -0.013,-0.017 0.027,-0.721 0.043,-1.117 0.031,-0.821 0.03,-0.804 0.023,-0.603 0.031,-0.822 0.027,-0.71 -0.003,-0.255 0.081,-0.202 0.233,-0.084 0.302,0.176 0.126,0.073 0.113,-0.042 0.144,-0.107 0.176,-0.311 0.442,-0.643 0.177,-0.457 0.173,-0.091 0.25,-0.016 0.218,0.029 z m 0.968,1.607 -0.133,0.054 0.11,-0.169 0.016,-0.108 0.154,-0.452 0.11,0.002 0.029,0.04 -0.286,0.633 z m 0.275,1.47 -0.216,0.409 -0.014,-0.117 0.09,-0.303 0.122,-0.106 0.076,-0.112 0.017,-0.132 0.106,0.064 -0.027,0.13 -0.154,0.167 z\"\n\t\t\t\tid=\"BZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 279.87575,14.295401 2.289,0.416 0.742,-0.151 0.848,1.013 0.511,0.118 0.842,-0.191 0.614,0.24 2.285,0.225 0.475,0.392 -0.006,0.471 -0.493,1.017 -0.662,0.975 -4.27,3.137 -0.314,0.516 0.832,0.162 1.227,-0.142 0.951,-0.345 1.121,-1.058 0.371,-0.061 0.712,-0.516 1.379,-1.452 1.103,-0.793 0.499,0.349 0.42,0.55 0.283,0.063 0.147,-0.424 0.236,-1.163 0.138,-0.424 0.363,-0.304 0.222,0.033 0.359,0.553 0.398,1.303 0.367,0.9 0.198,0.015 0.839,-1.018 0.423,-0.132 0.961,0.37 0.399,0.449 0.072,0.477 -0.256,0.5 -0.158,0.431 -0.062,0.362 0.14,0.419 0.582,0.893 0.842,1.924 -0.005,0.702 -0.459,1.417 0.011,0.356 2.166,-1.488 2.184,0.666 0.618,0.454 0.237,0.545 0.252,0.896 0.268,1.241 -0.186,1.284 -0.959,1.98 -0.992,1.524 -0.584,1.36 -0.897,0.741 -3.075,3.222 -1.503,1.022 -0.864,1 -0.388,0.174 -1.831,-0.191 -0.485,0.548 -0.27,0.918 -0.577,0.436 -0.853,0.311 -1.743,0.251 -0.391,1.024 -0.1,0.691 -0.17,0.535 -0.148,0.258 -4.98,3.594 -0.092,0.594 0.501,0.244 0.631,-0.244 7.247,-4.362 1.391,-0.292 1.291,0.319 -0.148,1.025 -1.827,2.874 -2.327,2.547 -1.162,1.908 -2.94,3.238 -2.403,3.161 -0.923,1.583 -1.237,2.79 -0.423,0.667 -0.514,0.274 -0.605,-0.115 -0.545,-0.401 -0.727,-1.035 -0.663,-1.165 -0.208,-0.205 0.125,0.579 1.277,3.831 -0.146,0.731 -2.344,0.769 -1.038,0.676 -0.535,0.164 -0.379,-0.122 -0.37,0.069 -0.36,0.261 -0.02,0.289 0.321,0.316 0.934,0.247 2.074,-0.836 0.333,0.059 0.534,0.408 0.026,0.37 -0.557,1.18 -1.679,1.398 0.219,0.08 0.481,0.492 -0.011,0.442 -0.529,1.035 -0.25,0.329 -1.619,0.955 -0.705,0.224 -0.62,-0.119 -2.839,-2.095 -1.002,-0.305 -0.952,-0.534 -0.702,0.091 -0.746,0.62 0.335,0.311 1.375,0.592 1.147,0.114 0.476,0.23 0.187,0.382 0.495,1.383 0.08,0.738 -0.109,0.684 -0.15,0.477 -0.19,0.271 -0.293,0.136 -1.123,-0.096 -0.419,0.167 -0.487,0.396 -0.61,0.172 -1.1,-0.079 -1.295,0.576 -0.685,0.105 -0.759,-0.26 -0.823,-0.644 -0.868,-0.326 -1.467,-0.275 0.123,0.371 0.517,0.156 1.053,0.988 0.503,1.331 0.474,0.224 0.968,1.082 0.703,0.171 0.729,0.367 1.028,-0.472 0.69,0.088 -0.144,2.632 -0.305,0.254 -1.662,0 -0.79,-0.379 -0.349,-0.392 -0.766,-0.446 -0.69,0.258 -0.625,-0.056 -0.424,0.262 -0.673,-0.01 -1.759,0.442 -0.93,0.005 -0.686,-0.285 -0.797,-0.088 -0.909,0.106 0.063,0.303 0.385,0.091 0.561,0.491 0.52,0.752 0.432,0.315 0.518,-0.178 0.527,-0.351 1.924,-0.579 0.844,-0.094 0.753,0.256 0.501,0.319 0.35,0.383 0.442,1.012 1.109,0.124 0.846,0.334 1.348,1.454 0.371,0.11 0.149,0.373 -0.286,0.928 -0.032,0.555 -0.932,1.07 -1.454,0.31 -1.598,-0.099 -1.144,0.124 -0.12,0.134 0.785,0.279 1.819,1.235 0.705,0.666 0.123,0.389 -1.002,1.472 -0.885,2.878999 -0.291,0.225 -0.303,0.079 -0.78,-0.05 -0.989,0.715 -0.747,0.143 -1.353,-0.268 -1.562,0.015 -0.123,0.46 -0.078,0.877 0.008,1.311 0.095,1.734 -0.082,1.256 -0.257,0.79 -0.325,0.58 -0.588,0.562 -0.604,0.349 -0.452,0.123 -0.752,0.02 -2.158,0.401 -1.053,-0.024 -0.818,-0.17 -0.846,-0.56 -1.41,-1.592 -0.4,-0.355 -0.392,-0.207 0.015,0.345 0.422,0.893 0.352,0.574 0.282,0.256 -0.066,0.271 -0.622,0.425 -0.686,0.19 -0.813,-0.007 -0.026,0.164 0.275,0.456 0.358,0.428 0.235,0.128 0.623,-0.132 0.721,-0.542 0.45,-0.16 0.896,0.129 0.353,0.193 1.118,1.182 0.156,0.055 0.828,-0.594 1.197,-0.032 0.439,0.477 0.168,0.922 0.021,0.744 -0.127,0.567 0.276,0.551 0.678,0.535 0.526,0.115 0.374,-0.302 0.568,-0.735 0.241,-0.174 0.228,0.041 0.347,0.536 0.467,1.026 0.043,1.191 -0.38,1.353 -0.465,0.882 -1.824,1.444 -0.551,0.564 -0.436,0.586 -0.632,0.526 -1.242,0.7 -0.655,0.131 -1.413,0.75 -0.307,0.034 -0.458,-0.122 -0.095,-0.365 0.117,-0.651 0.151,-0.608 0.187,-0.565 0.007,-0.471 -0.399,-0.735 -0.28,-0.341 -0.271,-0.172 -0.545,0.1 -0.308,0.202 -0.33,0.039 -0.352,-0.126 -0.296,-0.312 -0.593,-1.312 -0.223,-0.168 -0.292,0.042 -0.262,-0.189 -0.231,-0.42 -0.383,-0.407 0.102,0.311 0.383,0.751 0.267,0.743 0.15,0.735 -0.07,0.575 -3.244,0.318 -1.394,-0.166 -0.282,-0.502 -0.667,-2.181 -0.145,3.836 -2.43,0.617 -0.568,-0.104 -0.945,-0.423 -1.222,-1.024 -0.506,-0.683 -0.198,-0.683 -0.147,-0.375 -0.096,-0.064 -0.304,0.825 -0.332,1.675 -0.835,-0.431 -1.057,-0.422 -0.38,-1.658 -0.022,2.396 -1.703,-0.315 -0.819,0.089 -0.24,-2.1 -0.04,-2.346 -0.332,1.488 0.145,1.255 0.047,1.516 -0.724,-0.43 -1.588,-0.211 -0.563,-0.209 0.072,-2.027 0.125,-2.045 2.045,-2.063 0.603,-0.986 0.444,-0.399 0.702,-0.252 0.897,-0.157 0.611,0.121 0.698,-0.118 0.834,-0.374 0.596,-0.108 0.112,-0.133 -0.172,-0.195 -0.638,-1.366 -0.229,-0.312 -0.233,-0.139 -0.461,-0.062 -0.447,-0.604 -0.259,-0.535 -0.277,-0.73 -0.443,-1.392 -0.44,-1.567 0.218,-0.867 0.729,-0.684 0.731,-0.476 0.732,-0.266 0.612,-0.006 0.738,0.381 1.038,0.734 0.596,0.827 0.747,1.739 0.493,1.371 0.4,0.615 1.79,1.109 0.595,0.179 0.707,-0.089 1.441,-0.29 0.708,-0.304 0.318,-0.362 0.163,-0.521 0.204,-0.402 0.637,-0.927 0.976,-1.941 0.54,-1.549 0.128,-0.525 0.108,-0.637 0.087,-0.751 -0.304,0.4 -1.684,3.839 -0.349,0.688 -0.986,1.156 -0.417,0.186 -0.673,-0.057 -0.892,-0.511 -1.052,0.812 -0.638,-0.206 -0.565,-0.568 -0.007,-2.689 -0.717,-2.183 0.792,-1.116 0.656,-0.696 1.168,-1.822999 0.256,-0.019 0.846,0.289 -0.464,-0.417 -0.454,-0.619 -1.011,0.16 0.357,-4.012 -0.677,3.008 -0.69,1.556 -0.418,0.781 -0.468,0.447999 -1.773,0.386 0.436,-1.442999 0.4,-2.151 -0.423,0.807 -1,1.206 -0.748,0.63 -0.616,0.329999 -1.196,-0.08 -0.596,-0.601 0.17,-1.483 0,-1.844 0.365,-0.862 0.553,-1.112 0.593,-1.51 0.407,-1.584 1.588,-0.711 1.546,-0.292 1.294,-0.847 0.634,-0.149 0.607,0.403 2.468,0.66 1.013,0.501 0.444,0.363 0.329,0.13 0.348,-0.541 0.442,-0.525 1.538,0.054 0.424,-0.097 0.392,-0.247 0.477,-0.5 0.562,-0.757 0.086,-0.373 -0.39,0.013 -0.391,0.191 -0.587,0.553 -0.565,0.297 -0.576,-0.056 -1.163,-0.467 -2.021,-0.084 -1.031,-0.213 -0.478,-0.227 -0.269,-0.313 -0.235,-0.471 -0.202,-0.631 0.105,-0.444 0.412,-0.256 0.356,-0.054 0.571,0.349 0.641,0.59 0.698,0.076 -0.242,-0.539 -0.887,-1.087 -0.615,-0.927 -0.516,-1.147 -0.397,-1.143 -0.881,-1.808 -0.711,-1.817 -0.501,-0.811 -0.529,-0.403 -1.612,-0.504 -0.323,-0.329 -0.77,-1.621 -0.207,-2.776 -0.337,-1.714 0.325,-2.219 0.537,-1.017 3.221,0.792 1.359,-0.119 1.737,0.282 0.935,0.546 1.066,1.349 0.953,1.508 0.917,1.001 0.844,1.359 0.921,1.997 0.542,0.95 0.47,0.577 0.632,0.496 1.192,0.623 1.039,0.205 0.539,-0.081 0.576,-0.451 0.41,-0.536 -0.457,-0.148 -1.197,0.063 -0.831,-0.285 -0.474,-0.633 -0.504,-0.858 -0.801,-1.629 -0.606,-1.074 -1.325,-1.767 -0.979,-1.775 -0.786,-1.702 -0.073,-0.745 0.568,-0.521 0.698,-0.366 4.368,-1.174 2.606,-1.415 1.058,-1.657 0.126,-0.389 3.489,-2.375 2.467,-0.885 0.949,-0.144 0.859,-0.386 0.036,-0.237 -0.752,-0.324 -0.76,-0.159 -1.725,0.01 -1.536,-0.295 -0.463,-0.539 0.096,-0.884 0.147,-0.763 0.464,-1.283 0.497,-0.97 2.107,-2.829 1.418,-1.206 0.409,-0.837 -3.051,1.862 -1.066,1.333 -1.071,1.98 -0.555,0.579 -0.396,-0.153 -0.353,0.183 -0.312,0.518 -0.261,0.943 -0.211,1.36 -0.191,0.92 -0.172,0.489 -0.434,0.704 -1.045,1.37 -2.451,1.896 -0.825,0.478 -0.707,0.076 -2.289,1.055 -0.687,0.041 -0.761,-0.319 0.325,-0.913 1.211,-1.698 0.321,-0.762 -0.774,0.167 -0.79,0.466 -1.744,0.384 -0.69,0.692 -0.668,1.248 -0.536,0.779 -0.403,0.316 -0.556,0.188 -2.043,0.096 -0.453,-0.083 -1.176,-0.942 -1.041,0.326 -0.43,-0.063 -0.79,-0.668 -0.235,-0.435 0.034,-0.587 0.457,-1.111 0.529,-1.074 1.72,-2.386 1.103,-1.129 1.589,-0.979 3.735,-1.102 0.169,-0.812 -3.779,0.907 -3.215,1.139 -0.522,0.417 -0.748,1.106 -2.376,3.944 -0.701,0.981 -1.071,0.233 -0.82,-0.331 -0.641,-0.493 -1.103,-1.155 -0.832,-0.624 -0.394,-0.42 -0.232,-0.426 -0.189,-0.5 -0.144,-0.574 0.27,-0.481 2.116,-1.045 2.875,0.204 1.29,-0.216 1.269,-0.634 1.873,-1.59 2.038,-2.257 0.399,-0.728 -0.744,-0.16 -0.551,0.177 -1.326,0.815 -2.099,2.17 -1.831,0.76 -4.523,0.402 -1.436,0.598 -0.63,-0.128 -0.475,-0.583 -0.529,-1.085 0.094,-0.875 1.078,-0.987 0.844,-0.231 0.151,-0.203 -1.198,-0.962 -0.106,-0.494 0.692,-1.098 1.501,-1.632 0.759,-0.518 1.39,-0.331 1.431,0.18 0.055,-0.314 -1.415,-0.626 -1.06,-0.115 -1.401,0.442 -3.719,2.656 -0.316,-0.08 -0.541,-0.455 0.155,-0.654 1.989,-2.812 0.066,-0.447 -1.429,0.063 -0.419,-0.134 -0.41,-0.337 -0.582,0.299 -0.755,0.934 -0.532,0.397 -0.31,-0.133 -0.789,-1.105 0.102,-0.932 0.628,-1.176 0.574,-0.852 0.779,-0.783 1.268,-0.985 0.918,-0.333 1.486,-0.011 0.708,-0.442 0.63,-0.773 0.789,-1.26 0.865,-0.873 1.414,-0.721 1.191,0.232 0.658,0.628 0.522,1.094 0.561,0.833 0.053,-0.672 0.464,-0.832 0.582,-0.358 0.7,0.119 0.615,0.397 0.795,1.005 0.643,0.449 0.302,-0.027 0.378,-0.554 1.006,-0.012 -0.021,-0.236 -0.328,-0.582 -0.397,-0.417 -3.564,-2.931 -0.099,-0.648 1.201,-0.61 0.751,-0.732 0.353,-0.179 0.88,-1.57 0.575,-0.823 1.064,-0.942 0.427,0.258 0.537,0.83 0.52,0.517 1.528,0.491 0.654,0.51 1.165,2.9 0.464,0.937 0.663,0.957 0.394,0.359 0.779,0.229 0.08,-0.538 -0.925,-1.349 -0.254,-0.786 0.109,-0.669 0.197,-0.353 0.285,-0.032 0.73,0.599 1.942,2.016 2.903,2.356 1.113,0.543 0.687,0.83 0.626,1.004 0.617,0.689 0.115,-0.065 -0.575,-1.55 -1.404,-1.932 -3.756,-3.354 -1.486,-1.784 -0.719,-1.216 -0.544,-1.24 -0.011,-0.682 0.512,-0.801 0.689,-0.639 0.857,-0.254 0.103,-0.267 -0.779,-0.964 -0.46,-0.838 0.016,-0.587 0.93,-0.45 0.577,0.136 1.097,1.06 0.916,0.499 0.148,-0.322 -0.946,-2.834 -0.088,-0.646 0.14,-0.379 0.332,-0.386 0.991,0.221 1.631,1.396 2.921,0.696 0.803,-0.104 -0.121,-0.32 -1.166,-0.86 -1.221,-1.163 -0.538,-0.706 -0.395,-0.956 -0.468,-0.798 -0.039,-0.384 0.754,-0.624 1.981,0.122 1.84,0.957 1.561,-0.346 0.984,0.238 0.389,0.288 0.712,1.037 2.259,3.7 0.24,0.582 0.257,0.881 0.274,1.178 0.385,0.318 0.744,-0.807 0.501,-0.786 -0.217,-0.764 -1.246,-1.767 -0.283,-0.761 -0.624,-1.294 -1.399,-2.341 -0.373,-1.1 -0.235,-0.942 3.873,-0.893 3.734,0.788 0.607,0.556 0.398,0.771 0.391,1.167 0.599,1.185 1.21,1.8 1.721,1.11 -0.329,-0.756 -1.288,-1.983 -0.582,-1.371 0.003,-0.935 0.104,-0.717 0.204,-0.496 1.458,-1.909 2.084,-0.58 0.241,0.107 1.62,2.931 0.769,1.185 0.538,0.474 0.021,-0.206 -0.745,-1.331 -0.573,-0.729 -0.059,-0.458 0.95,-1.428 0.602,-0.36 2.528,-0.42 0.287,0.152 0.24,0.398 0.597,1.57 0.234,0.197 z m -62.856,38.523 0.367,1.514 1.354,3.554 0.613,1.272 1.042,1.568 0.129,0.561 0.012,0.235 -0.03,0.826 0.297,0.305 0.897,0.473 0.999,0.849 0.18,-0.048 0.348,-0.502 0.418,-0.138 0.549,0.121 0.263,0.359 0.192,0.527 0.081,0.376 0.012,0.29 -0.197,0.563 0.022,0.216 0.118,0.261 0.021,0.305 -0.198,1.187 0.055,0.434 0.502,1.07 0.455,0.531 0.897,0.575 0.584,-0.042 0.363,0.364 0.009,-0.224 -0.165,-0.678 -0.352,-0.967 -0.65,-0.5 -0.095,-0.57 -0.048,-0.977 0.056,-0.647 0.333,-0.524 0.282,-0.169 0.84,-0.024 0.463,0.234 0.8,0.731 0.083,0.397 0.043,0.782 0.033,1.561 -0.02,0.334 -0.684,0.875 -0.149,0.591 0.173,0.167 0.587,0.131 0.906,0.535 0.355,0.054 0.353,1.233 0.278,1.167 -0.203,1.414 -0.266,2.248 -0.213,0.511 -0.21,0.774 0.147,0.14 0.892,-0.308 0.18,-0.105 0.596,-0.756 0.875,0.176 0.294,0.196 0.145,0.265 0.267,0.841 0.22,1.107 0.163,-0.101 0.407,-1.344 0.148,-0.333 0.203,-0.323 0.086,0.06 0.411,1.257 0.914,2.195 0.314,0.897 0.061,0.66 -0.391,0.766 -0.305,0.381 -2.25,1.616 -1.007,0.907 -0.502,0.698 -0.256,0.232 -0.541,-0.108 -0.123,0.116 -0.167,1.114 -0.179,0.474 -0.466,0.763 -0.652,1.373 -0.389,0.599 -0.685,-0.437 -0.17,-0.639 -0.095,-1.448 -0.013,-0.604 0.021,-0.319 0.086,-0.52 0.297,-1.26 -0.036,-0.133 -0.137,0.106 -0.455,0.631 -0.179,0.331 -0.167,0.576 -0.074,0.963 0.066,1.762 -0.065,0.705 -0.18,0.349 0.072,0.271 0.536,0.372 0.095,0.163 0.059,0.295 0.023,0.425 -0.026,0.391 -0.161,0.601 -0.301,0.244 -0.384,-0.273 -0.831,-1.489 -0.361,0.083 -0.091,0.171 0.078,0.532 0.255,1.187 0.047,0.98 -0.118,0.811 -0.238,1.272 -0.163,0.676 -0.088,0.09 -0.413,0.02 -0.354,-0.341 -1.051,-2.225 -0.52,-0.958 -0.76,-1.889 -0.194,-0.392 -0.117,-0.087 -0.11,0.817 0.211,0.752 0.684,1.757 0.409,1.266 0.294,1.041 0.047,0.429 -0.101,0.169 -0.151,-0.096 -0.201,-0.362 -0.623,-0.612 -0.259,-0.343 -0.169,-0.397 -0.311,-0.302 -0.452,-0.208 -0.455,-0.04 -0.456,0.127 -0.086,0.194 0.514,0.542 0.179,0.301 0.133,0.384 0.087,0.466 -0.169,0.294 -0.638,0.184 -0.853,-0.117 -1.379,-0.405 -1.374,-0.671 -1.269,-1.049 -0.918,-1.059 -0.363,-0.567 -0.114,-0.426 0.344,-0.373 1.204,-0.48 1.207,-0.309 -0.191,-0.269 -2.19,-0.614 -0.721,-0.112 -0.384,0.162 -0.441,-0.095 -0.345,-0.49 -0.457,-0.931 -0.231,-0.619 0.031,-0.243 0.174,-0.138 0.991,0.118 0.136,-0.094 -0.496,-0.468 -1.588,-0.93 -0.596,-0.827 -0.109,-0.324 -0.045,-0.319 0.019,-0.314 0.597,-0.636 1.842,-1.514 0.632,-0.236 0.637,-0.015 0.443,-0.439 0.383,-1.454 1.908,-0.526 1.47,-0.659 0.123,-0.18 -1.103,0.122 -1.559,-0.132 -0.664,-1.004 -0.45,-0.172 -0.498,0.008 -0.579,0.316 -0.99,0.932 -0.476,0.216 -1.074,0.958 -0.299,-0.068 -0.15,-0.114 -0.045,-0.187 0.194,-0.636 0.282,-0.436 -0.058,-0.15 -0.421,-0.092 -0.488,0.018 -0.339,0.151 -1.238,0.843 -0.555,0.628 -0.167,0.056 -0.599,-0.982 -0.956,-0.542 -0.213,-0.424 0.196,-1.676 0.279,-0.347 0.733,-0.284 2.196,-1.542 0.124,-0.299 0.207,-0.787 -0.502,0.168 -1.101,0.76 -0.909,0.377 -0.717,-0.002 -0.524,-0.108 -0.332,-0.213 -0.399,-0.484 -1.3,-2.258 -0.354,-1.104 -0.05,-0.981 -0.091,-0.751 -0.376,-1.818 2.782,1.132 1.089,0.214 2.099,0.074 0.098,-0.111 0.031,-0.294 -0.037,-0.479 0.016,-0.37 0.069,-0.259 0.78,-0.66 0.118,-0.218 -0.919,-0.109 -1.69,1.103 -0.597,-0.01 -0.677,-1.579 -0.723,0.278 -0.342,-0.125 -0.532,-0.4 -0.261,-0.35 -0.169,-0.434 -0.072,-0.365 0.024,-0.298 0.143,-0.333 0.624,-0.464 0.282,-0.044 0.742,0.298 0.557,-0.022 -0.184,-0.497 -0.804,-1.26 -0.704,-1.407 0.053,-2.375 0.578,-0.508 0.599,-0.084 0.584,0.606 0.785,0.083 0.562,0.681 0.374,1.298 0.444,-0.024 0.699,0.244 1.565,-0.019 -0.283,-0.462 -0.487,-0.404 -1.106,-0.533 -0.54,-1.92 -1.143,-0.999 -0.895,-0.525 0.015,-0.443 0.672,-2.449 0.812,-0.879 1.294,0.333 0.851,-0.469 1.095,-0.878 1.073,0.407 0.277,-0.038 0.164,-0.271 0.143,-0.519 0.001,-0.479 -0.142,-0.44 -0.338,-0.548 -1.369,-0.076 -0.606,-0.216 -0.236,-0.293 -0.068,-0.443 -0.036,-0.458 -0.004,-0.472 0.036,-0.291 0.114,-0.159 0.336,-0.187 1.276,-0.024 0.764,-0.258 0.837,0.338 1.746,1.264 0.563,0.641 0.601,1.067 0.321,0.956 z m -19.382,19.723 0.063,2.087 -0.059,1.04 -0.143,0.763 -0.125,0.179 -0.168,0.025 -0.767,-0.596 -0.234,-0.352 -0.012,-0.297 -0.075,-0.583 -0.513,-0.759 -0.959,0.123 -0.399,-0.073 -0.16,-0.227 -0.1,-0.327 -0.094,-1.33 0.016,-0.472 0.118,-0.824 0.071,-0.2 0.703,-0.765 0.201,-0.065 0.86,0.289 0.762,0.037 0.383,0.214 0.342,0.479 0.201,0.722 0.088,0.912 z m -13.006,10.395 0.658,0.307 0.778,0.967 0.736,2.031 0.037,0.258 0.004,0.335 -0.03,0.41 -0.097,0.532 -0.134,0.318 0.378,0.386 0.042,0.188 -0.034,0.426 0.046,0.314 0.229,-0.31 0.196,-0.475 0.049,-0.306 0.04,-0.826 0.574,-0.413 0.603,-0.604 0.284,-0.137 0.474,0.141 1.136,1.427 0.433,0.136 0.158,0.167 0.144,0.329 0.01,0.355 -0.231,0.821 -0.088,0.498 0.054,0.323 0.593,0.271 1.351,-0.541 1.181,1.322 0.654,1.557 0.484,0.52 0.077,0.28 -0.138,0.263 -0.138,0.721 -0.388,0.535 -0.083,0.241 0.207,0.632 0.016,0.396 -0.027,0.548 0.075,0.307 0.53,0.327 1.209,2.219999 0.22,0.614 0.137,0.764 0.014,0.257 -0.173,0.421 -0.188,1.186 -0.107,0.27 -0.491,0.23 -0.892,0.208 -0.833,0.402 -0.895,-0.517 -0.874,-0.789 -0.265,-0.52 -0.218,-0.632 -0.057,-0.248 -0.088,-1.023 -0.047,-0.219 -0.369,-0.578999 -0.327,-0.87 -0.628,-0.076 -1.492,-0.89 -0.639,-0.213 -0.638,0.063 -0.905,0.359 -0.17,-0.096 -0.154,-0.267 -0.139,-0.438 -0.034,-0.322 0.148,-0.568 -2.654,0.715 -0.756,0.823 -1.06,-0.13 -0.529,-0.348 -0.704,-0.79 -0.325,-0.691 -0.298,-0.935 -0.028,-0.71 0.241,-0.481 0.251,-0.287 0.261,-0.092 1.44,0.561 1.262,0.285 0.544,-0.286 0.247,-0.766 -0.295,-0.413 -1.215,-0.169 0.259,-0.406 1.027,-0.419 0.536,-0.626 -0.103,-0.22 -0.309,-0.252 -1.376,0.074 -0.495,-0.249 -0.027,-0.207 0.111,-0.265 0.784,-1.288 -0.032,-0.235 -0.337,-0.425 -0.296,-0.554 -0.11,-0.063 -0.682,0.495 -0.958,1.896 -0.229,0.273 -0.219,-0.016 -0.209,-0.303 0.002,-0.396 0.213,-0.49 0.444,-1.477 -0.032,-0.53 -0.434,-0.354 -1.144,0.265 -0.637,0.01 -0.099,-0.42 -0.026,-0.789 0.026,-0.745 0.158,-1.172 0.221,-0.901 0.135,-0.323 1.517,0.191 2.478,-0.563 0.725,-0.06 0.788,0.554 z m 20.267,11.46 0.663,0.369 1.143,-0.162 0.416,0.269 1.071,0.944 0.325,0.555 0.078,0.418 0.001,0.212 -0.355,0.453 -0.713,0.689 -0.172,0.519 0.636,0.645 0.323,0.571 0.145,0.406999 0.005,0.418 -0.429,1.124 -0.314,0.329 -0.481,-0.036 -0.228,0.102 -0.615,0.521 -0.957,0.496 -1.306,0.204 -0.354,0.305 -0.648,0.498 -0.437,0.078 -0.143,-0.285 -0.065,-0.421 0.034,-0.292 0.092,-0.363 -0.208,-0.341 -0.936,-0.656 -0.545,-0.918 -0.078,-0.291 -0.027,-0.258 1.211,-0.171 0.521,-0.187 0.231,-0.300999 0.039,-0.176 -0.232,-0.076 -0.83,-0.628 -1.392,-0.376 -0.066,-0.438 -0.58,-0.879 -0.056,-0.84 -0.126,-0.233 -0.395,-0.367 -0.058,-0.121 -0.117,-0.546 -0.018,-0.299 0.022,-0.272 0.716,-0.577 -0.1,-0.401 -0.544,-1.506 -0.143,-0.844 0.023,-0.321 0.338,-0.448 0.475,-0.01 1.254,0.136 0.6,0.187 0.598,0.363 0.655,0.538 0.979,0.475 0.313,0.313 0.589,0.994 0.063,0.314 -0.039,0.312 0.148,0.282 z m -38.201,-1.69 0.491,0.829 0.168,-0.016 0.215,0.152 0.104,0.216 0.295,1.049 0.056,0.518 0.018,0.665 -0.045,0.555 -0.108,0.445 -0.264,0.281 -0.629,0.175 -0.878,-0.264 -0.762,0.341 -0.351,0.044 -0.945,-0.218 -0.238,-0.16 -0.524,-0.629 -0.4,-0.26 -0.168,0.139 -0.201,0.553 -0.377,0.681 -0.231,0.175 -0.68,-0.114 -1.042,-1.152 -1.197,0.341 -1.241,0.673 -0.484,0.126 -0.142,-0.195 -0.195,-0.506 0.03,-0.255 0.37,-0.775 0.826,-0.818 0.604,-0.463 1.198,-0.676 1.418,-0.381 0.53,-0.405 0.335,-0.58 0.923,-0.919 0.544,-0.383 0.729,-0.328 0.59,0.017 0.75,0.75 0.56,0.372 0.348,0.4 z m 19.12,7.032 -0.322,0.273999 -0.376,-0.160999 -0.053,-0.171 -0.007,-0.207 0.038,-0.243 0.42,-0.856 0.385,-0.294 0.229,-0.056 0.186,0.292 0.104,0.439 -0.604,0.983 z m -20.922,0.588999 2.249,0.326 0.097,0.061 0.009,0.244 -0.169,0.778 -0.259,0.564 -1.2,0.705 -1.548,0.637 -0.321,0.308 0.025,0.183 0.126,0.229 0.259,0.288 1.199,-0.065 0.289,0.124 0.102,0.187 0.062,0.271 0.038,0.354 0.001,1.193 -0.063,0.688 -0.166,0.619 -0.485,0.439 -0.874,0.578 -0.592,0.257 -0.467,-0.093 -0.465,0.06 -2.037,1.083 -0.63,0.006 -0.55,-0.261 -0.761,-1.024 -0.791,-0.404 -0.338,-0.463 -0.332,-0.254 -0.092,-0.372 -0.032,-0.278 0.056,-0.255 0.144,-0.232 0.047,-0.198 -0.132,-0.575 -0.061,-0.551 -0.229,-0.795 -0.034,-0.459 10e-4,-0.301 0.038,-0.325 0.152,-0.581 0.079,-0.118 0.464,-0.091 0.609,-0.302 1.403,-0.877 3.082,-1.103 0.936,0.103 0.41,-0.217 0.751,-0.091 z m -9.47,4.677 -0.768,0.449 -0.509,-0.011 -0.901,-0.633 -1.044,-1.946 -0.137,-0.7 0.39,-0.126 0.284,-0.216 0.177,-0.306 0.335,-0.335 0.776,-0.504 0.094,0.195 -0.017,0.413 0.064,0.384 0.278,0.082 0.263,0.274 0.532,0.838 0.364,0.161 0.131,0.183 0.069,0.28 0.221,0.487 -0.004,0.252 -0.299,0.5 -0.299,0.279 z m 34.068,0.766 -0.386,0.122 -0.698,-0.064 -0.836,-0.474 -0.226,-0.556 -0.047,-0.883 0.01,-0.491 0.067,-0.096 0.518,-0.117 0.969,-0.137 0.781,0.1 0.891,0.507 0.361,0.325 0.184,0.228 0.229,0.462 0.075,0.204 0.049,0.362 -1.11,0.08 -0.524,0.142 -0.307,0.286 z m 17.426,-1.261 0.706,0.506 0.767,-0.268 0.823,-0.029 1.83,0.216 1.212,-0.144 0.313,0.085 0.478,0.324 0.253,0.391 0.23,0.658 -0.591,0.4 -0.506,2.021 -0.068,0.1 -0.551,0.027 -0.27,0.16 -1.607,-0.285 -4.429,-0.128 -0.194,-0.251 -0.583,-1.185 -0.036,-0.471 0.105,-0.551 0.125,-0.368 0.145,-0.183 1.289,-0.898 0.559,-0.127 z m -25.466,8.409 -0.43,0.224 -0.854,-0.512 -0.56,-0.221 -0.463,-0.916 -0.495,-1.256 -0.39,-1.399 -0.146,-0.83 -0.283,-0.495 -0.098,-0.824 -0.514,-1.3 0.085,-0.191 0.484,-0.192 0.772,0.243 0.37,0.462 0.467,0.773 0.605,1.225 0.187,0.54 0.037,0.739 0.109,0.399 0.52,0.07 0.64,0.969 0.116,0.374 0.132,0.757 -0.009,0.36 -0.102,0.74 -0.18,0.261 z m 41.325,-1.594 -0.734,0.727 -0.375,-0.026 -2.147,-1.49 -0.432,-0.741 -0.083,-0.501 -0.023,-0.713 0.007,-0.982 0.093,-0.664 0.113,-0.231 0.253,-0.237 0.495,-0.146 0.471,0.083 0.708,0.266 0.704,0.44 0.935,1.344 0.335,0.637 0.071,0.824 -0.001,0.502 -0.049,0.365 -0.097,0.228 -0.244,0.315 z m -72.177,-1.223 0.212,0.499 0.015,0.2 -0.102,0.211 -0.329,0.334 -1.655,1.112 -0.324,0.52 0.122,0.445 0.597,0.898 0.607,0.757 0.131,0.375 -0.289,0.38 -0.553,-0.121 -0.206,0.033 -0.195,0.176 0.053,0.334 0.611,1.106 0.201,0.592 -0.005,0.305 -0.108,0.297 -0.256,0.407 -0.405,0.515 -0.694,0.411 -1.492,0.549 -0.049,0.427 0.01,0.324 -0.036,0.785 -0.051,0.362 -0.178,0.608 -0.129,0.284 -0.224,0.195 -0.318,0.106 -0.408,-0.002 -0.673,-0.521 -0.306,-0.334 -0.425,-0.726 -0.077,-0.487 0.042,-0.601 0.112,-0.932 0.185,-0.958 0.258,-0.985 0.077,-0.616 -0.105,-0.244 -0.176,-0.012 -0.549,0.401 -0.354,0.146 -0.274,0.292 -0.194,0.436 -0.11,0.471 -0.062,0.901 -0.104,0.491 -0.296,0.267 -0.443,-0.004 -0.168,0.151 -0.083,0.327 0.06,0.264 0.437,0.554 0.054,0.616 -0.053,0.371 -0.472,0.682 -0.111,0.228 -0.293,1.062 -0.108,0.267 -0.244,0.243 -0.246,-0.028 -0.228,-0.386 -0.333,-0.732 -0.225,-0.633 -0.115,-0.532 -0.098,-0.237 -0.159,0.164 -0.192,0.552 -0.005,0.427 0.042,0.634 -0.011,0.39 -0.28,0.456 0.041,0.208 0.492,0.558 0.063,0.25 0.003,0.387 -0.033,0.174 -0.197,-0.028 -0.166,0.446 -0.19,0.353 -0.5,0.651 -0.695,0.079 -0.575,0.312 -0.122,-0.01 -0.139,-0.511 -0.156,-1.017 -0.139,-0.58 -0.208,-0.297 -0.257,-1.167 -0.12,-0.378 -0.118,-0.152 -0.098,-0.04 -0.145,0.226 -0.334,1.671 -0.545,0.424 -0.3,0.077 -0.302,-0.047 -0.748,-0.455 -0.6,-0.168 -0.419,0.193 -0.688,0.677 -0.274,0.18 -0.372,-0.077 -0.163,-0.255 -0.139,-0.418 -0.016,-0.254 0.108,-0.089 0.171,-0.487 -0.005,-0.196 -0.169,-0.282 -0.002,-0.22 0.061,-0.149 -0.014,-0.106 -0.087,-0.064 -0.17,0.06 -0.612,0.324 0.069,-0.353 0.292,-0.74 0.715,-1.485 0.27,-0.439 0.162,-0.133 2.109,-0.48 0.148,-0.144 1.002,-2.033 0.286,-0.469 0.293,-0.374 1.438,-1.245 0.134,-0.286 0.225,-0.869 0.131,-0.219 0.311,-0.331 1.036,-1.778 0.944,-1.297 0.479,-0.808 0.656,-0.821 0.758,-0.353 2.287,-0.622 1.646,0.817 0.392,0.051 0.192,-0.231 0.173,-0.376 0.246,0.158 0.611,0.115 0.135,-0.09 0.257,-0.428 -0.176,-0.235 -0.74,-0.433 -0.045,-0.221 0.017,-0.209 0.26,-0.501 0.314,-0.325 0.909,-0.244 0.417,0.063 0.432,0.348 0.563,0.717 1.282,1.251 z m 59.656,5.683 0.525,0.107 0.449,-0.165 0.385,0.037 0.568,0.499 0.527,0.759 0.404,0.343 0.131,0.172 0.051,0.191 0.063,0.57 -0.002,0.264 -0.03,0.21 -0.177,0.518 -0.149,0.639 -0.307,0.561 -0.164,0.422 -0.141,0.532 0.316,-0.317 1.197,-1.764 0.784,0.211 1.176,-0.158 1.425,-0.726 0.676,-0.113 0.683,0.053 0.507,0.229 1.083,0.977 0.375,0.464 0.141,0.327 0.034,0.241 -0.222,0.373 -0.68,-0.227 -1.12,-0.2 -0.205,-0.124 -0.174,0.01 -0.127,0.135 0.08,0.512 0.228,0.112 1.345,0.11 4.407,1.616 0.184,0.513 -0.049,0.227 -0.156,0.25 -0.321,0.336 -2.542,0.366 -1.446,-0.324 -1.215,-0.522 -0.413,0.117 0.359,0.707 0.729,0.215 0.61,0.417 0.253,0.348 1.293,0.265 0.211,0.27 0.402,0.688 0.337,0.053 0.334,0.479 0.275,0.82 0.127,0.109 0.39,-0.147 0.656,0.708 0.204,0.378 0.001,0.282 -0.146,0.441 -0.293,0.597 -0.742,0.701 -0.058,0.21 0.867,-0.082 0.16,0.093 1.021,1.235 0.134,0.022 0.084,-0.128 0.098,-0.437 -0.044,-0.405 -0.125,-0.563 0.033,-0.41 0.192,-0.255 0.193,-0.126 0.196,0.002 0.213,0.151 1.032,1.499 1.324,-0.715 0.241,0.321 0.2,0.6 0.093,0.099 0.49,-1.196 0.302,-0.298 1.242,1.421 0.757,0.313 0.304,0.303 0.562,0.333 0.799,0.126 0.132,-0.523 -0.46,-0.674 0.269,-0.296 1.099,-0.574 0.587,0.081 1.082,-0.816 0.664,-0.111 0.408,0.014 1.339,-1.24 0.318,-0.198 0.231,-0.446 0.526,0.07 1.424,0.708 0.403,-0.064 1.515,-0.706 0.561,-0.173 0.562,0.026 1.421,0.414 1.063,0.444 0.33,0.233 -0.117,0.582 0.054,0.172 0.138,0.125 0.347,0.17 1.328,0.011 0.577,0.147 0.459,0.541 0.11,0.215 -0.019,0.224 -0.452,0.581 0.074,0.122 0.451,0.135 1.016,0.066 0.218,0.134 0.209,0.72 0.219,0.992 -0.004,0.393 -0.352,0.665 -0.962,0.884 -1.067,0.731 -0.069,0.188 0.341,0.348 0.352,0.152 0.277,-0.03 0.852,-0.331 0.193,0.006 0.391,0.338 0.181,0.334 0.166,0.445 -0.299,0.403 -1.225,0.5 -0.724,-0.657 -0.243,-0.146 -0.165,0.057 0.093,0.289 0.35,0.52 0.115,0.343 -0.122,0.166 -0.058,0.328 0.007,0.488 -0.029,0.495 -0.118,0.768 -0.042,0.031 -2.662,0.157 -0.321,0.138 -0.749,0.538 -0.566,0.27 -0.369,0.041 -0.36,-0.098 -0.972,-0.558 -0.647,0.105 -0.254,-0.053 -0.548,-0.372 -0.133,-0.188 -0.222,-0.489 -0.167,-0.672 0.013,-0.415 0.07,-0.6 -0.043,-0.302 -0.156,-0.001 -0.174,-0.125 -0.524,-0.606 -0.323,-0.179 -0.06,0.099 0.095,0.474 0.063,0.151 0.345,0.345 0.064,0.399 -0.147,1.005 -0.052,0.161 -0.335,0.733 -0.253,0.208 -0.691,0.016 -1.058,0.518 -0.506,0.075 -0.678,-0.121 -0.424,-0.236 -0.275,-0.271 -0.267,-0.385 -0.14,-0.029 -0.071,0.835 -0.131,0.108 -0.227,-0.013 -0.351,-0.259 -0.289,-0.604 -0.09,0.002 -0.04,0.352 -0.065,0.231 -0.089,0.109 -0.743,0.376 -0.414,0.002 -0.433,-0.431 -0.284,0.043 -0.364,0.233 -0.884,-0.441 -0.211,-0.018 0.182,0.714 -0.292,0.11 -0.63,-0.018 -1.036,-0.23 -0.642,0.334 -1.16,-0.2 -1.171,-0.05 -0.218,-0.163 -0.154,-0.334 -0.006,-0.297 0.057,-0.413 0.171,-0.616 0.286,-0.821 0.099,-0.435 -0.258,-0.202 -0.16,-0.27 -0.131,-0.031 -0.413,0.319 -0.269,0.926 -0.206,0.268 -0.091,-0.225 -0.068,-0.562 -0.091,-0.274 -0.113,0.015 -0.11,0.15 -0.107,0.286 -0.161,0.103 -0.215,-0.078 -0.076,0.14 0.063,0.357 0.022,0.333 -0.019,0.311 -0.186,0.3 -0.528,0.436 -0.305,0.139 -0.802,0.065 -0.479,-0.129 -0.972,-0.523 -0.538,-0.024 -0.648,-0.881 -0.513,-0.204 0.026,-0.321 0.224,-0.597 -0.007,-0.179 -0.701,0.871 -0.095,0.277 0.082,0.642 -0.093,0.046 -0.482,-0.23 -0.474,0.175 -0.114,-0.052 -0.327,-0.463 -0.576,-0.472 -0.254,-0.531 -0.396,-1.668 -0.201,-1.113 0.025,-0.228 0.294,-0.316 -0.044,-0.247 -0.366,-0.631 -0.395,-0.533 -0.117,-0.37 -0.054,-0.375 -0.052,-0.544 -0.002,-0.403 0.047,-0.261 0.226,-0.817 0.618,-1.474 0.083,-0.269 0.033,-0.266 -0.085,-0.788 -0.12,-0.793 -0.121,-0.569 -0.341,-0.789 -0.469,-0.824 -0.66,-1.489 -0.489,-1.167 -0.585,-1.657 -0.282,-0.144 -0.327,0.076 -0.705,0.573 -0.237,0.271 -0.058,0.182 -0.525,0.041 -1.488,-0.149 -0.569,-0.176 -0.425,0.046 -0.729,0.42 -0.778,-0.079 -0.487,-1.17 -1.106,-0.633 -0.33,-0.356 -0.226,-0.488 0.075,-0.32 0.629,-0.287 0.262,-0.317 0.125,-0.256 -0.624,0.221 -0.275,-0.039 -1.876,-1.618 -0.578,-0.287 -0.098,-0.146 -0.049,-0.192 10e-4,-0.239 0.055,-0.36 0.558,0.455 0.25,0.034 0.391,-0.136 0.139,-0.284 -0.089,-0.166 -0.639,-0.547 -0.309,-0.417 -0.119,-0.304 0.123,-0.432 0.032,-0.293 0.206,-0.165 0.379,-0.037 0.485,-0.208 0.887,-0.568 0.594,-0.203 0.593,0.031 1.437,0.581 1.432,0.735 0.898,0.57 z m -54.069,2.083 -0.426,0.4 -2.916,-0.591 -0.159,-0.186 -0.076,-0.253 0.528,-0.693 0.638,-0.3 1.482,-0.241 0.517,0.271 0.342,0.316 0.194,0.274 0.081,0.513 -0.205,0.49 z m 66.89,2.86 -0.131,0.164 -0.423,-0.084 -0.14,0.16 -0.225,-0.091 -0.31,-0.342 -0.362,-0.674 -0.414,-1.01 -0.323,-0.875 -0.018,-0.241 0.106,-0.411 0.323,-0.274 0.767,-0.33 0.526,0.009 0.489,0.666 0.138,0.229 0.084,0.272 0.002,0.261 -0.04,0.228 -0.222,0.506 -0.097,0.352 0,0.344 0.048,0.498 0.089,0.327 0.131,0.158 0.002,0.158 z m -52.105,5.328 0.354,0.033 0.414,-0.128 0.467,0.088 0.211,0.261 0.15,0.463 0.006,0.248 -0.03,0.213 -0.065,0.177 -0.604,1.159 -0.141,0.399 0.195,0.097 0.094,-0.067 0.603,-0.865 0.454,-0.271 0.344,-0.063 0.567,0.173 0.226,0.149 0.155,0.177 0.084,0.204 0.223,0.827 0.161,1.063 0.026,-0.109 0.004,-0.595 0.031,-0.465 0.557,-0.314 0.014,-0.104 -0.2,-0.259 -0.17,-0.354 -0.118,-0.664 0.046,-0.248 0.116,-0.267 0.357,-0.569 0.417,-0.341 0.37,-0.083 1.38,0.594 0.543,0.487 0.221,0.25 0.08,0.178 0.115,0.568 0.231,1.545 -0.001,0.494 -0.107,0.792 -0.446,1.474 -0.068,0.993 -0.449,2.443 -0.307,0.658 -0.338,0.459 -1.391,0.805 -1.046,0.815 -0.265,0.128 -0.275,0.011 -0.866,-0.27 -1.005,-0.519 -0.571,0.147 -0.57,0.374 -0.359,0.1 -0.337,-0.049 -0.335,-0.134 -0.441,-0.351 0.228,-0.16 0.104,-0.18 -0.092,-0.185 -0.464,-0.267 -0.481,0.593 -1.405,1.377 -1.888,0.459 -0.592,0.279 -0.439,0.359 -0.229,0.295 -0.35,0.692 -0.538,0.519 -0.973,0.566 -1.238,0.875 -2.219,0.892 -1.396,0.156 -1.395,-0.294 -0.442,-0.24 -0.463,-0.376 -0.949,-0.892 -0.262,-0.323 -0.305,-0.704 0.18,-0.47 0.506,-0.544 0.757,-0.496 1.511,-0.673 1.371,-1.082 0.485,-0.204 1.32,-0.167 0.665,0.102 0.481,-0.057 0.317,-0.149 0.471,-0.393 0.688,-0.786 0.502,-0.739 0.127,-0.347 -0.168,-0.325 -0.246,-0.046 -0.821,0.763 -0.413,0.256 -0.449,0.018 -0.616,0.26 -0.6,0.104 -0.116,-0.008 -0.625,-0.727 -0.334,-0.128 -0.155,0.076 -0.143,0.193 -0.271,0.536 -0.156,0.193 -0.27,0.139 -1.09,0.159 -1.044,0.268 -0.232,-0.166 -0.141,-0.31 -0.029,-0.188 -0.016,-0.639 -0.07,-0.254 0.092,-0.534 0.119,-0.408 0.146,-0.281 0.718,-0.832 0.101,-0.217 -0.342,0.045 -0.813,0.408 -0.106,-0.141 -0.19,-0.467 -0.091,-0.047 -0.104,0.194 -0.061,0.272 -0.14,1.122 -0.123,0.571 -0.327,-0.115 -0.404,-0.345 -0.151,-0.046 -0.087,0.109 0.028,0.193 0.41,0.953 0.005,0.332 -0.269,0.58 -1.144,0.958 -0.452,0.256 -0.16,-0.099 -0.144,-0.262 -0.127,-0.427 -0.297,-0.575 -0.176,-0.129 -0.198,-0.017 -0.182,0.119 -0.166,0.255 -0.104,0.271 -0.098,0.503 -0.208,0.384 -0.128,0.065 -1.162,-0.796 -0.936,-1.421 -1.024,0.222 -0.459,-0.05 -1.396,-0.523 -0.177,-0.324 -0.098,-0.423 0.01,-0.23 0.058,-0.238 0.177,-0.474 0.352,-0.719 0.147,-0.232 0.219,-0.192 0.29,-0.151 0.739,-0.084 1.903,-0.027 0.381,-0.112 2.082,-1.407 0.238,-0.232 0.305,-0.453 0.069,-0.188 -0.013,-0.123 -2.561,1.123 -1.098,0.241 -1.683,-0.183 -0.317,-0.176 -0.072,-0.313 0.351,-0.834 0.185,-0.311 0.479,-0.295 1.158,-0.418 1.548,-0.371 1.014,-0.008 0.851,-0.295 0.512,-0.338 -1.714,0.018 -2.064,0.158 -0.298,-0.11 -0.59,-0.446 -0.028,-0.326 0.236,-0.393 0.086,-0.294 -0.169,-0.662 0.052,-0.258 0.385,-0.554 0.686,-0.601 0.423,-0.086 0.816,0.206 2.326,0.213 0.451,-0.077 -0.285,-0.261 -0.405,-0.195 -1.796,-0.334 -0.372,-0.15 -0.071,-0.206 -0.027,-0.305 0.018,-0.404 0.13,-0.414 0.557,-0.869 1.634,-0.719 0.65,-0.099 0.651,0.047 0.662,0.323 0.295,0.28 0.148,0.344 0.071,0.32 0.008,0.552 0.032,0.217 0.12,0.362 0.381,0.846 0.28,0.263 1.292,-0.491 0.538,-0.11 0.541,0.154 0.788,0.506 1.021,1.52 1.315,1.538 -0.006,0.33 -0.504,0.51 -0.095,0.218 0.068,0.151 0.503,0.1 0.471,-0.075 0.45,0.114 0.101,0.131 0.165,0.554 0.229,0.975 0.272,0.724 0.315,0.477 0.311,0.244 0.458,0.018 0.46,-0.142 0.747,0.047 3.854,0.548 0.228,-0.095 0.163,-0.301 0.097,-0.508 0.037,-0.419 -0.053,-0.574 -0.075,-0.275 -2.389,-1.873 -0.208,-0.761 1.167,-1.067 0.084,-0.248 0.022,-0.341 -0.039,-0.435 -0.158,-0.416 -0.627,-0.796 -0.555,-0.12 -0.822,-0.789 -0.129,-0.2 -0.106,-0.316 -0.083,-0.433 0.014,-0.333 0.111,-0.234 0.81,-0.812 0.328,-0.452 1.01,-2.05 0.467,-0.834 0.334,-0.393 0.34,-0.244 0.749,-0.114 0.779,0.774 0.172,0.048 0.071,0.203 -0.03,0.359 -0.098,0.341 -0.279,0.614 -0.065,0.257 0.021,0.265 0.191,0.608 0.059,0.399 0.042,0.671 0.031,0.099 0.469,0.564 0.426,0.733 0.197,1.143 -0.153,0.393 -0.359,0.54 -0.213,0.449 -0.068,0.358 0.054,0.216 0.265,0.112 z m 19.832,-6.195 -0.727,0.053 -0.336,-0.145 -0.022,-0.213 0.291,-0.28 0.967,-0.458 0.569,-0.838 0.212,-0.104 0.743,-0.12 0.433,0.026 0.556,0.198 -1.34,1.036 -1.346,0.845 z m 9.893,1.359 0.032,0.534 -0.034,0.412 -0.099,0.289 -0.004,0.332 0.09,0.374 0.375,0.939 0.119,0.502 0.018,0.502 -0.019,0.343 -0.231,0.663 -0.103,0.853 -0.006,0.45 0.138,0.701 0.004,0.325 -0.26,0.555 -0.551,0.482 0.078,0.254 1.188,0.608 0.09,0.137 -0.006,1.359 0.207,1.481 -0.077,0.028 -0.286,-0.461 -0.528,-0.55 -0.631,1.024 0.072,1.727 0.415,0.765 0.126,0.435 -0.041,0.261 -0.351,0.116 -0.122,-0.057 -0.36,-0.344 -0.209,-0.521 -0.066,0.018 -0.064,0.251 0.042,0.255 0.244,0.462 0.103,0.551 -0.108,0.156 -0.362,0.142 -0.489,0.006 -0.768,0.248 -0.378,0.038 -0.369,-0.134 -0.492,-0.032 -0.409,0.059 -0.25,-0.109 -0.228,-0.257 -0.265,0.062 -0.579,0.651 -0.897,-0.207 -0.808,-0.053 -0.163,-0.217 -0.181,-0.424 -0.356,-1.33 0.067,-0.336 0.863,-0.183 0.018,-0.115 -0.613,-0.479 -0.704,-0.353 -0.326,-0.278 0.075,-0.531 -0.021,-0.134 1.213,-0.609 0.882,-1.207 0.547,-0.493 0.04,-0.239 0.463,-0.249 1.071,-0.15 0.042,-0.338 -2.022,0.194 -2.769,0.689 -0.856,0.338 -0.714,-0.197 -3.031,1.061 -0.129,0 -0.317,-0.336 -0.272,-0.631 0.195,-0.441 0.89,-0.84 0.445,-0.74 -0.052,-0.4 0.354,-0.714 0.566,-0.101 0.963,0.587 0.5,0.581 0.449,0.271 0.398,-0.054 0.412,-0.405 -0.104,-0.046 -0.699,0.215 -0.082,-0.063 -0.356,-0.649 -0.155,-0.415 -0.1,-0.416 -0.006,-0.294 0.215,-0.56 -0.801,-0.185 -0.299,-0.389 -0.137,-0.486 0.03,-0.211 0.252,-0.571 0.68,-0.79 -0.079,-0.219 -0.99,0.018 -0.218,-0.103 -0.422,-0.494 0.093,-0.549 0.394,-0.807 0.297,-0.478 0.199,-0.147 0.31,0.003 0.735,0.313 0.212,0.172 0.563,0.778 0.144,0.443 -0.018,0.425 0.108,0.312 0.437,0.454 1.878,2.33 0.351,0.547 0.24,0.241 0.434,0.177 0.254,-0.037 0.207,-0.163 0.035,-0.211 -0.812,-0.809 -0.204,-0.432 -0.174,-0.591 0.076,-0.191 0.236,-0.066 0.594,0.078 0.699,-0.16 -0.775,-0.25 -0.506,-0.332 -0.52,-0.016 -0.65,-0.534 0,-0.167 0.159,-0.171 0.884,-0.238 0.167,-0.102 0.015,-0.149 -0.292,-0.36 -0.26,-0.196 -1.336,-0.437 -0.475,-0.49 -0.151,-0.234 -0.048,-0.227 0.171,-0.582 0.718,-0.732 0.521,-0.351 0.896,-0.257 0.715,0.031 0.407,0.099 0.953,1.242 0.449,0.812 0.784,-0.142 -0.227,-0.854 -0.147,-0.942 0.232,-0.347 0.646,-0.617 0.514,0.323 0.67,0.833 0.147,0.283 0.754,0.512 0.446,0.17 0.231,0.273 0.073,0.353 z m -17.742,-1.405 0.139,0.067 0.428,-0.241 0.276,-0.043 0.308,0.455 0.08,0.297 1.107,0.738 0.39,0.331 0.05,0.22 -0.139,0.314 -0.327,0.409 -0.314,0.277 -0.451,0.22 -2.241,0.033 -0.244,-0.1 -0.141,-0.363 -0.277,-1.36 -0.197,-0.736 -0.074,-0.514 0.049,-0.288 0.239,-0.29 0.829,-0.434 0.367,0 0.23,0.111 0.094,0.221 -0.029,0.299 -0.152,0.377 z m 5.039,6.732 0.588,0.711 0.028,0.163 -0.111,0.135 -0.76,0.375 -0.295,0.299 -0.247,0.697 -0.192,0.322 -1.021,0.192 -1.042,-0.009 0.196,-0.672 0.57,-1.102 -0.449,-0.458 -1.594,0.763 -0.605,-0.469 0.518,-1.204 -0.516,-0.111 -0.724,-0.005 -0.459,-0.717 0.155,-0.865 0.95,-0.479 1.237,-0.415 1.328,-0.63 1.039,0.053 0.404,0.3 0.134,1.005 0.129,1.188 0.181,0.101 0.558,0.832 z m 65.01,1.03 0.032,0.678 -0.204,-0.031 -0.649,0.442 -0.53,0.063 -0.265,-0.198 -0.168,-0.463 0.414,-0.866 0.476,-0.608 0.571,-0.949 0.475,-0.626 0.234,0.131 0.227,0.332 -0.284,0.942 -0.31,0.467 -0.019,0.686 z m -110.197,3.946 -0.802,0.722 -0.57,-0.075 -0.756,-0.531 -0.616,-0.18 -0.217,-0.177 -0.032,-0.184 0.209,-0.512 0.262,-0.409 0.627,-0.807 1.059,-1.568 0.693,-0.596 0.68,-0.423 0.694,-0.948 0.384,-0.425 0.333,-0.031 0.34,0.183 0.038,0.259 -0.357,1.292 -0.251,0.518 -0.491,1.329 -0.942,2.208 -0.285,0.355 z m 66.799,-1.922 -0.274,0.005 -0.357,-0.237 -0.101,-0.248 -0.077,-0.341 -0.053,-0.433 -0.074,-0.348 -0.096,-0.261 -0.02,-0.218 0.056,-0.175 0.117,-0.098 0.267,-0.032 0.581,-0.454 0.11,0.049 0.077,0.241 0.079,0.628 0.083,0.371 0.229,0.676 0.101,0.434 -0.021,0.134 -0.072,0.119 -0.555,0.188 z m -74.511,0.047 -0.219,0.053 -0.243,-0.128 0.056,-0.292 0.547,-0.801 0.03,-0.229 -0.007,-0.188 -0.068,-0.22 0.138,-0.282 0.222,-0.116 0.074,0.11 0.025,0.246 -0.051,0.714 -0.069,0.345 -0.094,0.294 -0.145,0.263 -0.196,0.231 z m 70.155,2.657 -0.218,0.368 -0.225,0.027 -0.303,-0.348 -0.329,0.131 -0.45,0.704 -0.16,0.413 -0.123,0.149 -0.377,0.129 -0.163,-0.117 -0.153,-0.367 -0.144,-0.619 0.106,-0.467 0.355,-0.315 0.935,-0.515 0.268,-0.256 0.029,-0.275 0.056,-0.182 0.083,-0.089 0.624,0.465 0.296,0.313 0.224,0.354 -0.024,0.141 -0.307,0.356 z m 7.117,5.32 0.181,0.823 0.033,0.331 0.009,0.697 -0.077,0.905 -0.052,0.166 -0.074,0.076 -0.036,0.232 0.003,0.388 -0.073,0.236 -0.149,0.084 -1.006,0.177 -0.622,-0.034 -0.922,0.113 -0.457,-0.057 -0.299,-0.19 -0.435,-0.423 -0.919,-1.004 -0.463,-0.035 -1.163,-0.354 -0.642,-1.098 -0.246,-0.197 -0.248,0.329 -0.067,-0.074 -0.068,-0.222 -0.069,-0.37 -0.121,-0.19 -0.487,0.099 -0.088,-0.125 -0.023,-0.325 0.007,-0.283 0.087,-0.445 0.513,-1.233 0.254,-0.087 0.314,-0.229 0.174,-0.671 -0.018,-0.636 0.478,-0.952 0.285,-0.282 0.512,-0.668 1.744,-1.049 0.481,-0.092 0.644,0.079 0.622,0.335 0.479,0.555 0.976,1.36 0.444,0.817 0.236,0.835 0.212,0.478 0.263,1.024 -0.096,0.399 -0.057,0.536 0.026,0.251 z m -29.685,-0.091 -0.53,0.059 -0.914,-0.33 -0.544,-0.637 -0.166,-0.307 0.016,-0.139 0.094,-0.138 0.131,-0.417 0.311,-1.209 0.117,-0.322 0.49,-0.703 0.359,-0.188 0.762,0.06 0.442,0.364 0.185,0.234 0.132,0.28 0.13,0.625 0.032,0.403 0.222,0.459 0.066,0.265 0.004,0.259 -0.062,0.262 -0.127,0.263 -0.292,0.384 -0.858,0.473 z m 24.735,5.67 -0.128,0.053 -0.25,-0.06 -0.942,-0.47 -0.16,-0.193 -0.046,-0.142 0.214,-0.171 0.081,-0.182 0.239,-0.222 0.422,0.001 0.442,0.541 0.208,0.486 0.011,0.214 -0.091,0.145 z m -5.75,-0.219 -0.844,0.636 -0.184,-0.247 -0.08,-0.224 0.656,-0.968 0.28,-0.255 0.276,0.302 0.076,0.229 -0.035,0.176 -0.145,0.351 z m -62.812,4.293 0.022,0.043 0.722,-0.953 0.438,-0.052 0.306,0.085 0.097,0.122 0.061,0.188 0.03,0.414 0.02,1.02 0.039,0.126 0.1,-0.058 0.159,-0.24 0.791,-1.51 0.333,-0.417 0.228,-0.125 0.966,-0.228 0.656,0.007 0.725,0.142 0.541,0.213 0.887,0.625 0.697,0.716 0.64,0.759 2.146,2.822 0.908,0.824 0.347,0.466 0.154,0.339 0.135,0.424 0.042,0.395 -0.053,0.367 -0.099,0.256 -0.218,0.217 -1.313,0.917 -0.691,0.28 -0.685,0.403 -1.636,1.415 -1.12,0.669 -1.456,1.298 -2.746,2.067 -0.327,0.413 -0.15,0.296 -0.775,2.315 -0.295,0.533 -0.714,0.542 -0.904,0.135 -0.253,0.151 -0.041,0.787 -0.324,1.299 -0.158,0.869 -0.216,2.305 -0.05,0.229 -0.165,0.423 -0.28,0.457 -0.873,0.526 -0.644,0.275 -0.876,0.228 -0.209,-0.156 -0.211,-0.359 -0.221,-0.032 -0.136,0.057 -1.143,1.569 -1.103,0.631 -0.478,0.568 -0.337,0.266 -0.271,0.082 -0.446,-0.05 -0.323,-0.257 -0.292,-0.397 -0.22,-0.432 -0.566,-1.79 -0.244,-0.617 -0.207,-0.309 -0.555,-1.105 -0.153,-0.223 -2.111,-1.413 -1.028,-0.798 -0.249,-0.282 -0.23,-0.165 -1.32,0.11 -0.175,-0.043 -0.045,-0.118 0.156,-0.421 0.062,-0.266 0.021,-0.261 -0.023,-0.422 0.017,-0.077 0.501,-0.417 -0.081,-0.087 -0.059,-0.163 -0.036,-0.241 0.054,-0.168 0.146,-0.097 0.177,-0.391 0.208,-0.688 0.155,-0.388 0.215,-0.25 0.386,-0.67 0.276,-0.271 0.233,-0.341 0.007,-0.154 -0.095,-0.118 -0.033,-0.261 0.043,-0.817 -0.002,-0.422 0.042,-0.354 0.086,-0.285 0.109,-0.189 0.978,-0.598 0.049,-0.174 0.012,-0.2 -0.026,-0.227 -0.05,-0.159 -0.155,-0.131 -0.261,-0.036 -0.227,-0.347 -0.054,-0.168 0.091,-0.477 0.441,-0.763 0.149,-0.378 0.476,-1.715 0.87,-1.071 0.236,-1.16 0.654,-1.239 -0.001,-0.172 -0.211,-0.425 -0.603,-0.295 -0.291,-0.456 -0.194,-0.52 -0.883,-3.019 -0.151,-0.227 -0.045,-0.355 -0.18,-0.235 0.037,-0.22 3.446,-0.917 2.372,-0.293 2.457,-0.803 0.684,-0.047 0.53,0.159 0.523,0.417 0.693,0.728 0.918,0.707 1.715,1.029 1.069,0.215 -0.429,0.815 -0.061,0.244 0.002,0.176 z m 74.556,-0.496 1.103,0.485 0.537,0.317 0.264,0.211 0.502,0.71 0.256,0.204 0.978,-0.411 0.684,-0.153 1.522,0.188 1.292,0.585 0.476,0.439 0.29,0.402 -0.075,0.443 -0.238,0.712 -0.279,0.675 -0.558,1.053 -0.475,0.524 -0.118,0.251 -0.074,0.348 -0.184,0.508 -0.51,1.092 -0.136,0.186 -0.718,0.476 0.246,0.213 0.112,0.188 -0.095,0.479 -0.453,1.152 -0.47,1.058 -0.328,0.63 -0.597,0.906 -0.329,0.255 -0.44,0.079 -2.663,-0.79 -0.668,0.013 -1.775,0.413 0.167,0.202 0.65,0.305 0.419,0.332 0.557,1.028 0.072,0.256 0.035,0.297 -0.021,0.581 -0.038,0.147 -0.885,1.558 -0.286,1.125 -0.183,0.923 -0.298,0.253 -0.992,-0.389 -0.32,0.012 -1.113,0.269 -0.519,-0.133 0.073,-1.393 -0.073,-1.517 -0.164,-1.459 -0.833,-2.629 -0.092,-0.47 -0.062,-0.508 -0.031,-0.545 0.003,-0.551 0.058,-1.118 0.007,-0.57 -0.042,-1.494 -0.112,-2.261 -0.011,-0.805 0.008,-0.322 0.035,-0.246 0.178,-0.327 0.342,-0.236 0.175,-0.036 1.094,0.695 0.503,0.231 0.335,-0.01 0.018,-0.079 -0.298,-0.146 -0.28,-0.299 -0.456,-0.893 -0.209,-0.768 -0.042,-0.255 -0.01,-0.267 0.021,-0.279 0.066,-0.251 0.229,-0.395 0.186,-0.179 0.686,-0.455 0.692,-0.278 1.526,-0.189 0.433,0.136 0.661,-0.501 0.39,-0.12 0.672,0.182 z m -14.312,2.979 -0.808,0.213 -0.373,-0.091 -0.197,0.278 -0.155,0.118 -0.441,0.051 -0.91,-0.502 -0.245,-0.175 -0.089,-0.163 0.037,-0.156 0.163,-0.15 0.698,-0.229 0.259,-0.169 0.106,-0.236 0.175,-0.19 0.242,-0.144 0.654,-0.138 1.471,-0.717 0.731,-0.102 0.287,0.061 0.086,0.19 0.023,0.189 -0.04,0.189 -0.229,0.485 -0.298,0.376 -0.802,0.807 -0.345,0.205 z m -4.86,-0.783 2.369,2.16 0.332,-0.177 0.716,-0.113 0.744,-0.316 1.032,-0.263 0.629,-0.479 0.268,-0.137 0.455,-0.085 0.248,0.002 0.715,0.259 0.287,0.182 0.152,0.191 0.165,0.347 0.282,0.843 0.042,0.313 -0.015,0.084 -0.26,0.516 -0.174,0.224 -0.358,0.213 -0.311,0.065 -0.267,0.372 -0.301,-0.099 -0.081,0.339 0.032,0.207 0.081,0.101 0.151,-0.024 0.173,-0.144 0.336,0.072 0.177,0.222 0.159,0.366 -0.118,0.338 -0.594,0.467 -0.875,0.526 -1.066,1.646 -0.561,0.685 -0.116,0.213 -0.057,0.214 0.017,0.404 0.025,0.163 0.155,0.065 0.521,-0.564 0.336,-0.263 0.341,-0.145 0.602,-0.01 0.249,0.087 0.451,0.339 0.413,0.521 0.092,0.189 -0.04,0.19 -0.171,0.19 -0.019,0.125 0.394,0.262 0.434,0.708 0.028,0.428 -0.189,0.422 -0.052,0.282 0.086,0.143 0.214,-0.086 0.513,-0.473 0.555,-0.247 0.223,0.027 0.14,0.109 0.148,0.648 0.123,0.726 0.015,0.608 -0.092,0.492 -0.132,0.383 -0.333,0.473 -0.301,0.18 -0.157,0.002 0.016,0.08 0.357,0.392 0.149,0.313 0.063,0.301 -0.021,0.29 -0.049,0.247 -0.416,0.912 0.022,0.13 0.115,0.059 0.261,0.522 0.031,1.208 -0.935,0.377 -0.22,0.279 -0.258,0.447 -0.296,0.333 -0.671,0.35 -0.34,0.04 -1.681,-0.292 -0.17,-0.17 -0.118,-0.304 -0.065,-0.438 -0.018,-0.346 0.03,-0.252 -0.009,-0.147 -0.047,-0.043 -0.187,0.253 -0.195,0.458 0.107,0.507 0.531,1.403 0.102,0.6 0.015,0.254 -0.024,0.19 -0.6,0.809 -0.347,0.273 -0.356,0.136 -0.339,-0.102 -0.322,-0.338 -0.246,-0.151 -0.508,0.021 -0.159,-0.175 -0.147,-0.326 -0.357,-1.175 -0.499,-0.838 -0.43,-0.944 -1.093,-1.388 -0.566,-0.836 -0.754,-1.354 -0.315,-0.308 -0.262,-0.124 -0.515,-0.098 -0.119,-0.17 -0.188,-0.465 -0.324,-0.35 -0.118,-0.044 -0.191,0.083 -0.504,0.323 -0.633,-0.342 -0.142,-0.241 -0.084,-0.408 -0.08,-0.225 -0.214,-0.202 -0.181,-0.513 -1.203,-1.015 -0.715,-1.173 -0.145,-0.426 -0.014,-0.174 0.073,-0.569 0.166,-0.647 0.217,-0.646 0.133,-0.265 0.471,-0.56 0.371,-0.127 0.518,0.071 0.272,0.125 0.245,0.375 0.104,0.431 0.123,0.29 0.384,0.317 0.208,0.254 0.306,0.59 0.236,0.708 0.217,0.233 0.521,0.079 0.538,-0.12 1.154,-0.445 0.047,-0.056 0.071,-0.265 0.132,-1.623 0.079,-0.007 0.392,0.753 0.111,0.083 0.169,-0.157 0.1,-0.365 -0.012,-0.174 -0.246,-0.885 -0.146,-0.386 -0.13,-0.24 -0.145,-0.079 -0.314,0.077 -0.239,-0.171 -0.053,-0.246 0.039,-0.332 0.132,-0.35 0.142,-0.201 0.275,-0.104 0.322,0.102 0.446,0.424 0.282,0.094 0.396,-0.121 -0.507,-0.249 -0.708,-0.982 -0.303,-0.185 -0.37,0.423 -0.25,0.159 -0.472,0.206 -0.376,0.03 -1.576,-1.524 -0.087,-0.146 -0.116,-0.399 0.014,-0.184 0.155,-0.285 0.393,-0.378 0.584,-0.237 0.391,-0.038 0.341,0.282 0.498,0.762 0.436,0.443 0.036,-0.16 -0.077,-0.437 -0.199,-0.65 -0.143,-0.178 -0.35,-0.195 -0.324,-0.449 -0.152,-0.333 -0.081,-0.357 -0.01,-0.382 0.062,-0.262 0.134,-0.141 1.211,-0.384 0.846,0.425 0.537,0.062 0.223,-0.522 -0.078,-0.102 -0.282,0.135 -0.319,-0.003 -0.199,-0.287 -0.006,-0.168 0.249,-0.402 0.379,-0.174 z m 37.643,27.407 0.111,0.189 0.641,-0.241 0.545,-0.278 0.849,-0.664 0.507,-0.231 1.541,0.004 0.262,0.125 -0.116,0.397 -0.064,0.112 0.051,0.172 0.166,0.232 0.332,0.258 0.131,-0.231 0.096,-0.559 0.227,-2.313 0.096,-0.704 0.046,-0.669 -0.005,-0.634 -0.111,-0.403 -0.395,-0.242 -0.539,0.04 -0.277,-0.063 -0.335,-0.125 -0.249,-0.196 -0.162,-0.266 -0.322,-0.802 -0.237,-0.449 -0.609,-0.813 -0.276,-0.272 0.139,-0.322 0.554,-0.372 0.334,-0.353 0.393,-1.038 0.236,-0.168 0.851,0.138 1.151,0.813 0.721,0.701 0.19,0.075 0.004,-0.127 -0.183,-0.328 -0.83,-0.87 -0.377,-0.636 -0.181,-0.455 0.086,-0.198 0.467,-0.202 0.061,-0.233 -0.635,-0.275 -0.322,0.006 -0.26,0.197 -0.28,0.013 -0.518,-0.358 -0.141,-0.209 -0.299,-0.621 -0.157,-0.542 -0.174,-0.337 -0.063,-0.269 -0.034,-0.838 0.015,-0.495 0.07,-0.424 0.126,-0.354 0.336,-0.656 0.189,-0.189 0.352,-0.086 0.765,0.326 2.057,1.172 -0.049,-0.376 -2.301,-1.587 -0.813,-0.411 -0.199,-0.579 1.225,-2.235 1.129,-0.529 0.562,-0.658 0.918,-0.029 0.862,0.418 0.015,-0.114 -0.389,-0.787 0.03,-0.197 0.489,-0.471 0.896,-0.555 1.094,-0.442 0.217,-0.23 0.28,-0.163 0.516,-0.142 1.282,-0.068 0.72,0.066 0.957,0.338 0.559,0.613 0.174,0.366 0.297,1.169 0.243,1.625 0.355,0.671 0.571,0.37 0.395,0.401 0.218,0.432 0.058,0.542 -0.102,0.651 0.077,0.665 0.255,0.678 0.197,0.383 0.431,0.437 0.007,0.233 -0.135,0.266 -0.285,0.363 -0.704,1.129 -0.908,1.234 -0.647,1.061 -0.032,0.312 1.347,-1.66 0.419,0.059 0.019,0.233 -0.274,0.811 -0.334,0.72 -0.336,0.46 0.062,0.173 0.64,0.803 -0.118,0.132 -0.309,-0.065 -0.126,0.072 -0.092,0.146 -0.057,0.219 -0.004,0.308 0.05,0.396 -0.005,0.295 -0.06,0.195 0.064,0.081 0.188,-0.034 0.158,-0.161 0.271,-0.534 0.896,-1.463 0.573,-0.55 0.185,-0.048 0.527,0.358 0.123,-0.021 -0.58,-1.137 -0.05,-0.289 0.118,-0.427 0.071,-0.147 0.323,-0.315 0.268,-0.168 0.15,0.07 0.237,0.583 0.11,0.405 0.197,0.162 0.438,-0.209 0.292,-0.496 0.362,0.325 0.545,0.773 -0.05,0.77 0,0.768 0.028,0.56 0.651,1.021 0.453,0.446 0.083,0.003 -0.01,-0.152 -0.095,-0.338 -0.249,-0.339 -0.224,-0.525 -0.202,-0.643 0.12,-1.509 0.339,-0.793 0.328,0.204 0.432,0.458 0.34,0.042 0.536,-0.048 1.096,0.922 0.588,0.02 -0.054,-0.376 -0.446,-0.181 -0.65,-0.51 -1.013,-0.609 -0.466,-0.699 -0.087,-0.33 0.013,-0.355 0.058,-0.314 0.102,-0.273 0.203,-0.269 0.98,-0.821 0.696,-0.351 0.523,-0.114 0.874,0.009 1.016,0.144 0.549,0.242 0.63,0.581 0.799,0.573 0.285,0.102 0.333,-0.013 0.38,-0.129 0.362,0.047 1.151,0.847 0.304,0.434 0.185,0.524 0.137,0.508 0.088,0.491 -0.036,0.397 -0.958,1.706 -0.417,0.289 -0.276,0.642 -0.411,1.208 -0.348,0.644 -0.032,0.125 0.073,0.031 0.209,-0.288 0.361,-0.832 0.262,-0.72 0.481,-0.597 0.788,-0.714 0.686,-0.342 0.584,0.033 0.492,0.103 0.399,0.174 0.237,0.146 0.075,0.118 0.16,0.536 -0.009,0.362 -0.1,0.407 -0.189,0.459 -0.858,0.507 -0.47,0.397 -0.292,0.147 -0.875,0.147 0.039,0.156 0.65,0.215 0.726,-0.072 -0.019,0.255 -0.341,0.676 -0.11,0.586 0.095,0.478 -0.018,0.388 -0.254,0.812 -0.292,0.729 0.11,0.108 0.666,-1.048 0.178,-1.155 0.269,-1.022 0.313,-0.565 0.236,-0.215 0.744,-0.087 0.412,-0.603 0.353,-0.192 0.147,-0.003 0.3,0.225 -0.018,0.237 -0.435,1.074 -0.922,1.725 0.376,-0.196 0.255,-0.409 0.341,-0.409 0.387,-0.607 0.256,0.55 0.394,0.409 0.235,0.932 0.38,0.447 0.23,0.346 -0.033,-0.586 -0.332,-1.183 0.091,-0.476 0.256,-0.238 0.799,-1.004 0.558,0.335 0.344,0.297 0.172,-0.079 0.434,0.042 0.696,0.162 0.677,0.28 0.658,0.398 0.507,0.464 0.356,0.531 0.216,0.366 0.075,0.202 0.12,0.525 -0.092,0.348 -0.497,0.8 -0.276,0.362 -0.275,0.162 -0.738,-0.159 -0.229,0.091 -0.241,0.25 -0.769,1.09 -0.425,0.469 -0.418,0.299 -0.097,0.157 0.898,-0.015 0.249,-0.322 0.208,-0.605 0.396,-0.626 0.748,-0.288 1.043,0.618 0.518,-0.025 0.396,-0.62 0.442,-0.424 0.174,-0.084 0.094,0.047 0.336,0.442 0.101,0.394 -0.007,0.895 -0.045,0.27 -0.299,0.672 -0.73,1.004 -0.478,0.375 -0.529,0.201 -0.577,0.338 -0.204,0.272 -0.199,0.385 -0.199,0.257 -0.253,0.213 0.331,0.313 0.126,-0.009 0.122,-0.187 0.333,-0.739 0.248,-0.323 0.141,-0.068 0.145,0.031 0.141,0.146 0.138,0.259 -0.011,0.63 -0.42,2.472 0.068,-0.007 0.259,-0.667 0.751,-2.585 0.184,-0.522 0.363,-0.528 0.813,-0.803 0.628,-0.422 0.709,-0.356 0.378,-0.132 0.433,0.089 0.281,0.415 0.38,0.075 0.462,-0.104 0.298,0.05 0.338,0.164 0.289,0.307 0.491,0.348 1.109,0.65 0.138,0.137 0.128,0.245 0.12,0.355 -0.015,0.35 -0.149,0.346 -0.185,0.21 -0.221,0.077 -0.229,0.188 -0.423,0.491 -0.138,0.083 -0.664,0.21 -0.615,0.103 -0.385,0.196 -0.739,0.529 -1.018,0.978 0.011,0.231 0.406,0.112 0.329,-0.147 0.453,-0.674 0.425,-0.258 0.665,-0.207 0.919,-0.181 0.394,0.028 0.071,0.037 0.052,0.16 0.032,0.283 -0.151,0.368 -0.174,0.174 -0.475,0.829 0.312,0.214 0.429,0.092 0.246,-0.221 0.221,-0.508 0.248,-0.283 0.275,-0.056 0.242,-0.13 0.208,-0.204 0.057,-0.134 -0.304,-0.266 -0.024,-0.162 0.124,-0.398 0.223,-0.442 0.233,-0.275 0.172,-0.022 0.572,0.295 0.391,0.514 0.989,1.529 0.127,0.296 0.344,1.125 0.065,0.498 -0.056,0.346 -0.081,0.211 -0.106,0.076 -0.217,0.002 -1.317,-0.457 -0.601,0.06 -0.263,0.128 -0.212,0.191 -0.165,0.242 -0.117,0.292 -0.231,0.164 -0.836,0.006 -0.469,0.162 -0.807,0.395 -0.29,0.217 -0.065,0.285 0.494,-0.049 0.813,-0.37 0.764,-0.105 1.277,0.813 0.42,0.126 0.234,-0.117 0.281,-0.036 1.021,0.054 0.346,0.1 0.517,0.311 0.791,0.673 0.152,0.197 0.088,0.207 0.025,0.216 -0.008,0.533 -0.079,0.18 -0.268,0.122 -1.137,-0.141 -0.347,-0.111 -0.427,0.14 -0.346,-0.049 -0.443,-0.213 -0.486,-0.379 -0.729,0.359 -0.584,-0.233 -0.597,0.207 -1.184,0.851 0.132,0.146 1.622,-0.729 0.313,0.044 0.513,0.267 0.81,0.523 0.227,0.214 0.002,0.82 -0.124,0.549 -0.248,0.616 -0.372,-0.083 -0.866,-0.383 -0.354,-0.053 -0.259,0.063 -0.348,0.245 -0.165,0.008 -1.385,-0.486 -0.311,-0.023 -0.036,0.05 0.066,0.096 1.256,0.753 0.929,0.082 0.582,0.13 0.345,0.229 0.163,0.169 0.012,0.5 0.31,0.502 0.279,0.204 0.178,0.01 0.306,-0.185 0.309,-0.028 0.25,0.128 0.313,0.276 0.378,0.077 0.332,0.168 0.256,0.034 0.721,-0.078 0.313,0.105 0.081,0.092 -0.136,0.161 -0.659,0.385 -0.1,0.365 0.372,0.474 0.195,0.362 -0.009,0.27 -0.199,0.613 -0.05,0.246 0.065,0.02 0.479,-0.496 0.075,0.063 0.05,0.686 0.061,-0.039 0.161,-0.567 -0.071,-0.759 0.281,-0.3 0.894,-0.228 -0.151,1.191 -0.023,0.616 -0.391,1.02 -0.326,0.328 0.01,0.068 0.232,0.129 0.145,0.014 0.139,-0.159 0.331,-0.786 0.672,-0.822 0.122,-0.018 -0.005,0.298 -0.086,0.552 0.31,0.258 0.296,-0.256 0.161,-0.221 0.372,0.032 0.169,0.105 0.05,0.243 -0.171,1.015 0.031,0.25 0.392,0.672 0.04,-0.041 -0.074,-0.324 -0.081,-0.802 0.076,-0.349 0.323,-0.449 0.662,-0.648 0.246,-0.129 0.153,0.088 0.244,0.312 -0.076,0.186 -0.263,0.194 -0.195,0.351 -0.128,0.507 0.142,0.27 0.537,0.024 0.539,-0.416 0.31,0.205 0.368,0.539 0.674,0.864 0.384,-0.235 0.475,0.654 -0.638,0.517 0.195,1.083 -0.829,-0.044 -0.466,0.084 -0.312,-0.097 -0.335,0.034 0.311,0.255 0.599,0.105 0.055,0.326 0.47,-0.008 0.353,-0.063 0.637,0.013 0.034,-0.375 0.414,-0.214 0.238,-0.236 0.198,0.14 0.576,0.16 0.774,0.736 -0.341,0.439 -0.093,0.414 -0.115,0.35 -0.064,0.315 -0.136,0.216 -1.108,1.23 0.184,0.011 0.469,-0.296 0.914,-0.443 0.509,-0.178 0.362,0.118 0.183,0.005 0.162,-0.158 0.302,0.182 0.626,0.167 0.719,-1.013 0.435,0.199 0.405,0.626 0.868,1.093 0.453,0.633 0.15,0.287 -0.021,0.282 -0.409,0.298 -0.21,0.06 -0.551,-0.563 -0.506,-0.285 -0.308,0.031 -0.306,0.217 0.096,0.121 1.226,0.866 0.214,0.636 0.016,0.277 -0.819,0.419 -0.263,0.024 -0.567,-0.2 -0.332,-0.374 -0.274,-0.135 -0.38,-0.045 -0.122,0.073 0.414,0.636 -0.04,0.19 -0.214,0.124 -0.105,0.305 0.818,0.549 0.612,0.556 0.09,0.223 -0.413,0.165 -0.296,0.038 -0.627,-0.081 -0.344,-0.117 -0.095,0.125 0.355,0.292 0.138,0.196 0.107,0.273 0.062,0.257 0.018,0.24 -0.291,0.197 -0.35,0.552 -0.137,0.57 -0.316,0.054 -0.128,-0.107 -0.426,0.173 -0.562,-0.238 -0.201,-0.26 -0.612,-1.076 -0.016,0.121 0.153,0.544 -0.031,0.322 -0.648,0.233 0.002,0.091 0.398,0.169 0.482,0.131 -0.075,0.499 0.002,2.11 -0.108,0.743 -0.236,0.647 -0.339,0.617 -0.366,-0.404 -0.147,-0.414 -0.123,-0.212 -0.175,-0.173 -0.227,-0.082 -0.239,-0.003 -0.254,0.371 -0.277,-0.32 -0.267,-0.388 0.101,-1.019 0.113,-0.512 -0.045,0.003 -0.152,0.243 -0.365,0.748 -0.239,0.909 -0.309,-0.349 -0.279,-0.436 -0.23,-0.438 -0.373,-0.507 -0.361,-0.598 -0.189,-0.706 -0.088,-0.146 -0.21,-0.591 -0.083,-0.169 -0.073,-0.057 -0.18,-0.37 0.066,-0.397 0.284,-0.47 0.258,-0.338 0.429,-0.334 0.501,-0.188 0.228,-0.433 0.279,-0.791 0.306,-0.553 0.333,-0.313 -0.166,-0.059 -0.423,0.269 -0.297,0.391 -0.354,0.649 -0.329,0.413 -0.844,0.479 -0.31,0.096 -0.359,0.051 -0.792,-0.067 -0.183,-0.161 0.095,-0.458 0.564,-0.82 -0.09,-0.058 -0.198,0.291 -0.272,0.201 -0.236,0.103 -0.347,-0.037 -0.407,-0.511 -0.193,-0.158 -0.398,-0.177 -0.162,-0.176 -0.661,-1.264 -0.133,-0.337 -0.078,-0.333 -0.212,-0.279 -0.347,-0.228 -0.08,0.038 0.125,0.285 0.004,0.245 -0.303,0.153 -0.316,-0.053 -0.331,-0.259 -0.029,0.348 0.354,0.616 0.005,0.777 -0.1,0.08 -0.241,0.045 -0.162,-0.096 -0.536,-0.58 -0.508,-0.405 -0.358,-0.225 -0.042,0.16 0.232,0.701 0.27,0.689 0.441,0.566 0.703,0.672 0.319,0.386 -0.251,0.543 -0.219,0.177 -0.135,0.056 -0.427,0 -0.778,-0.3 -0.365,-0.335 -0.53,-0.802 -0.877,-0.83 -0.19,0.005 -0.621,0.337 0.097,0.054 0.4,0.024 0.293,0.108 0.702,0.653 0.053,0.276 -0.175,0.306 0.011,0.386 0.197,0.464 0.201,0.296 0.412,0.208 0.208,0.028 0.078,0.134 -0.247,1.026 -0.021,0.279 0.071,0.116 0.086,0.009 0.53,-0.419 0.222,-0.103 0.192,-0.021 0.223,0.118 0.254,0.257 0.15,0.264 0.045,0.272 0.076,0.178 0.521,0.287 -0.048,0.134 -0.536,0.43 -0.029,0.067 0.107,0.031 0.339,0.256 0.312,0.4 0.19,0.475 0.039,0.233 -0.002,0.222 0.043,0.132 0.165,0.023 0.067,-0.084 0.076,0.016 0.083,0.116 0.087,0.362 0.188,1.057 0.099,0.296 0.057,0.01 0.03,-1.058 0.087,-0.176 0.33,0.188 0.484,0.413 0.341,0.366 0.04,0.171 -0.258,0.332 0.055,0.147 0.189,0.216 0.174,-0.082 0.126,-0.37 0.217,-0.365 0.257,-0.259 0.479,0.213 0.396,0.545 0.06,0.187 0.259,0.235 0.228,-0.131 0.441,0.622 -0.209,0.281 -0.459,0.408 -0.046,0.138 0.11,-0.031 0.874,0 0.236,0.163 0.056,0.312 -0.388,0.865 -0.356,-0.077 -0.471,-0.021 -0.242,0.046 0.038,0.112 0.652,0.397 0.185,0.326 0.25,0.333 0.121,0.274 -0.003,0.126 -0.103,0.189 0.049,0.063 0.447,0.124 0.277,-0.111 0.348,-0.042 0.307,0.031 0.024,0.118 -0.046,0.311 -0.314,0.287 0.084,0.067 0.369,-0.082 0.169,0.134 0.219,0.68 0.246,0.532 -0.2,0.122 -0.223,0.046 0.032,0.676 0.145,0.69 10e-4,0.659 -0.046,0.584 -0.204,0.129 -0.218,-0.013 -0.087,-0.146 -0.535,-1.752 -0.132,-0.318 -0.158,-0.278 -0.567,-0.765 0.022,0.123 0.141,0.353 0.125,0.525 0.163,1.042 0.074,0.668 -0.033,0.253 -0.116,0.062 -0.031,0.121 0.055,0.18 0.434,0.677 0.209,0.406 0.148,0.421 0.138,0.284 0.128,0.147 -0.032,0.121 -0.191,0.093 -0.328,0.045 -0.153,-0.057 -0.588,-0.389 -0.084,0.122 0.326,1.418 -0.01,0.337 -0.164,0.12 -0.202,-0.14 -0.24,-0.401 -0.367,-0.447 -0.494,-0.495 -0.471,-0.388 -0.111,0.01 -0.072,0.115 -0.079,0.019 -0.085,-0.077 -0.158,-0.292 -0.165,-0.199 -0.688,-0.659 -0.071,-0.007 0.065,0.198 0.07,0.433 -0.078,0.094 -0.18,-0.035 -0.342,-0.189 -0.23,-0.433 -0.292,-0.755 -0.153,-0.286 -0.014,0.186 0.081,0.719 -0.016,0.241 -0.171,0.065 -0.073,-0.066 -0.071,-0.191 -0.069,-0.317 -0.164,-0.242 -0.257,-0.165 -0.145,-0.174 -0.071,-0.309 -0.05,-0.071 -0.455,0.072 -0.228,-0.223 -0.657,-0.881 -0.602,-0.96 -0.379,-0.51 -0.137,-0.121 0.201,0.624 0.222,0.917 0.056,0.417 -0.102,0.019 -0.222,-0.185 -1.139,-1.182 -0.702,-0.559 -0.39,-0.099 -0.635,-0.068 -0.146,0.308 0.342,0.682 0.333,0.513 0.324,0.344 0.509,0.668 0.465,0.857 0.188,0.263 0.634,0.364 0.331,0.097 0.341,0.028 0.031,0.129 -0.165,0.241 -0.037,0.148 0.754,0.378 0.285,0.21 0.275,0.348 0.157,0.086 0.654,0.874 0.163,0.139 0.583,0.283 0.194,0.181 0.321,0.56 0.202,0.285 0.285,0.673 0.213,0.297 0.522,0.339 0.223,0.097 0.1,0.128 -0.068,0.304 -0.063,0.127 -0.298,0.208 0.047,0.29 0.168,0.516 -0.007,0.319 -0.182,0.124 -0.373,0.147 -0.188,-0.012 -0.283,-0.122 -0.355,-0.208 -0.707,-0.519 -1.061,-0.36 -0.396,-0.193 -0.132,-0.174 -0.2,-0.103 -2.634,-0.504 -0.441,-0.124 -0.274,-0.154 -0.254,-0.228 -1.005,-0.521 -0.122,-0.114 -0.675,-0.897 -0.502,-1.054 -0.167,-0.142 -0.546,-0.139 -0.456,0.088 -0.306,0.116 -0.464,-0.038 -0.303,-0.172 -0.638,-0.477 -0.646,-0.254 -0.563,-0.418 -0.291,-0.148 0.027,-0.107 0.421,-0.625 -0.131,0.009 -0.732,0.476 -0.263,-0.146 -0.432,-0.374 -0.325,-0.377 -0.669,-1.047 -0.384,-0.381 0.054,-0.086 0.432,-0.035 0.344,0.033 0.231,-0.087 0.445,-0.428 0.192,-0.27 0.019,-0.159 -0.372,-0.04 -0.08,-0.077 -0.066,-0.176 -0.171,-0.226 -0.277,-0.275 -0.315,-0.119 -1.082,0.102 -0.188,-0.121 0.004,-0.184 0.211,-0.519 0.115,-0.209 0.037,-0.116 -0.042,-0.022 -0.146,0.013 -0.627,0.466 -0.136,-0.034 -0.246,-0.492 -0.149,-0.563 -0.109,-0.198 -0.145,-0.067 -0.515,-0.556 -0.733,-1.061 -0.27,-0.333 -0.3,-0.299 -0.217,-0.127 0.031,-0.157 0.464,-0.89 0.019,-0.146 -0.398,0.055 -0.6,-0.185 -0.285,0.224 -0.181,0.013 -0.211,-0.125 -0.119,0.047 -0.112,0.731 -0.086,0.183 -0.125,0.098 -0.11,-0.013 -0.095,-0.124 0.002,-0.17 -0.091,-0.899 -0.209,-0.133 -0.591,-0.035 -0.127,-0.073 -0.144,-0.167 -0.123,-0.31 -0.102,-0.452 -0.117,-0.249 -0.132,-0.044 -0.106,0.037 -0.08,0.117 -0.184,0.073 -0.289,0.028 -0.009,0.174 0.271,0.32 0.262,0.456 0.252,0.59 -0.153,0.395 -0.559,0.201 -0.487,0.059 -0.415,-0.083 -0.318,-0.137 -0.447,-0.328 -0.638,0.107 -0.145,0.861 -0.136,0.047 -0.608,-0.022 -0.242,0.076 -0.811,0.474 -0.247,0.066 -0.188,-0.056 -0.182,0.114 -0.273,0.271 -0.371,0.028 -0.47,-0.214 -0.399,-0.092 -0.328,0.03 -0.338,-0.126 -0.348,-0.284 -0.283,-0.127 -0.373,0.021 -0.086,-0.045 -0.544,-0.61 -0.169,-0.249 -0.363,-0.773 -0.064,-0.307 -0.01,-0.329 0.032,-0.243 0.126,-0.368 0.138,-0.868 0.113,-0.289 0.17,-0.263 0.333,-0.334 1.203,-0.59 0.243,-0.234 -0.008,-0.155 -0.274,-0.726 0.003,-0.187 0.092,-0.109 0.195,-0.426 0.088,-0.119 0.212,-0.066 0.441,0.216 0.38,0.087 0.504,0.028 0.834,0.297 1.164,0.565 0.669,0.392 0.506,0.576 0.36,0.564 0.051,0.285 -0.167,0.438 -0.084,0.128 0.005,0.15 0.094,0.17 0.291,0.248 0.07,-0.094 -0.022,-0.297 0.061,-0.25 0.143,-0.202 0.016,-0.263 -0.111,-0.324 -0.138,-0.28 -0.166,-0.236 -0.752,-0.814 -0.072,-0.271 0.252,-0.122 1.1,0.274 0.422,-0.061 0.16,-0.319 0.173,-0.218 0.185,-0.118 0.37,-0.051 0.518,0.149 0.254,0.022 0.225,-0.054 0.292,-0.174 0.432,-0.583 0.276,-0.132 0.418,-0.092 0.313,-0.013 0.568,0.233 0.35,-0.006 -0.028,-0.39 -0.232,-0.749 -0.289,-0.773 -0.224,-0.263 -0.581,-0.493 -0.683,-0.933 -0.35,-0.582 -0.092,-0.292 0.049,-0.194 0.116,-0.285 1.238,-1.045 0.981,-1.044 0.43,-0.537 0.207,-0.375 0.215,-0.273 0.224,-0.172 0.471,-0.206 0.135,-0.264 0.029,-0.449 0.079,-0.391 0.443,-1.055 0.34,-0.287 0.513,-0.199 0.337,-0.255 0.407,-0.875 -0.04,-0.218 -0.188,-0.166 -0.146,-0.252 -0.627,-2.321 -0.418,-1.132 -0.501,-0.992 -0.448,-1.215 -0.743,-1.205 -0.009,-0.321 0.132,-0.364 -0.063,-0.083 -0.767,0.532 -0.181,0.024 -0.294,-0.231 -0.199,-0.289 -0.166,-0.506 0.017,-0.265 0.109,-0.251 0.146,-0.621 0.005,-0.317 -0.05,-0.303 -0.066,-0.211 -0.083,-0.119 -0.234,-0.074 -0.387,-0.03 -0.126,0.108 0.426,0.94 -0.065,0.231 -0.543,0.101 -0.245,-0.044 -0.224,-0.114 -0.203,-0.184 -0.633,-0.982 -0.134,-0.371 0.042,-0.27 -0.054,-0.14 -0.129,0.09 -0.175,0.006 -0.238,-0.095 -0.049,-0.116 0.444,-0.536 0.025,-0.166 -0.205,-0.177 -0.306,-0.036 -0.082,-0.159 0.104,-0.17 0.415,-0.295 0.147,-0.195 -0.249,-0.147 -0.139,-0.013 -0.279,0.323 -0.42,0.657 -0.306,0.243 -0.419,-0.304 -0.264,-0.101 -0.185,0.066 -0.282,0.507 -0.615,0.37 -1.102,0.869 -0.473,0.276 -0.51,-0.049 -0.097,-0.175 0.009,-0.298 0.035,-0.246 0.062,-0.192 0.02,-0.236 -0.037,-0.996 0.085,-0.274 0.174,-0.164 0.321,-0.172 0.819,0.206 0.38,-0.037 0.267,-0.231 0.267,-0.335 0.268,-0.44 0.057,-0.424 -0.284,-0.688 -0.107,-0.152 -0.728,-0.539 -0.402,-0.196 -0.355,-0.085 -0.257,-0.155 -0.16,-0.227 -0.155,-0.377 -0.013,-0.258 0.025,-0.339 0.148,-0.234 0.651,-0.27 -0.008,-0.07 -0.532,-0.199 -0.251,0.023 -0.215,0.223 -0.271,0.523 -0.157,0.147 -0.486,-0.308 -0.292,-0.045 -0.197,-0.147 -0.109,-0.142 0.066,-0.146 0.242,-0.148 0.421,-0.454 0.028,-0.245 -0.291,-0.401 -0.151,-0.092 -0.607,-0.15 -0.735,0.149 -0.273,-0.076 -0.123,-0.447 -0.078,-0.534 -0.033,-0.622 -0.133,-1.065 -0.146,-0.561 -0.192,-0.071 -0.882,0.232 -0.209,0.003 -0.147,-0.07 -0.583,-0.718 -0.236,-0.255 -0.131,-0.06 -0.424,-0.769 -0.163,-0.15 -0.194,-0.38 -0.224,-0.613 -0.243,-0.188 -0.262,0.239 -0.262,0.342 -0.262,0.444 -0.142,0.374 -0.022,0.306 0.163,0.237 0.926,0.393 0.235,0.262 0.199,0.431 0.149,0.524 0.098,0.619 -0.008,0.46 -0.115,0.305 -0.199,0.27 -0.57,0.427 -0.591,0.25 -0.595,0.059 -0.282,-0.058 -1.533,-0.828 -0.276,-0.006 -0.354,-0.112 -0.796,-0.342 -0.436,-0.038 -0.765,-0.284 -1.294,-0.166 -0.259,0.137 0.344,0.383 0.302,0.192 0.259,0.002 0.373,0.341 0.486,0.677 0.277,0.403 0.23,0.479 0.007,0.165 -0.229,0.328 -1.804,-1.723 -1.104,0.604 -0.508,0.224 -0.435,0.035 -0.544,-0.237 -1.228,-0.834 -0.465,-0.292 -0.165,-0.042 -1.069,0.363 -0.921,0.017 -1.86,-0.348 -0.683,-0.233 -0.18,-0.244 -0.224,-0.123 -0.408,0 -1.066,-0.273 -0.976,0.615 -1.173,-0.563 -0.348,-0.333 -0.111,-0.228 -0.341,-0.958 -0.047,-0.515 0.097,-0.466 0.096,-0.32 0.096,-0.174 -0.639,0.536 -0.224,0.088 -0.295,0.021 -0.879,-0.198 -0.139,0.102 0.045,0.187 0.23,0.273 0.03,0.164 -0.49,0.128 -0.743,-0.133 -0.324,0.058 -0.147,0.075 -0.335,0.429 -0.136,0.097 -0.176,-0.044 -0.779,-0.972 -0.628,-0.618 -0.732,-0.238 -0.336,-0.198 -0.184,-0.239 -1.01,-2.004 -0.138,-0.435 -0.32,-1.589 -0.107,-0.341 -0.13,-0.225 0.254,-0.047 0.955,0.195 0.925,-0.009 0.502,0.13 0.583,0.398 0.759,0.284 0.544,0.06 0.871,-0.105 0.99,-0.266 0.117,-0.207 -0.642,-0.356 -0.571,-0.473 -0.528,-0.616 -0.314,-0.261 -0.528,-0.163 -1.484,-0.114 -1.375,-0.416 -0.95,-0.563 -0.773,-0.626 -0.314,-0.342 -0.113,-0.264 -0.12,-0.828 -0.127,-1.399 -0.123,-0.946 -0.118,-0.484 -0.016,-0.425 0.263,-0.91 0.751,-0.995 0.019,-0.156 -0.149,-0.046 -0.315,-0.254 -0.101,-0.373 -0.041,-0.592 -0.002,-0.504 0.035,-0.415 0.125,-0.519 0.324,-0.937 0.463,-1.144 0.502,-1.081 0.086,-0.355 0.044,-0.967 0.066,-0.708 0.069,-0.5 0.106,-0.376 0.31,-0.717 0.387,-0.683 0.606,-0.584 0.051,-0.217 0.008,-0.3 0.035,-0.225 0.062,-0.148 1.502,-1.896 0.684,-0.777 0.58,-0.495 0.694,-0.366 1.975,-0.75 1.017,-0.209 1.279,0.046 2.358,0.423 0.284,0.297 0.072,0.149 0.103,0.421 -0.078,0.269 -0.645,0.909 -0.812,0.752 -0.528,0.654 -0.894,1.461 -0.241,0.51 -1.108,2.896 -0.262,0.475 -0.154,0.379 -0.107,1.028 0.032,0.364 0.173,0.593 0.602,1.28 0.162,0.595 -0.004,0.545 -0.067,1.293 -0.008,0.652 0.027,0.624 0.124,0.888 0.221,1.147 0.512,1.153 0.803,1.158 0.598,0.763 0.589,0.56 0.697,0.826 0.155,0.397 -0.321,0.437 -0.751,0.669 -0.987,0.286 -0.528,0.272 -0.657,0.579 -0.824,0.461 -0.328,0.266 z m 19.791,-24.477 0.479,0.131 3.032,-0.244 0.628,0.182 1.91,1.102 0.493,0.367 0.243,0.484 0.22,0.761 0.102,0.167 0.692,0.451 0.285,0.544 0.1,0.281 0.146,0.641 0.313,0.362 0.357,0.206 0.117,0.188 -0.056,0.799 0.152,0.371 0.337,0.447 0.126,0.298 -0.262,0.363 -0.609,0.213 -1.72,-0.222 -2.308,-0.503 -1.342,0.143 -0.673,0.23 -1.628,0.817 -0.52,0.132 -0.508,0.017 -0.899,-0.667 -0.326,-0.354 -0.108,-0.275 -0.214,-0.808 -0.176,-0.973 -0.09,-0.803 -0.104,-0.615 -0.307,-0.204 -0.913,-0.246 -0.306,-0.337 -0.139,-0.281 -0.134,-0.456 0.003,-0.474 0.07,-0.419 0.059,-0.103 0.115,-0.011 -0.256,-0.51 -0.088,-0.563 -0.006,-0.788 0.033,-0.506 0.073,-0.223 0.169,-0.144 0.396,-0.096 0.587,0.019 0.82,0.584 0.648,0.056 0.987,0.469 z m -72.271,7.166 -0.142,0.048 -0.266,-0.221 -0.39,-0.491 -0.637,-1 -0.76,-0.997 -0.117,-0.6 -0.189,-0.449 -0.97,-1.071 -0.63,-0.436 -0.48,-0.218 -0.079,-0.301 0.333,-0.879 0.382,-0.705 0.227,-0.256 0.707,-0.23 2.385,-0.473 0.545,-0.014 0.571,0.228 0.785,0.97 0.327,0.11 0.195,0.217 0.172,0.361 0.091,0.367 0.008,0.746 -0.086,1.097 -0.109,0.418 -0.475,1.396 -0.499,0.763 -0.095,0.492 -0.202,0.389 -0.354,0.476 -0.248,0.263 z m -25.912,3.094 0.178,0.118 0.325,-0.098 0.472,-0.313 0.608,-0.258 0.745,-0.201 0.197,0.245 0.124,-0.05 0.219,-0.398 0.039,-0.263 -0.027,-0.297 0.013,-0.648 0.117,-0.392 0.442,-0.826 0.237,-0.299 0.377,-0.137 0.898,0.089 0.842,0.473 1.138,0.463 1.664,1.161 0.521,0.493 0.054,0.426 -0.295,0.906 -0.717,1.273 -0.576,0.458 -0.222,0.28 0.375,0.192 0.243,0.325 0.369,-0.469 0.27,-0.526 0.382,-0.438 0.13,-0.039 0.032,0.093 -0.066,0.225 -0.029,0.22 0.01,0.215 0.044,0.13 0.234,0.067 0.126,-0.081 0.507,-0.618 0.498,-0.95 0.755,-0.616 0.206,-0.315 0.657,-0.263 -0.008,-0.186 0.03,-0.735 -0.23,-0.314 -0.771,-0.659 -0.381,-0.793 0.08,-0.61 0.425,0.089 1.164,0.065 0.242,0.082 1.118,1.032 0.396,0.64 0.314,0.316 0.66,0.46 0.222,0.373 0.156,0.151 0.054,0.157 -0.048,0.163 -0.025,0.383 0.123,0.123 0.429,0.144 0.12,0.154 0.159,0.484 0.198,0.812 0.172,0.876 0.272,1.641 0.542,2.166 0.185,1.342 0.063,0.245 0.122,0.168 0.348,0.245 0.268,0.346 0.315,0.111 0.077,-0.031 0.079,-0.297 0.197,-0.474 0.955,-0.924 0.05,-0.144 -0.113,-0.213 -0.035,-0.146 0.014,-0.099 0.199,-0.077 -0.665,-1.184 -0.43,-1.13 -0.276,-1.409 -0.042,-0.414 -0.041,-0.884 -0.09,-0.233 -0.152,-0.214 -0.063,-0.276 0.024,-0.339 -0.03,-0.291 -0.176,-0.61 -0.677,-4.317 0.002,-0.426 0.093,-0.321 0.241,-0.184 0.388,-0.045 0.123,-0.101 -0.143,-0.155 -0.254,-0.47 -0.033,-0.217 0.169,-0.44 0.867,0.193 0.628,0.396 1.074,0.937 0.109,-0.051 0.118,-0.466 0.229,-0.299 0.344,0.098 0.972,0.678 1.124,1.202 0.754,0.589 0.529,0.796 0.36,0.749 0.227,0.576 0.01,0.224 -0.052,0.23 0.053,0.299 0.159,0.368 0.088,0.329 0.072,0.697 0.143,0.904 0.036,0.451 0.999,3.992 0.191,0.695 0.122,0.321 0.698,1.51 0.372,1.089 0.036,0.725 0.05,0.208 0.016,0.332 -0.018,0.456 -0.082,0.391 -0.146,0.327 -0.141,0.457 -0.213,1.005 -0.018,0.246 0.153,0.344 0.977,1.181 0.599,1.406 0.281,0.246 0.754,0.873 0.813,0.493 0.274,0.212 0.259,0.312 0.078,0.012 0.157,-0.059 0.045,-0.085 0.011,-0.126 -0.229,-0.659 -0.016,-0.259 0.109,-0.045 0.839,1.124 0.453,0.445 0.619,0.466 1.063,1.069 0.148,0.087 0.575,-0.098 0.157,0.067 0.099,0.105 0.041,0.143 0.023,0.629 0.157,0.309 0.907,-0.132 0.254,0.027 0.162,0.099 0.135,0.205 0.195,0.669 0.18,1.311 0.009,0.467 -0.083,0.782 -0.132,0.287 -0.172,0.09 -0.484,-0.088 -0.34,-0.248 -0.176,-0.316 -0.159,-0.687 -0.076,-0.133 -0.069,0.139 -0.159,0.629 -0.104,0.278 -0.127,0.184 -0.241,-0.045 -0.355,-0.274 -0.667,-0.702 -0.236,-0.174 -0.146,0.03 -0.319,0.238 -0.492,0.445 -0.203,0.326 0.086,0.208 0.057,0.261 0.028,0.314 -0.017,0.231 -0.063,0.149 -0.163,0.177 -0.344,0.03 -0.495,-0.136 -0.391,-0.241 -0.685,-0.642 -0.157,-0.089 -0.212,0.143 -0.084,0.187 0.131,0.267 0.348,0.345 0.425,0.571 0.114,0.111 0.109,-0.013 0.039,0.105 0.048,0.306 -0.022,0.525 -0.205,1.044 -0.021,0.248 0.084,-0.059 0.579,-1.025 0.299,-0.288 0.648,-0.454 0.28,-0.334 0.829,-0.091 0.296,0.183 0.19,0.317 0.007,0.144 -0.217,0.371 -0.04,0.186 -0.011,0.234 0.02,0.209 0.05,0.186 0.149,0.171 0.264,-0.075 0.074,0.043 0.141,0.181 0.093,0.28 0.004,0.389 -0.194,0.851 -0.347,0.277 -1.062,0.513 -0.364,0.264 -0.701,0.187 -0.271,0.247 -0.169,0.075 -0.75,-0.04 -0.858,0.156 -0.988,-0.306 -0.693,-0.136 -0.801,-0.488 -0.302,0.123 -0.312,0.313 -1.5,-0.376 -0.178,-0.273 0.059,-0.178 0.355,-0.583 0.023,-0.122 -0.017,-0.104 -0.681,-0.1 -0.76,-0.312 -0.763,-0.155 -0.571,0.044 -0.372,-0.114 -0.363,-0.257 -0.199,-0.235 -0.036,-0.212 -0.005,-0.233 0.032,-0.468 -0.048,-0.33 -0.165,-0.261 -0.336,-0.234 -0.334,0.028 -0.283,0.259 -0.269,0.476 -0.499,1.319 -0.25,0.224 -0.648,0.948 -0.243,0.231 -1.188,0.374 -1.408,0.153 -0.526,0.291 -0.5,0.544 -0.604,0.524 -1.477,0.642 -1.365,0.357 -1.428,0.156 -1.068,0.243 -0.307,-0.122 -0.478,0.045 -0.515,0.355 -0.581,0.069 -2.208,0.129 -1.014,0.237 -0.556,0.063 -0.436,-0.032 -0.304,-0.098 -0.291,-0.315 -0.299,-0.486 -0.608,-1.302 -0.174,-0.55 0.068,-0.946 -0.045,-0.55 -0.202,-1.193 -0.038,-0.103 -1.064,-0.445 -0.7,-0.141 -1.056,-0.029 -1.291,0.063 -1.289,-0.144 -0.681,-0.163 -0.676,-0.267 -1.156,-0.696 -0.065,-0.071 -0.09,-0.233 -0.114,-0.395 -0.288,-0.515 -0.788,-1.154 -0.312,-0.688 -0.051,-0.175 -0.075,-0.507 -0.099,-0.841 -0.032,-0.517 0.092,-0.316 0.077,-0.063 1.632,-0.618 2.876,-0.68 2.629,-0.46 1.194,0.041 0.703,0.216 0.705,0.098 1.276,0.049 1.607,0.32 0.323,-0.027 0.721,-0.217 0.214,-0.174 1.139,0.022 0.221,-0.107 0.203,-0.192 -0.262,-0.36 -1.09,-0.792 -2.895,-1.426 -0.706,-0.305 -1.011,-0.325 -0.586,-0.047 -0.747,0.186 -0.278,-0.008 -0.733,0.279 -0.696,0.177 -1.32,0.171 -1.908,0.125 -0.267,-0.037 -0.392,-0.217 -0.285,-0.062 -1.867,0.17 -1.668,-0.219 -1.9,-2.203 -0.315,-0.681 0.067,-0.278 0.234,-0.299 0.941,-0.864 0.336,-0.207 1.404,-0.466 1.399,-0.566 1.105,-0.534 0.542,-0.186 0.522,-0.022 0.422,-0.177 -0.086,-0.169 -0.345,-0.194 0.004,-0.275 0.179,-0.132 0.691,-0.14 0.735,0.17 0.367,-0.058 0.105,-0.188 -0.098,-0.151 -0.697,-0.314 -3.35,0.903 -1.563,0.084 -1.084,0.387 -0.596,-0.012 -0.709,-0.386 -0.095,-0.116 -0.013,-0.159 0.219,-0.518 0.758,-0.311 0.382,-0.876 -0.408,-0.015 -1.358,0.188 -0.593,-0.081 -0.801,-0.337 -0.235,-0.402 -0.1,-0.291 -0.017,-0.348 0.027,-0.992 0.068,-0.535 0.042,-0.121 0.996,-1.658 0.621,-0.348 0.436,-0.528 0.017,-0.221 -0.107,-0.223 -0.406,-0.541 -0.163,-0.275 -0.092,-0.264 0.069,-0.417 0.23,-0.572 0.678,-0.927 1.631,-1.874 0.829,-0.793 0.799,-0.43 1.118,-0.917 2.866,-1.533 2.565,-1.553 0.944,0.411 0.268,0.322 0.119,0.272 0.104,0.381 0.089,0.489 0.123,1.056 0.016,0.542 -0.021,0.542 -0.059,0.49 -0.097,0.437 -0.192,0.532 -0.288,0.625 -0.61,1.066 -0.065,0.309 z m 49.785,-3.253 -0.453,0.095 -0.418,-0.672 -0.014,-0.629 0.028,-0.348 0.052,-0.306 0.152,-0.262 0.428,-0.306 0.194,0.227 0.071,0.272 0.065,0.107 0.276,0.235 0.133,0.271 -0.014,0.311 -0.089,0.471 -0.099,0.302 -0.108,0.133 -0.204,0.099 z m 61.949,163.029 -0.15,0.019 -0.265,-0.019 -0.392,0.133 -0.514,0.28 -0.623,0.501 -1.097,1.082 -0.017,0.025 -0.02,-0.016 -0.074,0.019 -0.31,0.31 -0.324,0.173 -0.796,0.281 -0.188,0.126 -0.232,0.073 -0.276,0.021 -0.277,0.08 -0.279,0.139 -0.574,0.421 -0.14,0.012 -0.059,-0.078 0.02,-0.059 0.096,-0.104 0.351,-0.212 -0.048,-0.04 -0.106,0.045 -0.166,0.13 -0.064,-0.014 0.035,-0.158 -0.107,-0.032 -0.25,0.094 -0.156,0.021 -0.062,-0.052 -0.071,0 -0.081,0.051 -0.129,-0.01 -0.203,0.068 -0.418,0.144 -0.104,0.115 -0.004,0.039 0.393,-0.181 0.183,-0.059 0.135,-0.028 0.052,0.04 -0.048,0.092 -0.001,0.058 0.1,0.024 0.059,-0.024 0.005,-0.025 -0.049,-0.026 10e-4,-0.037 0.051,-0.046 0.438,-0.133 0.09,0.097 -0.095,0.267 0.041,0.129 0.175,-0.009 0.199,-0.069 0.223,-0.128 0.076,-0.002 -0.071,0.125 -0.117,0.115 -0.263,0.199 -0.056,0.137 0.004,0.036 0.082,-0.054 0.289,-0.033 0.111,0 -0.024,0.086 -0.155,0.051 -0.337,0.181 -0.271,0.064 -0.159,-0.037 -0.032,-0.092 0.096,-0.147 -0.014,-0.039 -0.217,0.101 -0.063,-0.004 -0.071,-0.092 0.012,-0.021 0.098,10e-4 0.046,-0.048 -0.184,-0.029 -0.27,0.068 -0.231,-0.033 -0.143,-0.108 -0.039,-0.067 0.067,-0.027 -0.015,-0.04 -0.097,-0.053 -0.276,-0.025 -0.076,0.044 -0.049,0.094 -0.288,-0.006 -0.145,0.065 -0.334,0.058 -0.523,0.052 -0.417,0.082 -0.312,0.112 -0.23,0.042 -0.149,-0.028 -0.248,0.037 -0.347,0.101 -0.549,0.081 -0.202,0.079 -0.294,0.214 -0.386,0.349 -0.262,0.171 -0.14,-0.006 -0.096,0.043 -0.053,0.093 -0.197,0.13 -0.077,0.102 -0.039,0.148 -0.13,0.233 -0.331,0.512 0.003,0.072 0.127,0.186 0.251,0.069 0.31,0.097 0.355,0.003 0.179,0.042 0.13,-0.038 0.219,-0.133 0.427,-0.156 0.006,0.019 -0.019,0.66 -0.02,0.05 0.085,0.113 0.023,0.076 -0.015,0.086 0.082,0.118 0.178,0.149 0.069,0.106 -0.04,0.063 -0.338,0.172 -0.182,0.018 -0.152,-0.058 -0.247,-0.029 -0.342,-10e-4 -0.583,0.102 -0.189,0.013 -0.104,-0.042 -0.135,0.012 -0.495,0.137 -0.496,0.077 -0.339,0.106 -0.184,0.137 -0.112,0.119 -0.109,0.092 -0.086,0.027 -0.156,0.237 0.015,0.035 0.22,-0.014 0.176,0.069 0.562,0.069 0.12,0.066 -0.089,0.03 -0.85,-0.118 -0.214,0.013 -0.403,-0.083 -0.591,-0.18 -0.595,-0.073 -0.599,0.033 -0.426,0.091 -0.254,0.147 -0.659,0.548 -0.222,0.296 -0.089,0.276 -0.073,0.14 -0.057,0.005 10e-4,-0.063 0.058,-0.13 -0.024,-0.026 -0.154,0.136 -0.024,0.039 -0.299,0.044 -0.325,0.13 -0.424,0.243 -0.282,0.208 -0.14,0.171 -0.079,0.2 -0.017,0.228 -0.044,0.045 -0.156,-0.255 -0.104,-0.095 -0.115,-0.045 -0.126,0.005 -0.403,0.146 -0.289,-0.035 -0.35,-0.165 -0.131,-0.078 -0.026,-0.184 0.036,-0.36 0.079,-0.228 -0.032,-0.017 0.042,-0.077 0.195,-0.119 0.381,-0.202 0.347,-0.41 0.278,-0.245 0.28,-0.253 0.16,-0.437 0.199,-1.061 0.295,-0.099 0.368,-0.16 0.261,-0.183 0.154,-0.203 0.166,-0.145 0.176,-0.085 0.177,-0.132 0.179,-0.18 0.126,-0.249 0.075,-0.318 0.021,-0.322 -0.032,-0.327 -0.005,-1.315 -0.038,-0.307 0.067,-0.273 0.172,-0.241 0.106,-0.234 0.039,-0.228 0.084,-0.191 0.129,-0.154 0.125,-0.1 0.121,-0.047 0.082,-0.094 0.043,-0.143 0.098,-0.178 0.152,-0.213 0.056,-0.185 -0.008,-0.286 0.007,-0.29 -0.061,-0.166 -0.115,-0.149 -0.048,-0.163 0.008,-0.262 -0.061,-0.026 -0.108,-0.013 -0.1,-0.109 -0.135,-0.263 -0.118,-0.172 -0.101,-0.081 -0.036,-0.081 -0.108,-0.092 -0.153,-0.055 -0.064,-0.082 0.024,-0.11 0.286,-0.042 0.549,0.025 0.29,0.027 0.032,0.03 -0.086,0.208 0.009,0.129 0.086,0.128 0.05,0.169 0.013,0.21 0.146,0.078 0.04,0.024 0.038,0.112 0.118,0.025 0.037,0.062 -0.045,0.098 0.021,0.039 0.167,0.017 0.118,-0.171 0.056,-0.041 0.11,-0.009 0.018,0.043 -0.074,0.096 -0.038,0.109 -0.001,0.121 -0.084,0.132 -0.256,0.238 -0.007,0.051 0.056,0.017 0.248,-0.145 0.164,-0.027 0.124,0.048 0.068,0.063 0.012,0.077 -0.028,0.194 -0.068,0.311 0.044,0.06 0.156,-0.191 0.18,-0.134 0.336,-0.105 0.058,0.022 0.159,0.325 0.372,0.239 0.658,0.268 0.396,0.079 0.134,-0.11 0.082,-0.213 0.029,-0.317 -0.067,-0.225 -0.162,-0.132 -0.081,-0.128 -10e-4,-0.123 0.122,-0.106 0.19,-0.087 0.189,-0.029 0.025,0.033 -0.042,0.123 0.029,0.042 0.094,0.014 0.042,0.042 0.139,0.121 0.307,0.027 0.111,-0.03 -0.086,-0.088 -0.014,-0.118 0.059,-0.148 -0.01,-0.064 -0.103,0.048 0,0.122 -0.047,0.065 -0.062,-0.015 -0.037,-0.138 -0.043,-0.121 -0.08,-0.203 -0.208,-0.08 -0.074,-0.07 -0.008,-0.106 -0.04,-0.063 -0.073,-0.02 -0.139,-0.198 -0.181,-0.148 0.007,-0.067 0.17,-0.039 0.045,-0.068 -0.025,-0.09 -0.095,-0.112 -0.072,-0.028 -0.048,0.057 -0.043,-0.017 -0.038,-0.089 0.027,-0.143 0.173,-0.166 0.024,-0.165 -0.044,-0.128 -0.097,-0.075 -0.149,-0.022 -0.088,0.009 -0.026,0.04 0.05,0.151 -0.027,0.019 -0.262,-0.065 -0.089,-0.091 -0.132,-0.064 -0.099,-0.236 -0.02,-0.168 0.009,-0.292 -0.072,-0.185 -0.043,-0.021 0.007,0.11 -0.048,0.055 -0.116,0.029 -0.071,-0.051 -0.025,-0.131 -0.072,-0.11 -0.132,-0.128 -0.102,-0.181 -0.034,-0.081 -0.006,-0.08 -0.036,-0.093 -0.113,-0.103 -0.047,-0.171 -0.051,-0.075 -0.154,-0.168 -0.052,-0.094 -0.035,-0.035 -0.204,0 -0.218,-0.003 -0.362,0.041 -0.177,-0.053 0.008,-0.148 -0.013,-0.082 -0.033,-0.016 -0.049,0.04 -0.016,0.061 -0.112,0.068 -0.187,0 -0.41,-0.082 -0.149,0.006 -0.265,0.106 -0.085,-0.046 0.09,-0.074 -0.006,-0.063 -0.074,-0.019 -0.016,-0.035 -0.03,-0.059 0.277,-0.14 -0.008,-0.063 -0.199,-0.117 -0.086,0.017 -0.043,0.09 -0.076,0.057 -0.108,0.023 -0.065,0.063 -0.042,-0.002 -0.001,-0.055 -0.01,-0.133 -0.133,-0.042 -0.548,-0.056 -0.292,-0.012 -0.225,-0.009 -0.342,-0.117 -0.091,-0.123 -0.695,0.065 -0.113,0.019 -0.072,-0.014 -0.156,-0.126 -0.493,0.076 -0.367,0.029 -1.217,-0.228 -0.316,-0.093 -0.059,-0.07 -0.19,-0.048 -0.511,-0.049 -0.057,-0.018 -0.052,-0.108 -0.147,-0.037 -0.279,-0.007 -0.164,-0.069 -0.047,-0.131 0.007,-0.151 0.063,-0.171 -0.009,-0.14 -0.087,-0.132 -0.132,-0.094 -0.197,0.023 -0.304,0.104 -0.248,0.037 -0.074,0.074 -0.047,0.061 -0.07,0.023 -0.19,-0.244 0,-0.135 0.059,-0.095 0.229,-0.302 0.078,-0.2 -0.073,-0.098 -0.067,0.014 -0.063,0.125 -0.048,0.063 -0.035,0 -0.059,-0.133 0.021,-0.309 0.072,-0.116 0.121,-0.056 0.215,0.017 0.072,-0.04 0.041,-0.109 -0.049,-0.105 -0.14,-0.102 -0.149,-0.055 -0.159,-0.007 -0.105,0.035 -0.052,0.077 -0.069,-0.016 -0.086,-0.109 -0.266,-0.133 -0.069,-0.093 0.01,-0.134 0.167,-0.342 -0.021,-0.091 0.088,-0.202 0.196,-0.313 0.067,-0.219 -0.062,-0.124 -0.069,-0.069 -0.077,-0.015 -0.07,-0.082 -0.063,-0.149 -0.156,-0.145 -0.25,-0.14 -0.212,-0.184 -0.173,-0.228 -0.047,-0.183 0.08,-0.137 0.031,-0.109 -0.018,-0.082 0.057,-0.117 0.108,-0.195 0.006,-0.147 0.014,-0.114 0.134,-0.172 0.056,-0.132 -0.021,-0.091 -0.305,-0.043 -0.59,0.005 -0.473,0.036 -0.356,0.067 -0.407,-0.028 -0.458,-0.123 -0.382,-0.249 -0.305,-0.374 -0.229,-0.383 -0.154,-0.394 -0.062,-0.343 -0.029,-0.085 -0.068,-0.073 -0.062,-0.201 -0.055,-0.329 -0.072,-0.209 -0.089,-0.089 -0.03,-0.074 -0.129,-0.216 -0.054,-0.113 -0.017,-0.073 -0.102,-0.114 -0.075,-0.029 -0.341,0.05 -0.114,-0.104 -0.06,-0.073 -0.14,-0.057 -0.166,0.031 -0.192,0.119 -0.19,10e-4 -0.339,-0.07 -0.214,0.042 -0.39,0.013 -0.247,-0.1 -0.269,-0.15 -0.159,-0.031 -0.15,0.015 -0.098,-0.042 -0.044,-0.097 -0.067,-0.03 -0.263,-0.09 -0.212,-0.088 -0.574,-0.165 -0.16,-0.17 -0.133,-0.012 -0.164,0.014 -0.091,0.071 -0.112,0.018 -0.132,-0.035 -0.045,0.051 0.042,0.136 0.006,0.106 0.063,0.212 0.216,0.197 0.108,0.19 -0.001,0.183 -0.082,0.212 -0.266,0.365 -0.042,0.004 -0.217,0.049 -0.122,0.093 -0.087,0.021 -0.052,-0.05 -0.071,0.038 -0.091,0.125 -0.038,0.102 0.014,0.078 -0.046,0.089 -0.106,0.1 -0.058,-0.014 -0.028,-0.114 -0.042,-0.079 0.05,-0.15 0.485,-0.54 0.169,-0.226 0.03,-0.125 -0.018,-0.158 -0.065,-0.191 -0.121,-0.103 -0.175,-0.013 -0.126,0.063 -0.091,0.201 -0.02,0.138 -0.027,0.294 0.006,0.108 -0.044,0.078 -0.103,0.042 -0.065,0.132 -0.027,0.223 -0.054,0.125 -0.082,0.027 -0.063,0.144 -0.045,0.259 -0.035,0.128 -0.136,0.066 -0.296,0.131 -0.125,0.008 0.048,-0.115 0.053,-0.065 0.058,-0.014 0.163,-0.527 0.153,-0.278 -0.03,-0.045 -0.875,0.361 -0.321,0.198 -0.068,0.14 -0.012,0.149 0.043,0.157 -0.021,0.144 -0.086,0.13 -0.125,0.317 -0.051,0.19 -0.085,0.158 -0.261,0.094 -0.031,0.027 -0.274,0.332 -0.084,0.047 -0.555,-0.057 -0.353,0.083 -0.26,-0.083 -0.13,-0.263 -0.146,-0.167 -0.641,0.079 -0.805,-0.056 -0.386,0.033 -0.148,-0.111 -0.121,-0.291 -0.212,-0.037 -0.358,0.065 -0.497,0.374 -0.467,0.193 -0.368,0.001 -0.362,-0.194 -0.592,-0.39 -0.412,-0.438 -0.468,-0.154 -0.356,0.04 -0.14,0.22 -0.186,0 -0.13,-0.375 -0.112,-0.293 -0.232,-0.125 -0.419,-0.282 -0.292,-0.152 -0.448,-0.186 -0.155,-0.034 -0.291,-0.023 -0.289,-0.015 -0.336,0.052 0.003,-0.003 -0.013,0.004 0.01,-10e-4 -0.241,0.234 -0.282,0.103 -0.403,0.048 -0.269,-0.099 -0.135,-0.247 -0.571,-0.219 -1.007,-0.191 -0.58,-0.163 -0.153,-0.135 -0.083,-0.145 -0.021,-0.232 -0.001,-0.001 -0.254,-0.595 -0.11,-0.496 -0.05,-0.597 0.017,-0.197 -0.058,-0.062 -0.181,-0.13 -0.606,-0.087 -0.008,0.714 -0.011,0.903 -0.662,-0.006 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.198,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -1.197,0 -1.196,0 -1.197,0 -0.288,0 -0.106,-0.151 -0.273,-0.198 -0.108,0 -0.111,0.059 -0.07,0.096 -0.062,0.194 -0.04,0.065 -0.04,-0.011 -0.025,-0.055 -0.088,-0.27 0.023,-0.121 0.09,-0.145 -0.006,-0.052 -0.198,0.041 -0.089,-0.037 -0.041,-0.078 0.015,-0.308 -0.107,-0.175 0.127,-0.074 0.328,-0.059 0.335,-0.007 0.097,-0.128 0.095,-0.326 -0.239,0.299 -0.144,0.031 -0.445,-0.112 -0.288,0.018 -0.039,-0.066 0.012,-0.067 0.063,-0.066 0.046,-0.226 0.069,-0.636 0.09,-0.232 0.031,-0.126 -0.022,-0.029 -0.386,0.443 -0.033,0.14 0.04,0.122 -0.037,0.249 -0.178,0.075 -0.106,-0.041 -0.2,0.21 -0.063,0.022 -0.921,-0.368 -0.093,-0.051 -0.159,-0.172 -0.225,-0.294 -0.071,-0.254 0.084,-0.215 0.088,-0.107 0.093,0 0.104,0.081 0.212,0.35 0.084,0.216 0.219,-0.03 0.354,-0.277 0.085,-0.103 -0.353,0.105 -0.152,-0.007 -0.155,-0.115 -0.158,-0.224 -0.083,-0.254 -10e-4,-0.807 0.054,-0.156 0.171,-0.116 0.11,-0.193 -0.008,-0.082 -0.106,-0.164 -0.153,-0.128 -0.15,-0.064 -0.034,0.02 0.232,0.355 -0.008,0.133 -0.257,0.346 -0.039,0.102 -0.002,0.336 -0.036,0.072 -0.207,0.095 -0.232,0.264 -0.392,0.089 -0.369,-0.026 -0.198,-0.13 -0.615,-0.649 -0.225,-0.272 -0.005,-0.229 -0.421,-0.81 0.002,-0.174 -0.146,-0.253 -0.163,-0.036 -0.037,-0.241 0.336,-0.522 0.208,-0.44 0.024,-0.139 -0.009,-0.215 -0.05,-0.479 0.043,-0.208 -0.207,0.274 -0.044,0.203 0.051,0.205 -0.032,0.233 -0.12,0.325 -0.206,0.344 -0.424,0.165 -0.748,-0.092 -0.086,-0.044 -0.053,-0.118 -0.038,-0.506 -0.045,0.063 -0.085,0.27 -0.068,0.386 -0.087,0.087 -0.158,0.007 -0.123,-0.062 -0.088,-0.13 -0.188,-0.011 -0.352,0.103 -0.166,-0.042 -0.197,-0.004 -0.399,-0.113 -0.472,-0.029 -0.127,-0.087 0.007,-0.167 0.088,-0.084 0.498,-0.075 0.482,-0.179 0.476,-0.088 -0.019,-0.091 -0.215,-0.028 -1.093,0.197 -0.344,-0.023 -0.06,-0.032 -0.008,-0.199 0.126,-0.189 0.211,-0.176 0.063,-0.134 -0.122,-0.057 -0.197,0.037 -0.094,-0.107 0.104,-0.419 -0.092,-0.428 -0.128,0.406 -0.193,0.224 -0.922,0.095 -0.15,0.119 -0.122,-0.003 -0.589,-0.215 -0.251,-0.131 -0.236,-0.195 -0.42,-0.437 -0.329,-0.284 -0.018,-0.525 0.07,-0.335 0.159,-0.376 0.598,-0.813 0.205,-0.155 0.186,-0.053 0.877,-0.071 0.653,-0.103 0.124,-0.049 -0.961,-0.06 -0.855,0.042 -0.292,0.128 -0.374,0.523 -0.095,0.22 -0.099,0.16 -0.067,0.004 -0.127,-0.057 -0.041,-0.069 -0.053,-0.171 -0.201,-0.272 -0.088,-0.313 -0.052,-0.461 0.017,-0.206 0.093,-0.264 0.287,-0.519 -0.368,0.013 0.043,-0.438 0.135,-0.477 0.342,-0.283 0.347,-0.204 0.314,-0.268 0.549,-0.179 0.187,0.368 0.471,0.111 0.136,0.165 0.167,0.303 0.207,0.288 0.246,0.274 0.069,0.02 -0.108,-0.236 -0.4,-0.516 -0.018,-0.182 -0.103,-0.198 -0.53,-0.286 -0.094,-0.109 -0.094,-0.289 -0.04,-0.187 0.059,-0.181 0.539,-0.554 0.123,-0.292 0,-0.138 -0.042,-0.156 -0.118,-0.268 -0.031,0 0.037,0.407 -0.019,0.16 -0.061,0.177 -0.088,0.134 -0.115,0.092 -1.157,1.258 -0.115,0.074 -0.43,0.113 -0.22,0.133 -0.119,0.175 -0.19,0.458 -0.262,0.912 -0.3,0.735 -0.256,-0.952 -0.46,-0.731 0.899,-0.728 0.023,-0.111 -0.087,-0.39 0.025,-0.119 0.084,-0.171 0.228,-0.251 -0.009,-0.025 -0.266,0.09 -0.409,0.566 -0.16,0.182 -0.086,0.024 -0.01,-0.333 0.22,-0.864 0.181,-0.843 0.066,-0.242 0.156,-0.244 -0.148,0.018 -0.727,0.376 -0.244,-0.235 -0.204,-1.229 -0.358,-0.482 -0.607,-0.395 -0.596,-0.184 -0.136,-0.353 -0.118,-0.43 0.16,-0.507 0.261,-0.241 0.241,-0.109 0.228,0.05 0.012,0.186 -0.155,0.5 0.204,0.047 0.816,0.605 0.178,0.049 0.338,-0.233 0.188,0.009 0.444,0.188 0.15,0.227 0.425,0.444 -0.063,-0.258 -0.463,-0.545 -0.258,-0.175 -0.455,-0.034 -0.282,0.091 -0.119,-0.026 -0.249,-0.139 -0.211,-0.229 -0.211,-0.501 -0.048,-0.233 0.012,-0.173 0.05,-0.158 0.087,-0.141 0.173,-0.103 0.26,-0.063 0.079,-0.062 -0.333,-0.289 -0.151,0.001 -0.52,0.422 -0.106,0.033 -0.045,-0.082 -0.043,-0.007 -0.153,0.208 -0.119,0.093 -0.426,0.645 -0.066,0.308 -0.024,0.458 -0.049,0.287 -0.074,0.116 -0.5,0.219 -0.284,0.446 -0.345,-0.384 -0.379,-0.372 -0.253,-0.652 -0.456,-0.115 -0.53,-0.371 -0.202,-0.33 0.287,-0.681 0.412,-0.515 0.063,-0.62 0.057,-0.133 0.708,-0.154 0.462,-0.308 -0.474,-0.028 -0.291,0.047 -0.521,0.215 -0.578,-0.426 -0.299,-0.39 -0.094,-0.333 0.103,-0.282 0.014,-0.288 0.052,-0.39 0.055,-0.17 0.122,-0.218 0.248,-0.146 0.219,-0.449 0.09,-0.314 0.449,-0.946 0.164,-0.409 0.307,-0.569 0.618,-0.897 -0.195,0.051 -0.102,0.077 -0.098,-0.009 -0.092,-0.096 -0.087,-0.199 -0.083,-0.303 -0.047,0.133 -0.011,0.568 -0.062,0.485 -0.11,0.336 -0.303,0.683 -0.178,0.265 -0.122,-0.247 0.094,-0.426 0.175,-0.34 0.03,-0.466 -0.166,-0.558 -0.101,-0.45 -0.037,-0.342 -0.005,-0.313 0.027,-0.283 0.07,-0.309 0.112,-0.334 -0.014,-0.037 0.031,-0.312 -0.025,-0.32 -0.093,-0.254 -0.118,-0.221 -0.328,0.133 -0.557,-0.199 -0.18,-0.543 -0.482,-0.167 -0.26,-0.39 -0.529,-0.191 -0.429,-0.133 -0.327,-0.225 -0.383,-0.264 -0.382,-0.282 -0.29,-0.214 -0.211,0.013 -0.485,0.031 -0.024,-0.483 -0.149,-0.292 0.056,-0.259 -0.27,-0.133 -0.398,-0.195 0.116,-0.496 0.088,-0.376 -0.352,-0.111 -0.508,-0.161 0.164,-0.34 0.133,-0.275 -0.195,-0.403 -0.395,-0.677 -0.303,-0.485 -0.396,-0.759 -0.348,-0.669 -0.285,-0.548 -0.237,-0.38 -0.334,-0.681 -0.435,-0.771 -0.413,-0.608 0.06,-0.395 -0.408,-0.496 -0.358002,-0.503 -0.412,-0.581 -0.407,-0.285 -0.291,-0.204 -0.419,-0.294 -0.22,-0.264 -0.092,-0.224 -0.095,-0.157 -0.083,-0.22 -0.048,-0.256 -0.086,-0.158 -0.508,-0.382 -0.155,-0.24 -0.351,-0.278 -0.294,-0.116 -0.103,-0.094 -0.358,-0.842 0.058,-0.301 0.04,-0.302 -0.04,-0.155 -0.589,-0.645 -0.3,-0.268 -0.303,-0.278 -0.636,0.359 -0.651,0.367 -0.456,0.135 -0.63,0.186 0.209,0.398 -0.086,0.291 -0.196,0.134 -0.333,-0.017 -0.001,0.985 -0.314,0.699 -0.658,0.012 -0.354,0.24 -0.525,0.355 -0.425,0.287 -0.452,0.462 -0.231,-0.066 0.103,-0.412 -0.167,-0.699 -0.139,-0.584 -0.29,-0.301 -0.488,-0.507 -0.366,-0.382 -0.523,-0.546 -0.366,-0.383 -0.381,-0.4 -0.501,-0.528 -0.206,-0.686 -0.458,-0.249 -0.49,-0.266 -0.398,-0.507 0.135,-0.501 0.162,-0.602 0,-0.364 -0.437,0.022 -0.655,0.034 -0.584,0.03 -0.433,0.427 -0.4,0.394 -0.627,-0.307 -0.718,-0.352 -0.204,0.459 -0.666,-0.23 -0.672,-0.232 0,-1.66 0,-1.675 0,-1.69 0,-1.707 0,-1.722 0,-1.739 0,-1.755 0,-1.773 0,-1.791 0,-1.809 0,-1.825 0,-1.846 0,-1.865 0,-1.885 0,-1.905 0,-1.926 0,-1.947 0,-1.969 0,-1.991 0,-2.014 0,-2.037 0,-2.062 0,-2.086 0,-2.111 0,-2.137 0,-2.164 0,-2.191 0,-2.22 0,-2.249 0,-2.278 0,-2.309 0,-2.34 0.399,0.125 1.276,0.264 1.203,-0.155 2.231,0.853 1.38,1.585 1.119,0.774 0.457,0.529 0.727,0.465 1.71,1.009 0.532,0.103 0.991,0.481 0.614,-0.063 1.056,0.118 0.718,0.385 1.416,1.054 0.29,0.094 0.078,-0.077 -0.493,-1.042 -0.078,-0.101 -0.571,-0.391 -0.669,-0.193 -0.051,-0.076 -0.125,-0.371 0.04,-0.144 0.146,-0.066 0.499,0.003 0.295,-0.059 0.041,-0.146 -0.212,-0.034 -0.256,-0.142 -0.305,-0.25 -0.169,-0.236 0.614,-1.578 0.215,0.16 0.324,-0.367 0.58,0.233 0.106,-0.127 0.071,-0.807 0.086,-0.195 0.164,-0.145 0.808,-0.145 1.007,0.144 0.104,-0.078 -0.097,-0.542 -0.011,-0.214 0.061,-0.49 0.063,-0.263 0.119,-0.132 0.469,0.104 0.146,0.242 0.157,0.415 0.159,0.236 0.498,0.238 0.057,0.164 -0.19,0.625 -0.199,0.327 -0.412,0.857 -0.026,0.22 0.635,-0.384 0.713,-0.533 0.612002,-0.294 0.512,-0.054 0.366,-0.174 0.221,-0.293 0.158,-0.301 0.317,-0.975 0.21,-0.169 0.88,0.06 0.209,-0.03 0.136,-0.095 -0.025,-0.124 -0.186,-0.151 -0.251,-0.042 -0.006,-0.069 0.093,-0.161 0.137,-0.093 0.434,-0.111 0.285,0.354 0.194,0.025 0.644,-0.393 0.989,-1.046 0.395,-0.292 0.343,-0.051 0.289,0.191 0.223,-0.05 0.293,-0.594 0.116,-0.317 0.181,-0.275 0.732,-0.621 0.469,-0.133 0.286,0.115 0.341,0.258 0.281,0.1 0.37,-0.076 0.276,0.034 0.131,-0.125 0.472,-0.71 0.153,-0.007 0.147,0.209 0.237,0.515 10e-4,0.258 -0.309,0.625 -2.275,1.776 -0.701,0.761 -0.347,0.278 -0.359,0.157 -0.696,0.131 -0.276,0.154 -0.468,0.138 -1.094,0.242 -0.21,0.117 -0.143,0.137 -0.393,0.922 -0.191,0.3 -0.376,0.451 -0.422,0.276 -0.577,0.105 -0.367,0.428 -0.422,0.822 -0.341,0.57 -0.389,0.482 -0.423,0.628 -0.11,0.33 0.126,0.433 0.07,0.144 0.425,0.233 0.165,-0.053 -0.152,-0.231 -0.357,-0.335 -0.048,-0.121 0.092,-0.095 1.678,0.253 0.36,-0.255 0.126,-0.217 -0.027,-0.111 -0.455,-0.046 -0.098,-0.207 -0.072,-0.39 -0.015,-0.311 0.041,-0.231 0.103,-0.294 0.488,-0.483 0.525,-0.207 0.404,-0.274 0.224,-0.259 0.603,-0.444 0.242,-0.361 0.13,-0.281 0.016,-0.14 -0.109,-0.102 0.089,-0.242 0.439,-0.217 0.193,-0.019 0.618,0.208 0.112,0.162 -0.061,0.429 0.086,-0.02 0.238,-0.546 0.133,-0.182 0.137,-0.036 0.139,0.07 0.141,0.176 0.076,0.524 0.012,0.87 0.032,0.35 0.158,-0.6 0.11,-0.279 0.602,-1.286 0.406,-0.708 0.456,-0.693 0.662,-0.52 1.531,-0.865 0.862,-0.234 0.437,-0.216 0.214,-0.188 0.136,-0.232 0.24,-0.268 0.043,0.022 -0.093,0.561 -0.062,0.162 -0.561,0.346 -0.055,0.264 0.061,0.406 0.097,0.267 0.133,0.129 0.232,-0.091 0.333,-0.313 0.414,-0.48 0.895,-1.223 0.077,-0.225 0.226,-0.99 0.513,-0.439 0.929,-0.5 0.228,-0.319 -0.814,-0.271 -0.169,-0.187 -0.026,-0.112 0.154,-0.287 -0.372,-0.286 -0.137,-0.176 0.006,-0.514 0.114,-0.37 0.244,-0.359 0.139,-0.063 0.363,0.209 0.306,0.269 1.055,1.243 0.424,0.604 0.246,0.472 0.594,1.467 0.262,0.842 0.21,0.863 0.207,0.62 0.204,0.379 1.015,1.492 0.523,0.626 0.439,0.388 0.504,0.307 0.569,0.226 0.388,0.019 0.603,-0.627 0.014,-0.414 -0.266,-0.692 -0.268,-0.481 0.032,-0.294 0.354,-0.565 -0.024,-0.197 0.075,-0.585 0.245,0.112 0.096,-0.023 0.137,-0.215 0.176,-0.408 0.222,-0.338 0.268,-0.268 0.072,-0.176 -0.266,-0.127 -0.161,0 -0.12,-0.058 -0.078,-0.115 0.106,-0.125 0.582,-0.316 0.109,-0.303 0.186,-0.202 0.239,-0.081 0.147,0.084 0.163,0.251 0.008,0.401 -0.072,0.651 -0.013,0.524 0.183,1.229 0.162,0.267 0.63,0.36 -0.039,0.297 -0.729,1.28 -0.156,0.312 -0.077,0.237 0.026,0.2 0.129,0.164 0.247,0.116 0.636,0.047 0.174,-0.111 1.236,-0.036 0.227,-0.095 0.191,-0.245 0.278,-0.612 0.315,-0.187 0.099,-0.172 0.194,-0.732 0.096,-0.853 0.095,-0.359 0.143,-0.224 0.194,-0.072 0.481,0.084 0.226,-0.073 0.891,0.073 0.891,-0.063 0.921,0.152 0.591,0.176 0.547,0.277 1.049,0.656 0.415,0.351 1.465,1.573 0.428,0.319 0.806,0.304 2.762,0.676 0.347,0.181 0.728,0.706 0.501,0.41 0.595,0.391 0.743,0.337 1.457,0.508 0.237,0.168 0.267,0.049 0.297,-0.069 1.335,0.29 0.352,-0.014 0.254,0.054 0.313,0.208 0.458,0.077 -0.016,-0.144 -0.523,-0.798 0.023,-0.126 0.215,-0.01 0.647,0.134 0.148,-0.228 0.216,0.005 0.492,0.11 0.53,0.247 0.568,0.382 0.691,0.326 1.048,0.806 0.579,0.668 0.549,0.827 0.301,0.572 0.053,0.32 0.115,0.158 0.176,-0.002 0.067,0.121 -0.158,0.704 -0.091,0.175 -0.12,0.126 -0.502,0.143 -1.376,-0.169 -0.244,0.566 -0.771,0.477 -0.137,0.208 -0.031,0.151 0.056,0.493 -0.098,0.15 -0.632,0.56 -0.021,0.158 0.41,0.229 0.436,0.39 0.343,0.095 0.433,-0.053 0.544,0.137 0.655,0.326 0.456,0.148 0.256,-0.028 0.35,0.06 0.443,0.148 0.593,0.051 1.31,-0.013 0.393,0.111 0.549,0.05 1.056,-0.016 0.191,-0.021 0.338,-0.257 0.218,-0.085 0.38,-0.004 1.096,-0.189 0.379,0.003 0.351,-0.144 0.449,-0.29 0.277,-0.055 0.105,0.181 0.189,0.079 0.273,-0.023 0.52,-0.308 1.215,-0.908 0.437,0.001 0.321,-0.286 0.079,-0.005 0.088,0.118 0.297,0.666 0.091,0.107 0.205,0.058 0.2,0.34 0.208,0.507 0.156,0.141 1.14,0.021 0.401,0.141 0.121,0.145 0.123,0.399 0.075,0.77 0.05,0.281 0.166,0.409 0.109,0.118 0.103,-0.113 0.281,-1.065 0.098,-0.172 0.188,0.06 0.057,0.052 0.285,0.79 0.405,0.584 1.005,1.069 0.164,0.391 0.06,0.289 -0.057,0.258 -0.173,0.228 -0.273,0.183 -0.371,0.138 -0.347,-0.05 -0.322,-0.237 -0.104,-0.014 0.115,0.211 0.666,0.874 0.169,0.348 0.158,0.23 0.146,0.114 0.134,0.188 0.123,0.261 0.553,0.693 0.157,0.33 0.63,1.024 0.299,0.401 0.231,0.23 0.089,0.023 -0.052,-0.185 -0.804,-1.363 -0.41,-0.86 -0.058,-0.207 -0.026,-0.317 -0.016,-1.056 0.059,-0.162 0.277,-0.136 0.356,0.48 0.135,0.067 0.091,-0.028 0.047,-0.124 0.205,0.115 0.362,0.353 0.123,0.006 -0.273,-0.677 -0.195,-0.332 -0.069,-0.231 0.182,-0.349 -0.099,-0.176 -0.46,-0.516 -0.239,-0.536 -0.215,-0.813 -0.019,-0.317 0.035,-0.336 -0.032,-0.271 -0.29,-0.555 -0.314,-0.385 -0.25,-0.449 -0.051,-0.237 0.039,-0.642 0.189,-0.28 0.358,-0.376 0.097,-0.389 -0.165,-0.401 -0.03,-0.183 0.104,0.035 0.707,-0.202 0.177,0.071 0.267,-0.086 0.356,-0.245 0.279,-0.11 0.368,0.016 0.199,-0.059 0.244,-0.109 0.126,-0.122 0.224,-0.467 0.12,-0.07 0.375,0.051 0.211,0.103 0.099,-0.037 -0.015,-0.665 0.071,-0.234 0.374,-0.485 0.39,-0.051 0.261,-0.133 0.298,-0.272 0.213,-0.245 0.213,-0.394 0.087,-0.504 -0.068,-0.145 -0.443,-0.195 -0.266,0.102 -0.59,0.359 -0.62,0.461 -0.239,0.427 -0.065,0.546 -0.117,0.24 -0.483,-0.228 -0.206,0.004 -0.258,0.095 -0.274,0.209 -0.289,0.324 -0.426,0.059 -0.564,-0.205 -0.338,-0.058 -0.343,0.344 0.021,0.255 0.159,0.372 -0.158,0.22 -0.823,0.082 -0.217,-0.048 -0.439,0.146 -0.173,-0.032 -0.126,-0.177 -0.895,-0.754 -0.088,-0.153 0.217,-0.615 0.828,-1.677 0.091,-0.1 1.536,-0.294 0.927,-0.308 1.699,-0.934 0.329,-0.077 1.092,-0.622 0.449,-0.159 0.417,0.108 0.611,0.321 0.315,0.285 0.223,0.354 0.186,0.494 0.232,1.083 0.08,0.917 0.144,0.339 0.512,0.635 0.263,0.245 0.162,0.077 0.14,-0.148 0.096,-0.024 0.064,0.057 0.07,0.398 0.091,0.04 0.308,-0.05 0.327,0.165 0.047,0.122 -0.07,0.491 0.093,0.206 0.396,0.438 0.382,0.165 0.441,0.075 0.819,-0.074 0.686,-0.21 0.514,-0.345 0.423,0.385 0.846,0.925 0.506,0.652 0.419,0.306 0.85,0.366 0.193,0.197 0.311,0.022 0.428,-0.153 0.487,0.06 0.546,0.271 0.376,0.114 1.287,-0.512 0.197,-0.024 0.479,-0.247 0.309,-0.075 0.363,0.006 0.271,-0.075 0.179,-0.157 0.682,0.007 1.235,0.176 0.844,0.228 0.501,0.288 0.412,0.161 0.322,0.035 0.313,-0.051 0.305,-0.138 0.321,-0.262 0.686,-0.134 0.114,-0.069 -0.014,-0.144 -0.143,-0.218 -0.389,-0.415 -0.272,-0.405 -0.053,-0.258 0.006,-0.313 0.084,-0.181 0.164,-0.048 0.257,0.194 0.351,0.437 0.989,1.628 0.238,0.23 0.131,0.206 0.908,0.588 0.428,0.104 0.507,-0.363 0.224,-0.226 0.109,-0.218 -0.005,-0.21 0.048,-0.307 -0.051,-0.19 -0.136,-0.247 -0.364,-0.344 -0.591,-0.443 -0.54,-0.13 -0.489,0.184 -0.554,0.377 -0.23,-0.148 -0.69,-1.061 -0.174,-0.398 0,-0.11 0.32,0.127 0.015,-0.129 -0.191,-0.515 -0.118,-0.172 -0.398,-0.815 -0.049,-0.246 0.248,-0.056 0.112,-0.096 0.15,0.01 0.702,0.491 0.359,-0.219 0.832,-0.314 -0.328,-0.472 -0.078,-0.466 0.039,-0.102 0.271,-0.069 0.53,0.389 0.257,0.054 0.188,-0.154 0.199,-0.011 0.209,0.133 0.196,0.2 0.365,0.571 0.18,0.343 0.203,0.516 0.064,0.072 0.978,0.039 0.555,-0.457 -0.012,0.156 -0.127,0.358 -0.688,1.368 0.005,0.166 0.364,-0.073 0.171,-0.11 0.105,-0.164 0.091,-0.383 0.061,-0.113 1.021,-0.646 0.296,-0.096 -0.185,0.69 -0.38,2.44 -0.077,0.844 -0.083,0.286 -0.401,0.923 0.006,0.323 0.439,0.771 0.078,0.209 0.044,0.63 0.078,0.125 0.362,0.007 0.375,-0.2 0.447,-0.133 0.069,0.131 -0.245,0.761 0.014,0.066 0.424,-0.195 0.195,-0.026 0.08,0.044 0.316,0.387 0.032,0.289 -0.007,0.429 -0.033,0.308 -0.107,0.171 -0.127,0.068 -0.16,0.051 -0.144,-0.021 -0.444,0.064 -0.261,-0.082 -0.259,-0.235 -0.184,-0.057 -0.213,0.181 -0.337,-0.03 -0.378,-0.52 -0.151,0.049 -0.051,0.083 0.006,0.112 0.17,0.336 1.331,1.77 0.202,0.364 0.045,0.521 0.027,-0.002 0.125,-0.521 -0.081,-0.252 -0.685,-1.027 -0.082,-0.376 0.024,-0.103 0.181,-0.105 0.975,0.257 0.378,-0.056 0.254,-0.181 0.128,-0.224 0.093,-1.236 0.175,-0.796 -0.104,-0.716 -0.264,-1.146 -0.207,-0.678 -0.478,-0.691 -0.047,-0.248 0.533,-2.114 0.096,-0.179 0.119,-0.078 0.419,-0.031 0.305,-0.177 0.479,0.248 0.264,0.065 0.328,-0.219 0.727,-0.897 0.285,-0.279 0.362,-0.528 0.439,-0.78 0.479,-0.567 0.774,-0.531 0.474,-0.428 0.096,-0.154 -0.44,-0.037 -0.107,-0.073 -0.091,-0.407 0.046,-0.756 -0.008,-0.422 -0.052,-0.382 -0.096,-0.341 -0.14,-0.301 -0.128,-0.181 -0.116,-0.06 -0.079,0.027 -0.043,0.114 -0.118,0.727 -0.15,0.532 -0.206,0.278 -0.427,0.187 -0.733,0.138 -0.304,-0.253 -0.039,-0.215 0.106,-0.843 0.244,-0.363 0.671,-0.717 0.43,-0.576 0.007,-0.1 -0.395,-0.005 -0.094,-0.119 -0.083,-0.711 0.023,-0.267 0.062,-0.305 0.276,-0.223 0.848,-0.275 0.659,-0.324 0.02,0.113 -0.529,0.969 -0.055,0.224 0.202,0.209 0.508,-0.56 0.328,-0.463 0.055,-0.158 -0.298,-0.058 -0.016,-0.192 0.057,-0.353 -0.027,-0.242 -0.33,-0.305 -0.406,0.17 -0.339,0.321 -0.281,0.087 -0.415,0.006 -0.302,-0.073 -0.189,-0.153 -0.228,-0.343 -0.266,-0.533 -0.336,-0.533 -0.119,-0.058 -0.102,0.06 -0.215,0.515 -0.093,0.062 -1.318,-0.722 -0.559,-0.406 -0.271,-0.308 -0.336,-0.183 -0.402,-0.056 -0.321,-0.144 -0.239,-0.23 -0.194,-0.332 -0.148,-0.433 -0.273,-0.547 -0.626,-1.094 -0.166,-0.706 -0.023,-0.271 0.039,-0.7 0.586,-1.195 0.109,-0.346 0.2,-0.255 0.291,-0.164 0.209,-0.05 0.476,0.153 -0.285,-0.373 -0.022,-0.2 0.286,-0.655 -0.056,-0.03 -0.786,0.504 -0.201,-0.034 -0.283,-0.308 -0.533,-1.106 -0.006,-0.692 0.167,-0.968 0.059,-0.581 -0.152,-0.497 0.057,-0.14 0.165,-0.14 0.069,-0.15 -0.072,-0.552 0.115,-0.295 0.377,-0.573 0.37,-0.503 0.218,-0.154 0.189,0.029 0.197,0.154 0.206,0.281 0.352,0.289 0.261,0.082 0.191,-0.158 0.328,-1.084 0.116,-0.279 -0.109,-0.121 -0.643,0.011 -0.278,-0.09 -0.16,-0.105 -0.118,-0.417 0.097,-0.223 0.622,-0.776 0.293,-0.817 0.871,-1.143 0.882,-0.539 0.427,-0.178 0.348,-0.036 0.151,0.072 0.186,0.574 0.034,0.604 0.479,0.752 0.385,0.057 0.239,-0.113 0.774,0.044 0.179,0.21 -0.013,0.234 -0.086,0.378 0.053,0.323 0.525,0.616 0.473,0.425 0.424,0.529 0.632,1.1 0.137,0.31 0.095,0.334 0.164,1.216 0.021,0.459 -0.06,1.32 -0.05,0.249 -0.167,0.298 0.058,0.121 0.499,0.341 0.396,0.675 0.208,0.217 0.502,0.363 0.091,0.137 0.114,0.226 0.283,0.965 0.464,0.865 0.034,0.186 -0.1,0.405 0.071,0.128 0.179,0.148 0.161,-0.077 0.142,-0.303 0.155,-0.088 0.167,0.128 0.127,0.225 0.173,0.55 0.252,0.453 -0.021,0.138 -0.125,0.113 -0.681,0.125 -0.383,-0.087 -0.354,-0.221 -0.246,-0.229 -0.229,-0.351 -0.085,0.037 -0.12,0.286 -0.256,0.417 -0.16,0.384 0.186,0.17 0.895,-0.011 0.194,0.108 0.227,0.269 -0.259,0.449 -0.605,0.751 -1.308,1.447 -0.384,0.37 0.093,0.107 0.146,0.027 0.449,-0.063 0.419,-0.193 0.51,0.083 0.227,0.158 -0.077,0.153 0.138,0.25 0.834,0.579 0.527,-0.115 0.538,-0.558 0.416,-0.277 0.512,0.038 0.143,0.062 -0.055,0.136 -0.378,0.313 -0.342,0.348 -0.037,0.098 0.426,-0.14 0.949,0.222 0.461,0.055 0.334,-0.056 0.313,0.088 0.293,0.232 0.098,0.147 -0.274,0.095 -0.259,-0.002 -0.22,0.141 -0.181,0.281 -0.129,0.364 -0.077,0.447 -0.197,0.184 -0.316,-0.078 -0.124,-0.126 0.068,-0.177 -0.092,-0.025 -0.253,0.126 -0.197,0.003 -0.054,0.131 1.382,1.418 0.442,1.246 0.304,0.512 0.03,0.135 -0.198,0.343 -0.01,0.261 0.091,0.751 -0.042,0.597 -0.136,1.047 0.127,0.324 0.295,0.286 0.177,0.365 0.121,0.125 0.09,0.293 0.105,0.184 0.121,0.075 0.085,-0.096 0.05,-0.268 0.113,-0.251 0.312,-0.452 0.302,-0.708 0.051,-0.235 -0.048,-0.559 0.035,-0.24 0.284,-0.851 0.09,-0.592 0.086,-0.927 0.15,-0.648 0.322,-0.552 0.562,-1.12 0.203,-0.225 0.228,-0.111 0.398,0.026 0.29,0.362 0.39,0.667 0.497,0.605 0.904,0.817 0.258,0.308 0.512,0.803 0.216,0.793 0.148,1.113 0.128,0.667 0.107,0.226 0.049,0.335 -0.009,0.445 -0.041,0.347 -0.071,0.25 -0.111,0.142 -0.276,0.046 -0.337,-0.069 -0.097,-0.112 -0.177,-0.522 -0.074,-0.032 -0.313,0.385 -0.039,0.215 0.115,0.711 -0.015,1.329 0.032,0.288 0.331,1.372 0.558,1.036 1.397,1.98 0.08,0.223 0.148,0.802 0.073,0.167 0.091,0.1 0.11,0.032 0.152,-0.08 0.514,-0.608 0.447,-0.643 0.312,-0.336 0.177,-0.027 0.19,-0.118 0.204,-0.208 0.136,-0.229 0.069,-0.25 0.092,-0.98 0.078,-0.47 0.218,-0.644 0.08,-0.183 1.081,-1.646 0.089,-0.204 0.459,-1.929 0.162,-0.891 0.023,-0.539 -0.062,-0.482 0.031,-0.398 0.124,-0.314 0.131,-0.222 0.226,-0.225 0.125,-0.317 0.075,-0.032 0.185,-0.002 0.244,0.216 0.177,0.039 1.144,-0.248 0,-0.132 -0.671,-0.417 0.007,-0.209 0.059,-0.288 0.211,-0.322 0.259,-0.102 0.058,-0.205 0.007,-0.254 0.085,-0.415 -0.078,-0.148 -0.627,-0.575 -0.362,0.024 -0.092,-0.075 -0.313,-0.471 -0.114,-0.686 -0.012,-0.282 0.043,-0.454 0.04,-0.126 -0.02,-0.206 -0.079,-0.286 -0.006,-0.254 0.066,-0.223 -0.04,-0.264 -0.146,-0.307 -0.057,-0.264 0.153,-0.781 0.005,-0.24 -0.144,-0.335 -0.105,-0.13 0.077,-0.083 0.259,-0.035 0.31,0.109 0.359,0.252 0.441,0.003 0.521,-0.246 0.53,-0.119 0.916,0.049 0.216,0.07 0.911,0.728 0.707,0.369 0.319,-0.034 1.572,0.146 0.69,-0.074 0.357,0.033 0.686,0.397 -0.045,0.33 -0.296,0.551 -0.386,0.113 -0.341,0.19 0.316,0.288 0.933,0.386 0.219,0.617 0.066,0.282 -0.108,0.254 0.054,0.127 0.216,0 0.558,-0.215 0.616,0.142 0.897,0.474 0.097,0.099 0.158,0.369 -0.02,0.149 -0.793,0.917 -0.413,0.362 -0.542,0.372 -0.018,0.198 0.761,0.037 0.592,0.104 0.267,0.121 0.139,0.171 0.19,0.368 0.031,0.29 -0.019,0.392 -0.063,0.272 -0.688,0.778 -0.316,0.243 -0.538,0.287 -0.234,0.215 -0.257,-0.03 -0.28,-0.274 -0.292,-0.059 -0.525,0.22 -0.285,-0.008 -0.14,0.077 -0.011,0.169 0.249,0.488 0.144,0.192 0.056,0.144 -0.106,0.241 0.022,0.076 0.084,0.086 0.478,1.058 0.101,0.081 0.099,-0.04 0.207,-0.301 0.123,-0.123 0.06,0.016 -0.002,0.154 -0.221,0.917 -0.029,0.244 0.005,0.218 0.106,0.461 0.242,0.493 0.3,0.442 0.451,0.593 0.606,0.631 0.226,0.306 0.331,0.719 0.068,0.275 -0.087,0.751 -0.242,1.222 -0.156,0.691 -0.07,0.166 -0.457,0.488 -0.259,0.114 -0.427,-0.013 -0.144,0.095 -0.223,0.389 -0.303,0.68 -0.239,0.43 -0.174,0.181 -0.321,0.211 -0.502,0.623 -0.247,0.239 -0.862,0.259 -0.702,0.838 -0.279,0.276 -0.303,0.146 -0.328,0.018 -0.188,-0.134 -0.107,-0.51 -0.063,-0.168 -0.248,-0.35 -0.508,-1.021 -0.219,-0.351 -0.146,-0.078 -0.293,0.055 -0.15,-0.033 -0.327,-0.323 -0.118,-0.209 0.015,-0.082 0.248,-0.119 -0.106,-0.168 -0.437,-0.462 -0.181,-0.243 -0.022,-0.083 -0.433,-0.314 -0.43,-0.087 -0.545,0.521 -0.207,0.352 0.007,0.115 0.261,0.134 0.113,-0.065 0.222,-0.324 0.117,-0.101 0.336,0.051 0.278,0.224 0.101,0.194 0.037,0.132 0.759,1.03 0.269,0.208 0.112,0.245 0.085,0.407 0.165,0.451 0.365,0.742 0.388,0.913 0.08,0.359 -0.201,0.173 -0.101,0.013 -0.299,-0.135 -0.79,-0.422 -0.088,0.008 -0.208,0.222 -0.171,0.504 -0.054,0.048 -0.42,-0.197 -0.787,-0.443 -0.527,-0.376 -0.267,-0.31 -0.324,-0.495 -0.38,-0.682 -0.454,-0.218 -0.527,0.249 -0.762,0.088 -1.6,-0.077 -0.21,0.059 -0.081,0.085 0.136,0.375 -0.032,0.103 -0.107,0.07 -0.024,0.11 0.174,0.396 0.282,0.269 0.796,0.363 0.527,0.311 0.315,0.267 0.103,0.225 0.016,0.246 -0.15,0.488 -0.086,0.179 -1.85,2.411 -0.705,0.966 -0.359,0.591 -0.316,0.389 -0.274,0.19 -0.453,0.106 -0.632,0.024 -0.819,-0.091 -0.424,-0.307 -0.769,-0.821 -0.539,-0.484 -0.241,-0.162 -0.201,-0.457 -0.181,-0.088 -0.386,-0.077 -0.397,-0.245 -0.933,-0.833 -0.484,-0.333 -0.44,-0.184 -0.396,-0.033 -0.15,0.05 0.27,0.421 -0.118,0.026 -0.32,-0.096 -0.316,0.001 -0.561,-0.302 -0.553,0.04 -0.399,-0.061 -0.478,-0.168 -0.516,-0.082 -0.831,0.008 -0.297,0.036 -0.044,0.079 0.398,0.368 0.685,0.443 -0.091,-0.382 0.024,-0.099 0.229,-0.133 1.085,0.236 1.23,0.495 0.312,0.048 0.346,0.173 0.382,0.298 0.527,0.605 1.006,1.364 0.323,0.342 0.428,0.318 2.179,0.459 0.752,-0.003 1.509,0.132 0.797,0.239 0.226,0.179 0.07,0.597 -0.073,0.299 -0.433,0.907 -0.274,0.665 -1.697,2.783 -0.22,0.634 -0.096,0.378 -0.303,0.391 -0.767,0.604 -0.769,0.512 -0.462,0.11 -0.412,-0.122 -0.267,-0.148 -0.396,-0.509 -0.024,0.053 0.286,0.796 -0.067,0.081 -0.232,-0.1 -0.531,-0.357 -0.172,0.066 -0.102,0.097 -0.141,-0.002 -0.181,-0.101 -0.328,-0.297 -0.087,-0.145 -0.079,-0.442 -0.054,-0.079 -0.646,0.255 -0.108,0.085 0.265,0.177 0.09,0.125 0.261,0.652 0.014,0.14 -0.186,0.085 -0.618,-0.245 -0.074,0.021 0.305,0.646 0.117,0.307 0.013,0.159 -0.396,0.726 -0.254,0.302 -0.347,0.11 -0.217,-0.074 -0.245,-0.185 -0.177,0.026 -0.108,0.237 -0.202,0.169 -0.295,0.101 -0.375,-0.044 -0.456,-0.189 -1.209,-0.681 -0.381,-0.105 -0.706,-0.094 -0.084,-0.097 0.006,-0.092 0.097,-0.087 -0.027,-0.075 -0.149,-0.063 -0.155,0.06 -0.161,0.182 -0.281,0.054 -0.402,-0.074 -0.594,-0.266 -1.179,-0.688 -1.29,-0.583 -0.748,-0.759 0.279,0.684 -0.023,0.231 -0.143,0.203 -0.024,0.2 0.293,0.485 0.405,0.174 0.408,-0.019 0.011,-0.079 -0.17,-0.121 -0.15,-0.176 -0.072,-0.263 0.077,-0.046 0.36,0.138 0.237,0.16 1.787,0.893 0.533,0.167 0.4,0.172 0.111,0.102 -0.135,0.221 -0.718,0.551 -0.012,0.09 0.493,-0.05 0.598,-0.485 0.336,-0.226 0.323,-0.138 0.437,0.239 0.552,0.615 0.447,0.348 0.637,0.194 0.373,0.208 0.627,0.571 0.099,0.297 0.058,1.203 -0.022,0.289 -0.082,0.287 -0.141,0.283 -0.262,0.158 -0.383,0.034 -0.301,0.116 -0.658,0.631 -0.279,0.091 -1.181,-0.188 -0.462,-0.176 -0.213,0.011 -0.118,0.139 -0.124,0.063 -0.463,0.058 -0.075,0.113 0.029,0.175 0.091,0.236 0.113,0.136 0.174,0.171 0.264,0.112 0.542,0.125 0.056,0.319 -0.024,0.103 -0.178,0.212 -0.206,-0.021 -0.354,-0.251 -0.174,-0.01 -0.153,0.136 -0.213,0.045 -0.273,-0.047 -0.152,0.11 -0.03,0.266 -0.092,0.199 -0.315,0.314 -0.17,0.231 0.005,0.182 0.181,0.131 0.208,0.297 0.234,0.461 0.045,0.204 -0.144,-0.054 -0.194,-0.183 -0.243,-0.313 -0.368,-0.28 -0.81,-0.366 -0.143,0.011 0.073,0.093 0.537,0.384 0.206,0.247 0.025,0.18 -0.45,0.393 -0.012,0.131 0.119,0.115 0.032,0.096 -0.16,0.192 -0.264,0.161 -0.511,0.023 -0.047,0.091 0.195,0.197 0.065,0.122 -0.167,0.168 -0.109,0.023 -0.589,-0.078 0.155,0.419 0.091,0.146 0.181,0.207 0.324,0.191 0.006,0.074 -0.113,0.164 -0.192,0.2 -0.811,0.609 -0.57,0.712 -0.079,0.222 0.145,0.466 10e-4,0.117 -0.149,0.211 -0.333,-0.058 -0.063,0.083 0.079,0.218 0.015,0.32 -0.05,0.421 -0.246,0.662 -0.434,0.891 -0.333,0.806 -0.231,0.722 -0.167,0.357 -0.308,0.024 -0.233,0.225 0.159,0.118 0.097,0.138 0.067,0.209 -0.066,0.653 -0.2,1.092 -0.124,0.864 0.025,2.641 -0.032,1.156 -0.088,0.638 -0.143,0.346 -0.244,0.104 0.311,0.101 0.198,0.162 0.091,0.246 0.085,0.392 0.112,0.18 0.139,-0.031 0.125,0.04 0.111,0.109 0.338,0.556 0.371,0.159 0.018,0.308 -0.146,1.715 0.001,0.223 0.168,-0.431 0.177,-1.332 0.241,-0.595 0.189,-0.126 0.774,-0.067 0.825,0.151 0.312,0.019 0.272,-0.083 0.279,0.167 0.068,0.167 0.079,0.701 0.074,0.399 0.491,1.417 0.234,0.789 0.286,1.224 0.107,0.349 0.595,1.617 0.113,0.436 0.046,0.335 -0.02,0.235 -0.108,0.361 -0.197,0.487 -0.184,0.37 -0.172,0.255 -0.176,0.189 -0.181,0.125 0.012,0.033 0.205,-0.06 0.208,-0.127 0.395,-0.329 0.152,-0.074 0.429,-0.047 0.014,0.119 -0.207,0.245 0.046,0.023 0.299,-0.198 0.648,-0.282 2.545,-0.917 0.6,-0.082 0.856,0.168 0.694,0.39 0.757,0.501 0.798,0.363 1.259,0.339 0.367,0.162 0.738,0.167 0.342,0.189 0.411,0.456 0.654,0.593 0.493,0.371 0.551,0.347 0.553,0.636 0.89,1.436 0.22,0.176 0.549,0.233 1.031,0.301 1.522,0.705 0.669,0.275 0.433,0.109 0.432,0.193 0.432,0.277 0.33,0.301 0.227,0.326 0.2,0.213 0.35,0.236 0.181,0.169 0.017,0.253 -0.421,0.991 -0.009,0.079 0.426,-0.711 0.238,-0.205 0.19,-0.096 0.396,0.011 0.601,0.119 0.527,10e-4 0.453,-0.116 0.386,-0.052 0.319,0.011 0.231,-0.035 0.144,-0.08 0.172,-0.002 0.682,0.247 0.276,0.013 0.997,0.232 0.64,-0.083 0.11,0.045 0.223,0.302 0.188,0.023 0.318,-0.047 0.309,0.082 0.517,0.396 0.239,0.34 0.229,0.693 0.02,0.207 -0.424,1.597 -0.133,0.615 -0.018,0.534 0.084,0.307 0.367,0.514 0.066,0.134 0.217,0.757 0.06,0.323 -0.024,0.37 -0.114,0.608 0.029,0.462 0.096,0.697 -0.036,0.471 -0.169,0.247 -0.114,0.241 -0.089,0.437 0,0.165 0.087,0.324 0.162,0.183 0.266,0.206 0.247,0.305 0.451,0.74 0.328,0.405 0.401,0.603 0.078,0.3 -0.112,0.198 -0.139,0.138 -0.323,0.185 -0.145,0.134 0.037,0.032 0.468,-0.1 0.276,0.011 0.234,0.147 0.191,0.285 0.317,0.242 0.443,0.199 0.445,0.333 0.738,0.789 0.133,0.181 0.196,0.412 0.259,0.64 0.135,0.417 0.012,0.196 -0.146,0.197 -0.498,0.358 -0.501,0.624 0.158,-0.03 0.331,-0.264 0.558,-0.521 0.31,-0.101 0.287,0.061 0.455,0.15 0.401,0.213 0.349,0.276 0.519,0.738 0.548,0.587 0.304,0.5 -0.092,-0.318 -0.202,-0.367 -0.515,-0.585 -0.22,-0.306 -0.047,-0.146 -0.017,-0.16 0.04,-0.292 0.096,-0.425 0.129,-0.3 0.161,-0.175 0.107,-0.186 0.055,-0.197 0.085,-0.145 0.446,-0.263 0.117,0.024 0.092,0.319 0.107,0.066 0.206,0.05 0.173,0.11 0.141,0.17 0.1,0.172 0.058,0.175 0.133,0.569 0.095,0.263 0.016,-0.319 0.111,-0.503 0.085,-0.207 0.27,-0.303 -0.014,-0.131 -0.112,-0.176 -0.565,-0.758 -0.011,-0.185 0.151,-0.109 0.103,-0.21 0.056,-0.31 0.121,-0.225 0.354,-0.317 0.305,-0.488 0.157,-0.336 0.128,-0.177 0.123,-0.042 -0.183,-0.136 -0.036,-0.089 -0.009,-0.406 -0.079,-0.426 -0.122,-0.199 -0.346,-0.427 -0.057,-0.127 -0.061,-0.483 0.034,-0.243 0.089,-0.204 -0.051,-0.197 -0.321,-0.358 -0.124,-0.313 -0.137,-0.76 -0.126,-0.957 -0.143,-0.707 -0.161,-0.454 -0.036,-0.286 0.089,-0.119 0.116,-0.359 0.104,-0.088 0.162,0.023 0.003,-0.041 -0.246,-0.194 -0.121,-0.244 0.005,-0.09 0.217,-0.243 -0.039,-0.103 -0.161,-0.133 -0.49,-0.224 0.177,-0.086 0.112,-0.193 -0.022,-0.057 -0.194,-0.079 -0.224,-0.149 -0.169,-0.223 -0.209,-0.352 -0.127,-0.28 -0.125,-0.466 -0.217,-0.532 -0.095,-0.133 -0.109,-0.085 -0.122,-0.04 0.004,-0.082 0.131,-0.124 2.123,-0.894 0.177,-0.129 1.042,-0.502 0.481,-0.281 0.49,-0.405 0.667,-0.417 0.325,-0.27 0.205,-0.26 1.059,-1.043 0.449,-0.536 0.26,-0.461 0.377,-0.553 0.495,-0.646 0.313,-0.556 0.13,-0.465 0.162,-0.803 0.046,-0.715 0.029,-1.053 -0.017,-0.945 -0.133,-1.49 -0.08,-0.471 -0.152,-0.562 -0.367,-1.136 -0.066,-0.311 -0.228,-0.525 -0.746,-1.374 -0.933,-0.936 -0.177,-0.235 -0.37,-0.276 -0.562,-0.317 -0.363,-0.259 -0.949,-0.973 -0.313,-0.117 -0.121,-0.251 -0.025,-0.179 0.036,-0.468 0.055,-0.325 0.067,-0.239 0.079,-0.154 0.522,-0.724 0.292,-0.582 0.204,-0.319 0.225,-0.249 0.406,-0.326 0.231,-0.412 -0.053,-0.167 -0.183,-0.183 -0.04,-0.178 0.309,-0.455 0.043,-0.126 -0.04,-0.43 0.06,-0.096 0.381,-0.026 0.544,0.617 0.133,-0.054 -0.174,-0.17 -0.208,-0.416 0.03,-0.173 0.401,-0.45 0.011,-0.205 -0.115,-0.284 -0.013,-0.228 0.235,-0.543 -0.063,-0.114 -0.661,-0.105 -0.109,-0.152 0.039,-0.072 0.311,-0.183 0.024,-0.069 -0.549,-1.224 -0.092,-0.366 0.234,-0.453 0.266,-0.205 -0.034,-0.117 -0.348,-0.021 -0.212,-0.062 -0.212,-0.354 0.083,-0.224 0.076,-0.103 0.207,-0.531 0.199,-0.109 -0.038,-0.095 -0.753,0.226 -0.355,-0.186 -0.349,0.049 -0.166,-0.055 0.061,-0.19 0.632,-0.867 0.292,-0.471 0.183,-0.426 0.097,-0.284 0.01,-0.142 -0.064,-0.947 0.038,-0.26 0.245,-0.242 0.377,-0.456 -0.517,-0.413 -0.323,-0.404 -0.214,-0.2 -0.162,-0.197 -0.208,-0.416 -0.157,-0.543 -0.167,-1.099 -0.027,-0.608 0.038,-0.442 0.07,-0.216 0.114,-0.225 0.472,-0.43 0.831,-0.636 0.649,-0.25 0.469,0.137 0.915,0.149 0.738,0.362 2.244,0.906 0.397,0.4 -0.375,0.337 0.054,0.083 0.845,-0.643 0.223,-0.124 0.191,-0.03 0.638,0.249 0.256,0.038 0.323,0.208 0.771,0.687 0.055,-0.057 -0.216,-0.35 0.124,-0.167 0.608,-0.365 0.628,-0.299 0.446,-0.294 0.473,-0.389 0.32,-0.208 0.165,-0.027 0.211,0.115 0.565,0.517 0.363,0.265 0.292,0.276 0.409,0.487 0.16,0.106 0.31,0.33 0.412,-0.034 0.135,0.039 0.045,0.064 0.069,0.223 0.037,0.143 0.002,0.153 -0.095,0.429 -0.296,0.684 0.124,0.011 0.188,-0.146 0.244,-0.261 0.191,-0.092 0.407,0.208 0.378,0.334 0.133,0.177 0.147,0.288 0.125,0.148 0.116,0.284 -0.008,0.092 -0.109,0.138 -0.463,0.232 0.088,0.087 0.541,-0.146 0.165,-0.144 0.118,-0.24 0.158,-0.068 0.639,0.421 0.094,0.146 -0.041,0.114 -0.104,0.129 -0.279,0.143 -0.239,0.356 -0.038,0.153 0.17,0.109 0.417,0.047 -0.003,0.084 -0.241,0.156 -0.032,0.204 0.539,0.723 0.361,0.316 0.208,0.058 0.486,0.015 0.394,0.122 0.875,0.408 0.512,0.074 0.441,-0.125 0.293,-0.027 0.258,0.163 0.083,0.115 0.039,0.229 -0.005,0.342 0.142,0.239 0.289,0.137 0.233,-0.021 0.306,-0.268 0.258,-0.046 0.086,-0.201 0.076,-0.374 0.075,-0.204 0.187,-0.059 0.15,0.111 0.088,0.17 0.162,0.511 0.045,0.228 -0.018,0.208 -0.081,0.187 -0.159,0.199 -0.236,0.211 -0.186,0.303 -0.227,0.699 -0.084,0.456 -0.023,0.269 0.01,0.293 0.043,0.319 0.09,0.262 0.211,0.37 0.013,0.123 0.016,0.299 -0.019,0.131 -0.123,0.26 -0.342,0.259 -0.469,0.067 -1.534,0.015 -0.408,-0.062 0.099,0.235 0.429,0.075 0.393,-0.003 1.463,0.148 0.201,0.15 0.17,0.264 0.121,0.272 0.12,0.554 0.022,0.262 -0.064,0.291 -0.151,0.319 -0.102,0.423 -0.052,0.528 0.082,0.279 0.791,0.022 0.157,0.19 -0.018,0.142 -0.281,0.532 -0.026,0.151 0.128,0.358 -0.018,0.102 -0.078,0.104 -0.075,0.268 -0.071,0.431 -0.089,0.279 -0.215,0.215 -0.112,0.047 -0.082,-0.057 -0.212,-0.587 -0.087,-0.088 -0.083,0.055 -0.042,0.091 0,0.127 -0.037,0.131 -0.073,0.135 -0.313,0.216 -0.508,0.146 0.016,0.156 0.34,0.083 0.434,0.26 0.249,0.042 0.391,-0.21 0.754,-0.662 0.311,-0.18 0.274,-0.069 0.309,-0.009 0.342,0.051 0.683,-0.085 0.171,0.063 0.209,0.146 0.247,0.229 0.17,0.221 0.093,0.212 0.154,0.798 0.206,0.208 0.05,0.153 0.017,0.233 -0.013,0.457 -0.227,0.919 -0.117,0.338 -0.313,0.461 -0.361,0.208 -0.642,0.196 -0.335,0.164 -0.253,0.226 -0.015,0.124 0.729,-0.387 0.803,-0.189 0.229,-0.212 0.173,-0.207 0.176,-0.461 0.319,-1.199 0.181,-0.378 0.252,-0.064 0.112,0.129 0.262,0.705 -10e-4,0.179 -0.065,0.152 -0.428,0.682 0.154,-0.069 0.43,-0.641 0.091,-0.201 0.051,-0.295 0.138,-0.209 0.053,0.103 0.133,0.755 0.004,0.55 0.021,0.176 -0.048,0.521 0.054,0.093 0.129,-0.45 0.042,-0.34 0.059,-0.243 0.075,-0.146 0.526,-0.46 0.615,-0.375 0.402,-0.334 0.334,-0.16 0.5,-0.151 0.32,-0.311 0.141,-0.471 0.12,-0.327 0.099,-0.181 0.33,-0.326 0.18,-0.019 0.171,0.121 0.194,0.244 0.217,0.367 0.13,0.288 0.042,0.208 0.035,0.729 0.042,-0.002 0.2,-0.557 0.023,-0.198 -0.014,-0.209 -0.061,-0.209 -0.201,-0.458 -0.079,-0.287 0.018,-0.177 0.213,-0.101 0.315,-0.04 0.053,-0.075 -0.231,-0.19 -0.006,-0.103 0.223,-0.339 0.131,-0.019 0.256,0.053 -0.051,-0.174 0.002,-0.115 0.072,-0.045 0.424,0.11 0.05,-0.133 0.365,-0.012 0.036,-0.119 -0.316,-0.17 -0.309,-0.105 -0.095,-0.093 -0.072,-0.137 -0.096,-0.331 0.023,-0.088 0.087,-10e-4 0.151,0.091 0.082,-0.174 0.092,-0.41 0.091,-0.168 0.284,0.194 0.012,-0.083 -0.23,-0.646 0.041,-0.125 0.352,-0.047 0.213,0.081 0.56,0.475 0.101,-0.054 -0.086,-0.13 -0.286,-0.28 -0.259,-0.183 -0.231,-0.086 -0.174,-0.156 -0.19,-0.428 -0.032,-0.177 0.016,-0.231 0.133,-0.479 0.077,-0.104 0.135,-0.077 0.194,-0.05 0.215,0.047 0.443,0.316 0.074,-0.1 -0.239,-0.172 -0.129,-0.159 -0.062,-0.204 0.027,-0.231 0.188,-0.478 0.088,-0.386 0.399,-1.068 0.117,-0.195 0.125,-0.124 0.078,-0.128 0.313,-0.029 0.579,0.384 0.177,0.227 0.047,0.32 -0.303,0.432 -0.521,0.322 -0.155,0.14 0.101,0.082 0.487,-0.257 0.425,-0.12 0.349,0.004 0.283,0.511 0.04,0.706 -0.162,0.587 0.212,-0.292 0.266,-0.161 0.217,0.383 0.026,0.312 0.114,0.292 0.246,0.391 0.256,0.342 -0.281,0.357 -0.338,0.213 0.071,0.159 0.462,0.17 0.063,0.168 -0.048,0.228 0.067,-0.001 0.321,-0.352 0.274,0.047 0.35,0.759 -0.255,0.433 -0.391,0.198 -0.311,0.084 -0.433,-0.012 -0.17,0.064 0.084,0.144 0.414,0.002 0.633,-0.109 0.474,-0.178 0.206,-0.011 0.217,0.072 0.073,0.061 -0.228,0.124 -0.018,0.043 0.085,0.127 0.177,0.409 -0.016,0.092 -0.169,0.237 0.271,0.052 0.379,-0.111 0.118,0.123 0.231,0.489 0.146,0.5 -0.641,0.682 -0.326,0.141 -0.481,0.359 -0.135,0.287 -0.278,0.368 0.178,-0.004 0.497,-0.591 0.243,-0.138 0.181,0.035 0.073,0.1 -0.036,0.166 0.159,-0.021 0.668,-0.346 0.281,-0.069 0.363,-0.022 0.04,0.12 -0.226,0.828 -0.386,0.633 -0.704,0.389 -0.249,0.228 -0.309,0.368 0.117,0.066 0.671,-0.482 0.458,-0.191 0.644,-0.153 0.286,0.021 0.507,0.962 0.292,0.093 0.236,-0.05 0.446,0.276 0.167,0.266 -0.042,0.191 -0.151,0.114 -0.076,0.178 0.178,0.529 -0.103,0.296 -0.325,0.261 -0.233,0.132 -0.244,0.041 -0.238,0.231 -0.108,0.034 -0.332,-0.059 0.114,0.142 0.164,0.072 0.262,0.039 0.306,-0.073 0.298,0.009 0.469,0.167 0.196,0.205 0.003,0.057 -0.101,0.117 -0.148,0.381 -0.108,0.137 0.092,0.103 0.235,0.158 0.175,0.058 0.23,-0.051 0.246,0.067 0.828,0.89 -0.034,0.458 -0.125,0.352 0.049,0.395 0.003,0.485 -0.449,0.134 -1.49,-0.227 -0.852,-0.347 -0.044,-0.106 0.241,-0.23 -0.214,-0.018 -0.248,0.091 -0.104,0.086 0.286,0.366 0.783,0.322 0.35,0.387 0.384,0.033 0.117,0.07 0.212,0.226 -0.063,0.078 -0.391,0.027 -0.309,0.262 0.194,0.153 0.696,0.134 0.499,0.034 0.25,0.15 -0.206,0.167 -0.585,0.196 -0.017,0.292 0.434,0.116 0.386,-0.07 0.158,0.029 0.113,0.703 0.065,0.146 -0.415,0.124 -0.002,0.134 0.276,0.11 0.458,0.091 0.151,0.126 0.031,0.208 0.094,0.111 0.263,0.02 0.29,-0.259 0.17,-0.218 0.249,0.082 0.019,0.272 0.296,0.31 0.108,0.051 0.085,0.437 0.242,-0.389 0.177,0.083 0.201,0.019 -0.069,0.376 -0.12,0.296 0.158,0.185 0.123,0.274 0.326,0.376 -0.089,0.18 -0.384,0.385 -0.203,0.607 -0.048,0.21 -0.197,0.348 -0.271,0.336 0.17,-0.036 0.605,-0.62 0.36,-0.208 0.792,-0.113 0.191,-0.174 0.29,-0.072 0.178,0.199 0.018,0.358 0.234,0.112 0.247,-0.118 0.224,0.105 -0.134,0.225 -0.718,0.917 -0.209,0.367 -0.06,0.259 0.247,-0.355 0.902,-0.822 0.097,-0.124 0.196,-0.353 0.181,-0.231 0.486,0.082 0.25,0.166 0.116,0.462 0.197,0.502 0.296,0.555 0.787,0.269 0.286,0.043 0.492,-0.187 0.078,-0.259 0.384,-0.08 0.27,0.032 0.093,0.499 0.288,0.264 0.286,0.218 0.276,0.113 0.403,0.049 0.221,0.239 0,0.099 -0.227,0.255 -0.219,0.371 -0.382,0.259 -0.533,0.012 -0.736,0.162 -0.03,0.146 -0.162,0.161 -0.391,0.159 -0.213,0.121 -0.346,0.598 -0.21,0.255 -0.242,0.048 -0.341,-0.024 -0.223,0.054 -0.164,0.109 -0.096,0.162 -0.074,0.061 -0.456,0.164 -0.829,0.451 -0.438,0.014 -0.271,-0.052 -0.207,0.037 -0.141,0.126 -0.396,0.219 -0.119,0.133 -0.07,0.153 -0.054,0.315 -0.047,0.114 -0.077,0.066 -0.333,-0.065 -0.371,-0.205 0.073,0.217 0.587,0.365 0.168,0.203 -0.16,0.175 -0.374,0.274 -0.043,0.147 0.153,0.078 -0.061,0.124 -0.205,0.132 0.023,0.054 0.022,0.053 0.508,-0.189 0.453,-0.404 0.295,-0.41 0.148,-0.115 0.583,-0.152 0.345,-0.179 0.494,-0.326 0.541,-0.474 0.589,-0.623 0.75,-0.488 0.913,-0.352 0.67,-0.18 0.427,-0.008 0.021,-0.059 -0.383,-0.111 -0.316,-0.021 -0.393,0.081 -0.122,-0.191 0.013,-0.083 0.129,-0.142 0.331,-0.127 1.62,0.177 0.558,0.136 0.61,1.137 0.14,0.364 0.04,0.265 -0.062,0.166 -0.244,0.196 -0.689,0.389 -0.097,0.103 -0.009,0.054 0.301,0.079 0.095,0.107 0.153,0.431 0.31,-0.28 0.587,-0.68 0.48,-0.316 0.405,-0.086 0.484,-0.042 0.167,0.006 0.058,0.221 0.254,0.443 0.235,0.115 0.449,0.059 0.404,0.548 0.154,0.377 0.146,0.22 -0.012,0.148 0.024,0.124 0.106,0.188 0.053,0.158 -0.029,0.361 -0.236,0.625 0.175,0.566 -0.079,0.255 -0.041,0.406 0.151,0.271 0.045,0.157 -0.128,0.092 -0.894,0.224 -0.352,0.004 -0.091,0.135 0.271,0.04 0.493,-0.007 0.596,0.137 0.263,0.152 0.113,0.213 -0.029,0.169 -0.171,0.125 -0.335,-0.024 -0.323,-0.114 0.02,0.111 0.479,0.275 0.141,0.14 0.259,0.175 0.051,0.235 -0.063,0.239 -0.904,0.949 -0.744,0.6 -0.747,0.524 -1.199,1.006 -0.119,0.049 -0.217,0.019 -0.571,-0.16 -0.456,0.041 -0.864,0.194 -0.236,0.119 -0.474,0.347 -0.188,0.049 -0.508,0.071 -0.482,-0.048 -0.191,0.048 -0.232,0.17 -0.061,0.09 -0.064,0.292 -1.171,1.302 -0.31,0.44 -0.597,0.462 -0.656,0.808 -0.571,0.325 -0.199,0.447 -0.544,0.271 -1.005,0.069 -0.477,0.077 -0.559,-0.125 -0.418,0.194 -0.63,0.061 -0.306,-0.046 -1.221,0.428 -0.31,-0.406 -0.236,-0.157 -0.689,-0.026 -0.552,-0.168 -0.503,-0.032 -0.49,-0.075 -0.322,10e-4 -0.335,0.044 -0.521,-0.011 -0.289,0.224 -0.977,-0.068 -0.412,-0.203 -0.338,-0.042 -0.454,0.045 -0.434,0.151 -0.95,-0.173 -1.007,0.146 -0.879,-0.098 -0.246,-0.097 -1.386,0.267 -0.542,-0.153 -0.478,0.408 -0.328,-0.085 -0.355,0.06 -0.111,-0.076 -0.237,0.054 -0.153,0.222 -0.201,0.025 -0.334,0.392 -0.562,0.313 -0.823,1.699 -0.077,0.649 -0.309,0.441 -0.273,0.06 -0.225,0.01 -1.423,0.324 -0.633,0.256 0.172,0.203 -0.208,0.151 -0.336,0.063 -0.363,0.186 -0.236,0.208 -0.116,0.289 -0.729,0.471 -0.847,1.083 -0.405,0.79 -0.492,0.571 -0.347,0.217 -0.247,0.034 -0.252,-0.068 -0.419,-0.267 -0.308,-0.03 -0.767,-0.373 -1.781,-0.375 0.269,0.14 0.235,0.231 0.471,0.06 0.478,-0.005 0.997,0.466 0.489,0.159 0.297,0.14 0.254,0.311 -0.182,0.609 -0.184,0.502 -0.25,0.384 -0.858,0.983 -0.416,0.329 -0.723,1.17 -0.749,0.547 -0.401,0.335 -0.427,0.528 -1.002,0.398 -0.372,0.101 -0.343,-0.054 -0.417,0.323 -0.495,0.198 -0.146,0.3 -1.188,0.802 -0.456,0.101 -0.388,0.213 -0.115,0.361 -0.347,0.218 -0.096,0.167 -0.292,0.503 -0.542,0.648 -0.66,0.109 -0.241,0.225 -0.279,0.363 -0.395,0.249 -0.778,-0.117 0.189,0.152 0.696,0.237 0.072,0.352 -0.349,0.084 -0.73,0.467 -0.983,0.805 z m -71.844,-141.177 -0.036,0.068 -0.606,-0.313 -0.234,-0.185 -0.076,-0.137 -0.054,-0.279 -0.032,-0.422 0.121,-0.204 0.273,0.015 0.292,0.162 0.443,0.463 -0.126,0.137 -0.006,0.303 0.05,0.286 -0.009,0.106 z m 37.593,3.183 0.321,0.066 0.302,-0.081 0.22,0.077 0.139,0.234 0.091,0.243 0.044,0.251 -0.119,0.178 -0.496,0.155 -0.338,-0.077 -0.362,-0.208 -0.168,0.092 -0.413,-0.151 -0.205,-0.208 -0.167,-0.297 0,-0.182 0.435,-0.206 0.171,-0.161 0.545,0.275 z m -29.542,3.836 0.086,0.096 0.163,-0.082 0.126,-0.263 0.077,-0.05 0.119,0.05 0.392,0.471 0.301,0.493 0.319,0.35 0.507,0.311 1.107,1.01 0.326,0.68 0.344,1.052 0.308,0.798 0.271,0.549 0.291,0.436 0.465,0.486 0.416,-0.354 0.178,-0.09 0.153,0.147 0.145,0.366 -0.077,0.163 -0.181,0.207 -0.298,0.241 -0.417,0.018 -0.2,0.07 -0.327,0.382 -0.26,0.456 -0.363,0.153 -0.684,0.763 -0.376,0.284 -0.554,0.076 -1.149,-0.596 -0.716,0.083 -0.585,-0.122 -0.653,-0.631 -0.507,-0.358 -0.981,-0.517 -0.064,-0.077 -0.042,-0.175 -0.02,-0.273 -0.044,-0.184 -0.069,-0.093 -0.154,0.008 -0.158,0.181 -0.303,0.156 -0.461,-0.035 -0.2,-0.108 -0.153,-0.17 -0.083,-0.2 -0.013,-0.229 -0.042,-0.177 -0.072,-0.125 -0.167,-0.003 -0.262,0.119 -0.103,0.146 0.058,0.174 -0.048,0.103 -0.458,0.001 -0.18,-0.102 -0.345,-0.322 -0.151,-0.327 -0.194,-0.583 0.019,-0.158 0.124,-0.356 0.161,-0.249 1.04,-0.146 0.486,-0.141 0.529,-0.407 0.618,-0.706 0.134,-0.21 0.016,-0.154 -0.045,-0.167 -0.193,-0.409 -0.065,-0.28 0.062,-0.133 0.248,-0.012 -0.13,-0.159 -0.111,-0.225 -0.039,-0.141 0.006,-0.225 0.197,-0.049 0.243,0.112 0.469,0.646 0.187,0.125 0.321,0.098 -0.341,-0.444 -0.354,-0.938 -0.044,-0.325 0.009,-0.181 0.093,-0.508 0.083,-0.208 0.107,-0.137 0.336,-0.293 0.539,-0.205 0.275,-0.027 0.279,0.166 0.244,0.318 0.542,0.517 0.081,0.211 -0.009,0.098 -0.209,0.141 -0.026,0.129 0.08,0.199 z m 50.541,-1.174 0.113,0.465 0.071,0.146 -0.105,0.22 -0.422,0.438 -0.923,0.178 -0.465,-0.207 0.214,0.627 0.046,0.263 -0.065,0.111 -0.194,-0.033 -0.321,-0.177 -0.185,-0.212 -0.048,-0.247 -0.067,-0.055 -0.087,0.138 -0.084,-0.031 -0.191,-0.369 -0.141,-0.138 -0.927,-0.22 -0.046,-0.099 0.048,-0.171 0.143,-0.244 0.208,-0.082 0.524,0.109 0.042,-0.063 0.035,-0.307 0.039,-0.121 0.363,0.031 0.228,-0.066 0.126,0.158 0.124,0.367 0.176,-0.067 0.255,0.053 0.284,-0.134 0.435,-0.326 0.339,-0.121 0.458,0.186 z m 3.934,0.591 0.144,0.404 0.024,0.209 -0.199,0.246 -0.75,0.455 -0.457,0.395 -0.231,0.088 -0.308,-0.088 -0.374,0.183 -0.148,-0.024 0.166,-0.323 0.591,-0.93 0.496,-0.095 0.162,-0.195 0.137,0.063 0.079,-0.162 0.014,-0.24 0.173,-0.184 0.156,0.002 0.325,0.196 z m 28.386,1.402 -0.072,0.048 -0.735,-0.365 -0.054,-0.292 0.36,-0.325 0.292,-0.175 0.225,-0.025 0.224,0.055 0.209,0.351 -0.253,0.32 -0.196,0.408 z m -199.621002,-0.289 -0.231,0.301 -0.369,-0.314 -0.096,-0.156 0.426,-0.417 0.188,0.016 0.396,0.248 0.148,0.219 -0.462,0.103 z m 122.165002,0.026 0.373,0.538 -0.003,0.261 -0.048,0.434 -0.107,0.329 -0.165,0.226 -0.231,0.113 -0.297,0.001 -0.128,-0.094 0.096,-0.334 0.072,-0.099 0.012,-0.295 -0.048,-0.49 -0.06,-0.302 -0.167,-0.173 -0.12,-0.007 -0.033,0.16 0.055,0.327 -0.038,0.422 -0.13,0.517 -0.099,0.243 -0.176,-0.123 -0.083,-0.197 0.022,-0.325 -0.047,-0.295 0.044,-0.313 0.12,-0.467 0.169,-0.313 0.219,-0.159 0.256,0.011 0.292,0.181 0.25,0.223 z m -15.88,1.413 -0.229,0.068 -0.042,-0.017 0.02,-0.217 -0.017,-0.109 -0.062,-0.078 0.202,-0.173 0.029,-0.135 -0.064,-0.104 -0.276,-0.197 -0.079,-0.179 0.015,-0.157 0.108,-0.135 0.191,0.021 0.411,0.263 0.188,0.363 0.086,0.269 -0.136,0.04 -0.107,0.108 -0.112,0.229 -0.126,0.14 z m 67.851,2.007 -0.354,0.091 -0.262,-0.047 -0.17,-0.186 -0.13,-0.252 -0.161,-0.636 0.06,-0.297 0.019,-0.534 0.029,-0.201 0.063,-0.1 0.368,-0.189 0.22,0.021 0.323,0.205 0.697,0.062 0.173,0.188 0.042,0.114 -0.003,0.14 -0.049,0.166 -0.345,0.483 -0.166,0.332 -0.118,0.396 -0.236,0.244 z m -37.058,-2.183 0.063,0.494 -0.252,0.668 -0.079,0.12 -0.098,0.044 -0.095,-0.082 -0.283,-0.524 -0.077,-0.328 0.104,-0.164 0.219,-0.205 0.155,-0.1 0.194,0.086 0.068,-0.145 0.081,0.136 z m 30.841,4.516 -0.194,0.052 -0.229,-0.147 -0.082,-0.252 -0.043,-0.256 0.041,-0.132 0.103,-0.125 0.139,-0.285 0.176,-0.446 0.274,-0.3 0.602,-0.278 0.085,-0.099 0.269,-0.787 0.091,-0.135 0.308,-0.08 0.033,-0.102 -0.109,-0.195 0,-0.201 0.109,-0.208 0.15,-0.154 0.389,-0.151 0.352,0.028 0.09,0.058 0.079,0.139 0.108,0.371 0.014,0.084 -0.163,0.327 -0.427,0.502 -0.264,0.419 -0.053,0.137 -0.024,0.176 -0.099,0.214 -0.308,0.513 -0.208,0.494 -0.206,0.271 -0.564,0.255 -0.439,0.293 z m -31.663,-2.944 -0.23,0.092 -0.144,-0.328 -0.117,-0.068 -0.052,-0.219 -0.241,-0.043 0.017,-0.345 0.065,-0.169 0.224,-0.134 0.177,0.051 0.168,0.343 0.082,0.271 0.071,0.347 -0.02,0.202 z m -26.667,1.633 -0.066,0.466 -0.346,-0.125 -0.153,-0.168 -0.13,-0.383 -0.015,-0.097 0.029,-0.147 0.141,-0.334 0.095,-0.122 0.226,0.142 0.105,0.196 0.083,0.31 0.031,0.262 z m -0.625,1.612 -0.089,0.246 -0.11,0.069 -0.218,0.288 -0.089,0.039 -0.127,-0.183 -0.107,-0.299 -0.045,-0.047 -0.068,0.012 -0.147,0.19 -0.065,-0.003 -0.054,-0.128 -0.026,-0.255 0.002,-0.384 0.069,-0.593 0.004,-0.216 -0.037,-0.165 0.031,-0.15 0.099,-0.136 0.127,-0.064 0.298,0.054 0.236,0.239 0.115,0.312 0.23,0.246 0.08,0.173 -0.109,0.755 z m -4.571,1.701 -0.116,0.01 -0.161,-0.138 -0.903,-0.468 -0.118,-0.142 0.106,-0.197 0.329,-0.254 0.222,-0.26 0.171,-0.398 0.519,0.205 0.194,0.188 0.074,0.164 0.032,0.227 -0.029,0.556 -0.175,0.118 -0.145,0.389 z m 75.677,1.815 -0.22,0.049 -0.318,-0.471 -0.667,-0.537 -0.253,-0.39 -0.009,-0.189 0.02,-0.297 0.073,-0.363 0.232,-0.398 0.246,-0.064 0.351,0.088 0.255,0.286 0.278,0.791 0.185,0.385 0.058,0.279 -0.092,0.131 0.008,0.129 0.042,0.08 -0.016,0.146 -0.074,0.214 -0.099,0.131 z m -83.239,-0.435 -0.155,0.028 -0.291,-0.122 -0.426,-0.272 -0.32,-0.289 -0.214,-0.305 -0.027,-0.21 0.161,-0.117 0.244,-0.058 0.581,0.039 0.276,0.116 0.365,0.444 0.077,0.251 0.012,0.162 -0.047,0.14 -0.236,0.193 z m 71.728,1.616 -0.229,0.083 -0.309,-0.401 -0.002,-0.223 0.06,-0.537 0.564,-0.135 0.235,0.324 0.113,0.319 -0.432,0.57 z m 9.28,-0.982 1.465,0.67 0.143,0.243 0.07,0.217 0.041,0.241 0.003,0.495 -0.03,0.198 -0.143,0.478 -0.01,0.149 0.115,1.591 -0.012,0.862 -0.103,0.716 -0.21,0.573 -0.316,0.429 -0.24,0.246 -1.066,0.604 -0.755,0.156 -0.796,0.028 -1.014,0.162 -0.463,-0.034 -0.239,-0.071 -0.17,-0.121 -0.199,-0.382 -0.228,-0.646 -0.188,-0.73 -0.225,-1.302 -0.004,-0.155 0.217,-1.068 0.288,-0.723 0.508,-1.078 0.574,-1.057 0.146,-0.175 0.259,-0.186 0.649,-0.302 0.538,0.076 0.237,-0.038 0.296,-0.141 0.326,-0.034 0.536,0.109 z m -30.646,4.396 -0.12,0.008 -0.19,-0.113 -0.436,-0.448 -0.088,-0.194 -0.044,-0.227 0,-0.26 0.039,-0.27 0.133,-0.54 -0.254,-0.43 -0.062,-0.245 0.03,-0.139 0.142,-0.333 0.039,-0.208 0.143,-0.296 0.37,-0.575 0.371,0.136 0.331,0.471 0.086,0.318 -0.026,0.337 0.029,0.487 0.083,0.637 0.022,0.46 -0.04,0.286 -0.142,0.535 -0.12,0.248 -0.158,0.232 -0.138,0.123 z m -63.785,-1.897 -0.105,0.024 -0.385,-0.445 0.081,-0.383 0.357,0.392 0.051,0.244 0.001,0.168 z m 100.196,1.542 -1.368,0.01 -0.744,-0.053 -0.299,-0.113 -0.26,-0.176 -0.295,-0.572 -0.189,-0.592 -0.009,-0.252 0.05,-0.227 0.07,-0.138 0.918,-0.198 0.752,0.247 0.647,0.29 0.833,0.049 0.253,0.11 0.097,0.081 0.067,0.149 0.095,0.681 0.009,0.362 -0.025,0.274 -0.602,0.068 z m -99.756,-1.478 0.316,0.079 0.234,-0.059 0.171,0.301 0.066,0.305 -0.022,0.104 -0.074,0.042 -0.494,-0.337 -0.184,-0.207 -0.062,-0.174 0.049,-0.054 z m 3.555,4.288 -0.141,0.609 -0.054,-0.057 -0.097,-0.291 -0.195,-0.14 -0.221,-0.324 0.003,-0.698 0.085,-0.318 -0.019,-0.445 0.22,-0.268 0.163,0.315 0.045,0.535 -0.041,0.263 0.162,0.272 0.075,0.069 0.04,0.218 -0.025,0.26 z m 126.905,2.503 -0.348,0.198 -0.186,-0.243 0.131,-0.068 0.191,-0.292 0.26,-0.257 0.109,-0.207 0.437,-0.095 0.149,0.011 0.057,0.074 -0.248,0.318 -0.552,0.561 z m -127.446,0.368 0.354,0.057 0.452,-0.009 -0.078,0.553 -0.173,0.354 -0.137,0.1 -0.06,-0.193 -0.266,-0.443 -0.092,-0.419 z m 70.076,5.108 0.28,0.085 0.212,-0.009 0.047,0.102 -0.223,0.339 -0.137,0.064 -0.247,-0.243 -0.186,-0.298 -0.052,-0.181 -0.015,-0.199 0.043,-0.035 0.278,0.375 z m -1.691,3.356 0.36,0.268 0.36,0.152 0.579,0.082 0.083,0.056 0,0.126 -0.083,0.195 -0.193,0.25 -0.138,0.007 -0.32,-0.176 -0.117,-0.09 -0.129,-0.201 -0.065,-0.019 -0.084,0.067 -0.022,0.088 0.039,0.11 -0.053,0.031 -0.388,-0.076 -0.061,-0.064 0.031,-0.216 0.27,-0.315 -0.237,-0.097 -0.076,-0.117 -0.352,0.198 -0.195,0.048 -0.308,-0.139 -0.033,-0.723 -0.037,-0.265 -0.14,-0.18 -0.083,-0.19 -0.135,-0.144 -0.278,-0.146 -0.226,-0.363 -0.047,-0.165 0.031,-0.125 0.138,-0.171 0.799,0.368 0.482,0.348 0.459,0.425 0.24,0.314 0.021,0.204 -0.06,0.203 -0.141,0.203 0.109,0.239 z m -2.663,1.51 -0.146,0.076 -0.157,-0.043 -0.133,-0.196 -0.108,-0.35 -0.175,-0.263 -0.395,-0.328 -0.068,-0.129 -0.112,-0.442 -0.022,-0.442 -0.084,-0.401 -0.004,-0.198 0.073,-0.296 0.332,-0.07 0.26,0.117 0.053,0.079 0.085,0.172 0.056,0.21 0.315,0.567 0.184,0.45 0.25,0.926 0.001,0.176 -0.067,0.187 -0.138,0.198 z m -0.687,2.115 0.097,0.081 0.121,-0.046 0.199,-0.331 0.446,-0.956 0.125,-0.09 0.188,0.015 0.659,0.615 0.242,0.342 0.131,0.475 0.136,0.185 0.519,0.245 0.499,0.082 0.65,0.248 0.235,0.186 0.519,0.903 0.06,0.055 0.59,0.367 0.906,0.816 0.229,0.121 0.882,0.268 0.316,0.2 0.306,0.304 0.34,0.555 0.398,0.869 0.312,1.38 0.024,0.271 -0.038,0.161 -0.113,0.171 -0.51,0.562 0.043,0.095 0.48,-0.035 1.068,-0.345 0.65,0.248 0.226,0.039 0.052,-0.014 0.235,-0.431 0.259,0.067 0.378,0.418 0.244,0.337 0.108,0.256 -0.029,0.145 -0.25,0.05 0.611,0.245 0.531,0.388 -0.114,0.252 -0.567,0.56 -0.583,0.488 -0.679,0.73 -0.169,0.111 -0.091,0.006 -0.375,-0.136 -0.539,-0.345 -1.661,-0.796 -0.513,-0.169 -0.651,-0.099 -0.094,-0.188 -0.155,-1.21 -0.293,-0.215 -1.005,-0.254 -0.292,-0.146 -0.014,-0.245 0.063,-0.421 -0.138,-0.206 -0.338,0.009 -0.332,0.087 -0.534,0.286 -0.251,0.264 -0.094,0.286 -0.059,0.61 -0.066,0.288 -0.187,0.377 -0.825,0.972 -0.335,0.292 -0.333,0.083 -0.132,0.093 -0.224,0.357 -0.333,0.872 -0.136,0.25 -0.22,0.254 -0.456,0.388 -0.466,0.31 -0.776,0.359 -0.434,0.122 -0.289,-0.121 -0.198,-0.819 -0.416,-2.429 -0.069,-0.165 -0.084,-0.103 -0.101,-0.04 -1.395,0.315 -0.769,-0.035 -0.761,0.549 -0.192,0.04 -0.386,-0.018 -0.278,-0.087 -0.071,-0.06 -0.047,-0.237 0.014,-0.25 0.097,-0.27 0.344,-0.732 0.28,-0.454 0.129,-0.141 1.303,-0.817 0.317,-0.27 0.159,-0.277 0,-0.285 -0.062,-0.366 -0.226,-0.895 -0.057,-0.822 0.002,-0.41 0.085,-0.631 0.326,-1.54 0.11,-0.754 0.208,-2.721 0.111,-0.787 0.162,-0.722 0.155,-0.435 0.415,-0.873 0.322,-0.351 0.405,-0.244 0.089,0.028 0.077,0.102 0.149,0.371 0.565,0.343 0.182,0.332 0.128,0.368 0.07,0.478 -0.07,0.208 -0.269,0.314 -0.046,0.132 0.008,0.108 0.516,0.492 0.385,1.188 z m 20.424,8.304 -0.202,0.295 -0.603,-0.104 -0.082,-0.09 -0.022,-0.108 0.097,-0.14 0.619,-0.133 0.263,-0.01 0.134,0.044 0.016,0.053 -0.22,0.193 z m 2.707,3.781 -0.296,0.062 -0.389,-0.14 -0.38,-0.272 -0.863,-0.871 0.648,-0.591 1.039,0.685 0.312,0.44 -0.071,0.687 z m -3.365,-0.48 0.237,0.268 0.248,-0.019 0.137,0.218 0.327,0.68 0.031,0.113 -0.015,0.22 -0.172,0.281 -0.179,0.148 -0.375,0.217 -0.424,0.094 -0.23,-0.152 -0.65,-0.627 -0.597,-0.736 -0.191,-0.412 0.083,-0.171 0.253,-0.119 0.512,-0.123 0.845,0.067 0.16,0.053 z m -11.574,3.211 0.112,0.172 0.034,0.26 -0.044,0.346 -0.072,0.315 -0.1,0.283 -0.247,0.476 -0.77,0.811 -0.289,0.439 -0.217,0.263 -1.256,1.166 -0.156,0.057 -0.164,-0.022 -0.344,-0.173 -0.349,-0.031 -0.904,0.468 -0.044,-0.08 -0.04,-0.503 -0.091,-0.279 -0.399,-0.597 -0.026,-0.14 0.005,-0.174 0.032,-0.135 0.45,-0.561 1.018,-2.057 0.244,-0.102 0.501,0.23 0.238,0.074 0.17,-0.011 0.728,-0.435 0.692,0.052 0.631,-0.255 0.296,-0.001 0.229,0.044 0.132,0.1 z m 32.733,2.482 -0.194,0.024 -0.379,-0.046 -0.407,-0.126 -0.223,-0.144 -0.201,-0.313 -0.039,-0.343 -0.378,-0.511 -0.423,-0.172 -0.233,-0.356 0.239,-0.025 0.34,0.078 0.503,0.155 0.45,0.203 0.65,0.449 0.212,0.415 0.211,0.304 0.064,0.23 -0.056,0.101 -0.136,0.077 z m -10.281,-0.424 -0.149,0.053 -0.561,-0.075 -0.69,-0.286 -0.356,-0.269 0.018,-0.083 0.157,-0.043 0.178,0.042 0.298,0.188 0.802,0.095 0.258,0.108 0.081,0.162 -0.036,0.108 z m 25.754,0.363 0.539,0.065 0.327,-0.023 0.141,0.096 0.132,0.295 -0.169,0.421 -0.191,0.161 -0.312,0.047 -0.505,-0.137 -0.179,-0.09 -0.155,-0.226 0.072,-0.162 0.25,-0.056 0.042,-0.065 -0.064,-0.125 0.003,-0.109 0.069,-0.092 z m -41.315,0.892 0.222,0.165 0.365,0.548 0.139,0.277 0.041,0.371 -0.097,0.495 -0.049,0.463 -0.136,0.348 -0.252,0.439 -0.224,0.511 -0.195,0.583 -0.161,0.385 -0.128,0.188 -0.138,0.098 -0.148,0.007 -0.225,-0.209 -0.303,-0.428 -0.247,-0.262 -0.317,-0.18 -0.169,-0.243 -0.031,-0.24 -0.011,-0.78 0.014,-0.389 0.042,-0.326 0.071,-0.262 0.158,-0.361 0.44,-0.784 0.266,-0.301 0.165,-0.07 0.437,0.057 0.177,-0.02 0.146,-0.09 0.148,0.01 z m 40.735,3.195 0.063,0.052 0.076,-0.062 0.058,0.053 0.039,0.168 0.064,0.116 0.164,0.152 0.055,0.108 -0.004,0.109 -0.139,0.167 -0.087,0.004 -0.669,-0.386 -0.18,-0.394 -0.015,-0.2 0.07,-0.183 0.103,-0.088 0.136,0.006 0.161,0.097 0.105,0.281 z m -78.619,0.208 -0.115,0.014 -0.257,-0.303 -0.057,-0.154 0.339,-0.098 0.232,0.27 -0.02,0.132 -0.122,0.139 z m 79.175,2.817 -0.068,0.068 -0.064,-0.016 -0.209,-0.312 -0.281,-0.126 -0.104,-0.123 -0.849,-0.646 -0.092,-0.283 -0.015,-0.227 0.282,-0.111 0.566,-0.103 0.492,0.003 0.462,0.135 0.094,0.145 0.243,0.263 -0.06,0.316 -0.015,0.398 -0.101,0.194 -0.155,0.147 -0.126,0.278 z m -38.446,3.69 -0.385,0.067 -0.001,-0.083 0.161,-0.235 0.596,-0.206 0.443,-0.061 -0.104,0.2 -0.263,0.158 -0.447,0.16 z m 28.9,2.773 -0.253,0.045 -0.115,-0.12 -0.007,-0.343 0.083,-0.26 0.291,-0.539 0.261,-0.605 0.152,-0.147 0.307,0.1 0.179,0.174 0.187,0.291 0.081,0.223 -0.071,0.329 -0.219,0.293 -0.253,0.2 -0.623,0.359 z m 10.74,-0.713 -0.098,0.392 -0.326,-0.144 -0.505,-0.296 -0.199,-0.197 -0.07,-0.216 -0.007,-0.299 0.151,-0.049 0.382,-0.028 0.319,0.416 0.092,0.064 0.261,0.357 z m -43.942,3.348 -0.289,0.039 0.126,-0.331 0.108,-0.16 0.119,-0.102 0.24,-0.038 0.16,0.133 -0.143,0.241 -0.321,0.218 z m -0.62,0.815 -0.09,0.017 -0.021,-0.067 0.072,-0.227 0.119,-0.027 0.131,-0.253 0.12,0.088 -0.044,0.141 -0.162,0.214 -0.125,0.114 z m 31.223,3.207 -0.17,0.395 -0.227,-0.049 -0.082,0.082 -0.062,0.004 0.103,-0.371 0.014,-0.25 -0.052,-0.253 0.075,-0.129 0.303,-0.007 0.003,0.291 0.037,0.109 0.071,0.05 -0.013,0.128 z m -29.627,8.125 -0.044,0.042 -0.121,-0.037 -0.047,0.343 -0.046,0.032 -0.083,-0.211 0.063,-0.181 -0.009,-0.125 0.023,-0.092 0.121,-0.206 0.071,-0.048 0.045,0.018 0.037,0.259 -0.01,0.206 z m 50.441,-0.204 0.236,0.154 0.062,0.567 -0.443,-0.033 -0.506,-0.38 -0.1,-0.277 0.011,-0.048 0.067,-0.048 0.128,0.066 0.125,-0.1 0.125,-0.032 0.295,0.131 z m -50.863,4.029 -0.077,0.089 -0.138,-0.101 -0.006,-0.257 0.133,-0.196 0.105,0.009 0.095,0.104 -0.023,0.139 -0.089,0.213 z m 0.979,0.602 -0.099,0.065 -0.067,-0.005 0.075,-0.452 -0.087,-0.161 -0.005,-0.082 0.038,-0.075 0.048,-0.016 0.117,0.14 0.057,0.146 0.025,0.145 -0.007,0.143 -0.033,0.098 -0.062,0.054 z m 1.635,1.98 -0.231,0.509 -0.185,0.488 -0.257,0.915 -0.147,0.033 -0.128,-0.22 0.369,-1.072 0.017,-0.12 -0.017,-0.103 -0.112,-0.159 -0.111,0.183 -0.521,1.209 -0.135,0.193 -0.111,0.107 -0.089,0.021 -0.222,-0.025 -0.446,0.344 0.75,-1.433 0.008,-0.109 -0.14,-0.067 -0.056,0.037 -0.608,0.904 -0.347,0.347 -0.232,-0.105 -0.059,-0.095 0.021,-0.105 0.591,-0.913 0.544,-0.656 0.228,-0.414 0.092,-0.391 0.041,-0.287 -0.003,-0.315 0.028,-0.087 0.031,0.016 0.035,0.119 0.009,0.333 -0.124,0.681 -0.1,0.334 -0.119,0.275 0.05,0.06 0.219,-0.156 0.185,-0.33 0.149,-0.504 0.096,-0.439 0.092,-0.697 0.031,0.024 0.043,0.139 0.099,0.099 0.155,0.058 0.088,0.089 0.065,0.234 0.063,0.103 0.232,0.087 0.089,0.074 0.064,0.254 -0.006,0.134 0.032,0.086 0.069,0.038 -0.079,0.275 z m -2.924,0.298 -0.144,0.038 -0.169,-0.073 0.088,-0.371 0.147,-0.154 0.366,-0.154 0.063,-0.095 0.117,-0.047 0.172,0 0.191,-0.139 0.211,-0.278 0.073,-0.038 -0.148,0.404 -0.156,0.302 -0.811,0.605 z m 3.23,0.31 -0.143,0.069 -0.103,-0.007 0.019,-0.168 0.141,-0.331 0.08,-0.291 0.019,-0.252 0.062,-0.22 0.105,-0.189 0.105,-0.094 0.157,0.003 0.032,0.613 -0.044,0.287 -0.105,0.24 -0.144,0.193 -0.181,0.147 z m 50.046,0.532 0.033,0.122 -0.433,-0.087 -0.152,-0.077 -0.013,-0.081 0.021,-0.126 0.086,-0.147 0.198,-0.113 0.108,0.058 0.23,0.153 0.031,0.092 -0.109,0.206 z m -195.278,6.263 0.23,-0.313 0.507,-0.544 0.276,-0.39 0.029,0.385 -0.409,0.645 -0.522,0.32 -0.111,-0.103 z m -0.988,1.405 -0.064,0.006 -0.025,-0.101 0.016,-0.208 0.089,-0.353 0.042,-0.082 0.364,0.063 0.054,0.024 0.013,0.068 -0.028,0.111 -0.117,0.159 -0.344,0.313 z m -4.851,1.688 0.257,0.281 0.617,-0.179 0.115,0.035 0.117,0.107 0.128,0.229 0.14,0.349 0.031,0.38 -0.056,0.136 -0.111,0.15 -0.983,0.602 -0.026,0.058 0.02,0.054 0.091,0.058 0.197,-0.008 0.779,-0.149 0.042,-0.104 0.055,-0.474 0.107,-0.252 0.009,-0.19 -0.071,-0.455 0.004,-0.183 0.543,-0.037 0.34,-0.169 0.347,-0.314 0.079,0.009 -0.05,0.566 -0.048,0.173 -0.333,0.688 -0.191,0.604 -0.093,0.596 -0.016,0.982 -0.083,0.331 -0.151,0.204 -0.943,0.355 -0.486,-0.023 -0.433,-0.323 -0.204,-0.221 0.154,-0.269 0.106,-0.013 0.305,0.053 0.235,0.101 0.105,0.004 -0.018,-0.063 -0.67,-0.508 -0.491,-0.231 -0.148,-0.259 -0.004,-0.201 -0.039,-0.112 -0.39,-0.705 -0.076,-0.279 -0.051,-0.396 0,-0.406 0.095,-0.661 0.043,-0.071 0.16,0.005 0.276,0.082 0.668,0.063 z m 6.79,0.805 -0.086,0.171 -0.198,0.268 -0.131,0.106 -0.064,-0.055 -0.177,-0.029 -0.189,-0.267 -0.147,-0.106 -0.098,-0.006 -0.048,0.097 -0.012,0.129 0.023,0.161 -0.016,0.074 -0.056,-0.014 -0.056,-0.076 -0.055,-0.137 -0.012,-0.139 0.033,-0.142 0.137,-0.19 0.428,-0.395 0.131,-0.071 0.142,0.016 0.229,0.185 0.049,0.054 0.173,0.366 z m 1.088,3.728 -0.056,0.016 -0.185,-0.057 -0.609,-0.791 -0.433,-0.29 -0.295,-0.393 -0.3,-0.251 0.184,-0.41 0.16,0.051 0.561,0.333 0.448,0.323 0.254,0.21 0.533,0.898 -0.04,0.128 -0.222,0.233 z m 140.073,-0.637 -0.003,0.14 -0.182,-0.027 -0.099,-0.08 -0.08,-0.126 -0.018,-0.095 0.068,-0.094 0.211,0.057 0.103,0.225 z m -138.162,0.87 -0.016,0.033 -0.291,0 -0.081,-0.048 -0.051,-0.098 -0.021,-0.148 0.047,-0.179 0.172,-0.342 0.005,-0.146 0.036,-0.063 0.121,0.172 0.051,0.16 0.028,0.659 z m 1.727,0.829 0.128,1.477 -0.009,0.471 -0.188,0.307 -0.133,0.513 -0.154,0.23 -0.146,-0.306 -0.013,-0.51 -0.039,-0.406 -0.047,-0.195 0.056,-0.762 -0.065,0.056 -0.173,0.334 -0.192,0.023 -0.345,-0.379 -0.174,-0.308 -0.028,-0.322 -0.228,-0.339 -0.023,-0.12 0.019,-0.126 0.187,-0.339 0.076,-0.229 0.066,-0.471 0.076,-0.184 0.177,0.026 0.316,0.214 0.329,0.232 0.302,0.31 0.225,0.803 z m -8.984,-1.192 0.285,0.433 0.084,0.386 -0.035,0.455 -0.451,0.172 -0.237,-0.137 -0.103,0.025 -0.156,0.136 0.189,0.061 0.265,0.222 0.232,0.289 0.327,0.052 0.436,0.201 -0.33,0.362 -0.05,0.208 0.412,0.574 0.039,0.144 0.132,0.029 0.307,-0.046 0.039,0.045 0,0.119 -0.188,0.333 0.02,0.066 0.17,0.053 0.327,0.002 0.074,0.33 -0.296,0.299 -0.562,-0.385 -0.25,-0.385 -0.143,-0.357 -0.173,-0.202 -0.522,-0.449 -0.793,-0.974 -0.205,-0.141 -0.206,-0.387 -0.06,-0.187 0.005,-0.125 0.08,-0.066 0.237,-0.044 0.003,-0.194 -0.912,-0.338 -0.102,-0.069 -0.118,-0.236 0.063,-0.035 0.502,0.041 0.538,-0.114 0.331,-0.087 0.13,-0.106 0.27,-0.138 0.112,0.008 0.283,0.157 z m 143.192,2.084 -0.198,0.062 -0.583,-0.123 -0.243,-0.089 -0.717,-0.334 -1.366,-0.492 -0.466,-0.244 -0.096,-0.184 0.247,-0.384 0.14,-0.156 0.152,-0.097 1.437,-0.177 0.561,0.086 0.66,0.787 0.379,0.53 0.154,0.425 0.003,0.205 -0.064,0.185 z m -136.345,-1.135 -0.042,0.037 -0.116,-0.062 -0.111,-0.122 -0.191,-0.345 -0.063,-0.145 -0.041,-0.236 0.038,-0.042 0.083,0.025 0.058,0.039 0.301,0.568 0.084,0.283 z m 1.058,2.23 -0.089,0.21 -0.375,-0.506 -0.137,-0.143 -0.279,-0.54 -0.048,-0.232 0.012,-0.131 0.049,-0.048 0.086,0.034 0.081,0.059 0.54,0.599 0.15,0.281 0.01,0.417 z m 1.594,0.501 -0.215,0.062 0.072,-0.246 0.021,-0.146 -0.039,-0.137 -0.027,-0.265 -0.011,-0.627 0.21,-0.396 0.33,-0.011 -0.003,0.2 -0.14,0.89 -0.072,0.411 -0.056,0.151 -0.07,0.114 z m -7.467,2.005 -0.05,0.009 -0.093,-0.094 -0.064,-0.152 -0.039,-0.396 0.028,-0.162 0.025,-0.064 0.246,0.252 -0.053,0.607 z m 144.942,0.044 -0.116,0.032 -0.267,-0.037 -0.214,-0.114 -0.132,-0.146 0.867,-0.401 0.178,0.052 0.003,0.072 -0.13,0.215 -0.035,0.144 -0.063,0.109 -0.091,0.074 z m 67.42,0.284 -0.134,0.003 -0.03,-0.051 0.056,-0.174 0.149,-0.202 0.204,-0.056 -0.055,0.296 -0.19,0.184 z m -203.648,1.876 -0.047,0.075 -0.112,0 -0.178,-0.075 -0.133,-0.167 -0.16,-0.521 0.018,-0.09 0.055,-0.091 0.256,-0.188 0.092,0.021 0.034,0.137 0.152,0.307 0.045,0.09 0,0.356 -0.022,0.146 z m 203.374,-0.281 -0.207,0.447 -0.143,0.217 -0.133,0.07 -0.28,0.064 -0.591,0.07 -0.252,0.065 -0.036,0.298 0.037,0.156 0.086,0.124 0.109,0.035 0.245,-0.073 0.091,0.013 0.073,0.062 0.055,0.111 0.028,0.155 0.002,0.198 -0.043,0.239 -0.201,0.56 -0.254,0.31 -0.326,0.251 -0.08,0.096 -0.041,0.113 -0.041,0.366 -0.169,0.292 -0.524,0.738 -0.202,0.163 -0.001,0.129 -0.082,0.349 -0.156,0.28 -0.434,0.642 -0.107,0.227 -0.048,0.179 0.007,0.252 -0.02,0.111 -0.1,0.213 -0.138,0.199 -0.027,0.097 0.054,0.176 0.056,0.062 0.007,0.16 -0.043,0.259 0.183,-0.165 0.41,-0.589 0.308,-0.355 0.206,-0.12 0.144,-0.158 0.153,-0.349 0.21,-0.333 0.19,-0.109 0.087,0.064 0.074,0.164 -0.015,0.208 -0.103,0.252 0.008,0.074 0.242,-0.185 0.416,-0.153 0.15,0.021 0.305,0.229 0.253,-0.026 0.405,-0.133 0.076,0.061 -0.067,0.202 -0.159,0.193 -0.376,0.275 -0.905,0.539 -0.281,0.37 0.053,-0.011 0.195,-0.159 0.205,-0.085 0.215,-0.012 0.09,0.046 -0.035,0.104 -0.027,0.284 -0.548,0.553 0.129,-0.021 0.634,-0.252 0.385,0.348 0.529,-0.12 0.319,-0.117 -0.009,0.072 0.069,0.151 -0.002,0.245 0.032,0.034 0.151,-0.082 0.028,-0.09 -0.008,-0.435 0.047,-0.043 0.104,0.068 0.063,0.113 0.019,0.316 -0.069,0.317 -0.096,0.291 -0.234,0.423 0.03,0.182 -0.06,0.197 0.052,0.006 0.231,-0.184 0.014,-0.076 -0.018,-0.176 0.026,-0.086 0.192,-0.191 0.317,-0.227 0.104,-0.035 0.044,0.053 -0.016,0.14 0.094,-0.033 0.202,-0.207 0.188,-0.125 0.173,-0.043 0.18,-0.142 0.188,-0.241 0.202,-0.199 0.215,-0.157 0.093,-0.011 -0.032,0.261 0.042,0.296 0.006,0.253 0.042,0.053 0.166,-0.27 0.093,-0.099 0.11,-0.039 0.129,0.021 0.879,-0.097 0.267,0.067 0.302,0.176 0.38,0.273 0.14,0.247 0.026,0.311 -0.037,0.216 -0.274,0.272 -0.244,0.18 -0.144,0.179 -0.044,0.179 -0.057,0.11 -0.163,0.154 -0.724,0.432 0.173,0.012 0.417,-0.093 0.274,-0.02 0.015,0.063 -0.11,0.123 -0.209,0.123 -0.022,0.06 0.01,0.077 0.224,0.093 0.287,-0.045 0.241,0.066 -0.023,0.103 -0.192,0.335 -0.056,0.211 -0.255,0.177 -0.512,0.277 -0.131,0.106 0.029,0.022 0.469,-0.204 0.236,-0.052 0.15,-10e-4 0.169,-0.197 0.265,-0.065 0.259,0.124 0.395,-0.339 0.141,-0.044 0.24,0.039 0.155,-0.062 0.261,-0.231 0.197,-0.112 0.041,0.01 0.042,0.093 0.019,0.267 -0.046,0.236 -0.064,0.15 -0.212,0.331 -0.13,0.116 -0.121,0.044 -0.213,-0.018 -0.093,0.051 -0.2,0.259 -0.353,0.263 -0.22,0.102 0.139,0.142 0.051,0.274 -0.077,0.085 -0.379,0.084 -0.016,0.046 -0.135,0.061 -0.313,0.095 0.213,0.042 0.395,-0.067 0.042,0.046 -0.054,0.192 -0.105,0.198 -0.468,0.509 -0.006,0.051 0.073,0.249 0.091,0.188 0.113,0.133 0.26,0.007 0.192,-0.058 0.281,-0.339 0.62,-1.059 0.554,-0.296 0.461,-0.329 0.106,0.066 0.049,0.077 -0.017,0.08 -0.233,0.271 -0.122,0.223 -0.316,0.685 -0.121,0.322 -0.061,0.339 0.016,0.584 0.034,0.101 0.099,0.135 0.184,-0.116 0.313,-0.289 0.202,-0.276 0.158,-0.451 0.097,-0.173 0.105,0.002 0.094,0.099 0.023,0.217 0.087,0.296 0.052,0.3 -0.042,0.33 -0.042,0.18 -0.642,1.332 0.068,0.236 0.017,0.143 -0.02,0.151 -0.204,0.634 -0.197,0.395 -0.106,0.169 -0.126,0.104 -0.146,0.038 -0.131,-0.057 -0.116,-0.152 -0.102,-0.079 -0.089,-0.005 -0.165,0.028 -0.433,0.322 -0.089,0.017 -0.062,-0.043 -0.074,-0.169 0.059,-0.851 0.039,-0.282 -0.086,-0.218 0.091,-0.366 0.003,-0.139 -0.053,-0.052 -0.109,0.034 -0.166,0.184 -0.222,0.333 -0.241,0.296 -0.42,0.409 -0.186,0.081 -0.074,-0.02 -0.085,-0.056 -0.115,-0.171 10e-4,-0.151 0.05,-0.206 0.176,-0.487 0.343,-0.723 0.285,-0.516 0.055,-0.221 -0.08,-0.096 -0.064,-0.189 -0.109,-0.562 -0.138,-0.463 -0.164,-0.206 -0.406,-0.226 -0.075,0.055 -0.043,0.313 -0.479,0.896 -0.084,0.388 -0.06,0.144 -0.09,0.098 -0.209,0.119 0.057,-0.207 0.222,-0.46 -0.03,-0.045 -0.282,0.37 -0.215,0.205 -0.262,0.053 -0.16,-0.013 -0.155,0.057 -0.656,0.87 -0.024,0.29 -0.114,0.237 -0.323,0.427 -0.171,0.148 -0.24,0.026 -0.219,-0.074 -0.144,0.014 -0.341,0.133 -0.382,0.058 -0.158,-0.027 -0.101,-0.055 -0.194,-0.166 -0.023,-0.118 0.01,-0.069 0.099,-0.179 0.227,-0.225 0.187,-0.084 0.454,-0.113 0.333,-0.169 0.253,-0.25 0.113,-0.153 0.477,-0.786 0.604,-0.278 0.298,-0.227 0.208,-0.288 0.03,-0.102 -0.299,0.146 -0.154,0.036 -0.25,-0.054 -0.111,-0.098 -0.342,0.031 -0.476,-0.046 -0.069,0.076 -0.062,0.384 -0.062,0.203 -0.073,0.069 -0.106,0.04 -0.218,0.041 -0.557,-0.137 -0.103,-0.075 -0.142,-0.057 -0.615,0.125 -0.129,-0.012 0.122,-0.089 0.608,-0.281 0.064,-0.813 -0.038,-0.13 -0.17,0.114 -0.286,0.117 -0.195,-0.034 -0.089,-0.072 -0.082,0.061 -0.199,0.429 -0.117,0.054 -0.176,0.016 -0.375,0.156 -0.737,0.103 -0.146,0.113 -0.5,-0.04 -1.462,-0.235 -0.523,0.023 -0.629,-0.144 -0.116,-0.062 -0.881,0.025 -0.263,-0.033 0.018,-0.179 -0.028,-0.046 -0.256,0.197 -0.227,0.128 -0.292,0.109 -0.92,0.19 -0.494,0.041 -0.287,-0.132 -0.114,-0.131 -0.171,-0.427 -0.117,-0.537 0.001,-0.097 0.06,-0.187 0.193,-0.259 0.873,-0.686 0.703,-0.696 0.296,-0.363 0.287,-0.13 0.469,-0.302 0.015,-0.036 -0.455,0.038 -0.32,-0.083 -0.327,-0.033 -0.621,0.08 -0.626,0 -0.002,-0.155 0.293,-0.292 0.622,-0.503 0.063,-0.002 -0.19,0.234 -0.054,0.175 0.082,0.116 0.095,0.074 0.356,0.031 0.082,-0.102 0.128,-0.54 0.27,-0.626 0.146,-0.453 0.253,-0.346 0.126,-0.052 0.112,0.065 0.372,0.083 0.383,0.317 0.124,0.027 0.042,-0.029 -0.14,-0.093 -0.116,-0.149 -0.048,-0.14 0.14,-0.438 0.164,-0.126 0.029,-0.087 -0.328,-10e-4 -0.264,-0.123 -0.078,-0.199 0.015,-0.351 0.086,-0.209 0.211,-0.277 0.257,-0.185 0.153,0.047 0.295,0.249 0.182,-0.07 -0.021,-0.08 -0.277,-0.396 -0.088,-0.294 0.008,-0.14 0.6,-1.407 0.293,-0.759 0.4,-1.161 0.092,-0.186 0.203,-0.344 0.084,-0.094 0.261,-10e-4 0.162,-0.042 -0.237,-0.152 -0.085,-0.106 -0.01,-0.112 0.065,-0.117 0.092,-0.087 0.31,-0.188 0.22,-0.31 0.134,-0.366 -0.02,-0.125 -0.069,-0.124 0.004,-0.067 0.167,-0.076 0.425,-0.436 0.055,-0.083 0.155,-0.583 0.19,-0.259 0.178,-0.133 0.284,-0.165 0.872,-0.401 0.51,-0.359 0.347,0.02 0.102,0.25 0.493,0.166 0.086,-0.178 -0.115,-0.218 0.096,-0.088 0.406,-0.079 0.07,0.029 0.122,0.124 -0.014,0.119 z m -201.333,3.993 1.393,0.55 1.395,0.271 1.024,0.321 0.628,0.098 0.227,0.07 0.146,0.113 0.173,0.272 0.299,0.646 0.227,0.412 0.468,0.713 0.37,0.505 0.084,0.2 -0.078,0.064 0.005,0.118 0.281,0.488 0.527,0.437 0.412,0.208 0.87,0.342 0.534,0.329 0.165,0.228 0.232,0.221 0.097,0.152 0.19,0.564 0.353,0.542 0.364,1.025 0.068,-0.085 0.042,-0.305 0.042,-0.068 0.077,-0.032 0.072,0.118 0.066,0.27 0.231,0.639 -0.075,0.187 -0.067,0.019 -0.313,-0.087 -0.108,0.114 -0.146,0.232 -0.103,0.093 -0.06,-0.045 -0.905,-0.223 -0.557,-0.21 -0.732,-0.333 -0.879,-0.347 -0.502,-0.238 -0.418,-0.246 -0.291,-0.209 -0.055,-0.178 0.013,-0.084 0.564,-0.57 0.239,-0.307 0.092,-0.235 0.047,-0.249 -0.035,-0.304 -0.023,0.023 -0.05,0.292 -0.083,0.259 -0.102,0.203 -0.064,0.072 -0.676,0.099 -0.546,-0.031 -0.274,0.244 -0.082,0.031 -0.151,-0.081 -0.329,-0.326 -0.472,-0.268 0.046,-0.066 0.308,-0.136 0.163,-0.2 -0.029,-0.032 -0.109,0.012 -0.097,-0.041 -0.192,-0.259 -0.109,-0.071 -0.232,0.117 -0.094,0.006 -0.09,-0.171 0.129,-0.395 0.007,-0.093 -0.238,0.144 -0.079,-0.047 -0.075,-0.128 -0.07,-0.054 -0.193,0.026 -0.21,-0.118 -0.073,0.046 -0.028,0.171 -0.07,0.043 -0.32,-0.288 -0.073,-0.009 -0.155,0.22 -0.054,0.014 -0.083,-0.095 -0.042,-0.536 0.018,-0.152 0.044,-0.051 0.278,-0.125 0.8,-0.133 0.067,-0.096 -0.6,0.049 -0.156,-0.073 -0.167,-0.184 -0.175,0.003 -0.092,-0.06 -0.097,-0.133 -0.253,-0.487 -0.173,-0.124 -0.294,-0.078 -0.151,-0.092 -0.064,0.041 -0.061,0.139 -0.082,0.087 -0.201,0.049 -0.184,-0.036 -0.144,-0.133 -0.085,-0.168 -0.033,-0.188 0.08,-0.252 -0.001,-0.1 -0.036,-0.117 -0.065,-0.094 -0.096,-0.072 -0.052,0.038 -0.009,0.147 -0.052,0.108 -0.167,0.082 -0.136,-0.144 -0.09,-0.2 -0.104,-0.142 -0.583,0 -0.269,0.184 -0.128,0.015 -0.134,-0.044 -0.025,-0.098 0.126,-0.268 -0.031,-0.358 -0.033,-0.09 -0.269,-0.055 -0.045,-0.086 0.16,-0.436 0.089,-0.083 0.119,-0.031 0.534,-0.036 0.178,0.063 0.257,0.265 -0.008,-0.1 -0.097,-0.301 -0.014,-0.181 0.177,-0.204 -0.169,-0.06 -0.632,-0.047 0.005,0.13 0.052,0.186 -0.375,0.162 -0.278,0.027 -0.266,-0.025 -0.217,-0.097 -0.37,-0.391 -0.231,-0.386 0.011,-0.21 0.127,-0.221 0.166,-0.15 0.394,-0.131 0.514,-0.012 0.575,0.176 1.444,0.801 z m 201.116,-0.35 -0.094,0.049 -0.087,-10e-4 -0.08,-0.052 -0.013,-0.085 0.082,-0.18 0.217,-0.091 0.163,0.021 -0.01,0.091 -0.087,0.149 -0.091,0.099 z m -195.466,2.734 -0.031,0.23 -0.181,-0.374 -0.277,-0.794 0.037,-0.186 0.124,-0.264 0.113,-0.016 0.182,0.123 0.159,0.22 0.037,0.085 0.098,0.23 0.049,0.207 -0.11,0.25 -0.2,0.289 z m 0.579,0.295 -0.067,0.038 -0.068,-0.494 0.085,-0.179 0.024,-0.09 -0.011,-0.093 0.148,0.224 0.06,0.15 0.025,0.208 -0.003,0.055 -0.193,0.181 z m 177.304,4.037 -1.174,0.063 -0.935,-0.264 -0.693,-0.127 -0.679,-0.232 -1.472,-0.749 -0.168,-0.26 -0.141,-0.321 -0.282,-0.292 -0.304,-0.241 -1.558,-0.736 -0.127,-0.257 0.315,-0.169 0.363,-0.081 0.315,0.012 1.042,0.289 1.314,0.253 0.57,0.191 0.646,0.291 0.631,0.353 1.405,0.935 0.252,0.074 0.634,0.457 0.229,0.342 0.111,0.277 -0.139,0.142 -0.155,0.05 z m -181.972,-2.199 -0.11,0.02 -0.177,-0.052 -0.199,-0.124 -0.349,-0.33 -0.036,-0.075 0.031,-0.064 0.099,-0.053 0.022,-0.087 -0.081,-0.238 0.28,-0.15 0.247,0.125 0.112,0.153 0.135,0.271 0.061,0.306 0.006,0.209 -0.041,0.089 z m 6.981,0.322 0.039,0.09 -0.625,-0.336 -0.266,-0.199 -0.104,-0.144 -0.067,-0.082 -0.317,-0.214 -0.053,-0.098 0.075,-0.073 0.214,0.046 0.353,0.161 0.315,0.262 0.436,0.587 z m 196.622,-0.922 0.207,0.281 0.11,0.076 -0.723,0.304 -0.087,0.02 -0.047,-0.036 -0.007,-0.283 0.031,-0.219 0.052,-0.033 0.167,0.132 0.173,-0.271 0.124,0.029 z m -1.293,0.673 -0.433,0.251 -0.099,0.099 -0.12,0.05 -0.09,-0.079 -0.126,-0.266 0.023,-0.088 0.119,-0.012 0.068,0.035 0.017,0.083 0.052,0.042 0.087,10e-4 0.321,-0.259 0.167,-0.041 0.06,0.05 -0.046,0.134 z m -200.769,1.011 0.079,0.388 -0.344,-0.062 -0.121,-0.075 -0.005,-0.187 0.064,-0.175 0.262,0.063 0.065,0.048 z m 165.49,17.265 -0.129,-0.05 -0.119,-0.042 -0.102,-0.033 -0.059,0.056 -0.056,0.075 -0.069,0.056 -0.145,-0.079 -0.092,-0.144 -0.148,-0.149 -0.056,-0.112 0.029,-0.13 0.066,-0.126 0.03,-0.15 -0.072,-0.172 -0.066,-0.098 -0.046,-0.112 0.017,-0.108 0.092,-0.051 0.085,-0.066 0.03,-0.141 -0.053,-0.15 -0.151,-0.061 -0.125,0.023 -0.181,-0.033 -0.175,-0.094 -0.115,-0.108 -0.089,-0.061 -0.069,0 -0.082,-0.061 -0.049,-0.104 0.006,-0.169 0.023,-0.104 0.046,-0.089 0.003,-0.099 -0.02,-0.071 -0.003,-0.057 0.013,-0.071 0.03,-0.141 -0.049,-0.104 -0.005,-0.36 -0.009,-0.675 -0.007,-0.518 -0.009,-0.654 -0.005,-0.477 -0.007,-0.67 -0.007,-0.638 -0.011,-0.604 -0.359,-0.349 -0.455,-0.442 -0.39,-0.293 -0.211,-0.035 -0.132,0.041 -0.053,0.117 -0.291,0.125 -0.528,0.134 -0.45,0.207 -0.165,0.002 -0.14,-0.035 -0.185,-0.104 -0.128,-0.153 -0.044,-0.266 0.04,-0.366 -0.27,-0.075 -0.271,-0.076 -0.166,0.252 -0.159,0.212 -0.316,0.462 -0.444,0.647 -0.247,0.355 -0.433,0.623 -0.382,0.547 -0.085,0.56 -0.082,0.53 -0.315,0.402 -0.192,0.368 -0.086,0.408 -0.072,0.374 -0.005,0.313 0.054,0.164 -0.025,0.133 -0.104,0.153 -0.209,0.265 -0.037,0.255 -0.127,0.126 -0.364,0.251 -0.297,0.371 -0.015,0.209 0.042,0.174 0.007,0.107 -0.06,0.075 -0.119,-0.005 -0.129,0.023 -0.108,0.154 0.003,0.221 -0.079,0.159 -0.093,0.033 -0.079,-0.112 -0.095,-0.168 -0.111,-0.017 -0.169,0.112 -0.209,0.184 -0.188,0.01 -0.353,-0.118 -0.257,0.357 -0.277,0.764 -1.167,0.002 -1.168,0.002 -1.168,0.002 -1.167,0.002 -1.168,0.002 -1.168,10e-4 -1.168,0.002 -0.653,10e-4 -0.128,0 0.4,-0.149 0.834,-0.582 0.615,-0.211 0.8,-0.613 0.58,-0.118 0.11,-0.135 0.097,-0.51 0.053,-0.182 0.271,-0.502 0.325,-0.425 0.262,-0.589 0.476,-0.377 0.72,-0.316 0.666,-0.691 0.365,-0.211 0.354,-0.151 0.148,-0.282 0.219,-0.161 0.585,-0.329 0.645,-0.089 0.651,-0.273 0.5,-0.145 0.306,-0.257 0.446,-0.135 1.33,-0.739 0.369,-0.347 0.478,-0.712 0.416,-0.363 0.147,-0.387 0.603,-0.63 0.621,-0.833 0.309,-0.599 0.462,-0.333 0.896,-0.956 0.481,-0.383 0.195,-0.044 0.544,-0.341 0.338,-0.356 0.542,-0.358 0.98,-0.442 0.921,-0.531 1.244,-0.461 1.458,-0.692 1.178,-0.372 0.829,-0.054 1.009,-0.173 0.357,0.018 1.571,0.301 0.754,0.372 0.858,0.78 0.128,0.205 0.021,0.287 -0.455,-0.139 -0.401,-0.009 0.278,0.159 0.473,0.478 -0.021,0.596 -0.267,0.537 -0.798,0.264 -0.204,0.21 -0.165,0.347 -0.162,0.133 -0.387,0.154 -0.214,0.225 -0.627,0.356 -0.282,0.042 -0.325,-0.085 -0.783,-0.335 -0.482,-0.324 -0.241,0.177 -0.198,0.185 -0.465,-0.062 -0.212,0.082 -0.35,-0.091 -0.717,0.407 0.204,0.047 0.569,-0.234 0.194,0.026 0.419,0.302 1.013,0.324 0.263,0.214 0.251,0.681 0.166,0.109 0.347,-0.071 0.392,-0.336 0.325,-0.18 0.635,-0.148 -0.125,0.224 0.484,-0.018 0.479,0.301 -0.177,0.214 -0.241,0.43 -0.168,0.833 -0.488,0.556 -0.653,0.546 0.165,0.131 0.191,0.081 0.42,-0.161 0.281,0.011 0.312,0.104 -0.097,0.422 -0.112,0.286 0.065,0.267 0.185,0.507 0.255,0.111 0.102,0.648 0.135,0.352 -0.019,0.282 0.255,0.181 0.043,0.288 0.925,0.082 0.188,0.11 0.643,0.109 0.122,0.079 0.114,0.158 -0.63,0.346 0.51,0.25 0.482,0.407 0.379,-0.08 0.164,0.013 0.424,0.255 0.118,0.126 0.065,0.112 0.213,-0.024 0.306,-0.098 0.553,0.024 0.59,0.144 -0.05,0.219 -0.089,0.151 0.461,-0.05 0.288,0.155 0.1,-0.075 0.071,-0.097 0.573,-0.265 0.736,-0.551 0.089,0.068 0.034,0.209 0.097,0.34 0.283,0.234 0.335,0.054 0.462,-0.179 0.182,0.155 0.216,0.298 0.206,0.39 -0.014,0.139 -0.264,0.122 -0.238,0.175 0.994,0.072 0.101,0.074 0.11,0.153 -0.102,0.154 -0.094,0.077 -0.18,-0.09 -0.333,0.082 -0.291,0.2 -0.311,0.111 -0.199,0.012 -0.221,0.093 -0.202,0.143 -0.209,0.04 -0.654,0.356 -0.668,0.229 -0.699,0.366 -0.713,0.231 -0.74,0.277 -0.161,0.024 -0.187,-0.011 -0.422,0.271 -0.209,-0.037 -0.213,0.047 -0.246,-0.06 -0.167,-0.111 0.128,0.286 0.038,0.263 -0.064,0.115 -0.118,0.135 -0.425,-0.025 -0.167,-0.095 -0.198,-0.14 -0.091,-0.226 -0.213,-0.162 -0.126,0.224 0,0.167 -0.158,0.227 -0.186,-0.389 -0.334,0.143 -0.147,0.414 0.074,0.118 0.103,0.316 -0.165,0.165 -0.123,-0.045 -0.254,0.462 -0.308,0.168 -0.317,0.47 -0.376,0.358 -0.103,0.239 -0.63,0.545 -0.239,-0.017 -0.176,0.018 -0.266,0.227 -0.042,0.458 -0.117,-0.061 -0.119,0.015 -0.062,0.144 -0.087,0.023 -0.232,-0.136 -0.273,0.074 -0.214,-0.103 -0.272,-0.671 -0.145,-0.236 -0.257,-0.076 -0.067,0.143 -0.1,0.139 -0.247,-0.278 -0.188,-1.032 -10e-4,-0.25 0.262,-0.874 0.65,-0.789 -0.208,-0.026 -0.574,0.547 0.059,-0.132 0.097,-0.138 0.194,-0.223 0.293,-0.209 0.391,-0.123 0.269,-0.018 0.186,-0.116 0.269,-0.206 0.05,-0.109 -0.238,0.126 -0.396,0.123 0.101,-0.162 0.1,-0.086 2.115,-1.424 0.426,-0.236 0.849,-0.301 0.118,-0.197 -0.116,-0.126 0.33,0.111 -0.027,0.164 -0.052,0.119 -0.019,0.203 0.032,0.194 0.334,0.095 0.279,0.361 -0.132,-0.491 0.251,-0.278 0.968,-0.373 0.809,-0.041 0.259,-0.174 -0.691,-0.117 -0.82,0.064 -0.507,-0.13 -0.7,0.085 -0.74,-0.082 -0.227,0.108 -0.184,0.233 -0.239,-0.103 -0.116,-0.017 -0.111,-0.081 0.24,-0.401 0.75,-0.599 0.457,-0.522 0.129,-0.11 0.102,-0.21 -0.251,0.035 -0.219,0.083 -0.152,-0.242 -0.271,-0.321 -0.026,0.134 0.136,0.4 -0.519,0.702 -0.335,0.05 -0.447,0.327 -0.632,0.284 -0.737,0.541 -0.953,0.455 -0.199,0.002 -0.433,-0.375 0.121,-0.17 0.113,-0.231 -0.108,0.066 -0.069,0.101 -0.261,0.161 0.211,0.311 -0.102,0.117 -0.302,0.153 -0.282,0.222 -0.247,0.148 -0.199,-0.188 -0.551,0.237 -0.464,0.064 -0.101,-0.12 -0.029,-0.19 -0.163,-0.046 -0.301,0.053 -0.117,-0.108 z m -157.857,-15.264 -0.035,0.046 -0.438,-0.301 -0.294,-0.395 -0.122,-0.241 0.581,0.599 0.293,0.198 0.015,0.094 z m -0.177,0.56 -0.118,0.109 -0.063,-0.015 -0.05,-0.076 -0.182,-0.747 0.078,0.016 0.244,0.233 -0.055,0.092 0.182,0.223 0.044,0.158 -0.08,0.007 z m 99.362,0.156 -0.072,0.003 -0.054,-0.102 -0.03,-0.286 0.083,-0.122 0.17,-0.087 0.228,-0.031 0.285,0.024 0.135,0.076 -0.014,0.128 -0.034,0.066 -0.084,0.042 -0.011,0.074 -0.121,0.041 -0.23,0.006 -0.161,0.058 -0.09,0.11 z m 1.149,-0.167 -0.192,0.029 -0.113,-0.02 -0.037,-0.041 0.039,-0.061 -0.003,-0.065 -0.061,-0.128 0.013,-0.045 0.047,-0.024 0.083,-0.004 0.098,0.085 0.115,0.174 0.011,0.1 z m 64.957,3.361 -0.323,0.216 0.142,-0.325 0.059,-0.084 0.055,-0.037 0.053,0.029 0.014,0.201 z m -0.091,0.301 -0.071,0.304 -0.245,0.258 -0.122,0.018 -0.056,-0.025 0.067,-0.167 -0.008,-0.289 0.203,-0.04 0.074,0.026 0.158,-0.085 z m -59.378,0.639 -0.54,0.059 -0.235,-0.061 -0.024,-0.057 0.056,-0.08 0.135,-0.103 0.155,-0.056 0.175,-0.01 0.348,0.104 0.126,0.103 -0.027,0.062 -0.169,0.039 z m 88.233,1.211 -0.137,0.144 -0.14,-0.006 0.017,-0.126 0.172,-0.245 0.088,-0.175 0.003,-0.106 0.032,-0.081 0.131,-0.091 0.113,-0.165 -0.054,0.306 -0.225,0.545 z m -21.574,0.648 0.099,0.079 0.178,-0.009 0.12,0.032 -0.171,0.153 -0.329,0.015 -0.161,-0.063 0.234,-0.788 0.273,-0.182 0.56,-0.517 0.224,-0.158 0.208,-0.062 0.22,0.038 -0.224,0.306 -0.3,0.017 -0.286,0.254 -0.188,0.281 -0.226,0.16 -0.155,0.196 -0.076,0.248 z m -5.324,3.339 0.076,0.057 0.132,-0.104 0.156,-0.331 0.413,0.086 0.219,0.149 0.122,-0.033 0.125,0.015 0.231,0.195 0.44,0.154 0.464,-0.022 0.708,-0.091 0.084,-0.037 0.726,-0.077 0.729,-0.036 0.25,0.087 0.094,0.082 0.048,0.098 -0.416,0.268 -0.416,0.312 -0.578,0.306 -0.073,0.149 0.036,0.274 -0.011,0.279 0.114,0.023 0.069,0.093 -0.149,0.09 -0.595,0.042 -0.173,-0.025 -0.206,-0.114 -0.071,-0.27 -0.255,0.04 -0.077,-0.033 0.358,-0.23 -0.163,-0.289 -0.175,0.021 -0.116,-0.137 0.009,-0.186 0.162,-0.09 0.047,-0.098 -0.22,0.085 -0.169,0.172 -0.218,0.065 -0.213,0.148 0.331,0.047 -0.17,0.115 -0.177,0.026 -0.82,-0.226 -0.203,-0.086 -0.255,-0.237 -0.193,-0.317 0.105,-0.012 0.036,-0.057 -0.023,-0.054 -0.286,-0.043 -0.446,0.014 -0.256,-0.084 0.012,-0.555 -0.083,-0.153 -0.28,-0.129 -0.428,-0.039 -0.042,-0.207 0.136,-0.316 0.209,-0.272 0.16,-0.268 0.186,-0.22 0.458,-0.438 -0.011,0.328 0.044,0.281 -0.298,0.563 0.519,0.556 0.066,0.123 0.044,0.149 -0.033,0.137 -0.084,0.122 0.202,0.061 0.062,0.104 z m 7.594,2.118 0.095,0.031 0.378,-0.195 0.2,0.008 -0.009,0.14 -0.325,0.153 -0.149,0.114 0.188,0.106 -0.002,0.072 -0.226,0.172 -0.113,0.187 0.093,0.181 0.361,-0.178 0.148,-0.002 0.201,0.041 0.191,-0.054 0.109,-0.088 0.636,-0.696 0.033,-0.089 -0.686,0.144 -0.08,-0.095 0.449,-0.422 -0.035,-0.223 0.227,-0.352 0.208,-0.209 0.152,-0.117 0.221,-0.108 0.152,0.167 0.049,0.301 0.376,-0.042 0.368,0.061 0.271,0.127 0.042,0.073 0.003,0.115 -0.09,0.207 -0.149,0.17 0.297,0.218 -0.04,0.095 -0.487,0.246 -0.277,0.247 -0.254,0.304 -0.508,0.354 -0.805,0.255 -0.255,0 -0.303,-0.08 -0.3,0.018 -0.295,0.095 -0.289,-0.011 -0.14,0.05 -0.133,-0.005 -0.111,-0.099 -0.238,-0.282 -0.116,-0.189 -0.128,-0.904 0.041,-0.477 0.202,-0.446 0.299,-0.297 0.173,-0.237 0.724,-1.414 0.142,-0.322 0.173,-0.275 0.31,-0.272 0.401,-0.46 0.128,-0.094 0.23,-0.045 0.227,0.025 -0.065,0.167 0.017,0.163 0.263,0.635 -0.003,0.126 -0.144,0.504 -0.276,0.812 -0.071,0.447 0.037,0.134 -0.112,0.226 -0.119,0.171 -0.471,0.321 -0.241,0.075 -0.229,0.119 -0.541,0.402 z m -27.841,-3.766 -0.255,0.033 0.061,-0.142 0.348,-0.253 0.256,-0.142 0.151,0.003 -0.246,0.311 -0.315,0.19 z m -35.874,2.872 -0.058,0.076 -0.077,-0.04 -0.055,0.039 -0.032,0.117 -0.055,0.087 -0.066,0.022 -0.136,-0.072 -0.169,-0.273 -0.111,-0.24 -0.052,-0.207 0.101,-0.09 0.253,0.027 0.224,0.076 0.193,0.124 0.078,0.159 -0.038,0.195 z m 1.337,1.153 -0.153,0.047 -0.188,-0.063 -0.075,-0.09 0.038,-0.118 0.082,-0.109 0.126,-0.101 0.132,-0.018 0.137,0.064 0.071,0.062 0.005,0.06 -0.175,0.266 z m 1.434,-0.387 -0.031,0.163 0.026,0.106 0.083,0.049 0.055,0.069 0.026,0.089 0.078,0.023 0.129,-0.042 0.086,0.013 0.043,0.068 0.049,0.016 0.055,-0.036 0.068,0.042 0.082,0.12 0.064,0.005 0.046,-0.111 -0.016,-0.063 -0.111,-0.043 0.01,-0.042 -0.068,-0.103 0.034,-0.076 0.116,-0.097 0.082,-0.021 0.049,0.055 0.05,-0.014 0.052,-0.084 0.122,-0.064 0.192,-0.045 0.105,0.035 0.018,0.114 0.055,0.037 0.092,-0.04 0.087,0.087 0.082,0.213 0.092,0.007 0.102,-0.2 0.146,-0.144 0.188,-0.089 0.136,-0.009 0.083,0.07 0.039,0.093 -0.005,0.114 0.051,0.072 0.108,0.028 0.035,0.093 -0.039,0.158 0.01,0.138 0.097,0.182 0.022,0.011 0.092,-0.324 0.079,-0.17 0.104,-0.121 0.066,-0.011 0.028,0.099 -0.022,0.109 -0.072,0.12 0.038,0.054 0.234,10e-4 0.024,0.038 -0.26,0.541 -0.194,0.263 -0.206,0.177 -0.149,0.044 -0.093,-0.087 -0.089,-0.035 -0.087,0.019 0.001,-0.034 0.152,-0.135 0.057,0.003 0.106,-0.03 0.294,-0.298 0,-0.05 -0.172,0.024 -0.583,0.502 -0.074,0.019 -0.058,-0.033 -0.042,-0.084 -0.328,-0.146 -0.135,-0.131 -0.188,-0.094 -0.242,-0.058 -0.283,-0.118 -0.325,-0.179 -0.308,-0.099 -0.563,-0.057 -0.072,-0.09 -0.555,-0.167 -0.173,-0.108 0.017,-0.123 0.043,-0.089 0.068,-0.057 0.071,0.023 0.074,0.102 0.076,0.012 0.079,-0.079 0.095,-0.011 0.111,0.056 0.085,-0.007 0.058,-0.07 0.112,-0.061 0.167,-0.051 0.067,0.054 z m 25.972,2.033 -0.216,0.08 -0.37,-0.074 -0.407,0.103 -0.113,0.002 0.302,-0.296 0.464,-0.182 0.463,-0.56 0.13,-0.014 -0.176,0.633 -0.036,0.226 -0.041,0.082 z m -0.361,-0.464 -0.338,0.082 -0.117,-0.035 0.374,-0.393 0.427,-0.091 -0.346,0.437 z m 35.737,0.381 -0.116,0.033 -0.027,-0.057 -0.179,-0.165 -0.016,-0.082 0.156,-0.078 0.319,0.04 -0.114,0.207 -0.023,0.102 z m -58.45,0.096 -0.075,0.01 -0.05,-0.037 -0.013,-0.045 0.024,-0.055 0.263,-0.131 0.063,0.017 -0.041,0.103 -0.171,0.138 z m 4.529,2.605 0.003,0.05 -0.12,-0.104 -0.048,-0.082 -0.01,-0.083 0.058,-0.028 0.124,0.027 0.039,0.067 -0.046,0.153 z m 37.641,0.501 -0.377,0.208 0.146,-0.531 0.12,-0.164 0.159,0.055 -0.022,0.321 -0.026,0.111 z m 1.371,1.527 -0.141,0.137 0.034,-0.134 0.173,-0.342 0.112,-0.051 -0.178,0.39 z m -28.321,0.531 -0.162,0.136 -0.131,-0.012 -0.042,-0.013 0.028,-0.053 -0.006,-0.044 -0.042,-0.036 0.023,-0.064 0.09,-0.093 0.059,-0.096 0.286,-0.048 0.139,-0.029 0.146,-0.029 -0.028,0.084 -0.26,0.097 -0.065,0.126 -0.035,0.074 z m -0.905,0.073 -0.122,0.042 -0.156,-0.014 -0.064,-0.037 0.028,-0.059 0.108,-0.066 0.332,-0.106 0.008,0.07 -0.134,0.17 z m 47.429,0.77 -0.378,0.139 -0.324,-0.01 -0.215,-0.126 -0.009,-0.055 0.509,0.053 0.196,-0.029 0.391,-0.216 -0.17,0.244 z m -64.13,8.364 -0.13,0.041 -0.002,-0.08 0.031,-0.184 0.056,-0.08 0.032,0.045 0.044,0.166 -0.031,0.092 z\"\n\t\t\t\tid=\"CA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 746.67575,497.1434 0.033,0.015 0.043,-0.015 0.018,0.018 -0.067,0.028 -0.042,-0.051 -0.02,-0.083 -0.005,-0.07 0.019,0 0,0.028 0.005,0.023 0.015,0.046 -0.011,0.031 0.012,0.03 z m 0.219,0.035 -0.032,0.016 -0.028,-0.012 -0.008,-0.009 -0.003,-0.015 0.032,-0.002 0.025,-0.014 0.016,-0.024 0.005,-0.034 0.013,0.033 -0.002,0.033 -0.018,0.028 z\"\n\t\t\t\tid=\"CC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 551.80175,448.6594 0.102,0.196 0.145,0.201 0.486,0.34 0.154,0.189 0.119,0.21 0.075,0.164 0.15,0.131 0.21,0.084 0.18,0.1 0.11,0.147 0.165,0.153 0.318,0.208 0.155,0.005 0.179,0.029 0.158,0.055 0.169,-0.016 0.273,-0.136 0.322,-0.228 0.246,-0.141 0.595,0.05 0.332,0.115 0.264,0.161 0.206,-0.01 0.449,-0.298 0.238,-0.317 0.231,-0.068 0.35,0.138 0.289,0.296 0.254,0.43 0.179,0.164 0.245,0.254 0.487,0.547 0.634,0.274 0.246,0.135 0.08,0.135 0.047,0.18 0.016,0.195 0.077,0.081 0.171,-0.028 0.146,-0.028 0.161,0.056 0.112,0.142 0.056,0.111 0.061,0.119 0.159,0.076 0.031,0.153 -0.109,0.186 -0.112,0.167 -0.136,0.332 -0.071,0.34 0.092,0.113 0.097,0.094 0.052,0.095 0.031,0.111 -0.012,0.13 -0.216,0.472 -0.111,0.412 -0.004,0.209 0.285,0.154 0.37,-0.008 0.117,0.094 0.117,0.15 0.103,0.077 0.156,-0.002 0.108,0.052 0.043,0.106 0.126,0.114 0.106,0.126 -0.051,0.161 -0.009,0.123 -0.264,0.342 -0.606,0.667 -1.304,1.237 -10e-4,10e-4 -0.44,0.149 -0.227,0.23 -0.161,0.361 -0.38,0.306 -0.293,0.124 -0.031,0.073 -0.023,0.332 0.03,0.487 -0.137,0.223 -0.199,0.434 -0.103,0.271 -0.08,0.053 -0.089,0.136 -0.056,0.442 -0.038,0.149 -0.143,0.915 0.041,0.261 -0.111,0.435 -0.005,0.256 -0.046,0.29 -0.079,0.251 0.005,0.402 0.045,0.656 -0.008,0.087 -0.11,0.061 -0.196,0.163 -0.185,0.109 -0.141,0.028 -0.235,0.29 -0.2,0.275 -0.15,0.268 -0.039,0.123 0.031,0.347 0.021,0.411 -0.046,0.177 -0.07,0.105 -0.328,0.223 -0.216,0.16 -0.102,0.084 -0.053,0.129 0.095,0.304 0.007,0.222 0.078,0.131 0.26,0.106 -10e-4,0.107 0.007,0.115 0.136,0.143 0.248,0.292 0.199,0.274 0.005,0.238 -0.038,0.398 -0.007,0.229 0.02,0.314 -10e-4,0.584 -0.014,0.416 0.032,0.216 0.304,0.515 0.134,0.571 0.067,0.418 0.003,0.133 -0.103,0.481 -0.117,0.467 -0.007,0.177 0.055,0.236 0.217,0.54 0.158,0.393 0.076,0.237 0.109,0.276 0.145,0.423 0.036,0.201 -0.03,0.15 -0.296,0.531 -0.03,0.167 0.073,0.412 0.097,0.398 0.14,0.226 0.334,0.624 0.249,0.211 0.459,0.312 0.405,0.314 0.156,0.163 0.143,0.182 0.282,0.466 0.172,0.379 0.091,0.343 0.221,0.469 0.206,0.435 0.266,0.532 0.188,0.376 0.085,0.251 -0.486,0.075 -0.703,0.107 -0.775,0.119 -0.8,0.122 -0.793,0.122 -0.752,0.115 -0.683,0.104 -0.208,0.058 0.102,0.296 -0.047,0.311 -0.135,0.241 -0.214,0.296 -0.097,0.118 -0.218,0.231 -0.182,0.163 -0.371,0.274 -0.234,0.157 -0.002,0.142 0.394,0.664 0.179,0.477 0.073,0.431 -0.004,0.248 -0.015,0.51 -0.018,0.607 -0.027,0.239 0.107,0.433 -0.019,0.338 -0.265,0.378 -0.074,0.371 -0.134,0.501 -0.185,0.696 -0.132,0.366 0.073,0.238 0.066,0.16 0.07,0.215 0.142,0.324 0.166,0.191 0.093,0.082 0.546,0.409 0.227,0.197 0.346,0.392 0.256,0.26 0.356,0.061 0.427,0.098 0.236,0.076 0.162,-0.037 0.055,-0.092 -0.008,-0.196 -0.028,-0.144 0.045,-0.111 0.145,-0.073 0.371,-0.012 0.161,-0.098 0.128,-0.024 10e-4,0.43 0,0.412 10e-4,0.501 0,0.575 10e-4,0.472 0,0.502 10e-4,0.58 -0.003,0.065 -0.057,0.131 -0.147,0.045 -0.199,-0.113 -0.012,-0.119 -0.049,-0.213 -0.092,-0.109 -0.121,-0.034 -0.204,0.055 -0.28,0.157 -0.359,0.138 -0.146,0.079 -0.253,-0.01 -0.274,-0.075 -0.201,-0.177 -0.058,-0.265 -0.177,-0.272 -0.24,-0.394 -0.121,-0.161 -0.16,-0.184 -0.162,-0.021 -0.181,-0.051 -0.111,-0.269 -0.104,-0.34 -0.064,-0.131 -0.108,-0.169 -0.155,-0.103 -0.338,-0.136 -0.472,-0.189 -0.594,-0.238 -0.282,-0.012 -0.316,-0.04 -0.198,-0.113 -0.113,-0.09 -0.13,-0.33 -0.178,-0.386 -0.521,-0.459 -0.117,-0.508 -0.105,-0.073 -0.179,0.041 -0.138,0.063 -0.055,0.137 -0.139,0.458 -0.077,0.211 -0.052,0.059 -0.114,0.068 -0.186,0.062 -0.265,0.031 -0.374,-0.012 -0.468,-0.068 -0.252,-0.051 -0.683,-0.076 -0.198,-0.037 -0.279,-0.1 -0.201,-0.1 -0.662,-0.216 -0.301,0.026 -0.145,-0.153 -0.131,-0.075 -0.18,-0.144 -0.08,-0.197 -0.107,-0.423 0.026,-0.226 0.077,-0.252 -0.086,-0.07 -0.12,0 -0.172,0.087 -0.305,0.049 -0.559,0.111 -0.198,0.062 -0.219,0.048 -0.168,0.043 -0.42,0.243 -0.146,0.026 -0.249,-0.087 -0.12,-0.13 0.12,-0.147 0.051,-0.183 -0.085,-0.357 -0.129,-0.165 -0.372,-0.118 -0.143,-0.011 -0.06,-0.2 -0.103,-0.182 -0.212,-0.035 -0.102,-0.021 -0.106,0.056 -0.06,0.147 -0.017,0.113 -0.189,0.086 -0.386,-0.017 -0.383,-0.082 -0.269,-0.027 -0.179,0.021 -0.684,0.279 -0.225,0.037 -0.734,-0.021 -0.416,-0.059 -0.296,-0.01 -0.21,0.087 -0.262,0.207 -0.219,0.111 -0.101,-0.012 -0.062,-0.087 -0.086,-0.118 -0.027,-0.312 -0.109,-0.341 0.072,-0.179 0.216,-0.128 0.075,-0.264 -0.067,-0.396 -0.004,-0.278 0.058,-0.161 -0.078,-0.39 -0.216,-0.619 -0.305,-0.503 -0.394,-0.389 -0.258,-0.371 -0.122,-0.355 0.046,-0.849 0.119,-0.747 0.094,-0.593 -0.027,-0.993 -0.267,-0.646 -0.058,-0.694 0.151,-0.742 0.022,-0.508 -0.1,-0.26 -0.068,-0.039 -0.086,-0.026 -0.675,-0.025 -0.899,-0.033 -0.784,-0.01 -0.851,-0.01 -0.139,-0.094 -0.063,-0.173 0.003,-0.171 0.174,-0.524 -0.025,-0.043 -0.302,-0.011 -0.82,0.085 -0.541,0.084 -0.343,0.028 -0.603,0.143 -0.373,0.302 -0.122,0.379 0.01,0.313 -0.021,0.229 -0.17,0.239 -0.134,0.275 -0.005,0.145 -0.082,0.732 -0.556,0.098 -0.556,0 -0.13,-0.009 -0.687,-0.175 -0.255,-10e-4 -0.218,0.092 -0.421,0.09 -0.402,0.066 -0.405,0.217 -0.108,0.019 -0.269,-0.113 -0.376,0.011 -0.381,0.054 -0.178,0.024 -0.123,-0.066 -0.35,-0.546 -0.466,-0.727 -0.253,-0.456 -0.094,-0.119 -0.162,-0.157 -0.222,-0.297 -0.092,-0.282 0.039,-0.267 -0.13,-0.36 -0.299,-0.453 -0.197,-0.432 -0.094,-0.413 -0.023,-0.352 0.047,-0.294 -0.057,-0.216 -0.163,-0.139 -0.088,-0.177 -0.064,-0.073 -0.135,-0.167 -0.297,-0.184 -0.326,-0.097 -0.716,-0.002 -0.935,-0.003 -0.847,0.014 -0.942,0.016 -0.954,0.016 -0.257,0.024 -0.728,0.011 -0.583,-0.047 -0.216,-0.03 -0.38,-0.023 -0.6,-0.005 -0.325,0.018 -0.778,10e-4 -0.071,0.004 -0.123,0.052 -0.332,-0.072 -0.326,0.024 -0.182,-0.08 -0.4,0.05 -0.194,0.066 -0.311,0.233 -0.467,0.121 -0.173,-0.01 -0.115,-0.039 -0.271,-0.256 -0.21,-0.246 -0.075,-0.137 0.117,-0.034 0.367,-0.052 0.276,-0.025 0.054,-0.065 0.042,-0.76 0.01,-0.771 -0.098,-0.102 -0.096,-0.062 -0.004,-0.053 0.143,-0.097 0.199,-0.113 0.064,-0.051 0.22,-0.204 0.435,-0.472 0.331,-0.116 0.308,-0.124 0.043,-0.045 0.041,-0.092 0.138,0.007 0.044,0.044 0.068,0.1 0.121,0.14 0.219,0.166 0.22,0.179 0.11,0.023 0.177,-0.091 0.206,-0.135 0.303,-0.098 0.072,-0.092 0.039,-0.197 0.024,-0.21 0.026,-0.248 0.062,-0.034 0.109,-0.024 0.201,0.07 0.092,0.073 0.165,0 0.105,-0.066 0.192,-0.122 0.244,-0.049 0.261,-0.118 0.251,-0.15 0.118,-0.014 0.125,0.197 0.112,0.137 0.02,0.086 -0.112,0.164 -0.125,0.216 0.105,0.269 0.025,0.261 -0.003,0.158 0.085,0.064 0.058,0.03 0.09,-0.037 0.179,0.011 0.215,0.082 0.207,-0.009 0.2,-0.101 0.373,-0.392 0.545,-0.684 0.452,-0.429 0.357,-0.175 0.242,-0.204 0.127,-0.235 0.208,-0.159 0.434,-0.127 0.33,-0.144 0.33,-0.469 0.44,-0.844 0.123,-0.753 0.075,-0.458 -0.043,-1.579 -0.029,-0.518 0.067,-0.282 0.164,-0.194 0.448,-0.411 0.301,-0.337 0.23,-0.394 0.441,-0.899 0.194,-0.29 0.087,-0.13 0.266,-0.239 0.373,-0.211 0.48,-0.181 0.741,-0.626 0.589,-0.63 -0.08,-0.757 0.138,-0.628 0.321,-0.798 0.105,-0.845 -0.11,-0.891 0.046,-0.729 0.308,-0.847 0.128,-0.315 0.043,-0.515 -0.002,-0.819 0.391,-1.12 0.37,-0.672 0.414,-0.75 0.158,-0.454 0.21,-0.606 -0.033,-0.487 -0.038,-0.56 0.104,-0.77 -0.039,-0.453 -0.147,-0.394 0.075,-0.249 0.297,-0.101 0.37,-0.394 0.664,-1.029 0.716,-0.502 0.498,-0.159 0.519,0.017 0.339,0.09 0.156,0.162 0.393,0.243 0.628,0.321 0.47,0.402 0.26,0.405 0.202,0.22 0.25,0.076 0.409,-0.033 0.457,0.095 0.476,0.227 0.293,0.084 0.108,-0.059 0.23,0.033 0.526,0.186 0.419,-0.102 0.621,0.077 1.442,0.332 0.077,-0.056 0.034,-0.013 0.123,-0.134 0.313,-0.665 0.265,-0.409 0.124,-0.154 0.306,-0.216 0.36,-0.055 0.345,0.019 0.289,0.095 0.264,0.11 0.292,10e-4 0.299,-0.106 0.444,-0.195 0.468,-0.127 0.402,-0.14 0.662,-0.245 0.259,-0.113 0.329,-0.044 0.922,0.224 0.597,-0.148 0.244,0.043 0.517,-0.159 0.094,-0.107 0.329,-0.541 0.35,-0.158 0.53,0.08 0.298,0.084 0.992,0.231 1.288,0.241 0.379,0.037 0.154,0.027 0.134,-0.038 0.423,-0.304 0.143,-0.043 0.121,0.005 z\"\n\t\t\t\tid=\"CD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 539.05175,432.2924 0.198,0.353 0.095,0.124 0.818,0.834 0.158,0.198 0.405,0.605 0.248,0.408 0.285,0.587 0.027,0.319 -0.037,0.272 -0.057,0.773 -0.074,0.222 -0.359,0.416 -0.016,0.187 0.075,0.156 0.108,0.064 0.068,0.077 -0.041,0.36 0.129,0.141 0.269,0.094 0.681,0.064 0.354,0.052 0.279,0.072 0.133,0.035 0.073,0.127 -0.114,0.415 0.079,0.259 0.233,0.219 0.236,0.093 0.226,0.054 0.788,0.135 0.327,0.152 0.432,0.486 0.542,0.442 0.132,0.234 -0.024,0.213 -0.161,0.258 0.025,0.106 0.249,0.259 0.285,0.264 0.522,0.294 0.904,0.461 0.415,0.308 0.141,0.233 0.232,0.254 0.323,0.232 0.217,0.179 -0.15,0.505 0.045,0.166 0.081,0.144 0.189,0.199 0.075,0.255 0.187,0.319 0.223,0.145 0.373,0.054 0.196,0.148 0.41,0.254 0.396,0.219 0.169,0.15 0.105,0.134 0.09,0.158 0.045,0.158 0.009,0.341 0.068,0.423 0.213,0.289 0.198,0.216 -0.809,-0.248 -0.121,-0.005 -0.143,0.043 -0.423,0.304 -0.134,0.038 -0.154,-0.027 -0.379,-0.037 -1.288,-0.241 -0.992,-0.231 -0.298,-0.084 -0.53,-0.08 -0.35,0.158 -0.329,0.541 -0.094,0.107 -0.517,0.159 -0.244,-0.043 -0.597,0.148 -0.922,-0.224 -0.329,0.044 -0.259,0.113 -0.662,0.245 -0.402,0.14 -0.468,0.127 -0.444,0.195 -0.299,0.106 -0.292,-10e-4 -0.264,-0.11 -0.289,-0.095 -0.345,-0.019 -0.36,0.055 -0.306,0.216 -0.124,0.154 -0.265,0.409 -0.313,0.665 -0.123,0.134 -0.034,0.013 -0.077,0.056 -1.442,-0.332 -0.621,-0.077 -0.419,0.102 -0.526,-0.186 -0.23,-0.033 -0.108,0.059 -0.293,-0.084 -0.476,-0.227 -0.457,-0.095 -0.409,0.033 -0.25,-0.076 -0.202,-0.22 -0.26,-0.405 -0.47,-0.402 -0.628,-0.321 -0.393,-0.243 -0.156,-0.162 -0.339,-0.09 -0.519,-0.017 -0.498,0.159 -0.716,0.502 -0.664,1.029 -0.37,0.394 -0.297,0.101 -0.075,0.249 0.147,0.394 0.039,0.453 -0.104,0.77 0.038,0.56 -0.158,-0.089 -0.152,-0.262 -0.071,-0.053 -0.439,0.118 -0.227,0.106 -0.121,0.104 -0.093,0.016 -0.139,-0.143 -0.11,-0.026 -0.172,0.026 -0.177,-0.002 -0.114,-0.019 -0.076,0.013 -0.207,-0.085 -0.754,-0.216 -0.129,-0.072 -0.151,0.008 -0.391,0.188 -0.207,0.052 -0.624,0.117 -0.668,0.057 -0.256,0.003 -0.176,0.084 -0.113,0.117 -0.077,0.261 -0.131,0.45 -0.055,0.121 0.01,0.179 -0.039,0.301 -0.019,0.27 0.025,0.181 -0.189,0.365 -0.229,0.442 -0.19,0.379 -0.192,0.381 -0.133,-0.261 -0.082,-0.306 -0.032,-0.351 0.018,-0.093 -0.051,-0.104 -0.004,-0.023 -0.064,-0.265 0.065,-0.185 -0.053,-0.193 -0.156,-0.19 -0.141,-0.146 -0.082,-0.131 -0.067,-0.056 -0.155,-0.02 -0.209,-0.068 -0.277,-0.286 -0.268,-0.278 -0.344,-0.356 -0.275,-0.308 -0.338,-0.377 -0.312,-0.349 -0.187,-0.336 -0.076,-0.193 0.091,-0.019 0.135,-0.004 0.057,-0.035 0.003,-0.09 -0.139,-0.265 -0.066,-0.338 -0.115,-0.206 -0.363,-0.317 -0.346,-0.241 -0.11,-0.124 -0.062,-0.177 -0.133,-1.118 -0.059,-0.318 -0.109,-0.139 -0.079,-0.065 -0.03,-0.079 0.014,-0.199 0.046,-0.178 -0.002,-0.07 0.094,-0.156 0,-1.036 -0.051,-0.053 -0.061,-0.09 -0.097,0.007 -0.111,-0.009 -0.11,-0.151 -0.092,-0.19 0.027,-0.135 0.096,-0.112 0.105,-0.099 0.133,-0.082 0.393,-0.166 0.111,-0.083 0.07,-0.102 0.046,-0.138 0.228,-0.534 0.34,-0.532 0.145,-0.11 0.145,-0.352 0.199,-0.431 0.08,-0.201 0.059,-0.2 0.11,-0.161 0.374,-0.266 0.283,-0.466 0.307,0.025 0.314,0.074 0.403,0.037 0.316,-0.09 0.205,-0.182 0.451,-0.145 0.527,-0.168 0.071,-0.25 0.155,-0.131 0.179,-0.116 0.062,-0.015 0.013,0.083 0.109,0.261 0.223,0.257 0.327,0.284 0.093,-0.018 0.203,-0.215 0.51,-0.133 0.129,-0.059 0.362,-0.313 0.436,-0.201 0.096,-0.018 0.157,-0.053 0.44,-0.208 0.313,0.028 0.503,-0.033 0.839,-0.098 0.606,-0.033 0.307,-0.039 0.076,-0.042 0.119,-0.301 0.091,-0.085 0.228,-0.13 0.446,-0.454 0.293,-0.384 0.082,-0.128 0.007,-0.01 0.06,-0.024 0.126,-0.162 -0.125,-0.167 -0.5,-0.341 0.007,-0.046 -0.028,-0.058 0.027,-0.047 0.191,-0.139 0.257,-0.158 0.274,-0.059 0.715,0.012 0.61,-0.034 0.142,0.008 0.476,-0.081 0.325,-0.072 0.334,-0.164 0.757,0.017 0.63,-0.418 0.182,-0.074 0.079,-0.065 0.024,-0.064 0.295,-0.166 0.33,-0.343 0.261,-0.309 0.071,-0.218 0.714,-0.739 0.249,0.015 0.122,-0.091 0.283,-0.494 0.088,-0.09 0.133,-0.031 0.161,-0.056 0.14,-0.146 0.121,-0.218 10e-4,-0.269 -0.055,-0.216 0,-0.105 0.068,-0.096 0.114,-0.097 0.542,-0.266 0.138,-0.129 0.082,-0.116 0.152,-0.021 0.166,0.012 0.105,-0.072 0.118,-0.121 0.376,-0.163 0.348,-0.127 0.366,0.053 0.298,0.066 0.244,0.077 z\"\n\t\t\t\tid=\"CF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 527.12475,453.2194 0.033,0.487 -0.21,0.606 -0.158,0.454 -0.414,0.75 -0.37,0.672 -0.391,1.12 0.002,0.819 -0.043,0.515 -0.128,0.315 -0.308,0.847 -0.046,0.729 0.11,0.891 -0.105,0.845 -0.321,0.798 -0.138,0.628 0.08,0.757 -0.589,0.63 -0.741,0.626 -0.48,0.181 -0.373,0.211 -0.266,0.239 -0.087,0.13 -0.194,0.29 -0.441,0.899 -0.23,0.394 -0.301,0.337 -0.448,0.411 -0.164,0.194 -0.067,0.282 0.029,0.518 0.043,1.579 -0.075,0.458 -0.123,0.753 -0.44,0.844 -0.33,0.469 -0.33,0.144 -0.434,0.127 -0.208,0.159 -0.127,0.235 -0.242,0.204 -0.357,0.175 -0.452,0.429 -0.545,0.684 -0.373,0.392 -0.2,0.101 -0.207,0.009 -0.215,-0.082 -0.179,-0.011 -0.09,0.037 -0.058,-0.03 -0.085,-0.064 0.003,-0.158 -0.025,-0.261 -0.105,-0.269 0.125,-0.216 0.112,-0.164 -0.02,-0.086 -0.112,-0.137 -0.125,-0.197 -0.118,0.014 -0.251,0.15 -0.261,0.118 -0.244,0.049 -0.192,0.122 -0.105,0.066 -0.165,0 -0.092,-0.073 -0.201,-0.07 -0.109,0.024 -0.062,0.034 -0.026,0.248 -0.024,0.21 -0.039,0.197 -0.072,0.092 -0.303,0.098 -0.206,0.135 -0.177,0.091 -0.11,-0.023 -0.22,-0.179 -0.219,-0.166 -0.121,-0.14 -0.068,-0.1 -0.044,-0.044 -0.138,-0.007 -0.041,0.092 -0.069,-0.043 -0.215,-0.189 -0.254,-0.298 -0.092,-0.046 -0.14,0.005 -0.222,0.11 -0.218,0.171 -0.393,0.158 -0.328,0.088 -0.03,0.108 -0.077,0.186 -0.108,0.116 -0.291,0.036 -0.105,0.166 -0.251,0.32 -0.166,0.146 -0.044,-0.062 -0.101,-0.078 -0.206,-0.248 -0.204,-0.309 -0.054,-0.14 -0.058,-0.08 -0.009,-0.31 -0.307,-0.368 -0.77,-0.654 -0.082,-0.195 -0.658,-0.598 0.168,-0.431 0.125,-0.2 0.151,-0.138 0.606,-0.338 0.092,0.013 0.418,0.439 0.133,0.035 0.149,-0.012 0.176,0.018 0.087,-0.086 0.013,-0.113 -0.127,-0.127 -0.019,-0.136 0.09,-0.147 0.05,-0.164 0.131,-0.192 0.014,-0.091 -0.138,-0.099 -0.283,-0.151 -0.193,-0.146 -0.074,-0.139 0.053,-0.178 0.155,-0.145 -0.009,-0.079 -0.137,-0.13 -0.1,-0.139 -0.102,-0.087 -0.285,-0.052 0.055,-0.187 0.104,-0.276 0.026,-0.211 -0.079,-0.554 0.006,-0.1 0.078,-0.051 0.169,0.061 0.171,0.084 0.466,-0.12 0.162,-0.019 0.135,0.106 0.185,0.083 1.072,-0.231 0.021,-0.235 0.061,-0.213 0.008,-0.159 -0.044,-0.103 -0.053,-0.077 -0.032,-0.16 -10e-4,-0.171 0.103,-0.081 0.342,-0.204 0.106,0.007 0.239,0.112 0.224,0.174 0.2,0.366 0.137,0.316 0.221,0.382 0.467,0.156 0.558,0.099 0.302,-0.026 0.431,-0.326 0.244,-0.254 0.079,-0.137 0.142,0.071 0.161,0.334 0.103,0.13 0.026,0.124 -0.072,0.154 0.07,0.099 0.3,0.071 0.263,-0.067 0.118,-0.136 0.197,-0.178 0.002,-0.15 -0.106,-0.097 0,-0.134 0.11,-0.105 0.106,-0.288 0.033,-0.21 0.104,-0.134 0.197,-0.093 0.071,-0.084 0.11,-0.498 -0.057,-0.18 0,-0.149 0.125,-0.191 0.023,-0.312 -0.053,-0.511 -0.035,-0.351 -0.038,-0.368 0.096,-0.483 0.1,-0.503 -0.018,-0.125 -0.139,-0.153 -0.171,-0.139 -0.44,-0.115 -0.164,-0.183 -0.128,-0.194 -0.093,-0.062 -0.482,-0.076 -0.106,-0.11 0.043,-0.314 0.043,-0.463 -0.017,-0.321 0.085,-0.26 0.097,-0.195 0.213,-0.206 0.112,-0.243 0.062,-0.06 0.403,-0.041 0.146,-0.101 0.115,-0.103 0.049,-0.138 0.138,-0.229 0.122,-0.155 0.014,-0.105 -0.026,-0.146 -0.122,-0.287 -0.146,-0.239 -0.088,-0.086 -0.178,-0.562 -0.165,-0.132 -0.322,-0.072 -0.603,-0.064 -0.365,0.101 -0.555,0.189 -0.424,0.131 -0.276,0.074 -0.162,-0.02 -0.074,-0.086 0.108,-0.073 0.053,-0.171 -0.069,-0.245 -0.107,-0.224 -0.061,-0.316 0.026,-0.391 0.104,-0.368 0.223,-0.478 0.014,-0.195 0.673,0.006 0.672,0.006 0.734,-0.005 0.709,-0.004 0.553,0.016 0.266,-0.124 0.253,0.188 0.124,0.041 0.042,-0.015 0.097,0.132 0.315,-0.014 0.05,0.03 0.027,0.16 0.292,-0.004 0.144,0.035 0.117,-0.004 0.17,-0.092 0.122,0.03 0.222,0.12 0.158,0.103 0.221,-0.034 0.512,0.018 0.397,0.099 0.393,0.274 0.263,0.158 0.236,0.234 0.087,-0.042 0.082,-0.064 0.046,-0.028 -0.003,-0.2 -0.132,-0.341 -0.051,-0.289 0.029,-0.237 0.1,-0.171 0.171,-0.103 0.017,-0.16 0.002,-0.022 0.192,-0.381 0.19,-0.379 0.229,-0.442 0.189,-0.365 -0.025,-0.181 0.019,-0.27 0.039,-0.301 -0.01,-0.179 0.055,-0.121 0.131,-0.45 0.077,-0.261 0.113,-0.117 0.176,-0.084 0.256,-0.003 0.668,-0.057 0.624,-0.117 0.207,-0.052 0.391,-0.188 0.151,-0.008 0.129,0.072 0.754,0.216 0.207,0.085 0.076,-0.013 0.114,0.019 0.177,0.002 0.172,-0.026 0.11,0.026 0.139,0.143 0.093,-0.016 0.121,-0.104 0.227,-0.106 0.439,-0.118 0.071,0.053 0.152,0.262 z\"\n\t\t\t\tid=\"CG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 501.62475,311.7424 0.085,0.054 0.2,0.183 -0.047,0.311 -0.229,0.5 -0.121,0.404 -0.013,0.309 0.023,0.145 0.041,-0.002 0.218,0.022 0.112,0 0.351,0.083 0.281,0.122 0.055,0.129 0.036,0.157 0.335,0.214 0.383,0.139 0.13,-0.045 0.476,-0.501 0.184,0.083 0.111,0.266 -0.005,0.142 -0.131,0.531 -0.023,0.285 0.113,0.188 0.012,0.147 -0.033,0.133 -0.19,0.012 -0.255,-0.072 -0.215,-0.229 -0.163,0.028 -0.141,0.059 -0.073,0.216 -0.064,0.258 0.021,0.143 0.101,0.111 0.078,0.234 0.057,0.304 0.043,0.139 -0.047,0.062 -0.134,0.042 -0.112,-0.041 -0.194,-0.363 -0.091,-0.138 -0.154,-0.025 -0.271,0.089 -0.416,0.203 -0.169,-10e-4 -0.142,-0.041 -0.134,-0.172 -0.114,-0.333 -0.036,-0.209 -0.079,0.006 -0.267,-0.06 -0.124,0.083 -0.001,0.34 -0.024,0.424 -0.134,0.273 -0.372,0.472 -0.136,0.205 -0.055,0.148 -0.011,0.128 0.057,0.221 0.077,0.211 -0.065,0.12 -0.196,0.063 -0.139,-0.128 -0.053,-0.228 -0.301,-0.312 0.137,-0.261 -0.023,-0.065 -0.497,-0.136 -0.214,-0.198 -0.3,-0.348 -0.056,-0.149 0.013,-0.486 -0.018,-0.118 -0.04,-0.058 -0.145,0.004 -0.203,0.169 -0.187,0.252 -0.382,0.285 -0.04,0.06 0.129,0.277 -0.006,0.107 -0.312,0.441 -0.059,0.145 -0.395,0.275 -0.181,0.103 -0.548,-0.202 -0.152,-0.024 -0.244,0.135 -0.346,0.129 -0.559,0.129 -0.206,-0.094 -0.097,-0.088 -0.048,-0.134 -0.141,-0.235 -0.158,-0.139 -0.11,-0.152 -0.147,-0.166 -0.095,-0.139 0.126,-0.446 -0.092,-0.156 -0.047,-0.224 0.024,-0.152 -0.05,-0.037 -0.505,-0.088 -0.419,0.028 -0.3,0.149 -0.245,0.248 -0.03,0.054 0.016,0.044 0.122,0.227 -0.207,0.24 -0.317,0.186 -0.224,0.019 -0.099,-0.036 -0.004,-0.256 0.186,-0.095 0.168,-0.167 0.056,-0.236 0.02,-0.166 -0.176,-0.201 0.021,-0.124 0.11,-0.234 0.063,-0.207 0.088,-0.179 0.349,-0.293 0.35,-0.296 0.053,-0.314 0.028,-0.383 0.049,-0.092 0.473,-0.23 0.118,-0.091 0.06,-0.13 0.372,-0.431 0.368,-0.428 0.075,-0.144 0.062,-0.085 0,-0.07 -0.047,-0.054 -0.175,-0.035 -0.06,-0.137 0.191,-0.244 0.239,-0.149 0.232,-0.003 0.093,0.069 -0.005,0.081 0.1,0.087 0.176,0.028 0.217,-0.03 0.216,-0.091 0.133,-0.217 0.077,-0.165 0.339,-0.188 0.231,0.095 0.643,0.025 0.468,-0.051 0.293,-0.128 0.363,0 0.244,0.072 0.043,-0.011 0.068,-0.016 0.066,-0.069 0.23,-0.047 0.03,-0.057 -0.009,-0.059 -0.041,-0.029 -0.283,0.03 -0.107,-0.045 -0.028,-0.104 0.091,-0.182 0.208,-0.148 0.176,-0.036 0.127,0.04 0.309,0.274 0.075,0.009 0.043,-0.049 0.064,-0.028 0.107,0.054 0.12,0.17 0.021,0.026 0.691,-0.06 0.155,0 0.469,0.299 z\"\n\t\t\t\tid=\"CH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 459.39375,433.6934 0.175,0.188 0.222,0.129 0.337,-0.016 0.244,0.077 0.211,0.145 0.142,0.321 0.155,0.231 0.067,0.33 0.245,0.173 0.192,0.079 0.26,0.239 0.269,0.122 0.278,-0.028 0.13,0.125 0.208,0.088 0.208,0.006 0.183,-0.276 0.242,-0.109 0.611,-0.22 0.241,-0.1 0.244,-0.063 0.588,-0.02 0.547,0.068 0.271,0.051 0.186,-0.038 0.176,0.131 0.182,0.275 0.149,0.088 0.152,0.095 0.113,0.217 0.132,0.215 0.072,0.095 0.164,0.212 0.141,0.003 0.139,-0.092 0.06,-0.068 0.027,0.14 -0.055,0.227 0.011,0.141 0.077,0.054 -0.042,0.181 -0.161,0.308 -0.001,0.182 0.16,0.057 0.114,0.193 0.068,0.33 0.069,0.11 0.007,0.068 0.116,0.799 0.143,0.801 -0.091,0.104 -0.125,0.031 -0.081,0.037 -0.023,0.075 0.053,0.109 -0.035,0.1 -0.156,0.069 -0.339,0.254 -0.023,0.101 -0.09,0.216 -0.075,0.132 -0.111,0.245 -0.176,0.648 -0.065,0.537 -0.01,0.166 -0.068,0.115 -0.077,0.167 -0.368,0.459 -0.188,0.375 0.024,0.163 0.009,0.164 -0.056,0.118 0.01,0.317 0.045,0.265 0.066,0.26 0.267,0.736 0.139,0.447 0.086,0.36 0.076,0.242 0.071,0.098 0.029,0.093 0.396,0.067 0.078,0.053 0.108,0.469 -0.02,0.212 -0.078,0.081 0.002,0.179 -0.018,0.223 -0.058,0.088 -0.222,0.011 -0.151,0.084 -0.198,-0.034 -0.019,-0.055 -0.107,-0.02 -0.294,-0.127 0.048,-0.407 -0.136,-0.017 -0.105,0.054 -0.209,0.488 -0.1,0.084 -1.468,-0.252 -0.319,-0.203 -0.382,-0.046 -0.666,0.023 -0.549,0.061 -0.157,0.123 1.386,-0.072 0.149,0.014 0.07,0.074 -1.752,0.161 -0.668,0.096 -0.198,-0.026 -0.15,-0.156 -0.726,-0.019 -0.149,0.051 -0.09,0.115 0.286,-0.025 0.451,-0.006 0.121,0.088 -1.412,0.115 -0.979,0.22 -0.415,0.163 -1.366,0.535 -0.833,0.252 -0.218,0.093 -0.379,0.262 -0.487,0.165 -0.546,0.308 -0.333,0.069 -0.075,-0.098 -0.009,-0.52 -0.046,-0.697 0.017,-0.267 0.044,-0.251 0.001,-0.208 0.166,-0.078 0.044,-0.087 0.025,-0.271 0.155,-0.247 0.003,-0.43 0.046,-0.089 0.035,-0.114 -0.066,-0.282 -0.086,-0.532 -0.042,-0.035 -0.038,0.023 -0.087,0.01 -0.343,-0.184 -0.265,-0.032 -0.186,-0.157 -0.013,-0.179 -0.09,-0.105 -0.063,-0.207 -0.093,-0.237 -0.261,-0.144 -0.245,-0.035 -0.174,0.031 -0.204,-0.009 -0.234,-0.08 -0.162,-0.09 -0.153,-0.174 -0.142,-0.138 -0.113,0.017 -0.138,-0.033 -0.136,-0.063 -0.044,-0.049 0.568,-0.554 0.193,-0.271 0.021,-0.166 0.002,-0.167 0.062,-0.171 0.016,-0.261 -0.314,-0.95 -0.08,-0.294 -0.084,-0.086 -0.054,-0.033 0.159,-0.122 0.219,0.032 0.336,0.095 0.073,-0.094 0.254,-0.48 -0.007,-0.178 -0.025,-0.123 0.149,-0.329 0.118,-0.127 0.061,-0.137 -0.019,-0.188 -0.089,-0.07 -0.118,0.013 -0.141,-0.046 -0.215,-0.108 -0.109,-0.096 0.034,-0.435 0.02,-0.135 0.076,-0.078 0.118,-0.021 0.333,-0.013 0.27,0.05 0.237,0.029 0.126,0 0.102,0.129 0.136,0.132 0.12,-10e-4 0.042,-0.098 -0.028,-0.429 -0.08,-0.227 -0.181,-0.219 -0.468,-0.187 -0.011,-0.261 0.047,-0.283 0.101,-0.105 0.348,-0.18 -0.061,-0.097 -0.111,-0.103 -0.221,-0.104 0.051,-0.339 0.011,-0.303 -0.187,0.034 -0.192,0.018 -0.162,-0.093 -0.136,-0.184 -0.025,-0.506 0,-0.585 -0.026,-0.259 0.052,-0.138 0.165,-0.127 0.18,-0.165 0.064,-0.105 0.083,-0.002 0.216,-0.063 0.196,-0.144 0.183,-0.3 0.247,-0.241 0.278,0.018 0.082,-0.044 0.098,-0.008 0.116,0.159 0.117,0.121 0.083,0.003 0.062,0.229 0.507,0.096 0.217,0.063 0.183,0.167 0.064,0.004 0.077,-0.035 0.06,-0.058 0.012,-0.064 -0.079,-0.15 0.035,-0.135 0.082,-0.121 0.131,-0.008 0.197,-0.034 0.226,0 0.168,0.022 0.067,-0.121 -0.064,-0.34 0.017,-0.188 0.027,-0.158 0.063,-0.064 0.251,0.199 0.23,0.072 0.165,0.006 0.046,-0.038 -0.07,-0.217 0.019,-0.065 0.061,-0.038 0.108,-0.022 0.293,-0.088 0.03,0.017 0.055,0.342 -0.025,0.112 0.062,0.232 0.076,0.215 -0.006,0.088 -0.063,0.133 -0.074,0.122 0.008,0.05 0.117,0.083 0.224,0.086 0.232,0.02 0.129,-0.125 0.134,-0.102 0.093,-0.091 0.032,-0.135 0.147,-0.099 0.42,-0.124 0.386,-0.019 0.096,0.039 z m 6.839,14.913 -0.077,0.111 -0.372,-0.071 0.088,-0.093 0.361,0.053 z\"\n\t\t\t\tid=\"CI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 26.585748,523.5834 -0.09,10e-4 -0.114,-0.022 -0.074,-0.012 -0.008,-0.028 0.029,-0.085 0.06,-0.042 0.119,0.006 0.081,0.059 0.007,0.097 z\"\n\t\t\t\tid=\"CK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 286.31375,528.3164 0.522,0.544 -0.227,0.74 -0.363,1.183 -0.28,0.917 -0.046,0.123 -0.058,0.18 -0.605,0.261 -0.882,0.38 -0.452,0.199 -0.569,0.256 -0.138,0.209 -0.165,0.113 -0.181,0.146 -0.069,0.16 -0.169,0.101 -0.153,0.361 0,0.277 0.098,0.189 0.17,0.08 0.054,0.228 0.054,0.16 0.123,0.126 -0.031,0.101 -0.1,0.076 -0.184,0.042 -0.125,0.228 -0.144,0.566 -0.023,0.203 0.164,0.513 0.087,0.277 0.236,1.007 0.035,0.274 -0.324,0.384 -0.129,0.233 -0.046,0.206 0.002,0.163 0.029,0.149 0.27,0.475 0.313,0.425 0.154,0.222 0,0.3 -0.077,0.171 -0.167,0.063 -0.37,0.117 -0.154,0.171 -0.169,0.026 -0.161,-0.137 -0.168,0.034 -0.215,0.12 -0.081,0.292 -0.188,0.498 -0.161,0.137 -0.12,0.381 -0.214,0.547 -0.103,0.33 -0.054,0.242 -0.216,0.155 -0.251,0.307 -0.193,0.299 -0.077,0.087 -0.146,0.026 -0.107,0.269 -0.364,0.406 -0.087,0.472 -0.132,0.251 -0.023,0.455 -0.201,0.834 -0.037,0.185 -0.203,0.146 -0.268,0.324 -0.087,0.237 0.124,0.71 0.154,0.719 0.01,0.337 -0.06,0.459 -0.041,0.2 0.102,0.083 0.169,0.053 0.054,0.176 -0.123,0.124 -0.054,0.221 -0.138,0.248 -0.409,0.098 -0.144,-0.089 -0.046,0.08 0.023,0.177 -0.091,0.209 -0.212,0.56 -0.14,0.509 -0.081,0.223 0.033,0.187 0.069,0.106 0.007,0.098 -0.116,0.124 -0.106,0.197 -0.115,0.027 -0.123,-0.053 -0.13,0.116 -0.026,0.243 -0.072,0.309 -0.033,0.361 -0.053,0.463 0.167,0.318 0.211,0.577 0.158,0.138 0.176,-0.009 0.138,0.117 0.077,0.135 -0.103,0.242 -0.182,0.038 -0.023,0.135 0.054,0.307 0.069,0.298 0.174,0.143 0.079,0.399 0.169,0.136 -0.021,0.512 0.17,0.602 0.18,0.175 0.084,0.082 -0.056,0.264 -0.143,0.21 -0.031,0.337 0.054,0.247 0.183,0.233 0.143,0.026 0.204,-0.095 0.215,0.11 0.031,0.201 0.031,0.183 -0.115,0.238 -0.123,0.439 -0.033,0.438 0.036,0.667 0.056,0.519 0.012,0.327 0.014,0.148 -0.077,0.102 -0.187,0.052 -0.159,0.021 -0.138,0.083 -0.031,0.167 -0.108,0.277 -0.111,0.206 -0.195,0.3 -0.124,0.311 -0.099,0.205 0.009,0.142 -0.071,0.273 -0.073,0.228 -0.154,0.768 -0.206,0.16 -0.164,0.079 -0.084,0.103 0.064,0.209 0.174,0.063 0.062,0.168 -0.023,0.263 0.115,0.244 -0.011,0.296 0.111,0.56 -0.1,0.367 0.034,0.318 -0.003,0.315 -0.146,0.246 -0.299,0.047 -0.165,0.227 -0.281,0.247 -0.031,0.199 -0.046,0.18 -0.115,0.066 -0.176,0 -0.146,0.028 -0.204,0.234 -0.218,0.126 -0.05,0.189 0.019,0.23 -0.115,0.143 -0.146,0.267 -0.092,0.286 0.092,0.268 0.1,0.479 0.015,0.201 -0.126,0.397 -0.104,0.256 0.1,0.327 0.084,0.183 -0.079,0.402 -0.067,0.253 0.054,0.464 0.2,0.522 0.191,0.465 0.028,0.542 0.049,0.431 0.091,0.467 0.192,0.186 0.146,0.156 -0.03,0.225 -0.107,0.274 -0.154,0.206 -0.38,0.068 -0.309,0.186 -0.249,0.129 -0.189,0.156 -0.136,0.166 -0.067,0.182 0.045,0.793 -0.03,0.293 -0.127,0.416 -0.119,0.336 -0.051,0.101 -0.015,0.149 -0.023,0.139 -0.133,0.032 -0.189,-0.062 -0.107,0.04 -0.077,0.109 0.065,0.26 0.069,0.459 0.096,0.195 -0.026,0.155 -0.036,0.334 -0.124,0.266 -0.166,-10e-4 -0.107,0.11 -0.046,0.19 0.05,0.248 0.218,0.203 0.077,0.13 -0.039,0.171 -0.169,0.07 -0.1,0.141 -0.095,0.313 -0.127,0.354 -0.135,0.262 -0.026,0.359 0.192,0.384 -0.021,0.376 -0.014,1.105 -0.019,0.376 0.059,0.624 -0.074,0.172 -0.039,0.164 0.188,0.455 0.209,0.738 0.056,0.294 -0.03,0.206 -0.281,0.175 -0.233,0.073 -0.138,-0.124 -0.092,0.051 -0.107,0.217 -0.123,0.176 -0.046,0.175 0.13,0.228 0.069,0.435 -0.146,0.187 -0.107,0.208 0.039,0.27 0.046,0.489 -0.092,0.813 0.124,0.29 0.134,0.139 0.438,0.166 0.329,0.083 0.087,0.271 -0.037,0.22 -0.158,0.109 -0.238,0.095 0,0.356 0.203,0.335 0.23,0.243 0.05,0.219 -0.013,0.224 -0.161,0.188 0.221,0.407 0.101,0.276 -0.101,0.213 -0.144,0.32 -0.126,0.153 0,0.174 -0.052,0.354 -0.012,0.347 0.042,0.207 1.387,0.164 0.317,0.064 0.173,0.207 -0.025,0.26 -0.173,0.277 -0.111,0.521 -0.272,0.087 -0.272,-0.139 -0.295,0.048 -0.256,0.034 -0.368,0.015 -0.489,0.067 -0.299,-0.077 -0.025,0.191 0.087,0.331 0.644,0.104 0.606,0.192 0.182,0.351 0.247,0.398 0.252,0.247 0.012,0.403 -0.396,0.422 -0.049,0.299 -0.52,0.088 -0.148,0.176 -0.074,0.583 0.062,0.46 0.198,0.159 0.136,0.301 -0.148,0.355 -0.35,0.245 -0.187,0.234 0.117,0.187 0.158,0.296 0.044,0.161 0.086,0.438 0.101,0.612 -0.012,0.297 -0.093,0.222 -0.348,0.35 -0.235,0.162 -0.046,0.433 -0.018,0.324 0.024,0.293 0.151,0.234 -0.012,0.236 -0.207,0.05 -0.177,0.113 -0.173,0.418 -0.504,0.428 -0.177,0.192 0.012,0.329 -0.199,0.471 -0.167,0.411 -0.128,0.384 0.025,0.405 0.284,0.178 0.223,0.395 0.099,0.499 -0.173,0.575 -0.402,0.217 -0.238,0.245 -0.072,0.186 0.063,0.605 -0.017,0.285 -0.063,0.268 -0.104,0.208 -0.217,0.232 -0.384,0.203 -0.326,0.14 -0.146,0.16 -0.171,0.353 -0.152,0.39 0.038,0.483 -0.916,0.057 -0.062,0.36 -0.198,0.284 -0.062,0.514 0.201,0.497 0.096,0.418 -0.164,0.505 0.06,0.52 0.018,0.415 0.322,0.462 0.21,0.573 0.105,0.485 0.063,0.379 0.084,0.23 0.132,0.261 0.061,0.302 0.198,0.098 0.356,-0.282 0.251,-0.191 0.175,-0.068 0.514,0.045 0.31,-0.178 0.14,0.019 0.189,0.1 0.147,0.21 0.111,0.477 0.068,0.535 -0.087,0.547 -0.145,0.119 -0.049,0.157 0.049,0.335 0.161,0.236 -0.003,0.338 -0.178,0.769 -0.116,0.317 0.206,0.358 0.184,0.319 0.371,0.238 0.305,0.338 0.21,0.28 -0.05,0.38 0.147,0.115 0.567,0.008 0.847,0.013 1.324,0.019 1.292,0.019 1.467,0.027 0.695,0.306 0.629,0.277 0.792,0 0.791,0.328 0.587,0.217 0.352,0.081 0.361,0.079 0.05,0.303 -1.583,-0.43 -0.355,-0.234 -0.301,-0.027 -0.578,0.292 -0.319,0.697 -0.167,0.198 -0.401,0.188 -0.404,0.037 -1.357,0.679 -0.483,0.058 -0.33,0.181 -0.322,0.26 -0.124,0.561 0.05,0.342 -0.367,1.229 -0.091,0.688 -0.002,0.351 0.105,0.575 -0.135,0.987 -0.244,0.216 -0.603,0.277 -0.41,-0.201 -0.702,-0.18 -0.5,-0.381 -0.643,-0.269 -0.206,-0.158 -0.568,-0.76 -0.061,-0.251 -0.041,-0.317 0.3,-0.451 0.161,-0.033 0.47,0.014 0.391,-0.073 0.25,0.242 0.069,0.528 -0.11,0.282 -0.1,0.174 0.031,0.133 0.281,-0.185 0.143,-1.182 0.955,-0.586 0.313,-0.342 0.305,-0.526 0.047,-0.15 0.023,-0.197 -0.203,-0.162 -0.451,-0.215 -1.432,1.103 -0.649,0.291 -0.418,0.317 -0.506,0.57 -0.096,0.169 -0.107,0.38 -0.051,0.419 -0.499,-0.191 -0.762,-0.606 -0.153,-0.222 0.153,-0.31 0.232,-0.258 0.016,-0.863 0.059,-0.302 0.161,-0.241 0.292,-0.265 0.145,-0.062 0.123,0.115 0.016,0.202 0.486,-0.015 0.943,-0.761 0.388,-0.018 0.512,0.17 0.578,-0.103 0.104,-0.077 0.12,-0.178 -0.431,-0.209 -0.413,-0.106 -1.161,-0.073 -0.251,0.081 -0.344,0.401 -0.114,-0.1 -0.073,-0.203 -0.394,-0.143 -0.189,0.029 -0.181,0.193 0.029,0.301 -0.101,0.322 -0.365,0.32 -0.248,0.51 0.012,0.398 -0.02,0.207 -0.091,0.11 -0.188,0.132 -0.605,-0.09 -0.342,-0.418 -0.133,-0.285 -0.387,-0.309 0.84,-0.383 0.295,-0.218 0.27,-0.485 0.201,-0.309 -0.143,-0.216 -0.168,-10e-4 0.016,0.345 -0.185,0.282 -0.387,-0.134 -0.571,0.419 -0.351,-0.112 -0.572,0.123 -0.28,-0.226 -0.06,-0.286 0.101,-0.298 -0.105,-0.504 -0.158,-0.122 -0.161,0.028 -0.072,-0.299 -0.174,-0.525 -0.077,-0.142 -0.083,-0.243 0.086,-0.06 0.197,0.069 0.172,0.158 0.262,0.02 0.577,0.342 0.24,-0.082 0.13,-0.078 0.049,-0.284 0.003,-0.269 0.099,0 0.328,0.344 0.208,-0.032 0.368,0.091 0.187,-0.037 0.345,-0.128 0.543,-0.378 0.282,-0.39 0.135,-0.053 0.167,0.05 0.112,0.112 0.002,0.271 0.127,0.252 0.173,0.205 0.048,0.252 -0.035,0.247 -0.309,0.348 -0.058,0.121 0.104,0.129 0.128,-0.061 0.176,-0.172 0.1,-0.236 0.027,-0.123 0.011,-0.176 -0.013,-0.214 -0.251,-0.607 -0.032,-0.137 0,-0.274 0.286,-0.253 0.081,-0.196 0.013,-0.379 -0.148,-0.261 -0.614,-0.6 -1.026,-0.6 -0.118,0.063 -0.08,0.109 0.095,0.078 0.136,0.04 0.914,0.495 0.238,0.287 0.156,0.077 0.185,0.19 -0.047,0.28 -0.921,0.274 -0.73,0.594 -0.546,0.361 -0.379,-0.132 -0.18,-0.366 -0.191,-0.473 -0.287,-0.275 -0.163,0.025 -0.131,-0.051 -0.104,-0.146 -0.221,0.121 -0.486,-0.327 -0.141,-0.143 0.356,-0.46 0.392,0.177 0.095,-1.287 -0.122,-0.291 -0.51,-0.317 -0.25,0.041 -0.342,-0.043 -0.23,-0.145 -0.262,-0.058 -0.222,-0.085 -0.29,-0.196 -0.35,-0.105 -0.473,-0.809 -0.203,-0.423 -0.11,-0.462 0.724,-0.01 0.424,-0.075 0.103,-0.191 -0.149,-0.367 -0.208,-0.287 0.152,-0.271 0.217,-0.209 0.226,0.093 0.557,0.466 0.096,0.315 0.396,0.964 0.096,0.087 0.047,0.09 0.819,0.542 0.115,-0.008 -0.051,-0.454 0.236,-0.616 0.229,-0.203 0.115,0.002 0.012,-0.103 -0.223,-0.255 0.109,-0.341 -0.071,-0.011 -0.197,0.219 -0.396,1.072 -0.243,0.196 -0.333,-0.486 -0.189,-0.351 -0.093,-0.124 0.033,-0.548 0.66,0.111 -0.227,-0.18 -0.77,-0.315 -0.192,-0.153 -0.143,-0.057 -0.256,-0.37 -0.318,-0.313 0.548,-0.563 0.282,-0.395 0.882,0.21 0.171,-0.122 -0.148,-0.289 -0.174,0.088 -0.275,-0.18 -0.428,-0.538 0.015,-0.273 0.078,-0.502 0.17,-0.106 0.36,-0.104 0.411,0.163 0.179,0.132 0.155,-0.063 -0.157,-0.37 -0.268,-0.141 -0.299,-0.264 0.031,-0.292 0.096,-0.241 0.072,-0.263 0.05,-0.369 -0.027,-0.287 0.085,-0.132 0.132,-0.06 0.008,-0.107 -0.26,0.022 -0.094,0.362 -0.036,0.331 -0.185,0.266 -0.079,0.301 -0.047,0.36 -0.103,0.414 -0.225,-0.158 -0.132,-0.162 -0.051,-0.11 0.023,-0.211 -0.061,-1.301 -0.006,-1.082 0.115,-0.839 0.318,-0.333 0.145,-0.097 0.132,0.043 0.203,-0.003 0.134,-0.121 -0.456,-0.2 -0.276,0.114 -0.205,0.16 -0.369,-0.12 -0.07,-0.429 -0.218,-0.37 -0.038,-0.473 0.017,-0.682 0.517,0.059 0.421,0.133 1.113,-0.011 0.914,0.653 0.403,-0.087 -0.019,-0.132 -0.309,-0.165 -0.192,-0.365 -0.113,-0.106 -0.053,-0.219 -0.018,-0.256 -0.227,-0.936 -0.091,0.024 -0.087,0.32 -0.189,0.535 -0.264,0.261 -0.404,0.105 -0.399,0.06 -0.347,-0.103 -0.081,-0.222 0.009,-0.257 -0.15,-0.126 -0.392,-0.11 -0.111,-0.063 -0.129,-0.231 0.187,-0.351 0.153,-0.209 0.188,0.042 0.178,0.095 0.228,0.274 0.224,0.053 0.255,-0.219 0.05,-0.148 -0.16,-0.093 -0.146,-0.037 -0.227,-0.116 -0.446,-0.419 0.223,-0.425 0.526,-0.486 0.161,-0.111 -0.139,-0.409 0.158,-0.446 -0.162,-0.367 -0.292,-0.395 -0.395,-0.087 -0.084,0.115 -0.014,0.162 0.063,0.122 -0.037,0.088 -0.09,-0.003 -0.501,-0.087 -0.336,-0.263 -0.548,-0.239 -0.071,-0.187 -0.06,-0.274 0.192,-0.472 -0.097,-0.007 -0.356,0.365 -0.538,0.191 -0.396,0.063 -0.174,0.148 -0.069,0.123 0.105,0.072 0.229,0.018 0.167,0.458 -0.042,0.176 -0.082,0.118 -0.186,0.023 -0.389,-0.316 -0.205,-0.359 0.005,-0.284 0.139,-0.387 0.617,-0.519 0.171,-0.219 0.362,-0.242 0.483,-0.546 0.422,-0.303 -0.205,-0.25 -0.216,-0.376 0.022,-0.521 0.852,-0.206 0.369,0.093 0.471,-0.016 0.263,-0.124 0.191,-0.027 0.402,-0.143 0.173,-0.202 0.041,-0.154 -0.002,-0.134 -0.047,-0.166 -0.065,-0.428 0.066,-0.143 0.172,-0.17 0.226,-0.053 0.104,0.013 0.268,0.156 -0.054,0.222 -0.107,0.267 -0.219,1.065 -0.11,0.241 -0.173,0.209 0.115,0.437 -0.173,0.307 -0.772,0.327 -0.102,0.019 0.058,0.117 0.447,-0.028 0.346,-0.069 0.343,-0.276 0.108,-0.42 0.142,-0.817 0.186,-0.115 0.217,-0.026 0.113,0.192 -0.037,0.431 -10e-4,0.417 -0.288,1.241 -0.348,0.5 -0.039,0.132 0.014,0.156 0.276,-0.023 0.21,-0.269 0.152,-0.344 0.152,-0.478 -0.017,-0.345 0.046,-0.213 0.063,-0.697 0.105,-0.352 -0.007,-0.491 -0.19,-0.185 -0.266,-0.112 -0.067,-0.3 0.139,-0.591 0.508,0.015 0.481,-0.402 0.315,-0.146 0.179,0.03 0.629,0.388 0.125,0.005 -0.02,-0.14 -0.098,-0.099 -0.248,-0.131 -0.456,-0.416 -0.614,-0.068 0.113,-0.539 0.119,-0.491 0.298,-0.068 0.5,-0.161 0.953,-0.734 0.166,-0.551 0.045,-0.618 -0.459,-0.161 -0.487,-0.403 -0.393,-0.214 -0.348,-0.269 0.068,-0.401 0.045,-0.652 0.437,-0.14 0.203,-0.892 -0.293,-0.681 0.07,-0.506 0.382,-0.431 0.068,-0.298 0.105,-0.327 0.336,-0.033 0.008,-0.178 -0.03,-0.324 -0.221,-0.382 -0.009,-0.528 0.208,-0.623 0.334,0.043 0.064,-0.026 -0.237,-0.376 -0.193,-0.413 0.033,-0.165 0.185,-0.14 0.214,-0.078 0.232,0.211 0.332,0.674 0.05,-0.173 -0.134,-0.686 -0.11,-0.851 -0.35,0.111 -0.321,-0.06 -0.121,-0.131 -0.12,-0.191 0.113,-0.233 0.113,-0.173 0.235,-0.218 0.488,-0.077 0.353,-0.273 0.118,-0.561 -0.116,0.055 -0.191,0.494 -0.322,0.167 -0.164,-0.025 -0.193,-0.092 -0.38,-0.43 -0.21,-0.1 -0.204,-0.011 -0.175,0.109 -0.446,0.758 -0.19,0.128 -0.785,0.061 -0.288,-0.088 -0.312,-0.117 0.038,-0.187 0.095,-0.199 0.177,-0.103 0.003,-0.114 -0.244,-0.029 -0.281,-0.209 -0.125,-0.265 -0.059,-0.474 -0.252,-0.747 -0.05,-0.534 0.178,-0.38 0.382,-1.486 0.117,-0.754 0.205,-0.661 -0.004,-0.435 0.53,-0.397 0.202,-0.237 0.45,-1.331 0.066,-0.715 -0.714,-2.157 -0.11,-0.41 -0.035,-0.509 0.17,-0.842 0.02,-0.319 -0.146,-0.46 -0.407,-0.75 -0.008,-0.382 0.171,-0.392 -0.166,-0.486 0.081,-0.3 0.089,-0.235 0.638,0.126 0.29,-0.06 0.155,-0.142 0.121,-0.397 0.061,-0.62 0.038,-0.267 0.055,-0.389 0.313,-0.156 0.108,-0.368 0.262,-0.512 0.27,-1.426 0.267,-0.351 0.27,-0.404 -0.103,-0.598 0.174,-0.276 0.16,-0.201 0.141,-0.364 0.192,-0.344 0.457,-0.493 0.116,-0.601 0.355,-1.035 0.07,-0.662 0.11,-0.447 -0.032,-0.416 0.213,-0.505 0.205,-0.425 0.064,-0.236 0.467,-0.56 0.079,-0.447 -0.167,-0.303 -0.003,-0.468 -0.13,-0.647 0.301,-0.242 0.122,-0.177 0.392,-1.03 -0.025,-0.403 0.113,-0.5 -0.258,-0.591 -0.036,-1.324 -0.144,-1.015 -0.238,-1.069 0.022,-0.596 -0.145,-0.74 -0.009,-0.426 0.111,-0.964 0.755,-0.605 0.147,-0.677 0.09,-0.912 -0.031,-0.663 -0.074,-0.297 -0.372,-0.487 -0.094,-0.869 0.072,-0.227 0.308,-0.244 0.217,-0.338 0.112,-0.524 0.226,-0.412 0.089,-0.994 0.191,-0.789 0.095,-0.275 0.3,-0.345 0.056,-0.092 0.046,-0.263 -0.014,-0.62 0.046,-0.378 0.239,-0.743 0.028,-0.343 0.265,-0.762 0.06,-0.547 0.113,-0.288 -0.044,-0.324 0.075,-0.724 -0.18,-0.408 -0.04,-0.238 0.227,-0.739 0.154,-0.18 0.249,-0.343 0.105,-0.385 0.019,-0.244 -0.318,-1.213 -0.043,-0.413 0.078,-0.959 0.109,-0.618 -0.036,-0.492 0.036,-0.253 0.055,-0.317 0.218,-0.384 0.05,-0.273 -0.077,-0.114 -0.259,-0.139 -0.214,-0.348 -0.015,-0.343 0.069,-0.25 0.016,-0.353 0.318,-0.069 0.17,-0.196 0.161,-0.366 0.203,-0.885 0.087,-1.095 0.121,-0.658 0.085,-0.325 0.072,-0.678 0.118,-0.443 0.021,-0.408 -0.023,-0.311 -0.305,-1.577 0.01,-0.579 0.129,-0.897 -0.002,-1.261 -0.026,-0.294 -0.115,-0.275 -0.034,-0.374 -0.184,-0.648 -0.166,-1.299 -0.003,-0.685 -0.072,-0.58 -0.159,-0.154 0.114,-0.035 0.267,-0.024 0.276,-10e-4 0.35,-0.123 0.373,-0.228 0.243,-0.331 0.104,-0.302 0,-0.265 -0.109,-0.337 -0.03,-0.238 0.129,-0.114 0.341,-0.044 0.276,-0.225 0.212,-0.196 0.044,0.332 0.385,0.446 0.125,0.502 0.087,0.063 0.529,0.251 0.009,0.059 -0.077,0.094 -0.077,0.122 0.054,0.171 0.096,0.235 0.032,0.218 0.059,0.225 0.058,0.345 0.035,0.313 0.135,0.461 0.027,0.285 0.002,0.172 0.105,0.168 0.205,0.202 0.277,0.203 0.22,0.237 0.168,0.161 0.204,0.131 0.157,0.121 0.062,0.083 0.021,0.067 -0.068,0.064 -0.248,0.313 -0.346,0.477 0.006,0.058 0.331,0.343 0.053,0.136 -0.004,0.192 -0.111,0.231 -0.357,0.073 -0.08,0.063 -0.01,0.074 0.082,0.098 -0.013,0.228 0.129,0.252 -0.066,0.086 -0.132,0.116 -0.003,0.114 0.043,0.126 0.139,0.103 0.55,0.354 0.043,0.049 -0.008,0.037 -0.213,0.237 -0.022,0.146 0.006,0.241 0.03,0.156 0.069,0.065 0.276,0.073 0.341,0.542 0.328,0.511 -0.004,0.44 0.034,0.514 0.208,0.404 0.029,0.323 0.07,0.368 0.248,0.224 0.097,0.442 0.025,0.236 -0.015,0.155 0.193,0.482 0.022,0.415 -0.046,0.298 0.002,0.167 0.027,0.117 0.166,0.105 0.073,0.066 0.244,0.029 0.357,0.007 0.611,-0.11 0.477,-0.096 z m -118.111,13.303 -0.433,0.097 0.014,-0.173 0.109,-0.15 0.32,0.086 0.15,0.016 -0.16,0.124 z m 85.53,21.082 -0.503,0.072 -0.017,-0.021 0.029,-0.059 0.115,-0.103 0.14,-0.125 0.03,-0.004 0.052,0.01 0.058,0.023 0.15,0.084 0.044,0.058 -0.016,0.048 -0.082,0.017 z m 14.118,34.733 -0.211,0.081 -0.197,0.02 -0.2,-0.059 -0.35,0.005 -0.348,-0.15 -0.327,-0.212 -0.091,-0.123 0.04,-0.176 0.235,-0.407 0.224,-0.768 0.149,-1.097 -0.12,-0.415 0.015,-0.171 0.055,-0.207 0.027,-0.212 -0.017,-0.214 0.028,-0.198 0.247,-0.417 0.037,-0.187 0.007,-0.203 0.107,-0.419 -0.033,-0.139 -0.091,-0.117 0.074,-0.103 0.858,0.307 0.57,0.071 0.03,0.318 0.11,0.25 0.065,0.448 0.089,0.102 -0.046,0.321 -0.263,0.139 0.023,0.296 0.151,0.279 -0.22,0.1 -0.238,0.06 -0.055,0.078 -0.172,0.061 -0.209,0.155 0.063,0.138 0.263,0.313 0.294,0.218 0.161,0.326 0.209,0.341 -0.102,0.217 -0.191,0.308 -0.305,0.205 -0.281,0.123 0.033,0.507 -0.097,0.207 z m -2.512,1.009 -0.397,0.068 -0.09,-0.115 0.001,-0.098 0.068,-0.08 0.204,-0.053 0.133,0.066 0.07,0.094 0.022,0.086 -0.011,0.032 z m 2.408,0.849 0.059,0.191 -0.124,0.026 -0.198,-0.03 -0.096,0.151 -0.049,0.03 -0.455,-0.134 -0.071,-0.06 0.009,-0.199 0.485,-0.017 0.309,-0.127 0.043,0.02 0.088,0.149 z m 0.211,2.21 -0.138,0.168 -0.218,0.03 -0.339,0.195 -0.036,0.169 -0.017,0.208 0.234,0.251 0.116,0.292 0.139,0.438 0.101,0.418 -0.009,0.129 0.025,0.218 0.167,0.338 0.016,0.153 -0.019,0.152 -0.067,0.282 -0.053,0.038 -0.165,0.028 -0.013,0.171 -0.041,0.056 -0.47,0.018 -0.232,-0.078 0.028,-0.515 -0.297,-0.202 -0.204,-0.34 -0.23,-0.586 -0.193,-0.18 -0.225,-0.462 -0.334,-0.394 0.385,-0.25 -0.06,-0.436 0.225,-0.149 0.338,-0.156 0.249,0.123 0.224,-0.043 0.1,-0.104 -0.03,-0.444 0.071,-0.349 0.247,-0.18 0.266,-0.021 0.1,0.197 0.131,0.194 0.322,0.153 -0.001,0.2 -0.093,0.27 z m 2.103,1.514 -0.68,0.315 -0.341,-0.106 -0.132,-0.232 -0.064,-0.195 -0.07,-0.33 0.116,-0.177 0.25,-0.254 0.092,-0.164 0.045,-0.193 -0.016,-0.18 0.032,-0.172 0.147,-0.06 0.503,0.192 0.522,0.288 0.186,0.199 0.035,0.159 -0.228,0.351 -0.146,0.289 -0.251,0.27 z m -1.813,0.163 -0.092,0.045 -0.083,-0.007 -0.085,-0.135 -0.028,-0.178 -0.183,-0.266 -0.052,-0.125 0.004,-0.15 0.105,-0.215 0.156,-0.059 0.105,0.008 0.127,0.253 0.037,0.275 0.033,0.284 -0.044,0.27 z m -3.958,0.271 -0.07,0.064 -0.087,-0.019 -0.072,-0.125 -0.05,-0.214 0.098,-0.081 0.078,0 0.087,0.114 0.045,0.184 -0.029,0.077 z m 2.048,3.186 -0.156,0.178 -0.272,0.085 -0.27,-0.139 -0.326,0.065 -0.034,-0.305 0.122,-0.25 0.247,-0.297 0.179,-0.397 -0.021,-0.56 0.147,-0.128 0.079,-0.197 0.313,-0.121 0.071,0.416 -0.084,0.744 0.211,0.44 0.03,0.147 -0.041,0.169 -0.195,0.15 z m -2.244,8.767 -0.207,0.054 -0.024,-0.136 -0.187,-0.226 0.163,-0.149 0.318,-0.155 0.241,0.018 0.217,0.118 0.029,0.139 -0.379,0.183 -0.093,0.101 -0.078,0.053 z m 1.529,3.168 -0.053,0.101 -0.346,-0.062 -0.599,0.106 -0.252,-0.384 -0.11,-0.609 -0.075,-0.125 -0.149,-0.347 -0.075,-0.227 -0.152,-0.352 -0.059,-0.369 -0.038,-0.111 0.137,-0.219 0.627,-0.216 0.223,-0.349 0.191,0.046 -0.053,0.712 0.115,0.24 0.213,0.2 0.04,0.082 0.036,0.253 0.107,0.393 0.138,0.185 0.036,0.114 0.006,0.097 -0.05,0.135 0.142,0.706 z m -2.646,0.727 -0.316,0.005 -0.079,-0.756 0.372,-1.086 0.026,-0.413 -0.125,-0.311 -0.051,-0.255 0.031,-0.104 0.475,-0.215 0.148,0.228 0.177,0.605 0.336,0.87 -0.008,0.835 -0.187,0.206 -0.586,0.211 -0.213,0.18 z m 2.902,1.638 0.026,0.629 -0.047,0.633 -0.108,0.78 0.018,0.159 0.126,0.038 0.034,0.098 -0.037,0.412 -0.067,0.317 -0.131,0.26 -0.076,0.312 -0.07,0.069 -0.305,0.055 -0.167,-0.034 -0.134,-0.355 -0.039,-0.218 0.008,-0.285 -0.165,-0.382 -0.005,-0.146 0.064,-0.251 0.133,-0.124 0.02,-0.386 0.067,-0.115 0.151,-0.159 0.023,-0.065 -0.014,-0.057 -0.056,-0.006 -0.607,0.476 -0.059,0.135 -0.027,0.179 -0.007,0.632 -0.107,0.366 -0.097,0.07 -0.283,0.016 -0.374,-0.037 -0.424,-0.336 -0.277,0.093 -0.057,-0.408 0.139,-0.326 0.516,0.028 0.087,-0.579 -0.164,-0.136 -0.182,-0.232 -0.108,-0.213 0.097,-0.158 0.299,-0.229 0.16,-0.024 0.148,0.128 0.367,-0.097 -0.021,-0.363 -0.327,-0.16 0.073,-0.275 0.413,-0.263 0.247,-0.265 0.011,-0.301 -0.1,-0.3 0.031,-0.117 0.206,-0.247 0.288,-0.119 0.131,0.017 0.267,0.174 0.238,0.021 0.058,0.052 0.043,0.193 0.153,1.426 z m -1.769,-1.328 -0.023,0.338 -0.415,0.652 -0.357,0.386 -0.326,0.306 -0.208,-0.003 -0.171,-0.147 0.192,-0.242 0.239,-0.241 -0.076,-0.312 -0.072,-0.09 -0.101,-0.033 -0.173,-0.162 0.053,-0.241 0.101,-0.115 0.134,-0.088 0.125,0.052 0.542,-0.169 0.171,-0.137 0.33,-0.023 0.035,0.269 z m 0.145,6.298 -0.549,0.352 -0.161,-0.146 -0.396,0.002 0.104,-0.381 0.04,-0.279 0.06,-0.108 0.022,-0.241 0.119,-0.439 0.328,0.146 0.245,0.043 0.332,0.146 0.36,0.093 0.105,0.382 -0.35,0.175 -0.259,0.255 z m -0.694,1.69 -0.08,0.408 -0.227,-0.035 -0.076,-0.104 -0.04,-0.259 -0.07,-0.125 0.098,-0.259 0.064,-0.287 -0.022,-0.22 0.348,0.016 0.414,0.057 0.115,0.06 -0.127,0.194 -0.121,0.115 -0.25,0.071 -0.026,0.368 z m 2.087,2.654 -0.006,0.375 -0.089,0.12 -0.078,0.036 -0.197,-0.114 -0.113,-0.013 -0.187,0.199 -0.157,0.101 -0.234,-0.026 -0.311,-0.135 -0.277,0.566 -0.13,0.19 -0.271,0.265 -0.03,-0.311 0.172,-0.463 0.08,-0.315 0.158,-0.468 0.318,0.176 0.446,-0.173 0.406,-0.321 0.351,-0.002 0.115,0.171 0.034,0.142 z m -0.742,1.586 0.12,0.879 0.086,0.123 0.286,0.065 0.311,0.448 0.014,0.123 -0.376,0.765 -0.08,0.545 -0.441,-0.039 -0.185,-0.541 -0.279,-0.521 -0.094,-0.608 -0.153,-0.521 0.273,-0.294 0.261,0.065 0.015,-0.398 0.242,-0.091 z m 1.911,1.361 -0.084,0.05 -0.312,-0.105 -0.156,-0.095 -0.238,-0.239 -0.038,-0.247 -0.107,-0.293 0.069,-0.004 0.249,0.116 0.102,0.089 0.136,0.188 0.403,0.269 0.051,0.079 -0.01,0.103 -0.065,0.089 z m 15.469,3.303 -0.005,1.375 -0.005,1.363 -0.004,1.283 -0.004,1.292 -0.004,1.256 -0.004,1.297 -0.022,1.464 -0.016,1.096 -0.422,0 -0.111,0.112 -0.668,0.161 -1.136,-0.248 -0.284,-0.224 -0.381,-0.489 -0.136,0.132 -0.358,0.207 -0.368,0.164 -0.302,0.018 -0.28,-0.203 -0.06,-0.103 -0.064,-0.022 -0.604,0.281 -0.668,-0.287 -0.532,-0.175 -0.855,-0.099 -0.594,-0.36 -1.096,0.031 -0.197,-0.119 -0.073,-0.352 0.058,-0.163 0.234,-0.099 0.065,-0.195 0.237,0.047 0.307,0.258 0.094,-0.009 0.203,-0.243 0.3,-0.215 0.107,-0.022 0.551,0.265 0.222,-0.03 0.318,-0.119 0.057,-0.104 0.051,-0.182 0.084,-0.106 0.283,-0.052 0.276,0.104 0.032,0.317 -0.038,0.34 0.359,0.092 0.436,-0.011 0.3,0.127 0.038,-0.207 -0.479,-0.541 -0.201,-0.335 -0.27,-0.197 -0.347,-0.101 -0.29,-0.626 0.018,-0.547 -0.031,-0.531 0.626,-0.291 -0.144,-0.452 0.216,-0.342 0.246,-0.131 0.248,1.26 0.178,0.444 -0.227,0.09 -0.475,-10e-4 0.265,0.623 0.436,0.214 0.375,0.463 0.008,0.337 0.208,0.152 0.502,0.01 0.346,-0.066 0.163,-0.225 0.188,-0.071 0.337,0.279 0.568,0.207 0.153,0.146 0.111,0.244 0.007,0.263 0.029,0.14 0.165,-0.068 0.236,-0.357 0.116,-0.124 0.142,-0.061 0.09,-0.08 0.003,-0.104 -0.425,-0.252 -2.224,-1.175 -0.273,-0.467 -0.184,-0.586 0.006,-0.603 0.162,-0.186 0.397,-0.237 0.729,-0.334 0.841,-0.479 0.105,-0.092 -0.01,-0.299 -0.105,-0.201 -0.334,-0.147 -0.349,-0.037 -0.333,0.015 -0.333,0.063 -0.607,0.317 -0.344,-0.02 -0.327,-0.171 -0.242,-0.342 -0.125,-0.461 0.001,-0.294 0.046,-0.27 0.148,-0.275 0.199,-0.12 0.178,0.016 0.168,-0.064 0.1,-0.094 0.085,-0.126 -0.025,-0.109 -0.065,-0.094 -0.271,-0.194 -0.107,-0.187 -0.232,-0.301 0.127,-0.084 0.408,-0.047 0.285,0.207 0.266,0.245 0.163,-10e-4 0.146,-0.103 0.336,-0.313 0.281,-0.393 0.256,-0.446 0.207,-0.267 0.236,-0.024 0.693,0.836 0.245,0.031 0.814,-0.45 0.091,0.024 0.276,0.228 0.083,0.098 z m -16.153,1.249 0.046,0.042 0.111,-0.01 0.155,0.075 0.586,0.092 0.524,0.218 0.273,0.205 0.359,0.063 0.294,0.261 0.125,0.066 0.151,0.021 0.394,0.483 0.022,0.055 0.447,0.382 0.022,0.061 -0.254,0.021 -0.515,-0.178 -0.257,-0.01 -0.186,-0.055 -0.043,-0.031 -0.037,-0.221 -0.059,-0.109 -0.495,-0.509 -0.206,-0.111 -0.357,-0.099 -0.406,0.069 -0.274,-0.065 -0.095,0.023 -0.405,-0.403 -0.404,-0.34 -0.173,-0.403 -0.257,-0.309 -10e-4,-0.09 0.118,-0.069 0.276,0.174 0.272,0.298 0.147,0.113 0.102,0.29 z m 4.105,2.613 0.076,0.383 0.04,0.073 0.204,-0.062 0.348,-0.035 0.57,0.143 0.065,0.051 0.242,0.419 0.186,0.179 0.284,0.389 -0.283,0.26 -0.167,0.374 -0.009,0.189 -0.111,0.11 -0.174,0.114 -0.259,0.219 -0.319,0.024 -0.314,0.116 -0.146,0.105 -0.086,0.007 -0.102,-0.057 -0.109,-0.108 -0.035,-0.125 0.215,-0.116 0.281,-0.413 0.05,-0.428 -0.303,-0.077 -0.181,0.059 -0.135,-0.002 -0.155,-0.131 -0.094,0.201 -0.035,0.193 0.041,0.295 -0.028,0.096 -0.11,0.054 -0.254,-0.112 -0.264,-0.199 -0.021,-0.115 0.054,-0.398 -0.005,-0.207 -0.055,-0.298 -0.029,-0.031 -0.099,0.007 -0.311,0.057 -0.311,-0.381 -0.168,-0.402 -0.572,-0.115 0.446,-0.56 0.672,-0.079 0.228,0.283 0.748,0.195 -0.045,-0.3 0.012,-0.107 0.103,-0.134 0.058,-0.011 0.088,0.094 0.144,0.04 0.066,0.092 0.068,0.182 z m 4.301,2.611 0.622,0.381 0.412,-0.003 -0.002,0.238 0.05,0.406 -0.065,0.165 -0.154,0.169 -0.097,0.24 -0.072,0.037 -0.453,-0.29 -0.473,-0.396 -0.238,0.069 -0.315,-0.097 -0.254,0.021 -0.158,0.224 -0.368,0.117 -0.067,-0.448 -0.334,-0.424 -0.333,-0.339 0.181,-0.519 0.216,-0.083 0.204,-0.173 0.817,0.183 0.424,0.155 0.457,0.367 z m 1.119,4.023 0.13,0.308 0.048,0.057 0.346,0.121 0.156,-0.073 0.376,-0.034 0.226,-0.119 0.329,-0.061 0.377,0.767 -0.042,0.234 -0.298,0.254 -0.201,0.056 -0.19,-0.077 0.013,-0.129 -0.035,-0.112 -0.13,-0.146 -0.122,0.014 -0.197,0.108 -0.094,-0.014 -0.199,-0.119 -0.349,-0.088 -0.069,-0.108 -0.008,-0.16 -0.066,-0.08 -0.364,-0.257 -0.233,-0.219 -0.197,-0.029 -0.072,0.026 -0.073,0.104 -0.177,0.1 -0.051,-0.017 -0.057,-0.083 -0.029,-0.12 0.075,-0.242 0.102,-0.023 0.497,0.048 0.305,0.112 0.273,10e-4 z m 3.617,0.248 2.251,0.481 0.694,-0.292 0.549,0.009 0.163,0.401 -0.557,0.423 -0.042,0.134 0.078,0.108 0.572,0.068 0.145,0.136 0.133,0.176 -0.113,0.261 -0.011,0.121 0.06,0.117 0.429,0.396 0.176,0.204 0.089,0.196 0.036,0.344 -0.008,0.276 -0.096,0.037 -0.209,-0.084 -0.204,-0.16 -0.179,-0.396 -0.125,-0.079 -0.361,-0.08 -0.358,-0.193 -0.279,0.011 -0.257,-0.082 -0.23,0.072 -0.082,-0.13 -0.099,-0.263 -0.002,-0.114 0.121,-0.414 -0.003,-0.108 -0.063,-0.013 -0.268,0.084 -0.108,-0.056 -0.292,-0.3 -0.118,-0.057 -0.293,-0.029 -0.166,0.53 -0.009,0.132 0.169,0.338 0.332,0.521 -0.168,0.01 -0.48,-0.16 -0.123,-0.1 -0.148,-0.263 -0.285,-0.152 -0.1,-0.094 -0.029,-0.11 -0.003,-0.341 -0.063,-0.05 -0.405,0.087 -0.083,-0.083 -0.034,-0.144 -0.059,-0.08 -0.261,-0.131 -0.023,-0.082 0.116,-0.097 0.072,-0.243 0.102,-0.874 0.509,0.181 z m 7.361,1.148 -0.083,0.188 -0.177,0.248 -0.238,0.192 -0.231,0.053 -0.167,-0.1 -0.084,-0.176 -0.039,-0.174 -0.057,-0.095 -0.088,-0.021 -0.114,0.005 -0.14,0.065 -0.298,0.251 -0.128,0.065 -0.086,0.016 -0.848,-0.188 -0.083,-0.07 -0.1,-0.167 -0.11,-0.497 -0.356,-0.442 0.545,-0.25 0.654,10e-4 1.262,0.191 0.503,0.043 0.387,0.42 0.061,0.252 0.015,0.19 z m 1.706,0.369 -0.224,0.215 -0.167,-0.014 -0.054,-0.078 -0.018,-0.098 0.033,-0.104 0.07,-0.095 0.164,-0.119 0.051,-0.019 0.246,0.118 -0.101,0.194 z m -2.292,2.709 -0.103,0.039 -0.076,-0.094 -0.115,-0.066 -0.468,-0.139 -0.01,-0.084 0.049,-0.12 0.093,-0.107 0.18,-0.106 0.145,-0.275 0.065,0.021 0.066,0.112 0.112,0.38 0.135,0.274 -0.014,0.095 -0.059,0.07 z m -0.803,0.562 -0.102,0.01 -0.248,-0.093 -0.371,-0.041 -0.042,-0.038 -0.009,-0.073 0.044,-0.075 0.202,-0.057 0.609,0.049 0.078,0.034 0.021,0.058 -0.099,0.165 -0.083,0.061 z\"\n\t\t\t\tid=\"CL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 518.33975,441.8864 -0.283,0.466 -0.374,0.266 -0.11,0.161 -0.059,0.2 -0.08,0.201 -0.199,0.431 -0.145,0.352 -0.145,0.11 -0.34,0.532 -0.228,0.534 -0.046,0.138 -0.07,0.102 -0.111,0.083 -0.393,0.166 -0.133,0.082 -0.105,0.099 -0.096,0.112 -0.027,0.135 0.092,0.19 0.11,0.151 0.111,0.009 0.097,-0.007 0.061,0.09 0.051,0.053 0,1.036 -0.094,0.156 0.002,0.07 -0.046,0.178 -0.014,0.199 0.03,0.079 0.079,0.065 0.109,0.139 0.059,0.318 0.133,1.118 0.062,0.177 0.11,0.124 0.346,0.241 0.363,0.317 0.115,0.206 0.066,0.338 0.139,0.265 -0.003,0.09 -0.057,0.035 -0.135,0.004 -0.091,0.019 0.076,0.193 0.187,0.336 0.312,0.349 0.338,0.377 0.275,0.308 0.344,0.356 0.268,0.278 0.277,0.286 0.209,0.068 0.155,0.02 0.067,0.056 0.082,0.131 0.141,0.146 0.156,0.19 0.053,0.193 -0.065,0.185 0.064,0.265 0.004,0.023 0.051,0.104 -0.018,0.093 0.032,0.351 0.082,0.306 0.133,0.261 -0.002,0.022 -0.017,0.16 -0.171,0.103 -0.1,0.171 -0.029,0.237 0.051,0.289 0.132,0.341 0.003,0.2 -0.046,0.028 -0.082,0.064 -0.087,0.042 -0.236,-0.234 -0.263,-0.158 -0.393,-0.274 -0.397,-0.099 -0.512,-0.018 -0.221,0.034 -0.158,-0.103 -0.222,-0.12 -0.122,-0.03 -0.17,0.092 -0.117,0.004 -0.144,-0.035 -0.292,0.004 -0.027,-0.16 -0.05,-0.03 -0.315,0.014 -0.097,-0.132 -0.042,0.015 -0.124,-0.041 -0.253,-0.188 -0.266,0.124 -0.553,-0.016 -0.709,0.004 -0.734,0.005 -0.672,-0.006 -0.673,-0.006 -0.067,-0.175 -0.139,-0.09 -0.251,-0.008 -0.739,0.035 -0.566,-0.028 -0.181,-0.023 -0.201,-0.045 -0.472,-0.041 -0.584,0.033 -0.133,-0.009 -0.467,0.006 -1.068,-0.047 -0.591,0.007 0.014,0.107 -0.038,0.076 -0.031,0.186 -0.652,-10e-4 -0.858,0 -0.81,0 -0.548,0 -0.918,0 -0.308,-0.127 -0.093,-0.082 -0.019,-0.092 -0.011,-0.062 -0.072,-0.018 0.059,-0.656 0.129,-0.546 0.05,-0.507 0.177,-0.453 -0.094,-0.449 -0.109,-0.196 -0.573,-0.636 0.263,-0.24 -0.346,0.033 -0.074,-0.237 -0.168,-0.283 0.103,-0.046 0.099,-0.155 0.313,0.047 -0.01,-0.076 -0.27,-0.238 0.026,-0.12 0.111,-0.134 -0.054,-0.057 -0.194,0.14 -0.14,-0.005 -0.108,-0.09 -0.08,-0.015 0.048,0.182 -0.109,0.163 -0.103,0.057 -0.176,-0.01 -0.144,-0.041 -0.039,-0.091 -0.135,-0.069 -0.38,-0.121 -0.319,-0.142 -0.064,-0.388 -0.127,-0.167 -0.052,-0.189 -0.03,-0.216 0.044,-0.332 -0.082,-0.053 -0.092,-0.018 -0.138,0.016 -0.127,-0.018 -0.152,-0.184 -0.133,-0.071 0.082,0.338 -0.094,0.095 -0.229,-0.027 -0.098,-0.128 -0.019,-0.096 0.105,-0.408 -0.041,-0.009 0.082,-0.217 0.156,-0.264 0.211,-0.335 0.239,-0.422 0.164,-0.745 0.111,-0.465 0.101,-0.424 0.175,-0.383 0.177,-0.256 0.501,-0.496 0.378,-0.375 0.193,-0.151 0.134,-0.127 0.236,-0.145 0.241,-0.173 0.185,-0.331 0.151,-0.309 0.115,-0.067 0.151,-0.054 0.462,-0.332 0.293,-0.211 0.068,0.105 0.05,0.13 0.056,0.06 0.246,0.041 0.337,-0.002 0.194,-0.038 0.103,-0.11 0.105,-0.301 0.061,-0.057 0.079,-0.015 0.368,0.21 0.306,0.299 0.302,0.296 0.153,0.105 0.067,0.116 0.132,0.539 0.076,0.134 0.131,0.056 0.236,-0.036 0.245,-0.095 0.216,-0.138 0.213,-0.179 0.145,-0.161 0.063,-0.119 0.032,-0.441 0.048,-0.097 0.217,-0.176 0.364,-0.294 0.208,-0.169 -0.018,-0.06 -0.13,-0.18 -0.115,-0.198 0.117,-0.204 0.121,-0.157 0.459,-0.531 0.002,-0.176 0.024,-0.213 0.367,-0.604 0.211,-0.802 0.006,-0.155 0.219,-0.387 0.259,-0.496 0.503,-0.08 0.193,-0.124 0.223,-0.219 0.144,-0.204 0.068,-0.194 0.05,-0.375 0.089,-0.427 0.055,-0.375 0.151,-0.347 0.252,-0.175 0.438,-0.146 0.066,-0.068 0.063,-0.23 0.049,-0.478 0.014,-0.288 0.017,-0.125 0.056,-0.216 0.406,-0.383 0.18,-0.6 0.16,-0.629 0.461,-0.761 0.54,-0.758 0.25,-0.204 0.211,-0.094 0.244,-0.01 0.166,-0.056 0.581,-0.378 0.243,-0.128 0.179,-0.131 0.043,-0.115 0.018,-0.167 -0.056,-0.392 0.1,-0.287 0.059,-0.447 0.024,-0.348 -0.021,-0.121 -0.091,-0.167 -0.017,-0.036 -0.174,-0.217 -0.291,-0.131 -0.4,-0.036 -0.212,-0.077 -0.035,-0.182 -0.02,-0.105 -0.021,-0.114 -0.029,-0.253 -0.269,-1.333 0.508,0.004 0.608,0.159 0.153,0.12 0.081,0.456 0.22,0.259 0.387,0.212 0.241,0.439 0.094,0.664 0.213,0.397 0.049,0.063 0.241,0.573 0.06,0.176 0.018,0.345 -0.027,0.233 0.123,0.288 -0.186,0.492 -0.056,0.301 -0.016,0.423 0.109,0.746 0.178,0.575 0.193,0.465 0.211,0.361 0.347,0.398 0.371,0.363 0.345,0.229 -0.32,0.134 -0.62,0.017 -0.356,-0.077 -0.17,-0.004 -0.171,0.048 -0.662,0.069 -0.668,-0.032 -0.619,-0.091 -0.376,0.015 -0.29,0.221 -0.236,0.332 -0.22,0.263 0.077,0.291 0.166,0.161 0.32,0.354 0.286,0.343 0.147,0.23 0.572,0.504 0.552,0.45 0.108,0.075 0.155,0.081 0.096,0.033 0.301,0.258 0.416,0.423 0.382,0.662 0.271,0.672 0.264,0.653 0.116,0.11 0.184,0.07 0.022,0.14 -0.014,0.207 -0.057,0.169 z\"\n\t\t\t\tid=\"CM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 786.10275,406.0084 0.14,0.132 0.091,0.191 0.075,0.352 0.045,0.324 -0.283,0.206 -0.254,0.083 -0.509,0.789 -0.106,0.249 -0.086,0.104 -0.027,0.108 0.01,0.108 -0.132,0.378 -0.116,0.465 -0.074,0.19 -0.146,0.146 -0.185,0.074 -0.12,0.011 -0.109,0.04 -0.269,0.253 -0.303,0.19 0.051,0.087 0.003,0.083 -0.133,0.092 -0.147,-0.018 -0.427,0.075 -0.156,0.142 -0.16,0.262 -0.061,0.036 -0.258,0.061 -0.196,0.023 -0.335,-0.185 -0.166,-0.054 -0.442,-0.075 -0.431,-0.125 -0.302,-0.143 -0.619,-0.35 -0.072,-0.633 -0.106,-0.342 -0.007,-0.122 0.041,-1.055 0.043,-0.116 0.079,-0.101 0.273,-0.236 0.313,-0.187 0.449,-0.392 0.326,-0.179 0.273,-0.258 -0.16,0.011 -0.118,-0.033 0.116,-0.221 0.125,-0.118 0.145,-0.064 0.29,0.046 0.268,-0.046 0.198,-0.196 0.188,-0.042 0.716,0.064 0.496,-0.09 0.248,-0.181 0.117,-0.007 0.366,0.051 0.136,0.188 -0.012,-0.126 0.016,-0.123 0.067,0.013 0.479,0.233 0.001,-0.285 0.027,-0.075 0.149,-0.119 0.075,0.002 0.186,0.23 0.181,0.134 0.225,0.071 z m -1.413,-3.281 0.104,0.104 0.278,-0.073 0.051,0.132 -0.002,0.062 -0.099,0.152 -0.23,-0.117 -0.229,0.027 -0.166,-0.01 -0.045,-0.072 0.127,-0.148 0.211,-0.057 z m 6.339,-1.638 -0.275,0.063 -0.059,-0.013 0.096,-0.155 0.249,-0.107 -0.011,0.212 z m 0.411,0.114 -0.054,0.06 -0.082,-0.109 -0.023,-0.156 -0.059,-0.084 0.135,-0.106 0.06,-0.117 0.16,0.023 0.066,0.035 -0.141,0.122 -0.033,0.052 -0.029,0.28 z m 2.147,-3.624 0.023,0.14 -0.219,-0.213 -0.063,-0.012 -0.104,-0.08 -0.061,-0.134 0.17,-0.005 0.156,0.159 0.098,0.145 z m 12.988,-5.155 -0.094,0.185 -0.166,-0.031 -0.005,-0.131 -0.034,-0.038 0.046,-0.122 0.03,-0.034 0.188,0.104 0.035,0.067 z m 4.597,-2.958 -0.209,0.143 -0.13,-0.068 -0.002,-0.192 0.066,-0.173 -0.076,-0.125 0.074,-0.148 0.155,-0.044 0.056,0.093 0.087,0.049 0.027,0.051 10e-4,0.097 -0.083,0.16 0.065,0.087 -0.031,0.07 z m 4.014,-8.222 -0.245,0.076 -0.092,0 0.008,-0.23 0.2,-0.219 0.081,0.073 0.046,0.114 0.002,0.186 z m 2.585,-5.079 -0.01,0.06 -0.239,-0.209 -0.115,-0.034 0.055,-0.119 0.161,-0.03 0.128,0.262 0.02,0.07 z m 0.65,-0.686 -0.027,0.149 -0.075,-0.021 -0.1,-0.265 0.054,-0.065 0.142,0.016 0.006,0.186 z m -0.303,-0.229 -0.041,0.063 -0.347,-0.185 -0.376,-0.039 -0.13,-0.163 -0.023,-0.256 0.396,0.011 0.488,0.231 0.105,0.118 -0.072,0.22 z m -1.217,-4.968 -0.23,0.094 -0.73,-0.281 -0.516,-0.309 -0.308,-0.375 -0.044,-0.155 0.359,0.026 0.351,0.135 0.078,0.206 0.142,0.065 0.096,0.12 0.65,0.279 0.1,0.084 0.052,0.111 z m 4.566,-85.027 0.127,0.014 0.07,-0.001 0.135,-0.094 0.373,0.167 0.713,0.496 0.447,0.22 0.185,-0.054 0.2,0.137 0.219,0.328 0.271,0.193 0.488,0.089 0.484,0.358 0.195,0.02 0.068,-0.201 0.181,-0.115 0.292,-0.03 0.423,0.177 0.553,0.383 0.347,0.168 0.141,-0.046 0.148,0.071 0.119,0.179 0.011,0.221 -0.041,0.118 0.133,0.186 0.153,0 0.25,0.089 0.196,0.328 0.176,0.152 0.123,0.131 0.022,0.109 0.011,0.11 -0.036,0.085 -0.067,0.141 -0.021,0.151 0.085,0.17 0.311,0.123 0.105,0.127 0.024,0.162 0.097,0.179 0.212,0.207 0.08,0.173 -0.049,0.139 0.063,0.116 0.104,0.091 0.022,0.329 0.009,0.189 0.171,0.212 0.035,0.434 0.119,0.479 0.401,0.655 0.133,0.354 -0.034,0.42 0.058,0.197 0.183,0.095 0.087,0.177 -0.01,0.259 0.071,0.161 0.058,0.171 -0.039,0.266 0.058,0.239 0.094,0.14 0.066,0.258 0.037,0.322 0.269,0.508 0.499,0.694 0.306,0.538 0.111,0.382 10e-4,0.314 -0.109,0.246 -0.006,0.179 0.098,0.112 0.029,0.151 -0.039,0.191 0.162,0.226 0.548,0.392 -0.219,0.6 -0.058,0.421 0.029,0.442 0.136,0.311 0.241,0.18 0.15,0.188 0.059,0.196 0.29,0.213 0.52,0.231 0.667,0.041 0.813,-0.151 0.497,-0.025 0.183,0.1 0.063,0.152 -0.059,0.203 0.138,0.133 0.334,0.064 0.229,0.127 0.126,0.192 0.154,0.054 0.183,-0.083 0.178,0.012 0.173,0.106 0.112,-0.037 0.098,-0.116 0.157,0 0.161,0.002 0.1,0.281 0.162,0.158 0.224,0.035 0.341,0.341 0.686,0.969 0.446,0.343 0.447,0.107 0.556,0.022 0.18,0.374 -0.146,0.395 -0.037,0.329 0.126,0.118 0.174,0.386 0.246,0.224 0.047,0.177 0.114,0.198 -0.048,0.365 -0.211,0.533 0.058,0.454 0.326,0.375 0.188,0.361 0.049,0.346 0.081,0.21 0.115,0.074 0.334,-0.026 0.555,-0.125 0.406,0.021 0.26,0.169 0.641,0.006 1.023,-0.156 0.646,-0.048 0.27,0.06 0.24,-0.223 0.211,-0.507 0.197,-0.238 0.185,0.03 0.292,-0.163 0.401,-0.357 0.348,-0.173 0.441,0.018 0.47,0.018 0.294,-0.15 0.276,-0.313 0.479,-0.277 1.021,-0.363 0.245,-0.057 0.117,0.02 0.34,0.057 0.302,0.142 0.285,0.285 0.044,0.183 -0.032,0.24 -0.063,0.139 -0.117,0.156 -0.11,0.253 0.071,0.197 0.165,0.421 0.136,0.304 0.15,0.358 -0.067,0.128 -0.091,0.248 -0.279,0.419 -0.152,0.16 -0.164,0.156 -0.283,0.038 -0.121,0.036 -0.137,0.066 -0.086,0.148 -0.098,0.104 -0.162,0.208 -0.013,0.179 0.073,0.266 0.036,0.272 -0.183,0.243 -0.142,0.373 -0.043,0.112 -0.07,0.282 -0.021,0.098 -0.045,0.592 -0.183,0.403 -0.255,0.468 0.057,0.279 0.045,0.258 -0.063,0.125 -0.016,0.109 -0.037,0.248 -0.08,0.095 -0.232,0.155 -0.139,0.187 0.029,0.283 -0.071,0.245 -0.106,0.216 -0.111,0.141 -0.16,0.09 -0.106,0.076 -0.08,0.274 -0.024,0.212 -0.075,0.211 0.046,0.215 -0.081,0.186 -0.228,0.13 -0.129,0.077 -0.119,0.031 -0.228,0.202 -0.204,0.691 -0.046,0.401 0.047,0.356 -0.286,0.223 -0.212,0.177 -0.133,-0.064 -0.141,-0.06 -0.324,-0.077 -0.162,-0.052 -0.326,-0.116 -0.522,-0.147 -0.51,-0.171 -0.32,-0.09 -0.252,-0.072 -0.191,-0.118 -0.161,-0.211 -0.16,0.085 -0.148,0.25 -0.247,0.148 -0.112,0.273 -0.099,0.209 -0.256,0.279 -0.114,0.115 -0.501,0.189 -0.113,0.063 -0.409,0.04 -0.139,0.083 -0.144,0.176 -0.039,0.175 0.102,0.184 0.159,0.368 0.074,0.251 0.108,0.497 0.363,1.553 -0.117,0.267 -0.109,1.157 0.026,0.208 -0.011,0.324 0.007,0.237 0.075,0.059 0.098,0.083 0.05,0.138 -0.013,0.212 -0.05,0.155 -0.077,0.307 -0.102,0.443 -0.113,0.17 -0.074,0.135 -0.063,0.093 -0.008,0.313 -0.042,0.206 -0.177,0.073 -0.176,0.12 -0.209,-0.044 -0.184,0.024 -0.227,0.08 -0.407,0.093 -0.236,0.124 -0.113,0.09 -0.078,0.108 -0.014,0.104 0.054,0.055 0.229,0.042 0.157,0.194 0.022,0.212 -0.162,0.121 -0.08,-0.133 -0.135,-0.042 -0.251,-0.187 -0.184,-0.206 -0.137,-0.228 0.006,-0.487 -0.023,-0.073 -0.25,-0.1 -0.074,-0.146 -0.119,-0.069 -0.169,0.044 -0.127,-0.046 -0.101,-0.08 -0.12,-0.009 -0.104,0.126 -0.056,0.271 -0.175,0.449 -0.016,0.271 -0.075,0.386 -0.075,0.489 -0.063,0.102 -0.195,0.015 -0.067,0.032 -0.103,0.166 -0.123,0.028 -0.109,-0.097 -0.171,-0.097 -0.163,-0.013 -0.146,0.097 -0.172,0.211 -0.098,0.17 -0.035,0.16 -0.027,0.197 -0.174,0.188 -0.158,0.099 -0.327,0.277 -0.104,0.115 -0.234,0.001 -0.255,-0.011 -0.344,0.075 -0.56,0.038 -0.335,-0.057 -0.414,0.053 -0.323,0.09 -0.046,0.135 0.012,0.2 0.064,0.13 0.079,0.087 0.134,0.268 0.141,0.259 0.213,0.167 0.089,0.18 0.004,0.167 -0.101,0.21 -0.153,0.274 -0.143,0.169 -0.107,-0.006 -0.164,-0.098 -0.111,-0.124 -0.265,-0.046 -0.648,0.079 -0.324,-0.055 -0.155,-0.101 -0.271,-0.007 -0.419,-0.135 -0.256,-0.043 -0.121,-0.086 -0.023,-0.198 -0.12,-0.136 -0.068,-0.163 -0.152,-0.205 -0.146,-0.103 -0.144,-0.043 -0.157,0.124 -0.168,0.112 -0.125,-0.025 -0.061,0.031 -0.068,0.093 -0.27,0.19 -0.063,0.174 -0.107,0.369 -0.075,0.379 -0.064,0.134 -0.109,0.023 -0.111,0.114 -0.233,0.355 -0.211,0.327 -0.306,0.221 -0.145,0.202 -0.074,0.184 -0.218,0.257 -0.32,0.046 -0.255,0.075 -0.156,0.02 -0.112,0.104 -0.082,0.158 -0.039,0.063 -0.145,0 -0.144,0.134 -0.353,0.305 -0.288,0.057 -0.36,0.203 -0.317,0.154 -0.132,0.087 -0.035,0.096 -0.046,0.122 -0.153,0.024 -0.148,-0.006 -0.33,0.279 -0.167,0.237 -0.649,0.504 -0.265,0.283 -0.068,0.366 -0.034,-0.027 -0.231,0.319 -0.454,0.303 -0.97,0.068 -0.307,-0.215 -0.111,0.148 -0.086,0.199 -0.255,0.066 -0.397,0.018 -0.223,0.131 -0.119,0.146 -0.545,0.047 -0.2,0.195 -0.34,0.069 -1.417,0.85 -0.309,0.357 -0.293,0.417 -0.205,0.209 -0.184,0.146 -0.167,0.06 -0.164,0.144 -0.166,0.018 -0.169,-0.066 -0.189,0.023 -0.125,0.174 0.105,0.227 -0.058,0.096 -0.372,0.123 -0.554,0.081 -0.234,0.148 -0.082,0.084 -0.122,0.042 -0.118,-0.292 -0.042,-0.386 0.229,-0.093 0.211,-0.049 1.169,-0.534 -0.146,-0.402 0.104,-0.175 0.262,-0.285 0.17,-0.141 -0.092,-0.052 -0.767,0.094 -0.439,-0.007 -0.226,-0.029 0.068,-0.244 -0.038,-0.244 -0.053,-0.091 0.391,-0.278 0.177,-0.068 0.135,0.004 -0.01,-0.168 -0.112,-0.253 0.121,-0.327 0.796,-0.385 0.191,-0.35 0.319,-0.327 0.584,-0.814 0.035,-0.139 0.17,-0.383 0.03,-0.153 -0.27,-0.224 -0.107,-0.314 -0.79,-0.568 -0.067,-0.489 -0.074,0.021 -0.12,0.342 -0.103,0.11 -0.366,0.01 -0.173,-0.129 -1.018,-0.084 -0.249,0.221 -0.232,0.341 -0.227,0.244 -0.228,0.125 -0.198,0.222 -0.818,1.314 -0.309,0.1 -1.455,0.791 -0.729,0.31 -0.561,0.546 -0.193,0.33 -0.171,0.366 -0.104,0.553 -0.518,0.671 -0.178,0.144 -0.181,0.058 -0.241,-0.021 -0.208,0.042 -0.354,-0.059 -0.434,0.212 -0.488,0.183 -0.421,-0.461 -0.301,-0.114 -0.491,0.128 -0.228,0.205 -0.472,1.013 -0.177,0.579 0.012,0.237 0.275,0.718 0.311,0.401 0.697,0.457 1.482,0.314 0.348,-0.112 0.373,-10e-4 0.393,0.298 0.246,0.492 0.022,0.335 0.008,0.116 0.09,0.099 0.053,0.169 -0.156,0.14 -0.12,0.07 -0.101,0.519 -0.006,0.573 0.127,0.19 0.319,0.267 0.493,0.22 0.456,0.047 0.871,-0.106 0.356,-0.345 -0.021,-0.149 0.009,-0.193 0.767,-0.507 0.437,-0.45 -0.068,-0.119 -0.084,-0.079 0.077,-0.046 0.239,-0.032 1.066,-0.47 0.839,0.384 0.479,0.442 0.474,0.074 0.328,0.226 0.379,0.192 0.494,0.013 0.417,0.04 0.127,-0.178 0.131,-0.117 0.148,0.023 0.167,0.233 0.474,0.179 0.437,-0.009 0.306,-0.065 0.182,0.083 -0.263,0.298 0.039,0.48 -0.201,0.152 -0.193,0.244 0.114,0.161 0.101,0.068 -0.01,0.195 -0.176,0.111 -0.326,0.29 -0.188,-0.005 -0.089,-0.056 -0.063,-0.104 -0.047,-0.167 -0.114,-0.11 -0.316,-0.042 -0.328,0.04 -0.738,0.43 -0.721,0.342 -0.755,0.271 -0.253,0.171 -0.18,0.047 -0.313,-0.129 -0.189,0.008 -0.04,0.089 0.241,0.238 0.063,0.186 -0.025,0.143 -0.137,0.063 -0.199,-0.104 -0.182,0.149 -0.082,0.251 -0.004,0.597 -0.12,0.133 -0.333,0.073 -0.354,0.19 -0.126,-0.088 -0.05,-0.107 0.037,-0.274 -0.044,-0.134 -0.162,0.007 -0.244,0.082 -0.186,0.18 -0.064,0.109 0.245,0.351 0.233,0.036 0.057,0.079 -0.185,0.171 -0.461,0.254 -0.077,0.213 -0.137,0.204 -0.188,0.162 -0.128,0.171 -0.156,0.089 -0.255,0.1 -0.313,0.408 -0.229,0.381 -0.272,0.196 -0.215,0.642 -0.385,0.348 -0.142,0.556 0.1,0.341 0.423,-0.003 0.211,0.12 0.438,0.448 0.524,0.292 0.544,0.164 0.667,0.413 0.184,0.175 0.157,0.355 0.289,1.02 0.208,0.504 0.014,0.263 0.312,0.495 0.333,0.85 0.384,0.734 0.073,0.577 -0.124,0.263 0.001,0.341 0.383,0.313 0.852,0.363 0.136,0.107 0.167,0.176 0.008,0.547 0.132,0.174 0.111,0.106 0.516,0.231 0.216,0.192 0.229,0.306 0.066,0.274 0.028,0.371 -0.288,0.013 -0.232,-0.042 -0.923,-0.482 -0.24,-0.013 -0.339,0.067 -0.483,-0.089 -0.51,-0.535 -0.368,-0.162 -0.395,-0.082 -0.942,0.46 -0.24,-0.033 -0.069,0.052 -0.106,0.079 0.437,0.099 0.438,-0.151 0.42,-0.223 0.613,0.119 0.103,0.201 0.101,0.339 0.42,0.229 0.33,0.101 0.42,0.3 0.41,0.468 0.869,0.542 0.352,0.512 0.136,0.33 0.122,0.471 -0.304,0.152 -0.265,0.021 -0.415,0.074 -0.305,0.167 -0.306,0.292 -0.877,0.459 -0.166,0.287 -0.114,0.25 -0.214,0.123 -0.537,-0.117 -0.506,0.01 -0.573,0.337 -0.143,0.137 0.095,-0.027 0.09,-0.043 0.258,0.051 0.399,-0.18 0.39,0.549 0.761,-0.089 0.715,-0.456 0.277,-0.008 0.231,0.07 0.259,0.18 0.688,0.799 0.378,0.087 0.37,0.187 0.205,0.021 0.185,0.056 -0.498,0.292 -0.643,0.63 -0.286,0.15 -0.192,0.168 0.518,-0.084 0.368,-0.301 0.186,-0.074 0.149,0.07 0.076,0.371 -0.142,1.138 -0.181,0.02 -0.176,-0.309 -0.206,-0.098 -0.173,0.064 -0.343,-0.002 -0.131,0.14 -0.11,0.198 0.205,0.041 0.404,0.345 0.041,0.183 -0.108,0.119 -0.283,-0.051 0.344,0.257 -0.091,0.266 -0.111,0.105 -0.2,0.067 -0.123,0.23 0.177,0.383 0.179,0.49 0.022,0.236 -0.28,-0.102 -0.437,0.299 -0.23,0.025 -0.156,-0.394 -0.199,0.062 -0.133,0.114 -0.177,0.422 -0.216,0.381 -0.186,0.104 -0.223,-0.03 -0.184,0.011 0.045,0.103 0.194,0.125 0,0.146 -0.414,0.463 -0.067,0.179 0.01,0.152 -0.217,0.185 0.117,0.311 -0.061,0.219 -0.19,0.296 -0.2,0.195 -0.235,0.316 -0.298,0.183 -0.393,0.661 -0.116,0.33 -0.029,0.341 -0.123,0.118 -0.211,0.148 -0.24,-0.075 -0.008,-0.227 -0.104,-0.02 -0.059,-0.149 -0.018,-0.189 0.025,-0.153 -0.1,0.047 -0.062,0.177 -0.158,0.144 -0.165,-0.058 -0.178,-0.118 0.005,0.17 0.095,0.171 0.041,0.171 0.246,0.037 0.165,0.196 0.13,0.301 0.026,0.113 0.101,0.134 0.014,0.115 -0.235,0.106 -0.294,0.198 -0.353,0.339 -0.291,0.226 -0.263,0.002 -0.159,-0.026 -0.227,-0.13 -0.261,-0.054 0.35,0.457 0.191,0.081 0.24,-0.017 0.233,-0.17 0.331,0.018 0.083,0.263 -0.088,0.297 -0.181,0.385 -0.037,0.333 0.224,0.476 0.01,0.143 -0.084,0.071 -0.263,-0.125 -0.217,-0.158 -0.219,0.042 -0.227,-0.067 -0.233,0.056 -0.095,0.11 0.064,0.181 0.209,0.15 0.117,0.231 -0.14,0.081 -0.593,-0.054 -0.132,0.044 -0.177,0.254 0.115,0.376 -0.131,0.233 -0.244,0.055 -0.321,0.188 -0.198,0.044 0.01,0.082 0.145,0.082 0.077,0.111 -0.175,0.383 -0.271,0.126 -0.416,-0.063 -0.327,0.086 -0.283,-0.163 -0.302,-0.003 -0.205,0.206 -0.022,0.239 -0.199,0.024 -0.107,-0.018 -0.151,0.017 0.016,0.128 0.086,0.112 0.408,0.05 0.073,0.161 0.016,0.248 -0.427,0.427 -0.182,0.288 -0.274,-0.008 -0.207,0.231 -0.111,0.313 -0.137,-0.062 -0.317,0.05 -0.093,0.149 0.074,0.062 0.007,0.107 -0.127,0.351 -0.138,0.099 -0.06,-0.144 -0.045,-0.223 -0.111,-0.017 -0.185,0.205 -0.216,0.147 -0.185,0.061 -0.14,-0.136 -0.343,-0.071 -0.14,0.589 -0.284,0.214 -0.133,0.067 -0.232,0.02 0.148,0.081 0.046,0.151 -0.083,0.15 -0.232,0.03 -0.135,0.117 -0.052,0.525 -0.138,0.184 -0.352,0.015 -0.263,-0.122 -0.084,0.096 -0.044,0.094 -0.138,0.095 -0.266,0.025 -0.591,0.235 -0.271,-0.068 -0.323,-0.089 -0.223,0.087 -0.074,0.18 -0.103,0.14 -0.324,0 -0.26,-0.173 -0.265,-0.125 -0.293,0.108 -0.223,0.22 -0.274,0.074 -0.051,0.137 -0.119,0.068 -0.29,-0.029 -0.11,-0.34 -0.167,-0.05 -0.165,0.172 -0.059,0.134 -0.077,0.102 0.027,0.277 -0.163,0.006 -0.213,-0.17 -0.224,-0.03 -0.209,0.158 -0.106,-0.039 -0.112,-0.033 -0.183,0 -0.07,0.042 -0.134,0.025 -0.09,0.086 -0.008,0.007 -0.236,-0.058 -0.289,-0.23 -0.207,-0.382 -0.263,-0.206 -0.116,-0.181 -0.045,-0.325 -0.048,-0.155 0.016,-0.172 0.08,-0.153 -0.283,0.077 -0.209,0.143 0.043,0.18 -0.052,0.167 -0.312,0.087 0.019,0.07 0.021,0.074 0.244,0.228 0.05,0.191 0.099,0.102 0.191,0.297 -0.005,0.574 0.105,0.162 -0.035,0.161 -0.076,0.217 -0.007,0.003 -0.056,-0.066 -0.092,0.013 -0.037,0.073 -0.006,0.066 -0.016,0.003 -0.162,0.048 -0.136,0.041 -0.11,0.058 -0.173,0.171 -0.329,0.042 -0.169,-0.4 -0.227,0.267 -0.068,0.545 -0.084,0.093 -0.141,0.078 -0.267,-0.19 -0.233,0.127 -0.182,0.129 -0.075,0.119 -0.134,0.129 -0.257,-0.125 -0.207,-0.187 0.052,-0.141 -0.029,-0.092 -0.093,-0.07 -0.103,0.01 0.051,0.183 0.034,0.35 -0.094,0.101 -0.145,0.078 -0.313,-0.064 -0.213,-0.13 -0.259,-0.11 -0.228,-0.02 -0.05,0.221 -0.148,0.178 -0.137,0.022 -0.137,-0.028 -0.18,0.192 -0.085,0.14 -0.222,0.148 -0.59,0.072 -0.206,0.146 -0.276,-0.023 -0.214,0.035 -0.123,-0.008 -0.11,-0.079 -0.124,-0.002 -0.057,0.244 -0.334,0.103 -0.3,0.028 -0.334,0.322 -0.238,0.195 -0.177,0.02 -0.13,-0.069 -0.065,-0.288 -0.066,-0.034 -0.038,0.271 -0.063,0.225 -0.122,0.123 -0.386,0.28 -0.111,0.278 0.074,0.257 0.519,0.063 0.064,0.141 -0.05,0.115 -0.124,0.096 -0.037,0.144 0.557,0.458 0.017,0.173 -0.086,0.099 -0.104,0.213 -0.294,0.18 -0.622,0.092 -0.519,-0.093 -0.157,-0.205 0.01,-0.146 0.129,0.042 0.146,-0.013 -0.044,-0.134 -0.062,-0.078 -0.239,-0.119 -0.194,-0.321 0.037,-0.267 -0.105,-0.207 -0.116,-0.173 -0.116,-0.104 -0.063,-0.129 0.118,-0.406 -0.065,-0.236 0.222,-0.29 0.055,-0.327 0.396,-0.117 0.027,-0.312 -0.284,-0.009 -0.197,-0.229 -0.045,0.097 -0.158,0.01 -0.26,-0.442 -0.078,-0.056 -0.126,-0.008 0.063,0.466 -0.305,0.175 -0.25,0.077 -0.354,0.032 -0.202,0.054 -0.188,-0.044 0.046,-0.141 0.1,-0.168 -0.089,-0.141 -0.2,-0.108 -0.306,0.006 -0.211,-0.03 -0.21,0.012 -0.077,-0.063 -0.195,-0.221 -0.165,-0.137 -0.074,-0.137 0.074,-0.159 -0.062,-0.097 -0.319,-0.011 0.002,0.228 0.033,0.269 0.093,0.204 -0.066,0.114 -0.162,0.078 -0.173,-0.216 -0.079,-0.053 -0.083,0.01 -0.063,0.215 -0.157,0.191 -0.282,-0.021 -0.22,0.118 -0.266,0.054 -0.181,-0.158 -0.299,-0.254 -0.119,-0.029 -0.332,0.124 -0.477,0.046 -0.106,-0.132 -0.23,0.1 -0.222,-0.305 -0.263,-0.02 -0.328,-0.231 -0.118,-0.123 -0.037,-0.176 -0.1,-0.092 -0.128,0.012 -0.143,-0.094 -0.226,-0.093 -0.182,-0.055 -0.09,0.042 -0.095,0.022 -0.017,-0.118 0.007,-0.356 -0.017,-0.316 -0.05,-0.143 -0.122,-0.108 -0.11,-0.052 -0.049,-0.163 0.04,-0.32 0.09,-0.217 0.142,-0.039 0.192,-0.156 0.098,-0.222 0.123,-0.206 -0.438,-0.289 -0.23,-0.104 -0.255,0.044 -0.317,0.092 -0.165,0.018 -0.083,-0.036 -0.185,-0.26 -0.1,-0.045 -0.224,-0.017 -0.189,0.002 -0.108,0.113 -0.168,0.038 -0.168,0.006 -0.17,-0.141 -0.256,-0.184 -0.401,-0.13 -0.049,-0.149 -0.102,-0.179 -0.152,-0.166 -0.252,-0.22 -0.211,-0.114 -0.103,0.07 -0.14,0.125 -0.542,0.263 -0.24,0.103 -0.128,0.073 -0.107,0.11 -0.033,0.271 -0.053,0.302 -0.156,0.153 -0.148,0.116 -0.155,0.012 -0.152,-0.005 -0.143,0.048 -0.436,0.303 -0.205,-0.024 -0.169,-0.171 -0.072,-0.124 -0.195,0.028 -0.25,0.145 -0.116,0.26 -0.061,0.243 -0.055,0.108 -0.084,0.031 -0.074,0.005 -0.779,-0.701 -0.048,-0.036 -0.14,0.144 -0.127,0.372 -0.091,0.071 -0.062,-0.029 -0.322,-0.476 -0.083,-0.045 -0.073,0.016 -0.097,0.154 -0.204,0.227 -0.156,0.138 -0.004,0.153 -0.17,0.135 -0.197,0.135 -0.066,0.014 -0.131,-0.054 -0.171,-0.179 -0.124,-0.187 -0.307,-0.186 -0.344,-0.157 -0.228,-0.123 -0.13,-0.03 -0.121,0.055 -0.061,0.075 -0.086,0.186 -0.206,0.304 -0.184,0.242 -0.171,0.155 -0.136,0.107 -0.102,-0.1 -0.188,-0.082 -0.221,0 -0.291,0.154 -0.229,-0.308 -0.06,-0.015 -0.088,0.026 -0.102,0.073 -0.07,0.172 -0.074,0.235 -0.146,0.154 -0.121,0.068 0.035,0.132 0.069,0.143 -0.005,0.125 0.044,0.197 0.076,0.197 0.271,0.323 0.104,0.168 0.021,0.146 0.01,0.518 -0.011,0.216 -0.054,0.416 -0.004,0.24 0.113,0.108 0.109,0.129 -0.005,0.07 -0.048,0.025 -0.155,0.143 -0.065,0.019 -0.102,-0.059 -0.132,-0.044 -0.105,-0.057 -0.117,-0.092 -0.277,0.01 -0.455,0.14 -0.094,-0.04 -0.065,-0.079 -0.036,-0.164 0.022,-0.192 -0.04,-0.123 -0.085,-0.073 0.061,-0.343 -0.162,-0.136 0.023,-0.042 -0.054,-0.371 0.007,-0.092 -0.028,-0.031 -0.114,-0.029 -0.17,0.058 -0.517,0.244 -0.444,0.451 -0.203,0.1 -0.205,0.041 -0.241,-0.078 -0.267,-0.051 -0.381,0.114 -0.188,-0.053 -0.087,-0.092 -0.077,-0.14 0.047,-0.178 -0.029,-0.131 -0.152,-0.066 -0.177,-0.057 -0.105,-0.171 -0.042,-0.187 0.041,-0.243 0.021,-0.261 -0.085,-0.12 -0.259,-0.065 -0.653,-0.119 -0.572,-0.065 -0.24,0.031 -0.196,-0.029 -0.113,-0.048 -0.055,-0.082 -0.003,-0.118 0.093,-0.271 0.105,-0.265 0.266,-0.386 0.016,-0.268 -0.014,-0.309 0.132,-0.413 0.229,-0.309 0.113,-0.097 -0.027,-0.138 -0.092,-0.126 -0.131,-0.07 -0.217,-0.081 -0.338,-0.022 -0.464,-0.083 -0.537,-0.184 0.062,-0.353 -0.009,-0.221 -0.066,-0.182 -0.109,-0.129 -0.062,-0.115 0.097,-0.316 -0.125,-0.346 -0.147,-0.138 -0.152,-0.179 -0.012,-0.193 0.069,-0.18 0.372,-0.387 0.003,-0.094 -0.092,0.008 -0.106,0.008 -0.508,0.141 -0.055,-0.089 -0.182,-0.051 -0.371,-0.01 -0.434,0.026 -0.549,0.138 -0.504,0.242 -0.229,0.166 -0.195,0.103 -0.158,0.034 -0.183,-0.073 0.01,-0.237 0.344,-0.435 0.049,-0.299 -0.104,-0.257 -0.012,-0.206 -0.121,-0.131 -0.169,-0.064 -0.09,-0.146 -0.006,-0.428 0.151,-0.441 0.245,-0.139 0.149,-0.067 0.04,-0.086 -0.076,-0.31 0.012,-0.197 0.146,-0.381 0.146,-0.289 0.276,0.048 0.124,-0.072 0.137,-0.103 0.149,-0.174 0.1,-0.207 0.122,-0.48 0.083,-0.072 0.348,0.08 0.104,-0.056 0.19,-0.282 0.18,-0.344 0.261,-0.106 0.188,-0.011 0.087,-0.114 -0.005,-0.168 -0.179,-0.267 -0.075,-0.213 0.022,-0.13 0.256,-0.079 0.063,-0.155 -0.038,-0.34 0.105,-0.409 0.063,-0.479 0.021,-0.358 -0.003,-0.273 -0.025,-0.287 -0.036,-0.524 -0.117,-0.457 0.021,-0.172 -0.016,-0.555 -0.072,-0.474 -0.144,-0.083 -0.268,-0.154 -0.146,-0.03 -0.122,0.056 -0.046,0.165 -0.118,0.154 -0.145,-0.038 -0.069,-0.154 -0.093,-0.202 -0.311,-0.961 -0.034,-0.277 -0.055,-0.276 -0.104,-0.138 -0.11,-0.082 -0.248,-0.324 -0.13,-0.135 -0.063,-0.022 -0.136,0.023 -0.134,0 -0.109,-0.162 -0.1,-0.198 -0.1,-0.097 -0.168,-0.054 -0.172,0.021 -0.101,0.171 -0.068,0.097 -0.13,0.228 -0.21,0.315 -0.096,0.116 -0.093,-0.06 -0.405,-0.328 -0.195,-0.091 -0.266,0.099 -0.415,-0.078 -0.16,-0.015 -0.346,-0.262 -0.141,-0.032 -0.491,0.171 -0.108,0.121 -0.063,0.002 -0.131,-0.061 -0.107,-0.081 -0.007,-0.051 0.133,-0.128 0.01,-0.09 -0.007,-0.091 0.191,-0.258 0.521,-0.5 -0.087,-0.21 -0.205,-0.414 -0.027,-0.201 -0.089,-0.091 -0.249,0.074 -0.518,0.376 -0.071,-0.041 0.013,-0.13 -0.054,-0.379 0.164,-0.114 0.252,-0.139 0.194,-0.155 0.045,-0.125 -0.053,-0.039 -0.286,0.049 -0.113,-0.085 -0.187,-0.349 -0.137,-0.137 -0.124,-0.074 -0.422,0.18 -0.49,0.247 -0.546,0.344 0.003,0.176 -0.065,0.045 -0.104,0.111 -0.102,0.153 -0.087,0.054 -0.102,0.005 -0.208,-0.043 -0.377,-0.174 -0.409,-0.144 -0.088,0.016 -0.556,-0.102 -0.018,-0.082 -0.084,-0.161 -0.158,-0.146 -0.151,-0.049 -0.435,0.308 -0.491,0.229 -0.279,0.271 -0.23,0.269 -0.264,0.052 -0.012,0.166 -0.111,0.149 -0.2,0.184 -0.397,0.234 -0.269,0.126 -0.854,0.115 -0.305,0.078 -0.128,0.123 -0.137,0.312 -0.108,0.287 -0.236,0.237 -0.43,0.316 -0.505,0.256 -0.139,0.17 -0.025,0.101 0.063,0.037 0.062,0.077 0,0.116 -0.065,0.126 -0.33,0.22 -0.186,0.105 -0.185,0.067 -0.207,0.012 -0.199,-0.03 -0.055,-0.036 -0.079,0.046 -0.182,0.046 -0.158,0.015 -0.347,0.244 -0.191,0.002 -0.238,-0.053 -0.314,-0.042 -0.227,0 -0.007,-0.129 0.035,-0.387 -0.103,-0.09 -0.314,-0.095 -0.354,-0.126 -0.17,-0.134 -0.095,-0.045 -0.133,0.022 -0.213,0.141 -0.202,0.166 -0.16,0.014 -0.164,-0.077 -0.156,-0.102 -0.536,-0.143 -0.24,-0.021 -0.429,0.024 -0.35,-0.03 -0.055,-0.044 10e-4,-0.08 0.052,-0.155 0.03,-0.153 -0.041,-0.087 -0.357,-0.107 -0.326,-0.077 -0.347,-0.029 -0.233,0.054 -0.228,0.12 -0.188,0.216 -0.272,0.094 -0.325,0.161 -0.157,0.15 -0.238,0.322 -0.346,0.395 -0.314,0.385 -0.163,0.374 -0.216,0.235 -0.219,0.169 -0.158,0.465 -0.165,-0.147 -0.189,-0.211 -0.045,-0.289 0.224,-0.768 0.053,-0.32 -0.057,-0.122 -0.07,-0.315 -0.133,-0.104 -0.38,-0.165 -0.121,-0.005 -0.13,0.114 -0.127,0.072 -0.169,0.072 -0.424,0.135 -0.376,0.063 -0.09,0.05 -0.028,0.09 0.03,0.107 -0.242,-0.041 -0.253,-0.023 -0.204,0.015 -0.499,0.204 -0.169,0.02 -0.188,-0.021 -0.256,-0.006 -0.487,0.006 -0.419,-0.052 -0.341,-0.285 -0.241,-0.126 -0.257,-0.097 -0.259,-0.073 -0.086,-0.153 -0.082,-0.077 -0.213,-0.025 -0.169,0.056 -0.105,0.385 -0.09,0.076 -0.214,0.034 -0.225,-0.098 -0.311,-0.198 -0.122,-0.22 -0.104,-0.071 -0.164,0.097 -0.009,0.282 -0.032,0.189 -0.195,0.077 -0.113,-0.056 -0.091,-0.194 -0.229,-0.461 -0.227,-0.27 -0.229,-0.18 -0.751,0.005 -0.557,-0.053 -0.252,-0.074 -0.095,-0.178 0.092,-0.356 0.108,-0.278 -0.003,-0.065 -0.092,-0.033 -0.16,-0.022 -0.601,0.178 -0.164,-0.021 -0.104,-0.061 -0.127,-0.052 -0.105,-0.083 -0.073,-0.121 -0.52,-0.297 -0.153,-0.163 -0.277,-0.204 -0.234,-0.139 -0.148,-0.398 -0.135,-0.383 -0.074,-0.204 -0.223,-0.108 -0.241,-0.082 -0.408,0.167 -0.335,0.127 -0.246,0.013 -0.355,-0.393 -0.285,-0.425 -0.337,-0.371 -0.224,-0.187 -0.397,-0.018 -0.447,-0.209 -0.6,-0.476 -0.433,-0.355 -0.746,-0.395 -0.174,-0.166 -0.066,-0.141 -0.102,-0.278 -0.156,-0.264 -0.529,-0.115 -0.598,-0.082 -0.631,0.162 -0.454,0.79 -0.219,0.172 -0.188,0.01 -0.154,-0.201 -0.127,-0.211 -0.069,-0.234 -0.314,-0.173 -0.355,-0.226 -0.182,-0.176 -0.205,-0.11 -0.191,-0.047 -0.368,-0.149 -0.417,-0.168 -0.196,-0.023 -0.014,-0.12 0.059,-0.255 -0.036,-0.245 -0.126,-0.1 -0.19,0.026 -0.44,-0.348 -0.022,-0.018 -0.125,-0.099 -0.217,-0.142 -0.366,0.01 -0.277,0.052 -0.203,-0.145 -0.294,-0.23 -0.053,-0.051 -0.087,-0.084 -0.298,-0.444 -0.352,-0.526 -0.178,-0.077 -0.092,0.04 -0.104,0.279 -0.078,-0.028 -0.131,0.019 -0.154,0.098 -0.148,0.025 -0.095,-0.029 -0.04,-0.069 0.042,-0.369 -0.09,-0.115 0.08,-0.257 0.135,-0.222 -0.138,-0.165 -0.17,-0.236 -0.019,-0.214 0.092,-0.27 0.045,-0.231 -0.028,-0.085 -0.134,-0.129 -0.511,-0.636 -0.027,-0.067 -0.086,-0.212 -0.04,-0.32 -0.066,-0.229 -0.078,-0.176 0.006,-0.083 0.059,-0.043 0.319,-0.043 0.295,-0.027 0.194,-0.06 0.101,0.128 0.047,0.196 0.051,0.103 0.187,0.186 0.228,0.178 0.221,-0.023 0.195,-0.076 0.169,-0.29 0.119,-0.071 0.139,-0.013 0,-0.021 -0.008,-0.187 0.049,-0.461 -0.017,-0.185 -0.063,-0.167 0.011,-0.186 -0.021,-0.27 -0.159,-0.185 -0.104,-0.071 -0.017,-0.1 0.054,-0.185 0.037,-0.213 -0.055,-0.157 -0.009,-0.024 -0.129,-0.081 -0.151,-0.137 -0.18,-0.185 -0.089,-0.134 -0.146,-0.148 -0.178,-0.23 -0.033,-0.505 -0.018,-0.532 -0.062,-0.265 -0.099,-0.423 0.015,-0.142 0.06,-0.108 0.502,-0.342 0.109,-0.133 0.018,-0.101 -0.02,-0.15 -0.095,-0.167 -0.2,-0.13 -0.286,-0.212 -0.259,-0.221 -0.436,-0.135 -0.529,-0.165 -0.127,-0.161 -0.128,-0.394 -0.218,-0.602 -0.232,-0.643 -0.179,-0.397 -0.009,-0.191 0.107,-0.488 -0.013,-0.104 -0.094,-0.036 -0.179,0.064 -0.143,0.077 -0.122,-0.04 -0.113,-0.082 -0.023,-0.028 -0.009,-0.011 -0.212,0.053 -0.425,0.03 -0.147,-0.005 -0.206,-0.007 -0.426,-0.112 -0.575,-0.151 -0.593,-0.21 -0.314,-0.167 -0.11,-0.058 -0.269,-0.174 -0.191,-0.15 -0.034,-0.393 -0.139,0.03 -0.326,0.142 -0.376,0.09 -0.208,0.001 -0.084,-0.063 -0.125,-0.415 -0.091,-0.117 -0.169,-0.046 -0.184,-0.073 -0.093,-0.108 -0.021,-0.137 0.082,-0.157 0.097,-0.121 0.017,-0.74 -0.063,-0.263 -0.053,-0.221 -0.135,-0.275 -0.126,-0.17 -0.19,-0.158 -0.295,-0.164 -0.263,-0.061 -0.318,0.12 -0.101,-0.046 -0.133,-0.508 -0.085,-0.104 -0.565,-0.209 -0.256,-0.048 -0.295,0.065 -0.168,0.056 -0.135,-0.093 -0.211,-0.118 -0.207,-0.081 -0.257,-0.003 -0.166,0.05 -0.042,-0.029 -0.08,-0.093 -0.342,-0.281 -0.012,-0.071 0.524,-0.277 0.309,-0.105 0.162,-0.084 0.034,0.018 0.08,0.128 0.204,0.084 0.144,-0.023 0.075,-0.064 0.254,-0.153 0.198,-0.178 0.111,-0.146 -0.06,-0.23 -0.312,-0.279 -0.198,-0.149 -0.061,-0.101 0.051,-0.303 0.072,-0.301 -0.048,-0.115 -0.059,-0.098 -0.026,-0.329 -0.136,-0.398 -0.148,-0.232 -0.041,-0.314 -0.008,-0.294 0.179,-0.462 -0.066,-0.2 -0.188,-0.178 -0.648,-0.322 -0.664,-0.213 -0.253,0.008 -0.157,-0.013 -0.186,0.188 -0.111,0.246 -0.155,0.022 -0.283,-0.104 -0.189,-0.158 -0.134,-0.329 -0.104,-0.424 -0.059,-0.133 0.03,-0.115 0.065,-0.102 0.181,-0.096 0.03,-0.098 -0.027,-0.121 -0.146,-0.153 -0.149,-0.216 -0.233,-0.449 0.045,-0.248 0.037,-0.357 -0.014,-0.188 0.236,-0.049 0.301,-0.097 0.14,-0.161 0.097,-0.164 0.021,-0.102 -0.091,-0.393 -0.12,-0.175 -0.012,-0.136 0.059,-0.104 0.079,-0.179 0.152,-0.368 0.148,-0.235 0.081,-0.059 0.181,-0.055 0.442,-0.065 0.475,-0.165 0.564,-0.494 0.188,-0.141 0.246,-0.071 0.176,0.005 0.032,-0.06 -0.114,-0.307 0.028,-0.111 0.067,-0.087 0.085,-0.04 0.391,0.162 0.299,-0.017 0.364,-0.096 0.785,-0.542 0.098,0.008 0.079,0.073 0.095,0.327 0.108,0.688 0.06,0.086 0.546,0.009 0.372,-0.25 0.163,-0.059 0.264,0.041 0.14,-0.117 0.146,-0.082 0.169,0.288 0.218,-0.138 0.235,-0.219 0.115,-0.227 0.159,-0.245 0.124,-0.311 0.05,-0.294 0.061,-0.138 0.132,-0.142 0.325,-0.607 0.234,-0.155 0.222,-0.055 0.549,0.105 0.285,-0.013 0.836,0.08 0.386,-0.117 0.27,-0.116 0.396,0.018 0.469,-0.092 0.625,-0.765 0.008,-0.163 0.038,-0.173 0.226,-0.171 0.281,-0.157 0.56,-0.375 1.139,-0.595 0.408,-0.239 0.17,0.006 0.42,-0.15 0.736,-0.292 0.208,-0.364 0.194,-0.073 0.86,-0.065 0.054,-0.042 0.03,-0.062 -0.048,-0.264 -0.056,-0.227 0.067,-0.067 0.072,-0.104 -0.011,-0.146 -0.139,-0.474 -0.074,-0.45 -0.049,-0.407 0.009,-0.152 0.104,-0.263 0.135,-0.239 0.487,-0.223 0.323,-0.067 0.013,-0.146 -0.261,-0.091 -0.189,-0.146 -0.033,-0.083 0.009,-0.095 0.044,-0.087 0.328,-0.164 0.309,-0.163 0.377,0.099 0.074,-0.063 0.022,-0.163 -0.081,-0.164 -0.076,-0.269 -0.174,-0.138 -0.007,-0.165 0.107,-0.285 -0.148,-0.528 -0.161,-0.467 -0.273,-0.802 -0.181,-0.232 -0.101,-0.371 -0.113,-0.195 0.01,-0.289 0.019,-0.203 -0.029,-0.403 -0.053,-0.438 0.053,-0.445 0.102,-0.294 -0.027,-0.113 0.054,-0.084 0.154,-0.028 0.073,-0.121 -0.073,-0.124 -0.266,-0.096 -0.297,-0.149 -0.357,0.017 -0.366,0.026 -0.183,-0.11 -0.16,-0.141 -0.009,-0.09 0.22,-0.238 0.306,-0.247 0.475,-0.109 0.523,-0.163 0.265,-0.118 0.353,-0.085 0.408,-0.036 0.205,0.024 0.525,-0.158 0.826,-0.306 0.75,-0.257 0.252,-0.153 0.188,0.153 0.087,0.337 0.219,0.174 0.217,0.084 0.125,-0.004 0.374,-0.131 0.404,-0.096 0.159,0.052 0.205,0.172 0.23,0.154 0.12,-0.007 0.105,-0.119 0.106,-0.24 0.067,-0.306 0.014,-0.324 -0.04,-0.198 -0.081,-0.073 -0.368,-0.117 -0.351,-0.191 -0.04,-0.175 0.008,-0.125 0.093,-0.306 0.229,-0.563 0.23,-0.779 0.122,-0.617 0.385,-0.923 0.303,-0.966 0.49,-1.396 0.082,-0.277 0.045,-0.443 0.026,-0.183 0.171,-0.096 0.288,0.094 0.703,0.32 0.535,0.269 0.224,0.091 0.333,0.095 0.515,0.112 0.298,-0.033 0.261,-0.066 0.348,-0.006 0.543,0.083 0.168,0.003 0.209,0.011 0.148,0.136 0.074,0.307 0.112,0.138 0.203,-0.051 0.432,-0.271 0.276,-0.213 0.345,-0.309 0.342,-0.042 0.363,-0.069 0.126,-0.153 0.134,-0.36 0.223,-0.272 0.037,-0.346 -0.078,-0.244 -0.155,-0.398 0.005,-0.269 -0.075,-0.781 -0.1,-0.705 0.102,-0.569 0.18,-0.638 0.07,-0.196 0.114,-0.257 0.161,-0.309 0.226,-0.097 0.635,-0.066 0.588,-0.13 0.3,-0.134 0.312,-0.081 0.186,-0.098 0.32,-0.453 0.152,-0.261 0.112,-0.694 -0.082,-0.334 0.068,-0.296 0.155,-0.174 0.218,-0.175 0.146,-0.03 0.311,-0.053 0.51,0.018 0.26,0.085 0.264,0.04 0.167,-0.063 0.111,-0.133 0.171,-0.042 0.257,-0.064 0.265,-0.08 0.146,0.015 0.03,0.197 -0.024,0.154 0.051,0.206 0.105,0.136 -0.034,0.147 -0.148,0.085 -0.146,0.115 -0.032,0.157 0.185,0.195 0.063,0.187 0.31,0.112 0.241,0.126 0.09,0.121 -0.027,0.136 -0.111,0.146 -0.107,0.157 -0.014,0.094 0.034,0.11 0.232,0.073 0.269,0.121 0.426,0.156 0.292,0.29 0.29,0.08 0.14,0.282 0.025,0.409 0.297,0.208 0.439,0.289 0.223,0.053 0.149,0.164 0.215,0.198 0.191,0.062 0.227,0.029 0.374,-0.184 0.42,-0.018 0.229,0.105 0.218,0.396 0.154,0.125 0.091,0.111 0.147,0.106 0.149,0.016 0.222,-0.088 0.135,-0.175 0.194,0.036 0.073,0.114 0.036,0.195 0.103,0.242 0.246,0.18 0.344,0.107 0.048,0.088 0.048,0.241 0.093,0.167 0.125,0.218 0.119,0.397 0.025,0.328 0.055,0.18 0.159,0.293 0.254,0.468 0.202,0.396 0.234,0.077 0.199,0.125 0.114,0.292 0.211,0.549 0.034,0.358 0.018,0.267 0.069,0.121 0.015,0.151 -0.176,0.573 -0.149,0.258 -0.019,0.217 0.101,0.377 0.139,0.292 0.014,0.279 -0.118,0.204 -0.203,0.255 -0.098,0.146 -0.158,0.128 -0.242,0.492 -0.109,0.543 -0.025,0.279 0.092,0.202 0.154,0.222 0.038,0.192 0.253,0.429 0.067,0.265 0.104,0.009 0.111,-0.087 0.271,-0.006 0.246,0.094 0.236,0.196 0.253,0.104 0.362,-0.026 0.193,0.105 0.208,0.086 0.431,0.03 0.323,-10e-4 0.496,0.003 0.401,0.132 0.705,0.104 0.436,-0.008 0.586,-0.098 0.359,0.062 1.063,0.146 0.622,0.153 0.394,0.172 0.277,0.272 0.317,0.424 0.252,0.194 0.677,0.117 0.465,0.494 0.363,0.184 0.611,0.477 0.432,0.186 0.517,0.171 0.843,-0.073 0.047,0.064 -0.065,0.258 -0.051,0.353 0,0.255 0.087,0.13 0.322,0.077 0.152,0.125 0.116,0.24 0.067,0.149 0.271,0.734 0.434,1.081 0.05,0.415 0.148,0.267 0.471,0.423 0.247,0.313 0.368,0.328 0.121,0.303 0.027,0.391 0.093,0.101 0.673,-0.09 0.583,-0.063 1.046,-0.112 1.44,0.204 1.485,0.197 1.313,0.174 0.647,0.085 1.462,0.183 0.813,-0.233 0.635,-0.182 0.288,0.025 1.214,0.205 0.712,0.11 0.896,0.138 0.622,0.051 0.51,-0.003 0.235,0.058 0.227,0.089 0.151,0.13 0.466,0.656 0.261,0.289 0.517,0.218 1.174,0.249 0.65,0.151 0.746,0.173 0.492,0.261 0.566,0.303 0.733,0.392 0.803,-0.171 0.864,-0.185 0.542,-0.116 0,0.818 0.773,0.065 0.242,-0.009 0.342,0.18 0.192,-0.076 0.183,-0.177 0.229,-0.28 0.329,-0.123 0.569,-0.314 0.139,-0.076 0.845,-0.447 1.262,-0.552 0.566,-0.268 0.169,-0.06 0.32,-0.137 0.216,-0.095 0.382,-0.076 0.518,-0.048 0.566,-0.104 1.28,-0.196 0.161,-0.018 0.719,-0.081 0.306,-0.076 0.457,0.04 0.597,0.028 0.396,0.05 0.525,-0.039 0.722,-0.053 0.584,0.008 0.29,-0.066 0.428,-0.207 0.287,-0.164 0.451,-0.199 0.56,-0.207 0.39,-0.188 0.258,-0.125 0.313,-0.118 0.082,-0.152 0.09,-0.117 0.166,-0.195 0.299,-0.364 0.228,-0.319 0.112,-0.142 0.256,-0.319 0.207,-0.241 0.264,-0.325 0.222,-0.105 0.282,-0.089 0.741,-0.319 0.147,-0.069 0.123,-0.014 0.262,-0.258 0.222,-0.224 0.145,-0.167 0.301,-0.061 0.154,-0.121 0.027,-0.158 -0.031,-0.242 -0.145,-0.248 -0.122,-0.217 -0.43,-0.414 -0.228,-0.257 -0.232,-0.331 -0.095,-0.311 -0.159,-0.198 -0.076,-0.176 0.024,-0.203 0.221,-0.362 0.07,-0.229 0.092,-0.405 0.207,-0.607 0.169,-0.285 0.195,-0.278 0.413,-0.374 0.378,-0.069 0.225,0.074 0.503,0 0.335,0.02 0.247,0.187 0.273,0.369 0.309,0.135 0.962,0.289 0.411,0.061 0.294,0.013 0.435,0.095 0.146,0.021 0.223,0.065 0.184,-0.07 0.279,-0.247 0.351,-0.277 0.151,-0.064 0.279,-0.12 0.14,-0.113 0.245,-0.312 0.318,-0.242 0.388,-0.364 0.191,-0.274 0.042,-0.177 0.042,-0.192 0.12,-0.101 0.236,-0.093 0.266,-0.025 0.506,0.165 0.684,-0.047 0.153,-0.024 0.623,-0.095 0.281,-0.078 0.396,-0.075 0.304,-0.306 0.407,-0.365 0.296,-0.203 0.197,-0.039 0.246,-0.211 0.121,-0.227 -0.032,-0.2 -0.046,-0.165 0.145,-0.307 0.262,-0.538 0.244,-0.251 0.202,-0.203 0.129,-0.327 0.159,-0.094 0.195,-0.036 0.275,-0.222 0.202,-0.045 0.336,0.106 0.497,0.027 0.317,0.011 0.181,-0.04 0.066,-0.119 -0.002,-0.184 0.101,-0.41 0.038,-0.135 0.091,-0.063 0.306,-0.008 0.206,0.147 0.142,0.122 0.197,0.016 0.203,-0.08 0.271,-0.332 0.452,-0.193 0.24,-0.049 0.426,-0.157 0.269,0.057 0.494,0.046 0.191,-0.04 0.208,0.04 0.189,-0.225 0.15,-0.054 0.318,0.104 0.2,0.174 0.374,0.218 0.477,0.102 0.399,-0.052 0.41,0.092 0.242,-0.008 0.115,-0.086 0.336,-0.183 0.08,-0.248 -0.033,-0.239 0.039,-0.271 -0.099,-0.2 -0.208,-0.296 -0.081,-0.198 -0.007,-0.259 -0.13,-0.247 -0.312,-0.298 -0.205,-0.138 -0.422,-0.516 -0.143,-0.121 -0.049,-0.085 -0.049,-0.173 -0.156,-0.083 -0.205,-0.135 -0.11,-0.138 -0.072,-0.24 -0.043,-0.157 -0.181,-0.13 -0.181,-0.073 -0.204,-0.092 -0.338,-0.135 -0.195,-0.269 -0.344,-0.505 -0.195,-0.17 -0.726,-0.065 -0.261,-0.123 -0.295,0.042 -0.176,0.081 -0.39,-10e-4 -0.202,0.05 -0.257,0.333 -0.341,0.432 -0.281,0.263 -0.2,0.273 -0.093,0.098 -0.182,-0.059 -0.25,-0.307 -0.357,-0.275 -0.331,-0.125 -0.142,-0.069 -0.395,-0.07 -0.305,0.022 -0.389,0.104 -0.38,-0.019 -0.171,-0.066 -0.242,0.007 -0.438,0.286 -0.227,0.325 -0.269,0.102 -0.243,-0.213 -0.28,-0.252 -0.268,-0.316 -0.165,-0.293 -0.092,-0.778 0.321,-0.232 0.41,-0.261 0.031,-0.413 -0.015,-0.461 0.081,-0.514 0.374,-0.475 0.201,-0.394 0.025,-0.246 0.18,-0.409 0.172,-0.432 0.235,-0.568 0.445,-1.012 0.526,-1.202 0.263,-0.602 0.577,0.373 0.372,0.194 0.629,0.294 0.649,0.066 0.621,0.318 0.32,0.096 0.171,0 0.879,-0.774 0.743,-0.657 0.854,-0.514 0.628,-0.07 0.472,-0.15 0.314,-0.231 0.187,-0.386 0.057,-0.542 -0.126,-0.329 -0.308,-0.114 -0.079,-0.115 0.148,-0.117 0.11,-0.227 0.069,-0.338 0.178,-0.322 0.285,-0.304 0.158,-0.338 0.029,-0.372 0.172,-0.372 0.313,-0.371 0.172,-0.346 0.029,-0.32 0.159,-0.392 0.432,-0.695 0.28,-0.803 0.478,-0.552 0.768,-0.568 0.479,-0.565 0.191,-0.562 -0.015,-0.498 -0.222,-0.432 -0.043,-0.44 0.138,-0.449 -0.121,-0.336 -0.379,-0.223 -0.452,-0.055 -0.525,0.113 -0.295,-0.141 -0.065,-0.394 0.141,-0.319 0.347,-0.244 0.57,-0.595 0.794,-0.95 0.79,-0.527 1.178,-0.152 0.95,-0.313 0.968,-0.318 0.699,-0.158 0.119,0.106 0.381,0.026 0.643,-0.054 0.597,-0.137 0.552,-0.221 0.437,-0.052 0.321,0.117 0.189,0.014 z\"\n\t\t\t\tid=\"CN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 274.73775,429.6124 -0.101,0.035 -0.125,0.075 -0.381,0.141 -0.515,0.134 -0.67,0.172 -0.152,0.184 -0.663,1.153 -0.555,0.233 -0.202,0.172 -0.152,0.218 -0.331,0.401 -0.138,0.308 -0.365,0.669 -0.2,0.838 -0.076,0.47 -0.11,0.681 -0.162,0.342 -0.216,0.321 -0.233,0.313 -0.2,0.344 -0.17,0.269 -0.028,0.092 0.083,0.074 0.403,-0.074 0.159,-0.081 0.22,-0.104 0.138,0.056 0.138,0.296 0.156,0.037 0.147,-0.037 0.156,0.074 0.199,0.736 0.169,0.623 0.392,0.389 0.306,0.303 0.074,0.268 0.073,0.378 0.019,0.185 -0.096,0.111 -0.152,0.23 -0.038,0.439 -0.026,0.146 -0.028,0.407 0.02,0.25 0.082,0.195 0.136,0.112 0.276,0.058 0.249,0.068 0.143,0.338 0.203,0.43 0.218,0.181 0.32,0.119 0.229,-0.043 0.534,-0.076 0.459,0.019 0.672,0.115 0.25,-0.004 0.323,-0.022 0.569,-0.233 0.207,-0.035 0.23,0.021 0.336,0.119 0.182,0.094 0.233,0.097 0.34,0.069 0.219,-0.012 0.166,-0.004 0.096,0.044 0.535,0.667 0.464,0.578 0.404,0.485 0.437,0.523 0.034,0.031 0.197,-0.067 0.13,0.029 0.12,0.106 0.207,-0.044 0.294,-0.194 0.428,-0.039 0.563,0.116 0.743,0 0.922,-0.115 0.573,-0.125 0.224,-0.135 0.37,0.014 0.447,0.121 0.241,0.172 0.029,0.169 0.09,0.265 -0.097,0.268 -0.284,0.271 -0.158,0.347 -0.031,0.422 -0.147,0.312 -0.263,0.202 -0.103,0.294 0.058,0.386 -0.028,0.564 -0.115,0.742 0,0.443 0.115,0.145 0.053,0.208 -0.009,0.271 0.043,0.24 0.143,0.312 0.199,0.621 0.166,0.267 0.145,0.098 0.147,0.12 0.424,0.635 0.103,0.134 -0.031,0.117 -0.04,0.087 -0.049,0.056 -0.452,0.378 -0.898,0.822 -0.074,0.104 0.006,0.172 0.26,-0.111 0.279,0.093 0.136,0.018 0.062,0.068 0.081,0.222 0.093,0.037 0.136,0.092 0.266,0.234 0.223,0.246 0.167,0.118 0.118,0.11 0.037,0.16 -0.049,0.16 0.14,0.371 0.095,0.115 0.05,0.141 -0.05,0.142 0.118,0.166 0.128,0.327 0.156,0.399 0.019,0.222 0.065,0.102 0.077,0.296 0.131,0.278 -0.031,0.19 0.055,0.187 -0.531,0.125 -0.048,-0.02 -0.032,-0.069 0.015,-0.531 -0.005,-0.6 -0.082,-0.246 -0.243,-0.394 -0.322,-0.522 -0.088,-0.15 -0.136,-0.086 -0.161,-0.012 -0.118,0.037 -0.158,0.097 -0.149,0.106 -0.288,0.315 -0.29,0.368 -0.17,0.083 -0.17,0.034 -0.15,-0.011 -0.121,-0.099 -0.124,-0.201 -0.149,-0.267 -0.178,-0.087 -0.069,0.082 -0.059,0.157 -0.046,0.156 0.12,0.198 0.103,0.153 -0.177,-0.005 -0.572,0 -0.66,0 -0.659,0 -0.592,0 -0.548,0 -0.209,-0.013 -0.213,-0.09 -0.204,-0.042 -0.108,0.007 -0.193,0.087 -0.251,0.013 -0.169,0.083 -0.136,-0.01 -0.002,0.46 -0.004,0.655 -0.004,0.695 0.152,-0.053 0.131,0.005 0.096,0.049 0.27,-0.04 0.149,0.021 0.142,0.018 0.131,0.002 0.081,0.055 0.108,-0.01 0.116,-0.061 0.139,0.038 0.149,0.098 0.096,0.146 0.086,0.181 0.086,0.096 -0.005,0.173 -0.003,0.136 -0.03,0.113 0.038,0.073 0.028,0.078 -0.008,0.045 -0.05,0.021 -0.109,0.015 -0.116,0.013 -0.081,-0.005 -0.063,-0.07 -0.061,-0.008 -0.088,0.01 -0.094,-0.042 -0.081,-0.088 -0.144,-0.088 -0.154,0.038 -0.106,0.045 -0.109,0.055 -0.099,0.058 -0.099,-0.015 -0.126,0.042 -0.106,0.065 -0.142,0.053 -0.154,0.025 -0.177,0.025 -0.169,0.01 -0.192,0.021 -0.011,0.366 -0.022,0.719 -0.015,0.476 10e-4,0.439 0.074,0.16 0.34,0.338 0.267,0.178 0.226,0.199 0.225,0.083 0.094,0.075 0.062,0.123 0.031,0.129 0.024,0.11 -0.024,0.117 -0.056,0.111 0.024,0.117 0.081,0.092 0.025,0.117 0.056,0.111 0.031,0.111 0.068,0.08 0.086,0.055 0.111,0.092 0.012,0.086 -0.012,0.098 -10e-4,0.074 0.106,0.169 0.031,0.119 -0.049,0.141 -0.048,0.491 -0.122,0.559 -0.079,0.427 -0.127,0.695 -0.148,0.809 -0.181,0.986 -0.179,0.974 -0.172,0.943 -0.156,0.853 -0.172,0.941 -0.104,0.57 -0.05,0.099 -0.144,-0.207 -0.218,-0.195 -0.204,-0.117 -0.087,-0.154 -0.117,-0.314 -0.164,-0.107 -0.115,-0.083 -0.111,0.012 -0.118,0.086 -0.182,0.055 -0.123,-0.008 -0.495,-0.216 -0.081,-0.021 0.318,-0.494 0.569,-0.883 0.362,-0.562 0.401,-0.623 0.205,-0.318 0.027,-0.054 0,-0.082 -0.087,-0.121 -0.193,-0.051 -0.224,-0.093 -0.141,-0.151 -0.195,-0.065 -0.152,-0.107 -0.277,-0.105 -0.166,-0.097 -0.203,-0.035 -0.161,-0.178 -0.587,-0.345 -0.151,-0.032 -0.165,0.053 -0.242,0.055 -0.233,0.188 -0.291,0.061 -0.272,-0.002 -0.142,-0.112 -0.136,-0.041 -0.178,-0.153 -0.314,-0.118 -0.228,-0.082 -0.141,0.038 -0.181,0.171 -0.183,0.17 -0.145,0.106 -0.195,-0.006 -0.233,0.156 -0.229,0.056 -0.231,0.024 -0.266,0.055 -0.295,-0.094 -0.242,-0.083 -0.108,-0.038 -0.098,0.026 -0.152,0.087 -0.272,0.037 -0.213,0.009 -0.151,-0.041 -0.136,-0.151 -0.22,-0.077 -0.242,-0.094 -0.051,-0.195 0.035,-0.146 0.094,-0.21 -0.052,-0.217 -0.102,-0.342 -0.043,-0.14 -0.076,-0.119 -0.119,-0.043 -0.233,0.032 -0.255,-0.129 -0.157,-0.124 -0.081,-0.151 0.086,-0.285 -0.076,-0.243 -0.152,-0.134 -0.098,-0.237 -0.152,-0.188 -0.2,-0.097 -0.201,0.011 -0.157,-0.059 -0.179,-0.2 -0.168,-0.075 -0.19,-0.194 -0.354,-0.086 -0.184,-0.076 -0.105,-0.12 -0.142,-0.214 0.016,-0.118 -0.069,-0.117 -0.061,-0.209 -0.121,-0.309 -0.133,-0.176 -0.137,-0.132 -0.116,-0.112 -0.172,-0.167 -0.211,-0.097 -0.179,-0.102 -0.07,-0.151 -0.06,-0.124 -0.101,0.009 -0.144,-0.011 -0.158,-0.032 -0.167,-0.09 -0.14,-0.109 -0.235,-0.185 -0.128,-0.024 -0.114,0 -0.168,0.181 -0.503,-0.19 -0.431,-0.282 -0.447,-0.073 -0.289,-0.172 -0.267,-0.27 -0.144,-0.183 -0.117,-0.09 -0.569,-0.262 -0.113,-0.025 -0.217,0.122 -0.07,0.073 -0.013,0.209 -0.026,0.119 -0.189,0.072 -0.305,-0.016 -0.211,-0.076 -0.142,-0.011 -0.029,0.06 -0.08,0.025 -0.173,-0.017 -0.255,-0.058 -0.231,-0.077 -0.313,-0.164 -0.145,0.021 -0.356,-0.035 -0.291,-0.094 -0.074,-0.086 -0.126,-0.59 -0.039,-0.041 -0.125,-0.025 -0.211,-0.082 -0.133,-0.095 -0.069,-0.164 -0.083,-0.155 -0.355,0.035 -0.582,-0.205 -0.403,-0.195 -0.369,-0.216 -0.56,-0.426 -0.213,-0.105 -0.264,-0.13 -0.156,-0.21 -0.257,-0.212 -0.086,-0.058 -0.081,-0.191 -0.384,-0.278 0.19,-0.358 0.462,-0.27 0.606,0.209 0.074,-0.418 -0.219,-0.37 0.033,-0.699 0.071,-0.14 0.16,-0.187 0.208,-0.13 0.122,-0.037 0.208,0.064 0.131,-0.14 0.494,0.063 0.15,-0.059 0.103,-0.095 0.121,-0.072 0.154,-0.168 0.089,-0.194 0.074,-0.076 0.171,0.027 0.016,-0.084 0.088,-0.114 0.299,-0.255 -0.003,-0.113 -0.084,-0.246 0.021,-0.09 0.173,-0.031 0.205,-0.069 0.109,-0.235 0.135,-0.205 0.154,-0.302 0.17,-0.019 0.09,-0.353 0.229,-0.309 0.466,-0.916 -0.141,0.02 -0.112,0.123 -0.127,-0.015 -0.145,-0.072 0.042,-0.413 -0.083,-0.049 -0.225,0.318 -0.194,-0.324 -0.018,-0.197 0.082,-0.195 -0.012,-0.131 -0.314,0.098 0.015,-0.122 0.195,-0.125 0.089,-0.13 0.17,-0.142 0.071,-0.214 0.041,-0.333 0.077,-0.357 -0.057,-0.176 -0.092,-0.15 -0.077,-0.666 0.021,-0.388 -0.04,-0.305 -0.08,-0.258 -0.373,-0.339 0.589,-0.388 0.211,-0.293 -0.268,-0.603 -0.35,-0.509 -0.01,-0.305 0.092,0.039 0.118,-0.009 0.107,-0.644 -0.025,-0.199 -0.197,-0.322 -0.244,-0.008 -0.214,-0.405 -0.123,-0.091 -0.099,-0.255 -0.345,-0.497 -0.273,-0.259 0.205,-0.6 0.179,-0.115 0.058,-0.149 -0.07,-0.369 0.02,-0.086 0.042,-0.037 0.042,0.002 0.072,0.056 0.134,0.159 0.112,0.197 0.09,0.06 0.136,-0.065 0.526,-0.393 -0.034,-0.122 0.048,-0.246 0.176,-0.201 0.188,-0.069 0.056,-0.112 -0.045,-0.173 -0.198,-0.431 -0.176,-0.232 -0.113,-0.231 -0.06,-0.213 -0.2,-0.201 0.084,-0.19 0.155,-0.222 0.053,-0.039 0.084,0.061 0.232,0.403 0.369,0.262 0.387,0.423 0.159,0.292 0.126,0.053 0.109,0.105 -0.048,0.079 -0.121,0.083 -0.035,0.169 0.079,0.095 0.083,0.061 0.226,-0.039 0.124,-0.198 -0.083,-0.869 -0.13,-0.435 -0.151,-0.135 -0.135,-0.172 0.091,-0.13 0.241,-0.059 0.316,-0.152 1.158,-0.831 0.397,-0.781 0.304,-0.283 0.343,-0.184 0.42,0.043 0.326,-0.098 0.101,-0.249 -0.089,-0.337 -0.125,-0.204 0.12,-0.295 0.125,-0.449 -0.009,-0.377 0.161,-0.225 -0.056,-0.088 -0.235,0.182 -0.186,0.082 0.105,-0.15 0.329,-0.372 0.171,-0.567 0.131,-0.236 0.464,-0.33 0.092,-0.159 0.351,-0.248 0.565,-0.532 0.216,-0.148 1.095,0.343 0.348,-0.022 -0.062,0.063 -0.161,0.021 -0.232,0.093 -0.067,0.205 0.157,0.214 0.167,0.062 0.142,-0.138 0.141,-0.393 0.227,-0.435 0.053,-0.456 0.161,-0.157 0.235,-0.057 0.42,0.09 0.319,0.094 0.333,0.012 1.021,-0.069 1.66,-1.185 0.771,-0.255 0.483,-0.25 0.308,-0.487 0.083,-0.366 0.227,-0.142 0.238,0 0.109,-0.089 0.034,-0.113 0.574,-0.317 0.329,-0.041 0.291,0.006 0.65,0.276 0.301,0.488 0.05,0.336 -0.412,0.365 -0.108,0.16 z m -19.067,26.222 -0.076,0.062 -0.145,-0.11 -0.049,-0.14 0.089,-0.104 0.114,0.034 0.052,0.085 0.015,0.173 z\"\n\t\t\t\tid=\"CO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 240.15475,432.2994 0.07,0.113 0.081,0.177 0.036,0.228 0.357,0.763 0.285,0.426 0.624,0.776 0.269,0.143 0.455,0.623 0.157,0.103 0.09,0.184 0.472,0.151 0.131,0.112 -0.016,0.052 -0.049,0.055 -0.069,0.055 -0.092,0.038 -0.222,-0.114 -0.219,-0.129 -0.12,0.059 -0.045,0.168 -0.081,0.086 -0.101,0.034 -0.042,0.056 -0.009,0.566 0.008,0.533 0.165,0.012 0.276,0.185 0.118,0.109 0.037,0.101 -0.034,0.049 -0.202,0.116 -0.197,0.147 -0.098,0.183 0.172,0.297 0.037,0.201 -0.006,0.211 -0.048,0.101 -0.381,0.241 -0.083,0.085 0.01,0.061 0.211,0.167 0.099,0.161 0.083,0.194 0.012,0.169 -0.191,-0.313 -0.264,-0.299 -0.23,-0.184 -0.018,-0.429 -0.092,-0.233 -0.346,-0.215 -0.296,-0.151 -0.22,0.031 0.135,0.247 0.347,0.317 0.023,0.121 -0.005,0.163 -0.239,-0.025 -0.212,-0.066 -0.257,-0.021 -0.171,-0.097 -0.363,-0.379 0.258,-0.322 0.08,-0.212 -0.007,-0.44 -0.059,-0.213 -0.28,-0.324 -0.445,-0.357 -0.624,-0.291 -0.293,-0.235 -0.731,-0.18 -0.278,-0.119 -0.217,-0.221 -0.032,-0.159 0.077,-0.245 -0.202,-0.311 -0.87,-0.613 -0.487,-0.225 -0.104,-0.133 -0.077,-0.041 0.074,0.423 0.213,0.255 0.555,0.237 0.153,0.139 0.062,0.18 -0.322,0.344 -0.165,0.087 -0.048,0.188 -0.105,0.057 -0.111,-0.108 -0.45,-0.54 -0.871,-0.259 -0.158,-0.159 -0.324,-0.494 -0.149,-0.45 0.053,-0.301 0.358,-0.469 0.112,-0.204 -0.023,-0.126 0.011,-0.185 -0.133,-0.129 -0.331,-0.169 -0.211,-0.135 0.058,-0.067 0.379,-0.182 0.024,-0.164 -0.002,-0.054 0.062,-0.012 0.055,-0.043 0.034,-0.046 0.103,-0.158 0.091,-0.089 0.105,-0.014 0.127,0.065 0.478,0.171 0.532,0.189 0.757,0.268 0.314,-0.172 0.27,-0.131 0.188,0.019 0.407,0.153 0.245,0.049 0.15,-0.016 0.26,0.225 0.142,0.169 0.024,0.112 0.079,0.061 0.203,0.013 0.496,0.114 0.303,-0.022 0.276,-0.121 0.152,-0.145 z\"\n\t\t\t\tid=\"CR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 245.21975,396.4924 0.735,0.141 0.594,-0.04 0.284,-0.083 -0.026,0.085 0.261,0.209 0.095,0.014 0.384,-0.106 1.003,-0.04 0.103,0.059 0.177,0.204 0.256,0.126 0.265,0.096 0.277,0.025 0.276,-0.043 0.259,0.021 0.324,0.198 0.102,0.023 0.29,-0.054 -0.085,0.182 0.488,0.254 0.358,0.5 0.26,0.205 0.275,0.184 0.232,0.125 0.26,0.06 0.789,-0.024 0.187,0.015 0.167,0.071 0.159,0.028 0.092,-0.027 1.524,0.776 0.485,0.414 0.296,0.215 0.641,0.31 0.257,0.068 0.135,-0.041 -0.026,-0.068 -0.188,-0.172 -0.028,-0.063 0.241,0.053 0.435,0.35 0.12,0.129 0.217,0.12 0.219,0.086 -0.104,0.138 -0.178,0.012 -0.341,-0.057 0.271,0.225 0.046,0.163 0.126,0.014 0.188,-0.179 0.119,-0.151 0.479,0.39 0.258,0.178 -0.066,0.104 -0.021,0.103 0.288,-0.096 0.109,0.011 0.105,0.055 0.115,0.167 0.269,0.037 0.271,-0.004 0.55,0.138 0.521,0.281 0.49,0.057 0.494,0.01 0.25,0.148 0.106,0.2 -0.12,0.141 -0.068,0.147 0.184,0.181 -0.401,0.077 -0.057,0.109 0.021,0.117 0.08,0.064 0.229,-0.056 0.332,0.05 0.523,0.044 0.35,-0.036 0.712,0.123 0.216,0.066 0.422,0.231 0.195,0.152 0.419,0.41 0.361,0.161 0.313,0.039 0.109,-0.027 0.099,0.045 0.087,0.057 0.086,0.179 -0.048,0.188 -0.179,0.153 -0.099,0.111 -0.447,0.013 -0.625,0.051 -0.604,0.166 -0.295,0.132 -0.135,0.087 -0.318,0.081 -0.021,-0.069 0.006,-0.087 -0.083,-0.161 -0.072,0.145 -0.118,0.106 -0.199,0.09 -0.734,0.006 -0.295,-0.122 -0.303,-0.083 -1.104,-0.087 -0.265,0.007 -0.737,0.091 -0.741,0.049 -0.31,0.056 -0.307,0.084 -0.597,-0.003 -0.705,0.096 -0.707,0.018 0.453,-0.673 0.955,-0.649 0.18,-0.14 0.128,-0.179 0.03,-0.135 -0.042,-0.115 -0.228,-0.204 -0.046,-0.151 -0.068,-0.098 -0.331,-0.085 -0.335,-0.051 -0.353,-0.001 -0.741,-0.07 -0.394,-0.005 -0.334,-0.139 -0.554,-0.494 -0.259,-0.139 -0.133,-0.111 -0.104,-0.128 -0.13,-0.728 -0.11,-0.35 -0.168,-0.305 -0.256,-0.231 -0.268,-0.079 -1.028,0.198 -0.239,-0.03 -0.233,-0.067 -1.552,-0.473 -0.64,-0.26 -0.261,-0.129 -0.223,-0.184 -0.231,-0.302 -0.259,-0.27 0.001,0.109 -0.04,0.071 -1.299,0.032 -0.207,-0.062 -0.133,-0.074 -0.094,-0.109 -0.07,-0.219 -0.124,-0.184 -0.04,0.196 -0.064,0.181 -0.174,0.101 -0.199,0.017 -0.241,-0.24 -1.053,-0.05 -0.093,-0.041 -0.346,-0.233 -0.295,-0.292 0.293,-0.103 0.606,-0.135 0.131,-0.09 0.076,-0.116 -0.055,-0.172 -0.121,-0.125 -0.124,-0.073 -0.137,-0.046 -0.181,-0.02 -2.343,-0.031 -0.135,0.094 -0.21,0.191 -0.416,0.245 -0.274,0.254 -0.103,0.131 -0.128,0.094 -0.288,0.157 -0.246,0.242 -0.298,0.108 -0.163,-0.066 -0.161,10e-4 -0.117,0.06 -0.123,0.027 -0.601,0.029 -0.09,0.062 -0.086,0.173 -0.098,0.337 -0.092,0.111 -0.301,0.042 -0.287,0.092 -0.584,0.32 -0.151,0.047 0.033,-0.235 -0.029,-0.229 -0.165,-0.008 -0.188,0.038 -0.157,0.064 -0.29,0.171 -0.147,0.043 -0.137,-0.087 0.028,-0.112 0.967,-0.412 0.108,-0.031 0.172,0.031 0.168,-0.014 0.131,-0.116 -0.159,-0.546 0.061,-0.372 0.224,-0.288 0.448,-0.437 0.216,-0.144 2.209,-0.913 0.226,-0.047 1.436,-0.184 0.219,-0.064 0.666,-0.271 0.699,-0.111 0.749,0.087 z m 6.982,1.511 0.005,0.08 -0.491,-0.222 -0.211,-0.231 -0.085,-0.053 0.138,-0.005 0.553,0.379 0.091,0.052 z m 2.019,0.338 0.385,0.064 0.134,-0.039 0.128,-0.011 0.135,0.027 0.189,0.251 -0.166,0.031 -0.132,0 -0.097,-0.045 -0.346,-0.011 -0.228,-0.073 -0.125,-0.063 -0.061,-0.076 0.184,-0.055 z m 1.692,0.806 -0.057,0.05 -0.152,-0.112 -0.22,-0.049 -0.129,-0.175 -0.124,-0.067 -0.01,-0.064 0.204,-0.042 0.142,0.019 0.158,0.133 0.091,0.246 0.097,0.061 z m 0.415,0.476 -0.092,0.008 -0.279,-0.125 -0.083,-0.105 0.098,-0.141 0.021,-0.153 0.038,-0.01 0.045,0.186 0.213,0.079 0.013,0.041 0.131,0.157 -0.105,0.063 z m 0.591,0.528 -0.115,0.092 -0.126,-0.133 -0.08,-0.014 -0.111,-0.053 -0.215,-0.148 -0.052,-0.153 0.179,-0.012 0.226,0.027 0.395,0.087 -0.035,0.173 -0.066,0.134 z m -13.732,1.142 -0.261,0.159 -0.557,0.224 -0.299,0.008 -0.302,-0.084 -0.208,-0.187 -0.119,-0.185 0.01,-0.089 0.189,0.148 0.163,0.073 0.134,-0.049 0.095,-0.08 -0.306,-0.598 0.014,-0.126 0.243,-0.329 0.661,0.1 0.115,0.058 0.092,0.208 0.147,0.163 0.173,0.436 0.016,0.15 z\"\n\t\t\t\tid=\"CU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 404.25675,414.9664 -0.273,0.06 -0.116,-0.029 -0.038,-0.232 -0.055,-0.153 0.013,-0.068 0.627,-0.299 0.221,0.05 0.154,0.239 -0.105,0.132 -0.428,0.3 z m 0.793,0.374 -0.23,0.07 -0.143,-0.009 -0.205,-0.103 0.064,-0.111 0.222,-0.124 0.153,-0.026 0.125,0.221 0.014,0.082 z m 5.61,0.464 -0.09,0.149 -0.11,-0.219 -0.06,-0.052 -0.029,-0.314 0.163,-0.094 0.079,-0.008 0.002,0.325 0.045,0.213 z m -3.366,0.106 0.116,0.085 0.038,0.062 -0.172,0.032 -0.418,-0.112 -0.111,0.068 -0.111,0.241 -0.213,-0.365 0.015,-0.134 0.045,-0.039 0.296,0.096 0.515,0.066 z m 3.283,1.12 0.234,0.053 0.089,-0.019 0.149,0.012 0.16,0.152 0.03,0.162 -0.079,0.203 -0.31,0.167 -0.179,-0.02 -0.211,-0.152 0.121,-0.3 -0.004,-0.258 z m -1.478,3.56 -0.169,0.265 -0.372,-0.021 -0.191,-0.109 -0.224,-0.333 0.007,-0.258 0.079,-0.224 -0.014,-0.194 0.032,-0.051 0.115,0.034 0.019,0.131 0.338,0.32 0.125,0.062 0.255,0.378 z m 0.736,-0.372 -0.078,0.011 -0.117,-0.13 0.026,-0.18 -0.013,-0.047 0.104,-0.192 0.204,0.017 0.052,0.143 0.01,0.294 -0.188,0.084 z m -3.16,0.81 -0.218,0.11 -0.153,-0.048 -0.145,-0.114 -0.07,-0.165 0.057,-0.142 0.294,-0.167 0.176,0.054 0.094,0.26 -0.035,0.212 z\"\n\t\t\t\tid=\"CV\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 281.94575,429.0484 -0.146,0.041 -0.539,-0.275 -0.445,-0.447 -0.014,-0.233 0.114,0.02 0.116,0.089 0.179,0.316 0.521,0.208 z\"\n\t\t\t\tid=\"CW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 771.61175,492.3404 -0.08,0.202 -0.147,-0.111 -0.169,-0.036 0.033,-0.15 0.139,-0.021 0.069,-0.008 0.099,-0.053 z\"\n\t\t\t\tid=\"CX\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 571.61575,356.5314 -1.463,1.034 -0.095,0.307 0.065,0.212 0.206,0.257 0.054,0.067 0.074,0.195 -0.319,0.058 -0.32,0.019 -0.178,-0.026 -0.168,0.012 -0.519,0.557 -0.279,0.189 -0.332,0.112 -0.338,0.067 -0.17,0.009 -0.15,0.07 -0.105,0.129 -0.002,0.125 -0.045,0.103 -0.186,-0.021 -0.077,-0.202 -0.132,-0.087 -0.329,0.045 -0.16,-0.006 -0.526,-0.192 -0.159,-0.08 -0.099,-0.165 -0.271,-0.596 -0.045,-0.443 0.252,0.114 0.236,-0.138 0.227,-0.225 0.271,-0.092 0.169,0.04 0.168,0.04 0.302,-0.072 0.13,-0.334 0.043,-0.384 0.51,0.11 0.518,0.057 0.423,0.019 0.418,-0.062 1.279,-0.411 0.362,-0.246 0.225,-0.084 0.389,-0.203 0.407,-0.113 z\"\n\t\t\t\tid=\"CY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 516.45775,297.4554 0.242,-0.011 0.245,-0.111 0.02,-0.181 -0.016,-0.338 0.026,-0.049 0.371,0.096 0.372,0.152 0.052,0.336 0.1,0.165 0.118,0.151 0.112,0.068 0.195,0.011 0.505,0.199 0.243,0.04 0.249,0.138 0.21,0.14 0.153,0.03 0.071,0.153 0.094,0.105 0.166,-0.081 0.606,-0.113 0.218,0.151 0.147,0.16 0.02,0.05 -0.077,0.141 -0.037,0.109 -0.063,0.073 -0.208,0.077 -0.117,0.124 -0.086,0.136 0.058,0.13 0.17,0.098 0.12,0.022 0.046,0.095 0.385,0.424 0.306,0.553 0.119,0.086 0.112,0.021 0.13,-0.081 0.15,-0.18 0.177,-0.129 0.15,-0.067 0.265,-0.153 0.011,-0.099 -0.222,-0.375 -0.127,-0.304 0.03,-0.055 0.283,0.048 0.48,0.166 0.739,0.541 0.133,0 0.258,-0.041 0.281,-0.088 0.134,-0.1 0.05,0.037 0.043,0.297 -0.074,0.163 -0.336,0.158 0.019,0.078 0.087,0.101 0.151,0.068 0.184,0.192 0.127,0.219 0.111,0.101 0.122,0.048 0.306,-0.117 0.086,-0.092 0.039,-0.065 0.059,0.014 0.107,0.108 0.033,0.063 0.297,0.122 0.172,0.15 0.109,0.07 0.121,-0.068 0.471,0.119 0.13,0.1 0.041,0.166 -0.023,0.101 0.072,0.26 0.596,0.623 0.062,0.318 0.009,0.127 -0.071,0.006 -0.161,0.066 -0.206,0.024 -0.223,-0.013 -0.174,0.115 -0.164,0.188 -0.17,0.13 -0.091,0.115 -0.052,0.12 -0.572,0.338 -0.08,0.141 -0.063,0.192 -0.027,0.258 -0.04,0.232 -0.099,0.122 -0.309,0.105 -0.077,0.056 -0.058,0.118 -0.173,0.181 -0.203,0.172 -0.374,0.197 -0.401,0.06 -0.521,-0.064 -0.305,-0.077 -0.147,0.085 -0.204,0.256 -0.218,0.44 -0.091,0.331 -0.07,-0.094 -0.125,-0.35 -0.141,-0.045 -0.193,-0.033 -0.145,-0.052 -0.314,-0.202 -0.161,-0.061 -0.185,-0.016 -0.176,0.119 -0.134,0.14 -0.415,-0.002 -0.455,-0.065 -0.651,-0.466 -0.169,-0.004 -0.18,0.021 -0.285,-0.111 -0.551,-0.302 -0.259,-0.071 -0.163,0.043 -0.149,0.068 -0.107,0.008 -0.061,-0.099 -0.205,-0.121 -0.206,-0.014 -0.059,0.073 -0.07,0.665 -0.069,0.24 -0.283,-0.011 -0.101,0.112 -0.222,0.321 -0.043,0.307 -0.386,-0.059 -0.183,-0.052 -0.162,0.039 -0.178,0.17 -0.499,-0.01 -0.395,-0.101 -0.169,-0.381 -0.181,-0.152 -0.228,-0.134 -0.079,-0.031 -0.126,-0.208 -0.239,-0.258 -0.385,-0.354 -0.3,0.018 -0.111,-0.094 -0.049,-0.13 -0.125,-0.225 -0.142,-0.156 -0.171,-0.061 -0.245,-0.2 -0.328,-0.436 -0.3,-0.302 -0.29,0.005 -0.183,-0.158 -0.188,-0.208 -0.138,-0.201 -0.214,-0.49 -0.156,-0.28 -0.121,-0.173 -0.137,-0.144 -0.05,-0.115 0.168,-0.262 0.061,-0.13 0.072,-0.1 0.042,-0.106 -0.002,-0.079 -0.152,-0.26 -0.206,-0.188 -0.303,-0.19 -0.193,-0.241 -0.07,-0.22 -0.021,-0.122 -0.133,-0.164 -0.107,-0.241 0,-0.145 0.027,-0.041 0.1,0 0.112,0.099 0.158,0.19 0.13,0.278 0.079,-0.106 0.149,-0.296 0.264,-0.335 0.27,-0.192 0.243,-0.016 0.199,-0.053 0.165,-0.096 0.289,0.039 0.209,0.069 0.068,-0.043 0.085,-0.175 0.054,-0.151 0.462,-0.088 0.159,-0.292 0.089,0.001 0.103,-0.043 0.098,-0.111 0.094,-0.046 0.075,0.056 0.098,0.036 0.102,-0.07 0.152,-0.336 0.084,-0.052 0.406,-0.052 0.554,-0.198 0.28,-0.176 0.275,-0.096 0.296,-0.171 0.469,-0.166 0.022,-0.068 -0.217,-0.171 -0.073,-0.108 -0.05,-0.111 0.077,-0.123 0.103,-0.037 0.133,0.051 0.393,0.073 0.108,0.071 0.039,0.173 0.1,0.161 0.08,0.018 -0.029,0.262 0.125,0.102 0.184,0.079 0.121,-0.016 0.087,-0.106 z\"\n\t\t\t\tid=\"CZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 498.21075,279.2414 -0.065,0.096 0.031,-0.687 0.307,-0.734 0.13,0.017 -0.133,0.199 -0.039,0.139 -0.054,0.277 0.024,0.144 0.701,0.04 -0.082,0.128 -0.711,0.086 -0.109,0.295 z m 4.019,-0.187 0.017,0.089 0.411,0.129 0.173,0.206 0.192,0.312 0.019,0.448 -0.246,0.322 -0.204,0.204 0.771,-0.077 0.077,0.184 0.117,0.199 0.415,-0.142 1.042,0.587 0.63,-0.286 0.161,-0.017 0.143,0.474 -0.157,0.476 -0.555,0.506 0.123,0.312 0.178,0.069 0.523,-0.066 0.829,0.307 0.173,-0.096 0.672,-0.709 0.269,-0.153 0.884,-0.109 0.161,-0.276 0.358,-0.277 0.23,-0.303 0.553,-0.579 0.572,0.104 0.334,0.111 0.366,0.056 0.333,0.617 0.844,0.679 0.775,-0.059 0.275,0.641 0.122,0.788 0.238,0.247 0.209,0.161 0.631,0.168 0.025,0.01 0.021,0.106 0.039,0.39 0.053,0.322 0.325,1.282 -0.006,0.312 -0.004,0.083 -0.119,0.437 -0.211,0.367 -0.279,0.207 -0.154,0.23 -0.028,0.253 0.351,0.443 0.731,0.633 0.295,0.54 -0.139,0.448 -0.042,0.328 0.054,0.208 0.117,0.167 0.18,0.126 0.072,0.194 -0.037,0.262 0.034,0.182 0.135,0.129 -0.013,0.05 -0.065,0.182 -0.089,0.331 -0.051,0.242 -0.206,0.328 0.063,0.279 0.161,0.328 0.123,0.165 0.039,0.156 -0.078,0.37 0.039,0.095 0.509,0.272 0.083,0.125 0.049,0.261 0.179,0.557 -0.148,0.704 -0.13,0.385 -0.29,0.609 -0.014,0.056 -0.033,0.074 -0.087,0.106 -0.121,0.016 -0.183,-0.079 -0.125,-0.102 0.029,-0.262 -0.081,-0.018 -0.1,-0.161 -0.039,-0.173 -0.108,-0.071 -0.393,-0.073 -0.134,-0.051 -0.103,0.037 -0.077,0.123 0.049,0.111 0.073,0.108 0.218,0.171 -0.022,0.068 -0.47,0.167 -0.295,0.17 -0.275,0.096 -0.28,0.176 -0.553,0.198 -0.406,0.052 -0.084,0.052 -0.151,0.335 -0.102,0.07 -0.099,-0.036 -0.074,-0.055 -0.094,0.045 -0.098,0.111 -0.103,0.043 -0.089,-10e-4 -0.159,0.292 -0.462,0.088 -0.054,0.151 -0.085,0.175 -0.068,0.043 -0.208,-0.069 -0.289,-0.039 -0.166,0.096 -0.199,0.053 -0.243,0.016 -0.271,0.191 -0.264,0.335 -0.148,0.296 -0.08,0.106 -0.129,-0.278 -0.158,-0.19 -0.112,-0.099 -0.1,0 -0.026,0.041 0,0.145 0.107,0.241 0.132,0.165 0.021,0.122 0.071,0.22 0.193,0.241 0.302,0.19 0.206,0.188 0.153,0.26 10e-4,0.08 -0.042,0.106 -0.072,0.1 -0.061,0.13 -0.168,0.262 0.05,0.115 0.137,0.144 0.121,0.173 0.156,0.28 0.214,0.49 0.138,0.201 0.188,0.208 0.184,0.158 0.29,-0.005 0.3,0.302 0.328,0.436 0.245,0.199 0.171,0.061 0.142,0.157 0.125,0.225 0.049,0.13 0.111,0.094 0.3,-0.018 0.386,0.354 0.238,0.258 0.126,0.208 -0.033,0.083 -0.016,0.259 0.004,0.274 -0.038,0.145 -0.172,0.191 -0.089,0.041 -0.048,0.041 -0.529,-0.249 -0.042,0.042 -0.033,0.031 -0.142,0.719 -0.097,0.138 -0.146,0.127 -0.302,0.124 -0.21,0.05 -0.164,0.063 -0.519,0.3 -0.233,0.18 -0.151,0.226 -0.001,0.13 0.252,0.381 0.291,0.394 10e-4,0.345 -0.128,0.258 -0.03,0.099 0.086,0.038 0.161,0.014 0.135,0.044 0.057,0.182 -0.017,0.315 -0.046,0.295 -0.048,0.124 -0.13,0.01 -0.25,-0.127 -0.195,-0.148 -0.075,-0.091 -0.004,-0.109 0.042,-0.069 -0.069,-0.134 -0.24,-0.125 -0.257,0.054 -0.189,0.083 -0.123,-0.005 -0.132,-0.12 -0.204,-0.092 -0.266,-0.061 -0.166,-0.064 -0.035,0.038 0.019,0.259 -0.051,0.113 -1.316,0.15 -0.401,0.14 -0.292,0.181 -0.216,0.078 -0.053,0.111 -0.214,0.146 -0.241,0.046 -0.059,-0.047 -0.155,0.067 -0.264,0.065 -0.171,-0.021 -0.081,-0.118 -0.163,-0.181 -0.066,-0.125 0.007,-0.081 -0.369,-0.016 -0.232,-0.096 -0.494,0.022 -0.122,-0.041 -0.025,0.043 -0.074,0.514 -0.098,0.21 -0.158,0.217 -0.203,0.121 -0.161,0.022 0.007,-0.158 0.041,-0.191 -0.117,-0.045 -0.175,-0.021 -0.084,-0.057 0.022,-0.146 -0.041,-0.085 -0.072,-0.102 -0.176,-0.131 -0.372,-0.194 -0.253,-0.097 -0.095,0.103 -0.181,0.103 -0.285,-0.034 -0.07,0.041 -0.489,-0.31 -0.469,-0.298 -0.155,0 -0.691,0.06 -0.02,-0.026 -0.121,-0.17 -0.106,-0.054 -0.064,0.028 -0.043,0.049 -0.074,-0.008 -0.31,-0.274 -0.127,-0.04 -0.176,0.037 -0.208,0.148 -0.091,0.181 0.028,0.104 0.107,0.045 0.283,-0.03 0.041,0.03 0.01,0.059 -0.031,0.057 -0.229,0.047 -0.066,0.069 -0.067,0.017 -0.043,0.011 -0.244,-0.072 -0.363,0 -0.293,0.127 -0.468,0.051 -0.643,-0.025 -0.231,-0.095 -0.141,-0.057 -0.102,-0.28 0.026,-0.415 0.153,-0.551 0.043,-0.405 -0.068,-0.258 0.091,-0.388 0.25,-0.518 0.167,-0.547 0.083,-0.578 0.121,-0.377 0.238,-0.265 0.565,-0.742 0.046,-0.056 -0.016,-0.371 -0.152,-0.053 -0.223,-0.107 -0.567,-0.132 -0.528,-0.085 -0.24,-0.105 -0.21,-0.281 -0.13,-0.004 -0.255,0.101 -0.318,0.068 -0.232,-0.059 -0.145,0.011 -0.081,0.052 -0.041,-0.046 -0.058,-0.241 -0.121,-0.063 -0.188,-0.056 -0.117,0.024 -0.081,0.12 -0.125,0.084 -0.114,-0.027 -0.359,-0.558 -0.092,-0.124 -0.023,-0.114 -0.09,-0.208 -0.214,-0.208 -0.213,-0.066 -0.106,0.023 0.012,-0.258 0.083,-0.375 0.08,-0.196 0.106,-0.16 0.113,-0.112 0.025,-0.202 -0.018,-0.191 -0.13,-0.03 -0.326,-0.141 -0.193,-0.149 -0.143,-0.187 -0.188,-0.257 -0.08,-0.262 -0.004,-0.261 0.022,-0.117 0.014,-0.081 0.151,-0.408 0.532,-0.366 -0.059,-0.369 -0.008,-0.227 -0.129,-0.148 -0.258,-0.06 -0.068,-0.103 -0.029,-0.101 0.189,-0.227 -0.229,-0.179 -0.104,-0.177 -0.318,-0.234 -0.034,-0.081 0.153,-0.685 -0.117,-0.2 -0.145,-0.102 -0.169,-0.05 -0.078,-0.095 -0.027,-0.109 0.03,-0.067 0.199,0.02 0.062,-0.071 0.474,-0.404 0.02,-0.078 -0.066,-0.044 -0.086,-0.023 -0.022,-0.085 0.003,-0.112 0.253,-0.585 0.075,-0.25 0.017,-0.177 -0.016,-0.175 -0.146,-0.275 -0.141,-0.22 -0.005,-0.175 -0.103,-0.092 -0.292,-0.471 0,-0.182 0.165,-0.142 0.231,-0.09 0.077,-0.075 0.138,-0.047 0.367,0.136 0.164,0.118 0.046,-0.024 0.148,-0.128 0.26,0.02 0.629,-0.258 0.094,-0.124 0.07,-0.132 0.006,-0.058 -0.244,-0.255 -0.007,-0.094 0.032,-0.106 0.069,-0.084 0.144,-0.057 0.153,-0.112 0.343,-0.318 0.119,-0.276 0.037,-0.3 0.007,-0.224 -0.094,-0.178 -0.095,-0.115 -0.129,0.018 -0.251,-0.009 -0.235,-0.1 -0.129,-0.162 -0.032,-0.142 0.059,-0.09 0.018,-0.11 -0.038,-0.111 0.015,-0.093 0.106,-0.075 0.743,0.002 0.056,-0.082 0.05,-0.432 0.186,-0.659 0.175,-0.368 0.029,-0.155 -0.003,-0.875 0.024,-0.445 -0.127,-0.209 -0.277,-0.229 0.059,-0.478 0.092,-0.374 0.279,-0.46 0.221,-0.126 0.965,-0.075 1.066,0.031 0.443,0.695 -0.164,0.356 0.259,0.166 0.125,-0.061 0.095,-0.31 0.063,-0.344 0.091,-0.104 0.33,0.257 0.116,0.176 0.007,0.564 0.122,-0.765 -0.091,-0.537 0.062,-0.522 0.133,-0.272 0.122,-0.173 0.782,0.187 0.864,-0.096 0.327,0.202 0.739,1.007 0.247,0.165 0.311,0.052 -0.429,-0.215 -0.896,-1.226 -0.268,-0.152 -0.412,-0.046 -0.257,-0.12 -0.162,-0.186 -0.047,-0.167 0.009,-1.245 -0.154,-0.186 -0.2,-0.064 -0.125,0.085 -0.256,0.001 -0.054,-0.283 0.063,-0.21 0.514,-0.144 0.339,-0.193 0.015,-0.341 -0.214,-0.269 -0.256,-0.494 -0.301,-0.465 -0.034,-0.542 10e-4,0 0.524,0.01 0.128,0.021 0.794,0.254 0.194,0.178 0.244,0.008 0.44,-0.166 0.329,-0.073 0.127,0.103 0.179,0.043 0.04,0 z m -3.233,0.548 -0.109,0.119 -0.268,-0.014 -0.15,-0.112 0.049,-0.119 0.142,-0.091 0.118,-0.014 0.178,0.056 0.04,0.175 z m 14.373,1.592 0.07,0.323 -0.075,0.165 -0.315,-0.274 -0.317,0.004 -0.189,0.421 -0.141,0.018 -0.489,-0.383 -0.079,-0.187 -0.016,-0.156 0.07,-0.54 -0.013,-0.17 0.154,-0.186 0.024,-0.27 0.271,-0.284 0.242,-0.011 0.076,0.241 0.116,0.166 0.406,0.186 0.061,0.084 0.037,0.117 -0.189,0.228 -0.064,0.117 0.06,0.187 0.3,0.204 z m -6.809,-0.169 -0.431,0.009 -0.165,-0.192 -0.165,-0.049 0.089,-0.237 0.116,-0.087 0.417,0.155 0.131,0.303 0.008,0.098 z m 8.218,2.237 -0.037,0.149 0.043,0.229 -0.116,-0.017 -0.348,0.054 -0.344,-0.076 -0.066,-0.285 0.055,-0.274 -0.138,-0.189 -0.127,-0.111 -0.019,-0.158 0.021,-0.165 0.593,0.442 0.483,0.401 z\"\n\t\t\t\tid=\"DE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 596.26475,430.6434 -0.243,0.381 -0.311,0.488 -0.353,0.554 -0.221,0.004 -0.171,-0.032 -0.118,-0.094 -0.242,-0.103 -0.273,-0.007 -0.26,0.096 -0.44,0.119 -0.398,0.039 -0.321,0.066 -0.265,0.077 -0.24,-0.042 -0.207,-0.069 -0.046,-0.59 -0.048,-0.64 0.005,-0.501 0.073,-0.276 0.065,-0.108 0.376,-0.381 0.13,-0.156 0.429,-0.632 0.369,-0.543 0.275,-0.405 0.085,-0.08 0.116,-0.078 0.082,0.023 0.536,0.391 0.094,-0.011 0.179,-0.121 0.162,-0.418 0.114,-0.153 0.049,0.004 0.344,-0.117 0.311,-0.133 0.04,0.138 0.47,0.562 0.155,0.276 0.157,0.506 -0.082,0.281 -0.123,0.184 -0.181,0.163 -0.629,0.401 -0.699,0.255 -0.446,0.511 -0.332,-0.035 0.051,0.193 0.123,0.022 0.194,-0.037 0.385,-0.148 0.341,-0.071 0.369,-0.005 0.334,0.064 z\"\n\t\t\t\tid=\"DJ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 502.22975,279.0544 -0.042,0 -0.179,-0.043 -0.127,-0.103 -0.329,0.073 -0.44,0.166 -0.244,-0.008 -0.194,-0.178 -0.794,-0.254 -0.128,-0.021 -0.524,-0.01 -10e-4,0 -0.025,-0.402 -0.065,-0.291 -0.184,-0.434 0.272,-0.105 -0.053,-0.85 -0.099,-0.441 -0.759,-0.455 -0.598,-0.443 0.138,-1.5 0.059,-0.406 -0.227,-0.79 0.024,-0.914 0.096,-1.448 0.19,-0.057 0.14,0.007 0.538,0.261 0.224,0.026 0.154,0.233 0.18,0.096 0.13,-0.247 0.051,-0.423 0.426,-0.549 0.299,-0.203 0.204,-0.097 0.206,0.222 0.157,0.249 0.037,-0.545 0.127,-1.043 -0.405,-0.164 -0.331,0.142 -0.327,0.662 -0.292,0.829 -0.474,0.076 -0.378,0.234 -0.341,-0.243 -0.22,-0.214 -0.005,-0.313 0.05,-0.189 0.401,-0.678 0.538,-0.653 0.542,0.006 0.395,-0.209 0.236,-0.025 0.737,0.045 0.378,-0.144 0.339,-0.3 0.732,-1.277 0.413,-0.535 0.833,-0.188 0.77,-0.62 0.215,-0.008 -0.362,0.462 -0.058,0.179 -0.044,0.273 0.259,0.592 -0.055,0.36 0.019,0.706 -0.245,0.367 -0.276,0.778 -0.119,0.114 -0.026,0.904 0.027,0.215 -0.04,0.818 0.283,0.334 0.299,0.174 0.998,-0.006 0.104,0.146 0.122,0.251 -0.089,0.426 -0.107,0.321 -0.289,0.27 -0.371,0.201 -0.231,0.009 -0.314,-0.382 -0.149,0.124 -0.154,0.195 -0.259,1.042 -0.123,0.701 -0.066,0.057 -0.146,-0.104 -0.252,-0.008 -0.319,0.166 0.164,0.148 0.173,0.257 -0.069,0.129 -0.281,0.139 -0.249,0.281 -0.104,0.212 -0.313,0.251 -0.198,0.318 0.097,0.393 0.041,0.345 0.086,0.38 -0.078,0.303 -0.389,0.434 -0.143,0.375 0.333,-0.005 0.205,0.086 0.12,0.111 0.124,0.157 -0.076,0.194 0.094,0.5 z m 3.683,-12.173 -0.114,0.121 -0.386,-0.171 0.17,-0.24 0.424,-0.111 0.249,0.037 -0.274,0.238 -0.069,0.126 z m 4.257,7.452 0.007,0.498 -0.073,0.145 -0.107,0.096 -0.28,0.101 -0.243,0.141 -0.217,0.247 -0.08,0.353 0.169,0.258 0.308,0.141 0.079,0.49 -0.254,0.241 -0.652,0.24 -0.068,0.579 0.021,0.455 -0.012,0.33 -0.052,0.456 -0.527,0.207 -0.341,-0.694 -0.003,-0.279 -0.102,-0.326 -0.019,-0.278 -0.121,-0.445 -0.499,-0.121 -0.194,-0.016 -0.271,0.083 -0.067,-0.032 -0.325,-0.61 0.054,-0.676 -0.173,-0.342 -0.024,-0.155 0.004,-0.172 -0.143,-0.142 -0.172,-0.075 -0.084,-0.383 0.198,-0.093 0.491,0.045 0.144,-0.026 0.131,-0.08 0.397,-0.632 -0.012,-0.14 0.042,-0.181 0.429,-0.067 0.191,0.245 -0.039,0.392 0.024,0.5 0.26,0.136 0.101,0.02 0.109,-0.369 0.076,-0.18 0.103,-0.101 0.035,-0.338 -0.061,-0.207 -0.13,-0.155 0.486,-0.42 0.503,-0.334 0.293,-0.018 0.294,0.082 0.274,0.112 0.148,0.097 0.083,0.156 -0.184,0.371 -0.051,0.202 0.126,0.668 z m -5.505,0.01 -0.048,0.089 -0.178,-0.093 -0.019,-0.322 0.067,-0.29 -0.079,-0.26 0.087,-0.167 0.25,0.389 0.071,0.183 -0.097,0.218 -0.054,0.253 z m 5.777,0.926 -0.264,0.211 -0.058,-0.011 -0.086,-0.289 0.14,-0.176 0.082,-0.149 0.059,0.004 0.08,0.162 0.047,0.248 z m -5.671,-0.065 0.117,0.258 0.144,0.55 0.228,0.614 -0.095,0.256 0.065,0.328 -0.065,0.341 -0.453,0.396 -0.508,0.018 -0.528,-0.191 -0.746,-0.369 -0.06,-0.207 -0.104,-0.115 -0.2,-0.631 0.004,-0.781 0.375,-0.099 0.819,-0.374 0.189,0.059 0.198,0.191 0.228,0.011 0.33,-0.271 0.062,0.016 z m 12.468,2.893 -0.104,0.083 -0.464,-0.137 -0.565,-0.339 0.083,-0.666 0.145,-0.289 1.031,0.747 0.013,0.281 -0.139,0.32 z m -12.218,1.32 -0.125,0.027 -0.169,-0.393 -0.022,-0.124 0.199,-0.252 0.128,-0.286 0.333,-0.44 0.191,-0.517 0.073,0.008 -0.085,0.461 -0.437,1.279 -0.086,0.237 z m -1.889,-0.659 -0.292,0.067 -0.149,-0.118 -0.274,-0.045 -0.098,-0.751 0.028,-0.045 0.138,0.053 0.473,0.351 0.165,0.383 0.009,0.105 z m 6.983,-0.387 -0.107,0.073 -0.431,-0.053 -0.486,0.338 -0.184,-0.107 0.07,-0.216 0.051,-0.079 0.163,-0.092 0.109,-0.134 0.043,-0.21 0.101,0.113 0.301,0.047 0.147,0.067 0.123,0.099 0.1,0.154 z m -5.795,0.575 -0.188,0.051 -0.215,-0.106 -0.351,-0.399 -0.044,-0.106 0.184,0.067 0.229,0.209 0.187,0.045 0.256,0.176 -0.058,0.063 z m 2.461,-0.214 0.497,0.302 0.336,-0.018 0.229,0.125 0.055,0.193 0.02,0.428 -0.24,0.125 -0.265,-0.042 -0.361,0.163 -1.184,-0.699 0.017,-0.585 0.047,-0.23 0.561,-0.055 0.288,0.293 z\"\n\t\t\t\tid=\"DK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 302.90875,419.8944 -0.263,0.063 -0.113,-0.499 -0.184,-0.363 0.032,-0.226 0.033,-0.086 0.387,0.139 0.121,0.169 0.073,0.444 z\"\n\t\t\t\tid=\"DM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 273.47875,411.7714 0.012,-0.484 0.075,-0.197 -0.069,-0.207 -0.311,-0.22 -0.19,-0.284 -0.169,-0.251 0.038,-0.036 0.338,-0.011 0.119,-0.093 0.227,-0.257 0.045,-0.207 -0.018,-0.157 -0.148,-0.187 -0.058,-0.198 0.182,-0.172 0.239,-0.252 0.033,-0.097 -0.005,-0.096 -0.279,-0.265 -0.019,-0.115 0.13,-0.288 -0.013,-0.191 -0.129,-0.597 -0.061,-0.089 0.124,-0.05 0.082,-0.178 0.108,-0.159 0.144,-0.085 0.164,-0.054 0.325,0.005 0.45,0.138 0.128,-0.002 0.432,-0.126 0.358,-0.07 0.338,0.08 0.137,0.108 0.278,0.171 0.14,0.051 0.44,-0.003 0.121,0.017 0.369,0.282 0.311,0.113 0.181,0.005 0.324,-0.109 0.161,0.003 0.184,0.243 0.036,0.345 0.154,0.314 0.236,0.201 1.163,-0.084 0.259,0.165 -0.088,0.136 -0.165,0.073 -0.553,-0.032 -0.241,0.016 -0.049,0.136 -10e-4,0.126 0.323,0.03 0.317,0.063 0.324,0.102 0.328,0.069 0.37,0.045 0.365,0.073 0.608,0.247 0.671,0.56 0.18,0.128 0.119,0.175 -0.057,0.217 -0.24,0.354 -0.136,0.113 -0.198,0.07 -0.136,0.144 -0.131,0.247 -0.08,0.021 -0.094,-0.01 -0.161,-0.14 -0.115,-0.215 -0.325,-0.202 -0.385,0.026 -0.568,-0.119 -0.343,0.057 -0.344,0.014 -0.351,-0.061 -0.354,-0.021 -0.353,0.076 -0.342,0.129 -0.126,0.083 -0.22,0.201 -0.117,0.075 -0.833,0.101 -0.239,-0.148 -0.223,-0.202 -0.32,-0.027 -0.465,0.156 -0.29,0.057 -0.118,0.066 -0.035,0.077 -10e-4,0.282 -0.065,0.171 -0.453,0.646 -0.255,0.456 -0.105,0.14 -0.122,0.031 -0.223,-0.262 -0.142,-0.094 -0.176,-0.048 -0.075,-0.139 0.003,-0.198 -0.046,-0.192 -0.109,-0.151 z\"\n\t\t\t\tid=\"DO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 498.96575,351.8754 0.059,0.186 0.01,0.174 -0.266,0.162 -0.175,0.094 -0.21,0.447 -0.389,0.303 -0.065,0.092 0.003,0.083 0.264,0.137 0.088,0.13 0.041,0.174 -0.118,0.622 -0.074,0.476 -0.097,0.623 0.004,0.237 0.1,0.284 0.099,0.221 0.031,0.25 -0.035,0.615 0.121,0.355 0.097,0.327 -0.231,0.407 -0.099,0.359 -0.062,0.513 -0.025,0.323 -0.149,0.298 -0.194,0.279 -0.219,0.174 -0.27,0.15 -0.311,0.197 -0.252,0.527 -0.545,0.438 -0.114,0.15 -0.051,0.35 0.013,0.485 0.096,0.385 0.261,0.568 0.229,0.624 0.062,0.313 0.088,0.119 0.322,0.204 0.557,0.276 0.103,0.113 0.276,0.428 0.262,0.766 0.082,0.506 0.51,0.402 0.471,0.37 0.452,0.325 0.491,0.352 0.071,0.108 0.163,0.745 0.163,0.738 0.178,0.811 0.18,0.812 0.212,0.953 0.12,0.539 0.145,0.653 0.171,0.764 -0.275,0.162 -0.31,0.207 0.226,0.392 0.436,0.637 0.263,0.513 0.092,0.223 0.205,0.635 0.167,0.614 0.043,0.199 0.061,0.472 -0.075,1.296 0.12,1.639 0.162,0.814 -0.255,0.733 -0.218,0.699 0.014,0.351 0.12,0.547 0.118,0.404 0.16,0.212 -0.031,0.679 -0.067,0.246 -0.49,0.355 -0.543,0.325 -0.15,0.275 -0.043,0.306 0.072,0.249 0.373,0.55 0.561,0.823 0.617,0.904 0.051,0.227 0.025,0.64 0.257,0.803 0.278,0.35 0.104,0.261 0.197,0.187 0.196,0.137 0.122,0.016 0.693,-0.218 1.185,0.36 1.121,0.366 0.082,0.072 0.245,0.463 0.401,0.755 0.297,0.603 0.266,0.539 -1.453,0.928 -1.454,0.926 -1.453,0.924 -1.453,0.921 -1.453,0.92 -1.454,0.918 -1.453,0.916 -1.453,0.913 -0.964,0.605 -0.613,0.534 -0.769,0.667 -0.726,0.662 -0.571,0.521 -0.74,0.672 -0.373,0.339 -0.825,0.749 -0.248,0.133 -1.093,0.221 -1.003,0.202 -0.926,0.187 -0.633,0.128 -0.613,0.123 -0.891,0.174 -0.636,0.125 -0.686,0.134 -0.107,0.023 -0.124,0.005 -0.093,-0.005 -0.19,-0.074 -0.229,-0.175 -0.153,-0.09 -0.038,-0.138 0.089,-0.184 0.111,-0.165 0.042,-0.13 0.076,-0.099 0.098,-0.08 0.004,-0.113 -0.081,-0.186 -0.071,-0.257 0.003,-0.467 0.002,-0.156 0,-0.056 -0.205,-0.179 -0.387,-0.198 -0.356,-0.116 -0.162,-0.04 -0.393,-0.07 -0.543,-0.125 -0.191,-0.086 -0.352,-0.435 -0.173,-0.111 -0.815,-0.074 -0.271,-0.072 -0.222,-0.103 -0.19,-0.14 -0.107,-0.239 -0.032,-0.195 -0.071,-0.093 -0.899,-0.472 -0.229,-0.16 -0.121,-0.149 -0.004,-0.221 0.024,-0.271 -0.038,-0.241 -0.038,-0.118 -0.411,-0.286 -0.919,-0.642 -0.919,-0.642 -0.919,-0.643 -0.919,-0.644 -0.919,-0.645 -0.919,-0.646 -0.919,-0.647 -0.919,-0.648 -0.919,-0.65 -0.92,-0.649 -0.918,-0.652 -0.919,-0.652 -0.919,-0.653 -0.92,-0.655 -0.919,-0.656 -0.919,-0.657 -0.777,-0.555 -0.857,-0.588 -0.637,-0.431 -0.632,-0.43 -0.68,-0.461 -0.442,-0.286 -0.527,-0.342 -0.528,-0.343 -0.528,-0.343 -0.528,-0.343 -0.528,-0.343 -0.528,-0.344 -0.527,-0.344 -0.528,-0.345 -0.528,-0.345 -0.527,-0.345 -0.528,-0.345 -0.528,-0.346 -0.528,-0.346 -0.528,-0.347 -0.528,-0.347 -0.527,-0.347 0,-0.642 0,-0.523 0,-0.77 0,-0.67 0,-0.67 0,-0.462 0,-0.482 0.014,-0.218 0.052,-0.093 0.285,-0.157 0.446,-0.358 0.165,-0.159 0.211,-0.161 0.747,-0.485 0.155,-0.136 0.726,-0.559 0.17,-0.082 0.39,-0.055 0.163,-0.105 0.219,-0.224 0.322,-0.256 0.209,-0.122 0.05,-0.022 0.134,-0.018 0.671,0.076 0.282,0.057 0.337,0.048 0.105,-0.033 0.09,-0.08 0.127,-0.179 0.027,-0.213 0.008,-0.186 0.02,-0.081 0.059,-0.037 0.147,0.014 0.196,0.025 0.401,-0.008 0.136,-0.026 0.455,-0.04 0.643,-0.121 0.51,-0.158 0.406,-0.125 0.435,-0.329 0.319,-0.347 0.331,-0.518 0.263,-0.45 0.533,-0.281 0.445,-0.171 0.255,-0.067 0.578,-0.238 0.489,-0.36 0.459,-0.338 0.351,-0.045 0.444,-0.056 0.099,-0.063 0.112,-0.12 0.006,-0.212 -0.134,-0.149 -0.162,-0.078 -0.115,-0.086 -0.114,-0.016 -0.061,-0.102 0.034,-0.188 0.017,-0.174 0.073,-0.174 -0.02,-0.246 -0.114,-0.246 -0.035,-0.177 0.008,-0.176 0.056,-0.137 0.164,-0.091 0.191,-0.035 0.268,0.044 0.463,-0.059 1.185,-0.426 0.082,-0.131 0.076,-0.295 0.085,-0.259 0.123,-0.087 0.067,-0.019 0.395,-0.07 0.559,-0.098 0.21,-0.014 0.61,0.028 0.444,0.021 0.718,0.034 0.51,0.017 0.444,0.015 0.566,0.02 0.139,-0.06 0,-0.189 -0.102,-0.352 0.062,-0.22 0.218,-0.204 0.272,-0.228 -0.127,-0.278 -0.217,-0.186 -0.303,-0.224 -0.157,-0.091 -0.275,-0.271 -0.168,-0.309 -0.114,-0.652 -0.209,-0.366 -0.152,-0.452 0.135,-0.831 -0.202,-0.503 -0.031,-0.218 -0.002,-0.257 0.062,-0.445 -0.04,-0.627 -0.238,-0.648 0.112,-0.221 0.052,-0.115 -0.017,-0.099 -0.217,-0.206 -0.092,-0.171 0.048,-0.16 0.113,-0.233 -0.01,-0.098 -0.351,-0.284 -0.592,-0.461 -0.166,-0.202 -0.081,-0.253 0.567,0.065 0.293,-0.031 0.672,-0.304 0.534,-0.411 0.415,-0.209 0.365,-0.451 0.331,-0.285 0.478,-0.308 1.379,-0.665 0.211,-0.005 0.454,0.151 0.395,-0.047 0.27,-0.233 0.291,-0.562 0.451,-0.343 0.569,-0.344 0.774,-0.329 0.507,-0.303 0.802,-0.263 2.013,-0.167 1.034,-0.149 0.703,0.034 0.71,-0.482 0.355,-0.159 1.537,-0.037 0.725,-0.353 2.748,0 0.336,0.118 0.33,0.19 0.562,0.457 0.28,0.1 0.363,-0.095 0.844,-0.433 0.952,-0.226 0.518,-0.258 0.22,-0.377 0.446,-0.139 0.251,0.29 0.987,0.292 0.606,-0.084 0.266,-0.088 -0.096,-0.433 0.641,0.115 0.492,0.209 0.515,0.418 0.334,0.083 0.608,-0.188 z\"\n\t\t\t\tid=\"DZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 263.61075,463.2184 -0.157,0.1 -0.163,0.011 -0.217,0.031 -0.303,-0.096 -0.119,0 -0.017,0.097 0.201,0.118 0.195,0.135 0.07,0.205 0.116,0.243 0.279,0.272 0.174,0.136 0.011,0.097 -0.055,0.178 -0.014,0.148 0.096,0.683 -0.064,0.042 -0.103,0.003 -0.109,-0.003 -0.09,-0.074 -0.078,-0.044 -0.035,0.105 -0.081,0.304 -0.182,0.684 -0.159,0.599 -0.2,0.212 -0.289,0.337 -0.396,0.461 -0.574,0.668 -0.424,0.31 -0.334,0.244 -0.391,0.282 -0.504,0.364 -0.566,0.204 -0.788,0.284 -0.558,0.201 -0.411,0.14 -0.428,0.146 -0.566,0.193 -0.218,0.182 -0.363,0.446 -0.169,0.215 -0.154,0.185 -0.032,0.084 0.021,0.054 0.074,0.09 0.007,0.093 -0.102,0.058 -0.088,0.009 -0.039,-0.046 -0.029,-0.102 -0.094,-0.104 -0.109,-0.03 -0.063,0.025 -0.005,0.095 -0.143,0.457 -0.005,0.222 -0.06,0.088 0.004,0.199 -0.144,0.185 -0.063,0.165 -0.044,0.14 -0.116,0.097 -0.042,0.152 -0.107,0.324 -0.125,0.254 -0.088,0.217 -0.016,0.163 0.067,0.115 0.023,0.093 -0.06,0.167 -0.033,0.125 -0.16,0.085 -0.332,0.202 -0.129,0.139 -0.051,0.157 0.033,0.134 -0.014,0.111 -0.158,0.042 -0.056,0.095 -0.107,0.171 -0.121,0.06 -0.31,-0.091 -0.229,-10e-4 -0.177,-0.083 -0.192,-0.246 -0.158,-0.207 -0.129,-0.268 -0.04,-0.367 -0.173,-0.108 -0.17,-0.128 -0.204,0.036 -0.242,0.024 -0.134,-0.085 -0.331,-0.155 -0.282,-0.176 -0.213,-0.088 -0.163,0.042 -0.098,0.106 -0.171,0.189 -0.253,0.131 -0.114,-0.006 -0.153,-0.087 -0.028,-0.102 0.125,-0.162 0.255,-0.356 -0.283,-0.009 -0.098,-0.111 -0.014,-0.129 -0.046,-0.139 0.056,-0.167 0.148,-0.088 0.223,0.069 0.153,0.005 0.102,-0.157 0.102,-0.069 0.102,-0.051 0.042,-0.079 -0.108,-0.251 -0.032,-0.137 0.033,-0.079 -0.005,-0.157 -0.004,-0.116 -0.065,-0.102 -0.005,-0.152 -0.056,-0.083 -0.019,-0.088 -0.004,-0.102 -0.07,-0.051 -0.074,-0.052 0.061,-0.036 0.402,-0.141 0.167,-0.141 0.207,-0.128 0.178,-0.197 0.117,-0.188 0.277,-0.875 0.261,-0.552 -0.044,-0.264 -0.216,-0.357 -0.049,-0.526 0.02,-0.16 -0.027,-0.121 -0.144,0.218 0.037,0.775 -0.127,0.349 -0.178,0.084 -0.116,-0.061 0.066,-0.566 -0.13,0.103 -0.208,0.384 -0.341,0.285 -0.019,0.095 -0.083,0.117 -0.263,-0.108 -0.201,-0.117 -0.659,-0.639 -0.433,-0.134 -0.261,-0.223 -0.055,-0.094 -0.031,-0.129 0.267,-0.134 0.273,-0.18 0.027,-0.396 -0.007,-0.311 -0.202,-0.532 0.095,-0.694 -0.052,-0.272 -0.231,-0.577 0.171,-0.291 0.611,-0.212 0.196,-0.142 0.137,-0.458 0.139,-0.274 0.272,0.11 0.213,-0.013 -0.288,-0.102 -0.234,-0.413 -0.039,-0.188 0.452,-0.564 0.237,-0.147 0.291,-0.298 0.245,-0.45 0.059,-0.71 -0.101,-0.507 -0.076,-0.537 0.146,-0.139 0.372,-0.071 0.302,-0.173 0.153,-0.16 0.359,0.024 0.415,-0.248 0.663,-0.125 0.924,-0.283 0.204,-0.25 -0.092,-0.445 0.086,0.058 0.257,0.212 0.156,0.21 0.264,0.13 0.213,0.105 0.56,0.426 0.369,0.216 0.403,0.195 0.582,0.205 0.355,-0.035 0.083,0.155 0.069,0.164 0.133,0.095 0.211,0.082 0.125,0.025 0.039,0.041 0.126,0.59 0.074,0.086 0.291,0.094 0.356,0.035 0.145,-0.021 0.313,0.164 0.231,0.077 0.255,0.058 0.173,0.017 0.08,-0.025 0.029,-0.06 0.142,0.011 0.211,0.076 0.305,0.016 0.189,-0.072 0.026,-0.119 0.013,-0.209 0.07,-0.073 0.217,-0.122 0.113,0.025 0.569,0.262 0.117,0.09 0.144,0.183 0.267,0.27 0.289,0.172 0.447,0.073 0.431,0.282 0.512,0.195 z m -10.173,-3.789 -0.158,0.021 -0.073,-0.133 0.192,-0.155 0.066,-0.03 -0.027,0.297 z m -34.697,3.422 0.174,0.18 0.095,0.512 0.563,0.54 0.07,0.302 -0.05,0.14 0.026,0.055 0.271,0.213 0.177,0.224 -0.297,0.525 -0.633,0.221 -0.675,-0.007 -0.133,-0.057 -0.181,-0.201 -0.033,-0.177 0.104,-0.171 0.349,-0.26 0.532,-0.232 0.066,-0.178 -0.213,-0.173 -0.147,-0.344 -0.336,-0.241 -0.167,-0.735 -0.112,-0.037 -0.228,0.101 -0.112,-0.089 -0.019,-0.047 0.246,-0.167 0.051,-0.12 0.364,-0.058 0.156,0.096 0.092,0.185 z m 1.96,1.002 -0.13,0.084 -0.529,-0.097 -0.165,-0.162 0.133,-0.221 0.112,-0.088 0.316,0.082 0.321,0.247 -0.058,0.155 z m -2.391,0.353 -0.282,0.049 -0.237,-0.096 -0.101,-0.148 -0.021,-0.223 0.021,-0.074 0.523,-0.081 0.171,0.187 -0.002,0.274 -0.072,0.112 z m 3.062,0.866 -0.146,0.005 -0.435,-0.27 0.029,-0.265 0.174,-0.178 0.563,-0.091 0.236,0.168 -0.021,0.317 -0.192,0.232 -0.152,0.042 -0.056,0.04 z m 2.571,0.389 -0.331,0.115 -0.114,-0.052 -0.071,-0.057 -0.017,-0.069 0.183,-0.172 0.178,-0.093 0.16,-0.198 0.293,-0.118 0.086,0.027 0.058,0.041 0.022,0.066 -0.1,0.16 -0.178,0.112 -0.169,0.238 z m -2.821,1.196 -0.113,0.005 -0.155,-0.12 0.119,-0.218 0.127,0.053 0.093,0.063 0.055,0.084 -0.126,0.133 z m 28.886,4.556 -0.054,0.108 -0.267,-0.01 -0.077,-0.035 0.002,-0.123 0.063,-0.391 0.073,-0.164 0.219,-0.159 0.183,-0.077 0.234,0.014 0.248,0.145 -0.292,0.262 -0.163,0.04 -0.063,0.034 -0.106,0.356 z\"\n\t\t\t\tid=\"EC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 570.87175,370.8384 0.041,0.099 0.092,0.274 0.233,0.696 0.204,0.544 0.249,0.752 0.078,0.288 0.033,0.199 0.362,0.824 0.215,0.675 0.157,0.548 0.222,0.798 0.096,0.278 -0.157,0.145 -0.314,0.517 -0.335,1.637 -0.479,1.273 -0.054,0.795 -0.077,0.286 -0.228,0.402 -0.276,0.393 -0.491,-0.203 -0.8,-0.692 -0.466,-0.658 -0.5,-0.426 -0.472,-0.565 -0.129,-0.407 0.005,-0.262 -0.206,-0.639 -0.153,-0.303 -0.576,-0.681 -0.165,-0.364 -0.126,-0.161 -0.127,-0.23 -0.209,-0.889 -0.228,-0.566 -0.26,0.157 0.046,0.238 -0.227,0.329 -0.137,0.381 0.105,0.311 0.471,0.473 0.095,0.207 0.11,0.447 -0.018,0.607 0.076,0.205 0.353,0.45 0.126,0.267 0.076,0.23 0.117,0.208 0.35,0.39 0.503,0.742 0.477,0.5 0.345,0.241 0.146,0.241 0.033,0.621 -0.026,0.296 0.303,0.557 0.112,0.281 0.292,0.229 0.134,0.261 0.123,0.425 0.185,1.253 0.254,0.307 0.785,1.639 0.662,1.033 0.32,0.77 0.489,0.934 0.957,2.044 0.569,0.628 0.227,0.353 0.412,0.271 0.446,0.392 -0.425,-0.038 -0.108,0.023 -0.149,0.067 -0.071,0.238 -0.031,0.194 0.052,1.025 0.117,0.522 0.374,0.985 0.279,0.295 0.136,0.191 0.19,0.139 0.887,0.336 0.519,0.708 1.166,0.894 0.114,0.247 0.003,0.057 -0.921,0.001 -0.921,0 -0.921,0 -0.921,0 -0.92,0 -0.922,10e-4 -0.92,0 -0.921,0 -0.921,0 -0.921,0 -0.921,0 -0.92,0 -0.921,0.001 -0.921,0 -0.921,0 -0.921,0 -0.525,0 0.09,-0.268 0.055,-0.189 -0.062,-0.132 -0.179,-0.033 -0.117,0.042 -0.275,0.561 -0.144,0.022 -0.327,0 -1.072,0 -1.073,0 -1.072,0 -1.072,-10e-4 -1.072,0 -1.072,0 -1.072,0 -1.072,0 -1.072,-0.001 -1.073,0 -1.072,0 -1.072,0 -1.072,0 -1.072,0 -1.073,-10e-4 -1.072,0 0,-0.676 0,-0.678 0,-0.679 0,-0.679 0,-0.681 0,-0.682 0,-0.683 0,-0.684 0,-0.686 0,-0.686 0,-0.688 0,-0.69 0,-0.69 0,-0.692 0,-0.693 0,-0.694 0,-0.696 0,-0.697 0,-0.698 0,-0.699 0,-0.702 0,-0.702 0,-0.704 0,-0.705 0,-0.707 0,-0.708 0,-0.71 0,-0.711 0,-0.713 0,-0.714 0,-0.716 0,-0.717 -0.024,-0.134 -0.156,-0.489 -0.141,-0.622 -0.154,-0.766 -0.02,-0.249 -0.258,-0.792 -0.024,-0.225 0.065,-0.16 0.424,-0.669 0.128,-0.326 0.107,-0.391 0.036,-0.318 -0.125,-0.488 -0.146,-0.439 -0.049,-0.45 -0.021,-0.443 0.217,-0.303 0.26,-0.284 0.097,-0.174 0.154,-0.196 0.108,-0.092 0.211,0.398 0.44,0.068 1.434,-0.354 1.583,0.357 0.873,0.136 1.346,0.303 0.819,0.54 0.225,0.068 0.589,-0.011 0.386,0.319 1.536,0.153 0.82,0.351 0.465,0.28 0.279,0.086 0.247,-0.014 0.333,-0.105 0.421,-0.197 0.457,-0.274 0.949,-0.705 0.336,-0.124 0.219,0.033 0.267,-0.01 0.111,-0.191 0.141,-0.131 0.088,-0.149 0.144,-0.18 0.494,-0.05 0.989,-0.308 -0.111,0.146 -0.901,0.345 0.386,0.043 0.395,-0.118 0.451,-0.075 0.082,-0.147 0.059,-0.275 0.086,-0.039 0.312,0.052 0.927,0.424 0.231,0.008 0.653,-0.231 0.139,-0.049 0.212,0.128 0.482,0.527 -0.168,-0.011 -0.516,-0.452 -0.046,0.226 -0.294,0.396 0.367,0.171 0.299,0.064 0.16,0.221 0.101,0.196 0.295,-0.086 0.211,-0.267 -0.11,-0.149 -0.074,-0.154 0.096,-0.004 0.205,0.127 0.587,0.507 0.198,0.105 0.228,-0.018 0.477,-0.142 0.133,0.022 0.64,-0.187 0.075,0.137 0.106,0.136 0.516,-0.152 0.809,0.002 0.663,-0.165 0.768,-0.402 z\"\n\t\t\t\tid=\"EG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 553.51175,254.9564 0.149,0.171 0.188,0.276 0.051,0.158 -0.064,0.093 -0.188,0.079 -0.043,0.085 -0.083,0.143 -0.22,0.026 -0.113,0.106 -0.135,0.465 -0.258,0.768 -0.381,0.582 -0.305,0.318 -0.136,0.244 -0.085,0.292 -0.02,0.293 0.292,1.6 -0.003,0.288 -0.069,0.295 -0.05,0.299 0.041,0.259 0.193,0.442 0.205,0.658 0.083,0.419 0.136,0.153 0.131,0.113 0.027,0.071 -0.004,0.073 -0.068,0.083 -0.591,0.219 -0.077,0.185 -0.064,0.207 -0.258,0.305 -0.079,0.284 -0.049,0.325 -0.006,0.116 -0.071,0.014 -0.392,-0.067 -0.432,-0.211 -0.189,-0.159 -0.186,0.002 -0.225,0.104 -0.806,0.301 -0.198,-0.07 -0.46,-0.296 -0.233,-0.323 -0.519,-0.644 -0.042,-0.154 -0.068,-0.123 -0.554,-0.16 -0.205,-0.239 -0.17,-0.033 -0.25,-0.12 -0.649,-0.511 -0.161,-0.048 -0.039,0.086 0.011,0.121 -0.041,0.07 -0.083,-0.002 -0.15,-0.188 -0.18,-0.166 -0.561,0.312 -0.203,0.083 -0.178,0.019 -0.889,0.408 -0.271,0.22 -0.112,-0.023 0.026,-0.207 0.37,-1.037 0.066,-0.827 0.135,-0.114 0.04,-0.115 -0.058,-0.265 -0.384,-0.17 -0.155,0.025 -0.14,0.285 -0.145,0.205 -0.339,0.125 -0.292,-0.216 -0.683,-0.289 -0.172,-0.386 -0.041,-0.389 -0.361,-0.376 -0.15,-0.445 0.06,-0.311 0.328,-0.205 0.093,-0.178 -0.413,0.028 -0.084,-0.043 -0.018,-0.16 -0.183,-0.548 0.162,-0.216 0.071,-0.21 -0.133,-0.179 0.035,-0.205 0.104,-0.207 -0.063,-0.481 0.41,-0.255 0.398,-0.18 0.845,-0.092 -0.083,-0.442 0.341,-0.02 0.575,-0.533 0.57,0.094 0.825,-0.366 1.589,0.005 0.217,-0.212 -0.038,-0.213 0.005,-0.227 0.299,0.063 0.5,-0.04 1.872,0.447 0.461,0 0.637,0.453 0.344,0.117 1.013,0 1.563,0.2 0.307,-0.306 0.033,-0.078 z m -14.281,3.592 -0.23,0.267 -0.137,-0.106 -0.072,-0.128 -0.297,0.604 -0.334,0.103 -0.195,-0.119 0.018,-0.225 -0.19,-0.593 -0.291,-0.174 -0.409,-0.016 -0.296,-0.245 1.141,-0.167 0.118,-0.284 0.232,-0.298 0.174,-0.032 0.148,0.069 0.028,0.231 0.037,0.092 0.517,0.13 0.202,0.388 0.076,0.465 -0.24,0.038 z m 1.178,1.491 -0.233,0.056 -0.553,-0.382 0.128,-0.259 0.158,-0.102 0.47,0.159 0.066,0.393 -0.036,0.135 z m -2.038,-0.381 0.199,0.13 0.184,-0.041 0.187,-0.091 0.404,0.085 0.922,0.656 0.085,0.175 -0.551,0.08 -0.125,0.2 -0.132,0.14 -0.156,0.045 -0.266,0.281 -0.359,0.269 -0.075,0.161 -0.651,-0.03 -0.355,0.102 -0.287,0.3 -0.118,0.578 -0.21,0.45 -0.214,0.162 -0.223,0.025 -0.053,-0.168 0.021,-0.168 0.469,-0.636 0.098,-0.207 -0.234,-0.092 -0.196,-0.222 -0.428,-0.26 -0.077,-0.209 0.102,-0.016 0.094,-0.06 0.114,-0.176 0.053,-0.202 -0.342,-0.592 0.174,-0.092 0.218,0.021 0.223,0.172 0.245,-0.202 0.104,-0.03 0.171,0.072 0.173,-0.392 0.411,-0.129 0.204,-0.121 0.197,0.032 z\"\n\t\t\t\tid=\"EE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 450.52575,383.7674 10e-4,0.523 0,0.621 0.001,0.619 10e-4,0.704 0,0.7 0,0.509 0,0.354 -0.571,0 -0.523,0 -0.523,0 -0.522,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.523,0 -0.522,0 -0.523,0 -0.42,0 0,0.371 0,0.421 0,0.422 0,0.421 0,0.421 0,0.42 0,0.42 0,0.419 0,0.419 0,0.418 0,0.418 0,0.418 0,0.416 0,0.417 0,0.416 0,0.416 0,0.415 0,0.37 -0.02,0.331 -0.168,0.098 -0.401,0.176 -0.412,0.181 -0.523,0.083 -0.172,0.059 -0.334,0.238 -0.439,0.313 -0.38,0.271 -0.251,0.352 -0.091,0.193 -0.037,0.203 0.029,0.194 0.137,0.388 0.037,0.196 0.021,0.341 0.023,0.37 0.025,0.399 0.025,0.399 0.026,0.423 0.027,0.424 0.027,0.425 0.02,0.316 0.025,0.398 -0.425,0.001 -0.643,0 -0.644,10e-4 -0.644,0.001 -0.643,10e-4 -0.643,10e-4 -0.644,0.001 -0.644,0 -0.643,10e-4 -0.644,0.001 -0.643,10e-4 -0.643,10e-4 -0.644,0.001 -0.644,10e-4 -0.643,0 -0.644,0.001 -0.643,10e-4 -0.36,0.001 -0.116,0.559 -0.103,0.401 -0.06,0.327 0.044,0.276 -0.142,-0.151 0.25,-1.556 0.018,-0.131 0.204,-1.439 0.385,-0.782 0.307,-0.345 0.476,-0.179 0.437,-0.788 0.153,-0.727 0.287,-0.335 0.09,-0.262 -0.113,-0.2 0.271,-0.393 0.328,-0.602 0.152,-0.387 0.383,-0.599 0.047,-0.133 -0.034,-0.15 -0.151,0.127 -0.161,0.222 -0.191,0.175 0.078,-0.215 0.15,-0.316 0.341,-0.332 0.538,-0.365 1.116,-1.243 0.42,-0.215 0.378,-0.525 0.135,-0.467 0.037,-1.074 0.135,-0.568 0.246,-0.443 0.294,-0.809 0.224,-0.361 0.146,-0.74 0.159,-0.281 0.285,-0.135 0.404,-0.369 0.607,-0.229 0.719,-0.481 0.337,-0.288 0.225,-0.43 0.241,-0.858 0.431,-0.905 0.221,-0.684 12.234,-0.014 0.002,0.001 0,-0.001 0.377,0 0,0.523 z\"\n\t\t\t\tid=\"EH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 595.90175,427.1954 -0.312,0.133 -0.344,0.117 -0.049,-0.004 -0.114,0.153 -0.163,0.418 -0.179,0.122 -0.094,0.011 -0.535,-0.391 -0.083,-0.022 -0.116,0.077 -0.084,0.08 -0.249,-0.297 -0.182,-0.262 -0.254,-0.313 -0.247,-0.141 -0.265,-0.177 -0.26,-0.411 -0.265,-0.453 -0.393,-0.371 -0.735,-0.535 -0.675,-0.678 -0.516,-0.709 -0.333,-0.37 -0.142,-0.094 -0.688,-0.232 -0.48,-0.325 -0.37,-0.268 -0.227,-0.072 -0.22,-0.009 -0.469,0.053 -0.39,-0.168 -0.164,0 -0.261,-0.049 -0.205,-0.06 -0.241,0.072 -0.494,0.12 -0.203,-0.026 -0.11,-0.167 -0.065,-0.128 -0.172,-0.133 -0.142,0 -0.079,0.119 -0.516,0.301 -0.863,0.167 -0.205,-0.012 -0.153,-0.121 -0.436,-0.517 -0.125,-0.084 -0.099,-0.008 -0.202,-0.061 -0.189,-0.099 -0.166,-0.212 -0.167,-0.121 -0.179,0.415 -0.314,0.724 -0.168,0.388 -0.217,0.499 -0.068,0.015 -0.111,-0.036 -0.431,-0.622 -0.271,-0.234 -0.202,0.022 -0.147,0.115 -0.093,0.208 -0.101,0.128 -0.109,0.05 -0.235,-0.025 -0.361,-0.099 -0.373,0.021 -0.384,0.142 -0.051,0.004 -0.09,-0.828 -0.06,-0.554 -0.064,-0.587 -0.06,-0.555 0.267,-0.341 0.124,-0.324 0.318,-1.054 0.127,-0.21 0.25,-0.565 0.035,-0.164 0.247,-0.714 -0.023,-0.475 -0.05,-0.48 0.135,-0.285 0.12,-0.228 -0.008,-0.192 0.054,-0.449 0.039,-0.112 0.147,-0.007 0.303,0.058 0.223,-0.045 0.257,0 0.198,-0.014 0.117,-0.137 0.161,-0.524 0.104,-0.105 0.081,-0.032 0.227,-0.097 0.194,-0.153 0.158,-0.109 0.059,-0.022 0.167,-0.014 0.167,-0.064 0.077,-0.074 0.211,-0.059 0.207,0.033 0.139,-0.065 0.093,-0.042 0.105,-0.003 0.097,-0.061 0.039,-0.093 0.063,-0.06 0.161,-0.136 0.074,-0.099 0.033,-0.1 0.033,-0.079 0.071,-0.134 0.282,-0.336 0.243,-0.195 0.848,1.692 0.344,0.998 0.304,1.039 0.225,1.557 0.214,0.792 0.346,0.39 0.237,0.737 0.203,0.028 0.147,0.202 0.252,0.691 0.181,0.257 0.095,-0.221 -0.011,-0.127 -0.071,-0.213 0.065,-0.274 0.141,-0.164 0.322,0.224 0.176,0.169 0.047,0.339 0.074,0.188 0.336,0.398 0.284,0.116 0.368,0.029 0.308,0.087 0.247,0.146 0.463,0.404 1.059,0.354 0.851,1.084 0.501,0.75 1.647,1.135 0.285,0.543 0.148,0.532 0.346,-0.025 0.594,0.581 0.173,0.441 0.486,0.16 0.083,-0.261 0.235,0.214 0.1,0.335 z m -8.532,-9.715 0.094,0.28 -0.274,-0.107 -0.045,-0.058 0.12,-0.111 0.026,-0.068 0.079,0.064 z m 0.181,1.12 0.116,0.154 0.081,-0.015 0.064,-0.051 0.045,-0.109 0.443,0.215 -0.025,0.143 -0.265,0.007 -0.305,-0.061 -0.283,0.021 -0.337,-0.062 -0.078,-0.243 0.215,0.117 0.111,-0.029 0.02,-0.031 -0.152,-0.164 -0.214,-0.033 0.015,-0.129 0.096,-0.051 0.059,-0.063 -0.123,-0.177 0.241,0.04 0.152,0.107 0.1,0.125 0.024,0.289 z\"\n\t\t\t\tid=\"ER\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 469.86075,328.1734 0.004,0.134 0.11,0.184 0.114,0.068 0.24,0.094 0.185,0.013 0.252,0.044 0.171,0.106 0.01,0.165 -0.043,0.184 -0.104,0.169 -0.059,0.129 0.055,0.074 0.09,0.058 0.097,0.016 0.066,-0.019 0.05,-0.102 0.095,-0.125 0.053,-0.016 -0.004,0.071 0.045,0.088 0.309,0.147 0.678,0.274 0.266,0.005 0.215,0.032 0.063,0.115 0.432,0.422 0.103,-0.011 0.192,0.01 0.232,-0.034 0.168,-0.079 0.11,0.013 0.122,0.082 0.142,0.071 0.184,0.139 0.164,0.171 0.113,0.056 0.681,-0.115 0.152,0.101 0.161,-10e-4 0.181,-0.026 0.394,0.053 0.32,-0.013 0.029,-0.042 0.027,-0.38 0.051,-0.135 0.076,-0.036 0.189,0.027 0.689,0.225 0.284,0.141 0.273,0.11 0.238,0.012 0.158,0.074 0.221,0.36 -0.038,0.181 0.02,0.067 0.023,0.125 -0.006,0.139 0.058,0.091 0.105,0.011 0.134,-0.027 0.147,-0.054 0.258,-0.154 0.077,-0.025 0.432,0.175 0.191,0.117 0.066,0.127 0.099,0.13 0.129,0.019 0.184,-0.123 0.287,-0.132 0.488,0.116 0.543,0.168 0.235,0.02 0.008,-0.082 0.043,-0.117 0.089,-0.059 0.134,-0.017 0.186,-0.062 0.212,-0.102 0.221,-0.042 0.231,0.076 0.279,0.062 0.167,-0.001 0.08,0.24 0.135,0.091 0.053,0.208 -0.248,0.108 -0.146,0.015 -0.045,0.355 0.07,0.1 0.139,0.094 0.038,0.109 0.028,0.52 -0.284,0.313 -0.398,0.351 -1.948,1.125 -0.464,0.543 -0.177,0.125 -1.448,0.341 -1.012,0.364 -0.485,0.132 -0.606,0.631 -0.287,0.254 0.229,0.07 0.267,0.301 -0.09,0.133 -0.389,0.206 -0.17,0.063 -0.092,-0.033 -0.087,0.028 -0.652,1.085 -0.576,0.778 -0.324,0.338 -0.332,0.503 -0.707,1.293 -0.005,0.372 0.348,1.279 0.2,0.335 0.28,0.281 0.53,0.239 0.131,0.235 -0.183,0.224 -0.53,0.397 -0.922,0.536 -0.392,0.422 -0.083,0.406 -0.27,0.183 -0.102,0.567 -0.164,0.375 -0.031,0.127 -0.174,0.284 -0.023,0.207 0.285,0.284 -0.141,0.123 -0.141,0.054 -0.325,0.033 -1.093,0.036 -0.879,0.613 -0.439,0.542 -0.398,1.005 -0.483,0.591 -0.213,0.109 -0.331,-0.259 -0.414,-0.04 -0.401,0.086 -0.21,0.206 -0.328,0.115 -0.321,-0.099 -0.694,-0.054 -0.309,0.01 -0.483,0.167 -0.414,-0.111 -0.699,-0.057 -1.513,0.133 -0.191,0.062 -0.189,0.248 -0.482,0.427 -0.733,0.015 -0.663,0.272 -0.166,0.174 -0.278,0.479 -0.087,0.349 -0.058,0.003 -0.072,-0.086 -0.102,0.028 -0.053,0.266 -0.249,0.121 -0.208,0.044 -0.513,-0.215 -0.428,-0.323 -0.224,-0.023 -0.364,-0.504 -0.157,-0.321 -0.111,-0.348 0.023,-0.133 -0.031,-0.111 -0.323,-0.141 -0.079,-0.32 0.236,-0.417 0.193,-0.177 0.12,-0.051 -0.292,0.018 -0.211,0.268 -0.27,-0.43 -1.101,-0.839 0.071,-0.193 -0.012,-0.104 -0.185,0.225 -0.126,0.058 -0.563,-0.036 -0.648,0.103 -0.171,-0.874 -0.081,-0.336 -0.021,-0.218 0.167,-0.504 0.183,-0.206 0.243,-0.425 0.3,-0.354 0.317,-0.084 0.14,-0.052 0.117,-0.274 0.066,-0.234 -0.048,-0.023 -0.37,0.048 -0.664,-0.985 0.021,-0.157 0.083,-0.233 0.055,-0.295 0.014,-0.233 0.173,-0.201 0.265,-0.202 0.223,-0.288 0.112,-0.281 0.023,-0.256 -0.126,-0.183 -0.363,-0.101 -0.375,-0.732 -0.083,-0.459 -0.077,-0.048 -0.231,-0.209 -0.222,-0.394 -0.032,-0.062 0.229,-0.069 0.944,-0.003 0.197,-0.087 0.03,-0.03 0.172,-0.307 0.18,-0.505 0.042,-0.309 -0.057,-0.128 -0.313,-0.313 -0.014,-0.092 0.05,-0.148 0.186,-0.158 0.251,-0.18 0.137,-0.155 -0.033,-0.122 -0.073,-0.127 -0.012,-0.119 0.046,-0.146 0.017,-0.5 0.032,-0.128 -0.049,-0.456 -0.061,-0.373 -0.199,-0.484 0.036,-0.107 0.092,-0.09 0.301,-0.168 0.24,-0.396 0.349,-0.332 0.457,-0.267 0.32,-0.297 0.126,-0.228 0.089,-0.06 -0.026,-0.106 -0.06,-0.154 -0.182,-0.151 -0.235,-0.086 -0.261,0.004 -0.162,-0.031 -0.047,-0.118 0.018,-0.32 -0.014,-0.317 -0.05,-0.146 -0.121,-0.11 -0.239,0.029 -0.207,-0.09 -0.157,-0.021 -0.091,0.071 -0.463,-0.021 -0.193,-0.051 -0.135,-0.063 -0.086,0.035 -0.049,0.062 -0.008,0.097 -0.032,0.128 -0.166,0.116 -0.379,0.115 -0.306,-0.009 -0.281,-0.082 -0.09,-0.061 -0.135,-0.054 -0.571,0.067 -0.069,-0.049 -0.197,0.119 -0.29,0.142 -0.163,0.008 -0.059,-0.03 -0.021,-0.063 -0.122,-0.221 0.032,-0.117 0.234,-0.343 -0.026,-0.082 -0.096,-0.111 -0.086,-0.16 -0.025,-0.083 -0.149,-0.014 -0.159,0.084 -0.605,0.173 -0.145,0.063 -0.262,0.166 -0.265,0.254 -0.211,0.053 -0.073,-0.075 -0.025,-0.596 0.322,-0.397 0.229,-0.24 -0.107,-0.049 -0.243,0.007 0.017,-0.186 0.114,-0.09 0.11,-0.203 -0.129,-0.087 -0.101,-0.134 0.006,-0.35 0.028,-0.142 -0.033,-0.154 -0.495,0.208 -0.127,-0.031 -0.005,-0.26 0.274,-0.397 0.028,-0.122 -0.321,-0.059 -0.24,-0.195 -0.146,-0.175 -0.156,-0.251 -10e-4,-0.226 0.162,-0.529 0.231,-0.154 0.2,-0.095 0.423,-0.367 0.583,0.068 0.361,-0.079 0.324,-0.188 0.186,-0.042 0.299,-0.164 -0.01,-0.222 -0.103,-0.165 0.09,-0.155 0.335,-0.19 0.372,-0.252 0.427,-0.049 0.434,-0.223 0.291,0.144 0.255,-0.049 0.293,0.171 0.385,0.391 0.564,0.157 0.45,-0.123 0.795,-0.026 0.397,0.052 0.706,-0.097 0.404,0.035 0.655,-0.194 0.507,0.242 0.983,0.113 0.59,0.198 1.634,0.332 0.59,0.004 0.835,-0.187 0.354,-0.14 0.324,0.083 0.475,-0.161 0.228,0.033 0.297,0.229 1.045,0.309 0.274,-0.262 0.204,-0.057 0.752,0.16 0.758,0.326 0.394,0.023 0.576,-0.089 0.457,-0.214 0.092,-0.034 z m 17.085,13.342 -0.051,0.042 -0.863,-0.421 -0.282,-0.047 -0.069,-0.064 0.008,-0.219 0.022,-0.097 0.578,-0.044 0.467,0.156 0.251,0.42 0.019,0.072 -0.08,0.202 z m -3.223,0.188 0.269,0.121 0.284,-0.109 0.151,0.034 0.149,0.059 0.036,0.23 -0.132,0.256 -0.185,0.26 -0.156,0.285 -0.136,0.327 -0.253,0.193 -0.229,0.116 -0.484,-0.243 -0.282,-0.061 -0.084,-0.091 -0.067,-0.362 -0.127,-0.115 -0.187,-0.051 -0.164,0.093 -0.214,0.191 -0.114,-0.191 -0.181,-0.036 -0.068,-0.115 0.003,-0.148 1.161,-0.879 0.336,-0.195 0.713,-0.227 0.109,0.034 -0.093,0.134 0.007,0.061 0.089,0.065 -0.021,0.104 -0.09,0.09 -0.04,0.17 z m -4.772,3.15 -0.102,0.221 -0.427,-0.078 -0.094,-0.089 0.092,-0.25 0.123,-0.03 0.008,-0.178 0.129,-0.179 0.606,-0.145 0.137,0.122 0.029,0.175 -0.362,0.382 -0.139,0.049 z m 0.418,0.885 -0.063,0.047 -0.186,-0.043 -0.279,0 -0.011,-0.145 0.043,-0.101 0.054,-0.103 0.17,0.202 0.269,0.038 0.003,0.105 z m -42.967,32.885 -0.191,0.21 -0.213,-0.076 0.102,-0.46 0.099,-0.137 0.388,-0.201 0.323,-0.081 0.095,-0.214 0.106,-0.083 0.114,0.127 -0.086,0.148 -0.068,0.462 -0.215,0.148 -0.454,0.157 z m -11.558,1.331 -0.07,0.024 -0.064,-0.251 -0.333,-0.616 0.202,-0.275 0.368,-0.007 0.149,0.192 0.05,0.198 -0.07,0.114 0.021,0.231 -0.039,0.149 -0.214,0.241 z m 10.208,1.027 -0.381,0.359 -0.381,-0.083 -0.065,-0.059 0.382,-0.091 0.347,-0.273 0.223,-0.605 0.349,-0.67 0.07,-0.284 0.138,-0.111 0.19,-0.01 0.082,0.021 0.084,0.149 -10e-4,0.337 -0.099,0.559 -0.183,0.494 -0.755,0.267 z m -5.999,-0.667 -0.235,0.724 -0.219,0.283 -0.13,0.095 -0.323,0.079 -0.384,-0.449 -0.2,-0.457 -0.11,-0.147 0.175,-0.116 0.255,0.02 0.548,-0.097 0.111,-0.039 0.557,-0.462 0.548,-0.057 0.013,0.152 -0.606,0.471 z m -2.386,1.133 -0.115,0.027 -0.136,-0.079 -0.144,-0.251 0.097,-0.186 0.089,-0.085 0.124,0.013 0.238,0.137 0.073,0.142 0.007,0.088 -0.233,0.194 z m 5.007,-0.397 -0.017,0.244 0.066,0.246 -0.017,0.373 -0.134,0.202 -0.344,0.201 -0.271,-0.036 -0.153,-0.081 -0.272,-0.327 -0.006,-0.338 0.249,-0.22 0.107,-0.285 0.646,0.054 0.056,-0.055 0.048,-0.016 0.042,0.038 z m -6.981,1.068 -0.271,0.515 -0.342,-0.192 -0.083,-0.064 -0.069,-0.106 0.329,-0.021 0.333,-0.259 0.103,0.127 z\"\n\t\t\t\tid=\"ES\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 582.75275,422.2614 0.205,0.012 0.863,-0.167 0.516,-0.301 0.078,-0.119 0.142,0 0.172,0.133 0.065,0.128 0.11,0.168 0.203,0.026 0.493,-0.119 0.242,-0.072 0.204,0.059 0.261,0.049 0.164,0 0.39,0.169 0.468,-0.054 0.221,0.009 0.227,0.072 0.369,0.268 0.481,0.325 0.688,0.232 0.142,0.094 0.332,0.37 0.516,0.709 0.675,0.678 0.736,0.535 0.393,0.37 0.265,0.453 0.26,0.411 0.265,0.177 0.246,0.14 0.255,0.313 0.182,0.262 0.248,0.297 -0.275,0.405 -0.369,0.543 -0.429,0.632 -0.13,0.156 -0.376,0.381 -0.065,0.108 -0.073,0.276 -0.005,0.501 0.048,0.64 0.046,0.59 0.207,0.069 0.24,0.042 0.265,-0.077 0.321,-0.066 0.398,-0.039 0.44,-0.119 0.26,-0.096 0.273,0.007 0.242,0.103 0.118,0.094 0.171,0.032 0.221,-0.004 -0.047,0.111 -0.121,0.162 -0.149,0.162 -0.131,0.168 -0.291,0.47 -0.009,0.06 0.036,0.093 0.157,0.214 0.164,0.347 0.092,0.318 0.071,0.154 0.199,0.176 0.287,0.363 0.152,0.245 0.317,0.131 0.103,0.31 0.237,0.456 0.256,0.364 0.248,0.285 0.276,0.11 0.111,0.009 0.579,0.527 0.441,0.401 0.109,0.064 0.795,0.263 0.915,0.302 0.734,0.242 0.935,0.308 0.922,0.305 0.865,0.29 1.214,0.408 0.978,0.329 0.772,0.26 0.164,0.081 0.919,0 0.933,0 0.955,0 -0.692,0.669 -0.783,0.757 -0.822,0.794 -0.53,0.511 -0.839,0.811 -0.699,0.674 -0.719,0.736 -0.65,0.666 -0.846,0.922 -0.548,0.596 -0.858,0.935 -0.539,0.586 -0.082,0.034 -0.771,-0.044 -0.75,-0.044 -0.958,-0.055 -0.11,0.002 -0.279,0.055 -0.169,0.054 -0.69,0.158 -0.127,0.041 -0.573,0.251 -0.585,0.296 -0.308,0.228 -0.238,0.33 -0.102,0.235 -0.107,0.103 -0.182,0.09 -1.225,0.223 -0.356,0.03 -0.573,0.178 -0.306,0.298 -0.087,0.15 -0.411,-0.004 -0.718,0.044 -0.307,0.048 -0.15,0.008 -0.275,-10e-4 -0.226,-0.054 -0.15,-0.081 -0.186,-0.183 -0.416,-0.371 -0.302,-0.232 -0.663,0.267 -0.597,0.265 -0.847,0.377 -0.483,0.27 -0.145,0.271 -0.373,0.493 -0.333,0.303 -0.125,0.037 -0.755,-0.063 -0.272,-0.062 -0.45,-0.055 -0.605,-0.107 -0.405,-0.115 -0.44,-0.014 -0.634,-0.039 -0.391,-0.083 -0.397,-0.274 -0.51,-0.329 -0.526,-0.339 -0.542,-0.349 -0.64,-0.402 -0.699,-0.439 -0.16,-0.044 -0.07,-0.008 -0.759,-0.02 -0.789,-0.021 -0.533,-0.014 -0.168,-0.051 -0.122,-0.1 -0.165,-0.325 -0.208,-0.231 -0.232,-0.295 -0.019,-0.398 0.064,-0.435 0.06,-0.144 -0.034,-0.143 0.009,-0.197 -0.13,-0.183 -0.776,-0.21 -0.126,0.016 -0.129,0.079 -0.147,0.056 -0.106,-0.053 -0.065,-0.078 -0.002,-0.129 0.013,-0.096 -0.045,-0.053 -0.247,-0.196 -0.232,-0.258 -0.14,-0.285 -0.136,-0.234 -0.068,-0.523 -0.172,-0.322 -0.168,-0.394 -0.249,-0.751 -0.108,-0.259 -0.202,-0.174 -0.213,-0.161 -0.221,-0.333 -0.575,-0.294 -0.221,-0.229 -0.383,-0.397 -0.095,-0.201 -0.028,-0.199 -0.119,-0.187 -0.212,-0.211 -0.663,-0.454 -0.183,-0.054 -0.237,-0.049 -0.348,-0.045 -0.467,-0.104 -0.408,-0.178 -0.185,-0.126 -0.044,-0.087 0.038,-0.146 0.148,-0.251 0.28,-0.593 0.194,-0.409 0.132,-0.116 0.359,-0.029 0.382,0.012 0.279,0.03 0.394,0.005 0.472,-0.035 0.187,-0.137 0.148,-0.15 0.062,-0.105 0.02,-0.265 -0.001,-0.213 -0.03,-0.817 -0.018,-0.5 -0.021,-0.572 0.003,-0.115 0.004,-0.147 0.115,-0.611 0.108,-0.35 0.074,-0.185 0.298,-0.584 0.056,-0.187 0.01,-0.171 -0.11,-0.785 0.191,-0.37 0.246,-0.366 0.215,-0.157 0.179,-0.106 0.084,0.045 0.206,0.169 0.27,0.167 0.126,-0.037 0.185,-0.146 0.138,-0.154 -0.018,-0.276 0.124,-0.567 -0.024,-0.328 0.133,-0.406 0.145,-0.573 0.065,-0.362 0.083,-0.195 0.393,-0.4 0.338,-0.566 0.215,-0.414 0.412,-0.676 0.208,-0.247 0.169,-0.106 0.252,-0.068 0.469,-0.062 0.337,-0.057 0.049,-0.088 0.029,-0.138 0.005,-0.303 0.065,-0.521 0.146,-0.509 0.172,-0.386 0.093,-0.176 0.111,-0.169 0.125,-0.287 0.158,-0.62 -0.009,-0.421 0.226,-0.772 0.05,-0.004 0.384,-0.142 0.373,-0.021 0.361,0.099 0.235,0.025 0.11,-0.05 0.101,-0.128 0.093,-0.208 0.148,-0.115 0.202,-0.022 0.27,0.234 0.431,0.621 0.111,0.037 0.069,-0.016 0.216,-0.499 0.169,-0.387 0.314,-0.724 0.179,-0.415 0.167,0.12 0.166,0.212 0.188,0.099 0.203,0.061 0.098,0.008 0.125,0.084 0.436,0.517 z\"\n\t\t\t\tid=\"ET\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 556.18775,192.7174 -0.188,0.097 -0.58,0.38 -0.354,0.256 -0.426,0.188 0.11,0.249 0.708,0.052 0.109,0.071 0.079,0.127 0.013,0.204 -0.071,0.329 -0.766,1.801 -0.024,0.377 0.25,1.044 0.351,1.224 1.061,0.541 0.788,0.421 0.506,0.994 0.835,1.301 0.442,0.484 0.025,0.15 -0.131,0.889 -0.535,0.886 -0.5,0.744 -0.518,0.892 -0.405,0.757 -0.439,0.903 -0.051,0.292 -0.008,0.275 0.076,0.303 0.562,1.093 0.219,0.555 0.261,0.598 0.225,0.65 0.13,0.581 0.225,0.563 0.14,0.287 0.232,0.402 0.28,0.596 0.093,0.471 0.423,1.624 0.043,0.411 -0.021,0.304 -0.186,0.074 -0.411,0.048 -0.446,0.199 -0.022,0.067 0.291,0.378 -0.257,0.645 -0.037,0.919 -0.274,0.48 -0.026,0.111 0.012,0.093 0.049,0.073 0.507,0.128 0.044,0.13 0.002,0.269 -0.045,0.248 -0.255,0.184 -0.273,0.271 -0.061,0.25 0.009,0.222 0.093,0.375 0.181,0.436 0.229,0.273 0.813,0.259 0.105,0.213 0.044,0.292 -0.017,0.285 -0.378,0.568 0.003,0.218 0.155,0.526 0.186,0.501 0.793,0.542 0.273,0.296 0.072,0.235 0.04,0.379 -0.005,0.41 -0.062,0.363 -0.249,0.467 -0.575,0.918 -0.579,0.355 -0.035,0.077 0.179,0.292 1.019,1.166 0.665,0.543 0.896,0.73 0.578,0.575 0.187,0.412 0.25,0.458 0.281,0.373 0.203,0.323 0.077,0.208 -0.007,0.223 -0.271,0.671 -0.154,0.517 -0.271,0.755 -0.278,0.524 -0.704,0.954 -1.039,1.18 -0.241,0.355 -0.486,0.617 -0.833,1.233 -0.215,0.271 -0.682,0.976 -0.311,0.31 -0.245,0.289 -0.675,0.915 -0.726,0.691 -0.712,0.64 -0.214,0.323 -0.266,0.247 -0.317,0.234 -0.133,0.131 -0.717,0.869 -0.995,1.198 -0.101,0.019 -0.259,0.193 -0.405,0.047 -0.176,0.147 -0.619,-0.42 -0.103,-0.027 -0.364,0.104 -0.349,0.305 -0.645,0.093 -0.32,0.099 -0.204,0.141 -0.042,-0.333 0.088,-0.423 0.142,-0.283 0.013,-0.184 -0.104,0.019 -0.207,0.415 -0.11,0.484 -0.221,0.243 -0.486,0.099 -0.473,-0.388 -0.225,0.003 0.141,0.278 0.095,0.305 -0.012,0.17 -0.252,-0.03 -0.281,0.182 -0.246,0.266 -0.12,0.001 -0.166,-0.372 -0.304,0.174 -0.26,0.233 -0.527,0.072 -0.314,0.306 -0.556,0.207 -0.305,-0.005 -0.697,0.248 -0.232,0.382 -0.203,0.14 -0.289,-0.118 -0.891,0.186 -0.852,0.244 -0.362,-0.014 -0.362,-0.101 -0.384,0.338 -0.408,0.452 -0.449,0.161 -0.161,-0.058 0.129,-0.237 0.297,-0.245 0.204,-0.333 0.028,-0.278 -0.14,-0.109 -0.192,-0.034 -0.241,-0.288 -0.231,-0.626 -0.125,-0.035 -0.063,0.165 -0.071,0.479 -0.072,0.138 -0.122,0.11 -0.147,0.11 -0.144,0.054 -0.515,-0.007 -0.068,-0.242 0,-0.101 0.092,-0.319 -0.08,-0.056 0.076,-0.25 0.121,0.014 0.144,-0.038 0.072,-0.128 -0.005,-0.154 -0.2,-0.04 -0.012,-0.105 0.178,-0.44 0.025,-0.122 -0.069,-0.025 -0.111,0.048 -0.737,-0.138 -0.909,-0.564 -0.224,-0.029 -0.137,-0.505 -0.219,0.064 -0.32,0.296 -0.24,-0.225 -0.258,-0.148 -0.071,-0.231 0.004,-0.342 -0.022,-0.405 -0.07,-0.475 -0.051,-0.677 0.048,-0.531 0.206,-0.394 0.079,-0.252 0.096,-0.645 0.022,-0.757 -0.055,-0.258 0.014,-0.172 0.164,0 -0.036,-0.148 -0.072,-0.081 -0.08,-0.168 0.068,-0.089 0.196,-0.006 0.016,-0.057 0.022,-0.08 -0.152,-0.444 -0.018,-0.212 -0.21,-0.645 -0.241,-0.614 -0.361,-0.445 0.128,-0.735 0.146,-0.667 -0.029,-0.322 -0.056,-0.393 -0.443,-0.432 -0.065,-0.61 -0.108,-0.658 0.041,-0.404 0.072,-0.311 0.146,-0.31 0.735,-0.98 0.045,-0.514 0.498,-0.038 -0.231,-0.46 -0.054,-0.259 -0.012,-0.303 0.716,-0.208 0.268,0.171 0.63,-0.211 0.56,-0.413 -0.01,-0.22 -0.086,-0.197 -0.119,-0.38 0.084,-0.106 0.204,0.078 -0.094,-0.189 0.017,-0.2 0.223,0.083 0.363,-0.559 0.013,-0.428 0.628,-0.224 0.725,-0.878 0.334,-0.274 0.323,-0.199 0.688,-0.883 0.294,-0.041 0.151,-0.598 0.585,-0.799 0.178,-0.102 0.273,-0.724 0.719,-0.84 0.456,-1.077 0.251,-0.384 0.078,-0.41 0.28,-0.035 0.252,-0.302 0.546,-0.21 0.54,0.058 0.225,0.144 0.207,-0.045 -0.021,-0.37 -0.148,-0.229 0.121,-0.221 0.285,-0.167 -0.029,-0.37 -0.062,-0.223 -0.237,-0.297 0.118,-0.668 0.028,-0.735 0.112,-0.853 -0.297,-0.453 -1.13,-0.774 -0.21,0.027 -0.251,-0.098 -0.262,-0.589 0.117,-0.51 0.014,-0.188 -0.102,0.006 -0.166,0.249 -0.36,0.284 -0.468,-0.218 -0.23,0.048 -0.299,-1.267 -0.153,-0.487 -0.245,-0.608 -0.437,-0.297 -0.086,-0.169 -0.058,-0.259 -0.019,-0.36 -0.056,-0.534 0.023,-0.439 0.054,-0.262 0.189,-0.176 0.272,-0.499 0.057,-0.363 0.023,-0.558 0.125,-0.489 0.139,-0.248 -0.035,-0.198 -0.096,-0.282 -0.204,-0.402 -0.31,-0.491 -0.229,-0.471 -0.101,-0.441 -0.052,-0.396 0.008,-0.36 0.086,-0.246 0.292,-0.31 0.039,-0.132 -0.116,-0.687 -0.204,-0.125 -0.347,-0.067 -0.194,-0.006 -0.037,-0.076 -0.01,-0.138 0.04,-0.283 0.109,-0.325 0.091,-0.208 0.012,-0.176 -0.116,-0.604 -0.035,-0.743 0.04,-0.584 0.368,-0.432 0.017,-0.158 -0.462,-0.471 -0.333,-0.535 -0.104,-0.313 -0.381,-0.047 -0.238,-0.914 -0.344,-0.446 -0.34,-0.387 -0.201,-0.18 -1.18,-0.557 -0.468,-0.106 -0.555,-0.326 -0.413,-0.41 -0.354,-0.264 -0.303,-0.327 -0.423,-0.306 -0.121,-0.262 -0.457,-0.486 -0.214,-0.321 -0.743,-0.607 -0.027,-0.24 -0.005,-0.232 -0.034,-0.097 -0.766,-0.446 0.151,-0.256 0.599,-0.016 0.495,0.233 0.109,-0.1 0.065,-0.207 -0.211,-0.832 0.038,-0.218 0.218,-0.262 0.346,-0.209 0.545,-0.03 0.372,0.031 0.079,0.023 0.555,0.918 0.477,0.891 0.253,0.378 0.619,1.068 0.232,0.615 0.079,0.439 0.252,-0.002 0.871,0.192 0.732,0.162 0.204,0.245 0.504,-0.049 0.389,-0.221 0.686,-0.279 0.184,-0.344 0.229,-0.369 0.402,0.058 0.44,0.291 0.499,0.382 0.445,0.176 0.597,0.276 0.278,0.356 0.39,0.102 0.408,-0.356 0.241,-0.971 0.214,-0.435 0.303,-0.319 0.347,-0.141 0.265,-0.051 0.201,-0.249 0.285,-0.554 0.056,-0.674 -0.055,-1.224 0.052,-0.406 0.233,-0.666 0.313,-1.776 0.14,-0.516 0.171,-0.314 0.235,-0.187 0.427,-0.544 0.61,-1.084 0.165,-0.092 0.438,-0.055 0.544,0.04 0.49,0.191 0.053,-0.015 0.22,-0.1 0.399,-0.338 0.684,-0.674 0.438,-0.186 0.398,0.026 0.441,0.738 0.623,0.819 0.4,0.396 1.091,0.741 0.958,0.485 0.538,1.594 -0.266,0.631 -0.132,0.217 -0.469,0.625 -0.501,0.878 -0.038,0.456 0.166,0.459 0.212,0.297 z m -11.556,29.004 -0.419,0.22 -0.337,-0.137 -0.006,-0.427 0.209,-0.207 0.378,-0.083 0.518,0.207 0.076,0.11 -0.297,0.083 -0.122,0.234 z m -10.189,11.238 0.03,0.116 0.164,-0.032 0.222,-0.212 0.157,0.099 -0.018,0.302 -0.106,-0.012 -0.029,-0.05 -0.137,0.172 -0.024,0.104 -0.158,0.066 -0.292,-0.295 -0.184,-0.486 0.428,-0.001 -0.041,0.116 -0.012,0.113 z m 0.654,16.138 -0.039,0.265 -0.191,-0.029 -0.194,0.048 -0.156,-0.263 -0.083,-0.444 0.029,-0.096 0.122,-0.101 0.093,0.244 0.419,0.376 z m 1.525,1.095 -0.205,0.025 -0.289,-0.281 -0.036,-0.11 0.113,-0.064 -0.075,-0.226 0.022,-0.1 0.223,0.179 0.122,0.208 -0.119,0.048 0.202,0.215 0.042,0.106 z m 0.508,-0.192 0.355,0.131 0.149,-0.047 0.17,0.297 -0.288,0.188 -0.02,0.234 0.114,0.145 0.04,0.21 -0.287,0 -0.137,-0.177 -0.06,-0.225 -0.134,-0.159 -0.178,-0.121 0.087,-0.162 0.05,-0.232 0.139,-0.082 z m -0.96,1.299 -0.281,0.193 -0.107,-0.046 0.027,-0.326 0.167,-0.149 0.281,-0.017 -0.087,0.345 z m -0.575,0.184 -0.246,0.056 -0.153,-0.163 0.058,-0.121 0.171,-0.135 0.186,0.019 0.04,0.158 -0.056,0.186 z\"\n\t\t\t\tid=\"FI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 971.98475,498.0674 -0.11,0.029 -0.177,-0.024 -0.036,-0.046 0.056,-0.01 0.116,-0.03 0.142,0.015 0.025,0.03 -0.016,0.036 z m 8.201,10.49 -0.123,0.056 0,-0.036 0,-0.009 0.086,-0.078 0.069,0 -0.032,0.067 z m 0.075,1.027 -0.198,0.108 0,-0.149 0.158,-0.138 0.12,-0.029 -0.074,0.139 -0.006,0.069 z m 2.731,2.245 -0.071,0.1 -0.062,-0.036 0.079,-0.168 0.012,-0.072 -0.122,-0.088 -0.008,-0.062 0.036,-0.038 0.146,0.099 0.089,0.077 0.018,0.042 -0.027,0.075 -0.09,0.071 z m 1.979,1.99 -0.156,0.031 -0.142,-0.125 0.09,-0.132 0.126,0.031 0.072,0.128 0.01,0.067 z m -2.068,0.07 -0.085,0.044 -0.059,-0.01 -0.069,-0.047 -0.042,-0.083 0.088,-0.07 0.136,0.079 0.031,0.087 z m 0.635,0.755 -0.033,0.054 -0.15,-0.088 -0.058,-0.06 0.16,-0.046 0.078,0.015 0.003,0.125 z m -2.913,2.079 0.007,0.087 -0.042,-0.005 -0.05,-0.037 -0.025,0.018 -0.018,0.027 -0.009,0.061 -0.007,0.034 -0.039,-0.012 -0.007,-0.06 0.013,-0.042 0.019,-0.062 0.07,-0.056 0.088,0.047 z m 3.55,0.666 -0.031,0.027 -0.077,-0.03 -0.063,-0.041 -0.008,-0.042 0.026,-0.054 0.061,-0.028 0.031,0.011 -0.018,0.018 -0.037,0.019 0.006,0.053 0.048,0.032 0.046,0.009 0.016,0.026 z m -0.496,4.457 0.006,0.008 -0.016,-0.001 -0.022,-0.01 -0.018,-0.02 -0.004,-0.022 0.009,-0.022 0.009,10e-4 0.015,0.02 0.014,0.022 0.007,0.024 z m -3.618,-13.233 -0.424,0.387 -0.152,0.2 -0.129,0.221 -0.361,0.237 -0.154,0.318 0.011,0.321 0.362,-0.336 0.403,-0.274 0.124,-0.056 0.127,0.003 -0.011,0.094 -0.058,0.093 -0.045,0.243 0.106,0.226 -0.301,-0.022 -0.298,0.019 -0.353,0.126 -0.347,0.056 -0.13,10e-4 -0.124,-0.042 -0.081,-0.065 -0.063,-0.15 -0.064,-0.022 -0.275,0.007 -0.412,0.294 -0.137,0.252 -0.158,0.011 -0.188,-0.052 -0.227,0.193 -0.271,0.069 -0.116,-0.164 -0.076,-0.2 -0.097,-0.147 -0.298,-0.037 0.046,-0.18 0.079,-0.074 0.072,-0.107 0.044,-0.122 0.143,0.077 0.146,0.05 0.163,-0.091 0.17,-0.008 0.17,-0.266 0.267,-0.167 0.367,-0.132 0.374,-0.094 0.193,-0.019 0.185,-0.054 0.325,-0.25 0.215,-0.128 0.234,-0.077 0.224,-0.045 0.207,0.04 0.167,-0.021 0.426,-0.178 0,0.042 z m 0.002,1.08 -0.036,0.003 -0.007,-0.056 0.043,-0.097 0,0.15 z m 0.391,0.431 -0.092,0.036 -0.299,0.248 0,0 -0.193,0.263 -0.096,0.256 0.081,0.106 0.208,-0.109 0.07,-0.111 0.301,-0.217 0.128,-0.248 -0.108,-0.224 z m -8.153,1.338 -0.145,0.049 0.077,-0.232 0.081,-0.073 0.052,-0.015 0.083,-0.016 -0.032,0.164 -0.116,0.123 z m 6.141,0.642 -0.094,0.079 -0.044,-0.402 0.097,0.003 0.07,0.042 0.04,0.102 -0.069,0.176 z m -3.205,0.015 0,0.129 0.082,0.056 0.082,0.009 0.202,0.248 0.315,0.213 0.192,0.163 0.011,0.139 -0.059,0.147 0.082,0.264 0.039,0.273 0.14,0.434 -0.197,0.083 -0.311,0.01 -0.072,0.078 -0.105,-0.043 -0.258,0.033 -0.246,0.143 -0.234,0.194 -0.271,0 -0.305,0.04 -0.304,-0.027 -0.214,-0.104 -0.377,-0.113 -0.503,-0.096 -0.208,-0.081 -0.174,-0.126 -0.162,-0.319 -0.024,-0.158 0.025,-0.151 0.147,-0.051 0.123,-0.076 0.017,-0.1 0.055,-0.07 0.07,-0.025 0.035,-0.048 -0.05,-0.162 -0.014,-0.147 0.292,-0.27 0.317,-0.23 0.562,-0.212 0.343,0.02 0.526,-0.163 0.169,-0.077 0.167,0.047 0.095,0.126 z m 1.536,1.044 -0.145,0.052 -0.08,-0.179 0.11,-0.18 0.124,-0.016 0.061,0.183 -0.07,0.14 z m 1.464,1.095 -0.025,0.024 -0.243,-0.234 0.008,-0.093 0.043,-0.083 0.098,-0.078 0.088,0.133 0.069,0.222 -0.038,0.109 z m -2.417,2.565 -10e-4,0.127 -0.361,0.084 -0.121,-0.104 -0.078,-0.019 -0.215,0.186 -0.063,0.076 -0.021,0.057 -0.056,0.029 -0.396,0.089 -0.174,-0.089 0.117,-0.06 0.145,-0.121 0.146,0.018 0.146,-0.113 0.146,-0.172 0.207,-0.037 0.146,-0.066 0.241,0.048 0.192,0.067 z m -10.829,8.096 -0.021,0.033 -0.081,-0.011 -0.016,-0.067 0.047,-0.038 0.066,0.025 0.005,0.058 z\"\n\t\t\t\tid=\"FJ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 309.73275,630.2184 0.429,0.263 0.537,-0.092 0.226,0.072 0.132,0.219 -0.079,0.203 -0.17,-0.029 -0.146,0.055 0.029,0.268 0.099,0.115 0.567,0.295 0.104,0.018 -0.019,-0.124 -0.099,-0.203 -0.037,-0.218 0.084,-0.181 0.148,-0.057 0.646,-0.091 0.151,0.086 0.32,0.514 -0.3,0.071 -0.126,0.223 0.264,0.097 0.209,0.143 -0.111,0.219 -0.02,0.11 -0.465,0.155 -0.412,0.1 -0.188,0.258 -0.332,0.188 -0.976,0.328 0.114,0.267 0.015,0.128 -0.042,0.347 -1.343,-0.415 -0.182,0.044 0.359,0.708 -0.266,0.131 -0.263,-0.085 -0.239,0.059 -0.152,0.513 -0.383,-0.328 -0.327,-0.466 -10e-4,-0.26 0.316,-0.485 -0.096,-0.205 0.735,-0.657 0.132,-0.195 0.229,-0.111 0.238,-0.038 0.101,-0.084 -0.017,-0.16 -0.095,-0.272 0.008,-0.442 0.589,-0.599 -0.086,-0.385 0.191,-0.015 z m -3.54,0.564 -0.385,0 -0.076,-0.146 0.001,-0.37 0.292,-0.032 0.285,0.154 -0.019,0.155 -0.098,0.239 z m -0.49,0.297 0.406,0.085 0.373,-0.316 0.257,-0.101 0.212,0.068 0.149,0.191 0.216,-0.03 0.611,-0.195 0.08,0.066 0.218,-0.227 0.187,0.105 0.148,0.198 -0.072,0.229 -0.169,0.146 -0.107,0.204 -0.125,0.164 -0.216,0.153 -0.166,0.244 -0.398,0.573 -0.58,0.734 -0.192,0.066 -0.4,0.044 -0.172,-0.051 -0.147,0.017 -0.118,0.398 -0.183,0.302 -0.086,0.063 -0.19,0.028 -0.09,0.046 -0.068,0.112 -0.5,-0.029 -0.353,-0.186 -0.418,-0.412 0.558,-0.504 0.481,0.023 0.397,-0.338 0.323,-0.171 0.128,-0.173 0.141,-0.133 10e-4,-0.173 -0.108,-0.077 -0.146,0.008 -0.144,0.075 -0.338,0.098 -0.231,-0.198 0.152,-0.074 0.171,0.004 0.523,-0.186 0.1,-0.078 -0.161,-0.263 -0.315,-0.16 -0.255,-0.268 -0.047,-0.1 0.013,-0.159 -0.141,-0.314 0.148,-0.016 0.197,0.202 0.446,0.286 z m -2.056,1.46 0.201,0.062 0.2,-0.023 -0.113,0.466 -0.088,0.224 -0.237,-0.018 -0.235,-0.305 -0.082,-0.162 0.262,-0.116 0.092,-0.128 z m 7.241,1.022 0.017,0.4 -0.225,-0.127 -0.08,-0.194 0.125,-0.132 0.103,0.01 0.06,0.043 z m -3.491,1.005 -0.18,0.088 -0.05,-0.039 -0.057,-0.172 -0.003,-0.222 -0.021,-0.1 0.112,0.032 0.203,0.177 -0.004,0.236 z\"\n\t\t\t\tid=\"FK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 862.59175,436.3134 -0.213,0.23 -0.014,-0.075 0.064,-0.138 0.09,-0.157 0.084,-0.094 0.109,-0.027 0.078,0.13 -0.088,0.113 -0.11,0.018 z m 38.557,5.831 -0.049,0.015 -0.022,-0.014 0.011,-0.072 0.016,-0.025 0.046,-0.002 0.08,0.02 0.006,0.018 -0.088,0.06 z m -0.656,0.241 -0.023,0.037 -0.171,-0.014 -0.024,-0.021 0.015,-0.016 0.082,-0.017 0.01,-0.051 -0.042,-0.011 0.036,-0.027 0.067,-0.005 0.038,0.032 0.021,0.046 -0.009,0.047 z m 18.711,1.496 -0.163,0.063 -0.205,-0.029 -0.063,-0.229 -0.094,-0.061 0.021,-0.113 0.144,-0.092 0.305,0.075 0.113,0.163 -0.072,0.108 0.014,0.115 z m 13.101,4.172 0.029,0.136 -0.179,-0.066 -0.024,-0.048 0.104,-0.048 0.07,0.026 z\"\n\t\t\t\tid=\"FM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 456.91675,238.9744 -0.134,0.434 -0.199,-0.068 -0.055,-0.047 -0.043,-0.113 0.021,-0.323 -0.007,-0.468 0.229,0.385 0.188,0.2 z m -0.631,0.185 -0.07,0.806 -0.114,-0.004 -0.204,-0.223 -0.153,-0.046 -0.048,0.119 0.008,0.143 0.079,0.09 0.244,0.538 0.022,0.157 -0.03,0.076 -0.237,-0.155 -0.572,-0.696 -0.445,-1.151 0.6,-0.185 0.435,0.303 0.485,0.228 z m -1.56,0.532 0.252,0.232 0.089,0.164 -0.145,0.158 -0.175,0.041 -0.212,-0.037 -0.349,-0.171 -0.122,-0.392 0.241,0.009 0.285,-0.075 0.136,0.071 z m 1.582,1.988 -0.055,0.223 -0.077,-0.002 -0.264,-0.276 -0.21,-0.151 -0.07,-0.128 -0.059,-0.219 0.121,-0.027 0.144,0.05 0.361,0.2 0.102,0.208 0.007,0.122 z m -0.215,2.131 0.056,0.178 -0.065,-0.02 -0.189,-0.203 -0.33,-0.484 -0.115,-0.401 -0.016,-0.186 0.082,0.021 0.068,0.165 0.313,0.108 0.083,0.082 -0.001,0.201 0.105,0.238 0.009,0.301 z\"\n\t\t\t\tid=\"FO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 482.92875,298.0884 0.167,-0.049 0.283,-0.176 0.236,-0.056 0.135,0.135 0.076,0.077 0.148,0.304 0.042,0.316 0.066,0.263 0.12,0.106 0.451,0.035 0.333,0.097 0.088,0.088 0.114,0.582 0.062,0.082 0.083,-0.068 0.082,-0.096 0.114,-0.015 0.195,0.037 0.257,0.012 0.265,0.064 0.366,0.328 -0.014,0.108 -0.071,0.189 -0.025,0.151 0.063,0.061 0.097,0.156 -0.023,0.18 -0.094,0.126 -0.038,0.104 0,0.067 0.035,0.056 0.075,0.049 0.541,0.066 0.495,-0.066 0.312,-0.184 0.053,-0.194 0.088,-0.218 0.186,-0.184 0.128,-0.062 0.118,0.075 -0.198,0.769 0.145,0.196 0.021,0.292 0.052,0.256 0.177,-0.005 0.214,0.047 0.152,0.094 0.177,0.152 0.255,0.14 0.179,0.049 0.065,0.116 0.145,0.135 0.228,0.282 0.204,0.188 0.099,0 0.19,-0.074 0.282,-0.047 0.222,0.004 0.095,0.143 0.219,0.066 0.077,0.053 0.086,0.099 0.146,0.04 0.176,-0.04 0.128,-0.131 0.171,-0.06 0.172,0.02 0.099,0.072 0.188,0.107 0.106,-0.023 0.213,0.066 0.214,0.208 0.09,0.208 0.023,0.114 0.092,0.124 0.359,0.558 0.114,0.027 0.125,-0.084 0.081,-0.12 0.117,-0.024 0.188,0.056 0.121,0.063 0.058,0.241 0.041,0.046 0.081,-0.052 0.145,-0.011 0.232,0.059 0.318,-0.068 0.255,-0.101 0.13,0.004 0.21,0.281 0.24,0.105 0.528,0.085 0.567,0.132 0.223,0.107 0.152,0.053 0.016,0.371 -0.046,0.056 -0.565,0.742 -0.238,0.265 -0.121,0.377 -0.083,0.578 -0.167,0.547 -0.25,0.518 -0.091,0.388 0.068,0.258 -0.043,0.405 -0.153,0.551 -0.026,0.415 0.102,0.28 0.141,0.057 -0.339,0.188 -0.077,0.165 -0.133,0.217 -0.216,0.091 -0.217,0.03 -0.176,-0.028 -0.1,-0.087 0.005,-0.081 -0.093,-0.069 -0.231,0.002 -0.239,0.149 -0.191,0.244 0.059,0.136 0.176,0.036 0.046,0.054 0,0.07 -0.062,0.084 -0.074,0.144 -0.369,0.428 -0.372,0.431 -0.06,0.13 -0.118,0.091 -0.473,0.23 -0.049,0.092 -0.027,0.383 -0.053,0.314 -0.351,0.295 -0.349,0.293 -0.087,0.179 -0.063,0.207 -0.109,0.234 -0.022,0.124 0.177,0.201 -0.021,0.166 -0.056,0.236 -0.167,0.167 -0.186,0.095 0.004,0.256 0.099,0.036 0.224,-0.019 0.317,-0.186 0.207,-0.24 -0.122,-0.227 -0.015,-0.044 0.03,-0.054 0.245,-0.248 0.3,-0.149 0.419,-0.028 0.505,0.088 0.05,0.037 -0.024,0.152 0.047,0.224 0.091,0.157 -0.125,0.445 0.095,0.139 0.147,0.167 0.11,0.152 0.158,0.139 0.141,0.235 0.048,0.133 -0.226,0.23 -0.382,0.216 -0.043,0.139 0.005,0.157 0.043,0.124 0.211,0.159 0.227,0.359 0.144,0.32 0.315,0.306 0.077,0.091 -0.02,0.076 -0.083,0.13 -0.108,0.434 -0.129,0.068 -0.144,0.028 -0.39,0.317 -0.174,-0.039 -0.247,0.004 -0.181,0.104 0.02,0.197 0.159,0.18 0.093,0.196 0.038,0.204 0.176,0.151 0.248,0.09 0.142,0.006 0.092,0.054 0.056,0.07 0.107,0.436 -0.064,0.109 -0.134,0.046 -0.08,0.179 -0.159,0.263 -0.09,0.211 0.1,0.186 0.042,0.138 -0.053,0.142 0.071,0.22 0.188,0.218 0.511,0.306 0.475,0.249 0.147,0.041 0.642,-0.16 0.106,0.014 0.078,0.19 0.034,0.128 -0.072,0.192 -0.177,0.271 -0.188,0.211 -0.114,0.179 0.024,0.163 0.007,0.216 -0.153,0.064 -0.005,-0.042 -0.063,-0.037 -0.054,0.021 -0.042,0.047 -0.006,0.083 -0.326,0.138 -0.225,0.143 -0.889,0.852 -0.416,0.249 -0.082,0.15 -0.085,0.28 -0.244,0.24 -0.214,0.114 -0.529,0.117 -0.532,0.254 -0.24,-0.11 -0.62,0.012 -0.387,-0.306 -0.744,-0.194 -0.242,-0.447 -0.339,-0.029 -0.222,0.014 -0.133,-0.068 -0.034,-0.153 -0.003,-0.147 -0.235,0.068 -0.18,0 -0.107,0.059 -0.084,0.068 -0.1,-0.043 -0.058,0.015 0.005,0.086 -0.216,0.022 -0.235,-0.053 -0.615,-0.231 -0.094,-0.036 -0.427,-0.089 -0.172,-0.093 -0.14,-0.229 -0.106,-0.072 -0.063,-0.043 -0.398,0.116 -0.138,0.18 -0.215,0.211 -1.476,1.032 -0.27,0.431 -0.312,0.633 -0.024,0.295 0.134,0.94 0.3,0.492 0.038,0.114 -0.167,10e-4 -0.279,-0.062 -0.231,-0.076 -0.221,0.042 -0.212,0.102 -0.186,0.062 -0.134,0.017 -0.089,0.059 -0.043,0.117 -0.008,0.082 -0.235,-0.02 -0.543,-0.168 -0.488,-0.116 -0.287,0.132 -0.184,0.123 -0.129,-0.019 -0.099,-0.13 -0.066,-0.127 -0.191,-0.117 -0.432,-0.175 0.022,-0.084 0.074,-0.118 -0.002,-0.073 -0.083,-0.108 -0.398,-0.116 -0.188,-0.029 -0.119,0.08 -0.086,0.098 -0.221,-0.36 -0.158,-0.074 -0.238,-0.012 -0.273,-0.11 -0.284,-0.141 -0.689,-0.225 -0.189,-0.027 -0.076,0.036 -0.051,0.135 -0.027,0.38 -0.029,0.042 -0.32,0.013 -0.394,-0.053 -0.181,0.026 -0.161,10e-4 -0.152,-0.101 -0.681,0.115 -0.113,-0.056 -0.164,-0.171 -0.184,-0.139 -0.142,-0.071 -0.122,-0.082 -0.11,-0.013 -0.168,0.079 -0.232,0.034 -0.192,-0.01 -0.103,0.011 -0.432,-0.422 -0.063,-0.115 -0.215,-0.032 -0.266,-0.005 -0.678,-0.274 -0.309,-0.147 -0.045,-0.088 0.004,-0.071 -0.053,0.016 -0.095,0.125 -0.05,0.102 -0.066,0.019 -0.097,-0.016 -0.09,-0.058 -0.055,-0.074 0.059,-0.129 0.104,-0.169 0.043,-0.184 -0.01,-0.165 -0.171,-0.106 -0.252,-0.044 -0.185,-0.013 -0.24,-0.094 -0.114,-0.068 -0.11,-0.184 -0.004,-0.134 0.457,-0.118 0.411,-0.485 0.39,-1.768 0.282,-2.109 0.209,-0.4 0.264,-0.11 -0.213,-0.292 -0.133,0.148 -0.056,0.157 -0.07,0.079 0.157,-1.955 0.112,-0.72 0.191,-0.756 0.391,0.3 0.324,0.305 0.167,0.264 0.212,0.876 0.161,0.184 0.24,0.184 -0.095,-0.201 -0.165,-0.154 -0.258,-1.169 -0.162,-0.333 -0.252,-0.28 -0.812,-0.591 -0.073,-0.115 -0.04,-0.226 0.269,0.01 0.232,0.11 -0.027,-0.126 -0.069,-0.132 -0.108,-0.481 -0.09,-1.127 0.012,-0.193 -0.04,-0.238 -0.26,-0.053 -0.208,-0.009 -0.224,-0.094 -1.106,-0.668 -0.378,-0.692 -0.387,-0.512 -0.093,-0.224 0.006,-0.227 0.201,-0.48 -0.177,-0.304 -0.173,-0.06 -0.15,-0.151 0.136,-0.251 0.113,-0.161 0.227,-0.043 0.297,0.053 0.282,0.146 0.221,0.039 -0.653,-0.391 -1.06,0.132 -0.229,-0.05 -0.192,-0.087 -0.076,-0.288 0.151,-0.129 0.136,-0.24 -0.154,-0.168 -0.2,-0.064 -0.314,0.003 -0.293,0.051 -0.074,-0.097 0.179,-0.268 -0.152,-0.098 -0.203,0.046 -0.294,0.055 -0.281,-0.084 -0.266,-0.305 -0.176,0.002 -0.121,0.038 -0.179,-0.118 -0.189,-0.029 -0.135,0.039 -0.179,-0.175 -1.104,-0.352 -0.476,-0.043 -0.437,0.159 -0.241,-0.055 -0.177,-0.228 -0.148,-0.382 -0.704,-0.295 0.139,-0.194 0.328,-0.046 0.377,-0.134 0.136,-0.173 -0.295,-0.201 -0.218,-0.05 -0.09,-0.072 -0.092,-0.181 0.13,-0.083 0.092,0.044 0.266,0.026 0.454,-0.044 -0.169,-0.183 -0.176,-0.041 -0.081,-0.046 -0.37,-0.02 -0.168,0.063 -0.378,-0.024 -0.082,-0.197 -0.04,-0.17 0.117,-0.378 0.532,-0.339 1.326,-0.371 0.57,0.054 0.395,-0.067 0.474,-0.234 0.209,-0.201 0.674,-0.118 0.64,0.213 0.59,0.804 0.282,0.272 0.691,-0.472 1.029,0.014 0.212,0.266 0.086,-0.224 0.189,-0.263 0.151,0.12 0.077,0.163 1.086,-0.046 0.171,-0.047 -0.292,-0.191 -0.238,-0.458 -0.05,-1.693 -0.301,-0.475 -0.345,-0.761 -0.159,-0.453 -0.015,-0.157 0.053,-0.227 0.424,0.012 0.328,0.058 0.625,-0.171 0.3,0.117 -0.018,0.354 0.092,0.446 0.104,0.216 0.159,0.245 0.503,-0.022 0.543,0.144 0.687,0.022 1.003,0.248 0.427,-0.144 0.414,-0.307 0.788,-0.202 0.063,-0.106 -0.454,0.042 -0.416,-0.195 -0.056,-0.211 0.048,-0.19 0.169,-0.438 1.206,-0.693 0.864,-0.205 0.902,-0.383 0.454,-0.393 0.3,-0.509 0.097,-0.112 0.125,-0.094 -0.116,-0.183 0.078,-1.96 0.084,-0.355 0.176,-0.291 0.268,-0.225 0.406,-0.244 1.497,-0.337 0.222,-0.137 0.031,0.212 0.109,0.271 0.075,0.148 -0.063,0.193 0.049,0.159 0.203,0.286 0.253,0.269 0.226,0.172 0.069,-0.026 z m -11.34,20.266 -0.099,0.352 -0.188,-0.324 -0.248,-0.284 -0.057,-0.263 0,-0.07 0.291,0.192 0.301,0.397 z m 29.913,12.125 -0.073,0.559 0.053,0.163 0.102,0.114 0.047,0.125 0.085,1.482 -0.016,0.118 -0.343,0.593 -0.077,0.173 -0.017,0.732 -0.058,0.196 -0.122,0.193 -0.217,0.624 -0.188,0.28 -0.514,-0.342 -0.303,-0.148 -0.148,-0.159 -0.097,-0.11 0.063,-0.147 0.138,-0.153 0.022,-0.121 -0.325,-0.136 -0.149,-0.091 0.002,-0.16 0.112,-0.249 -0.051,-0.206 -0.188,0.01 -0.146,-0.031 -0.019,-0.107 0.107,-0.137 0.138,-0.179 -0.004,-0.198 -0.167,-0.085 -0.151,-0.161 -0.061,-0.219 0.117,-0.15 0.19,-0.096 -0.14,-0.225 -0.094,-0.005 -0.075,-0.049 0.062,-0.104 0.147,-0.156 0.205,-0.467 0.285,-0.221 0.506,-0.142 0.137,-0.063 0.125,-0.165 0.139,-0.106 0.169,0.014 0.156,0.063 0.096,0.068 0.072,-0.071 0.07,-0.205 -0.043,-0.18 0.022,-0.495 0.09,-0.281 0.146,-0.016 0.134,0.155 -0.006,0.137 0.05,0.324 0.005,0.213 z\"\n\t\t\t\tid=\"FR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 512.20375,456.8944 -0.014,0.195 -0.223,0.478 -0.104,0.368 -0.026,0.391 0.061,0.316 0.107,0.224 0.069,0.245 -0.053,0.171 -0.108,0.073 0.074,0.086 0.162,0.02 0.276,-0.074 0.424,-0.131 0.555,-0.189 0.365,-0.101 0.603,0.064 0.322,0.072 0.165,0.132 0.178,0.562 0.088,0.086 0.146,0.239 0.122,0.287 0.026,0.146 -0.014,0.105 -0.122,0.155 -0.138,0.229 -0.049,0.138 -0.115,0.103 -0.146,0.101 -0.403,0.041 -0.062,0.06 -0.112,0.243 -0.213,0.206 -0.097,0.195 -0.085,0.26 0.017,0.321 -0.043,0.463 -0.043,0.314 0.106,0.11 0.482,0.076 0.093,0.062 0.128,0.194 0.164,0.183 0.44,0.115 0.171,0.139 0.139,0.153 0.018,0.125 -0.1,0.503 -0.096,0.483 0.038,0.368 0.035,0.351 0.053,0.511 -0.023,0.312 -0.125,0.191 0,0.149 0.057,0.18 -0.11,0.498 -0.071,0.084 -0.197,0.093 -0.104,0.134 -0.033,0.21 -0.106,0.288 -0.11,0.105 0,0.134 0.106,0.097 -0.002,0.15 -0.197,0.178 -0.118,0.136 -0.263,0.067 -0.3,-0.071 -0.07,-0.099 0.072,-0.154 -0.026,-0.124 -0.103,-0.13 -0.161,-0.334 -0.142,-0.071 -0.079,0.137 -0.244,0.254 -0.431,0.326 -0.302,0.026 -0.558,-0.099 -0.467,-0.156 -0.221,-0.382 -0.137,-0.316 -0.2,-0.366 -0.224,-0.174 -0.239,-0.112 -0.106,-0.007 -0.342,0.204 -0.103,0.081 10e-4,0.171 0.032,0.16 0.053,0.077 0.044,0.103 -0.008,0.159 -0.061,0.213 -0.021,0.235 -1.072,0.231 -0.185,-0.083 -0.135,-0.106 -0.162,0.019 -0.466,0.12 -0.171,-0.084 -0.169,-0.061 -0.078,0.051 -0.006,0.1 0.079,0.554 -0.026,0.211 -0.104,0.276 -0.055,0.187 0.285,0.052 0.102,0.087 0.1,0.139 0.137,0.13 0.009,0.079 -0.155,0.145 -0.053,0.178 0.074,0.139 0.193,0.146 0.283,0.151 0.138,0.099 -0.014,0.091 -0.131,0.192 -0.05,0.164 -0.09,0.147 0.019,0.136 0.127,0.127 -0.013,0.113 -0.087,0.086 -0.176,-0.018 -0.149,0.012 -0.133,-0.035 -0.418,-0.439 -0.092,-0.013 -0.606,0.338 -0.151,0.138 -0.125,0.2 -0.168,0.431 -0.275,-0.251 -0.238,-0.459 -0.277,-0.283 -0.583,-0.455 -0.156,-0.336 -0.667,-0.739 -0.958,-0.739 -0.693,-0.641 -0.105,-0.142 0.117,0.017 0.669,0.32 0.091,-0.036 0.077,-0.072 -0.288,-0.168 -0.276,-0.132 -0.259,-0.082 -0.259,0.007 -0.145,-0.135 -0.094,-0.206 -0.048,-0.176 -0.115,-0.185 -0.367,-0.38 -0.089,-0.147 -0.201,-0.2 0.122,-0.027 0.394,0.192 0.035,-0.077 -0.034,-0.112 -0.396,-0.182 -0.214,-0.012 -0.05,-0.128 0.029,-0.148 -0.283,-0.553 -0.294,-0.415 -0.046,-0.196 0.793,0.902 0.106,0.015 0.14,-0.008 0.328,-0.101 -0.063,-0.121 -0.148,-0.129 -0.143,0.06 -0.187,0.012 -0.098,-0.054 -0.044,-0.093 0.187,-0.438 -0.081,0.023 -0.059,0.077 -0.103,0.038 -0.158,0.022 -0.391,-0.234 -0.344,-0.632 -0.091,-0.13 -0.092,-0.22 -0.091,-0.091 -0.396,-0.899 0.151,0.067 0.181,0.26 0.351,-0.055 0.137,-0.15 0.119,0.005 0.123,-0.034 0.154,-0.142 0.45,-0.62 0.119,-0.816 -0.039,-0.485 -0.066,-0.482 0.149,-0.154 0.059,0.102 0.029,0.171 0.07,0.127 0.16,0.113 0.298,0.03 0.46,0.179 0.164,0.113 0.045,-0.227 0.53,-0.193 -0.161,-0.069 -0.47,0.076 -0.646,-0.289 -0.215,-0.183 -0.2,-0.349 -0.207,-0.182 0.014,-0.163 0.464,-0.151 0.123,0.017 0.049,0.18 0.125,0.074 0.047,-0.025 0.021,-0.153 10e-4,-0.412 -0.141,-0.591 0.043,-0.114 0.127,-0.041 0.113,-0.078 0.079,-0.014 0.157,0.014 0.079,0.137 0.043,0.075 0.159,0.035 0.13,0.073 0.112,-0.02 0.093,-0.085 0.136,-0.018 0.423,0.002 0.383,0.001 0.762,0.002 0.763,0.003 0.763,0.002 0.574,0.002 -0.002,-0.337 -0.003,-0.521 -0.003,-0.616 -0.004,-0.591 -0.003,-0.546 -0.003,-0.645 0.031,-0.186 0.038,-0.076 -0.014,-0.107 0.591,-0.007 1.068,0.047 0.467,-0.006 0.133,0.009 0.584,-0.033 0.472,0.041 0.201,0.045 0.181,0.023 0.566,0.028 0.739,-0.035 0.251,0.008 0.139,0.09 z\"\n\t\t\t\tid=\"GA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 471.90475,298.2024 -0.235,0.152 -0.074,0.179 -0.057,0.07 -0.155,0.046 -0.154,10e-4 -0.586,-0.358 -0.135,0.016 0.134,-0.164 0.364,-0.134 0.205,-0.177 0.473,0.171 0.22,0.198 z m -8.788,-11.97 0.118,0.087 0.296,-0.014 -0.098,0.194 -0.326,0.216 -0.219,0.213 -0.265,0.178 -0.128,-0.205 -0.149,0.008 -0.228,-0.394 -0.041,-0.59 0.298,-0.154 0.412,0.009 0.33,0.452 z m -6.113,-9.212 0.396,0.123 0.295,-0.002 0.262,0.357 0.14,0.562 0.327,0.554 0.428,0.48 0.017,0.293 -0.153,0.157 -0.319,0.195 10e-4,0.209 0.211,-0.105 0.182,-0.048 0.438,0.046 0.153,0.212 0.106,0.317 0.056,0.26 -0.038,0.282 -0.118,-0.09 -0.12,-0.252 -0.133,-0.116 -0.155,-0.063 0.07,0.347 -0.028,0.463 0.067,0.043 0.208,0.008 -0.137,0.472 -0.285,0.128 -0.331,0.048 -0.08,0.167 -0.06,0.215 -0.173,0.32 -0.228,0.181 -0.282,-0.037 -0.276,-0.143 -0.241,-0.029 -0.168,0.085 -0.109,0.079 -0.106,-0.014 -0.303,0.03 -0.285,-0.006 -0.041,-0.125 0.049,-0.376 -0.064,-0.102 -0.272,-0.052 -0.101,-0.09 -0.157,-0.26 -0.031,-0.122 -0.022,-0.168 -0.166,-0.217 -0.201,-0.156 -0.118,-0.008 -0.235,0.254 -0.194,0.257 0.068,0.129 0.063,0.169 -0.105,0.122 -0.319,0.278 -0.05,0.108 -0.086,0.059 -0.152,-0.077 -0.379,0.018 -0.174,-0.049 -0.203,-0.205 -0.495,-0.137 -0.083,-0.329 -0.095,-0.062 -0.561,-0.565 -0.075,-0.189 0.073,-0.113 0.209,-0.171 0.703,-0.284 0.111,-0.114 0.023,-0.101 -0.207,-0.115 -0.186,-0.128 -0.063,-0.083 -0.005,-0.073 0.106,-0.095 0.212,-0.007 0.168,0.043 0.133,-0.085 0.234,-0.086 0.157,-0.108 0.135,-0.279 0.143,-0.251 0.015,-0.136 0.125,-0.479 0.069,-0.119 0.444,-0.314 0.112,0.172 0.219,0.042 0.196,-0.158 0.235,-0.499 0.163,-0.031 0.18,0.041 0.354,-0.063 0.628,-0.233 0.284,-0.006 z m 3.563,-1.02 -0.354,0.004 -0.128,-0.043 -0.153,-0.12 -0.172,-0.68 0.062,-0.241 0.07,-0.118 0.078,-0.092 0.187,-0.038 0.186,0.129 0.07,0.12 0.156,0.46 0.029,0.394 -0.031,0.225 z m -2.872,-2.394 0.101,0.641 0.099,0.396 0.007,0.135 -0.093,0.188 -0.463,0.25 -0.146,10e-4 -0.006,-0.061 0.104,-0.254 -0.09,-0.289 0.044,-0.22 -0.043,-0.04 -0.09,0.031 -0.332,0.349 -0.111,0.034 -0.012,-0.071 0.082,-0.286 0.01,-0.196 0.049,-0.12 0.09,-0.111 0.107,-0.083 0.087,-0.012 0.092,0.086 0.268,-0.24 0.246,-0.128 z m 0.446,0.58 -0.059,0.053 -0.142,-0.015 -0.053,-0.081 -0.029,-0.124 -0.003,-0.227 0.086,-0.163 0.364,-0.246 -0.165,-0.087 -0.006,-0.062 0.094,-0.205 0.391,-0.319 0.105,-0.058 0.104,0.009 -0.202,0.566 -0.485,0.959 z m 0.539,-2.659 -1.118,0.281 -0.385,-0.025 -0.035,-0.138 0.077,-0.092 0.319,-0.089 0.129,-0.677 -0.482,-0.313 -0.025,-0.087 0.038,-0.149 0.056,-0.067 0.292,-0.158 0.123,-0.035 0.1,0.021 0.206,0.183 0.232,0.383 0.311,0.061 0.211,0.162 -0.049,0.739 z m -2.329,-1.22 -0.159,0.028 -0.012,-0.072 0.277,-0.344 0.179,-0.057 0.063,0.034 -0.13,0.2 -0.218,0.211 z m -2.271,-1.945 -0.247,0.07 -0.091,-0.041 -0.016,-0.065 0.056,-0.177 0.189,-0.063 0.137,0.096 0.022,0.087 -0.05,0.093 z m 3.194,0.004 -0.083,0.066 -0.105,-0.013 -0.104,-0.085 -0.138,-0.242 0.31,-0.168 0.124,0.099 0.047,0.113 0.002,0.125 -0.053,0.105 z m -2.725,-0.776 -0.119,0.029 -0.155,-0.028 -0.096,-0.08 -0.097,-0.317 -0.018,-0.192 0.043,-0.358 -0.01,-0.429 0.32,-0.013 0.083,0.062 0.055,1.271 -0.006,0.055 z m 3.102,-2.02 -0.004,0.23 -0.05,0.271 0.064,0.287 0.015,0.205 0.118,0.065 0.072,0.094 0.526,0.105 0.489,-0.03 0.094,0.084 0.011,0.134 -0.077,0.147 -0.279,0.268 -0.332,0.433 -0.099,0.09 -0.107,0.004 -0.077,-0.039 -0.055,-0.77 -0.36,0.099 -0.29,-0.011 -0.159,-0.094 -0.111,-0.181 -0.225,-0.466 -0.654,-0.184 -0.185,-0.258 -0.056,-0.156 0.023,-0.086 0.136,-0.192 0.17,0.068 0.105,-0.042 0.064,-0.086 -0.001,-0.071 -0.089,-0.167 -0.004,-0.052 0.669,-0.212 0.059,-0.332 0.145,-0.027 0.166,0.109 0.227,0.345 0.061,0.418 z m -2.978,-0.93 0.317,0.294 -0.252,0.488 -0.387,-0.002 -0.545,-0.356 -0.002,-0.073 0.045,-0.107 0.082,-0.085 0.085,-0.02 0.135,0.058 0.188,-0.094 0.15,0.03 0.184,-0.133 z m 2.826,-3.599 -0.357,0.929 -0.14,0.023 -0.123,0.232 -0.38,0.255 0.332,0.005 0.093,0.085 0.002,0.183 -0.063,0.106 -0.429,0.422 -0.295,0.16 -0.318,0.44 -0.161,0.005 -0.159,0.279 -0.13,0.123 -0.074,0 -0.084,-0.062 -0.197,-0.273 0.358,-0.269 0.033,-0.151 0.245,-0.158 -0.021,-0.049 -0.389,-0.222 -0.153,-0.149 0.014,-0.078 0.187,-0.172 -0.088,-0.022 -0.06,-0.093 -0.108,-0.036 -0.033,-0.086 -0.02,-0.228 0.029,-0.233 0.113,-0.103 0.046,-0.11 0.046,-0.034 0.175,0.059 0.178,0.187 0.208,-0.072 0.241,0.035 0.005,-0.043 -0.177,-0.459 0.032,-0.094 0.096,-0.107 0.556,-0.329 0.693,-0.554 0.168,-0.087 0.051,0.076 0.07,0.287 -0.012,0.382 z m 8.669,-0.815 0.024,0.438 -0.033,0.133 -0.067,0.164 -0.212,0.305 -0.558,0.435 -1.021,0.996 -0.604,0.492 -0.083,0.236 -0.045,0.328 0.361,0.065 0.14,0.111 -0.086,0.166 -0.535,0.577 -0.157,0.52 0.41,-0.019 0.338,-0.1 0.673,-0.324 0.633,-0.241 0.304,-0.01 0.591,0.192 0.134,0.006 0.251,-0.089 0.254,-0.016 1.718,0.06 0.478,-0.113 0.316,0.135 0.264,0.336 0.251,0.619 -0.008,0.103 -0.152,0.281 -0.28,0.352 -0.241,0.484 -0.07,0.26 -0.047,0.285 -0.076,0.263 -0.479,1.23 -0.467,0.678 -0.208,0.48 -0.257,0.381 -0.248,0.24 -0.264,0.16 -0.764,0.17 -0.214,0.122 -0.255,0.209 -0.268,0.104 0.314,-0.013 0.311,-0.116 0.567,-0.042 0.652,0.4 -0.061,0.327 -0.262,0.258 -0.596,0.041 -0.557,0.573 -0.251,0.176 -0.266,0.087 -0.332,-0.026 -0.603,-0.153 -0.264,-0.16 0.238,0.261 0.271,0.136 1.569,0.321 0.095,-0.034 0.5,-0.338 0.667,-0.005 1.269,0.622 0.365,0.475 0.524,0.677 0.285,0.264 0.206,0.239 0.127,0.357 0.246,1.176 0.281,1.142 0.367,1.23 0.167,0.34 0.219,0.238 1.108,0.546 0.247,0.181 0.43,0.524 0.415,0.557 0.386,0.427 0.417,0.345 -0.202,0.179 -0.138,0.281 0.104,0.381 0.169,0.363 0.333,0.58 0.294,0.631 -0.108,-0.095 -0.114,-0.052 -0.156,0.016 -0.152,-0.03 -0.281,-0.198 -0.27,-0.243 -0.537,0.098 -0.298,-0.044 -0.259,0.007 0.491,0.14 0.537,0.01 1.184,1.057 0.4,0.624 0.238,0.821 -0.162,0.368 -0.252,0.238 -0.235,0.271 -0.221,0.307 0.657,0.449 0.142,-0.013 0.145,-0.063 0.14,-0.153 0.235,-0.373 0.121,-0.132 0.409,-0.048 0.343,0.029 0.341,0.083 0.301,-0.026 0.605,0.16 0.311,0.144 0.771,0.647 0.167,0.354 0.077,0.456 0.009,0.504 -0.13,0.459 -0.149,0.414 -0.092,0.533 -0.065,0.192 -0.091,0.15 -0.408,0.419 -0.271,0.172 -0.114,-0.075 -0.123,0.01 -0.013,0.101 0.129,0.213 0.001,0.257 -0.241,0.19 -0.245,0.081 -0.41,-0.101 -0.569,0.354 0.409,0.182 0.083,0.193 -0.102,0.339 -0.257,0.151 -0.286,0.067 -0.292,0.016 -0.242,0.083 -0.232,0.16 0.291,-0.084 0.202,0.074 0.127,0.284 0.115,0.082 0.57,0.121 0.352,-0.001 0.68,-0.069 0.327,0.001 0.116,0.052 0.002,0.235 -0.05,0.576 -0.09,0.119 -0.901,0.482 -0.185,0.336 -0.051,0.203 -0.527,-0.036 -0.247,0.215 -0.427,0.143 -0.33,0.151 -0.323,0.191 -0.266,0.057 -1.147,-0.227 -0.693,0.019 -0.939,0.198 -0.242,-0.033 -0.362,-0.189 -0.372,-0.128 -0.427,-0.056 -0.369,-0.176 0.23,0.337 -0.511,0.325 -0.236,0.064 -0.245,-0.01 -0.5,0.088 -0.465,-0.048 0.07,0.23 0.124,0.201 -0.101,0.087 -0.106,0.022 -0.882,-0.151 -0.125,0.028 -0.109,0.14 -0.321,-0.075 -0.312,-0.235 -0.331,-0.159 -0.348,-0.075 -0.276,0.026 -1.137,0.372 -0.227,0.372 -0.114,0.527 -0.164,0.467 -0.268,0.359 -0.319,0.047 -0.3,-0.249 -0.57,-0.274 -0.194,-0.186 -0.062,-0.011 -0.064,0.066 -0.224,0.084 -0.231,0.004 -0.357,0.074 -0.621,0.223 -0.251,0.151 -0.539,0.417 -0.11,0.115 -0.196,0.419 -0.299,0.074 -0.274,-0.268 -0.312,-0.094 -0.329,0.091 -0.199,0.143 -0.093,-0.116 -0.003,-0.238 0.24,-0.284 0.641,-0.215 0.563,-0.559 0.276,-0.341 0.11,-0.193 0.135,-0.123 0.176,-0.046 0.091,-0.213 0.781,-0.858 0.064,-0.197 0.039,-0.354 0.064,-0.341 0.636,-0.221 0.304,-0.719 0.084,-0.057 0.887,-0.132 0.658,0.011 0.654,0.141 0.335,0.013 0.336,-0.049 0.264,-0.195 0.451,-0.704 0.254,-0.311 0.291,-0.281 0.272,-0.321 0.441,-0.596 -0.298,0.206 -0.36,0.326 -0.209,0.189 -0.664,0.19 -0.286,0.194 -0.501,0.437 -0.096,0.036 -0.756,-0.105 -0.562,-0.567 -0.359,-0.232 -0.148,-0.027 -0.154,0.069 -0.328,0.071 -0.334,-0.012 0.171,-0.263 0.232,-0.147 -0.52,-0.102 -0.145,-0.08 -0.165,-0.185 -0.408,-0.031 -0.194,0.047 -0.328,0.244 -0.518,0.259 -0.625,-0.359 -0.122,-0.157 0.003,-0.305 -0.094,-0.242 -0.173,-0.085 0.221,-0.315 0.268,-0.21 0.588,-0.209 0.891,-0.497 0.5,-0.212 0.464,-0.366 0.192,-0.224 0.139,-0.307 0.138,-0.376 0.197,-0.307 -0.191,-0.073 -0.086,-0.231 0.023,-0.235 0.088,-0.209 -0.079,-0.262 -0.141,-0.274 0.008,-0.214 0.038,-0.229 -0.358,0.012 -0.357,0.072 -0.324,0.162 -0.314,0.22 -0.279,0.041 0.004,-0.176 0.121,-0.218 0.316,-0.312 0.338,-0.259 0.12,-0.197 0.095,-0.229 0.168,-0.184 0.442,-0.348 0.847,-0.392 0.126,-0.023 0.332,0.046 0.327,-0.06 0.286,-0.141 0.285,-0.03 0.642,0.407 -0.191,-0.63 0.283,-0.151 0.41,0.57 0.152,0.06 0.322,-0.083 -0.124,-0.096 -0.145,-0.006 -0.19,-0.086 -0.16,-0.183 -0.266,-0.582 0.015,-0.346 0.179,-0.36 0.198,-0.332 -0.166,-0.066 -0.133,-0.127 -0.038,-0.333 0.052,-0.295 0.356,-0.26 0.105,-0.396 0.044,-0.437 -0.059,-0.201 -0.354,0.032 -0.172,0.082 -0.154,0.129 -0.158,-0.008 -0.437,-0.484 -0.249,-0.367 -0.447,-0.778 -0.063,-0.467 0.357,-1.01 0.552,-0.649 0.65,-0.227 -0.126,-0.043 -0.991,-0.009 -0.327,0.08 -0.303,0.266 -0.171,0.082 -0.18,0.03 -0.164,0.132 -0.16,0.183 -0.167,0.118 -0.331,-0.031 -0.16,0.039 -0.115,-0.106 -0.097,-0.175 -0.126,-0.047 -0.141,0.054 -0.298,0.236 -0.302,0.139 -0.365,-0.149 -0.479,-0.278 -0.094,0.102 -0.106,0.258 -0.061,0.401 -0.34,-0.349 -0.289,-0.467 -0.098,-0.294 -0.007,-0.332 0.157,-0.129 0.171,0.118 0.254,-0.789 0.506,-1.032 0.179,-0.303 0.125,-0.397 -0.021,-0.26 -0.111,-0.22 -0.471,-0.5 0.006,-0.409 0.05,-0.462 0.128,-0.278 0.054,-0.053 0.625,0.007 -0.244,-0.144 -0.486,-0.419 0.009,-0.149 0.114,-0.389 -0.053,0.039 -0.104,0.18 -0.199,0.435 -0.121,0.101 -0.344,0.103 -0.063,0.213 -0.055,0.056 -0.171,0.024 -0.053,0.199 -0.038,0.013 -0.049,-0.214 -0.005,-0.356 0.068,-0.328 0.13,-0.257 0.504,-0.585 -0.245,0.181 -0.556,0.541 -0.284,0.355 -0.076,0.12 -0.023,0.101 10e-4,0.116 0.127,0.621 -0.037,0.287 -0.479,1.885 -0.091,0.188 -0.083,0.098 -0.079,0.023 -0.236,-0.036 -0.105,-0.141 0.001,-0.159 0.044,-0.239 0.199,-0.893 0.086,-0.249 0.128,-0.232 0.282,-0.406 -0.007,-0.027 -0.188,0.08 -0.08,-0.026 -0.058,-0.081 0.037,-1.211 0.153,-0.4 0.057,-0.583 0.132,-0.501 0.153,-0.366 0.117,-0.469 0.175,-0.209 0.047,-0.32 0.197,-0.347 0.152,-0.363 -0.082,0.036 -0.973,0.944 -0.248,0.171 -0.338,-0.046 -0.258,-0.106 -0.202,-0.223 -0.09,-0.429 -0.249,-0.011 -0.213,-0.074 0.002,-0.058 0.275,-0.234 0.441,-0.08 0.413,-0.376 -0.367,-0.254 0.031,-0.081 0.32,-0.217 0.407,-0.729 0.082,-0.673 -0.194,-0.317 -0.07,-0.208 -0.389,-0.232 -0.065,-0.297 0.045,-0.167 0.127,-0.163 0.191,-0.126 0.3,-0.122 -0.272,-0.13 -0.102,-0.154 -0.077,-0.223 -0.007,-0.129 0.141,-0.576 0.082,-0.238 0.161,-0.304 0.728,0.017 0.084,-0.134 0.083,-0.005 0.372,0.123 -0.055,-0.132 -0.609,-0.725 -0.055,-0.138 0.174,-0.392 0.012,-0.175 -0.025,-0.187 0.05,-0.143 0.193,-0.067 0.588,0.006 0.145,-0.066 -0.066,-0.19 -0.137,-0.25 -0.027,-0.21 0.032,-0.186 0.007,-0.375 0.027,-0.166 0.14,-0.249 0.115,-0.074 0.143,-0.043 0.323,0.083 0.123,0.1 0.142,0.237 0.104,-0.019 0.402,-0.258 0.121,-0.037 0.165,0.299 0.687,-0.238 0.923,-0.106 0.555,-0.157 0.584,-0.057 0.545,-0.179 0.578,0.082 0.02,0.104 -0.03,0.144 -0.142,0.389 z m 0.507,-1.217 -0.027,0.016 -0.103,-0.099 -0.168,-0.355 0.265,-0.071 0.125,0.044 -0.047,0.151 -0.045,0.314 z m -0.662,-0.284 -0.161,0.072 -0.159,-0.005 -0.248,-0.313 -0.094,-0.228 0.017,-0.151 0.104,-0.051 0.24,0.074 0.124,0.261 0.016,0.169 0.029,0.066 0.149,0.067 -0.017,0.039 z m 0.302,-1.277 -0.038,0.134 0.213,-0.003 0.309,0.114 0.187,0.014 0.156,0.142 -0.086,0.265 -0.093,0.075 -0.105,0.015 -0.368,-0.265 -0.482,0.11 -0.096,-0.034 -0.063,-0.073 -0.026,-0.091 0,-0.186 -0.026,-0.055 -0.175,0.176 -0.076,-0.021 -0.043,-0.084 -0.019,-0.174 0.019,-0.251 0.103,-0.359 0.173,-0.072 0.258,0.042 0.296,0.203 0.089,0.125 -0.002,0.1 -0.105,0.153 z m 1.427,-1.102 -0.317,0.006 0.164,-0.324 0.191,-0.082 0.361,0.036 -0.064,0.146 -0.335,0.218 z m -0.506,0.244 -0.241,0.136 -0.103,-0.112 -0.027,-0.352 -0.287,-0.151 -0.14,-0.094 -0.108,-0.178 0.027,-0.055 0.187,-0.073 0.32,0.323 0.131,0.26 0.237,0.077 0.03,0.04 -0.026,0.179 z m 3.988,-7.538 0.058,0.401 0.145,-0.104 0.219,0.384 0.112,0 0.184,-0.152 -0.037,0.357 -0.191,0.987 -0.054,0.167 -0.036,0.299 -0.038,0.059 -0.056,0.603 -0.129,0.198 -0.108,0.472 -0.044,0.046 -0.158,-0.181 0.158,-0.721 0.065,-0.42 -0.042,-0.218 -0.089,-0.197 -0.242,-0.006 -0.204,0.091 -0.043,-0.116 -0.006,-0.156 -0.049,-0.052 -0.271,0.011 -0.08,-0.043 -0.053,-0.144 -0.01,-0.115 0.245,-0.09 0.23,0.034 0.336,-0.229 -0.21,-0.769 -0.279,-0.073 -0.064,-0.075 0.054,-0.131 0.153,-0.071 0.235,-0.393 0.141,-0.062 0.175,0.011 -0.017,0.398 z m 0.746,0.135 -0.071,0.065 -0.274,-0.579 0.203,-0.665 0.246,0.021 0.039,0.174 -0.024,0.161 -0.125,0.014 -0.011,0.049 0.039,0.309 0.002,0.358 -0.024,0.093 z m 0.752,-1.706 0,0.066 -0.146,0.484 0.002,0.185 -0.235,-0.018 -0.037,-0.059 -0.044,-0.277 0.03,-0.295 0.033,-0.077 0.068,-0.031 0.074,0.058 0.117,-0.15 0.061,0.003 0.077,0.111 z\"\n\t\t\t\tid=\"GB\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 605.19975,333.9394 -0.068,0.134 -0.161,0.243 -0.128,0.124 -0.142,0.02 -0.141,0.057 -0.049,0.13 -0.006,0.168 0.024,0.121 0.036,0.045 0.144,0.04 0.142,0.353 0.223,0.178 0.348,0.202 0.309,0.231 0.151,0.212 -0.029,0.154 -0.101,0.318 -0.258,0.265 -0.215,0.067 -0.076,-0.025 -0.14,-0.082 -0.283,-0.205 -0.307,-0.162 -0.236,0.053 -0.155,0.061 -0.307,-0.072 -0.363,-0.14 -0.189,-0.138 -0.083,-0.102 0.056,-0.181 -0.823,-0.327 -0.397,-0.091 -0.179,0.099 -0.605,0.492 -0.072,0.05 -0.462,0.068 -10e-4,0.04 0.105,0.106 -0.02,0.033 -0.775,0.011 -0.258,0.064 -0.69,-0.083 -0.227,0.037 -0.194,0.077 -0.472,0.088 -0.326,0.103 -0.416,0.054 -0.429,0.005 -0.147,0.031 0.006,-0.071 -0.023,-0.109 -0.087,-0.079 -0.122,-0.05 -0.224,0.019 -0.207,-0.053 -0.147,-0.138 -0.034,-0.106 0.085,-0.086 -0.062,-0.071 -0.258,-0.17 -0.422,-0.425 -0.239,-0.095 -0.095,-0.267 -0.095,-0.057 -0.201,-0.025 -0.212,0.026 -0.046,0.03 -0.065,0.043 -0.166,0.333 -0.117,0.113 -0.286,-0.053 -0.237,-0.078 -0.193,-0.044 -0.375,-0.028 -0.426,-0.006 -0.287,0.237 -0.124,-0.031 -0.218,-0.116 -0.352,-0.096 -0.186,-0.075 0.538,-0.703 0.16,-0.419 0.005,-0.254 0.007,-0.32 -0.28,-0.666 -0.24,-0.948 -0.25,-0.992 -0.195,-0.298 -0.815,-0.345 -0.189,-0.392 -0.631,-0.507 -0.877,-0.221 -0.174,-0.094 -0.762,-0.64 -0.596,-0.413 0.128,-0.25 0.17,-0.264 0.184,-0.064 0.539,0.104 0.497,0.119 0.362,-0.085 0.431,0.208 0.394,0.238 0.396,0.168 0.772,0.159 0.288,0.219 0.336,0.219 1.317,0.111 0.106,-0.034 0.097,-0.032 0.442,-0.079 0.391,0.014 0.413,0.266 0.264,-0.016 0.282,-0.04 0.363,0.142 0.285,0.158 0.024,0.159 0.25,0.232 0.726,0.353 0.589,0.2 0.183,0.14 0.448,0.231 0.045,0.073 -0.009,0.095 -0.128,0.173 -0.032,0.153 0.06,0.089 0.186,0.084 0.368,0.019 0.133,-0.11 0.275,-0.079 0.273,-0.142 0.364,-0.189 0.495,-0.172 0.198,0 0.19,0.053 0.133,0.095 0.223,0.353 0.223,-0.494 0.057,-0.037 0.204,0.1 0.359,0.137 0.249,0.073 0.135,0.102 0.38,0.45 0.615,-0.023 0.26,0.069 0.14,0.074 0.062,0.087 -0.11,0.446 -0.152,0.464 0.013,0.111 0.246,0.175 0.336,0.184 0.18,0.148 0.123,0.133 0.265,0.101 0.313,0.062 0.148,0.008 0.155,0.112 0.403,0.209 z\"\n\t\t\t\tid=\"GE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 301.69175,429.1834 -0.187,0.011 0.074,-0.105 0.016,-0.18 0.098,-0.219 0.153,-0.147 0.15,0.039 -0.056,0.482 z\"\n\t\t\t\tid=\"GD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 329.93275,451.5904 -0.087,0.06 -0.234,0.132 -0.107,0.175 -0.063,0.169 -0.145,0.114 -0.139,0.145 -0.044,0.116 -0.129,0.093 -0.025,0.154 -0.327,0.544 -0.131,0.244 -0.188,0.26 -0.117,0.097 -0.159,0.154 -0.081,0.179 0,0.185 -0.111,0.221 -0.062,0.191 -0.105,0.111 -0.277,0.604 -0.014,0.208 -0.066,0.123 -0.197,0.288 -0.133,0.173 -0.233,0.13 -0.244,0.141 -0.092,0.154 -0.173,0.078 -0.126,0.005 -0.203,-0.056 -0.275,-0.027 -0.139,0.018 -0.063,-0.076 -0.094,-0.175 -0.137,-0.125 -0.088,0.043 -0.185,0.125 -0.217,0.074 -0.154,-0.025 -0.336,-0.086 -0.143,-0.044 -0.043,-0.074 -0.05,-0.055 -0.074,0.024 -0.099,0.093 -0.132,0.096 -0.196,0.128 -0.403,0.229 -0.113,0.082 -0.104,-0.045 -0.171,-0.045 -0.182,-0.002 -0.393,-0.149 -0.23,-0.106 -0.1,-0.133 -0.116,-0.057 -0.068,-0.037 0.032,-0.025 0.102,-0.019 0.091,-0.002 0.142,-0.203 0.234,-0.127 0.408,-0.703 0.172,-0.291 0.021,-0.159 0.048,-0.332 -0.091,-0.404 0.043,-0.113 0.35,-0.487 0.151,-0.266 0.009,-0.229 0.044,-0.165 -0.043,-0.086 -0.08,-0.025 -0.134,-0.214 -0.086,-0.177 -0.238,-0.182 -0.163,-0.186 -0.267,-0.428 0.024,-0.24 -0.076,-0.086 -0.082,-0.089 0.006,-0.108 -0.056,-0.27 -0.068,-0.252 -0.026,-0.16 0.067,-0.274 -0.04,-0.304 -0.087,-0.16 -0.024,-0.245 0.018,-0.218 0.074,-0.124 -0.015,-0.153 0.338,-0.487 0.257,-0.282 0.236,-0.198 0.199,-0.148 0.269,-0.74 0.195,-0.26 0.204,-0.038 1.102,0.613 0.517,0.057 1.041,0.331 0.377,0.424 0.873,0.706 0.459,0.222 0.004,0.185 -0.1,0.294 0.294,-0.257 0.454,0.407 0.129,0.199 0.141,0.368 -0.049,0.237 -0.063,0.122 -0.003,0.095 0.135,-0.131 0.076,-0.103 0.023,-0.247 0.11,-0.306 0.148,-0.006 0.118,0.183 0.244,0.793 0.092,0.162 0.035,0.252 -0.013,0.112 z\"\n\t\t\t\tid=\"GF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 467.84475,303.4184 -0.099,0.284 -0.257,-0.096 -0.02,-0.074 0.292,-0.165 0.06,0.001 z\"\n\t\t\t\tid=\"GG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 474.70275,431.7354 0.179,0.171 0.04,0.098 -0.065,0.369 -0.132,0.257 -0.083,0.242 0.012,0.12 0.08,0.121 0.273,0.189 0.139,0.123 0.166,0.186 0.19,0.182 0.325,0.237 0.138,0.043 -0.007,0.066 -0.045,0.091 -0.03,0.882 -0.025,0.228 -0.023,0.115 -0.031,0.329 -0.034,0.047 -0.061,-0.004 -0.057,0.013 -0.014,0.065 0.023,0.068 0.196,0.047 -0.043,0.05 -0.145,0.045 -0.068,0.099 0.03,0.113 -0.081,0.091 0.023,0.061 0.052,0.044 0.083,-0.016 0.229,-0.152 0.096,-0.016 0.119,0.031 0.219,0.232 0.009,0.113 -0.089,0.387 -0.087,0.299 -0.016,0.399 0.092,0.223 -0.013,0.123 -0.1,0.106 -0.226,0.154 0.017,0.105 0.103,0.196 0.191,0.218 0.373,0.27 0.196,0.351 0.005,0.143 -0.114,0.143 -0.135,0.124 -0.044,0.179 0.061,1.176 -0.295,0.51 -0.003,0.146 0.03,0.168 0.078,0.103 0.15,0.028 0.123,0.098 -0.043,0.358 -0.065,0.364 -0.011,0.177 -0.036,0.084 -0.117,0.068 -0.042,0.115 0.03,0.142 -0.022,0.105 0.062,0.136 0.135,0.169 0.216,0.42 0.082,0.033 0.038,0.089 -0.024,0.085 0.084,0.186 0.24,0.186 0.252,0.162 0.204,0.023 0.048,0.145 0.134,0.185 0.097,0.081 0.155,0.053 0.127,0.028 0.007,0.156 -0.23,0.106 -0.155,0.161 -0.118,0.245 -0.164,0.27 -0.564,0.14 -0.216,10e-4 -1.157,0.007 -1.083,0.53 -0.624,0.189 -0.384,0.298 -0.516,0.212 -0.36,0.258 -0.749,0.123 -1.227,0.404 -0.384,0.161 -0.388,0.281 -0.631,0.329 -0.249,-0.004 -0.494,-0.308 -0.372,-0.154 -0.91,-0.236 -0.679,-0.092 -0.328,-0.101 -0.09,-0.017 0.077,-0.111 0.19,-0.007 0.198,0.033 0.151,-0.084 0.221,-0.011 0.058,-0.089 0.018,-0.222 -0.002,-0.18 0.077,-0.08 0.02,-0.212 -0.109,-0.469 -0.077,-0.054 -0.396,-0.066 -0.03,-0.094 -0.071,-0.098 -0.076,-0.242 -0.086,-0.36 -0.139,-0.447 -0.267,-0.736 -0.066,-0.261 -0.045,-0.265 -0.01,-0.317 0.055,-0.118 -0.008,-0.164 -0.025,-0.164 0.188,-0.375 0.368,-0.46 0.077,-0.166 0.069,-0.115 0.01,-0.166 0.065,-0.536 0.176,-0.648 0.111,-0.245 0.075,-0.133 0.09,-0.216 0.023,-0.101 0.339,-0.255 0.156,-0.068 0.035,-0.101 -0.053,-0.109 0.023,-0.075 0.081,-0.037 0.125,-0.03 0.091,-0.105 -0.143,-0.801 -0.116,-0.799 -0.007,-0.068 -0.068,-0.11 -0.068,-0.33 -0.115,-0.194 -0.16,-0.056 0.001,-0.182 0.161,-0.309 0.042,-0.18 -0.077,-0.054 -0.011,-0.141 0.055,-0.227 -0.027,-0.14 -0.03,-0.148 -0.167,-0.351 -0.041,-0.249 0.086,-0.145 -0.003,-0.318 -0.09,-0.491 -0.015,-0.31 0.062,-0.129 -0.03,-0.124 -0.122,-0.117 -0.009,-0.113 0.104,-0.111 -0.013,-0.086 -0.129,-0.063 -0.115,-0.152 -0.103,-0.239 0.021,-0.385 0.193,-0.708 0.024,-0.059 0.219,0.004 0.001,0.03 0.681,-0.007 0.778,-0.008 0.929,-0.009 0.845,-0.008 0.037,-0.032 0.14,-0.039 0.853,0.072 0.534,-0.036 0.226,0.023 0.166,0.048 0.368,-0.029 0.197,0.018 0.148,0.176 0.06,-10e-4 0.083,-0.075 0.147,-0.086 0.15,-0.067 0.108,-0.139 0.065,-0.105 0.097,0.021 0.14,-0.006 0.093,-0.088 0.037,-0.136 z\"\n\t\t\t\tid=\"GH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 459.92475,354.5694 -0.009,0.047 0.005,0.034 -0.007,0.094 -0.019,-0.002 -0.032,-0.048 0.003,-0.065 0.031,-0.017 -0.021,-0.04 z\"\n\t\t\t\tid=\"GI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 390.83275,1.1244015 2.697,1.497 1.426,1.724 0.299,-0.057 1.933,0.657 1.835,0.817 3.051,2.11 0.428,0.687 -0.33,0.56 -0.758,0.384 -3.899,0.6819995 -7.073,0.833 -4.047,1.605 -1.287,0.082 -0.112,2.358 0.55,0.128 0.901,-0.315 3.17,-2.365 1.186,-0.392 2.213,0.198 2.873,0.892 1.159,-0.313 2.067,0.233 2.417,-0.682 2.855,-1.481 0.781,3.29 1.052,3.227 0.833,-0.354 0.713,0.18 0.241,1.046 0.39,0.441 0.808,-0.236 2.475,0.907 1.699,1.619 0.64,0.749 0.307,1.062 0.174,0.846 -0.267,1.035 -1.062,1.828 -1.343,1.661 -1.812,1.267 -2.088,0.789 -16.045,2.611 -0.543,0.615 -0.322,1.559 0.214,2.004 0.75,0.311 1.752,-1.123 3.031,-1.072 2.227,0.051 5.324,0.915 1.571,2.369 0.831,3.574 1.842,-0.796 0.394,-0.611 0.29,-1.065 0.231,-1.151 0.173,-1.236 0.193,-0.847 0.214,-0.451 0.459,-0.378 1.057,-0.457 2.772,-0.445 0.667,0.127 0.479,1.717 0.104,0.995 0.035,1.287 -0.015,1.574 -0.065,1.852 -0.236,1.812 -0.767,3.118 -0.617,1.673 -0.666,1.196 -1.275,2.696 -0.442,0.713 -1.402,3.075 -0.348,1.406 -0.021,1.021 0.241,0.194 0.407,-0.959 0.151,-0.688 0.262,-0.724 2.066,-1.923 0.443,-0.54 1.352,-2.326 0.863,-0.879 0.709,-0.927 0.376,-0.66 2.077,-4.757 1.083,-1.451 1.137,-0.003 0.201,2.449 1.363,0.375 0.592,-0.105 0.951,0.59 0.417,0.484 0.709,0.246 0.731,0.572 0.645,-0.615 0.188,-0.387 0.623,-1.765 0.842,-1.579 0.78,-1.993 0.259,-0.487 0.41,-0.443 0.426,-0.175 1.16,-0.947 0.294,-0.066 0.626,0.3 2.766,0.156 1.509,0.488 2.101,1.347 1.464,0.733 0.678,0.646 0.987,1.377 0.796,1.429 0.37,0.417 -0.014,0.45 -0.275,0.619 -1.972,2.146 -0.646,1.419 -1.866,2.642 -0.912,0.898 -0.991,0.351 -1.103,0.084 -0.716,0.374 -0.106,0.355 0.51,1.07 0.224,0.758 -0.032,0.671 -0.537,0.99 -0.203,0.223 -1.938,0.73 -0.978,1.232 -1.276,0.149 -0.902,-0.14 -1.24,1.315 0.485,1.062 0.444,0.458 1.381,0.958 0.013,0.548 -0.66,1.101 -0.901,1.289 -1.065,0.888 -0.4,0.132 -0.505,-0.223 -0.466,0.048 -1.026,0.408 -0.977,0.065 -1.745,-0.577 -0.944,-0.67 -0.497,-0.232 -0.626,0.064 -0.241,0.271 -0.987,1.593 -0.484,1.078 -0.311,1.096 -0.133,1.186 0.045,1.274 0.12,0.868 0.195,0.468 0.234,0.283 0.41,0.148 0.902,-0.14 0.354,0.08 0.108,0.254 0.195,0.802 -0.034,0.752 -0.164,1.052 -0.126,1.219 -0.09,1.382 0.048,0.75 0.365,0.164 0.171,-0.054 0.199,0.246 0.226,0.543 0.17,0.573 0.113,0.602 -0.059,0.495 -0.233,0.388 -0.525,0.437 -1.293,0.859 -0.131,0.261 -0.102,0.52 -0.072,0.778 -0.156,0.705 -0.24,0.63 -0.218,0.375 -0.419,0.166 -0.549,0.022 -0.617,0.36 -1.454,2.085 -0.022,0.23 0.544,0.663 -0.023,0.578 -0.671,2.459 -0.184,1.205 -0.146,1.638 -0.239,1.368999 -0.333,1.106 -0.328,1.268 -0.322,1.424 0.05,1.085 0.423,0.751 0.559,-0.607 0.695,-1.982 0.756,-0.864 0.816,0.271 0.711,0.396 0.908,0.779 0.76,0.484 0.656,0.635 0.271,0.533 0.272,0.749 0.002,0.471 -0.481,0.253 -0.159,-0.081 -1.204,-1.235 -0.586,-0.309 -0.778,0.372 -0.678,0.559 0.609,2.231 0.651,1.016 1.188,0.461 0.62,0.484 0.453,0.617 0.354,0.3 0.475,-0.132 0.639,-0.606 0.891,-0.033 0.402,0.301 0.291,0.56 0.131,1.042 -0.029,1.514 -0.097,1.131 -0.165,0.756 -0.321,1.008 -0.268,0.183 -0.377,-0.055 -0.351,-0.206 -0.325,-0.359 -0.492,-0.28 -0.989,-0.303 -1,-0.66 -0.56,-0.163 -1.185,0.084 -1.278,0.418 -0.05,0.547 -1.838,1.897 -0.377,-0.026 -0.51,-0.649 -0.714,-0.624 -0.418,0.004 -0.618,0.79 -0.154,0.305 0.008,0.287 0.455,0.677 0.185,0.155 0.235,0.13 0.817,0.162 0.355,0.177 0.334,2.076 0.53,1.27 0.227,0.258 0.2,0.093 0.65,-0.046 0.836,-0.427 0.292,0.342 0.616,0.417 0.36,0.104 0.438,-0.017 0.493,0.158 0.676,1.155 -0.266,1.444 0.423,1.147 0.676,1.175 0.16,0.428 0.065,0.772 0.015,0.507 0.051,0.463 0.086,0.416 0.089,0.814 0.093,1.206 -0.024,0.978 -0.143,0.754 -0.282,0.545 -0.42,0.338 -0.343,-0.089 -0.266,-0.516 -0.375,-0.552 -0.483,-0.588 -0.803,-0.069 -1.182,1.732 -0.527,0.086 -0.429,0.171 -0.457,0.749 -0.673,0.449 -0.594,-0.178 -1.043,-0.87 0.379,0.582 0.542,0.679 0.338,0.351 0.249,0.076 0.273,-0.081 0.394,-0.277 0.889,-0.771 0.235,-0.118 0.199,0.055 0.163,0.228 0.188,0.661 0.211,1.088 -0.027,0.921 -0.266,0.755 -0.228,0.483 -0.189,0.212 0,0.167 0.497,0.192 0.703,-0.979 0.223,-1.226 0.322,-1.425 0.569,-0.477 0.644,0.477 0.52,1.331 0.735,2.421 0.31,0.25 0.394,0.575 0.174,0.703 -0.046,0.829 -0.084,0.6 -0.122,0.372 -0.152,0.236 -0.274,0.15 -0.504,0.12 -1.126,-0.251 -0.586,-0.006 0.073,0.808 -1.186,0.692 -1.337,0.271 -1.266,-0.54 -1.051,-0.833 0.345,-1.171 0.197,-1.31 -0.508,-0.873 -0.111,-0.019 0.175,1.347 -0.147,0.513 -0.574,0.623 -0.405,0.287 -0.036,0.167 0.199,0.145 0.129,0.278 0.061,0.411 -0.068,0.414 -0.198,0.417 -0.108,0.349 -0.018,0.282 0.181,0.342 0.381,0.401 0.413,0.198 1.935,0.086 0.775,0.215 1.838,0.941 0.082,0.288 -0.311,1.669 -0.17,1.588 -0.357,0.289 -1.934,0.068 -0.623,0.246 -0.912,0.722 -0.876,0.862 -0.454,0.006 -1.798,-0.752 -0.689,-0.504 -1.48,-1.434 -1.114,-2.206 -0.511,0.921 -0.313,0.438 -0.323,0.227 -0.311,0.035 -0.3,-0.157 -0.34,-0.347 -0.571,-0.808 -0.681,-0.803 -0.477,-0.383 -0.018,0.109 0.282,0.473 0.412,0.544 1.043,1.589 0.367,0.399 -0.037,0.283 -0.658,0.251 -0.8,0.54 -0.391,0.396 -0.604,0.958 -0.21,0.148 -0.904,0.24 -0.298,-0.058 -0.668,-0.526 -1.007,-0.345 -0.593,-0.307 -0.824,-0.558 0.284,0.61 1.587,0.925 0.174,0.297 -0.325,0.552 -0.199,0.201 -0.378,0.042 -0.557,-0.115 -0.57,0.023 -0.583,0.162 -0.25,0.206 0.082,0.251 0.139,0.228 0.196,0.206 0.184,-0.002 0.444,-0.623 0.336,-0.044 0.889,0.154 0.899,-0.487 0.648,-0.211 0.486,-0.054 1.767,-0.749 0.367,-0.842 0.593,-0.339 1.318,-0.26 1.276,0.133 0.656,0.109 0.531,0.798 0.712,0.563 0.594,0.64 0.696,0.21 0.403,0.847 1.128,0.941 0.718,0.202 0.443,0.446 0.036,1.877 0.047,0.804 -0.191,2.206 -0.577,0.504 0.115,1.148 -0.151,0.922 -0.573,-0.349 -0.587,-0.607 -1.407,-0.946 -1.309,-0.611 -0.509,-0.556 -0.599,-0.432 -0.813,-1.768 -0.529,-2.225 -0.232,-1.111 -0.445,-0.062 -0.572,0.298 -0.5,0.315 -0.239,0.537 -1.698,0.736 -0.617,0.502 -0.352,-0.015 -1.268,0.754 0.508,0.36 0.237,0.045 0.513,-0.203 0.308,-0.26 1.156,-0.714 0.928,-0.123 0.337,-0.309 0.709,-0.442 0.481,-0.117 0.067,0.112 0.052,0.202 0.339,2.703 -0.142,0.712 -0.382,0.308 -0.817,0.503 -0.212,0.244 0.241,0.426 0.768,-0.401 0.498,-0.437 0.266,0.159 0.435,0.667 0.491,0.341 1.248,1.018 0.591,0.558 0.832,0.537 0.94,0.742 0.245,0.261 0.859,0.383 0.184,0.131 0.355,1.296 0.296,0.144 0.855,0.082 -0.15,0.5 -0.835,1.105 -0.432,0.352 -0.107,0.216 0.041,0.386 0.025,0.645 0.174,1.18 0.196,-1.092 0.137,-0.518 0.183,-0.155 0.18,-0.023 0.584,-0.492 0.587,0.264 0.152,1.239 0.075,1.148 -0.051,0.986 0.064,1.521 -0.022,0.511 0.139,0.441 0.144,1.816 0.144,0.542 -0.289,0.484 -0.893,0.21 -0.353,-0.238 -0.883,0.08 -10e-4,-0.426 -0.043,-0.49 -0.003,-0.343 -0.059,-0.311 -0.042,-1.798 -0.25,0.446 -0.015,0.365 -0.066,0.371 -0.153,1.927 -0.228,0.47 -0.707,-0.113 -0.696,0.069 -0.385,-0.071 -1.302,-0.875 -0.504,-0.796 -0.446,-1.203 -0.275,-1.131 -0.104,-1.059 -0.313,-0.866 -0.52,-0.671 -0.614,-0.545 -0.708,-0.419 -0.622,-0.542 -0.536,-0.666 -0.589,-0.52 -0.644,-0.372 -0.916,-0.16 -1.339,0.059 -0.904,-0.42 -0.215,0.036 -0.211,0.217 0.155,0.617 1.038,0.282 0.8,0.064 1.061,-0.04 0.649,0.158 0.238,0.355 0.164,0.63 0.09,0.902 -0.21,0.712 -0.763,0.787 -0.402,0.368 -1.175,0.704 -0.398,0.156 -0.98,0.048 -0.753,-0.067 -0.991,-0.35 -0.562,-0.071 -1.163,-0.047 -0.267,0.117 0.3,0.375 0.493,0.212 0.347,0.252 0.036,0.477 -0.125,0.705 -0.129,0.491 -0.213,0.368 -0.763,0.694 -0.316,0.219 -1.422,0.723 -0.099,0.139 0.333,-0.019 0.899,-0.256 0.259,0.007 1.476,0.625 1.176,-0.037 2.382,-0.577 0.196,0.011 0.156,0.091 0.158,0.216 0.16,0.342 -0.192,0.331 -0.544,0.318 -0.847,0.313 -0.367,0.211 -0.351,0.32 -0.653,0.767 -0.191,0.792 0.687,0.3 0.309,-0.38 0.364,-0.847 0.328,-0.499 0.773,-0.339 0.944,0.172 0.729,-0.201 1.49,-0.843 0.267,-0.052 2.192,0.483 1.987,0.945 1.048,0.346 1.387,0.204 2.494,-0.093 0.219,0.148 -0.081,0.333 -0.145,0.281 -0.416,0.391 -0.505,0.258 -0.312,0.073 -0.266,0.184 -0.597,0.18 -0.153,0.146 0.207,0.636 -0.098,0.098 -0.526,0.011 -0.886,0.413 -0.727,-0.029 -0.152,0.06 0.138,0.153 0.146,0.295 0.155,0.436 -0.085,0.311 -0.326,0.185 -0.247,0.06 -0.853,-0.259 -0.138,0.039 0.125,0.187 0.071,0.284 0.017,0.382 -0.209,0.319 -0.436,0.257 -0.813,0.706 -0.354,0.201 -0.746,0.166 -0.157,0.092 0.303,0.538 -0.034,0.215 -0.504,0.579 -0.763,0.36 -0.104,0.194 -0.07,0.52 -0.056,0.207 -0.202,0.297 -0.724,0.564 -0.513,0.28 -0.254,0.229 -0.315,0.382 -0.397,0.202 -0.479,0.023 -0.454,0.143 -0.746,0.405 -0.52,0.134 -1.642,0.696 -0.772,0.111 -0.668,0.248 -1.375,0.661 -0.655,0.212 -0.454,0.251 -0.496,0.072 -0.807,-0.163 -0.435,-0.006 -0.268,0.099 -0.245,0.202 -0.405,0.552 -0.344,0.042 -1.128,-0.437 0.023,0.198 0.298,0.473 -0.014,0.334 -0.671,0.339 -0.361,0.086 -0.533,-0.139 -0.705,-0.366 -0.905,-0.766 -1.109,-1.175 -0.534,-0.399 0.039,0.379 0.124,0.37 0.209,0.359 0.042,0.26 -0.124,0.161 -0.163,0.081 -0.203,0.001 -0.035,0.091 0.331,0.558 0.261,0.571 -0.024,0.54 -0.31,0.51 -0.266,0.298 -0.222,0.088 -1.317,1.262 -0.367,0.159 -0.167,0.155 -0.137,0.232 -0.383,1.035 -0.155,0.315 -0.308,0.409 -0.129,0.071 -0.037,0.167 0.056,0.262 -0.085,0.436 -0.225,0.608 -0.767,1.668 -0.618,1.542 -0.271,0.502 -0.198,0.212 -0.125,-0.076 -0.307,0.039 -0.149,0.269 -0.135,0.485 -0.147,0.369 -0.159,0.253 -1.24,1.088 -0.319,0.201 -0.287,-0.127 -0.339,0.049 -0.703,-0.573 -0.122,-0.211 -0.454,-0.473 0.015,0.247 0.076,0.136 0.063,0.199 0.159,0.244 0.352,1.277 -0.278,0.261 -0.249,0.297 -0.635,0.501 -0.687,0.836 -0.253,0.233 -0.057,-0.681 0.029,-0.204 -0.388,-0.331 0.012,0.238 -0.04,0.222 -0.281,0.882 -0.078,0.152 -0.139,-0.034 -0.302,0.162 -0.309,-0.077 -0.263,-0.4 -0.104,-0.208 -0.478,0.571 -0.232,-0.015 -0.039,0.478 -0.225,0.435 -0.297,0.188 -0.415,-0.015 -0.254,0.257 -0.563,-0.275 -0.13,-0.517 0.446,-0.711 0.126,-0.294 -0.082,-0.363 0.108,-0.47 0.852,-1.499 0.577,-0.764 -0.033,-0.137 -0.784,-0.167 -0.685,-0.263 -0.667,-0.09 -0.295,0.089 0.47,0.44 0.665,0.426 -0.327,0.406 -0.282,0.43 -0.292,1.165 -0.187,0.475 -0.725,-0.545 -0.343,-0.185 0.218,0.605 0.635,0.572 0.041,0.188 -0.004,0.677 -1.216,0.595 -1.269,0.09 -0.911,0.168 -1.537,0.204 -0.597,0 -0.051,0.228 1.503,1.036 0.219,0.189 -0.209,0.355 -0.311,0.22 -0.488,0.757 -0.255,0.26 -0.632,0.357 -1.163,-0.398 -0.598,0.178 -0.572,-0.125 -0.012,0.435 0.171,0.317 0.173,0.785 0.384,-0.061 0.488,-0.247 0.377,0.593 0.248,1 0.433,0.505 0.192,0.39 0.078,0.367 -0.27,0.365 -0.559,0.514 -0.62,0.096 0.034,0.406 -0.268,0.291 -0.569,-0.085 -0.266,-0.204 -0.276,-0.096 -1.132,-0.109 1.14,0.78 0.405,0.362 0.18,-0.214 0.395,-0.052 0.583,0.198 -0.097,1.306 0.255,1.051 0.031,0.235 -0.621,0.626 -0.01,0.583 -0.37,0.162 -0.398,-0.037 -0.021,0.637 -0.27,0.396 0.048,0.248 0.077,0.221 -0.246,0.402 -0.222,0.488 -0.318,0.426 -0.168,-0.044 -0.505,0.028 -0.607,-0.036 -0.492,-0.554 -0.204,-0.185 -0.23,-0.121 0.088,0.357 0.138,0.214 0.454,0.4 0.836,0.493 -0.026,0.349 -0.223,0.151 -0.521,0.945 -0.185,0.021 -0.234,0.243 -0.722,-0.082 -0.303,-0.097 -0.891,0.062 -0.303,-0.083 -0.26,0.04 0.242,0.266 0.51,0.239 0.58,0.24 0.882,0.181 -0.032,0.342 -0.221,0.28 0.127,0.417 -0.099,0.298 -0.042,0.354 -0.206,0.82 0.24,0.56 0.261,0.273 -0.03,0.359 0.123,0.572 -0.392,0.509 -0.325,-0.019 -0.463,0.114 -0.154,0.224 0.734,0.211 -0.067,0.379 -0.2,0.474 -0.21,1.021 -0.427,1.738 -0.2,1.71 -0.917,1.394 -0.325,0.039 -0.082,0.055 -0.447,-0.071 -0.702,-0.321 -0.543,-0.106 -0.367,-0.004 -0.047,0.16 0.304,0.258 0.465,0.108 0.372,0.171 0.667,0.159 0.232,0.308 0.159,0.328 -0.023,0.18 -10e-4,0.212 0.119,1.139 -0.314,0.392 -0.24,0.354 -0.833,-0.049 -0.145,-0.124 -0.804,-0.373 0.049,0.175 0.582,0.506 0.203,0.252 -0.136,0.052 -0.235,0.019 -0.327,0.17 -0.591,-0.092 0.033,-0.255 0.112,-0.263 -0.27,0.045 -0.301,0.133 -0.175,-0.049 -0.146,0.015 -0.083,-0.132 -0.114,-0.515 0.136,-0.259 0.487,-0.672 0.155,-0.362 -0.135,-0.165 -0.348,0.388 -0.359,0.615 -0.16,0.371 -0.225,0.072 -0.559,-0.187 -1.591,-0.861 0.047,-0.525 -0.015,-0.436 0.464,-0.055 0.337,-0.19 0.302,-0.233 0.34,-0.425 0.312,-0.704 -0.04,-0.054 -0.915,0.898 -0.563,0.299 -0.272,0.055 -0.136,-0.132 -0.453,-0.288 -0.294,-0.131 -0.671,-0.214 -0.119,-0.115 -0.197,-0.092 -0.268,-0.92 0.346,-1.124 0.238,-0.328 0.151,-0.38 0.085,-0.505 -0.059,-0.216 -0.202,0.074 -0.094,0.173 0.015,0.271 -0.116,0.188 -0.8,0.431 -0.802,0.349 -0.38,0.33 -0.247,0.257 -0.193,0.252 -0.295,-0.022 -0.407,0.051 -0.279,0.164 -0.408,-0.101 -0.266,-0.243 -0.321,-0.028 -0.36,0.117 -0.249,-0.01 0.021,0.165 0.166,0.405 -0.275,0.027 -0.522,0.016 -0.263,-0.118 -0.206,-0.154 -0.171,-0.215 0.103,-0.282 0.84,-0.518 0.381,-0.301 -0.249,-0.103 -0.806,0.093 -0.134,-0.078 -0.54,0.047 0.023,-0.775 -0.131,-0.193 -0.009,-0.091 -0.187,-0.217 -0.177,-0.054 -0.11,-0.078 -0.912,-0.175 -0.119,-0.435 -0.063,-0.449 -0.174,-0.559 -0.437,-0.146 -0.236,-0.243 0.188,-0.249 0.082,-0.316 -0.202,-0.145 -0.129,-0.223 0.019,-0.145 -0.164,-0.393 -0.049,-0.307 0.188,-0.289 0.516,-0.327 0.167,-0.132 0.086,-0.143 0.592,-0.241 -0.504,-0.17 -0.315,-0.026 -0.23,0.08 -0.212,0.32 -0.198,0.212 -0.772,0.069 -0.114,-0.11 -0.054,-0.452 0.044,-0.349 0.321,-0.492 -0.37,-0.244 -0.339,-0.08 -0.385,-0.229 -0.356,-0.242 -0.306,-0.282 -0.298,-0.333 -0.095,-0.042 0.107,-0.349 0.061,-0.288 0.009,-0.62 -0.12,-0.258 0.267,-0.532 0.359,-0.583 0.794,-0.869 -0.84,0.419 -0.69,0.911 -0.146,0.042 -0.051,-0.165 -0.262,-0.591 -0.197,-0.162 -0.088,-0.178 -0.393,-0.317 -0.17,-0.244 -0.242,-0.472 -0.344,-0.564 -0.489,-1.117 -0.79,-1.295 -0.195,-0.732 0.245,-0.933 -0.271,-0.646 0.75,-0.3 1.073,-0.337 0.557,-0.281 0.321,-0.084 0.682,-0.052 0.228,-0.283 -0.379,0.072 -0.255,-0.037 -0.016,-0.132 0.094,-0.235 0.061,-0.304 -0.13,0.055 -0.667,0.523 -0.986,0.414 -0.77,0.23 -0.125,-0.012 -0.27,0.139 -0.155,0.04 -0.12,-0.04 -0.272,-0.396 -0.073,-0.259 0.489,-0.705 0.365,-0.966 0.483,-0.635 0.341,-0.08 0.571,0.034 0.201,0.056 -0.064,-0.377 0.024,-0.183 0.463,-0.22 0.54,-0.098 0.384,0.069 0.242,0.444 0.311,0.816 0.419,0.275 -0.019,-0.391 -0.217,-0.505 -0.081,-0.778 -0.276,-0.329 -0.221,-0.162 -0.612,0.079 -0.368,-0.572 -0.083,-0.21 -0.009,-0.28 -0.368,-0.824 -0.118,-0.414 -0.195,-0.552 -0.104,-0.03 0.132,0.695 0.172,0.487 0.246,1.066 0.122,0.428 -0.165,0.338 -0.311,0.334 -0.275,0.199 -0.65,0.238 0.14,-0.52 0.089,-0.512 -0.327,0.182 -0.304,0.372 -0.105,0.514 -0.195,0.465 -0.579,1.137 -0.228,0.628 -0.216,0.309 -0.246,0.085 -0.213,-0.245 -0.181,-0.577 -0.085,-0.453 -0.01,-1.18 0.023,-0.553 -0.099,-0.748 -0.313,-1.753 -0.066,-0.629 -0.529,-0.335 -0.008,-0.108 -0.138,-0.36 -0.107,-0.361 0.088,-0.132 0.126,-0.095 0.791,-0.534 0.586,-0.6 0.701,-0.945 0.286,-0.294 1.028,-0.227 0.456,-0.031 -0.004,-0.169 -0.153,-0.067 -0.694,0.044 -0.925,0.38 -0.159,0.137 -0.405,0.589 -0.312,0.321 -0.878,0.731 -0.57,0 -0.588,-0.876 -0.657,0.168 -0.443,-0.058 -0.129,-0.132 -0.098,-1.204 0.357,-1.415 -0.386,-0.014 -0.08,-0.057 -0.204,-0.324 -0.133,-0.097 0.099,-0.172 0.951,-0.676 1.423,-1.334 0.612,-0.527 0.378,-0.228 0.286,-0.261 0.348,-0.568 0.115,-0.249 0.194,-0.201 0.409,-0.227 0.447,-0.344 0.725,-0.776 0.095,-0.288 -0.158,-0.067 -0.339,0.266 -0.689,0.71 -0.492,0.398 -1.679,1.771 -0.715,0.64 -0.389,0.408 -0.302,0.388 -0.319,0.276 -0.338,0.165 -0.72,0.123 -0.354,0.143 -0.213,-0.104 -0.094,-0.828 0.072,-0.492 -0.034,-0.487 0.18,-0.7 0.267,-0.497 0.112,-0.271 0.047,-0.186 0.55,-0.517 0.303,-0.229 0.214,-0.52 1.221,-0.185 0.315,0.019 0.167,-0.07 0.125,-0.151 -0.121,-0.117 -0.366,-0.083 -0.973,0.016 -0.899,-0.089 -0.41,-0.09 -0.198,0.052 -0.327,-0.152 -0.357,-0.291 -0.554,-1.072 0.222,-1.386 0.019,-0.666 0.704,-0.585 0.376,-0.194 0.534,-0.442 0.713,-0.754 0.851,-0.462 0.434,-0.086 0.36,0.066 1.332,0.655 0.685,0.128 0.602,-0.157 0.755,0.229 1.336,0.938 0.258,-0.139 -0.075,-0.227 -1.49,-0.993 0.008,-0.298 0.381,-0.078 0.407,-0.29 -0.229,-0.172 -0.99,0.149 -0.286,0.238 -0.96,0.123 -0.501,-0.202 -0.45,-0.101 -0.675,-0.432 -0.565,0.141 -0.357,0.17 -0.631,0.161 -0.228,0.115 -1.233,1.352 -0.519,0.28 -0.369,-0.092 0.259,-0.878 0.075,-0.348 0,-0.379 0.107,-0.521 0.632,-0.997 0.397,-1.098 0.168,-0.685 0.311,-0.077 0.424,0.101 1.274,0.444 1.06,0.528 0.782,0.141 0.514,0.015 0.22,-0.168 0.174,-0.293 0.067,-0.203 0.05,-0.416 0.059,-0.148 0.172,-0.182 0.351,-0.635 0.107,-0.453 -0.115,-0.265 -0.234,0.027 -0.457,0.174 -0.062,0.072 0.008,0.142 -0.441,0.701 -0.481,0.161 -1.107,0.234 -0.505,0.017 -0.898,-0.325 -0.136,-0.127 -0.093,-0.239 -1.102,0.054 -0.329,0.072 -0.262,-0.031 0.128,-0.416 0.348,-0.463 0.488,-1.515 0.409,-0.39 0.812,-0.364 0.847,0.059 1.465,1.177 0.442,0.102 0.405,-0.095 0.969,-0.393 0.178,-0.16 0.349,-0.489 0.407,-0.84 -0.02,-0.199 -0.625,0.47 -0.333,0.126 -0.282,0 0.262,-1.542 0.102,-1.19 0.098,-0.297 0.821,0.089 1.122,-0.162 0.267,-0.262 -0.004,-0.116 -0.45,-0.159 -0.217,-0.335 -0.377,0.106 -0.505,0.223 -0.634,-0.025 0.053,-0.517 0.465,-1.089 0.048,-0.499 0.181,-1.001 0.019,-0.516 0.235,-0.503 0.733,-0.359 0.308,-0.215 0.017,-0.236 -0.439,-0.901 0.111,-0.25 0.345,-0.228 0.128,-0.167 -0.088,-0.104 -0.317,-0.1 -0.488,0.2 -0.54,0.096 -0.478,-0.301 -0.374,-0.145 -0.236,0.045 -0.643,0.515 -0.225,0.017 -0.278,-0.143 -1.842,-0.446 -0.229,-0.158 -0.66,-0.775 -0.544,-0.514 -0.724,-0.563 -0.939,-0.429 -1.153,-0.294 -0.69,-0.277 -0.34,-0.392 -0.583,-0.865 -0.443,-0.724 -0.083,-0.359 0.26,-0.445 0.265,-0.32 0.499,-0.263 0.861,0.087 0.462,0.117 0.509,0.251 0.385,0.047 0.799,-0.071 0.813,0.16 0.481,0.176 0.632,0.366 1.744,1.549 0.728,0.535 0.316,0.064 1.305,0.57 0.209,-0.011 0.534,-0.267 0.053,-0.173 -0.18,-0.171 -0.576,-0.133 -0.676,-0.632 -0.419,-0.503 -0.048,-0.835 0.055,-0.47 0.105,-0.214 0.074,-0.723 -0.392,-0.431 -0.273,-0.136 -0.727,-0.631 -0.061,-0.157 0.349,-0.074 0.342,0.043 0.733,0.32 0.384,0.044 0.28,-0.125 0.032,-0.129 -0.446,-0.364 -0.558,-0.653 -1.166,-0.097 -0.756,0.074 -0.483,-0.225 -0.514,-0.366 -0.331,-0.094 -0.675,0.23 -0.341,0.029 -0.311,-0.081 -0.307,-1.16 0.082,-0.349 0.241,-0.151 0.182,-0.377 0.127,-0.395 0.4,-0.387 2.195,-0.865 0.554,-0.646 -0.024,-0.1 -0.374,0.12 -0.478,0.292 -0.319,0.06 -1.292,-0.377 -0.202,0.086 -0.523,0.541 -0.71,0.585 -0.327,-0.036 -0.438,-0.346 -0.069,-0.247 -0.032,-0.297 0.481,-0.408 0.154,-0.216 0.311,-0.583 -0.016,-0.289 -0.531,0.159 -0.069,-0.269 0.008,-0.461 -0.051,-0.585 -0.13,-0.58 -0.436,-0.895 -0.181,-0.23 -0.149,-0.333 -0.329,-1.221 0.095,-0.307 0.292,-0.233 0.056,-0.107 -0.697,0.193 -0.076,0.212 0.131,0.313 0.094,0.416 0.056,0.518 0.097,0.452 0.252,0.494 0.202,0.259 0.329,0.684 0.144,0.749 -0.042,0.393 -0.255,0.399 -0.412,0.429 -0.125,0.355 -0.056,0.353 -0.321,0.326 -0.197,-0.122 -0.156,-0.019 0.184,0.58 0.119,0.592 -0.143,0.591 -0.381,0.357 -0.207,0.011 -0.407,0.289 -1.042,0.151 -0.363,-0.071 -0.665,-0.293 -0.789,-0.16 -0.313,-0.396 -0.41,-0.723 -0.207,-0.65 -0.004,-0.577 0.111,-0.421 0.226,-0.266 0.272,-1.707 0.384,-1.391 0.967,-1.446 0.276,-0.526 0.091,-0.283 -0.001,-0.216 -0.156,-0.137 -1.189,1.795 -0.733,0.19 -0.219,-0.402 0.066,-0.716 0.131,-0.167 0.593,0.068 0.23,-0.4 -0.371,-0.606 -0.395,-0.16 -0.092,-0.153 0.406,-0.464 0.94,0.034 0.212,-0.325 0.34,-0.351 0.378,-0.654 0.141,-0.552 0.032,-0.475 -0.082,-0.384 -0.008,-0.386 0.064,-0.388 -0.099,-0.43 -0.261,-0.472 -0.581,-0.462 -0.171,0.522 -0.181,0.214 -0.254,0.048 -0.234,-0.22 -0.245,-0.079 -0.24,-0.196 -0.25,-0.063 -0.097,-0.158 -0.063,-0.444 -0.005,-0.566 0.282,-0.266 0.393,-0.209 0.263,-0.397 0.173,-0.577 0.025,-0.633 -0.123,-0.688 -0.319,-0.621 -0.591,0.604 -0.232,0.148 -0.053,-0.432 -0.082,-0.32 -0.248,-0.436 -0.327,-0.318 -0.314,-0.212 -0.014,-0.323 0.074,-0.365 0.14,-0.426 0.181,-0.893 0.199,0.08 0.166,-0.082 -0.096,-0.741 -0.16,-0.625 -0.188,-0.357 -0.007,-0.155 -0.043,-0.182 -0.145,-0.441 -0.163,-0.324 -0.284,-0.921 -0.205,-0.353 -0.263,-0.183 -0.283,-0.01 -0.455,0.244 -0.839,0.28 -0.665,0.133 -0.111,-0.073 0.333,-0.351 0.49,-0.366 0.648,-0.249 0.189,-0.612 -0.07,-0.531 0.027,-0.505 -0.178,-0.533 0.173,-0.296 0.59,-0.299 0.268,-0.046 0.266,-0.381 -0.748,-0.923 -0.784,-0.607 -0.196,-0.248 -0.172,-0.408 -0.148,-0.57 -0.242,-0.572 -0.334,-0.576 -0.488,-0.557 -1.258,-1.024 -0.432,-0.71 -0.398,-1.092 -0.199,-0.468 -0.207,-0.347 -0.876,-0.816 -0.106,-0.362 0.905,-0.968 0.088,-0.388 -0.37,-1.185 -0.378,-0.872 -0.412,-0.311 -0.613,-0.16 -0.562,-0.39 -0.511,-0.62 -0.51,-0.455 -0.764,-0.434 -1.278,-1.121 -1.97,-1.208 -0.88,-0.71 -0.524,-0.259 -0.69,-0.066 -1.335,-0.667 -1.122,-0.214 -0.692,0.098 -0.226,-0.111 -0.512,-0.681 -0.801,-0.392 -0.414,0.149 -0.514,0.73 -0.62,0.717 -0.33,0.097 -0.49,-0.655 -0.247,-0.459 -0.236,-0.157 -0.225,0.148 -0.438,0.603 -0.417,0.434 -0.617,0.514 -0.493,0.246 -0.633,0.06 -0.159,0.186 -0.244,0.008 -0.328,-0.168 -0.308,-0.334 -0.287,-0.501 -0.253,-0.271 -0.22,-0.04 -0.505,0.26 -0.639,0.762 -0.292,0.183 -0.245,-0.079 -0.3,-0.237 -0.601,-0.608 -0.333,0.059 -0.242,0.213 0.067,0.504 0.563,1.19 0.503,0.843 -0.425,0.099 -3.712,-1.141 -0.473,-0.276 -0.683,-0.695 -0.568,-0.428 -0.967,-1.111 -0.745,-0.604 -0.247,-0.474 -0.065,-0.327 0.237,-0.443 1.5,-1.503 0.573,-0.305 1.166,-0.365 0.275,-0.229 0.092,-0.182 -0.306,-0.329 -1.527,0.118 -1.36,-0.22 -1.184,-0.607 -0.206,-0.202 -0.201,-0.373 -0.195,-0.544 0.044,-0.611 0.284,-0.679 0.167,-0.468 0.049,-0.254 -1.488,1.672 -0.608,0.582 -0.482,-0.178 -0.338,-0.275 -0.166,-0.307 0.006,-0.339 0.055,-0.248 0.103,-0.155 -0.787,-0.694 -0.354,-0.547 -0.038,-0.566 0.279,-0.586 0.273,-0.426 0.267,-0.267 0.728,-0.232 2.658,-0.445 1.903,0.427 0.648,-1.419 0.438,-0.455 1.28,-0.475 1.97,-0.066 1.391,0.263 0.652,0.335 0.888,0.737 0.051,-0.222 -0.214,-0.666 -0.015,-0.555 0.359,-0.969 0.165,-0.611 -0.112,-0.639 -0.39,-0.667 -0.69,-0.86 -0.372,-0.071 -0.413,0.208 -0.496,0.477 -1.031,1.196 -0.487,0.249 -0.812,0.063 -0.449,-0.15 -0.434,-0.179 -0.678,-0.633 -0.247,-0.119 -0.3,0.278 -0.352,0.673 -0.339,0.47 -0.327,0.268 -0.305,0.116 -0.426,-0.055 -1.755,-1.044 -0.396,-0.467 -0.023,-0.71 -0.539,-0.691 -0.609,-0.121 -0.074,-0.232 0.772,-1.073 0.576,-0.44 -0.092,-0.133 -0.836,-0.023 -0.564,0.573 -0.323,0.097 -0.743,0.016 -0.78,-0.287 -0.332,-0.251 -0.344,-0.578 -0.386,-0.326 -1.165,-0.496 -0.263,-0.271 -0.249,-0.451 -0.952,-1.283 -0.576,-0.948999 -0.075,-0.541 0.665,-1.167 0.029,-0.271 -0.285,-0.507 -0.119,-0.375 0.098,-0.519 0.582,-1.155 0.216,-0.314 1.043,-0.683 1.045,-0.998 0.38,-0.225 0.339,-0.052 1.373,0.06 0.425,-0.247 0.361,-0.49 0.593,-0.498 1.237,-0.759 2.75,-1.154 0.179,-0.137 0.016,-0.22 -0.247,-0.599 -0.052,-0.29 0.563,-0.54 1.271,-0.855 0.869,-0.413 0.559,-0.03 0.451,-0.185 0.633,-0.542 0.358,-0.096 2.163,-0.213 0.957,0.296 0.47,-0.006 0.302,-0.21 0.399,-0.617 0.746,-1.542 0.393,-0.965 0.371,-1.479 0.479,-2.338 0.358,-2.313 0.237,-2.289 0.185,-1.41 0.131,-0.508 0.449,-0.646 0.468,-0.506 0.804,-0.449 -0.073,-0.21 -0.341,-0.352 -0.317,-0.135 -0.293,0.081 -0.535,0.531 -0.693,0.359 -0.673,-0.056 -0.485,0.133 -0.445,0.484 -0.721,0.388 -0.481,-0.088 -0.869,-0.695 -0.438,-0.13 -1.111,0.066 -0.325,-0.259 -0.284,-0.507 -0.226,-0.71 -0.169,-0.918 0.023,-0.959 0.4,-1.746 0.153,-0.479 1.083,-1.977 0.667,-0.933 0.664,-0.702 0.483,-0.414 0.456,-0.186 0.438,-0.438 0.805,-1.418 0.831,-1.225 1.034,-2.301 0.5,-0.609 1.751,-1.016 0.476,-0.016 0.404,0.253 0.383,0.529 1.075,2.288 0.084,-0.07 -0.188,-0.863 -0.392,-2.609 0.063,-1.085 0.615,-1.168 0.252,-0.209 0.649,0.078 1.047,0.362 0.7,0.396 0.531,0.642 0.631,0.397 0.327,-0.02 0.233,-0.306 0.334,-1.002 0.435,-1.713 0.174,-2.136 -0.086,-2.576 -0.126,-1.908 -0.168,-1.214 0.092,-1.019 0.527,-1.231 0.483,-0.905 1.152,-1.288 0.935,-0.344 0.554,0.087 0.729,0.606 1.011,0.371 0.913,1.165 1.479,2.645 0.981,1.312 0.813,0.586 0.801,0.993 1.184,2.084 0.62,0.886 0.368,0.32 0.325,0.051 -0.121,-0.588 -0.566,-1.235 -0.866,-1.371 -1.921,-2.493 -1.059,-1.784 -0.949,-2.058 -0.698,-1.237 -1.266,-1.236 0.017,-0.495 1.528,-1.754 2.808,-1.542 3.165,-1.216 1.059,0.125 1.861,-0.511 0.175,-0.775 0.4,-0.349 1.733,-1.088 0.497,0.015 0.763,0.517 0.813,0.981 0.376,0.883 0.511,1.505 0.25,2.096 -0.038,6.444 0.014,1.19 0.098,0.457 0.353,-0.681 0.421,-1.271 0.379,-0.905 0.291,-1.407 0.204,-1.92 0.121,-1.438 -0.495,-1.64 -0.024,-2.73 0.248,-1.474 0.693,0 2.867,5.035 1.128,1.067 1.284,2.617 1.5,-0.276 1.384,0.319 0.612,-0.095 0.302,-0.404 -0.43,-1.083 -1.966,-3.014 -0.893,-2.405 -0.625,-3.051 -0.152,-1.645 0.478,-0.298 2.196,0.035 3.3,1.429 4.22,4.848 2.077,1.573 3.722,5.382 1.123,0.798 0.453,0.167 0.342,-0.651 0.211,-0.71 0.016,-0.951 -0.18,-1.196 -0.104,-1.394 -0.026,-1.597 0.252,-3.21 0.6,-1.061 0.265,-1.208 -0.247,-2.203 -0.703,-1.526 -2.737,-3.997 -0.011,-0.483 0.553,-0.533 0.82,-0.313 6.783,0.969 1.172,0.354 0.5,0.347 0.219,0.457 0.281,0.195 1.457,-0.544 -0.035,-0.998 -0.182,-0.638 -7.872,-1.755 -1.467,-0.604 -0.747,-0.046 -0.772,0.464 -1.601,0.229 -0.739,-0.088 -0.958,-2.115 0.867,-2.582 0.73,0.059 1.387,1.011 0.822,-1.414 1.304,-1.178 1.29,-0.417 2.814,-2.5669995 0.52,-0.226 0.656,0.138 1.454,0.666 0.575,0.637 0.659,1.3549995 0.382,0.417 0.454,0.077 0.622,0.608 0.9,-1.977 0.813,-2.1489995 0.934,-1.373 1.321,0.802 0.836,1.039 0.764,1.23 1.081,0.6759995 1.832,4.115 0.342,0.004 0.162,-0.344 0.173,-0.756 0.062,-1.129 0.225,-1.546 -0.163,-0.575 -1.535,-1.7369995 -0.29,-0.673 -0.294,-1.115 -0.005,-0.927 0.285,-0.735 0.3,-0.337 0.992,0.306 0.328,-0.24 0.31,-0.626 0.373,-1.181 0.294,-0.302 0.664,-0.035 1.021,0.76 0.894,0.064 0.322,-0.349 0.049,-0.742 0.078,-0.474 0.106,-0.2 3.24,-0.041 0.804,-0.178 0.628,-0.567 0.769,-0.067 0.672,0.339 0.832,0.722 0.827,-0.034 1.232,-1.18 1.16,-0.562 6.403,0.156 2.105,0.717 z m -41.849,33.3939995 -0.569,0.358 -1.188,-2.166 -1.881,-2.195 -1.659,-1.48 -1.559,-3.951 -0.123,-1.427 0.221,-1.262 1.361,-0.193 1.089,-0.583 2.772,2.509 1.386,2.095 0.47,1.693 -0.073,3.335 -0.247,3.267 z m 73.529,4.761 -0.289,0.635 -0.74,-0.254 -0.948,-1.789 -0.632,-1.483 -0.045,-1.759 0.325,-0.788 0.506,-0.132 0.695,1.508 0.713,2.011 0.415,2.051 z m 2.954,35.746 -1.188,1.811 -1.757,-0.139 -1.04,-0.834 -0.297,-1.259 0.396,-1.41 1.262,-1.138 1.584,-0.715 1.436,0.43 0.198,1.423 -0.594,1.831 z m -3.887,27.054999 -0.372,0.474 -0.247,-1.427 -0.223,-1.921999 -0.05,-2.19 0.569,-1.106 0.297,-0.247 0.198,0.247 -0.05,0.984 0,1.949 0.198,1.327999 -0.32,1.91 z m 2.929,4.403 -0.545,0 -0.202,-0.341 0.129,-0.605 0.759,-1.966 0.253,-0.161 0.371,0.214 0.113,1.012 -0.248,1.005 -0.63,0.842 z m -150.747,4.105 -1,0.113 -0.985,-0.499 -0.338,-0.387 0.015,-0.593 0.149,-0.206 0.532,-0.206 0.442,-0.046 0.298,0.092 0.701,0.366 0.507,0.365 0.333,0.114 -0.095,0.523 -0.559,0.364 z m 148.982,15.639 -0.322,0.307 -1.089,-4.883 0,-1.803 0.074,-1.392 0.495,-0.108 0.421,0.751 0.198,2.867 0.223,4.261 z m 1.633,7.226 0.223,1.174 0.099,1.069 0.347,0.676 0.743,-0.096 0.297,1.25 -0.544,0.479 -2.153,-0.191 -0.891,0.095 -0.619,-0.766 0.025,-1.35 0.074,-1.361 0.619,-0.782 0.52,0.685 0.619,-0.489 0.641,-0.393 z m -103.886,26.846 -0.397,0.642 -0.323,0.367 -0.702,1.089 -0.121,0.038 -0.189,-0.141 -0.147,-0.286 -0.265,-0.069 -0.092,-0.181 -0.037,-0.147 -0.118,-0.094 -0.187,-0.059 -0.3,0.112 -0.275,-0.112 -0.208,-0.479 0.384,-0.322 0.237,-0.275 0.917,-0.108 0.259,0.126 0.163,-0.003 0.248,-0.075 0.542,-0.343 0.081,-0.16 0.485,0.201 0.045,0.279 z m 4.159,15.826 -0.263,0.057 -0.754,-0.439 -0.123,-0.166 -0.047,-0.203 0.029,-0.241 0.24,-0.45 0.451,-0.661 0.327,-0.124 0.203,0.415 0.199,0.556 0.026,0.281 -0.013,0.331 -0.052,0.28 -0.091,0.23 -0.132,0.134 z m 78.87,1.028 0.099,0.505 0.01,0.238 -0.021,0.199 -0.055,0.143 -0.132,0.126 0.246,0.333 0.08,0.224 0.015,0.178 -0.157,0.344 -1.118,0.454 -0.311,0.218 -0.388,0.539 -0.472,0.462 -0.157,-0.002 -0.183,-0.479 -0.746,-0.353 -1.403,0.184 -1.643,0.444 -0.583,0.207 -0.295,-0.11 -0.09,-0.166 -0.004,-0.231 0.194,-0.678 0.079,-0.173 0.377,-0.226 0.255,-0.6 -0.083,-0.655 0.098,-0.917 0.258,-0.143 0.645,0.327 0.417,0.069 0.739,0.042 0.993,-0.11 0.798,-0.374 1.456,-1.07 0.258,0.014 0.185,0.38 0.136,0.186 0.433,0.291 0.07,0.18 z m -73.65,0.567 -0.375,0.023 -0.872,-0.155 -0.07,-0.1 -0.011,-0.189 0.116,-0.546 0.384,-0.073 0.457,0.299 0.493,0.425 0.068,0.2 -0.19,0.116 z m -2.964,7.613 0.935,0.664 0.991,0.457 0.097,0.208 0.077,0.315 0.018,0.164 -0.022,0.152 -0.063,0.14 0.072,0.18 0.208,0.22 0.021,0.257 -0.248,0.44 -0.349,0.488 -1.846,0.999 -0.653,0.169 -1.614,0.682 -0.494,-0.028 -0.109,-0.032 -0.305,-0.3 -0.418,-0.279 -0.196,-0.217 -0.173,-0.312 0.069,-0.193 0.311,-0.076 0.442,0.005 0.649,-0.227 -0.18,-0.205 -0.17,-0.125 -0.118,-0.272 -0.271,0.053 -0.203,-0.156 -0.391,-0.099 -1.021,-0.094 -0.666,-0.268 -0.196,-0.161 -0.173,-0.278 -0.15,-0.392 0.218,-1.53 0.15,-0.392 0.346,-0.129 0.846,0.342 0.114,-0.147 -0.926,-0.568 -0.34,-0.339 -0.1,-0.268 -0.06,-0.395 0,-0.232 0.042,-0.234 0.083,-0.235 0.225,-0.318 0.938,-0.508 1.022,0.174 1.774,0.624 0.22,0.132 0.544,0.533 1.043,1.611 z m 4.82,3.178 -0.44,0.283 -0.089,-0.063 -0.089,-0.216 -0.227,-0.984 -0.067,-0.468 0.056,-0.584 -0.088,-0.413 0.397,-0.482 0.321,-0.083 0.433,0.126 0.733,0.49 -0.053,0.159 -0.159,0.255 -0.441,0.333 -0.156,0.748 -0.03,0.374 0.021,0.28 -0.122,0.245 z m 39.242,29.586 -0.437,0.004 -0.145,-0.532 0.043,-0.582 0.492,-0.183 0.265,0.401 -0.095,0.596 -0.123,0.296 z m -25.919,29.56 -0.322,0.694 -0.322,-0.151 -0.159,-0.31 -0.317,-0.144 -0.342,0.043 -0.005,-0.123 1.111,-0.742 0.53,-0.2 -0.038,0.313 -0.101,0.274 -0.035,0.346 z\"\n\t\t\t\tid=\"GL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 427.84875,426.1794 -0.016,-0.242 -0.156,-0.552 0.209,-0.241 0.227,-0.143 0.153,0.114 0.046,0.225 0.118,0.154 0.402,0.096 0.397,-0.069 0.243,0.032 -0.007,-0.125 0.082,-0.166 0.483,-0.071 0.51,-0.047 0.525,-0.1 0.411,0.004 0.122,-0.027 -0.029,-0.043 -0.369,-0.048 -0.787,0.114 -0.801,0.034 -0.607,0.301 -0.249,-0.028 -0.252,-0.301 -0.09,-0.371 0.711,-0.027 0.862,0.012 0.939,0.012 0.442,0.006 0.232,-0.404 0.442,-0.178 0.452,-0.066 0.236,0.017 0.248,0.06 0.477,0.333 0.297,0.077 0.251,0.075 0.179,0.162 0.285,0.161 0.224,0.043 0.133,-0.024 0.222,-0.062 0.146,-0.05 0.476,-0.021 0.35,0.186 0.073,0.203 -0.058,0.208 -0.47,0.111 -0.651,0.174 -0.538,-0.095 -0.655,-0.237 -0.383,-0.17 -0.159,-0.069 -0.239,-0.108 -0.209,-0.116 -0.201,-0.076 -0.154,-0.048 -0.114,0.061 -0.057,0.144 -0.091,0.16 -0.117,0.095 -0.549,0.056 -0.493,0.059 -0.264,0.05 -0.177,0.038 -0.055,0.483 -0.558,-0.005 -0.548,-0.006 -0.569,0.009 -0.611,0.009 -0.157,0.099 z\"\n\t\t\t\tid=\"GM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 442.93075,428.0644 -0.08,0.077 -0.083,0.167 -0.076,0.206 -0.077,0.138 0.027,0.09 0.219,0.18 0.307,0.252 0.125,0.033 0.143,-0.06 0.225,-0.2 0.179,-0.216 0.171,-0.105 0.201,0.007 0.16,0.152 0.195,0.336 0.178,0.305 0.023,0.031 0.072,0.05 0.09,-0.002 0.094,-0.074 0.069,-0.045 0.083,-0.14 0.347,-0.423 0.261,-0.116 0.093,-0.031 0.182,-0.064 0.303,0.1 0.439,0.174 0.533,0.211 0.187,0.036 0.11,-0.036 0.159,-0.286 0.198,-0.113 0.283,-0.132 0.23,-0.067 0.131,-0.009 0.05,-0.078 0.025,-0.117 -0.027,-0.121 -0.148,-0.217 -0.004,-0.064 0.085,-0.042 0.182,-0.032 0.237,0.022 0.267,0.094 0.217,0.135 0.124,0.161 0.135,0.344 0.104,0.334 0.268,0.53 -0.005,0.329 -0.006,0.381 0.12,0.072 0.13,0.03 0.061,0.056 0.13,0.293 0.123,0.085 0.147,0.02 0.276,0.187 0.177,0.074 0.025,0.056 -0.006,0.078 -0.069,0.098 -0.107,0.068 -0.159,0.128 -0.132,0.167 -0.272,0.401 -0.008,0.075 0.058,0.054 0.112,0.01 0.12,-0.028 0.25,-0.146 0.196,0.052 0.189,0.112 0.069,0.116 0.018,0.152 -0.043,0.197 -0.007,0.219 0.063,0.374 0.099,0.374 0.098,0.136 0.629,0.329 0.061,0.123 0.031,0.139 -0.045,0.189 -0.065,0.106 -0.18,0.165 -0.165,0.127 -0.052,0.139 0.026,0.259 0,0.585 0.025,0.507 0.136,0.183 0.162,0.094 0.192,-0.018 0.186,-0.034 -0.011,0.303 -0.05,0.339 0.22,0.105 0.112,0.103 0.061,0.097 -0.349,0.18 -0.101,0.105 -0.047,0.283 0.011,0.262 0.469,0.186 0.181,0.219 0.08,0.227 0.028,0.429 -0.042,0.098 -0.121,10e-4 -0.136,-0.132 -0.101,-0.128 -0.127,0 -0.237,-0.029 -0.269,-0.05 -0.333,0.014 -0.118,0.021 -0.076,0.077 -0.02,0.135 -0.034,0.435 0.109,0.095 0.215,0.108 0.141,0.046 0.117,-0.013 0.09,0.07 0.019,0.187 -0.061,0.137 -0.118,0.128 -0.149,0.328 0.025,0.124 0.007,0.177 -0.255,0.48 -0.072,0.094 -0.337,-0.095 -0.219,-0.031 -0.159,0.121 -0.1,-0.076 -0.118,-0.111 -0.041,-0.146 -0.08,-0.031 -0.147,-10e-4 -0.136,0.083 -0.06,0.151 -0.009,0.174 -0.021,0.134 -0.081,0.081 -0.165,0.211 -0.077,0.194 -0.096,0.169 -0.137,-0.01 -0.063,-0.024 -0.044,0.045 -0.213,0.094 -0.183,0.026 -0.048,-0.097 -0.107,-0.078 -0.119,-0.155 -0.135,-0.124 -0.258,-0.088 -0.102,0.04 -0.122,-0.011 -0.08,-0.049 0.011,-0.075 0.135,-0.189 0.077,-0.174 0.043,-0.19 -10e-4,-0.182 -0.072,-0.255 -0.116,-0.203 -0.029,-0.117 0.014,-0.168 -0.027,-0.156 -0.038,-0.081 -0.018,-0.154 -0.036,-0.141 -0.069,-0.054 -0.038,-0.236 0.011,-0.243 -0.1,-0.091 -0.158,-0.067 -0.093,-0.096 -0.057,-0.105 -0.057,-0.031 -0.049,0.007 -0.044,0.065 -0.052,0.014 -0.092,-0.227 -0.038,-0.009 -0.064,0.052 -0.729,0.252 -0.032,-0.098 -0.061,-0.116 -0.14,-0.039 -0.241,0.087 -0.14,0.01 -0.216,-0.029 -0.096,0.041 -0.287,0.335 -0.172,0.131 -0.13,-0.011 -0.136,-0.03 -0.096,0.024 -0.071,-0.038 0.028,-0.082 0.07,-0.102 0.137,-0.365 0.352,-0.367 0.007,-0.078 -0.144,-0.214 -0.151,-0.293 0,-0.314 -0.029,-0.227 -0.311,-0.064 -0.057,-0.038 -0.008,-0.077 0.08,-0.203 0.095,-0.189 0.014,-0.079 -0.022,-0.071 -0.191,-0.2 -0.298,-0.371 -0.276,-0.411 -0.237,-0.352 -0.192,-0.161 -0.183,-0.233 -0.069,-0.148 -0.191,-0.053 -0.556,0.003 -0.669,0.004 -0.564,0.002 -0.033,0.2 -0.616,0.133 -0.38,-0.153 -0.422,0.09 -0.206,0.101 -0.064,0.212 -0.094,0.233 -0.09,0.096 -0.038,0.104 -0.052,0.095 -0.083,0.11 -0.092,0.219 -0.201,0.313 -0.211,0.202 -0.358,0.109 -0.112,0.329 -0.082,0.123 -0.138,0.095 -0.148,0.063 -0.136,-0.038 -0.157,-0.026 -0.164,0.059 -0.028,-0.082 0.093,-0.261 -0.074,-0.135 -0.281,-0.271 -0.027,-0.13 -0.086,-0.169 -0.371,-0.349 -0.345,0.022 0.096,-0.292 -0.004,-0.388 -0.118,-0.212 0.03,-0.216 -0.064,0.013 -0.115,0.149 -0.186,-0.048 -0.378,-0.231 -0.189,-0.223 -0.022,-0.191 -0.043,-0.074 -0.115,0.04 -0.236,-0.004 -0.721,-0.34 -0.512,-0.854 -0.011,-0.193 0.073,-0.332 -0.017,-0.09 -0.235,0.22 -0.045,-0.148 -0.18,-0.343 -0.052,-0.198 -0.172,-0.088 -0.139,-0.015 -0.107,0.066 -0.141,0.401 -0.105,-0.002 -0.109,-0.086 0.023,-0.3 0.124,-0.148 0.153,-0.227 0.464,-0.948 0.165,-0.217 0.105,-0.076 0.219,-0.009 0.428,-0.127 0.35,-0.209 0.175,-0.085 0.401,0.022 0.475,-0.036 0.619,-0.203 0.011,-0.28 -0.005,-0.358 -0.021,-0.142 -0.22,-0.128 -0.128,-0.111 -0.11,-0.141 -0.134,-0.101 0.005,-0.105 0.168,-0.091 0.106,-0.046 0.252,0.002 0.083,-0.052 0.063,-0.091 0.071,-0.231 0.025,-0.243 -0.166,-0.327 0.009,-0.231 0.909,0.033 0.092,0.025 0.406,0.04 0.252,0 0.155,0.017 0.065,0.053 -0.012,0.097 -0.044,0.128 0.052,0.132 0.139,0.035 0.073,-0.04 0.071,-0.064 0.084,-0.051 0.119,0.034 0.255,0.195 0.237,0.053 0.258,0.106 0.243,0.059 0.216,-0.008 0.164,0.109 0.303,0.035 0.39,-0.139 0.308,-0.061 0.431,-0.015 0.227,0.045 0.657,-0.111 0.328,0.025 z\"\n\t\t\t\tid=\"GN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 607.65075,495.4144 -0.02,0.008 -0.039,-0.009 -0.008,-0.049 0.05,-0.009 z\"\n\t\t\t\tid=\"GO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 302.78075,417.0504 -0.33,0.032 -0.217,-0.025 -0.05,-0.208 0.111,-0.176 -0.08,-0.214 0.051,-0.127 0.111,-0.084 0.182,0.112 0.029,0.16 0.114,0.146 0.513,0.312 -0.434,0.072 z m -0.736,0.649 -0.227,0.13 -0.111,-0.04 -0.138,-0.25 -0.097,-0.694 0.075,-0.115 0.054,-0.043 0.299,0.085 0.125,0.098 0.125,0.062 -0.063,0.127 0.031,0.521 -0.073,0.119 z m 1.008,0.34 -0.156,0.011 -0.069,-0.025 -0.021,-0.174 0.121,-0.12 0.071,-0.029 0.105,0.135 0.025,0.112 -0.076,0.09 z\"\n\t\t\t\tid=\"GP\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 499.41175,452.4374 0.069,0.011 0.42,-0.011 0.114,0.148 -0.013,0.217 -0.432,0.634 -0.081,0.267 -0.167,0.227 -0.145,0.018 -0.498,-0.133 -0.084,-0.081 -0.03,-0.108 0.049,-0.253 0.037,-0.077 0.239,-0.048 0.077,-0.041 0.128,-0.272 0.042,-0.249 0.107,-0.188 0.168,-0.061 z m 7.278,4.441 0.003,0.646 0.003,0.546 0.003,0.591 0.003,0.616 0.003,0.521 0.002,0.337 -0.575,-0.002 -0.763,-0.002 -0.763,-0.002 -0.762,-0.002 -0.383,-0.001 -0.422,-10e-4 -0.137,0.018 -0.093,0.085 -0.112,0.02 -0.13,-0.073 -0.159,-0.035 -0.042,-0.075 -0.079,-0.137 -0.157,-0.015 -0.079,0.015 -0.113,0.078 -0.127,0.041 0.024,-0.063 -0.251,-0.168 -0.181,-0.017 -0.167,-0.052 0.135,-0.438 0.169,-0.387 0.252,-0.293 0.134,-0.07 0.043,-0.145 0.2,-0.478 0.248,-0.387 -0.077,-0.392 0.059,-0.659 0.072,0.019 0.011,0.062 0.019,0.092 0.093,0.082 0.308,0.127 0.918,0 0.548,0 0.811,0 0.858,0 0.653,-0.002 z\"\n\t\t\t\tid=\"GQ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 548.76475,334.5924 0.251,0.076 0.146,0.123 0.091,0.113 0.139,0.097 0.104,0.022 0.08,0.333 0.042,0.412 -0.063,0.178 -0.185,0.041 -0.578,0.388 -0.014,0.355 0.008,0.171 0.012,0.122 0.061,0.102 0,0.147 -0.064,0.158 -0.252,0.264 -0.175,0.209 -0.196,0.284 -0.11,0.035 -0.087,0.05 -0.079,-0.156 -0.435,-0.277 -1.007,-0.162 -0.481,-0.205 -0.211,0.038 -0.409,-0.229 -0.28,0.101 -0.594,0.407 -0.321,-0.044 -0.343,-0.245 -0.223,-0.045 -0.262,0.129 -0.419,0.468 -0.427,0.229 -0.382,-0.089 -0.514,0.002 -0.055,0.261 0.099,0.181 0.281,0.308 -0.132,0.231 0.098,0.231 0.183,0.047 0.277,-0.013 0.511,0.299 0.224,0.315 0.143,0.344 -0.312,-0.247 -0.207,-0.238 -0.289,-0.086 -0.401,-0.203 -0.252,-0.034 -0.268,0.141 -0.021,0.159 0.289,0.297 0.264,0.183 0.14,0.148 0.093,0.329 -0.053,0.111 -0.098,0.104 -0.313,-0.207 -0.479,-0.737 -0.668,-0.147 -0.112,0.154 0.132,0.39 0.095,0.151 0.581,0.42 -0.046,0.089 -0.085,0.038 -0.65,-0.24 -0.189,-0.365 -0.045,-0.463 -0.6,-0.322 -0.566,-0.351 -0.127,-0.333 0.117,-0.124 0.083,-0.245 -0.311,0.045 -0.195,0.155 -0.315,0.15 -0.013,0.246 0.05,0.228 -0.104,0.331 -0.102,0.575 0.064,0.301 0.684,0.861 0.234,0.624 0.168,0.236 0.35,0.26 0.365,0.483 0.154,0.251 0.11,0.411 -0.307,0.254 -0.178,0.01 -0.099,-0.112 0.138,-0.28 -0.02,-0.171 -0.474,-0.265 -0.2,0.089 -0.231,0.172 0.132,0.32 0.148,0.211 0.075,0.29 0.284,-0.025 -0.382,0.325 -0.359,0.166 -0.353,0.01 -0.225,0.03 -0.078,0.083 0.183,0.06 0.149,0.006 0.243,0.175 0.691,0.209 0.33,0.265 0.324,0.024 0.325,0.485 0.563,0.129 0.321,0.489 0.426,0.096 0.368,0.18 0.107,0.171 0.054,0.31 0.024,0.655 0.08,0.486 0.003,0.153 -0.02,0.229 -0.1,0.112 -0.135,0.004 -0.265,-0.357 -0.405,-0.376 -0.428,-0.448 -0.122,-0.079 -0.1,-0.007 -0.229,0.151 -0.636,0.117 -0.298,0.164 -0.112,0.036 -0.031,0.086 0.14,0.089 0.171,0.205 0,0.279 0.142,0.339 0.183,0.087 0.238,-0.007 0.137,0.063 0.035,0.135 0.139,0.157 0.091,0.117 -0.003,0.083 -0.665,0.221 -0.139,0.101 -0.117,0.052 -0.173,-0.105 -0.01,-0.27 -0.228,-0.145 -0.209,-0.125 -0.251,-0.053 -0.213,-0.187 -0.139,0.151 0.111,0.524 0.241,0.36 0.404,0.964 0.183,0.567 0.037,0.274 -0.091,0.455 0.199,0.337 0.136,0.346 -0.149,-0.013 -0.13,-0.122 -0.218,-0.144 -0.422,-0.553 -0.147,-0.345 -0.176,-0.027 -0.306,0.05 -0.334,0.737 10e-4,0.421 -0.173,-0.1 -0.148,-0.131 0.018,-0.461 -0.015,-0.194 -0.406,-0.63 -0.186,-0.071 -0.087,-0.213 -0.15,-0.228 -0.193,0.043 -0.158,0.092 -0.043,0.344 -0.016,0.308 -0.118,0.231 -0.433,-0.439 -0.436,-0.762 -0.011,-0.418 0.319,-0.383 -0.038,-0.274 -0.302,-0.542 -0.436,-0.349 -0.244,-0.104 -0.115,-0.372 -0.233,-0.192 -0.189,-0.09 -0.037,-0.132 0.057,-0.098 0.458,-0.383 0.268,-0.602 0.133,-0.028 0.274,0.143 0.308,-0.037 0.252,-0.353 0.214,-0.192 0.361,0.025 0.815,0.471 0.876,0.269 0.437,0.235 0.248,0.233 0.131,0.048 0.208,0.033 -0.009,-0.174 -0.066,-0.154 0.173,-0.084 0.469,0.004 0.085,-0.082 0.087,-0.132 -0.097,-0.151 -0.155,-0.072 -0.166,-0.02 -0.109,-0.048 -0.177,0.048 -0.275,-0.117 -0.143,-0.096 -0.083,-0.099 -0.479,-0.197 -0.454,-0.334 -0.103,0.189 -0.184,0.102 -0.261,0.015 -0.734,-0.212 -0.451,0.162 -0.246,0.042 -0.188,0.004 -0.231,0.072 -0.267,0.043 -0.231,-0.308 -0.097,-0.239 -0.068,-0.045 -0.003,0.225 -0.074,0.18 -0.339,0.101 -0.195,-0.14 -0.15,-0.423 -0.189,-0.539 -0.333,-0.436 -0.271,-0.114 -0.023,-0.24 0.024,-0.192 0.325,-0.048 0.508,0.201 0.105,-0.04 0.114,-0.093 -0.022,-0.205 -0.074,-0.183 -0.14,-0.008 -0.097,0.021 -0.313,-0.038 -0.401,0.102 -0.186,-0.096 -0.062,-0.117 -0.336,-0.289 -0.29,-0.388 -0.47,-0.259 -0.307,-0.792 -0.258,-0.346 -0.275,-0.248 0.06,-0.004 0.104,0.042 0.2,0.136 0.212,0.029 0.116,-0.09 0.067,-0.083 0.043,-0.136 0.018,-0.159 0.035,-0.053 0.163,0.019 0.052,-0.04 -0.002,-0.143 -0.105,-0.178 -0.092,-0.219 0,-0.104 0.077,-0.042 0.127,-0.095 0.068,-0.118 0.135,-0.059 0.199,-0.011 0.222,-0.052 0.144,-0.127 0.021,-0.125 0.09,-0.346 0.059,-0.17 0.095,-0.155 0.051,-0.209 0.102,-0.197 0.212,-0.083 0.192,-0.097 0.145,-0.254 0.082,-0.217 0,-0.133 -0.122,-0.218 -0.09,-0.212 0.024,-0.276 0.381,-0.023 0.133,-0.026 0.495,-0.015 0.226,-0.148 0.156,0.014 0.326,0.128 0.146,-0.101 0.426,-0.2 0.421,-0.582 0.179,-0.087 0.409,-0.036 0.128,-0.067 0.149,0.013 0.458,0.118 0.26,0.018 0.309,-0.081 0.34,-0.142 0.085,-0.499 0.081,-0.072 0.211,-0.02 0.16,0.004 0.308,0.04 0.366,0.013 0.235,-0.234 0.371,-0.017 0.172,-0.034 0.287,0.047 0.279,-0.002 0.357,-0.098 0.333,-0.161 0.26,0.014 0.106,-0.029 0.06,-0.034 0.065,-0.217 0.489,-0.014 0.166,0.021 0.273,0.006 0.284,-0.119 0.085,0.01 0.143,0.318 0.075,0.092 0.154,0.085 0.344,0.238 0.062,-0.063 0.144,-0.08 0.412,0.109 0.393,0.183 0.33,0.269 0.367,-0.078 0.407,-0.132 0.265,-0.038 0.288,-0.019 0.171,-0.057 0.389,0.069 0.401,-0.145 0.193,-0.13 0.056,-0.184 -0.032,-0.323 -0.091,-0.324 -0.096,-0.12 -0.031,-0.124 0.055,-0.116 0.062,-0.08 0.262,-0.068 0.327,0.114 z m -4.341,4.091 -0.36,0.131 -0.366,-0.249 0.003,-0.148 0.193,-0.301 0.106,-0.089 0.269,0.024 0.153,0.207 0.036,0.098 -0.05,0.166 0.016,0.161 z m 2.559,0.694 -0.318,0.096 -0.35,-0.303 0.338,-0.122 0.157,0.088 0.112,0.104 0.061,0.137 z m -0.697,1.622 -0.106,0.123 -0.079,0.212 -0.042,0.303 -0.164,0.007 -0.099,-0.061 -0.033,-0.115 -0.006,-0.145 -0.072,0.006 -0.058,0.157 -0.051,0.071 -0.165,0.015 -0.181,-0.097 0.009,-0.209 -0.036,-0.243 0.016,-0.085 0.495,-0.021 0.145,0.179 0.175,-0.104 0.072,-0.112 0.212,-0.07 -0.032,0.189 z m -15.042,2.001 0.061,0.203 -0.35,-0.126 -0.255,-0.181 -0.211,-0.449 -0.449,-0.511 -0.007,-0.149 0.171,-0.113 0.369,-0.08 0.149,0.083 0.096,0.086 0.03,0.098 -0.209,0.196 -0.043,0.089 0.161,0.176 -0.002,0.071 0.067,0.341 0.079,0.128 0.203,0.103 0.14,0.035 z m 17.771,0.373 -0.049,0.214 0.388,0.355 0.132,0.225 0.049,0.218 -0.033,0.063 -0.147,-0.118 -0.121,-0.038 0.041,0.156 0.124,0.134 -0.22,0.077 -0.22,-0.004 -0.644,-0.187 -0.148,-0.199 0.385,-0.299 0.078,-0.121 -0.272,0.012 -0.291,0.355 -0.466,-0.156 -0.143,-0.143 -0.032,-0.077 0.184,-0.316 0.328,0.011 0.173,-0.071 0.215,-0.1 0.002,-0.15 0.512,-0.034 0.175,0.193 z m -7.078,0.618 -0.131,0.042 0.131,-0.288 0.232,-0.149 -0.087,0.242 -0.145,0.153 z m -0.304,0.158 -0.125,0.122 -0.194,-0.053 -0.203,-0.408 0.522,0.339 z m -1.022,0.56 0.159,0.39 0.149,0.131 0.312,0.155 0.147,0.02 0.533,0.28 0.619,0.056 0.08,0.081 0.076,0.215 0.126,0.169 0.032,0.131 -0.066,0.146 0.091,0.445 0.156,0.422 0.235,0.204 0.293,0.062 0.279,-0.009 0.07,0.084 -0.028,0.368 -0.118,0.144 -0.096,0.035 -0.083,-0.038 -0.076,-0.086 -0.082,-0.041 -0.16,-0.007 -0.117,-0.148 -0.297,-0.203 -0.055,-0.122 -0.01,-0.187 -0.126,-0.138 -0.116,-0.262 -0.11,-0.073 -0.061,-0.132 -0.005,-0.056 -0.432,-0.039 -0.357,-10e-4 -0.303,-0.149 -0.094,-0.391 -0.18,-0.105 -0.135,-0.111 -0.112,-0.154 -0.284,-0.283 -0.314,-0.237 -0.304,-0.157 -0.322,-0.103 -0.262,0.121 -0.153,-0.028 -0.031,-0.082 0.326,-0.163 0.448,-0.312 0.315,-0.103 0.153,-0.013 0.29,0.274 z m 3.534,0.537 -0.296,0.087 -0.079,-0.014 0.066,-0.11 0.005,-0.046 -0.296,-0.202 0.035,-0.262 0.035,-0.067 0.22,0.137 0.048,0.228 0.262,0.249 z m -11.192,0.718 -0.109,0.028 -0.094,-0.019 -0.085,0.016 -0.083,0.068 0.009,-0.283 0.097,-0.353 0.118,-0.206 0.167,-0.096 0.071,0.162 -0.013,0.576 -0.078,0.107 z m 15.175,1.393 -0.268,0.201 -0.299,-0.291 -0.049,-0.094 0.22,-0.118 0.109,-0.181 -0.088,-0.223 -0.305,-0.33 -0.015,-0.234 0.467,-0.099 0.275,0.204 0.14,0.014 -0.054,0.195 0.024,0.063 0.021,0.59 -0.13,0.083 -0.021,0.162 -0.027,0.058 z m -14.974,-0.396 -0.139,0.039 -0.176,-0.341 -0.064,-0.236 0.074,-0.013 0.07,0.027 0.074,0.089 0,0.091 0.03,0.098 0.077,0.117 0.054,0.129 z m -0.41,-0.192 0.035,0.412 0.198,0.077 0.263,0.37 -0.022,0.189 -0.055,0.065 -0.436,-0.175 -0.104,0.079 -0.127,-0.032 -0.079,-0.205 0.009,-0.072 -0.071,-0.123 -0.06,-0.055 -0.171,0.163 -0.108,0.03 0,-0.149 0.159,-0.41 0.074,-0.069 0.13,0.135 0.107,-0.05 0.081,-0.222 0.005,-0.221 0.037,-0.065 0.135,0.328 z m 8.247,1.626 -0.111,0.087 -0.125,-0.004 -0.089,-0.032 -0.044,-0.07 0.055,-0.033 0.065,-0.141 0.06,-0.038 0.089,0.018 0.055,0.057 0.045,0.156 z m 4.043,0.588 -0.083,0.237 -0.219,-0.276 -0.24,-0.189 -0.09,-0.166 -0.146,-0.1 -0.04,-0.223 0.177,-0.091 0.076,-0.009 0.182,0.271 0.284,0.031 -0.022,0.167 0.09,0.215 0.031,0.133 z m -11.515,-0.161 0.296,0.344 -0.239,-0.085 -0.254,0.238 -0.322,-0.278 -0.193,-0.282 -0.043,-0.113 0.202,-0.264 0.188,0.271 0.228,0.043 0.137,0.126 z m 16.659,-0.022 0.345,0.117 0.096,-0.013 0.163,0.042 0.043,0.214 -0.216,0.031 -0.374,0.197 -0.159,-0.043 -0.19,-0.171 -0.302,-0.018 -0.089,-0.047 0.162,-0.202 0.294,-0.102 0.227,-0.005 z m -6.928,0.828 -0.188,0.171 -0.032,-0.257 0.121,-0.271 0.165,-0.017 0.061,0.119 -0.127,0.255 z m 2.526,-0.08 -0.104,0.228 -0.175,-0.035 -0.293,-0.245 -0.1,-0.111 -0.055,-0.109 0.12,-0.013 0.147,0.116 0.375,0.061 0.085,0.108 z m 2.17,0.248 -0.131,0.014 0.04,-0.141 0.251,-0.245 0.352,-0.012 0.32,-0.123 0.072,-0.004 -0.153,0.193 -0.258,0.18 -0.493,0.138 z m -1.758,0.388 -0.269,0.022 0.016,-0.269 0.1,-0.07 0.322,0.134 -0.016,0.084 -0.153,0.099 z m -1.29,-0.262 -0.014,0.365 -0.074,-0.003 -0.043,-0.056 -0.002,-0.14 0.032,-0.22 0.101,0.054 z m -1.424,0.525 -0.16,0.107 0.053,-0.244 -0.079,-0.127 0.07,-0.108 0.103,-0.087 0.048,0.09 0.092,0.146 -0.127,0.223 z m 0.246,0.77 -0.104,0.053 -0.173,-0.077 0.046,-0.192 0.12,-0.082 0.127,0.063 0.019,0.087 -0.035,0.148 z m 2.87,0.552 -0.25,0.132 -0.171,-0.191 -0.095,-0.301 0.458,-0.442 0.11,0.04 0.066,0.114 -0.01,0.397 -0.108,0.251 z m -0.749,-0.353 -0.223,0.27 -0.186,-0.029 -0.078,-0.124 0.115,-0.254 0.249,-0.144 0.113,0.038 -0.011,0.188 0.021,0.055 z m 4.885,0.382 -0.28,0.048 0.05,-0.278 -0.137,-0.219 0.218,0.123 0.139,0.148 0.068,0.028 -0.016,0.089 -0.042,0.061 z m -6.451,0.132 -0.051,0.015 -0.074,-0.147 -0.015,-0.137 0.029,-0.081 0.097,-0.008 0.132,0.261 -0.118,0.097 z m 3.194,0.457 -0.248,0.029 -0.079,-0.026 0.151,-0.06 0.105,-0.064 0.051,-0.077 0.251,-0.136 0.165,-0.178 0.179,0.121 -0.224,0.081 -0.351,0.31 z m 3.06,0.221 -0.087,0.004 0.104,-0.168 0.296,-0.231 0.431,-0.204 0.143,-0.022 0.243,0.126 -0.446,0.209 -0.119,0.11 -0.329,0.024 -0.236,0.152 z m -4.4,0.185 -0.049,0.055 -0.212,-0.22 -0.081,-0.128 0.101,-0.107 0.312,0.25 -0.071,0.15 z m -2.374,-0.313 0.005,0.205 -0.02,0.073 -0.574,0.099 0.053,-0.235 0.035,-0.074 0.19,0.109 0.07,-0.056 0.028,-0.064 0.213,-0.057 z m 9.33,0.731 -0.061,0.055 -0.141,-0.159 -0.007,-0.083 0.144,-0.095 0.072,-0.022 0.021,0.065 -0.002,0.139 -0.026,0.1 z m -3.928,-0.109 -0.222,0.083 -0.141,0.175 -0.172,-0.124 0,-0.168 0.188,0.052 0.132,-0.095 -0.04,-0.107 0.144,0.05 0.111,0.134 z m -2.745,0.67 -0.13,0.183 -0.184,-0.065 0.075,-0.069 0.044,-0.09 0.005,-0.13 -0.05,-0.08 0.034,-0.029 0.164,0.134 0.042,0.146 z m 6.624,1.603 -0.202,0.073 -0.07,-0.009 -0.084,-0.16 0.117,-0.386 -0.108,-0.249 -0.007,-0.105 0.164,-0.146 0.114,-0.219 0.278,-0.237 0.721,-0.281 0.169,-0.026 -0.005,0.22 -0.241,0.556 -0.214,0.278 0.057,0.222 -0.343,0.062 -0.346,0.407 z m -13.44,-0.9 -0.033,0.15 -0.289,-0.103 -0.08,-0.155 -0.015,-0.344 0.076,-0.168 0.05,-0.053 0.133,0.194 0.279,0.283 -0.121,0.196 z m 11.569,2.497 -0.107,0.193 -0.109,-0.163 0.047,-0.188 -0.126,-0.297 0.239,-0.442 0.005,-0.215 0.183,-0.11 -0.045,0.365 -0.14,0.292 0.145,0.243 0.069,0.276 -0.161,0.046 z m -9.328,-0.241 0.192,0.025 0.26,-0.004 0.059,-0.021 0.166,-0.201 0.204,-0.004 0.089,0.198 -0.207,0.091 -0.042,0.052 0.04,0.042 0.155,0.083 0.216,-0.031 0.006,0.156 0.048,0.127 0.106,0.076 0.116,0.015 0.255,-0.022 0.251,-0.05 0.259,-0.1 0.265,-0.051 0.791,0.051 0.284,0.216 0.541,0.026 0.502,0.114 0.264,-0.075 0.451,-0.07 0.072,0.076 -0.058,0.487 0.028,0.142 0.13,0.068 0.128,-0.033 0.158,-0.16 0.378,-0.123 0.392,0 0.331,-0.324 0.097,-0.019 -0.061,0.159 -0.05,0.374 -0.07,0.219 -0.032,0.172 -0.221,0.089 -0.333,0.015 -0.609,-0.038 -0.614,0.061 -1.137,0.164 -1.139,0.084 -0.153,-0.055 -0.003,-0.217 -0.024,-0.15 -0.074,-0.105 -0.352,-0.09 -0.336,-0.154 -1.317,-0.21 -0.311,-0.083 -0.504,0.043 -0.185,-0.006 -0.127,-0.075 -0.088,-0.13 -0.04,-0.413 0.063,-0.409 0.109,-0.108 0.05,0.123 0.129,0.057 0.12,-0.124 -10e-4,-0.188 0.061,-0.174 0.095,0.073 0.063,0.268 0.164,0.071 z\"\n\t\t\t\tid=\"GR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 370.76475,643.1304 0.273,0.232 0.217,-0.158 0.225,0.019 0.123,0.078 0.126,0.03 0.158,10e-4 0.272,0.392 -0.114,0.347 0.298,-0.068 0.259,0.289 0.118,-0.023 0.059,-0.117 0.167,-0.134 0.115,0.18 0.14,0.345 0.177,0.105 0.156,0.365 0.123,0.462 0.112,0.066 0.192,0.001 0.195,-0.063 -0.074,0.4 0.023,0.354 0.322,0.255 -0.192,0.141 -0.202,0.204 -0.411,0.157 -0.107,-0.066 -0.359,-0.355 -0.167,-0.418 -0.377,-0.596 -0.074,-0.175 -0.097,-0.112 -0.341,-0.072 -0.3,-0.143 -0.25,-0.3 -0.078,-0.184 -0.096,-0.128 -0.339,0.007 -0.214,-0.141 -0.211,-0.192 -0.953,-0.554 -0.374,0.056 -0.172,-0.156 0.009,-0.277 0.197,-0.165 -0.825,-0.063 -0.293,-0.099 0.202,-0.06 1.15,-0.009 0.431,-0.046 0.038,0.119 0.381,0.245 0.362,0.024 z m 30.421,22.057 0.012,0.306 -0.436,-0.28 -0.101,-0.132 0.14,-0.171 0.274,-0.006 0.067,0.104 0.044,0.179 z\"\n\t\t\t\tid=\"GS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 224.66475,412.4284 -0.027,0.71 -0.031,0.822 -0.023,0.603 -0.031,0.804 -0.031,0.821 -0.043,1.117 -0.027,0.72 0.013,0.017 0.335,-0.035 0.495,0.032 0.121,-0.002 0.151,0.062 0.117,0.019 0.252,0.162 0.295,0.123 0.189,-0.248 -0.099,-0.149 -0.075,-0.076 0.012,-0.067 1.026,0.642 -0.121,0.099 -0.261,0.228 -0.474,0.391 -0.424,0.349 -0.409,0.316 -0.367,0.285 -0.044,0.028 -0.466,0.204 -0.078,0.093 -0.1,0.402 -0.046,0.1 0.085,0.223 0.084,0.344 -0.027,0.181 -0.322,0.221 -0.148,0.199 -0.065,0.129 -0.058,-0.033 -0.1,-0.01 -0.23,0.05 -0.112,0.011 -0.092,0.057 -0.01,0.124 0.062,0.201 0.022,0.103 -0.065,0.048 -0.284,0.121 -0.112,0.119 -0.107,0.184 -0.124,0.078 -0.13,-0.014 -0.092,0.027 -0.197,0.139 -0.296,0.268 -0.158,0.199 -0.004,0.148 0.031,0.134 -1.078,-0.472 -0.358,-0.081 -1.514,0.01 -0.649,-0.186 -0.739,-0.358 -0.501,-0.326 -1.167,-0.913 0.073,-0.074 0.062,-0.17 0.076,-0.176 -0.047,-0.203 -0.028,-0.164 0.087,-0.24 -0.008,-0.179 0.04,-0.111 0.128,-0.072 0.067,-0.137 -0.364,-0.472 0.001,-0.108 0.048,-0.133 0.294,-0.505 0.351,-0.601 0.386,-0.664 0.233,-0.4 0.849,-10e-4 0.562,-10e-4 0.714,0 0.775,-0.001 0.509,0 0.21,-0.005 -0.036,-0.26 0.028,-0.288 0.092,-0.261 0,-0.115 -0.152,-0.142 -0.293,-0.082 -0.164,-0.125 -10e-4,-0.158 -0.071,-0.191 -0.143,-0.225 -0.295,-0.23 -0.449,-0.236 -0.382,-0.316 -0.315,-0.397 -0.266,-0.255 -0.206,-0.107 -0.048,-0.056 0.601,0.004 0.568,0.005 0.004,-0.57 0.003,-0.506 0.004,-0.574 1.03,10e-4 1.231,0.001 1.276,0.002 1.002,0.001 z\"\n\t\t\t\tid=\"GT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 881.11175,425.6204 -0.119,0.005 -0.103,-0.096 -0.036,-0.065 -0.002,-0.33 0.396,-0.281 0.13,-0.274 0.109,0.022 0.096,0.045 0.088,0.082 -0.453,0.457 z\"\n\t\t\t\tid=\"GU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 436.36375,427.2954 -0.009,0.231 0.166,0.327 -0.024,0.243 -0.072,0.23 -0.063,0.091 -0.083,0.053 -0.252,-0.002 -0.106,0.046 -0.168,0.09 -0.004,0.106 0.134,0.101 0.11,0.141 0.128,0.111 0.22,0.128 0.021,0.142 0.006,0.358 -0.012,0.28 -0.619,0.203 -0.475,0.036 -0.402,-0.022 -0.175,0.085 -0.35,0.209 -0.427,0.127 -0.219,0.009 -0.105,0.076 -0.166,0.217 -0.463,0.948 -0.153,0.227 -0.124,0.148 -0.142,-0.201 0.11,-0.372 -0.119,0.005 -0.236,0.301 -0.115,0.009 0.015,-0.356 -0.131,-0.013 -0.152,0.025 -0.212,-0.186 -0.021,-0.139 0.017,-0.194 0.129,-0.124 -0.018,-0.052 -0.125,-0.015 -0.14,0.033 -0.086,-0.059 0.142,-0.252 0.496,-0.211 0.249,-0.022 0.256,-0.048 -0.14,-0.182 -0.303,-0.072 -0.242,0.05 -0.121,0.131 -0.149,0.022 -0.25,-0.309 0.004,-0.155 0.093,-0.184 0.145,-0.083 0.575,0.002 0.218,-0.104 0.088,-0.019 0.083,-0.094 -0.018,-0.063 -0.094,-0.003 -0.215,0.123 -0.692,-0.046 -0.221,0.074 -0.385,0.283 -0.474,0.156 -0.344,-0.066 0.11,-0.379 -0.049,-0.051 -0.108,-0.063 -0.504,0.121 -0.381,-0.173 -0.151,-0.209 0.026,-0.263 0.18,-0.178 0.028,-0.089 -0.19,-0.017 -0.35,0.111 -0.771,-0.43 0.154,-0.027 0.38,0.045 0.295,-0.054 0.208,-0.091 0.283,-0.125 0.273,-0.041 0.855,0.056 0.743,-0.15 0.552,-0.282 0.51,-0.26 0.661,0.003 0.708,0.003 1.007,0.004 0.798,0.003 0.944,0.007 z m -6.334,2.26 -0.146,0.349 -0.18,-0.039 -0.126,-0.208 -0.014,-0.088 0.366,-0.028 0.1,0.014 z m 1.215,0.982 -0.026,0.066 -0.16,-0.056 0.233,-0.24 0.152,-0.042 -0.005,0.184 -0.117,0.039 -0.077,0.049 z m -0.978,0.203 -0.132,0.089 -0.136,-0.042 -0.073,-0.08 0.011,-0.143 0.154,-0.202 0.138,0.026 0.038,0.352 z m 0.496,0.712 0,0.117 -0.119,-0.022 -0.035,-0.035 0.071,-0.211 0.104,-0.094 0.128,0.015 0.038,0.028 -0.025,0.081 -0.056,0.067 -0.106,0.054 z m -1.092,0.444 -0.225,0.042 -0.102,-0.141 -0.015,-0.055 0.117,-0.047 0.053,-0.002 0.089,-0.103 0.11,-0.068 0.049,-0.022 0.057,0.005 0.041,0.226 -0.054,0.095 -0.12,0.07 z m 0.613,-0.066 -0.026,0.079 -0.165,-0.012 0.037,-0.08 -0.036,-0.023 0.047,-0.24 0.025,-0.037 0.08,0.089 0.011,0.037 0.027,0.187 z\"\n\t\t\t\tid=\"GW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 314.37875,447.4304 -0.149,0.176 -0.027,0.113 -0.096,0.199 -0.075,0.108 0.109,0.248 0.124,0.011 0.048,0.032 0.031,0.048 -0.007,0.053 -0.048,0.047 -0.119,0.06 -0.113,0.143 0.011,0.158 -0.071,0.082 -0.228,0.044 -0.446,0 -0.218,0.011 -0.175,0.027 -0.115,0.102 -0.146,0.072 -0.115,0.016 -0.101,0.119 -0.101,0.168 0.034,0.116 0.104,0.153 0.061,0.157 -0.08,0.255 -0.088,0.197 -0.052,0.15 -0.071,0.288 -0.171,0.318 -0.122,0.18 0,0.197 0.062,0.278 0.349,0.406 0.116,0.194 0.095,0.311 0.315,0.245 0.199,0.198 -0.019,0.261 0.027,0.082 0.123,0.066 0.15,0.05 0.165,-0.004 0.148,-0.022 0.034,-0.037 0.342,-0.005 0.039,0.066 0.02,0.376 0.014,0.153 0.081,0.061 0.049,0.094 0.003,0.084 0.015,0.211 0.051,0.111 -0.008,0.224 0.035,0.083 0.095,0.056 0.119,0.161 0.045,0.02 0.023,0.057 0.102,0.229 0.052,0.069 0.036,0.01 0.016,0.08 0.074,0.214 0.05,0.053 0.095,0.157 0.039,0.172 0.126,0.194 0.129,0.136 0.058,0.141 0.165,0.311 0.16,0.219 0.216,0.057 0.181,0.031 0.113,0.084 0.111,0.091 -0.119,0.042 -0.107,0.056 -0.149,-0.043 -0.206,0.023 -0.214,0.062 -0.198,0.03 -0.373,-0.098 -0.113,-0.014 -0.078,-0.042 -0.154,-0.193 -0.074,-0.023 -0.198,0.09 -0.241,0.063 -0.118,-0.012 -0.139,0.065 -0.129,0.087 -0.246,0.377 -0.127,0.133 -0.136,0.061 -0.273,-0.002 -0.292,0.014 -0.219,0.091 -0.204,0.046 -0.102,0.006 -0.035,0.207 -0.047,0.096 -0.064,0.055 -0.159,0.016 -0.143,-0.007 -0.086,-0.086 -0.161,-0.043 -0.143,-0.031 -0.092,-0.049 -0.075,0.012 -0.062,0.086 -0.049,0.074 -0.043,0.136 -0.217,0.043 -0.093,0.077 0.054,0.253 -0.025,0.099 -0.045,0.077 -0.262,0.015 -0.223,-0.005 -0.128,0.093 -0.16,0.109 -0.097,0.02 -0.115,-0.006 -0.151,-0.127 -0.146,-0.155 -0.37,-0.109 -0.367,-0.09 -0.241,-0.247 -0.057,-0.121 -0.113,-0.054 -0.286,-0.293 -0.158,-0.188 -0.171,-0.051 -0.196,-0.078 0.008,-0.137 -0.013,-0.131 -0.085,-0.054 -0.118,-0.035 -0.043,-0.074 0.012,-0.172 0.023,-0.445 -0.033,-0.425 -0.263,-0.147 -0.114,-0.101 -0.2,-0.629 -0.094,-0.283 -0.004,-0.211 0.066,-0.628 0.075,-0.272 0.204,-0.545 0.117,-0.185 0.007,-0.138 -0.012,-0.177 -0.06,-0.35 0.344,-0.221 0.148,-0.093 0.025,-0.148 0.184,-0.187 0.082,-0.178 0.068,-0.14 -0.019,-0.074 -0.08,-0.043 -0.095,-0.133 -0.199,-0.384 -0.072,-0.078 -0.061,-0.108 0.031,-0.169 0.078,-0.185 -0.01,-0.077 -0.119,-0.099 -0.246,-0.166 -0.204,-0.012 -0.158,-0.06 -0.232,-0.008 -0.185,-0.018 -0.106,-0.062 0.022,-0.102 0.046,-0.078 0.156,-0.194 0.104,-0.206 0.014,-0.202 0.032,-0.265 0.045,-0.231 0.024,-0.26 -0.245,-0.171 -0.078,-0.141 -0.101,-0.125 -0.112,0 -0.168,-0.053 -0.262,0.164 -0.207,-0.03 -0.142,0.062 -0.328,-0.013 -0.211,-0.08 -0.254,0.053 -0.595,-0.659 -0.598,-0.663 -0.589,-0.652 -0.039,-0.089 0.246,-0.311 0.22,-0.223 0.183,-0.127 0.087,-0.111 -0.067,-0.48 0.004,-0.172 -0.086,-0.188 -0.061,-0.21 0.073,-0.176 0.089,-0.122 0.115,-0.048 0.274,-0.042 0.194,-0.018 0.069,-0.07 0.112,-0.081 0.148,-0.005 0.288,0.057 0.132,-0.106 0.239,-0.144 0.536,-0.247 0.12,-0.162 0.084,-0.25 -0.009,-0.119 -0.055,-0.044 -0.133,-0.041 -0.204,-0.006 -0.163,0.065 -0.169,-0.036 -0.14,-0.154 -0.008,-0.128 0.083,-0.18 -0.048,-0.12 -0.268,-0.38 10e-4,-0.105 0.195,-0.171 0.11,-0.145 0.151,-0.348 0.12,-0.116 0.373,-0.041 0.095,-0.074 0.19,-0.184 0.284,-0.21 0.408,-0.168 0.117,-0.305 0.073,-0.084 0.325,-0.16 0.057,-0.086 -0.008,-0.076 -0.522,-0.685 0.104,0.046 0.404,0.448 0.224,0.097 0.047,0.002 0.002,-0.116 0.206,0.048 0.53,0.307 0.777,0.505 1.091,0.954 0.31,0.363 0.209,0.171 0.324,0.416 0.095,0.202 -0.009,0.809 -0.288,0.546 -0.07,0.411 -0.015,0.547 -0.167,0.313 0.221,-0.17 0.069,-0.493 0.189,-0.3 0.245,-0.329 0.327,-0.079 0.352,0.14 0.284,0.025 0.25,0.097 0.532,0.526 0.52,0.416 0.19,0.333 0.551,0.167 0.326,0.263 0.105,0.228 0.064,0.594 -0.106,0.898 z\"\n\t\t\t\tid=\"GY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 795.58175,398.3754 0.01,0.013 0.061,0.113 -0.019,0.126 0.114,0.061 0.028,0.125 -0.126,0.067 -0.007,0.146 -0.056,0.09 -0.362,-0.16 -0.298,-0.083 -0.269,0.033 -0.098,-0.094 -0.017,-0.097 0.31,-0.168 0.024,-0.084 0.008,-0.007 0.09,-0.086 0.134,-0.025 0.07,-0.042 0.183,0 0.112,0.033 0.108,0.039 z m -0.753,0.998 -0.338,0 -0.072,-0.03 -0.036,-0.064 0.12,-0.116 0.456,-0.16 -0.114,0.168 -0.016,0.202 z m 0.657,0 -0.069,0.046 -0.192,-0.22 -0.012,-0.072 0.148,-0.013 0.167,0.1 -0.01,0.091 -0.032,0.068 z\"\n\t\t\t\tid=\"HK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 681.75475,638.7484 -0.335,0.222 -0.345,-0.002 -0.147,-0.174 -0.215,-0.545 -0.143,-0.039 -0.089,-0.15 -0.007,-0.063 0.152,-0.044 0.232,0.156 0.555,0.126 0.408,0.299 0.3,0.101 -0.12,0.08 z\"\n\t\t\t\tid=\"HM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 233.89975,416.3784 -0.214,0.168 -0.039,-0.076 0.103,-0.156 0.129,-0.089 0.125,0.009 -0.03,0.067 -0.074,0.077 z m -1.541,0.242 -0.45,0.227 -0.141,-0.004 0.206,-0.175 0.333,-0.15 0.282,-0.074 0.231,0.032 -0.461,0.144 z m 9.156,4.013 -0.723,-0.043 -0.341,0.089 -0.149,0.201 -0.128,0.09 -0.107,-0.021 -0.217,0.079 -0.327,0.178 -0.294,0.067 -0.263,-0.043 -0.076,0.043 -0.021,0.059 -0.04,0.057 -0.102,0.03 -0.117,-0.016 -0.131,-0.063 -0.069,0.027 -0.008,0.116 -0.071,0.031 -0.134,-0.055 -0.151,0.042 -0.168,0.139 -0.236,0.029 -0.304,-0.08 -0.235,-0.151 -0.167,-0.222 -0.2,-0.056 -0.35,0.165 -0.146,0.193 -0.032,0.118 0.034,0.107 -0.064,0.071 -0.163,0.036 -0.124,0.131 -0.084,0.226 -0.017,0.175 0.051,0.123 -0.081,0.09 -0.213,0.058 -0.251,0.195 -0.29,0.332 -0.288,0.231 -0.287,0.131 -0.138,0.146 0.01,0.16 -0.018,0.05 -0.055,0.019 -0.093,0.022 -0.553,-0.348 -0.159,-0.243 -0.137,0.037 -0.174,0.123 -0.245,0.273 -0.262,0.372 -0.127,0.042 -0.655,-0.056 -0.346,0.033 -0.071,0.049 -0.032,0.136 0.02,0.182 0.095,0.654 0.053,0.269 -0.052,0.083 -0.176,0.013 -0.229,0.038 -0.125,0.123 -0.03,0.127 -0.012,0.177 -0.072,0.183 -0.141,0.131 -0.14,0.047 -0.781,0.035 0.014,-0.302 -0.225,-0.123 -0.128,-0.252 -0.112,-0.17 0.037,-0.102 -0.011,-0.121 -0.318,-0.094 -0.297,0.073 -0.171,-0.048 -0.126,-0.064 0.217,-0.149 0.015,-0.091 -0.07,-0.065 -0.071,-0.044 0.021,-0.169 0.044,-0.2 0.122,-0.467 -0.045,-0.082 -0.199,-0.141 -0.252,-0.014 -0.278,0.044 -0.134,-0.072 -0.117,-0.161 -0.198,-0.077 -0.351,0.128 -0.372,0.193 -0.114,0.07 -0.094,-0.009 -0.042,-0.145 -0.019,-0.171 -0.023,-0.042 -0.198,-0.061 -0.231,-0.044 -0.118,-0.047 -0.111,-0.116 -0.277,-0.151 -0.063,-0.112 -0.37,-0.256 -0.075,-0.127 -0.085,-0.093 -0.178,-0.118 -0.139,0.028 -0.469,-0.147 -0.071,-0.013 0.065,-0.129 0.148,-0.199 0.322,-0.222 0.027,-0.18 -0.084,-0.344 -0.085,-0.223 0.046,-0.1 0.101,-0.402 0.078,-0.093 0.466,-0.204 0.043,-0.028 0.368,-0.285 0.408,-0.316 0.424,-0.349 0.474,-0.391 0.261,-0.229 0.121,-0.099 0.273,0.081 0.215,-0.185 0.124,-0.062 0.291,-0.221 0.09,-0.048 0.486,-0.091 0.235,0.002 0.206,0.225 0.163,0.123 0.307,-0.105 0.257,-0.023 1.063,0.209 0.422,-0.092 0.775,-0.02 0.349,0.052 0.492,-0.295 0.316,-0.06 0.371,-0.138 -0.049,-0.142 -0.089,-0.064 0.566,0.062 0.843,0.3 0.898,-0.054 0.324,-0.162 0.209,-0.046 0.92,0.308 0.242,0.237 0.189,0.023 0.147,-0.054 0.04,-0.049 -0.181,-0.052 -0.083,-0.074 0.725,0.146 1.364,1.117 0.028,0.091 -0.583,-0.33 -0.308,0.025 -0.081,0.053 0.018,0.18 0.028,0.084 0.132,0.01 0.098,-0.049 0.241,0.059 0.16,0.12 0.193,0.184 0.116,0.199 0.125,0.003 0.123,-0.12 0.232,-0.015 0.15,0.134 0.107,-0.008 -0.149,-0.208 -0.351,-0.207 0.083,-0.009 0.778,0.371 0.22,0.466 0.183,0.105 0.185,0.145 z\"\n\t\t\t\tid=\"HN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 521.24775,315.9454 0.151,0.061 0.5,0.278 0.346,0.313 0.192,0.347 0.26,0.268 0.328,0.19 0.26,0.257 0.192,0.324 0.269,0.182 0.345,0.039 0.218,0.111 0.092,0.183 0.188,0.165 0.283,0.148 0.439,0.081 0.842,0.02 0.075,0.004 0.19,0.046 0.222,-0.058 0.271,-0.115 0.087,-0.069 0.284,-0.378 0.157,0.033 0.312,-0.046 0.189,-0.084 0.014,0 -0.012,0.097 -0.021,0.169 -0.153,0.119 0.155,0.275 0.148,0.446 -0.083,0.22 0.101,0.171 0.284,0.123 0.026,0.049 -0.087,0.051 -0.072,0.145 -0.008,0.264 0.248,0.25 0.504,0.234 0.161,0.039 0.062,0.09 0.084,0.059 0.05,0.072 0.003,0.093 -0.037,0.064 -0.239,0.022 -0.272,-0.002 -0.194,-0.113 -0.018,0.083 -0.003,0.094 -0.188,0.057 0.104,0.647 -0.042,0.186 -0.069,0.063 -0.064,-0.026 -0.079,-0.007 -0.039,0.061 0.033,0.138 -0.185,0.016 -0.294,-0.071 -0.135,-0.125 -0.023,-0.127 -0.002,-0.119 -0.094,-0.195 -0.234,-0.202 -0.489,-0.033 -0.181,-0.064 -0.187,-0.073 -0.204,-0.055 -0.188,0.005 -0.227,0.054 -0.396,-0.089 -0.134,0.119 -0.208,0.137 -0.173,-0.003 -0.344,-0.318 -0.103,-0.02 -0.301,0.162 -0.123,0.009 -0.094,-0.051 -0.407,-0.122 -0.184,-0.026 -0.135,0.058 -0.239,-0.062 -0.58,-0.417 -0.359,0.317 -0.73,-0.079 -0.217,0.217 -0.248,0.411 -0.201,0.196 -0.175,-0.07 -0.207,-0.181 -0.362,-0.465 -0.183,-0.084 -0.21,-0.02 -0.183,0.052 -0.098,0.094 -0.075,0.679 -0.066,0.597 -0.004,0.357 0.402,0.33 0.475,0.567 0.152,0.065 0.076,0.185 0.111,0.477 0.125,0.535 0.241,0.354 0.217,0.252 0.265,0.222 0.333,0.347 0.272,0.381 0.072,0.14 0.529,0.502 0.513,0.511 0.458,0.179 0.072,0.094 0.004,0.392 0.05,0.147 0.306,0.41 0.625,0.599 0.072,0.138 0.021,0.102 -0.04,0.078 -0.164,0.082 -0.134,-0.091 -0.582,-0.584 -0.563,-0.369 -0.635,-0.696 -0.85,-0.276 -0.579,-0.306 -0.351,0.046 -0.387,0.096 -0.239,0.003 -0.17,-0.055 -0.12,-0.19 0.018,-0.147 -0.021,-0.191 -0.339,-0.307 -0.463,-0.292 -0.438,-0.378 -0.88,-1.024 -0.177,-0.331 0.173,-0.063 0.131,0.006 0.148,-0.068 0.24,-0.001 0.284,0.067 -0.251,-0.22 -0.313,-0.216 -0.81,-0.86 -0.242,-0.408 -0.028,-0.44 0.06,-0.604 -0.146,-0.434 -0.625,-0.563 -0.229,-0.297 -0.461,-0.177 -0.207,0.017 -0.124,0.22 -0.09,0.488 -0.409,0.642 -0.136,0.278 -0.214,0.361 -0.186,0.025 -0.109,-0.032 -0.332,-0.608 -0.317,-0.462 -0.044,-0.219 -0.029,-0.27 -0.242,-0.997 0.17,-0.14 0.105,0.16 0.739,0.193 0.16,-0.085 0.097,-0.131 0,-0.083 0.063,-0.024 0.26,0.126 0.212,-0.029 0.342,-0.006 0.244,0.021 0.162,-0.097 0.218,-0.357 0.081,-0.2 0.098,-0.048 0.064,0.024 0.047,0.165 0.115,0.154 0.236,0.251 0.167,0.121 0.151,0.043 0.148,-0.101 0.153,-0.029 0.438,0.196 0.37,0.037 0.273,-0.102 -0.036,-0.141 -0.1,-0.157 -0.021,-0.152 0.018,-0.132 0.188,-0.131 -0.009,-0.058 -0.227,-0.231 0.011,-0.06 0.497,-0.261 0.479,-0.146 0.077,-0.113 0.044,-0.17 0.021,-0.319 -0.026,-0.261 -0.194,-0.245 -0.012,-0.124 0.046,-0.129 0.076,-0.117 0.192,-0.05 0.225,-0.084 0.178,-0.097 0.24,-0.08 0.189,-0.112 0.185,-0.267 0.112,-0.044 0.339,0.038 0.073,-0.066 -0.047,-0.384 0.061,-0.098 0.12,-0.055 0.056,-0.054 0.299,0.042 0.257,0.095 z m -4.787,6.104 -0.346,0.085 -0.165,-0.152 -0.043,-0.125 -0.285,-0.04 -0.172,-0.173 -0.035,-0.077 0.244,-0.191 0.13,-0.309 0.165,0.186 0.2,0.349 0.107,0.097 0.2,0.35 z m -0.905,1.25 -0.022,0.152 -0.17,-0.193 -0.086,-0.346 -0.215,-0.561 -0.028,-0.158 0.111,-0.156 -0.006,-0.159 -0.152,-0.494 0.127,-0.081 0.076,-0.01 0.031,0.343 0.069,0.197 0.207,0.242 -0.042,0.399 0.042,0.567 0.042,0.126 0.016,0.132 z m 0.964,-0.389 0.071,0.174 -0.264,-0.157 -0.237,-0.06 -0.05,-0.118 0.034,-0.097 0.051,-0.094 0.179,0.013 0.027,0.092 0.189,0.247 z m 1.002,1.661 -0.072,0.104 -0.182,-0.191 -0.167,-0.136 -0.119,-0.162 -0.234,-0.202 -0.079,-0.231 -0.349,-0.472 -0.052,-0.128 0.174,0.191 0.145,0.12 0.12,0.029 0.304,0.301 0.299,0.386 0.356,0.335 -0.074,0.01 -0.07,0.046 z m 10e-4,1.611 0.04,0.057 -0.004,0.039 -0.146,-0.055 -0.039,0.018 -0.687,-0.849 -0.074,-0.166 0.246,0.198 0.664,0.758 z m 0.118,-0.544 0.044,0.137 -0.35,-0.258 -0.133,-0.173 -0.024,-0.078 0.463,0.372 z m 0.394,0.344 0.185,0.289 -0.177,-0.06 -0.184,-0.178 -0.108,-0.194 0.284,0.143 z m 3.968,2.716 -0.443,0.01 -0.385,-0.07 -0.188,-0.119 0.014,-0.101 0.058,-0.168 0.429,0.02 0.653,0.119 0.16,0.139 -0.05,0.064 -0.248,0.106 z m 1.147,0.556 -0.196,0.04 -1.249,-0.03 -0.363,-0.08 -0.404,-0.205 -0.082,-0.063 0.406,-0.06 0.378,0.06 0.116,0.149 1.021,0.119 0.373,0.07 z m 1.329,0.875 0.204,-0.07 0.173,0.051 0.11,0.218 0.217,0.144 0.353,0.252 0.223,0.193 0.505,0.346 0.12,0.048 0.252,0.103 0.005,0.14 0.108,0.159 0.114,0.183 -0.518,-0.36 -0.483,-0.403 -0.945,-0.622 -0.67,-0.151 -0.917,-0.501 -0.597,-0.178 0.228,-0.041 0.262,-10e-4 1.414,0.669 -0.158,-0.179 z m -2.853,-0.38 0.519,0.107 0.38,-0.049 0.344,0.066 0.214,0.121 0.051,0.06 -0.277,0.008 -0.314,-0.049 -0.356,0.123 -0.314,-0.065 -0.119,-0.081 -0.084,-0.1 -0.044,-0.141 z m 2.686,0.868 0.383,0.261 -1.123,-0.343 0.127,-0.031 0.119,-0.007 0.494,0.12 z\"\n\t\t\t\tid=\"HR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 270.96475,405.8734 0.114,0.069 -0.043,0.084 -0.283,-0.052 -0.293,-0.095 -0.096,0.023 -0.059,-0.012 -0.171,-0.091 0.15,-0.07 0.155,-0.023 0.17,0.005 0.356,0.162 z m 2.483,0.947 0.062,0.088 0.129,0.597 0.013,0.191 -0.13,0.288 0.019,0.114 0.279,0.266 0.005,0.096 -0.033,0.097 -0.238,0.252 -0.183,0.172 0.058,0.198 0.148,0.188 0.019,0.157 -0.045,0.207 -0.227,0.257 -0.119,0.092 -0.338,0.011 -0.038,0.037 0.168,0.251 0.19,0.284 0.311,0.22 0.069,0.207 -0.075,0.196 -0.013,0.484 -0.238,-0.235 -0.261,-0.196 -0.157,-0.076 -0.163,-0.049 -1.245,0.025 -0.14,0.034 -0.108,0.063 -0.116,0.031 -0.342,0.059 -0.34,0.013 -0.795,-0.158 -0.315,-0.082 -0.317,-0.052 -0.364,0.017 -0.362,0.048 -0.29,0.114 -0.217,0.201 -0.041,0.187 -0.128,0.048 -0.293,-0.297 -0.27,-0.211 -0.307,-0.159 -0.629,-0.227 -0.115,-0.138 -0.051,-0.167 0.254,-0.514 0.289,-0.094 0.159,-0.018 0.357,0.063 0.349,0.117 0.318,0.076 0.493,0.03 0.268,0.126 1.893,0.196 0.359,0.062 0.14,-0.021 0.122,-0.077 0.102,-0.139 0.117,-0.104 0.561,-0.023 0.118,-0.047 0.082,-0.145 -0.002,-0.151 -0.33,-0.202 -0.516,-0.444 -0.454,-0.523 0.196,-0.177 -0.075,-0.323 0.074,-0.299 0.108,-0.293 -0.45,-0.251 -0.532,-0.251 -0.737,-0.079 -0.227,-0.063 -0.118,-0.188 0.106,-0.252 0.239,-0.14 0.274,-0.086 0.281,-0.06 0.677,-0.072 0.672,0.081 0.581,0.26 0.59,0.204 0.745,0.068 0.335,0.074 0.155,-0.064 z m -2.877,2.779 -0.049,0.208 -0.718,-0.247 -0.582,-0.312 0.025,-0.169 0.297,-0.039 0.285,0.104 0.421,0.208 0.321,0.247 z\"\n\t\t\t\tid=\"HT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 537.00875,308.0604 0.267,-0.034 0.011,0.005 0.063,0.02 0.045,0.196 0.007,0.013 0.065,0.129 0.06,0.171 0.094,0.129 0.207,0.053 0.27,0.159 0.175,0.3 0.263,0.124 0.019,0.003 0.052,-0.014 0.19,-0.011 0.037,0.06 0.151,0.147 0.059,0.128 -0.03,0.136 0.027,0.154 0.057,0.054 -0.069,0.103 -0.491,0.516 -0.193,0.136 -0.127,0.028 -0.201,-0.054 -0.207,0.041 -0.185,0.11 -0.171,0.035 -0.129,0.131 -0.167,0.28 -0.206,0.236 -0.207,0.147 -0.108,0.131 -0.012,0.452 -0.115,0.13 -0.154,0.131 -0.085,0.115 -0.235,0.686 -0.178,0.219 -0.17,0.168 -0.028,0.153 0.003,0.176 -0.192,0.35 -0.252,0.362 -0.048,0.149 0.056,0.2 -0.242,0.23 -0.139,0.111 -0.116,0.052 -0.072,0.144 -0.118,0.351 0.031,0.156 0.003,0.144 -0.204,0.084 -0.06,0.158 -0.052,0.196 -0.085,0.088 -0.229,0.163 -0.57,-0.071 -0.215,0.055 -0.064,0.116 -0.013,0.093 -0.072,0.088 -0.129,0.109 -0.133,0.049 -0.297,-0.135 -0.637,0.138 -0.11,0.098 -0.089,-0.071 -0.137,-0.063 -0.637,-0.08 -0.252,0.063 -0.337,-0.024 -0.311,-0.07 -0.233,0.057 -0.205,0.274 -0.102,0.092 -0.08,0.059 -0.175,0.086 -0.147,0.103 -0.195,0.074 -0.175,-0.01 -0.165,-0.118 -0.059,0.027 -0.052,0.109 -0.09,0.092 -0.247,0.114 -0.063,-0.002 -0.014,0 -0.189,0.084 -0.312,0.047 -0.157,-0.033 -0.284,0.378 -0.087,0.069 -0.271,0.115 -0.221,0.058 -0.19,-0.046 -0.075,-0.004 -0.842,-0.019 -0.44,-0.081 -0.282,-0.148 -0.188,-0.165 -0.092,-0.183 -0.218,-0.11 -0.345,-0.039 -0.268,-0.182 -0.193,-0.324 -0.259,-0.257 -0.329,-0.19 -0.26,-0.268 -0.192,-0.347 -0.346,-0.313 -0.5,-0.278 -0.151,-0.061 -0.03,-0.09 -0.244,-0.346 -0.105,-0.128 0.01,-0.172 -0.049,-0.098 -0.089,-0.068 -0.048,-0.249 -0.028,-0.186 -0.07,-0.12 -0.535,-0.025 0.448,-0.444 0.223,-0.124 0.258,0.021 0.083,-0.04 0.022,-0.065 0.044,-0.145 0.022,-0.137 0.022,-0.13 -0.028,-0.072 -0.125,-0.023 -0.06,-0.319 0.064,-0.121 0.064,-0.084 -0.079,-0.389 0.024,-0.133 0.202,-0.021 0.167,-0.083 0.137,-0.094 0.038,-0.121 0.112,-0.246 -0.103,-0.302 -0.583,-0.197 -0.03,-0.075 0.135,-0.086 0.145,-0.122 0.084,-0.096 0.112,-0.013 0.158,0.049 0.282,0.219 0.107,0.032 0.104,-0.064 0.111,-0.014 0.311,0.008 0.262,-0.051 -0.059,-0.233 10e-4,-0.17 -0.045,-0.136 0.028,-0.149 0.106,-0.117 0.032,-0.262 0.163,-0.177 0.077,-0.026 0.288,0.033 0.068,0.046 0.044,0.01 0.459,0.431 0.434,0.324 0.355,0.166 0.522,0.013 0.555,0.015 0.928,-0.057 0.696,-0.042 0.046,-0.081 0.105,-0.193 -0.084,-0.166 0.005,-0.195 0.117,-0.254 0.344,-0.212 0.985,-0.093 0.566,-0.158 0.086,-0.215 0.187,-0.213 0.172,-0.043 0.235,0.098 0.283,0.187 0.249,0.1 0.145,-0.064 0.5,-0.316 0.576,-0.31 0.396,-0.84 0.043,-0.135 0.429,-0.096 0.627,0.017 0.322,0.11 0.242,0.058 0.362,-0.02 0.522,-0.181 0.193,0.005 0.15,0.128 0.164,0.111 0.111,0.135 0.084,0.191 0.045,0.071 0.073,0.098 0.132,0.134 0.127,0.035 0.967,-0.233 z\"\n\t\t\t\tid=\"HU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 819.94975,493.5214 -0.261,10e-4 -0.084,-0.03 -0.021,-0.25 0.077,-0.14 0.605,-0.18 0.236,-0.166 0.336,-0.345 0.208,-0.09 0.053,-0.039 0.036,0.007 0.033,0.263 0.084,0.156 0.015,0.082 -0.302,0.133 -0.27,0.306 -0.588,0.2 -0.157,0.092 z m -2.991,-0.905 -0.14,0.034 -0.301,-0.082 -0.061,-0.05 0.258,-0.137 0.198,-0.194 0.231,-0.017 0.137,0.04 -0.047,0.231 -0.275,0.175 z m 4.302,-0.816 -0.253,0.099 -10e-4,-0.208 0.195,-0.263 0.178,-0.089 0.099,0.105 0.009,0.048 -0.258,0.094 0.031,0.214 z m -9.552,-2.626 0.127,0.127 0.459,0.245 0.075,0.103 0.029,0.17 0.092,0.126 0.207,0.02 0.221,-0.026 0.169,0.081 0.146,0.127 0.216,0.247 0.19,0.273 0.236,0.153 0.135,0.228 -0.079,0.201 -0.299,0.278 -0.161,0.06 -0.221,0.022 -0.344,0.166 -0.126,-0.086 -0.39,-0.06 -0.311,-0.12 -0.261,-0.219 -0.15,-0.235 -0.19,-0.208 -0.331,-0.139 -0.594,-0.408 -0.367,-0.037 -0.15,0.03 -0.151,0.002 -0.778,-0.183 -0.121,-0.107 -0.095,-0.137 -0.087,-0.135 -0.053,-0.151 0.1,-0.134 0.104,-0.09 0.433,-0.158 0.31,-0.048 0.359,0.007 0.535,-0.049 0.507,0.079 0.156,-0.059 0.256,-0.164 0.089,0.057 0.108,0.151 z m 13.82,-0.907 0.103,0.031 0.356,-0.17 0.067,0.032 0.069,0.077 10e-4,0.227 -0.137,0.189 -0.346,0.015 -0.049,0.053 -0.004,0.115 0.027,0.112 0.08,0.09 0.103,0.158 0.097,0.368 -0.196,0.151 -0.099,0.284 -0.34,0.267 -0.374,0.437 -0.3,0.223 -0.263,0.264 -0.226,0.177 -0.283,0.06 -0.423,0.038 -0.575,0.316 -0.318,0.138 -0.31,0.01 -0.29,-0.103 -0.11,-0.116 0.026,-0.156 0.096,-0.134 0.117,-0.11 0.074,-0.142 -0.328,-0.18 -0.028,-0.137 0.13,-0.365 0.085,-0.375 0.122,-0.256 0.47,-0.457 0.281,-0.227 0.166,-0.088 0.046,0.096 0.105,0.116 0.071,0.019 0.054,-0.026 0.414,0.04 0.104,-0.04 0.158,-0.181 0.104,-0.101 0.07,-0.214 0.018,-0.136 0.368,-0.099 0.197,-0.109 0.175,-0.155 0.51,-0.264 0.091,-0.073 -0.02,0.251 0.064,0.06 z m -26.176,-0.801 -0.078,0.097 -0.228,-0.173 -0.058,-0.078 0.169,-0.112 0.059,-0.016 0.146,0.122 -0.01,0.16 z m 20.677,-0.633 -0.09,0.166 -0.161,-0.047 0.044,-0.16 0.082,-0.095 0.218,-0.138 0.222,-0.024 0.136,0.048 0.043,0.053 -0.346,0.054 -0.148,0.143 z m -9.86,0.552 -0.109,0.027 -0.11,-0.041 0.045,-0.251 -0.063,-0.171 0.114,-0.134 0.029,-0.237 0.046,-0.072 0.067,0.075 0.031,0.049 0.058,0.023 0.126,0.004 0.028,0.103 -0.005,0.097 -0.054,0.102 -0.15,0.109 -0.108,0.123 0.055,0.194 z m 10.814,-1.089 -0.057,0.124 -0.764,-0.008 0.021,-0.163 0.212,-0.178 0.071,-0.059 0.234,-0.052 0.334,0.094 -0.051,0.242 z m -18.737,0.73 -0.355,0.584 0.127,0.094 0.076,0.089 -0.588,0.121 -0.245,-0.064 -0.142,0.017 -0.597,-0.11 -0.427,-0.134 -0.049,-0.106 0.034,-0.127 0.126,0.043 0.329,0.02 0.126,-0.057 0.003,-0.376 -0.046,-0.491 0.445,-0.4 0.237,-0.162 0.272,-0.095 0.688,0.221 0.114,0.06 0.088,0.09 0.043,0.144 -0.259,0.639 z m 21.458,-0.801 -0.171,0.174 -0.116,0.303 -0.106,0.092 -0.227,0.057 -0.137,-0.304 -0.251,0.014 0.123,-0.268 0.118,-0.1 0.154,-0.002 0.076,0.108 0.041,0.023 0.362,-0.453 0.073,-0.005 0.061,0.02 0.049,0.057 -0.049,0.284 z m -1.016,-0.161 -0.396,0.077 -0.242,0.352 -0.192,-0.005 -0.105,0.156 -0.024,0.067 0.014,0.063 -0.021,0.06 -0.076,0.062 -0.18,-0.097 -0.154,0.124 -0.065,0.03 -0.227,-0.144 -0.215,0.009 -0.065,-0.022 0.267,-0.258 0.364,-0.241 0.06,-0.089 -0.143,-0.024 -0.085,-0.036 -0.011,-0.057 0.23,-0.038 0.159,-0.005 0.121,0.074 0.077,0 0.492,-0.284 0.195,0.064 0.142,0.073 0.08,0.089 z m 42.014,0.328 -0.139,0.037 -0.706,-0.085 -0.075,-0.116 -0.011,-0.06 0.161,-0.115 0.156,-0.195 0.242,-0.073 0.094,0 0.284,0.462 -0.006,0.145 z m -59.887,-0.06 -0.063,0.002 -0.122,-0.055 0.044,-0.117 -0.066,-0.191 0.023,-0.157 0.156,-0.089 0.333,-0.01 0.012,0.115 -0.317,0.502 z m 4.259,-0.363 -0.123,0.003 -0.025,-0.113 0.044,-0.118 0.118,-0.05 0.054,-0.003 0.085,0.107 0.019,0.056 -0.079,0.074 -0.093,0.044 z m 15.44,-0.276 0.067,0.171 0.217,-0.095 0.212,-0.024 0.482,0.018 0.354,0.038 0.209,0.071 0.02,0.343 -0.098,0.074 -1.831,0.259 -0.179,-0.083 -0.07,-0.082 0.197,-0.254 -0.091,-0.121 0.104,-0.197 0.219,-0.134 0.188,0.016 z m 9.116,-0.118 0.491,0.113 0.281,-0.012 0.058,0.101 -0.269,0.239 -0.569,-0.184 -0.097,-0.197 0.105,-0.06 z m -14.147,1.446 -0.396,0.1 -0.246,0.095 -0.235,0.126 -0.148,0.026 -0.269,0.01 -0.381,-0.023 -0.257,0.041 -0.717,0.326 -0.282,0.028 -0.244,0.08 -0.084,-0.127 -0.104,-0.094 -0.238,-0.023 -0.238,0.007 -0.242,0.288 -0.386,-0.061 -0.149,0.025 -0.145,0.061 -0.143,0.027 -0.15,-0.02 -0.563,-0.224 -0.646,-0.133 -0.648,0.052 -0.558,-0.123 -0.306,0.094 -0.288,0.134 -0.085,-0.141 -0.105,-0.124 -0.094,-0.186 -0.003,-0.211 0.031,-0.147 0.083,-0.135 0.052,-0.14 0.024,-0.15 0.122,0.071 0.127,-0.027 0.38,-0.163 0.371,-0.247 0.345,-0.09 0.199,-0.025 0.17,0.049 0.173,-0.018 0.177,-0.055 0.279,0.189 0.117,0.039 0.378,0.015 0.344,0.109 0.308,0.164 0.444,0.153 0.268,0.206 0.204,0.076 0.151,0.021 0.139,-0.028 0.176,-0.138 0.205,-0.057 0.178,0.002 0.325,-0.036 0.138,-0.033 0.153,-0.076 0.15,0.047 0.132,0.07 0.55,0.361 0.169,0.01 0.31,-0.078 0.093,-0.097 0.048,-0.149 0.085,-0.124 0.118,-0.107 0.134,-0.082 0.411,-0.139 0.281,-0.137 0.193,-0.232 -0.451,-0.102 0.095,-0.167 0.15,-0.094 0.199,0.035 0.173,0.13 0.077,0.499 -0.142,0.07 -0.09,0.076 -0.06,0.1 -0.256,0.183 0.101,0.229 -0.075,0.095 -0.106,0.044 z m 22.675,-0.827 -0.244,0.088 0.163,-0.223 0.524,-0.506 0.188,0.094 0.25,0.018 -0.373,0.229 -0.38,0.095 -0.128,0.205 z m -35.418,-0.002 0.141,0.111 0.128,-0.01 0.268,-0.17 0.161,-0.062 0.173,-0.002 0.167,0.028 0.165,0.121 0.06,0.197 0.062,0.061 0.097,-0.236 0.129,-0.071 0.145,-0.036 0.227,0.013 0.173,0.113 0.157,0.335 -0.005,0.293 0.057,0.11 0.108,0.08 0.08,0.113 -0.071,0.118 -0.071,0.057 -0.203,0.054 -0.098,-0.023 -0.091,-0.08 -0.101,-0.029 -0.23,0.027 -0.212,0.066 0.029,0.107 0.174,0.048 0.052,0.051 -0.011,0.069 -0.068,0.014 -0.226,-0.093 -0.152,0.019 -0.548,0.126 -0.145,-0.003 -0.082,-0.119 0.006,-0.31 -0.059,-0.082 -0.407,0.376 -0.123,0.092 -0.164,0.043 -0.171,-0.015 -0.588,0.228 -0.185,-0.032 -0.179,0 -0.628,0.247 -0.337,0.069 -0.173,0.005 -0.172,-0.021 -0.154,0.022 -0.138,0.1 -0.28,0.084 -0.289,-0.064 -0.244,-0.085 -0.232,-0.112 -0.058,-0.144 0.012,-0.172 0.098,-0.235 -0.066,-0.413 0.051,-0.188 0.095,-0.185 0.144,-0.068 0.188,-0.014 0.311,-0.166 0.284,-0.218 0.164,0.021 0.374,0.152 0.219,0.018 0.372,-0.024 0.153,0.093 0.061,0.214 0.083,0.078 0.109,0.055 0.264,0.362 0.245,-0.019 0.214,0.066 0.378,-0.219 0.286,0.006 0.081,-0.17 -0.171,-0.182 -0.206,-0.147 -0.111,-0.031 -0.121,0.009 -0.108,-0.023 -0.461,-0.33 -0.137,-0.178 -0.078,-0.209 0.047,-0.155 0.317,-0.137 0.148,-0.033 0.551,0.094 0.094,0.078 0.146,0.33 0.106,0.142 z m -7.843,-0.458 0.285,0.149 0.397,0.438 0.037,0.123 -0.12,0.116 -0.284,0.186 -0.635,0.287 -0.109,0.135 -0.134,0.265 -0.031,0.113 -0.045,0.062 -0.073,0.045 -0.138,0.039 -0.15,-0.056 0.136,-0.17 0.005,-0.203 -0.101,-0.19 -0.143,-0.159 -0.288,-0.216 -0.309,-0.191 -0.312,-0.098 -0.331,-0.044 -0.119,-0.093 -0.194,-0.238 -0.063,-0.13 -0.032,-0.136 0.021,-0.132 0.082,-0.008 0.324,0.031 0.598,0.155 0.296,0.013 0.168,-0.036 0.438,-0.306 0.104,0.005 0.419,0.135 0.301,0.109 z m 40.389,-0.565 -0.166,0.259 -0.187,-0.017 -0.341,-0.347 0.02,-0.242 0.028,-0.079 0.131,-0.024 0.441,0.07 0.086,0.196 -0.012,0.184 z m -8.527,-0.807 0.038,0.137 -0.005,0.06 -0.336,0.044 -0.324,0.152 -0.166,0.175 -0.13,0.227 -0.446,-0.092 -0.398,-0.015 -0.176,-0.08 -0.191,0.005 -0.248,0.07 -0.353,0.192 -0.078,0.015 0.028,-0.292 0.098,-0.18 0.371,-0.431 0.309,0.095 0.359,0.027 0.409,-0.084 0.291,-0.194 0.411,-0.102 0.328,0.254 0.209,0.017 z m 1.737,-0.126 -0.181,0.066 0.056,-0.208 -0.012,-0.168 0.293,0.051 -0.003,0.134 -0.028,0.052 -0.125,0.073 z m 31.196,1.831 -0.671,0.371 -0.88,-0.065 -0.312,-0.006 -0.517,0.09 -0.104,-0.072 0.098,-0.349 0.413,-0.929 0.491,-0.818 0.209,-0.212 0.291,-0.199 0.309,-0.16 0.697,-0.166 0.634,0.03 0.091,0.068 0.273,0.272 0.177,0.215 0.074,0.304 -0.27,0.523 -0.301,0.499 -0.488,0.392 -0.214,0.212 z m -20.234,-0.772 -0.046,0.032 -0.349,-0.036 -0.199,-0.001 0.026,-0.213 -0.103,-0.16 0.141,-0.235 0.003,-0.272 0.146,-0.037 0.021,-0.155 0.176,-0.411 0.104,-0.091 0.146,-0.036 0.174,-0.24 0.099,-0.07 0.103,-0.182 0.147,-0.084 -0.012,-0.156 0.083,-0.082 0.232,-0.064 0.161,0.077 0.099,0.159 -0.259,0.196 0.133,0.483 -0.188,0.527 -0.123,0.158 -0.23,0.136 -0.069,0.129 -0.271,0.26 -0.082,0.222 -0.012,0.094 -0.051,0.052 z m 1.842,-2.243 -0.035,0.139 -0.12,-0.074 -0.118,-0.162 -0.173,-0.023 -0.128,-0.043 -0.075,-0.076 0.481,-0.035 0.168,0.274 z m -49.308,-0.193 -0.042,0.112 -0.143,-0.028 -0.135,-0.185 0.065,-0.048 0.075,-0.02 0.098,0.021 0.082,0.148 z m 40.014,0.141 -0.126,0.071 -0.21,-0.147 -0.058,-0.061 0.133,-0.144 0.142,-0.041 0.086,0.063 0.042,0.063 -0.018,0.069 0.009,0.127 z m -22.16,-0.181 -0.286,0.016 -0.089,-0.025 -0.021,-0.274 0.314,0.118 0.102,0.008 -0.02,0.157 z m -19.448,-0.038 -0.054,0.041 -0.477,-0.023 -0.307,0.229 -0.213,0.07 -0.764,0 -0.091,-0.031 -0.068,0 -0.041,0.046 -0.243,-0.035 -0.776,-0.203 -0.106,-0.188 0.12,-0.201 0.279,-0.285 0.559,-0.056 2.547,-0.02 0.277,0.245 0.026,0.083 -0.555,0.167 -0.113,0.161 z m 4.301,-0.379 -0.229,0.048 -0.212,-0.099 0.006,-0.133 0.052,-0.124 0.317,-0.064 0.17,0.004 0.182,0.085 0.127,0.089 0.062,0.104 -0.343,0.005 -0.132,0.085 z m 54.157,-0.62 -0.047,0.043 -0.073,-0.091 -0.007,-0.057 0.097,-0.155 0.096,-0.09 0.107,-0.007 -0.027,0.127 -0.146,0.23 z m -82.571,-0.307 -0.175,0.062 -0.134,-0.055 -0.06,-0.079 0.198,-0.194 0.094,-0.046 0.099,-0.015 0.047,0.105 -0.069,0.222 z m 82.688,-0.255 -0.155,0.026 -0.076,-0.229 0.128,-0.059 0.139,0.14 -0.036,0.122 z m 0.29,-0.324 -0.068,0.023 10e-4,-0.138 0.077,-0.122 0.081,-0.07 0.096,-0.003 -0.187,0.31 z m -0.793,0.023 -0.046,0.198 -0.046,0.221 -0.257,0.248 -0.159,0.379 -0.093,0.095 -0.345,0.169 -0.307,-0.211 -0.089,-0.181 0.135,-0.836 0.132,0.028 0.086,-0.006 0.028,-0.055 -0.197,-0.094 -0.037,-0.48 0.01,-0.181 0.149,-0.041 0.186,0.141 0.234,0.251 0.273,0.198 0.343,0.157 z m -76.232,-1.219 0.283,0.32 0.247,0.171 0.292,0.093 0.307,0.009 0.302,0.041 0.352,0.122 0.361,0.056 0.168,-0.021 0.16,-0.063 0.113,-0.004 0.099,0.059 0.25,0.271 0.271,0.248 0.063,0.126 0.184,0.598 0.208,0.172 0.286,0.05 0.336,0 0.334,0.025 0.774,0.14 0.307,-0.02 0.272,-0.14 0.242,0.091 0.657,0.168 0.323,0.038 0.367,-0.048 0.368,-0.01 0.176,0.049 0.169,0.073 0.145,0.026 0.15,-10e-4 0.266,-0.14 0.176,-0.257 0.143,-0.324 0.111,-0.338 0.075,-0.145 0.102,-0.128 0.133,-0.083 0.142,-0.052 0.386,0.032 0.08,0.082 0.432,0.573 0.076,0.05 0.45,0.036 0.125,-0.019 0.274,-0.115 0.157,-0.01 0.289,0.142 0.125,0.121 0.14,0.089 0.708,0.091 0.273,0.246 0.139,0.033 0.492,-0.03 0.341,0.024 0.296,0.066 0.135,0.349 0.109,0.358 0.063,0.122 0.29,0.123 0.118,0.111 -0.031,0.357 0.032,0.34 0.615,0.296 0.658,0.17 0.7,0.016 0.701,-0.059 0.361,-0.073 0.452,-0.126 0.094,0.002 0.875,0.389 0.075,0.06 0.098,0.291 -0.003,0.307 -0.163,0.729 -0.011,0.2 0.016,0.2 0.174,0.435 0.093,0.125 0.317,0.229 0.013,0.12 -0.044,0.12 -0.35,-0.082 -0.213,-0.099 -0.123,-0.164 -0.176,-0.093 -0.329,0.034 -0.615,-0.164 -0.695,-0.254 -1.232,-0.539 -0.336,0.004 -0.322,0.069 -0.34,0.137 -0.354,0.098 -0.26,0.037 -0.261,-0.027 -0.658,-0.129 -0.663,-0.084 -1.699,-0.053 -0.48,-0.123 -0.795,-0.062 -0.632,-0.106 -0.626,-0.148 -1.596,-0.729 -0.522,-0.183 -1.603,-0.348 -0.247,-0.028 -0.581,0.026 -0.366,-0.102 -0.322,-0.002 -0.479,0.113 -0.147,0.081 -0.186,0.171 -0.326,-0.008 -0.323,-0.033 -0.851,-0.164 -0.317,-0.101 -0.305,-0.149 -0.274,-0.194 -0.144,-0.069 -0.735,-0.198 -0.6,-0.068 -1.234,-0.09 -0.27,-0.06 -0.225,-0.072 -0.123,-0.16 0.016,-0.204 0.088,-0.176 0.121,-0.177 0.079,-0.169 -0.902,-0.354 -0.712,-0.193 -0.308,-0.037 -0.309,0 -0.348,0.04 -0.344,-0.019 -0.162,-0.058 -0.165,-0.02 -0.166,0.042 -0.133,-0.016 -0.034,-0.161 0.085,-0.137 0.174,-0.155 0.1,-0.027 0.045,0.243 0.05,0.048 0.154,0.053 0.067,-0.015 0.272,-0.31 0.076,-0.153 0.132,-0.413 0.144,0.08 0.144,-0.049 0.083,-0.066 0.229,-0.955 0.19,-0.279 0.26,-0.231 0.13,-0.057 0.255,0.142 0.517,0.054 0.307,0.094 0.308,0.012 0.301,0.046 0.419,0.168 0.148,-0.018 0.15,-0.052 0.225,-0.183 0.098,-0.292 0.324,0.148 0.477,0.059 0.116,0.088 z m 46.805,-0.095 -0.025,0.134 -0.103,-0.154 -0.094,-0.076 0.01,-0.166 0.133,0.062 0.079,0.2 z m -9.887,0.911 -0.115,0.467 -0.054,-0.165 -0.021,-0.427 -0.071,-0.208 0.045,-0.239 -0.015,-0.613 0.087,-0.283 0.16,0.36 0.042,0.183 -0.058,0.925 z m -21.916,-1.367 -0.06,0.1 -0.27,-0.008 -0.045,-0.112 0.176,-0.204 0.116,-0.013 0.104,0.075 -0.021,0.162 z m 56.376,0.111 -0.171,0.27 -0.116,-0.095 -0.065,-0.001 -0.04,-0.159 0.04,-0.328 -0.144,-0.369 0.189,0.005 0.053,0.11 0.06,0.037 0.187,0.356 0.007,0.174 z m 5.444,-0.403 -0.022,0.108 -0.002,0.199 0.047,0.185 -0.12,0.188 0.112,0.281 0.017,0.14 -0.007,0.198 -0.031,0.089 -0.085,0.26 -0.085,0.093 -0.064,0.026 -0.065,0.079 -0.552,-0.085 -0.238,-0.181 -0.213,-0.195 -0.045,-0.082 -0.25,-0.228 -0.058,-0.077 -0.005,-0.122 0.202,-0.031 0.216,0.004 -0.01,-0.109 0.125,-0.386 -0.328,-0.248 -0.058,-0.104 0.117,-0.07 0.264,0.086 0.323,-0.435 0.095,-0.091 0.046,-0.242 0.181,-0.031 0.128,0.031 0.083,0.151 0.033,0.131 -0.035,0.118 0.155,0.061 0.129,0.289 z m -5.109,0.547 -0.229,0.241 0.215,-0.568 0.045,-0.288 0.2,-0.171 0.297,-0.87 0.066,0.02 0.097,0.085 -0.149,0.638 -0.417,0.448 -0.125,0.465 z m -85.764,-1.186 -0.229,0.014 -0.422,-0.344 -0.069,-0.106 0.119,-0.102 0.127,0.007 0.486,0.217 0.095,0.107 -0.107,0.207 z m 59.664,-0.58 -0.011,0.284 -0.112,-0.016 -0.092,-0.1 -0.025,-0.094 0.005,-0.076 0.05,-0.06 0.185,0.062 z m -4.444,0.466 -0.179,0.075 -0.337,-0.32 -0.143,-0.264 0.034,-0.149 0.101,-0.13 0.048,-0.033 -0.021,-0.136 0.133,-0.066 0.146,0.009 0.096,0.183 0.115,0.05 0.059,0.175 -0.052,0.606 z m 1.689,-0.472 -0.072,0.186 -0.155,0.145 -0.124,0.011 -0.13,-0.03 -0.229,-0.126 -0.059,0.133 -0.181,-0.006 -0.066,-0.172 0.129,-0.509 0.188,-0.19 -0.018,-0.2 -0.156,-0.425 0.097,-0.222 0.437,-0.168 0.381,-0.205 0.117,-0.042 0.106,0.158 0.057,0.724 -0.409,0.573 0.087,0.365 z m 1.501,-2.01 0.065,0.602 -0.021,0.158 -0.158,-0.231 -0.057,-0.046 -0.044,0.046 -0.056,0.025 -0.08,-0.002 -0.104,0.233 -0.01,0.22 -0.079,0.147 -0.041,0.491 0.026,0.132 0.122,-0.065 0.075,-0.017 0.276,0.189 0.146,0.138 -0.041,0.167 -0.187,0.168 -0.217,0.073 -0.162,-0.072 -0.048,0.034 -0.096,0.086 -0.072,0.114 0.021,0.117 -0.185,0.333 -0.107,0.094 -0.222,-0.102 -0.137,0.087 -0.11,-0.008 -0.169,-0.333 0.005,-0.156 0.156,-0.175 10e-4,-0.126 0.077,-0.141 0.172,-0.193 0.099,-0.146 0.003,-0.092 0.073,-0.35 0.028,-0.146 0.05,-0.155 0.078,-0.317 0.011,-0.596 0.263,-0.491 0.257,-0.134 0.102,-0.022 -0.016,0.131 0.313,0.331 z m 29.162,-0.853 0.144,0.149 -0.334,-0.117 -0.478,-0.245 -0.033,-0.164 0.402,0.248 0.299,0.129 z m -28.987,-0.372 -0.274,0.336 -0.191,-0.017 -0.229,-0.221 -0.066,-0.242 -0.006,-0.088 0.156,-0.137 0.525,0.046 0.099,0.122 -0.014,0.201 z m 14.932,-1.474 -0.479,0.146 0.103,-0.272 0.065,-0.072 0.237,0.074 0.074,0.124 z m -0.806,0.249 -0.072,0.102 -0.163,0.067 -0.136,-0.007 0.044,-0.098 -0.034,-0.057 -0.101,0.025 -0.165,0.079 -0.208,0.158 -0.122,-0.078 -0.026,-0.122 0.007,-0.056 0.249,-0.219 0.289,-0.038 0.407,-0.21 0.182,0.01 -0.043,0.133 -0.063,0.095 -0.038,0.1 -0.007,0.116 z m 1.254,-0.357 -0.006,0.118 -0.02,0.037 -0.153,-0.041 -0.109,0.002 -0.097,-0.213 0.027,-0.049 0.201,0.062 0.075,0.021 0.082,0.063 z m -34.515,-0.23 -0.103,0.481 -0.171,-0.273 0.192,-0.323 0.089,-0.065 -0.007,0.18 z m 31.383,-0.417 0.064,0.124 -0.275,-0.078 -0.122,-0.12 0.12,-0.075 0.067,-0.02 0.146,0.169 z m -31.721,1.545 -0.589,0.52 -0.098,-0.132 0.051,-0.529 -0.164,-0.329 0.011,-0.244 0.116,-0.432 0.151,-0.331 0.342,-0.221 0.085,-0.026 -0.021,0.401 0.068,0.151 0.024,0.129 -0.036,0.111 0.064,0.514 0.038,0.125 -0.083,0.162 0.041,0.131 z m 29.629,-2.179 0.462,0.218 0.104,0.142 0.083,0.169 0.091,0.093 0.108,0.076 0.18,0.147 0.047,0.224 -0.041,0.452 -0.209,0.04 -0.196,0.066 -0.404,0.262 -0.199,0.051 -0.213,0.018 -0.151,0.069 -0.151,0.027 -0.393,-0.145 -0.38,-0.17 -0.552,-0.295 -0.102,-0.072 -0.089,-0.158 -0.253,-0.284 -0.063,-0.182 -0.021,-0.518 0.066,-0.119 0.106,-0.063 0.369,0.12 0.243,-0.125 0.698,-0.106 0.711,0.011 0.149,0.052 z m 3.163,-0.423 -0.141,0.233 -0.247,-0.01 -0.043,-0.033 0.292,-0.146 0.139,-0.044 z m -59.221,0.192 -0.047,0.056 -0.155,-0.03 -0.113,-0.078 -0.07,-0.074 -0.018,-0.077 0.151,-0.095 0.319,0.098 -0.067,0.2 z m 1.647,-0.295 -0.113,0.072 -0.066,-0.069 -0.02,-0.077 0.048,-0.097 0.154,-0.009 0.071,0.029 -0.074,0.151 z m 62.532,-0.094 0.645,0.309 0.334,0.045 0.562,-0.04 0.212,0.03 0.536,0.395 0.156,0.271 0.045,0.234 0.083,0.222 0.132,0.056 0.155,0.021 0.202,0.32 0.04,0.104 -0.153,0.803 -0.631,-0.304 -0.609,-0.345 -0.263,-0.128 -0.702,-0.292 -0.107,-0.1 -0.079,-0.132 -0.306,-0.18 -0.61,-0.028 -0.229,0.005 -0.093,0.027 0.024,0.097 0.003,0.197 -0.151,0.054 -0.379,-0.124 -0.338,-0.045 -0.294,-0.122 -0.393,-0.064 -0.044,-0.061 0.034,-0.091 -0.018,-0.085 -0.091,-0.033 -0.177,0.016 -0.171,0.086 -0.142,0.097 -0.208,0.268 -0.106,0.103 -0.344,0.044 -0.143,-0.026 -0.131,-0.066 -0.391,-0.49 -0.132,-0.106 -0.147,-0.086 -0.136,-0.04 -0.141,0.075 -0.073,0.152 -0.033,0.181 -0.039,0.104 -0.169,0.29 -0.14,0.172 -0.05,-0.027 0.071,-0.276 0,-0.156 -0.086,-0.165 -0.055,-0.168 0.661,-0.803 0.239,-0.191 1.042,-0.066 0.619,0.041 0.338,-0.02 0.226,-0.059 0.187,0.028 0.047,0.158 0.117,0.117 0.163,-0.01 0.296,-0.124 0.257,-0.191 0.157,-0.083 0.16,-0.014 0.165,0.013 0.161,0.044 0.435,0.162 z m -82.313,0.885 0.112,0.407 -0.334,-0.277 0.007,-0.196 -0.046,-0.128 -0.202,-0.157 -0.156,-0.197 -0.07,-0.465 0.054,-0.097 0.132,-0.006 0.587,0.61 0.04,0.103 -0.013,0.218 -0.085,0.068 -0.026,0.117 z m 21.841,-0.517 -0.044,0.294 -0.068,0.111 -0.234,0.146 -0.08,0.089 -0.219,-0.014 -0.028,-0.154 -0.073,-0.104 -0.232,-0.12 -0.061,0.029 -0.042,0.179 -0.455,0.125 -0.127,0.011 0.063,-0.236 -0.118,-0.186 -0.009,-0.228 -0.022,-0.1 -0.057,-0.058 0.116,-0.159 -0.02,-0.177 0.123,-0.19 0.068,-0.461 0.481,-0.101 0.104,0.083 0.561,0.104 0.396,0.279 0.211,0.371 -0.234,0.467 z m -22.461,-0.717 -0.2,0.225 -0.33,-0.005 -0.065,-0.139 0.015,-0.336 -0.081,-0.11 0.003,-0.044 0.053,-0.191 0.067,-0.042 0.533,0.473 0.005,0.169 z m 95.898,-1.722 -0.082,0.042 -0.028,-0.121 0.044,-0.163 0.053,-0.026 0.061,0.008 0.079,0.059 -0.127,0.201 z m -96.911,0.612 0.014,0.074 -0.457,-0.245 -0.22,-0.068 -0.195,-0.268 0.061,-0.128 0.008,-0.18 0.029,-0.071 0.14,-0.026 0.182,0.131 0.136,0.319 0.227,0.297 0.075,0.165 z m 73.564,0.302 -0.048,0.051 -0.169,-0.151 -0.113,-0.426 -0.097,-0.113 -0.113,-0.405 0.029,-0.115 0.14,-0.17 0.112,0.002 0.083,0.101 -0.046,0.436 0.251,0.552 -0.029,0.238 z m -6.194,-1.383 0.05,0.112 -0.176,-0.003 -0.073,-0.211 0.018,-0.113 0.181,0.215 z m 6.107,-0.463 0.863,0.093 -0.122,0.101 -0.931,0.161 -0.33,-0.029 -1.01,0.095 -0.131,-0.006 -0.019,-0.156 -0.108,-0.109 0.161,-0.095 0.214,-0.022 0.56,0.036 0.853,-0.069 z m -8.06,0.075 -0.206,0.23 -0.022,-0.123 0.042,-0.112 0.058,-0.079 0.087,-0.039 0.041,0.123 z m 20.209,-0.351 0.034,0.166 0.167,0.153 -0.058,0.238 -0.066,0.036 0.035,0.108 0.072,0.083 -0.13,0.057 -0.095,-0.028 -0.153,0.077 -0.102,0.107 -0.321,0.045 -0.113,-0.099 -0.58,-0.117 -0.371,-0.256 -0.047,-0.077 0.719,-0.301 0.314,-0.08 0.264,0.005 0.332,-0.112 0.099,-0.005 z m -15.109,0.041 0.263,0.099 0.092,0 0.087,-0.116 0.054,-0.019 0.118,0.057 0.027,0.188 0.17,-0.026 0.132,0.064 0.042,0.045 -0.018,0.187 -0.503,0.033 -0.359,0.151 -0.483,-0.136 -0.548,0.233 -0.333,0.081 -0.289,-0.005 -0.247,-0.408 0.144,-0.478 0.104,-0.079 0.184,-0.042 0.508,-0.023 0.855,0.194 z m 29.481,-0.317 1.108,0.14 0.3,-0.018 0.633,0.054 0.528,0.186 0.923,0.034 0.275,0.056 0.213,0.128 -0.517,0.105 -0.243,0.099 -0.452,0.049 -0.378,-0.05 -0.275,0.059 -0.1,-0.096 -0.402,-0.098 -0.515,-0.201 -1.062,-0.233 -0.05,-0.146 0.014,-0.068 z m -74.431,0.078 -0.322,0.117 -0.097,-0.262 0.206,-0.078 0.224,0.068 -0.011,0.155 z m -8.16,0.139 0.097,0.192 0.132,0.173 0.097,0.187 0.133,0.897 0.44,0.771 1.271,0.303 -0.208,0.125 -0.106,0.112 -0.078,0.128 -0.187,0.535 0.018,0.114 0.11,0.181 0.026,0.197 -0.159,-10e-4 -0.179,-0.044 -0.143,-0.074 -0.133,-0.097 -0.144,-0.077 -0.156,-0.05 -0.258,-0.153 -0.349,-0.108 -0.356,-0.085 -0.173,-0.227 -0.082,-0.28 0.088,-0.418 -0.089,-0.116 -0.127,-0.102 -0.156,-0.301 -0.059,-0.352 -0.226,-0.136 -0.298,-0.083 -0.131,-0.067 -0.589,0.129 -0.142,-0.03 -0.125,-0.098 -0.321,-0.103 0.013,-0.195 0.149,-0.156 0.351,-0.157 0.165,-0.132 0.032,-0.174 -0.062,-0.127 0.024,-0.133 0.111,-0.129 0.131,-0.101 0.354,-0.134 0.154,0.233 0.076,0.195 0.094,0.141 0.15,-0.202 -0.096,-0.348 0.269,-0.078 0.264,-0.003 0.199,0.096 0.13,0.15 0.054,0.212 z m 49.259,0.097 -0.193,0.018 -0.129,-0.082 0.012,-0.409 0.117,-0.089 0.057,0.015 0.035,0.122 0.059,0.109 0.096,0.102 -0.054,0.214 z m 12.785,-0.122 -0.172,0.113 -0.086,0.031 -0.414,-0.076 -0.484,0.016 -0.504,0.105 -0.291,-0.089 -0.185,-0.145 0.009,-0.153 0.173,-0.379 0.379,-0.287 0.154,-0.052 0.271,0.078 0.455,0.22 0.358,0.258 0.325,0.201 0.012,0.159 z m -13.866,-1.364 0.062,0.174 -0.102,0.151 0.111,0.283 0.283,-0.377 0.27,-0.048 0.153,0.063 0.105,0.075 0.058,0.143 -0.1,0.307 -0.177,0.144 -0.229,0.023 -0.108,-0.179 -0.15,-0.017 -0.105,0.39 -0.047,0.06 -0.134,0.049 -0.119,-0.107 -0.021,-0.06 0.169,-0.177 -0.092,-0.525 -0.127,0.099 -0.339,0.477 -0.264,0.213 -0.09,-0.108 -0.134,-0.324 0.061,-0.416 0.213,-0.281 0.181,0.019 0.521,-0.088 0.151,0.037 z m -37.893,0.026 -0.56,0.285 -0.132,-0.015 -0.1,-0.101 0.062,-0.55 0.072,-0.164 0.39,-0.018 0.237,0.079 0.124,0.089 0.048,0.184 -0.027,0.111 -0.114,0.1 z m 70.879,-0.18 -0.135,0.051 -0.156,-0.056 -0.148,-0.214 0.053,-0.164 0.173,-0.113 0.145,0.113 0.045,0.144 0.11,0.01 -0.087,0.229 z m -100.477,1.846 -0.259,0.015 -0.554,-0.334 -0.131,-0.15 -0.032,-0.2 -0.531,-0.772 -0.071,-0.177 0.209,-0.634 0.541,-0.153 0.179,0.107 0.063,0.285 0.31,0.514 0.102,0.277 0.077,0.123 0.032,0.096 -0.027,0.066 0.224,0.326 0.16,0.191 0.012,0.309 -0.304,0.111 z m 89.352,-1.29 -0.099,0.078 -0.341,-0.073 -0.177,-0.172 -0.12,-0.231 -0.077,-0.19 -0.021,-0.151 -0.102,-0.185 0.014,-0.067 0.629,-0.195 0.119,0.071 0.263,0.006 0.114,0.141 -0.078,0.613 -0.124,0.355 z m -0.27,-1.5 -0.072,0.142 -0.133,0.096 -1.207,0.17 0.104,-0.102 0.051,-0.101 0.076,-0.052 0.119,0.014 0.06,-0.031 0.061,-0.012 0.067,0.013 0.117,-0.042 0.246,0.03 0.254,-0.024 -0.019,-0.136 0.276,0.035 z m 12.566,-0.352 0.597,0.109 0.218,-0.006 0.213,0.123 0.259,-0.058 0.146,0.04 0.491,0.423 0.242,0.28 0.358,0.241 0.26,0.082 -0.195,0.22 -0.396,0.116 -0.152,0.006 -0.303,-0.131 -0.245,0.024 -0.214,-0.164 -0.037,-0.254 -0.221,-0.572 -0.284,0.164 -0.342,-0.264 -0.093,-0.006 -0.021,0.044 -0.145,-0.089 -0.124,-0.178 -0.012,-0.15 z m -22.683,0.362 -0.032,0.057 -0.293,-0.073 -0.079,-0.04 0.147,-0.395 0.138,0.012 0.121,0.376 -0.002,0.063 z m 9.335,-0.703 -0.161,0.003 -0.291,-0.121 0.169,-0.105 0.107,-0.022 0.094,-0.063 0.052,-0.003 0.115,0.054 0.076,0.091 -0.161,0.166 z m -24.592,-0.34 0.119,0.124 -0.071,0.143 -0.097,-0.036 -0.255,0.002 -0.096,0.011 -0.115,0.084 -0.072,0.003 0.049,-0.132 0.216,-0.2 0.135,0.03 0.187,-0.029 z m 32.579,0.89 0.704,0.042 0.355,-0.028 0.349,0.036 0.142,0.071 0.243,0.215 -0.069,0.141 -0.042,0.292 0.124,0.28 0.202,0.281 0.166,0.3 0.034,0.146 -0.063,0.31 -0.057,0.153 -0.201,0.256 -0.11,0.279 0.071,0.344 0.039,0.347 -0.007,0.318 0.036,0.313 0.109,0.318 0.47,0.87 0.274,0.59 0.088,-0.33 -0.022,-0.366 0.098,-0.132 0.137,-0.07 0.171,0.073 0.048,0.148 0.013,0.324 0.148,0.636 0.19,0.029 0.206,-0.097 0.034,0.194 -0.008,0.36 0.096,0.286 0.085,0.112 0.338,0.232 0.153,0.043 0.447,0.056 0.337,0.018 0.323,-0.083 0.208,-0.213 0.188,-0.231 0.649,-0.532 0.188,-0.255 0.181,-0.39 0.063,-0.083 0.646,-0.422 0.074,-0.15 0.092,-0.29 0.141,-0.28 0.105,-0.145 0.624,-0.137 0.647,-0.074 0.643,-0.258 0.277,-0.222 0.014,-0.146 -0.141,-0.256 -0.006,-0.113 0.148,-0.108 0.573,-0.325 0.662,-0.334 0.532,-0.23 0.294,0.002 0.271,0.203 0.289,0.166 1.513,0.488 0.242,0.152 0.211,0.202 0.303,0.14 0.338,0.067 0.307,0.131 0.291,0.168 0.644,0.314 0.864,0.381 0.221,0.022 0.804,-0.018 0.139,0.072 0.132,0.102 0.122,0.023 0.921,0.071 0.141,0.073 0.134,0.101 0.075,0.276 0.635,0.007 0,0.541 0,0.567 10e-4,0.567 0,0.568 0,0.568 10e-4,0.568 0,0.568 0,0.568 0,0.568 0,0.568 10e-4,0.569 0,0.569 0,0.569 0,0.569 0,0.569 0.001,0.57 0,0.57 0,0.57 0,0.243 -0.087,0.298 -0.194,0.446 -0.034,0.361 0.16,0.281 0.156,0.183 0,0.47 0,0.571 10e-4,0.572 0,0.572 0,0.572 0,0.572 0,0.573 10e-4,0.573 0,0.573 0,0.573 0,0.574 10e-4,0.037 -0.146,-0.095 -0.387,-0.314 -0.351,-0.358 -0.227,-0.334 -0.256,-0.304 -1.09,-0.901 -0.276,-0.296 -0.056,-0.082 0.026,-0.077 0.126,-0.156 0.223,-0.451 -0.233,0.279 -0.277,0.221 -0.404,0.014 -0.396,0.054 -0.367,0.133 -0.373,0.046 -0.187,-0.065 -0.112,-0.166 -0.059,-0.17 -0.026,-0.181 -0.157,0.292 -0.308,0.16 -0.421,0.337 -0.12,-0.07 -0.072,-0.128 -0.024,-0.133 0.081,-0.142 0.058,-0.15 0.085,-0.361 0.188,-0.213 0.12,-0.411 0.078,-0.146 0.04,-0.146 -0.109,-0.166 -0.185,-0.056 -0.127,-0.101 -0.146,-0.279 -0.092,-0.094 -0.167,-0.115 -0.128,-0.133 0.142,-0.101 0.187,-0.041 0.153,0.006 0.276,0.063 0.125,0.003 0.321,-0.103 -0.181,0.032 -0.179,-0.004 -0.57,-0.18 -0.353,-0.187 -0.333,-0.375 -0.004,-0.072 0.235,-0.068 0.507,-0.079 -0.157,-0.191 -0.229,-0.167 -0.08,-0.296 -0.156,-0.183 -0.338,-0.299 -0.233,-0.31 -0.197,-0.63 -0.202,-0.476 0.05,-0.172 0.17,-0.123 -0.258,-0.014 -0.233,-0.088 0.124,-0.231 0.27,-0.137 -0.246,0.035 -0.24,0.067 -0.109,0.013 -0.113,-0.021 -0.06,-0.093 -0.008,-0.132 0.035,-0.233 -0.041,-0.226 -0.213,-0.105 -0.177,-0.161 -0.1,-0.06 -0.13,0.004 -0.127,-0.108 -0.102,-0.156 -1.27,-0.677 -0.075,-0.193 -0.118,0.084 -0.117,0.042 -0.146,-0.111 -0.153,-0.074 -0.167,0.012 -0.154,-0.06 -0.162,-0.034 -0.169,-0.005 -0.667,-0.208 -0.632,-0.329 -0.515,-0.142 -0.317,-0.185 -0.33,-0.15 -0.738,-0.146 -0.748,-0.099 -0.271,-0.003 -0.227,0.032 -0.218,-0.007 -1.238,-0.714 -0.209,-0.325 0.02,-0.19 0.056,-0.157 0.505,-0.045 -0.355,-0.046 -0.146,0.021 -0.293,0.129 -0.158,0.009 -0.224,-0.086 -0.214,-0.108 -0.351,0.1 -0.179,-0.164 -0.062,-0.173 -0.094,-0.079 -0.132,0.008 -0.178,0.063 -0.177,-0.011 -0.114,-0.119 -0.082,-0.155 -0.121,-0.111 -0.146,-0.085 -0.24,-0.201 -0.125,-0.275 0.015,-0.475 0.038,-0.17 0.237,-0.277 0.168,-0.263 -0.208,-0.029 -0.188,0.121 -0.079,0.124 -0.032,0.15 -0.021,0.499 -0.151,0.145 -0.228,-0.012 0.067,0.292 -0.093,0.277 -0.265,0.326 -0.021,0.148 0.042,0.161 -0.06,0.158 -0.428,0.456 -0.143,0.022 -0.316,-0.003 -0.327,0.072 -0.152,-0.106 -0.124,-0.138 -0.093,-0.164 -0.13,-0.337 -0.104,-0.348 0.325,-0.426 -0.112,-0.385 -0.22,-0.331 -0.556,-0.458 -0.576,-0.435 -0.262,-0.088 -0.429,-0.039 -0.136,-0.042 -0.133,-0.163 -0.099,-0.188 0.269,-0.081 0.459,-0.221 0.261,0.011 0.708,0.12 0.217,0.109 0.202,0.064 0.483,-0.365 0.383,-0.477 0.239,-0.104 0.203,-0.035 0.207,0.046 0.411,0.166 0.323,0.078 0.23,0.015 0.12,0.149 0.136,0.067 0.031,-0.225 0.118,-0.26 0.229,-0.081 0.121,-0.019 0.076,-0.067 -0.017,-0.241 -0.303,-0.03 0.165,-0.207 0.147,-0.101 0.051,-0.101 0.003,-0.126 -0.593,0.243 -0.625,0.102 -0.369,-0.028 -0.368,-0.003 -0.736,0.162 -0.279,-0.006 -0.651,-0.066 -0.36,-0.079 -0.278,0.061 -0.269,0.005 -0.281,-0.186 -0.239,-0.232 -0.119,-0.165 -0.158,-0.12 -0.07,-0.161 -0.175,-0.606 -0.016,-0.434 -0.283,-0.008 -0.275,-0.043 -1.229,-0.412 -0.148,0.101 -0.173,0.052 -0.173,0.019 -0.171,-0.021 -0.171,-0.064 0.015,-0.114 0.126,-0.278 0.125,-0.103 0.172,-0.08 0.109,-0.148 0.178,-0.443 0.014,-0.151 -0.02,-0.154 0.015,-0.117 0.11,-0.061 0.463,-0.144 0.962,-0.218 0.243,-0.13 0.201,-0.208 0.234,-0.126 0.107,-0.128 0.124,-0.103 0.744,-0.275 0.321,-0.022 0.328,0.032 0.649,0.163 0.619,0.263 0.537,0.346 0.576,0.248 z m -81.384,-1.091 0.263,0.271 0.063,0.097 -0.13,0.15 -0.104,0.212 -0.06,0.045 -0.201,-0.081 -0.142,0.208 -0.094,-0.333 -0.204,-0.211 0.127,-0.216 0.046,-0.016 0.062,0.007 0.064,0.057 0.31,-0.19 z m 64.81,-0.044 0.324,0.417 -0.218,0.395 0.15,0.221 0.409,0.014 0.094,0.083 0.072,0.1 0.047,0.136 -0.106,0.109 -0.228,0.1 -0.263,-0.144 -0.069,-0.134 -0.054,-0.05 -0.354,0.102 -0.099,0.01 -0.068,-0.187 0.085,-0.268 -0.247,-0.121 -0.227,-0.277 -0.008,-0.111 0.091,-0.193 -0.012,-0.154 0.129,-0.012 0.236,0.208 0.102,-0.196 0.101,-0.082 0.113,0.034 z m -0.89,0.491 -0.176,0.072 -0.191,-10e-4 -0.042,-0.297 0.063,-0.377 0.178,-0.064 0.281,0.08 -0.104,0.095 0.077,0.202 -0.086,0.29 z m -65.99,-0.41 -0.365,0.097 -0.407,-0.07 0.05,-0.167 0.196,-0.195 0.174,0.008 0.317,0.128 0.112,0.115 -0.077,0.084 z m 75.99,-0.959 0.486,0.119 0.11,-0.019 0.705,0.306 0.111,0.152 -0.039,0.103 0.104,0.138 -0.23,0.21 -0.111,0.023 -0.112,-0.079 -0.225,-0.044 -0.26,0.086 -0.165,-0.065 -0.14,-0.192 -0.248,-0.117 -0.351,-0.406 -0.172,0.015 0.045,0.159 0.149,0.105 0.196,0.309 0.113,0.03 0.116,-0.011 0.157,0.129 -0.008,0.199 -0.41,0.078 -0.142,-0.146 -0.031,-0.265 -0.23,0.089 -0.089,0.092 -0.067,0.013 -0.153,-0.276 -0.438,-0.015 -0.291,-0.146 0.144,-0.153 0.021,-0.148 0.189,-0.08 0.191,0.071 0.193,-0.107 0.137,0.027 0.101,-0.068 0.388,-0.043 0.256,-0.073 z m -90.801,1.467 -0.167,0.129 -0.253,-0.125 0.085,-0.179 0.041,-0.247 0.152,-0.196 0.051,-0.23 -0.292,-0.629 0.145,-0.021 0.115,0.068 0.193,0.418 0.168,0.251 -0.067,0.34 -0.171,0.421 z m 17.736,-0.988 0.081,0.046 0.1,-0.145 0.185,0.198 0.114,0.099 0.156,0.099 -0.153,0.004 -0.063,0.091 -0.04,0.018 -0.595,-0.319 -0.381,0.103 -0.261,-0.093 -0.074,-0.064 0.14,-0.175 0.129,-0.401 0.261,0.101 0.063,0.124 -0.016,0.037 0.171,0.075 0.183,0.202 z m 69.517,0.031 -0.122,0.008 -0.102,-0.163 -0.278,-0.181 -0.172,-0.312 0.654,0.515 0.02,0.133 z m -5.881,-0.505 -0.014,0.086 -0.087,-0.12 -0.059,-0.029 0.063,-0.3 0.033,-0.051 0.051,0.205 0.013,0.209 z m -63.887,-0.183 0.024,0.069 -0.132,-0.078 -0.08,-0.047 -0.054,-0.043 -0.292,-0.381 0.125,0.024 0.325,0.335 0.084,0.121 z m -3.943,-1.344 -0.315,0.016 -0.092,-0.036 0.039,-0.262 0.096,-0.158 0.143,0.003 0.159,0.236 -0.03,0.201 z m 67.736,-0.28 -0.101,0.031 -0.029,-0.011 -0.03,-0.112 0.056,-0.19 0.118,-0.002 0.05,0.031 0.01,0.14 -0.074,0.113 z m -0.133,-0.416 -0.096,0.092 -0.091,-0.031 -0.055,-0.118 0.018,-0.085 0.076,-0.055 0.095,0.041 0.053,0.156 z m -67.138,0.354 -0.058,0.038 -0.239,-0.354 0.06,-0.204 0.058,-0.052 0.132,0.125 0.104,0.13 0.076,0.155 -0.133,0.162 z m 1.063,-0.38 0.015,0.08 -0.257,-0.161 -0.007,-0.117 0.033,-0.054 0.153,0.125 0.063,0.127 z m 1.152,-0.093 -0.176,0.082 -0.221,-0.255 0.008,-0.059 0.021,-0.045 0.041,-0.029 0.134,0.132 0.159,0.047 0.034,0.127 z m -3.401,0.244 -0.053,0.107 -0.104,-0.079 -0.548,-0.12 -0.185,-0.013 -0.474,-0.132 -0.144,-0.07 -0.103,-0.092 0.035,-0.169 0.07,-0.102 0.042,-0.284 0.12,-0.116 0.235,0.211 0.261,0.182 0.151,0.083 0.461,0.186 0.163,0.093 0.073,0.315 z m 1.112,-0.841 0.017,0.153 -0.187,-0.037 -0.135,-0.18 0.111,-0.128 0.07,-0.046 0.07,0.17 0.054,0.068 z m -0.723,0.497 -0.082,0.08 -0.142,-0.019 -0.149,-0.094 -0.194,-0.169 -0.218,-0.151 -0.276,-0.095 -0.173,-0.029 -0.069,-0.035 0.066,-0.293 0.182,-0.018 0.588,0.272 0.19,0.148 0.277,0.403 z m 2.41,-0.866 0.178,0.122 0.146,-0.08 -0.006,0.104 -0.029,0.1 -0.172,0.287 -0.288,-0.066 -0.066,-0.093 -0.021,-0.069 0.042,-0.043 0.023,-0.141 0.124,0 0.069,-0.121 z m 1.573,-0.099 0.017,0.209 0.16,0.102 0.041,0.154 -0.028,0.247 -0.15,0.285 -0.067,0.075 -0.199,-0.058 -0.066,-0.095 -0.026,-0.074 0.028,-0.053 -0.147,-0.067 0.095,-0.109 -0.065,-0.153 -0.407,0.096 -0.118,0.003 -0.021,-0.174 0.017,-0.07 0.313,-0.22 0.187,-0.041 0.201,0.044 0.235,-0.101 z m -6.057,0.63 -0.13,0.084 -0.156,-0.132 -0.128,-0.191 -0.067,-0.199 -0.061,-0.326 -0.016,-0.234 0.078,-0.137 0.057,0.005 0.23,0.139 0.152,0.236 0.084,0.074 0.017,0.217 -0.056,0.248 -0.004,0.216 z m -13.88,-1.324 0.608,0.784 0.247,0.105 0.328,0.356 0.08,0.124 -0.083,0.25 -0.072,0.714 -0.157,0.178 -0.383,-0.088 -0.004,-0.125 -0.221,-0.538 -0.4,-0.3 -0.157,-0.016 -0.103,-0.307 -0.202,-0.363 -0.61,-0.664 0.463,0.005 0.225,-0.162 0.052,-0.129 0.037,-0.033 0.352,0.209 z m 14.062,0.016 0.021,0.358 -0.209,-0.094 -0.163,-0.142 -0.261,-0.105 -0.316,-0.034 -0.232,-0.093 -0.162,-0.166 -0.007,-0.077 0.016,-0.062 0.052,-0.049 1.199,0.322 0.062,0.142 z m 62.856,1.294 -0.535,0.473 -0.163,0.229 -0.143,0.246 -0.211,0.273 -0.242,0.241 -0.121,0.071 -0.299,0.13 -0.172,0.05 -0.324,0.017 -0.976,0.192 -0.32,0.022 -0.319,-0.008 -0.604,-0.048 -0.126,-0.025 -0.241,-0.248 -0.272,-0.196 -0.24,-0.021 -0.245,0.021 -1.765,0.014 -0.617,0.037 -0.614,0.087 -0.335,-0.04 -0.331,-0.098 -0.25,-0.035 -0.252,0.01 -1.158,0.148 -0.292,-0.014 -0.586,-0.189 -0.34,-0.038 -0.335,0.051 -0.311,0.17 -0.118,0.114 -0.322,0.39 -0.182,0.284 -0.139,0.354 -0.118,0.361 -0.063,0.296 -0.004,0.31 0.056,0.348 0.087,0.344 0.097,0.263 0.402,0.608 0.082,0.086 0.437,0.171 0.259,0.22 0.245,0.61 0.176,0.312 0.171,0.004 0.192,-0.022 0.334,0.04 0.33,0.08 0.322,-0.187 0.18,-0.354 0.181,-0.263 0.434,-0.5 0.247,-0.231 0.157,-0.076 0.161,0.033 0.136,0.132 0.158,0.105 0.324,0.057 0.327,-0.035 0.348,-0.163 0.125,-0.1 0.104,-0.126 0.295,-0.103 0.701,-0.001 0.361,0.037 0.646,-0.041 -0.009,-0.092 -0.125,-0.098 -0.032,-0.079 0.12,-0.051 0.416,-0.114 0.424,-0.081 0.309,0.058 0.275,0.159 0.106,0.164 0.047,0.197 -0.106,0.511 -0.052,0.119 -0.22,0.061 -0.207,-0.068 -0.205,-0.264 -0.29,-0.097 -0.411,0.08 -0.142,0.076 -0.126,0.105 -0.232,0.274 -0.193,0.309 -0.419,0.481 -0.483,0.418 -0.234,0.16 -0.262,0.107 -0.839,0.277 -0.221,0.206 -0.172,0.267 -0.19,0.091 -0.22,0.029 -0.165,-0.05 -0.334,-0.151 -0.11,0.124 -0.019,0.189 0.164,0.067 0.266,0.209 0.205,0.295 0.131,0.063 0.293,0.096 0.123,0.092 0.22,0.253 0.347,0.588 0.118,0.318 0.193,0.26 0.586,0.441 0.033,0.125 -0.036,0.146 0.045,0.132 0.21,0.253 0.05,0.164 -0.229,0.208 -0.013,0.3 -0.141,0.404 -0.031,0.136 0.004,0.124 0.099,0.115 0.115,0.091 0.158,0.048 0.138,0.079 0.266,0.315 0.139,0.083 0.088,0.115 -0.009,0.171 0.121,0.1 0.111,0.179 0.171,0.043 0.079,-0.051 0.055,-0.077 0.14,0.029 0.082,0.125 0.048,0.16 0.016,0.176 -0.007,0.334 -0.07,0.12 -0.153,-0.006 -0.275,-0.138 -0.013,0.1 0.019,0.096 -0.14,0.032 -0.16,-0.014 -0.402,0.013 -0.742,0.208 -0.26,0.123 -0.169,0.223 -0.012,0.155 0.065,0.325 -0.099,0.114 -0.34,0.043 -0.475,-0.087 -0.287,-0.087 -0.16,-0.073 -0.208,-0.219 -0.079,-0.28 0.154,-0.833 0.043,-0.107 0.075,-0.095 0.079,-0.151 0.019,-0.178 -0.227,-0.217 -0.342,-0.086 -0.289,-0.181 -1.118,-1.016 -0.063,-0.098 -0.002,-0.168 0.045,-0.157 0.367,-0.555 0.047,-0.106 0.045,-0.438 -0.011,-0.361 -0.041,-0.361 -0.174,-0.227 -0.311,-0.069 -0.321,-0.011 -0.313,0.072 -0.308,0.182 -0.568,0.382 -0.226,0.223 -0.02,0.289 0.13,0.283 0.168,0.258 0.09,0.283 0.124,1.003 -0.004,0.113 -0.146,0.292 -0.058,0.652 0.063,0.921 0.1,0.565 -0.043,0.307 -0.266,0.66 -0.081,0.362 -0.006,0.149 0.313,0.69 0.072,0.273 0.038,0.283 -0.333,-0.139 -0.154,0.007 -0.157,0.042 -0.347,0.045 -0.353,0.006 -0.123,0.052 -0.25,0.184 -0.152,0.074 -0.132,0.014 -0.448,-0.23 -0.265,-0.25 -0.244,-0.271 -0.045,-0.31 0.085,-0.318 0.121,-0.34 0.241,-0.565 -0.012,-0.379 0.083,-0.311 0.138,-0.301 0.05,-0.278 0.033,-1.088 -0.034,-0.097 -0.331,-0.646 -0.038,-0.108 -0.002,-0.174 0.036,-0.167 0.007,-0.149 -0.076,-0.115 -0.134,-0.105 -0.162,-0.046 -0.343,0.045 -0.688,0.174 -0.203,-0.153 -0.152,-0.236 -0.099,-0.33 -0.057,-0.345 0.026,-0.324 0.102,-0.313 -0.082,-0.219 -0.127,-0.238 -10e-4,-0.123 0.072,-0.107 0.124,-0.09 0.152,-0.052 0.142,-0.095 0.377,-0.319 0.12,-0.281 0.009,-0.346 0.096,-0.33 0.192,-0.305 0.228,-0.282 0.073,-0.291 -0.111,-0.462 0.044,-0.21 -0.038,-0.247 -0.004,-0.244 0.141,-0.459 0.418,-0.939 0.408,-0.499 0.162,-0.131 0.212,0.232 0.161,0.273 0.003,-0.247 -0.048,-0.237 -0.162,-0.565 -0.141,-1.102 0.039,-0.104 0.143,0.017 0.146,-0.097 0.076,-0.173 -0.151,-0.409 -0.007,-0.145 0.292,-0.575 0.238,-0.209 0.104,-0.129 0.06,-0.351 0.124,-0.132 0.156,-0.095 0.206,-0.243 0.111,-0.306 0.068,-0.023 0.08,-0.011 0.124,0.267 0.139,0.108 0.282,0.087 0.241,-0.103 0.067,-0.134 0.091,-0.115 0.146,-0.12 0.123,-0.137 0.137,-0.317 0.181,-0.289 0.124,-0.101 0.149,-0.063 0.166,-0.039 0.16,-0.005 0.355,0.181 0.206,0.036 0.211,-0.013 0.133,0.03 0.101,0.082 0.092,0.164 0.113,0.142 0.105,0.07 0.115,0.033 0.773,-0.058 0.676,0.16 0.922,0.036 0.316,0.094 0.304,0.123 0.371,0.216 0.136,0.048 0.152,-0.012 0.189,-0.204 0.148,-0.044 0.15,-0.008 0.594,0.038 1.596,0.25 0.236,-0.034 0.962,-0.479 0.386,-0.454 0.345,-0.126 0.116,-0.206 0.07,-0.246 0.122,-0.066 0.289,-0.07 0.114,-0.073 0.205,-0.303 0.242,-0.268 0.119,-0.081 0.342,0.043 0.151,0.117 0.192,0.394 -0.033,0.066 -0.227,0.196 -0.066,0.083 -0.251,0.554 -0.172,0.272 -0.214,0.243 z m -65.055,-3.021 0.151,0.229 0.032,0.148 -0.111,0.17 -0.041,0.261 -0.327,0.205 -0.286,-0.049 -0.093,-0.073 -0.181,-0.396 0.018,-0.336 0.113,-0.128 0.266,0.02 0.27,-0.184 0.189,0.133 z m 73.037,3.431 0.204,0.062 0.212,-0.017 0.105,-0.125 0.029,-0.162 0.107,-0.301 0.247,-0.204 0.173,-0.032 0.123,-0.086 -0.021,-0.223 0.013,-0.219 0.183,-0.234 0.565,-0.326 0.323,-0.116 0.419,-0.037 0.047,0.125 -0.048,0.178 0.081,0.269 -0.04,0.728 -0.096,0.103 -0.433,0.251 -0.473,0.201 -0.133,0.084 -0.117,0.2 0.01,0.199 0.386,0.265 0.599,0.248 0.123,0.116 0.08,0.195 0.022,0.218 0.145,0.104 0.203,0.05 0.134,0.103 0.102,0.145 -1.008,-0.339 -0.264,-0.149 -0.318,-0.018 -0.315,-0.045 -0.321,-0.13 -0.345,-0.031 -0.165,0.094 -0.064,0.184 -0.039,0.206 0.076,0.256 -0.007,0.156 -0.065,0.281 0.25,0.831 0.313,0.66 0.461,0.687 0.228,0.236 0.255,0.213 -0.414,-0.063 -0.125,-0.229 -0.524,-0.228 -0.101,-0.136 -0.342,-0.652 -0.1,-0.122 -0.315,-0.222 -0.139,-0.163 -0.047,-0.22 0.035,-0.231 -0.018,-0.32 0.012,-0.318 0.065,-0.388 -0.113,-0.137 -0.147,-0.128 -0.171,-0.297 -0.051,-0.338 0.014,-0.194 0.07,-0.172 0.095,-0.149 0.021,-0.146 -0.246,-0.211 -0.258,-0.602 -0.023,-0.312 0.328,-0.601 -0.007,-0.292 0.065,-0.173 0.035,-0.184 0.172,-0.4 0.279,-0.341 0.474,-0.478 0.18,-0.104 0.203,-0.068 0.018,0.117 -0.032,0.104 -0.35,0.486 -0.047,0.11 -0.009,0.204 0.167,0.121 0.182,0.247 0.035,0.328 0.007,0.35 -0.04,0.352 -0.067,0.118 -0.287,0.354 -0.653,0.415 -0.056,0.103 0.005,0.114 0.12,0.138 0.154,0.104 z m -85.314,-3.423 -0.016,0.063 -0.29,-0.293 -0.328,-0.163 0.136,-0.042 0.271,0.045 0.108,0.042 0.104,0.146 0.015,0.202 z m 87.338,0.066 -0.444,0.048 -0.101,-0.133 -0.117,-0.6 0.315,-0.48 0.397,-0.282 0.271,-0.071 0.095,-0.004 0.242,0.346 -0.184,0.695 -0.212,0.355 -0.262,0.126 z m -8.55,-1.673 -0.029,0.062 -0.104,-0.327 0.087,-0.164 0.125,0.06 0.031,0.058 -0.119,0.156 0.009,0.155 z m -81.23,0.813 -0.176,0.026 -0.17,-0.06 -0.141,-0.16 -0.754,-0.464 -0.234,-0.007 -0.164,-0.119 -0.2,-0.041 -0.212,-0.31 -0.045,-0.166 0.154,-0.081 0.097,-0.17 0.251,0.075 0.286,0.3 0.291,0.112 0.079,0.057 0.142,0.166 0.665,0.408 0.072,0.139 0.046,0.139 0.013,0.156 z m 34.867,-1.522 -0.137,0.146 -0.146,-0.091 0.226,-0.296 0.053,-0.02 0.004,0.261 z m -8.776,0.119 -0.117,0.011 -0.035,-0.083 0.005,-0.143 -0.01,-0.114 -0.034,-0.085 0,-0.143 0.108,0.071 0.083,0.067 0.096,0.048 0.078,0.032 0.041,0.022 -0.077,0.202 -0.138,0.115 z m 1.472,-0.821 -0.004,0.192 -0.194,-0.113 -0.038,-0.213 0.064,-0.069 0.133,0.037 0.039,0.166 z m 31.919,-0.345 -0.035,0.092 -0.24,-0.225 -0.063,-0.163 0.029,-0.127 0.249,-0.011 0.124,0.08 -0.064,0.354 z m 22.451,-0.434 -0.07,0.085 -0.341,-0.156 0.017,-0.247 -0.046,-0.122 -0.092,-0.128 -0.037,-0.125 0.038,-0.137 0.21,0.175 0.118,0.278 0.162,0.264 0.041,0.113 z m 3.351,-0.929 -0.046,0.032 -0.101,-0.075 -0.063,-0.083 0.004,-0.083 0.072,-0.042 0.146,0.127 0.003,0.07 -0.015,0.054 z m -0.372,-0.296 0.007,0.118 -0.17,-0.268 -0.066,-0.317 0.135,0.113 0.151,0.234 -0.057,0.12 z m -24.795,-0.871 0.094,0.267 0.014,0.102 -0.521,0.14 -0.314,-0.328 0.067,-0.133 0.271,0.006 0.389,-0.054 z m -26.853,1.387 -0.384,0.103 -0.222,-0.144 0.24,-0.177 0.085,-0.012 0.056,-0.035 0.02,-0.072 -0.434,-0.117 -0.124,-0.103 -0.118,-0.262 0.003,-0.167 0.558,-0.441 0.13,-0.047 0.021,0.183 0.385,0.462 0.017,0.308 -0.015,0.111 -0.218,0.41 z m 23.117,-1.873 0.101,0.06 0.14,-0.002 0.166,-0.044 0.408,0.042 0.722,0.009 0.497,0.105 0.486,0.297 0.242,0.06 0.104,0.002 -0.023,0.023 -0.192,0.081 -0.091,0.16 0.265,0.245 0.018,0.163 0.205,0.146 0.251,0.227 0.01,0.074 0.085,0.102 0.043,0.125 -0.177,0.124 -0.237,0.023 -0.176,-0.117 -0.161,-0.146 -0.042,0.181 -0.125,0.104 -0.456,-0.03 -0.326,10e-4 -0.324,0.045 0.162,0.028 0.147,0.058 0.505,0.462 0.108,0.171 -0.177,0.34 0.086,0.139 0.195,0.08 0.238,0.169 0.169,0.017 0.122,0.096 0.005,0.166 0.071,0.15 -0.192,0.061 0.19,0.04 0.17,0.077 -0.093,0.078 -0.072,0.095 0.078,0.051 0.233,0.087 0.102,0.081 0.053,0.217 0.228,0.355 0.416,0.458 0.091,0.167 -10e-4,0.154 -0.069,0.132 -0.237,0.154 -0.189,0.204 -0.023,0.074 -0.258,0.094 0.118,0.069 0.094,0.094 0.179,0.283 0.427,0.46 0.215,0.172 0.883,0.624 0.47,0.272 0.6,0.622 0.311,0.144 0.061,0.173 -0.26,0.266 -0.378,0.133 -0.625,0.071 -0.627,-0.093 -0.324,-0.076 -0.282,-0.153 -0.222,-0.307 -0.294,-0.166 0.113,0.186 0.071,0.19 -0.037,0.207 -0.115,0.162 -0.198,0.119 -0.212,0.097 -0.09,0.068 -0.538,1.083 -0.087,0.293 -0.164,1.216 -0.003,0.344 0.242,0.643 0.021,0.337 0.048,0.146 -0.032,0.121 -0.114,0.072 -0.462,0.196 -0.326,0.163 -0.265,0.232 -0.214,0.289 -0.188,0.209 -0.25,0.1 -0.182,-0.015 -0.146,-0.096 -0.103,-0.186 -0.059,-0.203 -0.038,0.15 0.007,0.147 0.086,0.157 0.033,0.166 -0.05,0.169 -0.107,0.135 -0.29,0.147 -0.16,0.126 -0.031,0.223 -0.077,0.125 -0.111,0.097 -0.409,0.222 -0.092,0.089 -0.067,0.113 0.218,-0.018 0.2,0.018 0.015,0.221 0.063,0.165 -0.08,0.361 -0.308,0.244 0.154,0.051 0.139,0.08 0.309,0.059 0.104,0.256 -0.046,0.31 -0.056,0.278 -0.222,0.077 -0.138,-0.051 -0.137,0.005 -0.101,0.084 -0.026,0.144 0.191,-0.071 -0.011,0.36 -0.052,0.351 -0.063,0.194 -0.117,0.158 -0.177,0.051 -0.167,-0.119 -0.034,0.138 0.051,0.116 0.238,0.282 -0.146,0.062 -0.106,0.096 -0.048,0.14 -0.259,0.321 -0.115,0.236 -0.049,0.252 -0.121,0.2 -1.959,0.872 -1.585,0.734 -0.114,-0.05 -0.077,-0.112 -0.054,-1.141 -0.196,-0.583 -0.029,-0.329 -0.224,0.293 -0.137,-0.03 -0.148,-0.075 -0.111,-0.096 -0.009,-0.126 0.12,-0.362 -0.145,0.199 -0.158,0.153 -0.164,-0.019 -0.142,-0.076 -0.052,-0.118 -0.075,-0.018 -0.347,0.322 -0.457,0.173 -0.255,-0.003 -0.2,-0.099 0.01,-0.246 -0.021,-0.24 -0.056,-0.141 -0.123,-0.051 -0.113,0.018 -0.328,0.125 -0.117,-0.015 -0.067,0.063 -0.868,-0.874 -0.175,0.708 -0.6,0.376 -0.442,0.219 -0.439,-0.082 -0.445,-0.14 -0.444,0.169 -0.482,0.414 -0.133,0.063 -0.139,-10e-4 -0.102,-0.054 0.035,-0.314 0.004,-0.314 -0.036,-0.699 -0.038,-0.138 -0.139,-0.192 -0.184,-0.139 -0.102,0.101 -0.093,0.139 -0.366,-0.006 -0.357,-0.111 -0.304,0.063 -0.604,0.277 -0.32,0.043 -0.172,-0.063 -0.11,-0.149 0.063,-0.137 0.133,-0.105 -0.248,0.083 -0.211,0.14 -0.092,0.09 -0.099,-0.045 -0.264,-0.316 -0.552,0.118 -0.074,0.036 -0.136,0.108 -0.131,-0.054 -0.065,-0.115 -0.023,-0.66 -0.281,-1.269 -0.077,-0.648 -0.062,-0.153 -0.322,-0.233 0.011,-0.334 0.168,-0.28 0.035,-0.326 -0.048,-0.354 -0.101,-0.346 -0.127,-0.261 -0.182,-0.223 -0.241,-0.25 -0.297,-0.187 -0.64,-0.21 -0.337,0.019 -0.126,-0.083 -0.084,-0.107 0.034,-0.21 0.114,-0.144 0.153,-0.036 0.019,-0.082 -0.325,-0.169 -0.271,-0.23 -0.085,-0.138 -0.026,-0.152 0.002,-0.351 0.078,-0.222 0.043,-0.12 0.083,-0.371 0.177,-0.113 -0.028,-0.068 -0.076,-0.051 -0.11,-0.122 -0.091,-0.14 -0.207,-0.238 -0.365,-0.286 -0.062,-0.494 -0.047,-0.728 0.03,-0.331 0.117,-0.619 0.203,-0.195 0.161,-0.054 0.121,-0.083 -0.1,-0.012 -0.086,0.031 -0.154,0.021 0.127,-0.554 0.057,-0.16 0.255,-0.31 0.299,-0.274 0.126,-0.323 0.17,-0.283 0.703,-0.292 -0.253,0.366 0.028,0.133 0.062,0.118 0.182,0.083 0.052,0.451 0.229,0.256 0.23,0.234 0.17,0.115 0.187,0.167 0.131,0.155 0.138,0.13 0.208,0.127 0.563,0.541 0.235,0.159 0.175,0.159 0.124,0.056 0.307,-0.045 0.907,-0.388 0.163,-0.025 0.295,-0.067 0.521,0.021 0.551,0.132 0.179,0.004 0.17,-0.079 0.236,0.023 0.22,0.041 0.11,-0.034 0.32,-0.283 0.436,-0.084 0.141,-0.28 0.109,-0.264 0.052,-0.281 0.182,-0.113 0.255,-0.098 0.378,-0.124 1.311,-0.022 0.127,0.054 0.027,0.144 -0.027,0.109 0.052,0.065 0.174,0.006 0.161,0.066 0.653,0.226 0.278,0.07 0.155,-0.018 0.306,0.202 0.167,-0.069 0.221,-0.142 0.21,-0.191 0.188,-0.151 0.273,-0.059 0.354,0.008 0.418,-0.052 0.315,-0.081 0.352,0.134 0.094,-0.042 0.061,-0.131 0.182,-0.287 0.081,-0.193 0.07,-0.37 0.049,-0.088 0.134,-0.051 0.137,-0.07 0.036,-0.111 0.05,-0.129 -0.041,-0.108 -0.078,-0.091 -0.082,-0.309 0.026,-0.141 0.051,-0.105 0.141,-0.053 0.372,-0.227 0.33,-0.266 0.181,-0.13 0.079,-0.084 0.005,-0.122 -0.144,-0.127 -0.138,-0.061 -0.01,-0.147 0.005,-0.102 0.042,-0.096 -0.021,-0.093 -10e-4,-0.139 0.088,-0.15 0.203,-0.222 0.16,-0.144 0.178,0.089 0.207,-0.041 0.197,-0.072 0.109,-0.262 0.017,-0.125 -0.026,-0.1 0.068,-0.373 0.017,-0.054 0.129,-0.235 0.013,-0.158 -0.073,-0.367 0.046,-0.278 0.021,-0.575 0.077,-0.103 0.089,-0.298 0.144,-0.311 0.291,-0.169 0.152,-0.222 0.067,-0.042 0.1,-0.002 0.352,0.162 0.316,-0.18 0.286,-0.021 0.236,0.024 0.133,0.074 0.131,0.053 0.282,-0.175 0.106,0.039 z m 28.803,0.913 -0.113,0.058 -0.182,-0.021 -0.02,-0.142 0.185,-0.255 0.122,-0.269 -0.13,-0.067 -0.127,-0.172 -0.005,-0.2 0.104,-0.37 0.154,0.03 0.148,0.16 0.061,0.3 0.097,0.228 -0.206,0.31 -0.088,0.41 z m -85.103,-3.345 0.344,0.025 0.639,-0.152 0.351,0.015 0.331,0.11 0.294,0.063 0.732,-0.081 0.138,0.021 0.132,0.063 0.112,0.1 0.335,0.364 0.566,0.448 0.163,0.287 0.093,0.323 0.059,0.075 0.64,0.617 0.069,0.258 -0.09,0.357 0.186,0.284 0.62,0.267 0.366,0.194 0.078,0.119 0.054,0.142 0.203,0.21 0.254,0.137 0.793,0.361 1.04,0.754 0.591,0.358 0.489,0.544 0.177,0.26 0.146,0.281 0.297,0.409 0.505,0.505 0.128,0.154 0.136,0.223 0.157,0.207 0.188,0.19 0.224,0.146 0.229,0.047 0.369,0.365 0.199,0.114 -0.031,-0.286 -0.168,-0.25 0.003,-0.15 0.029,-0.135 0.137,-0.113 0.165,-0.032 0.31,0.104 0.503,0.433 0.212,0.252 0.159,0.348 0.134,0.361 0.2,0.18 0.276,0.063 0.307,0.026 0.282,0.111 0.66,0.5 0.219,0.235 0.166,0.276 0.114,0.327 0.071,0.343 0.044,0.079 0.424,0.414 0.223,0.175 0.272,0.085 0.795,0.093 0.279,0.143 0.232,0.238 0.097,0.242 -0.165,0.214 -0.621,0.328 -0.663,0.227 0.645,-0.078 0.326,-0.095 0.3,-0.148 0.297,-0.189 0.472,-0.264 0.175,-0.054 0.206,0.019 0.187,0.075 0.28,0.259 0.264,0.274 0.197,0.319 0.123,0.355 -0.226,0.186 -0.328,0.137 -0.451,0.343 -0.048,0.136 0.093,0.087 -0.11,0.252 0.253,0.156 0.038,0.132 -0.219,0.189 0.021,0.117 0.264,0.5 0.126,0.114 0.403,0.254 0.614,0.257 0.34,0.118 0.386,0.091 0.165,-0.002 0.289,-0.042 0.059,0.1 0.124,0.492 0.06,0.312 0.089,0.663 0.112,0.275 -0.007,0.336 0.147,0.286 0.303,0.183 0.321,0.149 0.152,0.146 -0.002,0.22 -0.052,0.174 -0.108,0.135 -0.334,0.287 -0.06,0.124 -0.047,0.316 0.057,0.145 0.134,0.008 0.104,-0.076 0.4,-0.424 0.108,-0.074 0.151,-0.06 0.154,-0.038 0.731,-0.003 0.311,0.067 0.275,0.138 0.243,0.173 0.891,1.105 0.407,0.61 0.032,0.152 0.007,0.158 -0.069,0.122 -0.37,0.417 -0.047,0.115 -0.115,0.454 0.021,0.327 0.123,0.137 0.099,0.149 -0.008,0.135 -0.244,0.672 -0.025,0.115 0.154,1.093 0.011,0.296 -0.031,0.375 0.022,0.604 -0.2,1.868 -0.037,0.111 -0.153,0.286 -0.201,-0.002 -0.163,-0.05 -0.113,-0.109 -0.063,-0.135 -0.092,-0.111 -0.486,-0.345 -0.127,0.057 -0.494,0.428 -0.131,0.063 -0.165,-0.052 -0.26,-0.128 -0.815,-0.45 -0.05,0.144 -0.011,0.195 0.162,0.49 0.023,0.214 -0.148,0.042 -0.083,-0.009 -0.339,-0.284 -0.313,-0.315 -0.355,-0.426 -0.26,-0.202 -0.234,-0.226 -0.66,-0.858 -0.172,-0.131 -1.023,-0.605 -0.206,-0.144 -0.262,-0.25 -0.281,-0.223 -0.617,-0.351 -1.07,-0.89 -0.465,-0.511 -0.517,-0.824 -0.169,-0.21 -0.869,-0.618 -0.474,-0.374 -0.198,-0.215 -0.461,-0.749 -0.135,-0.252 -0.17,-0.223 -0.279,-0.181 -0.246,-0.212 -0.488,-0.677 -0.154,-0.27 -0.116,-0.292 0.021,-0.585 -1.035,-1.771 -0.26,-0.552 -0.241,-0.766 -0.053,-0.077 -0.565,-0.686 -0.199,-0.22 -0.242,-0.206 -0.197,-0.241 -0.39,-0.783 -0.145,-0.217 -0.203,-0.16 -0.738,-0.296 -0.275,-0.165 -0.217,-0.234 -0.133,-0.299 -0.146,-0.634 -0.349,-0.963 -0.39,-1.29 -0.264,-0.578 -0.301,-0.454 -0.088,-0.105 -1.34,-0.817 -0.229,-0.121 -0.243,-0.072 -0.347,-0.052 -0.265,-0.211 -0.108,-0.379 -0.061,-0.508 -0.066,-0.303 -0.073,-0.172 -0.56,-0.359 -0.22,-0.284 -0.183,-0.313 -0.167,-0.242 -0.616,-0.836 -0.211,-0.219 -0.261,-0.153 -0.773,-0.162 -0.227,-0.139 -0.375,-0.475 -0.227,-0.242 -0.68,-0.533 -1.149,-1.115 -0.235,-0.278 -0.176,-0.29 -0.143,-0.311 -0.49,-0.862 0.04,-0.174 0.073,-0.181 -0.011,-0.15 -0.054,-0.148 0.011,-0.133 0.146,-0.079 0.327,-0.101 0.339,0.012 0.314,0.043 0.304,0.083 0.292,0.181 0.522,0.458 0.297,0.159 0.33,0.077 0.678,0.106 z m -3.173,-1.633 -0.055,0.079 -0.167,-0.041 -0.184,-0.255 0.068,-0.049 0.113,0.026 0.216,0.059 0.019,0.095 -0.01,0.086 z\"\n\t\t\t\tid=\"ID\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 454.63575,277.7544 -0.444,0.314 -0.069,0.119 -0.125,0.479 -0.015,0.136 -0.143,0.251 -0.135,0.279 -0.157,0.108 -0.234,0.086 -0.133,0.085 -0.168,-0.043 -0.212,0.007 -0.106,0.095 0.005,0.073 0.063,0.083 0.186,0.128 0.207,0.115 -0.023,0.101 -0.111,0.114 -0.703,0.284 -0.209,0.171 -0.073,0.113 0.075,0.189 0.561,0.565 0.095,0.062 0.083,0.329 0.495,0.137 0.203,0.205 0.174,0.049 0.379,-0.018 0.152,0.077 0.086,-0.059 0.05,-0.108 0.319,-0.278 0.105,-0.122 -0.063,-0.169 -0.068,-0.129 0.194,-0.257 0.235,-0.254 0.118,0.008 0.201,0.156 0.166,0.217 0.022,0.168 0.031,0.122 0.157,0.26 0.101,0.09 0.272,0.052 0.064,0.102 -0.049,0.376 0.041,0.125 0.285,0.006 0.303,-0.03 0.106,0.014 0.109,-0.079 0.168,-0.085 0.241,0.029 0.118,0.168 0.053,0.173 -0.207,0.065 -0.216,-0.035 -0.105,0.113 -0.007,0.218 0.073,0.281 0.145,0.199 0.115,0.448 0.096,0.496 0.148,0.299 0.031,0.37 -0.022,0.182 0.027,0.327 -0.063,0.115 0.047,0.306 0.175,0.631 0.077,0.351 0.049,0.764 -0.124,0.285 -0.166,0.271 -0.109,0.32 -0.083,0.345 -0.051,0.555 -0.36,0.648 -0.153,0.161 -0.178,0.099 0.388,0.452 -0.317,0.201 -0.345,0.063 -0.382,-0.113 -0.238,0.014 -0.218,0.146 -0.085,0.088 -0.069,-0.042 -0.143,-0.37 -0.105,0.382 -0.22,0.122 -0.377,-0.026 -0.63,0.102 -0.243,0.108 -0.101,0.17 -0.075,0.196 -0.099,0.115 -0.111,0.061 -0.487,0.144 -0.096,0.058 -0.226,0.315 -0.295,0.182 -0.245,0.055 -0.217,-0.183 -0.089,-0.11 -0.101,-0.056 -0.334,0.009 0.105,0.057 0.068,0.129 0.033,0.248 -0.038,0.243 -0.165,0.123 -0.196,0.023 -0.31,0.251 -0.41,0.068 -0.222,0.231 -1.356,0.39 -0.077,0.004 -0.187,-0.099 -0.203,-0.044 -0.202,0.031 -0.568,0.218 -0.275,-0.043 0.351,-0.542 0.471,-0.274 0.049,-0.075 -0.154,-0.037 -0.896,0.19 -0.311,0.162 -0.311,0.047 0.144,-0.248 0.401,-0.339 0.215,-0.16 0.131,-0.064 0.15,-0.2 0.423,-0.227 -1.362,0.468 -0.358,-0.057 -0.084,-0.13 -0.278,0.062 -0.106,-0.317 0.413,-0.479 0.241,-0.207 0.286,-0.112 0.275,-0.161 0.102,-0.196 -0.129,-0.063 -0.824,0.05 -0.395,-0.042 0.021,-0.156 0.073,-0.173 0.409,-0.296 0.222,-0.047 0.197,0.028 0.192,0.076 0.157,0.099 0.464,-0.057 -0.194,-0.189 -0.034,-0.385 -0.148,-0.129 0.189,-0.179 0.217,-0.108 0.362,-0.371 0.129,-0.057 0.716,-0.09 0.772,-0.195 0.765,-0.27 -0.393,-0.151 -0.188,-0.2 -0.302,0.403 -0.218,0.154 -0.614,0.083 -0.194,-0.045 -0.274,-0.125 -0.085,0.047 -0.079,0.096 -0.407,0.197 -0.427,0.047 0.497,-0.362 0.631,-0.615 0.14,-0.194 0.2,-0.339 -0.062,-0.151 -0.13,-0.086 0.457,-0.7 0.161,-0.127 0.292,-0.021 0.215,-0.111 0.095,0 0.085,-0.042 0.188,-0.21 -0.29,-0.134 -0.3,-0.069 -0.927,0.073 -0.122,-0.016 -0.115,-0.065 -0.075,-0.093 -0.056,-0.239 -0.068,-0.054 -0.209,0 -0.207,0.073 -0.144,-0.007 -0.141,-0.105 0.226,-0.245 -0.291,-0.058 -0.294,0.048 -0.245,-0.075 -0.007,-0.154 0.111,-0.154 -0.146,-0.146 -0.03,-0.185 0.155,-0.091 0.169,0.03 0.345,-0.137 0.443,-0.066 -0.38,-0.135 -0.151,-0.116 -0.007,-0.177 0.03,-0.152 0.439,-0.257 0.468,-0.113 -0.035,-0.169 0.033,-0.184 -0.473,-0.053 -0.467,0.129 0.05,-0.351 0.112,-0.318 0.022,-0.209 -0.022,-0.225 -0.219,0.096 -0.025,-0.317 -0.094,-0.217 -0.325,0.15 0.008,-0.288 0.094,-0.201 0.169,-0.087 0.168,0.038 0.313,-0.003 0.302,-0.152 0.435,-0.039 0.692,0.047 0.476,0.427 0.123,-0.076 0.19,-0.27 0.089,-0.03 0.718,0.118 0.445,0.155 0.119,-0.048 -0.064,-0.299 -0.153,-0.208 0.192,-0.272 0.234,-0.185 0.157,-0.092 0.361,-0.115 0.158,-0.108 0.105,-0.352 0.167,-0.293 -0.907,0.152 -0.863,-0.348 0.137,-0.246 0.182,-0.14 0.314,-0.107 0.03,-0.129 0.159,-0.107 0.263,-0.282 -0.097,-0.369 0.052,-0.27 0.189,-0.176 0.059,-0.253 0.084,-0.187 0.384,-0.067 0.369,-0.173 0.133,0.017 0.437,-0.04 0.147,0.07 -0.034,-0.307 0.268,-0.04 0.104,0.061 0.046,0.218 0.122,0.139 0.038,0.241 -0.082,0.186 -0.137,0.143 0.125,0.146 -0.193,0.265 0.208,-0.113 0.297,-0.259 -0.016,-0.211 -0.05,-0.267 -0.083,-0.241 0.038,-0.266 0.167,-0.166 0.439,-0.084 -0.18,-0.302 0.16,-0.027 0.174,0.063 0.256,0.235 0.267,0.185 0.276,0.146 -0.266,0.292 -0.327,0.203 -0.125,0.221 z m -7.66,5.685 -0.012,0.136 -0.208,-0.171 -0.101,-0.187 -0.57,-0.085 0.237,-0.187 0.116,0.055 0.403,0.008 0.113,0.078 0.022,0.353 z\"\n\t\t\t\tid=\"IE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 575.33175,366.1854 -0.148,0.02 -0.346,0.155 -0.047,0.047 -0.061,0.09 -0.011,0.069 -0.049,0.744 -0.188,-0.021 -0.229,-0.162 -0.045,-0.14 -0.069,-0.048 -0.164,-0.018 -0.31,-0.071 -0.36,0.245 -0.153,0.404 -0.031,0.189 -0.122,0.396 0.043,0.244 0.021,0.315 0.031,0.257 -0.032,0.155 -0.069,0.082 0.02,0.059 0.062,0.022 0.197,-0.07 0.207,0.07 0.199,0.133 0.016,0.086 -0.141,0.051 -0.333,0.201 -0.235,0.233 -0.061,0.215 -0.159,0.458 0.022,0.094 0.077,0.055 0.542,-0.049 0.493,-0.185 0.371,-0.197 0.117,0.012 -0.078,0.504 0.002,0.002 -0.064,0.308 0.025,0.052 0.084,0.268 -0.159,0.489 -0.176,0.398 -0.062,0.188 -0.172,0.419 -0.176,0.485 -0.094,0.334 0.021,0.118 -0.043,0.611 0.025,0.173 -0.206,0.529 -0.041,0.261 -0.083,0.353 -0.142,0.746 -0.194,0.25 -0.096,-0.278 -0.222,-0.798 -0.157,-0.548 -0.215,-0.675 -0.362,-0.824 -0.033,-0.199 -0.078,-0.288 -0.249,-0.752 -0.204,-0.544 -0.233,-0.696 0.289,-0.276 0.005,-0.228 0.492,-0.534 -0.004,-0.052 -0.131,-0.142 0.019,-0.024 0.545,-0.997 0.352,-0.99 0.331,-1.383 0.236,-0.705 0.2,-0.468 0.088,-0.388 0.322,-0.027 0.24,0.041 0.288,0.013 0.23,-0.146 0.11,-0.437 0.131,-0.071 0.067,0.104 0.068,-0.115 0.301,-0.193 0.149,-0.124 0.149,-0.153 0.08,-0.055 -0.05,0.205 -0.04,0.134 0,0.175 0.061,0.096 0.083,0.19 0.051,0.19 -0.108,0.157 0.01,0.164 0.029,0.138 0.088,0.161 -0.158,0.29 -0.156,0.266 z\"\n\t\t\t\tid=\"IL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 462.51275,282.1414 -0.567,0.605 -0.23,-0.108 -0.196,0.057 -0.054,-0.017 0.111,-0.219 0.132,-0.507 0.235,-0.201 0.298,-0.528 0.236,-0.146 0.081,0.02 0.052,0.05 0.11,0.593 -0.152,0.209 z\"\n\t\t\t\tid=\"IM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 738.39675,443.8334 -0.172,0.231 -0.336,-0.708 -0.144,-0.043 -0.005,-0.337 0.078,-0.133 0.389,-0.149 0.102,0.083 0.198,0.656 -0.11,0.4 z m -0.439,-1.477 -0.267,0.266 -0.116,-0.16 0.048,-0.111 0.113,-0.061 0.106,-0.086 0.116,0.152 z m -0.817,-1.466 -0.218,0.003 -0.064,-0.121 -0.092,-0.125 0.07,-0.121 0.115,-0.031 0.163,0.196 0.038,0.139 -0.012,0.06 z m 0.265,-0.503 -0.132,0.104 -0.033,-0.014 -0.019,-0.08 -0.005,-0.056 -0.024,-0.101 -0.013,-0.178 0.105,-0.149 0.105,0.031 -0.057,0.152 0.073,0.291 z m -57.447,-0.599 -0.04,0.035 -0.041,0.013 -0.028,-0.004 -0.015,-0.035 0.008,-0.026 0.036,0.03 0.048,-0.028 0.054,-0.089 0.013,-0.029 0.011,0.016 -0.011,0.051 -0.035,0.066 z m 56.335,0.055 0.084,0.105 -0.155,-0.018 -0.144,-0.159 0.038,-0.149 0.054,-0.061 0.123,0.282 z m -0.992,-2.502 -0.123,0.016 -0.076,-0.096 -0.009,-0.112 0.07,-0.073 0.066,-0.038 0.066,0.01 0.066,0.189 -0.06,0.104 z m -0.798,-4.013 -0.085,0.097 -0.289,-0.076 0.021,-0.292 -0.068,-0.286 0.05,-0.12 0.217,-0.205 0.176,-0.09 0.122,0.277 0.057,0.271 -0.201,0.424 z m -55.351,-1.839 -0.021,0.018 -0.002,-0.052 0.026,-0.083 0.03,-0.055 0.009,0.006 -0.008,0.054 -0.015,0.073 -0.019,0.039 z m 55.885,-0.509 -0.137,0.057 -0.137,-0.071 0.107,-0.115 0.018,-0.234 0.14,0.13 -0.008,0.148 0.017,0.085 z m 0.91,-1.867 0.125,0.392 -0.226,-0.171 -0.073,-0.123 0.113,-0.083 0.061,-0.015 z m -0.842,-2.364 -0.089,0.186 -0.018,-0.398 0.042,-0.05 0.045,-0.014 0.057,0.037 -0.037,0.239 z m 0.015,3.791 -0.062,0.067 -0.091,-0.075 -0.261,-0.511 -0.045,-0.328 -0.072,-0.114 0.092,-0.163 0.115,-0.054 0.068,-0.184 0.024,-0.28 0.101,-0.229 0.051,-0.064 0.21,-0.002 0.053,-0.029 -0.029,-0.219 -0.122,-0.095 -0.043,-0.061 0.005,-0.525 0.032,-0.212 0.076,-0.153 -0.054,-0.316 0.036,-0.118 0.151,-0.166 0.067,-0.354 -0.062,-0.106 0.144,-0.546 -0.008,-0.366 0.188,-0.366 0.294,-0.167 0.093,-0.004 0.012,0.313 0.028,0.103 -0.17,0.185 0.162,0.241 -0.021,0.087 -0.065,0.191 -0.107,0.188 -0.149,0.077 -0.116,0.25 -0.066,0.094 0.221,0.263 0.071,0.892 -0.162,0.244 -0.193,0.049 0.045,0.594 -0.035,0.133 -0.191,0.291 -0.036,0.127 -0.107,0.12 0.045,0.149 0.093,0.065 0.002,0.122 -0.086,0.313 -0.007,0.357 -0.119,0.292 z m -39.3,-61.555 -0.007,-0.011 -0.165,-0.245 0.172,0.256 -0.092,0.27 0.019,0.214 0.17,0.236 0.138,0.165 -0.135,0.222 -0.08,0.257 0.09,0.115 -0.042,0.369 0.04,0.069 0.095,0.029 0.148,-0.025 0.113,0.18 -0.102,-0.162 -0.012,-0.018 0.154,-0.098 0.131,-0.019 0.078,0.028 0.104,-0.279 0.092,-0.04 0.178,0.077 0.352,0.526 0.298,0.444 0.063,0.061 0.023,0.023 0.053,0.051 0.294,0.23 0.203,0.145 0.277,-0.052 0.366,-0.01 0.217,0.142 0.125,0.099 0.006,0.014 0.017,0.003 0,0 0.44,0.348 0.19,-0.026 0.126,0.1 0.036,0.245 -0.059,0.255 0.014,0.12 0.196,0.023 0.417,0.168 0.368,0.149 0.191,0.047 0.205,0.11 0.182,0.176 0.355,0.226 0.314,0.173 0.069,0.234 -0.124,-0.05 -0.164,0.026 -0.167,0.104 -0.079,0.066 -0.381,0.403 -0.2,0.124 -0.179,0.181 -0.413,0.545 -0.239,0.508 -0.174,0.477 0.003,0.337 -0.064,0.395 -0.178,0.225 -0.109,0.076 -0.129,0.339 -0.093,0.395 0.054,0.128 0.222,0.172 0.216,0.168 0.275,0.182 0.264,0.173 0.17,0.022 0.047,-0.098 0.062,-0.094 0.194,0.05 0.236,0.169 0.154,0.135 0.068,0.045 0.408,0.227 0.338,0.187 0.428,0.237 0.104,0.145 0.092,0.154 0.202,0.204 0.491,0.361 0.42,0.259 0.342,0.21 0.268,0.147 0.124,-0.023 0.136,-0.079 0.119,-0.045 0.139,0.042 0.21,0.112 0.493,0.342 0.46,0.267 0.501,-0.048 0.133,0.043 0.094,0.242 0.063,0.245 0.56,0.162 0.368,0.073 0.421,0.133 0.213,0.099 0.224,-0.124 0.041,-0.109 0.177,-0.064 0.294,0.028 0.548,0.19 0.229,0.057 0.192,-0.18 0.357,-0.083 0.187,-0.094 0.39,0.2 0.704,0.25 0.363,0.156 0.086,0.153 0.039,0.145 -0.003,0.352 0.089,0.159 0.706,0.357 0.233,0.151 0.188,0.049 0.106,0.006 0.073,0.045 0.063,0.203 0.05,0.047 0.136,0.05 0.148,0.029 0.459,-0.176 0.314,-0.133 0.224,0.034 0.145,0.148 0.021,0.216 0.084,0.228 0.16,0.111 0.172,0.012 0.426,-0.154 0.343,0.118 0.314,0.043 0.35,0.074 0.136,0.056 0.362,0.188 0.443,0.19 0.171,-0.021 0.713,-0.354 0.061,0.043 0.145,0.338 0.217,0.121 0.339,0.106 0.354,-0.195 0.279,0.056 0.338,0.018 0.324,-0.094 0.281,-0.024 0.409,0.17 0.09,-0.039 0.078,-0.109 0.159,-0.488 0.141,-0.432 -0.013,-0.258 -0.129,-0.379 -0.331,-0.494 -0.024,-0.15 0.111,-0.863 0.123,-0.499 0.105,-0.236 0.116,-0.337 0.021,-0.156 -0.012,-0.141 -0.113,-0.086 -0.03,-0.107 0.028,-0.09 0.09,-0.05 0.376,-0.063 0.424,-0.135 0.169,-0.072 0.127,-0.072 0.13,-0.114 0.121,0.005 0.38,0.165 0.133,0.104 0.07,0.315 0.057,0.122 -0.05,0.32 -0.228,0.774 0.045,0.289 0.189,0.211 0.165,0.147 -0.027,0.059 -0.34,0.249 -0.061,0.133 0.075,0.13 0.135,0.11 0.061,0.105 0.063,0.326 0.173,0.092 0.342,0.21 0.301,0.153 0.517,-0.102 0.146,0.069 0.254,0.072 0.198,0.022 0.115,0.054 0.064,0.052 -0.009,0.066 0.011,0.068 0.283,0.018 0.149,0.039 0.503,-0.07 0.505,-0.096 0.232,-0.291 0.103,-0.021 0.29,-0.113 0.286,0.124 0.314,0.169 0.17,0.051 0.335,0.027 0.326,-0.019 0.78,-0.081 0.429,0.042 0.394,-0.242 0.081,10e-4 0.173,0.187 0.433,0.017 0.23,-0.09 0.248,-0.069 0.158,-0.022 0.127,-0.002 0.153,0.018 0.145,-0.062 0.066,-0.125 -0.015,-0.189 -0.104,-0.206 -0.091,-0.121 -0.018,-0.064 0.028,-0.149 0.08,-0.21 0.147,-0.24 -0.108,-0.233 -0.151,-0.267 -0.111,-0.026 -0.28,0.062 -0.303,-0.012 -0.239,-0.161 -0.178,-0.202 -0.043,-0.169 0.052,-0.207 0.079,-0.19 0.017,-0.071 0.227,0 0.314,0.042 0.238,0.053 0.191,-0.002 0.347,-0.244 0.158,-0.015 0.182,-0.046 0.079,-0.046 0.055,0.036 0.199,0.03 0.207,-0.012 0.185,-0.067 0.186,-0.105 0.33,-0.22 0.065,-0.126 0,-0.116 -0.062,-0.077 -0.063,-0.037 0.025,-0.101 0.139,-0.17 0.505,-0.256 0.43,-0.316 0.236,-0.237 0.108,-0.287 0.137,-0.312 0.128,-0.123 0.305,-0.078 0.854,-0.115 0.269,-0.126 0.397,-0.234 0.2,-0.184 0.111,-0.149 0.012,-0.166 0.264,-0.052 0.23,-0.269 0.279,-0.271 0.491,-0.229 0.435,-0.308 0.151,0.049 0.158,0.146 0.084,0.161 0.018,0.082 0.556,0.102 0.088,-0.016 0.409,0.144 0.377,0.174 0.208,0.043 0.102,-0.005 0.087,-0.054 0.102,-0.153 0.104,-0.111 0.065,-0.045 -0.003,-0.176 0.546,-0.344 0.49,-0.247 0.422,-0.18 0.124,0.074 0.137,0.137 0.187,0.349 0.113,0.085 0.286,-0.049 0.053,0.039 -0.045,0.125 -0.194,0.155 -0.252,0.139 -0.164,0.114 0.054,0.379 -0.013,0.13 0.071,0.041 0.518,-0.376 0.249,-0.074 0.089,0.091 0.027,0.201 0.205,0.414 0.087,0.21 -0.521,0.5 -0.191,0.258 0.007,0.091 -0.01,0.09 -0.133,0.128 0.007,0.051 0.107,0.081 0.131,0.061 0.063,-0.002 0.108,-0.121 0.491,-0.171 0.141,0.032 0.346,0.262 0.16,0.015 0.415,0.078 0.266,-0.099 0.195,0.091 0.405,0.328 0.093,0.06 -0.034,0.199 -0.021,0.219 0.103,0.174 0.012,0.154 -0.023,0.141 -0.081,0.097 -0.225,0.054 -0.191,0.168 -0.304,0.243 -0.244,0.194 -0.177,0.172 -0.064,0.18 0.02,0.227 0.051,0.237 0.566,0.868 -0.005,0.15 -0.179,0.042 -0.238,-0.098 -0.205,-0.14 -0.231,-0.372 -0.186,-0.111 -0.185,-0.024 -1.1,0.191 -0.233,0.054 -0.363,0.139 -0.254,0.279 -0.185,0.255 -0.19,0.103 -0.278,0.198 -0.771,0.608 -0.445,0.262 -0.291,0.096 -0.204,0.138 -0.11,0.224 -0.083,0.161 -0.024,0.395 0.051,0.486 0.11,0.31 0.059,0.065 0.009,0.091 -0.111,0.167 -0.146,0.143 -0.071,0.088 -0.065,0.442 -0.129,0.217 -0.238,0.319 -0.211,0.241 -0.331,0.187 -0.126,0.151 -0.121,0.279 -0.071,0.236 -0.004,0.085 0.038,0.075 0.138,0.083 0.167,0.08 0.08,0.125 0.011,0.151 -0.124,0.363 -0.223,0.503 -0.255,0.398 -0.263,0.379 -0.063,0.124 -0.236,0.465 -0.206,0.639 -0.139,0.429 -0.12,0.294 -0.148,0.013 -0.179,-0.094 -0.437,-0.125 -0.279,-0.101 -0.203,-0.091 -0.141,0.004 -0.194,0.059 -0.197,0.041 -0.117,-0.044 -0.271,-0.265 -0.083,0.03 -0.053,0.129 0.183,0.756 0.119,0.281 -0.02,0.469 -0.047,0.575 -0.07,0.627 -0.047,0.145 -0.116,0.166 -0.153,0.045 -0.139,-0.065 -0.111,0.015 -0.037,0.105 0.032,0.271 -0.136,0.31 -0.1,0.265 0.026,0.257 0.048,0.261 0.159,0.564 0.001,0.206 -0.031,0.185 -0.083,0.077 -0.143,-0.013 -0.078,0.076 -0.059,0.116 -0.161,0.427 -0.154,0.045 -0.155,-0.064 -0.232,-0.285 -0.142,-0.083 -0.09,0.005 -0.04,0.075 -0.063,0.17 -0.063,0.114 -0.155,0.1 -0.038,-0.21 -0.083,-1.092 -0.063,-0.348 -0.051,-0.483 -0.075,-0.148 -0.096,-0.265 -0.106,-0.229 -0.089,-0.097 -0.057,-0.427 -0.021,-0.523 0.001,-0.248 -0.125,-0.513 -0.122,-0.582 -0.165,0.024 -0.098,-0.141 -0.071,0.003 -0.232,0.131 -0.185,-0.043 -0.137,0.018 -0.001,0.268 0.023,0.285 -0.052,0.103 -0.362,0.334 -0.101,0.224 0.01,0.235 0.045,0.314 -0.064,0.16 -0.157,0.147 -0.211,0.077 -0.186,-0.036 -0.119,-0.128 -0.111,-0.326 -0.099,-0.178 -0.104,-0.042 -0.081,0.048 -0.011,0.205 0.006,0.169 -0.026,0.019 -0.058,-0.026 -0.066,-0.083 -0.173,-0.818 -0.247,-0.631 -0.015,-0.242 0.09,-0.312 0.111,-0.481 0.293,-0.3 0.038,-0.127 0.048,-0.101 0.071,-0.02 0.376,0.028 0.126,-0.048 0.111,-0.142 0.162,-0.114 0.162,-0.046 0.129,-0.017 0.207,0.108 0.086,-0.062 0.063,-0.2 0.09,-0.198 0.058,-0.096 0.139,-0.043 0.177,-0.01 0.059,-0.037 0.048,-0.067 0.044,-0.263 0.226,-0.589 0.08,-0.262 0.012,-0.046 -0.007,-0.292 0.064,-0.042 0.375,0.143 0.164,-0.002 0.089,-0.059 0.029,-0.107 -0.048,-0.125 -0.267,-0.219 -0.474,-0.295 -0.435,-0.181 -0.804,0.027 -0.796,0.057 -0.233,-0.029 -0.291,-0.082 -0.715,0.012 -0.864,0.045 -0.329,-0.025 -0.162,0.003 -0.325,0.027 -0.53,-0.084 -0.367,-0.108 -0.325,-0.119 -0.386,-0.107 -0.093,10e-4 -0.054,-0.039 -0.037,-0.095 -0.013,-0.123 0.08,-0.57 -0.071,-0.866 0.065,-0.316 -0.316,-0.712 -0.108,-0.132 -0.146,-0.006 -0.093,0.092 -0.037,0.167 0.053,0.187 -0.116,0.208 -0.233,0.067 -0.272,-0.07 -0.226,-0.098 -0.291,-0.212 -0.219,-0.299 -0.019,-0.331 -0.099,-0.213 -0.135,-0.104 -0.099,-0.029 -0.089,0.023 -0.078,0.116 0.068,0.115 0.093,0.162 -0.031,0.11 -0.083,0.017 -0.124,-0.047 -0.192,0.025 -0.186,-0.084 -0.111,-0.007 -0.11,-0.031 -0.007,-0.191 -0.169,-0.242 -0.286,-0.271 -0.281,-0.168 -0.135,0.023 -0.068,0.185 0.016,0.069 0.099,0.034 0.142,0.107 0.03,0.112 -0.021,0.098 -0.175,0.179 -0.124,0.17 -0.277,0.247 -0.236,0.283 -0.062,0.214 -0.089,0.192 -0.035,0.211 0.062,0.146 0.114,0.092 0.296,0.067 0.31,0.284 0.25,0.383 0.141,0.116 0.256,0.129 0.493,0.015 0.073,0.105 0.07,0.281 0.097,0.099 0.251,0.132 0.021,0.097 -0.061,0.112 -0.111,0.088 -0.205,0.056 -0.195,0.022 -0.196,-0.036 -0.291,-0.022 -0.33,-0.002 -0.234,0.699 -0.167,0.245 -0.095,0 -0.255,-0.119 -0.109,0.019 -0.294,0.62 -0.041,0.149 -0.02,0.112 0.156,0.239 0.187,0.197 0.223,0.077 0.175,-0.059 0.142,0.079 0.166,0.198 0.285,0.131 0.403,0.063 0.229,0.156 0.028,0.135 -0.02,0.137 -0.036,0.356 -0.039,0.205 -0.217,0.538 -0.155,0.463 0.08,0.22 0.058,0.09 0.055,0.069 0.174,0.173 0.121,0.171 -0.104,0.437 0.057,0.115 0.233,0.077 0.251,0.059 0.088,0.072 -0.218,0.443 0.046,0.308 0.092,0.289 0.066,0.472 0.01,0.05 -0.018,0.118 0.143,0.366 0.221,0.713 0.017,0.266 -0.013,0.281 -0.065,0.469 -0.221,-0.002 0.197,0.313 0.063,0.225 0.027,0.314 -0.237,0.039 -0.168,-0.035 -0.14,-0.275 -0.065,0.25 -0.25,0.231 -0.09,-0.113 -0.052,-0.121 -0.01,-0.214 0.138,-0.817 -0.028,-0.092 -0.062,-0.061 -0.137,-0.033 -0.051,-0.166 -0.209,0.872 0.092,0.356 -0.042,0.162 -0.39,0.136 -0.395,-0.327 -0.05,-0.105 -0.023,0.184 -0.071,0.224 -0.37,-0.041 -0.183,-0.175 0.119,-0.298 0.229,-0.72 0.043,-0.321 -0.307,-0.236 -0.26,-0.145 -0.149,-0.328 0.057,0.36 0.139,0.128 0.202,0.09 0.214,0.184 -0.154,0.224 -0.15,0.139 -0.287,0.528 -0.35,0.295 -0.408,0.222 -1.34,0.326 -0.281,0.132 -0.411,0.406 -0.266,0.385 -0.049,0.39 0.15,0.421 0.122,0.658 0.102,0.134 -0.143,0.24 -0.249,0.255 -0.206,0.343 0.019,0.188 -0.053,0.127 -0.706,0.421 -0.148,0.246 -0.194,0.244 -0.232,-0.14 -0.136,0.002 0.187,0.194 -0.024,0.128 -0.066,0.075 -0.178,0.07 -1.02,0.309 -0.78,0.293 -0.219,-0.012 0.04,-0.089 0.137,-0.079 -0.014,-0.336 -0.143,-0.062 -0.124,-0.024 -0.594,0.41 -0.24,0.405 0.05,0.077 0.135,-0.019 0.399,-0.229 0.186,0.065 0.013,0.09 -0.606,0.35 -1.275,1.132 -0.06,0.223 -0.166,0.252 -0.229,0.237 -0.411,0.573 -0.788,0.851 -0.219,0.317 -1.262,0.654 -0.23,0.194 -0.518,0.636 -0.532,0.52 -0.621,0.431 -1.077,0.549 -0.655,0.519 -0.205,0.345 -0.013,0.123 0.07,0.167 0.12,0.156 0.027,0.124 -0.059,0.222 -0.032,0.123 -0.192,0.304 -0.329,0.217 -1.065,0.453 -0.141,-0.014 -0.869,-0.09 -0.325,0.082 -0.134,0.212 -0.299,0.877 -0.286,0.233 -0.103,0.211 -0.041,0.146 -0.172,-0.004 -0.148,-0.065 -0.108,0.047 -0.124,-0.294 -0.208,-0.06 -0.172,-0.021 -0.734,0.296 -0.257,0.238 -0.54,1.121 -0.134,0.722 0.127,0.796 0.188,0.635 0.037,0.287 -0.023,0.372 -0.096,0.181 -0.068,0.214 0.09,0.441 0.227,0.577 0.055,0.244 0.005,0.251 0.171,0.576 -0.115,-0.104 -0.091,-0.243 -0.216,-0.31 -0.265,0.309 0.146,0.222 0.494,0.264 0.146,0.216 -0.318,1.921 -0.241,0.681 -0.296,0.446 -0.157,0.172 -0.351,0.708 -0.244,0.851 -0.049,0.327 0.11,0.366 -0.125,0.216 -0.156,0.165 0.297,-0.074 0.102,0.198 0.038,0.205 0.004,1.216 -0.033,1.266 -0.229,0.052 -0.251,0.013 -0.222,-0.036 -0.159,-0.049 -0.396,0.067 -0.213,0.14 -0.171,0.232 0.012,0.396 -0.734,0.996 -0.158,0.332 -0.058,0.319 0.095,0.167 0.188,0.171 0.245,0.069 0.473,0.069 0.227,0.091 0.154,0.169 -0.557,-0.18 -0.655,-0.036 -1.566,0.462 -0.412,0.324 -0.23,0.281 -0.158,0.642 -0.027,0.429 -0.186,0.357 -0.813,0.548 -0.514,0.169 -0.195,0.146 -0.606,-0.189 -0.661,-0.48 -0.278,-0.258 -0.981,-1.24 -0.179,-0.157 -0.198,-0.531 -0.031,-0.198 -0.055,-0.079 -0.093,-0.054 -0.045,-0.082 -0.221,-0.608 -0.09,-0.634 -0.141,-0.709 0.118,0.049 0.164,0.233 0.082,0.339 0.01,0.474 0.123,0.055 0.11,-0.045 -0.315,-1.092 -0.274,-0.271 -0.072,-0.018 -0.077,-0.175 -0.008,-0.22 0.024,-0.104 -0.219,-0.358 -0.077,-0.213 -0.486,-1.083 -0.219,-0.777 -0.339,-0.865 -0.219,-0.303 -0.341,-0.668 -0.286,-0.311 -0.303,-0.417 -0.238,-0.185 -0.093,-0.097 -0.705,-1.447 -0.217,-0.801 -0.184,-0.378 -0.091,-0.288 -0.247,-1.231 -0.002,-0.22 -0.03,-0.241 -0.176,-0.522 -0.309,-0.565 -0.089,-0.352 10e-4,-0.137 -0.196,-0.55 -0.042,-0.251 -0.132,-0.232 -0.154,-0.213 -0.16,-0.171 -0.377,-0.558 -0.135,-0.136 -0.257,-0.362 -0.183,-0.669 -0.234,-0.262 0.368,0 -0.225,-0.248 -0.106,-0.162 -0.118,-0.1 0.171,-0.25 -0.28,0.007 -0.148,-0.15 -0.203,-0.47 -0.369,-0.532 -0.063,-0.284 -0.326,-0.895 -0.276,-2.153 -0.253,-0.961 0.02,-0.276 -0.306,-0.834 -0.149,-0.56 -0.061,-0.475 -0.081,-0.312 -0.073,-0.62 -0.117,-0.196 -0.013,-0.118 0.078,-0.283 0.219,-0.437 0.081,-0.277 -0.095,-0.39 -0.199,0.41 -0.186,0.115 -0.089,-0.306 -10e-4,-0.412 -0.023,-0.099 0.049,-0.138 0.492,0.063 -0.56,-0.253 -0.066,-0.148 -0.021,-0.111 0.12,-0.205 -0.204,-0.173 -0.082,-0.53 -0.06,-0.121 -0.023,-0.098 0.116,-0.733 0.482,-1.443 0.036,-0.327 -0.042,-0.465 -0.107,-0.37 -0.046,-0.392 -0.029,-0.101 -0.175,-0.036 -0.166,-0.145 -0.192,-0.582 0.176,-0.191 0.136,-0.105 -0.187,0.044 -0.154,-0.018 0.292,-0.269 0.261,-0.206 0.595,-0.239 0.253,-0.153 -0.374,0.138 -0.392,0.052 -0.832,-0.028 0.139,-0.544 0.145,-0.182 0.157,-0.102 -0.231,0.031 -0.268,-0.043 0.086,-0.553 0.211,-0.12 0.227,-0.023 0.282,-0.079 -0.302,-0.091 -0.313,-0.044 -0.377,0.091 -0.346,-0.067 -0.421,10e-4 0.168,0.074 0.18,0.168 -0.09,0.3 -0.085,0.187 -0.231,0.129 -0.189,0.195 -0.053,0.171 -0.107,0.12 0.185,0.085 0.19,0.061 0.11,0.139 0.13,0.201 -0.007,0.391 -0.498,0.919 -0.172,0.205 -1.247,0.554 -0.489,0.301 -1.044,0.391 -0.406,0.073 -0.45,-0.078 -0.658,-0.297 -1.004,-0.761 -0.261,-0.251 -0.803,-0.979 -0.579,-0.519 -0.439,-0.483 -0.544,-0.458 -0.513,-0.618 -0.109,-0.282 0.038,-0.287 0.191,-0.156 0.224,0.063 0.177,0.242 0.125,0.108 0.105,0.044 0.766,-0.371 0.297,0.015 0.203,-0.186 0.257,0.041 0.524,-0.29 0.22,-0.018 0.262,-0.058 0.422,-0.735 0.316,-0.468 0.205,-0.098 -0.012,-0.114 -0.057,-0.149 -0.153,0.038 -0.107,0.142 -0.079,0.172 -0.08,0.103 -0.248,-0.095 -0.167,0.016 -0.206,0.056 -0.753,0.274 -0.31,0.246 -0.21,0.049 -1.203,-0.271 -1.176,-0.622 -0.495,-0.414 -0.313,-0.529 -0.313,-0.631 0.103,-0.177 0.486,-0.38 0.42,-0.299 -0.377,0.133 -0.408,0.185 -0.202,0.129 -0.229,0.271 -0.304,0.061 -0.12,-0.402 -0.076,-0.392 0.194,-0.132 0.136,-0.083 0.276,-0.07 0.302,-0.05 0.274,0.002 0.387,0.006 0.011,-0.92 0.032,-0.081 0.055,-0.047 0.063,-0.02 0.053,0.014 0.079,0.138 0.099,-0.008 0.105,-0.08 0.234,0.06 0.188,-0.041 0.19,0.054 0.324,10e-4 0.585,-0.022 0.325,0.007 0.21,0.146 0.23,0.161 0.249,0.023 0.361,-0.019 0.245,-0.062 0.124,-0.15 0.093,-0.144 0.535,-0.21 0.562,-0.171 0.162,-0.019 0.051,0.1 -0.025,0.167 0.065,0.159 0.226,0.101 0.159,0.025 0.143,-0.023 0.106,-0.051 0.228,-0.25 0.118,-0.057 0.153,0.004 0.172,-0.12 0.003,-0.092 -0.109,-0.044 -0.093,-0.132 0.018,-0.107 -0.027,-0.152 0.019,-0.144 0.073,-0.108 0.128,-0.104 -0.076,-0.215 -0.196,-0.412 -0.205,-0.528 -0.217,-0.44 -0.275,-0.386 -0.142,-0.284 0.015,-0.627 -0.024,-0.127 -0.095,-0.078 -0.127,-0.043 -0.179,0.064 -0.161,0.012 -0.346,-0.014 -0.17,-0.064 -0.462,-0.631 -0.061,-0.248 -0.002,-0.255 0.153,-0.444 0.047,-0.414 0.021,-0.386 -0.025,-0.109 -0.093,-0.13 -0.155,-0.096 -0.415,-0.023 -0.493,-0.128 -0.379,-0.225 -0.264,-0.136 -0.071,-0.089 -0.032,-0.104 0.069,-0.469 0.119,-0.529 0.087,-0.162 0.15,-0.168 0.111,-0.114 0.178,-0.151 0.481,-0.506 0.431,-0.697 0.267,-0.487 0.139,-0.145 0.142,-0.124 0.207,-0.15 0.24,-0.137 0.238,0.006 0.226,0.125 0.168,0.146 0.057,0.323 0.119,0.209 0.128,0.126 0.17,0.061 0.217,-0.015 0.869,-0.37 0.296,-0.075 0.71,-0.046 0.487,-0.143 0.431,-0.15 0.053,-0.269 0.166,-0.411 0.506,-0.536 0.143,-0.239 0.153,-0.458 0.163,-0.418 0.141,-0.174 0.796,-0.46 0.779,-0.423 0.128,-0.192 0.504,-0.88 0.288,-0.599 0.075,-0.193 0.167,-0.521 0.181,-0.52 0.24,-0.121 0.535,-0.198 0.424,-0.194 0.218,-0.222 0.131,-0.194 -0.024,-0.192 -0.117,-0.228 0.024,-0.136 0.021,-0.134 0.309,-0.273 0.579,-0.809 0.348,-0.405 0.115,0 0.363,-0.216 0.345,-0.244 -0.02,-0.111 -0.043,-0.144 -0.198,-0.064 -0.063,-0.173 0.049,-0.248 0.166,-0.667 -0.034,-0.192 -0.202,-0.62 0.045,-0.171 0.083,-0.176 0.226,-0.234 0.291,-0.195 0.932,-0.462 0.189,-0.051 0.323,-0.117 0.198,-0.247 0.024,-0.211 -0.087,-0.131 -0.193,-0.176 -0.363,-0.159 -0.328,-0.139 -0.557,0.015 -0.289,-0.119 -0.079,-0.083 -0.04,-0.294 0.056,-0.498 -0.087,-0.044 -0.124,0.059 -0.294,-0.059 -0.361,0.007 -0.138,-0.139 0.068,-0.167 -0.021,-0.223 -0.054,-0.212 -0.056,-0.044 -0.173,-0.051 -0.269,-0.184 -0.217,-0.227 -0.127,-0.154 -0.039,-0.106 0.012,-0.07 0.158,-0.197 0.188,-0.277 0.069,-0.238 0.021,-0.173 -0.053,-0.127 -0.173,-0.156 -0.185,-0.137 -0.074,-0.119 -0.003,-0.18 0.069,-0.225 0.217,-0.17 0.385,-0.161 0.1,-0.2 -0.013,-0.148 -0.105,-0.044 -0.271,-10e-4 -0.456,-0.051 -0.077,-0.082 -0.052,-0.11 -10e-4,-0.109 0.097,-0.124 0.116,-0.157 -0.021,-0.153 -0.134,-0.173 -0.321,-0.126 -0.044,-0.179 0.05,-0.149 0.106,-0.213 0.093,-0.148 0.219,-0.422 0.266,-0.092 0.326,-0.137 0.36,-0.151 0.555,0.113 0.27,0.056 0.546,0.129 0.458,0.108 0.468,0.031 0.194,-0.008 0.214,0.128 0.529,0.219 0.43,0.115 0.291,-10e-4 0.429,-0.194 0.214,-0.178 0.288,-0.195 0.369,0.008 0.798,-0.301 0.149,0.052 0.237,0.017 0.286,-0.174 0.147,-0.206 0.023,-0.104 0.071,-0.076 0.306,-0.131 0.307,-0.182 0.083,-0.24 0.051,-0.163 0.336,-0.21 0.35,-0.219 0.366,-0.229 0.416,-0.261 0.352,-0.221 0.288,-0.181 0.032,0.039 0.113,0.082 0.122,0.04 0.143,-0.077 0.179,-0.064 0.094,0.036 0.013,0.104 -0.107,0.488 0.009,0.191 0.179,0.397 0.232,0.643 0.218,0.602 0.128,0.394 0.127,0.161 0.529,0.165 0.436,0.135 0.259,0.221 0.286,0.212 0.2,0.13 0.095,0.167 0.02,0.15 -0.018,0.101 -0.109,0.133 -0.502,0.342 -0.06,0.108 -0.015,0.142 0.099,0.423 0.062,0.265 0.018,0.532 0.033,0.505 0.178,0.23 0.146,0.148 0.089,0.134 0.18,0.185 0.151,0.137 0.129,0.081 0.063,0.181 -0.037,0.213 -0.054,0.185 0.017,0.1 0.104,0.071 0.159,0.185 0.021,0.27 -0.011,0.186 0.063,0.167 0.017,0.185 -0.049,0.461 0.008,0.208 -0.139,0.013 -0.119,0.071 -0.169,0.29 -0.195,0.076 -0.221,0.023 -0.228,-0.178 -0.187,-0.186 -0.051,-0.103 -0.047,-0.196 -0.101,-0.128 -0.194,0.06 -0.295,0.027 -0.319,0.043 -0.059,0.043 -0.006,0.083 0.078,0.176 0.066,0.229 0.04,0.32 0.086,0.212 0.027,0.067 0.511,0.636 0.134,0.129 0.028,0.085 -0.053,0.235 z\"\n\t\t\t\tid=\"IN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 678.34275,483.5454 -0.065,0.112 -0.111,0.051 -0.061,-0.283 -0.162,-0.2 0.065,0 0.153,0.102 0.055,0.27 0.057,-0.079 -0.015,-0.084 0.033,-0.079 -0.023,-0.088 -0.084,-0.135 0.029,-0.028 0.134,0.116 0.014,0.093 z\"\n\t\t\t\tid=\"IO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 600.52875,351.1564 0,0.026 0.093,0.249 0.231,0.925 0.132,0.117 0.15,0.098 0.106,0.137 0.042,0.138 -0.013,0.214 0.005,0.248 0.062,0.19 0.086,0.144 0.08,0.072 0.12,0.007 0.144,0.035 0.097,0.143 0.309,1.043 0.029,0.136 0.13,0.044 0.213,-0.02 0.219,0.108 0.234,0.168 0.22,0.317 0.148,0.051 0.464,-0.047 0.634,0.051 0.297,0.163 -0.03,0.101 -0.229,0.112 -0.403,0.132 -0.119,0.223 -0.067,0.289 0.012,0.162 0.099,0.178 0.284,0.354 0.016,0.128 0.051,0.178 0.053,0.122 -0.059,0.235 -0.258,0.163 -0.339,0.176 -0.681,0.784 -0.051,0.169 0.004,0.462 -0.068,0.132 -0.215,-0.002 -0.168,-0.024 -0.009,0.161 -0.107,0.216 -0.061,0.187 0.25,0.441 0.045,0.234 -0.04,0.213 -0.232,0.366 -0.137,0.246 0.033,0.055 0.181,0.098 0.562,0.803 0.181,0.282 0.238,-0.074 0.089,0.005 0.069,0.045 0.043,0.095 0,0.12 -0.06,0.18 0.303,0.073 0.109,0.182 0.353,0.622 -0.013,0.185 -0.169,0.293 -0.002,0.194 0.036,0.174 0.055,0.061 0.521,0.025 0.221,0.07 0.541,0.316 0.616,0.485 0.503,0.397 0.429,0.337 0.46,-0.024 0.125,0.061 0.116,0.105 0.132,0.277 0.263,0.625 0.224,0.207 0.345,0.499 0.324,0.467 -0.213,0.634 -0.209,0.658 0,0.846 0,0.454 0.44,0.019 0.489,0.022 0.004,0.541 0.004,0.543 0.004,0.618 0.144,0.026 0.228,0.133 0.098,0.2 0.122,0.109 0.149,0.018 0.146,0.098 0.145,0.179 0.053,0.134 -0.039,0.093 0.031,0.162 0.101,0.232 0.123,0.109 0.191,0.134 -0.259,0.077 -0.28,-0.059 -0.597,-0.271 -0.194,-0.008 -0.253,0.103 -0.011,0.092 -0.631,-0.303 -0.227,-0.061 -0.082,-0.006 -0.362,0.003 -0.515,0.055 -0.303,0.123 -0.21,0.13 -0.096,0.128 -0.034,0.069 -0.164,0.377 -0.19,0.483 -0.197,0.434 -0.383,0.61 -0.212,0.281 -0.455,0.522 -0.492,0.105 -1.141,-0.103 -1.265,-0.115 -1.259,-0.113 -0.937,-0.085 -0.072,-0.028 -0.927,-0.746 -0.732,-0.591 -0.915,-0.739 -0.934,-0.757 -0.948,-0.769 -0.689,-0.56 -0.836,-0.722 -0.761,-0.659 -0.601,-0.522 -0.771,-0.456 -0.602,-0.358 -0.878,-0.521 -0.701,-0.417 -0.601,-0.358 -0.925,-0.552 -0.307,-0.15 -0.959,-0.185 -0.909,-0.156 -0.941,-0.162 -0.626,-0.108 0.413,-0.394 -0.127,-0.354 -0.301,0.065 -0.277,0.084 -0.168,-0.551 0.214,-0.069 -0.198,-0.721 -0.203,-0.744 -0.196,-0.721 -0.201,-0.739 0.795,-0.475 0.594,-0.355 0.831,-0.498 0.801,-0.481 0.763,-0.459 0.841,-0.507 0.752,-0.454 0.689,-0.185 0.146,-0.143 0.314,-0.622 0.269,-0.532 0.013,-0.123 10e-4,-0.757 0.047,-0.891 0.089,-0.477 0.155,-0.423 0.142,-0.309 0.015,-0.289 -0.019,-0.294 -0.147,-0.445 -0.153,-0.465 0.017,-0.448 0.028,-0.24 0.096,-0.385 0.164,-0.282 0.176,-0.174 0.654,-0.18 0.389,-0.107 0.52,-0.5 0.309,-0.298 0.43,-0.472 0.317,-0.348 0.025,-0.121 0,-0.047 0.272,-0.071 0.503,-0.423 0.297,-0.395 0.094,-0.035 0.265,0.129 0.19,0.036 0.437,-0.15 0.26,0.079 0.219,0.1 0.122,0.007 0.587,0.246 0.147,0.03 0.302,0.03 0.451,0.014 0.291,-0.161 0.205,-0.155 0.144,0.004 0.14,0.037 0.118,0.066 0.099,0.116 0.047,0.166 -0.019,0.529 0.044,0.139 0.08,0.1 0.101,0.019 0.123,-0.115 0.214,-0.167 0.264,-0.182 0.196,-0.167 0.113,-0.063 0.177,0.009 0.173,0.029 z\"\n\t\t\t\tid=\"IQ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 600.67475,342.2104 0.059,0.078 0.455,0.745 0.2,0.219 0.117,0.186 0.079,0.207 0.139,0.14 0.184,0.076 0.223,0.2 0.151,0.156 0.253,0.323 0.268,0.12 0.973,0.233 0.541,0.108 0.156,0.031 0.414,-0.156 0.485,0.021 0.18,0.008 0.641,-0.658 0.195,-0.22 0.382,-0.114 0.215,-0.263 0.345,-0.318 0.421,-0.3 0.387,-0.27 0.296,-0.163 0.536,-0.382 0.335,-0.132 0.291,0.004 0.436,0.448 0.367,0.407 0.113,0.178 -0.182,0.16 -0.34,0.154 -0.065,0.113 -0.023,0.145 0.013,0.138 0.046,0.113 0.417,0.261 0.047,0.144 0.003,0.146 -0.047,0.091 -0.093,0.053 -0.29,0.073 -0.249,0.085 -0.086,0.083 -0.075,0.099 0.011,0.11 0.075,0.125 0.509,0.34 0.058,0.125 0.101,0.168 0.125,0.103 0.212,0.028 0.102,0.069 0.492,0.626 0.12,0.044 0.575,-0.138 0.08,0.006 0.005,0.153 0.086,0.886 0.066,0.457 0.099,0.443 0.155,0.404 0.184,0.383 0.254,0.236 0.564,0.284 0.274,0.082 0.721,0.057 0.712,0.125 0.42,0.133 0.129,0.094 0.106,0.144 0.348,0.668 0.548,0.475 1.106,0.711 0.536,0.236 1.806,0.446 1.202,-0.025 3.322,-0.861 1.104,-0.215 0.415,0 -0.247,0.171 -0.415,0.098 0.25,0.121 0.387,0.02 0.179,-0.02 0.13,-0.109 0.021,-0.181 -0.019,-0.179 -0.183,-0.803 -0.106,-0.568 0.779,0.039 0.303,-0.074 0.446,-0.19 0.338,-0.115 0.17,-0.016 0.168,-0.089 0.129,-0.112 0.29,-0.779 0.145,-0.196 0.492,-0.44 0.418,-0.279 0.438,-0.248 0.555,-0.173 0.737,0.018 0.587,0.061 0.34,-0.003 0.161,0.018 0.121,-0.025 0.07,-0.051 0.076,-0.342 0.12,-0.112 0.207,-0.096 0.29,0 0.354,-0.025 0.294,0.023 0.37,0.131 0.483,0.011 0.322,-0.023 0.187,0.131 0.135,0.175 0.065,0.146 0.015,0.2 -0.003,0.152 0.051,0.059 0.196,0.091 0.273,0.068 0.531,0.082 0.499,0.158 0.259,0.107 0.36,0.167 0.429,0.415 0.159,0.065 0.192,0.042 0.137,-0.011 0.322,-0.175 0.28,0.129 0.142,-0.017 0.322,-0.096 0.342,0.12 0.852,0.454 0.094,-0.01 0.077,0.046 0.071,0.104 0.05,0.128 0.063,0.39 0.246,0.285 0.301,0.259 0.351,0.142 0.733,0.339 0.32,0.275 0.324,0.466 0.4,0.613 0.058,0.056 1.028,-0.019 1.156,10e-4 0.141,0.245 -0.026,0.485 0.041,0.497 0.104,0.343 0.001,0.316 -0.083,0.16 -0.065,0.183 -0.019,0.08 0.148,0.114 0.13,0.262 0.019,0.365 -0.064,0.193 0.009,0.16 0.065,0.136 0.056,0.227 -0.01,0.137 -0.093,0.136 -0.056,0.17 -0.074,0.215 -0.027,0.17 -0.14,0.079 -0.111,0.057 0.019,0.215 0.056,0.181 0.065,0.214 -0.074,0.147 -0.047,0.169 -0.103,0.271 0.028,0.225 -0.111,0.191 -0.14,0.169 -0.093,0.135 -0.019,0.191 -0.102,0.067 -0.195,0.157 -0.12,0.112 -0.177,0.034 -0.037,0.09 0.028,0.089 0.074,0.056 0.115,0.194 0.24,0.334 -0.692,0.042 -0.203,0.295 -0.237,0.422 0.116,0.852 -0.116,0.437 0.07,0.245 0.177,0.169 0.227,0.094 0.426,0.006 0.282,0.066 0.028,0.113 -0.162,0.165 -0.259,0.309 -0.138,0.135 -0.441,0.62 0.004,0.264 0.041,0.213 0.19,0.667 0.186,0.645 0.333,1.16 -0.006,0.269 -0.104,0.596 -0.007,0.362 0.047,0.469 -0.035,0.242 0.082,0.542 0.093,0.039 0.721,0.105 0.661,0.097 0.881,0.128 0.267,0.317 0.166,0.695 -0.01,0.519 -0.075,0.265 -0.63,0.755 -0.64,0.764 -0.639,0.761 -0.662,0.787 -0.069,0.083 0.535,0.628 0.331,0.388 0.467,0.545 0.059,0.131 -0.004,0.214 0.479,0.828 0.169,0.431 0.152,0.253 0.379,0.395 0.37,0.385 0.401,0.176 0.274,0.039 0.624,0.203 0.228,0.162 0.366,0.408 0.43,-0.056 0.089,0 0.024,0.029 0.013,0.131 -0.063,0.633 0.119,0.637 0.083,0.957 -0.031,0.165 -0.103,0.276 -0.005,0.177 -0.027,0.109 0.028,0.048 0.137,0.065 0.292,0.035 0.705,-0.107 0.082,0.027 0.169,0.113 0.127,0.177 0.011,0.084 -0.178,0.147 -0.029,0.249 0.053,0.373 -0.024,0.045 -0.156,0.084 -0.051,0.538 -0.028,0.049 -0.182,0.055 -0.86,-0.037 -0.098,0.015 -0.323,0.142 -0.554,0.102 -0.152,0.058 -0.204,0.162 -0.147,0.197 -0.028,0.182 -0.029,0.038 -0.317,-0.037 -0.104,0.158 -0.615,0.236 -0.076,0.051 -0.091,0.188 -0.082,0.527 -0.074,0.473 -0.047,0.069 -0.194,0.162 -0.019,0.055 0.026,0.183 -0.088,0.333 -0.069,0.923 -0.077,0.258 -0.153,0.021 -0.12,0.129 -0.22,0.159 -0.475,-0.123 -0.377,-0.129 -1.248,-0.303 -0.137,-0.147 -0.078,-0.259 -0.216,-0.073 -0.31,0.388 -1.054,-0.224 -0.358,0.069 -0.221,-0.121 -0.568,-0.007 -0.448,-0.242 -0.643,0.166 -0.508,0.032 -0.697,-0.424 -0.749,-0.117 -0.608,0.036 -0.313,-0.033 -0.507,-0.152 -0.24,-0.157 -0.395,0.12 -0.178,-0.223 -1.117,-0.207 -0.207,-0.395 -0.155,-0.367 -0.012,-0.378 -0.272,-0.662 -0.091,-0.963 -0.101,-0.377 -0.151,-0.328 -0.201,-0.279 -0.273,-0.299 -0.238,-0.119 -1.044,-0.228 -0.201,0.03 -0.467,0.149 -0.497,0.331 -0.816,0.188 -0.164,0.142 -0.205,0.32 -0.266,0.186 -0.364,-0.048 -0.392,0.189 -0.727,0.527 -0.383,0.161 -0.321,-0.012 -0.345,-0.25 -0.771,-0.336 -0.499,-0.112 -0.692,0.077 -0.328,-0.056 -0.557,-0.395 -0.146,-0.287 -0.318,-0.192 -1.008,-0.431 -0.816,-0.57 -0.15,-0.216 -0.1,-0.319 -0.355,-0.388 -0.797,-0.317 -0.452,-0.338 -0.53,-0.076 -0.493,0.011 -0.217,-0.061 -0.197,-0.145 -0.673,-0.7 -0.008,-0.277 -0.415,-0.686 -0.097,-0.245 -0.089,-0.681 -0.115,-0.178 -0.433,-0.281 -0.067,-0.184 0.092,-0.245 0,-0.186 -0.225,-0.175 -0.338,-0.093 -0.082,-0.21 0.062,-0.409 -0.051,-0.257 -0.298,-0.411 -0.44,-0.421 -0.439,-0.624 -0.172,-0.156 -0.112,-0.409 -0.161,-0.486 -0.248,-0.035 -1.202,0.583 -0.351,-0.328 -1.054,-0.57 -0.073,-0.086 -0.074,-0.131 0.133,-0.076 0.132,-0.031 0.265,0.102 0.159,-0.12 -0.063,-0.194 -0.265,-0.12 -0.36,0.009 0.099,0.182 -0.337,0.172 -0.072,0.225 0.049,0.279 0.029,0.39 -0.137,0.188 -0.106,0.087 -0.453,0.023 -0.212,0.172 -0.137,0.041 -0.191,-0.134 -0.123,-0.109 -0.101,-0.232 -0.031,-0.162 0.039,-0.092 -0.053,-0.135 -0.145,-0.179 -0.146,-0.098 -0.148,-0.018 -0.123,-0.109 -0.098,-0.2 -0.229,-0.132 -0.144,-0.026 -0.004,-0.619 -0.004,-0.543 -0.004,-0.541 -0.489,-0.022 -0.44,-0.019 0,-0.454 0,-0.847 0.209,-0.658 0.213,-0.634 -0.324,-0.467 -0.345,-0.499 -0.224,-0.208 -0.263,-0.625 -0.131,-0.277 -0.116,-0.105 -0.125,-0.061 -0.459,0.024 -0.429,-0.337 -0.503,-0.396 -0.615,-0.485 -0.542,-0.317 -0.221,-0.07 -0.521,-0.024 -0.055,-0.061 -0.036,-0.174 10e-4,-0.194 0.169,-0.293 0.013,-0.185 -0.353,-0.622 -0.109,-0.182 -0.302,-0.073 0.06,-0.18 0,-0.12 -0.043,-0.095 -0.07,-0.045 -0.089,-0.005 -0.237,0.074 -0.181,-0.282 -0.563,-0.803 -0.181,-0.098 -0.033,-0.055 0.137,-0.247 0.232,-0.366 0.04,-0.212 -0.044,-0.234 -0.25,-0.441 0.061,-0.187 0.107,-0.215 0.009,-0.162 0.168,0.024 0.215,0.002 0.068,-0.132 -0.004,-0.462 0.051,-0.169 0.682,-0.784 0.339,-0.176 0.258,-0.162 0.059,-0.236 -0.053,-0.122 -0.051,-0.178 -0.016,-0.128 -0.284,-0.354 -0.099,-0.178 -0.012,-0.163 0.067,-0.288 0.119,-0.224 0.403,-0.132 0.229,-0.112 0.031,-0.101 -0.297,-0.163 -0.634,-0.051 -0.464,0.047 -0.148,-0.051 -0.22,-0.316 -0.234,-0.168 -0.219,-0.108 -0.213,0.02 -0.129,-0.043 -0.03,-0.136 -0.308,-1.043 -0.097,-0.143 -0.144,-0.035 -0.121,-0.007 -0.08,-0.072 -0.086,-0.144 -0.062,-0.189 -0.004,-0.249 0.013,-0.214 -0.042,-0.138 -0.106,-0.137 -0.15,-0.099 -0.132,-0.116 -0.231,-0.925 -0.093,-0.249 0,-0.026 0.004,-0.049 -0.023,-0.213 0.107,-0.185 -0.007,-0.073 -0.222,-0.234 -0.312,-0.234 -0.084,-0.041 -0.002,-0.25 0.011,-0.189 -0.028,-0.171 -0.06,-0.098 -0.002,-0.077 0.125,-0.184 -0.081,-0.121 -0.459,-0.299 -0.172,-0.15 -0.318,-0.03 -0.033,-0.099 0.05,-0.209 0.109,-0.254 0.172,-0.25 0.055,-0.132 0.067,-0.225 0.023,-0.16 0.193,-0.225 10e-4,-0.059 -0.054,-0.081 -0.154,-0.045 -0.158,-0.019 -0.059,-0.041 -0.021,-0.121 0.02,-0.492 -0.05,-0.296 -0.065,-0.215 0.041,-0.485 -0.11,-0.098 -0.173,-0.255 -0.074,-0.216 0.04,-0.081 0.037,-0.142 0.024,-0.187 -0.007,-0.132 -0.159,-0.129 -0.118,-0.136 -0.014,-0.15 -0.047,-0.184 -0.067,-0.146 -0.03,-0.095 0.058,-0.056 0.225,-0.044 0.327,0.031 0.267,0.002 0.151,-0.094 0.187,-0.887 0.171,-0.234 0.198,-0.136 0.387,0.316 0.16,0.111 0.086,0.01 z m 31.912,42.701 -0.262,0.375 -0.395,0.313 -0.168,-0.097 -0.131,0.004 -0.282,0.12 -0.203,0.021 -0.369,0.213 -0.336,0.107 -0.233,-0.008 -0.081,-0.022 -0.046,-0.145 0.004,-0.058 0.142,0.03 0.519,-0.194 0.647,-0.318 0.062,-0.142 -0.104,-0.231 0.028,-0.052 0.42,0.118 0.469,-0.23 0.392,-0.063 0.184,0.16 -0.257,0.099 z\"\n\t\t\t\tid=\"IR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 431.27375,213.3184 0.322,0.026 0.526,-0.239 0.22,-0.157 0.541,-0.545 0.319,-0.152 0.493,0.038 0.237,-0.038 0.006,0.053 -0.303,0.221 -0.242,0.076 -0.348,0.329 -0.331,0.74 -0.245,0.362 0.002,0.161 0.298,0.285 0.327,0.161 0.3,-0.146 0.131,0.057 0.118,0.211 0.067,0.209 0.015,0.207 -0.054,0.432 -0.18,0.433 -0.244,0.362 0.034,0.114 0.196,0.058 0.929,-0.234 0.097,0.017 0.053,0.117 0.011,0.216 0.051,0.195 0.092,0.175 -0.029,0.178 -0.407,0.563 0.481,-0.354 0.379,-0.1 0.65,0.178 0.266,0.204 0.155,0.359 0.225,-0.119 0.098,0.007 0.147,0.204 0.005,0.218 -0.108,0.309 -0.037,0.286 -0.113,0.117 -0.211,0.085 -0.06,0.095 0.093,0.217 0.137,0.212 0.194,0.009 0.035,0.098 0.004,0.117 -0.026,0.138 -0.063,0.094 -0.101,0.052 -0.133,0.151 0.488,0.33 0.062,0.123 0.007,0.179 -0.038,0.197 -0.083,0.214 -0.147,0.126 -0.352,0.021 -0.216,0.139 0.074,0.23 -0.006,0.291 -0.065,0.343 -0.277,0.517 -0.26,0.275 -0.255,0.178 -0.454,-0.063 -0.247,-0.137 0.027,0.445 -0.252,0.273 0.047,0.228 0.088,0.116 -0.043,0.292 -0.12,0.289 -0.201,0.312 -0.228,0.195 -0.453,0.235 -0.387,0.389 -0.264,0.154 -0.658,-0.007 -0.671,0.25 -0.948,0.526 -0.639,0.42 -0.493,0.475 -0.651,0.772 -0.483,0.324 -0.279,0.087 -0.543,0.069 -0.455,0.209 -1.511,0.39 -0.511,0.213 -0.066,0.193 -0.212,0.291 -0.013,0.105 0.092,0.081 0.018,0.105 -0.187,0.343 -0.374,0.247 -0.176,-0.004 -0.214,-0.213 -0.093,0.008 -0.037,0.033 -0.002,0.066 0.123,0.256 -0.226,0.118 -0.984,0.298 -1.675,-0.22 -0.663,-0.229 -0.819,-0.366 -0.487,-0.097 -0.691,-0.024 -0.568,-0.512 -0.263,-0.317 -0.021,-0.132 0.03,-0.151 0.059,-0.103 0.088,-0.055 0.187,-0.006 0.025,-0.045 -0.143,-0.255 -0.137,0.083 -0.365,0.36 -0.163,-0.013 -0.214,-0.18 -0.008,-0.175 -0.417,-0.067 -0.363,-0.219 -0.361,-0.315 -0.054,-0.12 0.174,-0.177 -0.034,-0.034 -0.131,-0.03 -0.263,0.058 -0.397,0.399 -0.171,0.092 -2.593,0.093 -0.658,0.041 -0.127,0.061 -0.114,-0.259 -0.102,-0.58 -0.038,-0.383 0.026,-0.186 0.091,-0.223 0.141,0.038 0.134,0.177 0.122,0.251 0.139,0.122 0.905,-0.306 0.368,-0.206 0.156,-0.195 0.184,-0.334 0.195,-0.171 0.093,-0.161 0.183,-0.513 0.126,-0.238 0.152,-0.177 0.176,-0.114 0.4,-0.081 -0.263,-0.121 -0.252,0 -0.854,0.543 -0.287,0 0.012,-0.085 0.121,-0.153 0.294,-0.265 -0.202,-0.02 -0.077,-0.12 -0.009,-0.253 0.15,-0.409 0.696,-0.54 0.241,-0.08 0.073,-0.107 -0.091,-0.087 -0.146,-0.053 -0.7,0.557 -0.51,0.192 -0.151,-0.037 -0.264,-0.215 -0.085,-0.097 -0.114,-0.247 0.014,-0.149 0.242,-0.438 -0.039,-0.085 -0.167,-0.043 -0.449,-0.404 -0.71,0.041 -1.759,-0.235 -0.364,0.1 -0.599,0.347 -0.362,0.114 -0.167,-0.075 -0.152,-0.184 -0.138,-0.247 -0.124,-0.313 0.053,-0.217 0.232,-0.124 0.17,-0.059 0.479,0.075 0.584,-0.219 0.372,-0.046 0.107,-0.035 0.219,-0.233 0.108,-0.059 0.168,0.082 0.082,0.158 0.587,-0.246 0.202,-0.123 0.023,-0.077 0.088,-0.088 0.292,0.133 0.237,0.004 0.295,-0.092 0.522,-0.04 1.169,-0.021 0.175,-0.201 0.082,-0.178 0.103,-0.453 -0.046,-0.093 -0.729,0.417 -0.167,-0.007 -0.845,-0.221 -0.305,-0.25 0.1,-0.201 0.448,-0.434 0.462,-0.348 0.68,-0.378 0.159,-0.147 0.017,-0.175 -0.454,-0.311 -0.857,0.086 -0.22,-0.369 -0.713,-0.219 -0.474,0.137 -0.252,-0.224 -0.616,0.31 -1.354,0.447 -0.539,0.309 -0.29,0.103 -0.334,-0.252 -0.576,-0.285 -0.648,-0.089 -0.058,-0.168 0.378,-0.515 0.259,-0.094 0.26,0.048 0.497,0.359 0.343,0.113 -0.43,-0.528 0.011,-0.203 -0.033,-0.305 -0.132,-0.131 -0.132,-0.338 0.054,-0.114 0.169,-0.041 0.346,0.115 0.823,0.586 0.404,-0.104 0.221,-0.216 0.303,-0.16 -0.086,-0.083 -0.711,-0.01 -0.381,-0.12 -0.192,-0.172 -0.167,-0.293 0.059,-0.135 0.198,-0.108 0.607,0.032 -0.4,-0.511 -0.278,-0.294 -0.03,-0.142 0.019,-0.178 0.037,-0.12 0.057,-0.06 0.696,0.3 0.153,0.012 -0.141,-0.193 -0.306,-0.285 -0.013,-0.107 0.129,-0.087 0.063,-0.163 0.006,-0.134 0.211,-0.116 0.214,-0.005 0.215,0.106 0.666,0.556 0.095,0.156 0.032,0.205 -0.033,0.255 0.028,0.102 0.26,-0.087 0.208,0.107 0.103,-0.029 0.259,-0.383 0.178,0.091 0.107,0.179 0.034,0.162 0.016,0.222 -0.046,0.462 0.012,0.065 0.181,-0.261 0.308,-0.02 0.04,-0.131 0.009,-0.486 -0.025,-0.412 -0.034,-0.084 -1.014,-0.572 -0.176,-0.136 -0.221,-0.282 0.045,-0.142 0.198,-0.127 0.297,-0.051 0.691,0.007 0.07,-0.06 -0.134,-0.149 -0.319,-0.096 -0.075,-0.087 -0.038,-0.166 -0.379,0.091 -0.423,0.004 -0.407,-0.102 -0.008,-0.129 0.16,-0.19 0.333,-0.315 0.154,-0.079 0.465,0.055 0.461,-0.089 0.374,0.108 0.297,0.312 0.421,0.548 0.57,0.349 0.053,0.11 0.303,0.285 0.604,0.766 0.613,0.443 0.028,0.113 -0.101,0.132 -0.236,0.155 0.054,0.085 0.308,0.113 0.222,0.298 0.015,0.13 -0.201,0.92 -0.107,0.195 -0.122,0.103 -0.566,-0.173 0.134,0.292 0.405,0.31 0.091,0.173 -0.06,0.17 0.044,0.039 0.148,-0.091 0.062,0.096 -0.026,0.283 -0.063,0.235 -0.101,0.186 0.03,0.081 0.158,-0.025 0.148,0.048 0.232,0.257 0.188,0.783 0.093,0.252 0.068,-0.224 0.084,-0.571 0.079,-0.292 0.075,-0.013 0.064,-0.096 0.054,-0.18 0.11,-0.636 0.38,-0.483 0.181,-0.149 0.171,-0.032 0.082,0.06 0.285,0.507 0.173,0.085 0.088,-0.027 0.122,-0.345 0.154,-0.662 0.035,-0.742 -0.083,-0.823 0.048,-0.59 0.181,-0.353 0.237,-0.109 0.295,0.136 0.215,0.216 0.424,0.82 0.343,0.429 0.294,0.458 0.152,0.149 0.292,0.075 0.078,-0.03 0.052,-0.105 0.027,-0.182 -0.063,-1.171 0.082,-0.365 0.124,-0.261 0.526,-0.153 0.287,-0.164 0.279,-0.269 0.231,-0.145 0.184,-0.019 0.191,0.105 0.201,0.229 0.312,0.446 0.393,0.737 0.5,0.548 0.261,0.868 0.056,0.146 0.062,0.017 0.066,-0.113 0.042,-0.159 0.012,-0.386 -0.14,-0.512 -0.467,-1.297 -0.008,-0.247 0.059,-0.198 0.329,-0.022 0.766,0.12 0.244,0.202 0.521,0.794 0.146,0.192 0.089,0.048 0.033,-0.096 0.202,-0.147 0.139,-0.178 0.233,-0.438 0.509,-0.79 0.106,-0.023 0.148,0.062 0.261,0.207 0.124,0.166 0.245,0.126 0.251,-0.044 0.347,-0.277 0.393,-0.17 0.134,-0.393 0.025,-0.18 -0.316,-1.177 0.133,-0.242 0.685,-0.293 0.599,-0.023 0.142,0.081 0.377,0.575 0.256,0.288 0.129,0.231 0.031,0.509 0.155,0.187 z\"\n\t\t\t\tid=\"IS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 513.34375,315.8624 -0.057,0.233 -0.119,0.058 -0.208,0.136 -0.238,0.186 -0.222,0.209 -0.06,0.227 0.061,0.148 0.06,0.051 0.081,-0.045 0.118,0.028 0.148,0.081 0.247,0.079 0.007,0.078 -0.052,0.1 -0.192,0.177 -0.173,0.2 -0.017,0.122 0.021,0.089 0.06,0.054 0.256,-0.024 0.038,0.073 -0.125,0.513 0.039,0.087 0.225,0.082 0.164,0.123 0.307,0.324 0.122,0.262 -0.084,0.088 -0.193,0.043 -0.157,-0.022 0.178,-0.158 -0.435,-0.576 -0.197,0.001 -0.261,0.244 -0.726,-0.247 -0.139,0.1 -0.103,0.195 -0.252,0.242 -0.357,0.106 -0.398,0.266 -0.419,0.188 -0.32,0.142 -0.184,-0.025 0.292,-0.307 -0.124,-0.006 -0.388,0.217 -0.223,0.183 -0.072,0.308 -0.065,0.506 0.17,0.134 0.298,0.666 0.367,0.284 -0.071,0.271 -0.097,0.214 -0.222,0.185 -0.184,-0.137 -0.113,0.003 -0.085,0.433 0.159,1.151 0.256,0.804 0.254,0.35 0.573,0.543 0.606,0.286 1.09,0.911 0.598,0.288 0.157,0.156 0.362,0.699 0.313,0.805 0.337,1.258 0.24,0.617 0.484,0.696 1.004,0.992 0.913,0.723 0.85,0.446 0.663,0.078 1.569,-0.098 0.273,0.042 0.29,0.12 0.069,0.309 -0.106,0.208 -0.33,0.216 -0.336,0.299 -0.037,0.407 0.314,0.286 1.514,0.757 1.548,0.631 0.482,0.321 0.559,0.499 1.349,0.684 0.228,0.332 0.82,0.713 0.371,0.549 0.071,0.425 -0.177,0.431 -0.082,0.303 -0.139,0.299 -0.349,-0.113 -0.397,-0.308 -0.598,-1.254 -1.091,-0.127 -0.226,-0.093 -0.388,-0.216 -0.023,-0.143 -0.096,-0.178 -0.099,-0.06 -0.417,-0.04 -0.289,0.204 -0.34,0.483 -0.386,0.693 -0.392,1.013 -0.022,0.408 0.213,0.395 0.636,0.22 0.491,0.351 0.324,0.366 0.023,0.881 0.145,0.499 -0.213,0.283 -0.413,-0.073 -0.55,0.18 -0.39,0.322 -0.162,0.306 0.042,0.792 -0.08,0.301 -0.739,0.568 -0.388,0.58 -0.097,0.24 -0.148,0.272 -0.933,0.01 -0.221,-0.337 -0.008,-0.501 0.16,-0.309 0.343,-0.145 0.231,-0.644 -0.073,-0.466 0.135,-0.207 0.127,-0.146 0.261,-0.086 0.369,-0.082 0.037,-0.653 -0.288,-0.297 -0.101,-0.417 -0.134,-0.772 -0.475,-0.989 -0.254,-0.885 -0.199,-0.438 -0.302,-0.229 -0.545,0.003 -0.271,-0.065 -0.964,-0.618 -0.067,-0.094 0.006,-0.165 0.16,-0.249 -0.108,-0.337 -0.114,-0.319 -0.189,-0.272 -0.207,-0.142 -0.434,0.087 -0.152,0.067 -0.274,-0.023 -0.215,0.121 -0.12,0.004 0.338,-0.479 -0.091,-0.113 -0.334,-0.197 -0.454,-0.03 -0.126,-0.024 -0.074,0.123 -0.088,-0.067 0.009,-0.214 -0.527,-0.962 -0.354,-0.393 -0.179,-0.07 -0.323,0.083 -0.541,-0.172 -0.323,-0.038 -0.178,0.042 -0.266,0.125 -0.134,-0.083 -0.047,-0.129 -0.491,-0.401 -0.613,-0.227 -1.193,-1.283 -0.366,-0.481 -0.753,-0.531 -0.476,-0.776 -0.39,-0.285 -0.567,-0.229 -0.131,0.029 -0.17,0.086 -0.134,0.012 -0.106,-0.101 0.108,-0.104 0.121,-0.047 -0.047,-0.298 -0.646,-0.774 -0.378,-0.25 -0.107,-0.154 -0.079,-0.211 -0.081,-0.139 -0.179,-0.08 -0.153,0.014 -0.211,-0.053 0.007,-0.374 0.042,-0.287 -0.032,-0.244 -0.206,-0.643 -0.356,-0.546 -0.21,-1.311 -0.162,-0.371 -0.394,-0.281 -0.889,-0.316 -1.239,-0.851 -0.262,-0.015 -0.745,-0.332 -0.462,-0.057 -0.6,0.298 -0.729,0.818 -0.591,0.847 -0.215,0.164 -0.763,0.288 -0.674,0.137 -0.007,-0.216 -0.024,-0.163 0.114,-0.179 0.188,-0.211 0.173,-0.266 0.072,-0.192 -0.034,-0.128 -0.078,-0.19 -0.106,-0.014 -0.642,0.16 -0.147,-0.041 -0.475,-0.249 -0.511,-0.306 -0.188,-0.218 -0.071,-0.22 0.053,-0.142 -0.042,-0.138 -0.1,-0.186 0.09,-0.211 0.159,-0.263 0.08,-0.179 0.134,-0.046 0.064,-0.109 -0.107,-0.436 -0.056,-0.07 -0.092,-0.054 -0.142,-0.006 -0.248,-0.09 -0.176,-0.151 -0.038,-0.204 -0.093,-0.196 -0.159,-0.18 -0.02,-0.197 0.181,-0.104 0.247,-0.004 0.174,0.039 0.39,-0.317 0.144,-0.028 0.129,-0.068 0.108,-0.434 0.083,-0.13 0.02,-0.076 -0.077,-0.091 -0.315,-0.306 -0.144,-0.32 -0.227,-0.359 -0.211,-0.159 -0.043,-0.124 -0.005,-0.157 0.043,-0.139 0.382,-0.216 0.226,-0.23 0.097,0.088 0.206,0.094 0.559,-0.128 0.347,-0.129 0.244,-0.136 0.151,0.024 0.548,0.203 0.181,-0.103 0.395,-0.275 0.059,-0.145 0.312,-0.44 0.006,-0.107 -0.128,-0.277 0.04,-0.061 0.382,-0.284 0.187,-0.252 0.203,-0.169 0.146,-0.004 0.04,0.058 0.017,0.118 -0.013,0.486 0.056,0.149 0.3,0.348 0.214,0.198 0.497,0.136 0.023,0.065 -0.137,0.261 0.301,0.312 0.054,0.228 0.139,0.128 0.196,-0.063 0.064,-0.121 -0.077,-0.211 -0.057,-0.221 0.011,-0.128 0.054,-0.147 0.137,-0.206 0.372,-0.472 0.134,-0.273 0.024,-0.423 0.001,-0.34 0.124,-0.083 0.267,0.061 0.08,-0.007 0.036,0.209 0.114,0.333 0.134,0.172 0.143,0.041 0.168,0.001 0.416,-0.203 0.271,-0.088 0.154,0.024 0.091,0.138 0.194,0.363 0.111,0.041 0.134,-0.042 0.047,-0.062 -0.043,-0.14 -0.057,-0.303 -0.078,-0.235 -0.102,-0.11 -0.021,-0.143 0.064,-0.258 0.073,-0.216 0.142,-0.059 0.163,-0.027 0.215,0.229 0.255,0.072 0.19,-0.012 0.033,-0.133 -0.012,-0.146 -0.113,-0.188 0.022,-0.285 0.131,-0.532 0.075,0.041 0.282,0.005 0.307,0.03 0.198,0.217 0.194,0.074 0.276,0.023 0.185,-0.03 0.09,-0.082 0.107,-0.254 0.198,-0.315 0.31,-0.162 0.53,-0.03 0.265,-0.059 0.275,0.003 0.207,0.049 0.214,-0.006 0.544,-0.22 0.561,-0.174 0.078,0.029 0.012,0.058 -0.101,0.134 -0.098,0.178 0.066,0.203 0.319,0.407 0.174,0.311 0.164,0.233 0.255,0.123 0.335,0.075 0.284,0.027 0.297,0.088 1.019,0.217 0.513,0.06 0.389,0.009 0.585,0.131 z m -3.409,10.401 0.083,-0.2 -0.031,-0.143 -0.176,0.029 -0.124,0.186 0.083,0.157 0.165,-0.029 z m -0.129,7.648 -0.002,-0.03 -0.021,0.003 -0.009,0.018 0.009,0.012 0.023,-0.003 z m -5.736,-3.634 0.093,0.148 0.011,0.086 -0.063,0.098 0.026,0.22 -0.235,-0.183 -0.355,0.092 -0.218,-0.02 -0.06,-0.164 0.05,-0.096 0.338,-0.021 0.105,-0.047 0.206,0.022 0.102,-0.135 z m -2.143,7.421 0.141,0.236 0.315,0.966 0.03,0.208 -0.063,0.213 -0.08,0.151 -0.313,0.484 0.046,0.399 0.116,0.247 0.017,0.273 -0.058,0.338 -0.194,2.069 -0.094,0.365 -0.059,0.315 -0.214,0.096 -0.276,-0.101 -0.348,-0.178 -0.161,0.011 -0.162,0.061 -0.133,-0.052 -0.127,-0.101 -0.095,0.706 -0.157,0.286 -0.239,0.183 -0.225,0.011 -0.232,-0.061 -0.196,0 -0.149,-0.135 -0.118,-0.238 -0.188,-0.289 -0.191,-0.343 -0.021,-0.311 -0.033,-0.687 0.055,-0.15 0.08,-0.144 0.039,-0.308 -0.027,-0.269 0.056,-0.096 0.111,0.096 0.083,-0.036 -0.005,-0.139 0.025,-0.253 -0.146,-0.212 -0.247,-0.072 -0.024,-0.222 0.026,-0.217 0.13,-0.146 0.044,-0.194 10e-4,-0.593 -0.174,-0.219 -0.067,-0.332 -0.09,-0.212 -0.162,-0.214 -0.184,-0.174 -0.113,-0.168 -0.025,-0.44 0.064,-0.368 0.058,-0.158 0.059,0.023 0.182,0.183 0.149,0.041 0.295,0.044 0.29,-0.059 0.356,-0.167 0.343,-0.202 0.497,-0.595 0.306,-0.121 0.157,-0.157 0.054,-0.212 0.13,-0.055 0.153,0.206 0.19,0.022 0.293,0.17 0.126,0.162 0.108,0.195 0.104,0.086 0.111,0.049 0.016,0.046 -0.088,0.046 -0.101,0.223 0.057,0.064 0.166,0.126 z m -3.777,-0.584 -0.093,0.169 -0.132,-0.012 0.052,-0.125 0.122,-0.251 0.148,-0.084 0.066,0.075 -0.07,0.144 -0.093,0.084 z m 15.863,1.236 -0.125,0.032 -0.073,-0.044 -0.04,-0.056 0.049,-0.139 0.255,0.083 -0.003,0.078 -0.063,0.046 z m -15.321,5.968 -0.162,0.356 -0.169,-0.252 -0.007,-0.216 0.023,-0.062 0.208,0.091 0.107,0.083 z m 19.919,3.032 -0.19,0.404 -0.093,0.155 -0.677,0.985 -0.078,0.227 -0.048,0.247 -0.07,0.216 -0.094,0.203 -0.089,0.258 0.017,0.292 0.032,0.143 0.082,0.094 0.134,0.088 0.103,0.136 -0.158,0.123 0.173,0.247 0.148,0.146 0.02,0.146 -0.003,0.146 -0.307,0.274 -0.12,0.151 -0.074,0.183 -0.032,0.188 0.033,0.17 -0.01,0.169 -0.309,-0.021 -0.316,-0.104 -0.319,0.045 -0.454,-0.196 -0.165,-0.035 -0.15,-0.077 -0.377,-0.608 -0.304,-0.257 -0.326,-0.201 -0.333,-0.012 -0.333,0.023 -0.294,-0.124 -0.599,-0.415 -0.635,-0.333 -0.269,-0.216 -0.123,-0.146 -0.144,-0.097 -0.363,-0.096 -0.327,-0.226 -0.148,-0.016 -0.319,0.027 -0.164,-0.016 -0.165,-0.08 -0.318,-0.265 -0.204,-0.368 -0.053,-0.163 0.144,-0.421 0.171,-0.405 0.151,-0.113 0.176,-0.082 0.106,-0.12 0.09,-0.147 0.327,0.424 0.146,0.103 0.148,-0.023 0.262,-0.152 0.022,-0.167 0.29,-0.211 0.368,-0.004 0.17,0.039 0.089,0.191 0.14,0.059 0.162,0.025 0.534,0.363 0.15,0.059 0.151,0.01 0.415,-0.152 0.318,-0.058 0.667,0.084 0.36,-0.091 0.252,-0.011 0.367,-0.14 0.282,-0.233 0.147,-0.058 0.158,-0.017 0.382,0.015 0.384,0.053 0.161,-0.055 0.135,-0.153 0.156,-0.069 0.171,0.046 0.443,-0.262 0.196,-0.018 0.186,0.101 -0.165,0.176 z m -9.894,5.154 -0.135,0.039 -0.176,-0.12 -0.012,-0.168 0.032,-0.05 0.214,0.077 0.067,0.156 0.01,0.066 z\"\n\t\t\t\tid=\"IT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 469.22975,304.5504 0.025,0.216 -0.123,0.047 -0.105,-0.075 -0.209,0 -0.197,0.047 0.043,-0.386 0.388,0.047 z\"\n\t\t\t\tid=\"JE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 258.06175,410.5424 0.342,0.105 0.354,0.055 0.152,0.003 0.143,0.034 0.323,0.253 0.26,0.138 0.985,0.309 0.328,0.533 0.062,0.167 -0.254,0.098 -0.321,0.035 -0.306,0.005 -0.283,-0.101 -0.123,-0.078 -0.295,-0.038 0.074,-0.072 -0.131,-0.033 -0.164,0.007 -0.121,0.205 -0.134,0.162 -0.258,-0.016 -0.099,-0.138 -0.135,0.062 -0.11,0.102 -0.13,0.382 -0.211,-0.19 -0.229,-0.158 -0.287,-0.066 -0.58,-0.011 -0.274,-0.051 -0.228,-0.323 -0.09,-0.092 -0.229,-0.084 -0.228,-0.371 -0.082,-0.051 -0.619,-0.079 -0.127,-0.203 0.038,-0.184 0.206,-0.225 0.101,-0.064 0.342,0.01 0.327,-0.068 0.144,-0.096 0.15,-0.064 1.184,0.163 0.273,10e-4 z\"\n\t\t\t\tid=\"JM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 584.75675,368.2054 -0.416,0.385 -0.098,0.042 -0.541,0.159 -1.106,0.326 -0.741,0.218 -0.948,0.278 -0.787,0.232 -0.779,0.228 -0.722,0.212 0.412,0.446 0.629,0.681 0.42,0.453 0.495,0.582 0.442,0.519 0.469,0.549 -0.329,0.186 -0.542,0.306 -0.055,0.056 -0.047,0.057 -0.224,0.545 -0.176,0.429 -0.061,0.053 -0.756,0.158 -0.765,0.158 -0.482,0.101 -0.145,0.11 -0.314,0.533 -0.325,0.548 -0.542,0.448 -0.602,0.496 -0.149,0.032 -0.435,-0.076 -0.744,-0.13 -0.719,-0.126 -0.492,-0.085 -0.597,-0.105 0.087,-0.419 -0.024,-0.227 0.142,-0.746 0.083,-0.353 0.041,-0.261 0.206,-0.529 -0.025,-0.173 0.043,-0.611 -0.021,-0.118 0.094,-0.334 0.176,-0.485 0.172,-0.419 0.062,-0.188 0.176,-0.398 0.159,-0.489 -0.084,-0.268 -0.025,-0.052 0.064,-0.308 -0.002,-0.002 0.078,-0.504 0.042,-0.272 0.095,-0.361 0.168,-0.306 -0.078,-0.721 0.009,-0.39 0.105,-0.444 -0.058,-0.521 0.049,-0.744 0.011,-0.069 0.061,-0.09 0.047,-0.047 0.346,-0.155 0.148,-0.02 0.302,0.07 0.173,0.156 0.289,0.441 0.45,0.128 0.181,0.125 0.246,0.233 0.301,0.085 0.952,0.145 0.759,-0.49 0.642,-0.415 0.729,-0.472 0.496,-0.322 0.846,-0.549 0.558,-0.347 0.733,-0.459 0.724,-0.453 0.201,0.739 0.196,0.721 0.203,0.744 0.198,0.721 -0.214,0.069 0.168,0.551 0.277,-0.084 0.301,-0.065 0.127,0.354 z\"\n\t\t\t\tid=\"JO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 878.53675,325.4254 0.352,0.02 0.157,-0.018 0.269,0.059 1.067,0.591 0.322,0.075 0.333,0.009 0.234,-0.048 0.206,-0.162 0.644,-0.717 0.678,-0.655 0.075,0.025 0,0.181 -0.05,0.201 -0.3,0.599 -0.333,0.804 -0.071,0.406 0.108,0.395 0.209,0.326 0.165,0.445 0.19,0.617 0.268,0.078 0.146,0.009 0.268,-0.185 0.253,-0.235 0.218,-0.029 0.229,0.04 -0.301,0.164 -0.284,0.2 -0.244,0.378 -0.091,0.071 -0.281,-0.023 -0.161,0.014 -0.329,0.158 -0.289,0.179 -0.276,0.219 -0.301,0.117 -0.321,0.028 -0.495,0.179 -0.321,0.013 -0.603,-0.156 -0.293,0.042 -0.639,0.352 -0.582,0.508 -0.509,0.569 -0.425,0.682 -0.171,0.354 -0.103,0.396 -0.014,0.262 -0.038,0.251 -0.098,0.175 -0.118,0.142 -0.351,-0.083 -0.576,-0.362 -1.117,-0.527 -1.18,-0.809 -0.664,-0.407 -1.248,0.122 -1.181,0.776 -0.105,-0.066 -0.451,-0.532 -0.219,-0.211 -0.261,-0.06 -0.194,0.007 -0.188,0.039 -0.267,0.274 -0.098,0.197 -0.076,0.224 -0.023,0.158 0.032,0.155 0.253,0.35 0.312,0.26 0.141,0.049 0.299,-0.018 0.139,0.027 0.501,0.521 0.549,0.488 0.121,0.161 -0.203,0.169 -0.222,0.084 -0.259,-0.021 -0.256,-0.064 -0.438,-0.207 -0.188,0.176 -0.292,0.361 -0.161,0.392 -0.131,0.179 -0.322,0.236 -0.341,0.122 -0.179,-0.04 -0.136,-0.148 -0.077,-0.177 -0.039,-0.206 0.072,-0.446 0.177,-0.403 0.068,-0.412 -0.145,-0.581 -0.092,-0.122 -0.362,-0.341 -0.168,-0.333 -0.04,-0.415 0.021,-0.229 0.088,-0.507 0.088,-0.256 0.166,-0.084 0.182,-0.051 0.279,-0.184 0.307,-0.238 0.294,-0.272 0.291,-0.333 0.151,-0.366 -0.249,-0.45 -0.052,-0.268 0.037,-0.253 0.266,-0.135 0.273,0.102 0.551,0.372 0.107,0.037 0.378,0.017 0.518,0.081 0.3,-0.02 0.145,-0.056 0.218,-0.307 0.107,-0.392 -0.039,-0.505 -0.002,-0.502 0.138,-0.41 0.432,-0.661 0.124,-0.39 0.045,-0.952 0.156,-0.42 0.125,-0.437 0.06,-0.918 -0.177,-0.886 -0.178,-0.436 -0.204,-0.415 0.03,-0.397 0.165,-0.369 0.004,-0.111 0.039,-0.099 0.309,-0.07 0.145,-0.079 0.139,-0.178 0.165,-0.104 0.121,0.104 0.1,0.182 0.436,0.447 0.687,0.796 0.809,1.209 0.507,0.587 0.534,0.531 0.599,0.542 0.627,0.465 0.4,0.22 0.293,0.35 0.181,0.057 z m -7.723,-4.787 -0.108,0.252 -0.146,-0.375 -0.029,-0.405 0.084,0.002 0.154,0.061 0.037,0.197 0.008,0.268 z m 0.625,0.848 -0.194,0.028 -0.227,-0.166 -0.028,-0.208 0.164,-0.166 0.163,0.061 0.163,0.214 0.054,0.112 -0.095,0.125 z m -5.091,11.738 -0.064,0.02 -0.066,-0.032 -0.065,-0.285 0.056,-0.15 0.181,-0.105 0.176,-0.029 -0.149,0.524 -0.069,0.057 z m 4.906,2.653 0.11,0.07 0.524,-0.189 -0.1,0.571 -0.056,0.575 0.038,0.952 0.047,0.428 0.091,0.414 0.224,0.296 0.292,0.21 0.423,0.669 0.227,0.82 0.16,0.397 0.12,0.416 0.037,0.19 0.003,0.19 -0.036,0.26 0.04,0.21 -0.046,0.658 -0.189,0.759 -0.024,0.387 -0.165,0.077 -0.1,0.179 -0.085,0.083 -0.095,0.064 -0.137,0.016 -0.099,0.073 -0.039,0.205 -0.063,0.189 -0.12,0.175 -0.094,0.192 -0.077,0.468 -0.028,0.479 -0.115,0.334 -0.279,0.087 -0.319,-0.005 -0.409,0.154 -0.088,0.091 -0.323,0.582 -0.093,0.341 -0.003,0.366 0.09,0.45 0.122,0.439 0.092,0.815 -0.097,1.238 -0.094,0.395 -0.205,0.267 -0.156,0.124 -0.134,0.152 -0.174,0.401 -0.288,0.798 -0.023,0.2 10e-4,0.207 -0.078,0.27 -0.05,0.265 0.047,0.308 0.089,0.288 0.386,0.737 0.151,0.218 0.17,0.198 -0.659,0.219 -0.118,0.101 -0.392,0.418 -0.125,0.396 0.01,0.438 -0.065,0.157 -0.107,0.136 -0.112,0.09 -0.438,0.2 -0.28,0.199 -0.278,0.311 -0.11,0.162 -0.215,-0.052 -0.126,-0.144 0.124,-0.18 -0.038,-0.213 0.061,-0.547 -0.069,-0.22 0.224,-0.167 0.106,-0.266 0.232,-0.213 0.167,-0.189 0.029,-0.154 -0.149,-0.166 -0.158,-0.12 -0.218,0 -0.21,0.035 -0.137,0.158 -0.045,0.215 0.011,0.1 -0.018,0.087 -0.33,0.294 0.043,0.307 0.097,0.156 0.124,0.074 -0.037,0.105 -0.157,0.247 -0.109,0.024 -0.201,-0.346 -0.252,-0.189 -0.312,10e-4 -0.32,0.069 -0.243,0.23 -0.08,0.191 -0.052,0.197 0.018,0.479 -0.101,0.4 -0.198,0.351 -0.092,0.128 -0.241,0.238 -0.167,0.031 -0.118,-0.108 -0.096,-0.164 0.122,-0.6 -0.005,-0.338 0.282,-0.172 -0.231,-0.24 -0.284,-0.097 -0.399,0.128 -0.113,0.145 -0.077,0.194 -0.215,0.246 -0.236,0.229 -0.269,0.392 -0.18,0.463 -0.59,-0.151 -0.321,-0.034 -0.325,0.012 -0.576,-0.057 -0.632,0.095 -0.72,0.182 0.043,-0.131 0.592,-0.279 0.021,-0.082 -0.057,-0.153 -0.147,-0.007 -0.354,0.053 -0.181,-0.023 -0.073,-0.164 -0.12,-0.07 -0.08,0.067 0.026,0.318 -0.087,0.042 -0.117,-0.082 0.037,-0.248 -0.079,-0.363 -0.01,-0.226 0.124,-0.194 -0.127,-0.082 -0.134,0.031 -0.17,0.093 -0.15,0.132 -0.317,0.663 -0.123,0.378 0.232,0.303 0.634,0.423 0.108,0.104 0.002,0.18 -0.077,0.191 -0.172,0.083 -0.695,0.141 -0.603,0.273 -0.174,0.276 -0.548,1.066 -0.439,0.727 -0.62,0.25 -0.68,-0.223 -0.165,-0.253 -0.133,-0.313 -0.253,-0.283 -0.229,-0.309 -0.133,-0.367 0.021,-0.592 -0.099,-0.357 0.089,-0.095 0.375,-0.218 0.123,-0.122 0.212,-0.284 0.076,-0.158 0.011,-0.239 -0.17,-0.125 -0.44,0.004 -0.439,0.075 -0.313,-0.104 -0.407,-0.29 -0.126,-0.062 -0.438,-0.018 -0.313,0.054 -0.307,0.105 -0.325,0.034 -0.108,0.055 -0.375,0.355 -0.299,0.223 -0.258,0.111 -0.557,0.029 -0.279,0.072 -0.292,0.117 -0.082,-0.01 -0.308,0.162 -0.354,0.14 -0.188,0.14 -0.347,-0.092 -0.686,0.251 -0.332,0.031 -0.342,-0.139 -0.318,-0.225 -0.305,0.097 -0.209,0.331 -0.102,0.658 -0.119,0.296 -0.036,0.355 -0.158,-0.056 -0.918,-0.639 -0.063,-0.023 -0.742,0.11 -0.191,0.053 -0.239,0.129 -0.253,0.058 -0.23,-0.093 -0.221,-0.151 -0.212,0.045 -0.217,0.106 -0.084,-0.966 0.043,-0.127 0.133,-0.169 0.147,-0.145 0.359,-0.05 0.363,0.047 0.26,-0.066 0.22,-0.192 0.231,-0.272 0.261,-0.222 0.354,-0.175 0.342,-0.201 0.301,-0.282 0.285,-0.309 0.262,-0.227 0.285,-0.19 0.434,-0.458 0.575,-0.515 0.221,-0.382 0.137,-0.105 0.495,-0.213 0.657,-0.164 0.31,0.008 0.306,0.335 0.165,-0.046 0.168,-0.087 0.338,-0.048 0.348,0.056 0.34,0.001 0.34,-0.042 0.652,-0.11 0.344,-0.133 0.336,-0.172 1.196,-0.121 0.819,-0.289 0.13,0.021 0.126,0.066 0.01,0.214 -0.104,0.233 0.101,0.141 0.166,0.087 0.771,0.027 0.22,0.05 0.322,-0.159 0.304,-0.197 0.317,-0.26 0.222,-0.293 -0.205,-0.367 -0.045,-0.402 0.172,-0.437 0.249,-0.368 0.296,-0.223 0.273,-0.257 0.552,-0.73 0.399,-0.592 0.144,-0.73 -0.084,-0.866 0.349,-0.646 0.334,-0.111 0.663,-0.295 0.348,-0.086 0.052,0.129 -0.01,0.169 -0.521,0.542 -0.299,0.223 -0.178,0.069 -0.164,0.098 -0.067,0.191 0.266,0.318 0.067,0.235 -0.017,0.225 0.012,0.203 0.3,0.22 0.345,0.073 0.144,-0.002 0.126,-0.058 0.394,-0.539 0.088,-0.094 1.12,-0.396 0.551,-0.303 0.305,-0.079 0.286,-0.158 0.642,-0.61 0.236,-0.282 0.215,-0.312 0.172,-0.363 0.136,-0.393 0.186,-0.245 1.017,-0.585 0.327,-0.319 0.104,-0.155 0.126,-0.449 0.087,-0.467 0.123,-0.367 0.167,-0.344 0.223,-0.351 0.251,-0.327 0.148,-0.335 0.216,-0.803 0.094,-0.446 0.074,-0.161 0.108,-0.135 0.094,-0.172 0.072,-0.192 0.033,-0.19 0.046,-0.582 -0.028,-0.454 -0.168,-0.385 -0.139,-0.109 -0.151,-0.006 -0.228,0.033 -0.193,-0.157 0.04,-0.139 0.197,-0.026 0.134,-0.072 0.097,-0.131 0.181,-0.421 0.108,-0.452 0.01,-0.2 -0.142,-0.365 -0.112,-0.439 -0.003,-0.237 0.123,-0.274 0.176,-0.223 0.157,-0.052 0.17,-0.016 0.155,-0.086 0.144,-0.125 0.081,-0.138 0.126,-0.376 0.049,-0.214 -0.08,-0.576 0.082,-0.158 0.116,-0.098 0.155,0.074 0.16,0.015 0.186,-0.023 0.178,0.061 0.033,0.148 0.112,0.972 0.064,0.131 0.13,0.102 0.146,-0.015 0.126,-0.151 0.085,-0.201 0.168,-0.042 0.513,0.216 0.182,-0.154 0.118,-0.239 0.103,-0.423 -0.05,-0.382 -0.123,-0.142 -0.127,0.025 -0.112,0.105 -0.126,0.057 -0.757,0.201 0.004,-0.426 0.162,-0.64 0.089,-0.203 0.128,-0.096 0.318,0.112 0.155,0.074 0.339,0.318 z m -8.098,12.885 -0.267,0.009 -0.066,-0.035 0.161,-0.088 0.015,-0.147 0.097,-0.262 -0.002,-0.075 -0.212,-0.014 0.011,-0.297 0.158,-0.294 0.435,-0.463 0.119,-0.087 0.018,0.203 -0.132,0.479 -0.026,0.173 0.342,0.036 -0.22,0.573 -0.431,0.289 z m -13.958,5.664 -0.128,0.129 -0.24,-0.042 -0.139,-0.187 0.046,-0.211 0.251,-0.162 0.24,0.325 -0.03,0.148 z m 17.08,5.069 -0.03,0.16 -0.149,-0.035 -0.071,-0.104 0.009,-0.187 0.157,-0.001 0.084,0.167 z m -28.264,1.264 -0.057,0.163 -0.19,-0.115 -0.087,-0.104 0.177,-0.513 -0.021,-0.195 0.011,-0.095 0.351,-0.269 0.061,0.051 0.021,0.075 -0.031,0.115 0.018,0.254 -0.264,0.42 0.011,0.213 z m 15.569,0.221 -0.304,0.288 -0.264,-0.02 -0.132,-0.129 -0.044,-0.159 0.251,-0.25 0.216,-0.354 0.196,-0.157 0.158,-0.088 0.124,0.003 -0.278,0.494 0.077,0.372 z m -1.631,-0.661 -0.052,0.067 -0.05,-0.018 -0.179,0.155 -0.038,-0.149 -0.141,-0.099 -0.017,-0.078 0.403,-0.051 0.13,0.041 -0.056,0.132 z m 0.015,0.769 0.389,0.141 0.397,-0.04 -0.006,0.617 0.057,0.207 0.111,0.185 -0.057,0.269 0.18,0.092 -0.534,0.306 -0.481,0.406 -0.198,0.273 -0.179,0.293 -0.104,0.31 -0.067,0.333 -0.161,-0.132 -0.464,-0.541 -0.294,-0.148 -0.473,-0.079 -0.15,0.018 -0.972,0.505 -0.129,0.369 -0.265,0.555 -0.126,0.183 -0.14,0.053 -0.099,0.095 -0.108,0.472 -0.301,0.29 -0.185,0.009 -0.314,-0.08 -0.142,0.045 0.188,-0.465 -0.3,-0.057 -0.301,0.01 -0.007,-0.303 -0.182,-0.172 0.135,-0.224 0.004,-0.183 0.079,-0.101 0.027,-0.147 -0.011,-0.126 -0.185,-0.038 -0.113,-0.089 0.021,-0.332 -0.106,-0.012 -0.264,0.058 -0.548,0.256 -0.149,0 0.229,-0.183 0.487,-0.25 0.219,-0.144 0.478,-0.404 0.301,-0.191 0.156,-0.339 0.049,-0.206 0.102,-0.182 0.09,-0.291 0.154,-0.097 0.269,-0.25 0.154,0.024 0.172,0.307 0.231,0.235 0.166,-0.02 0.297,-0.121 0.144,-0.027 0.343,0.015 0.309,-0.149 0.126,-0.176 0.047,-0.22 -0.115,-0.369 0.148,0.037 0.143,-0.015 0.335,-0.235 0.345,-0.14 0.357,-0.035 0.402,0.133 0.389,0.212 z m -14.25,0.449 -0.183,0.137 -0.078,-0.209 0.08,-0.594 0.343,0.122 -0.006,0.182 -0.156,0.362 z m 9.258,0.028 -0.081,0.135 -0.249,-0.041 0.1,-0.117 0.076,-0.142 0.056,-0.029 0.047,0.154 0.051,0.04 z m -0.877,0.573 0.137,0.124 0.325,-0.05 0.04,0.035 -0.095,0.112 -0.144,0.111 -0.26,-0.083 -0.164,-0.004 -0.023,-0.185 0.021,-0.067 0.163,0.007 z m -3.062,1.151 0.377,0.1 0.16,0.006 0.147,-0.045 0.226,-0.131 0.235,-0.097 0.169,0.049 0.149,0.117 0.078,0.165 -0.038,0.172 -0.267,0.37 -0.22,0.394 0.504,0.074 0.504,-0.008 -0.117,0.243 -0.02,0.212 0.154,0.101 0.131,0.136 -0.034,0.123 -0.075,0.121 0.275,0.182 -0.018,0.122 -0.071,0.128 -0.687,0.834 -0.202,0.421 -0.14,0.463 -0.129,0.338 -0.094,0.351 -0.071,0.378 -0.128,0.39 0.043,0.345 -0.043,0.354 -0.345,0.872 -0.246,-0.016 -0.309,-0.105 -0.193,0.016 -0.1,0.193 0.177,0.397 -0.55,0.471 -0.608,0.316 -0.004,-0.144 0.058,-0.113 0.087,-0.091 0.063,-0.11 0.089,-0.37 -0.044,-0.373 -0.184,-0.468 -0.013,-0.168 0.127,-0.068 0.085,-0.02 0.046,-0.065 0.002,-0.155 -0.058,-0.115 -0.174,-0.037 -0.166,-0.002 -0.117,0.174 -0.161,0.335 -0.078,0.339 0.034,0.185 0.071,0.166 0.221,0.277 -0.064,0.164 -0.092,0.127 -0.78,-0.289 -0.169,-0.021 -0.14,-0.061 -0.15,-0.381 0.318,-0.092 0.094,-0.046 0.035,-0.122 0.043,-0.372 -0.148,-0.312 -0.126,-0.111 -0.102,-0.127 0.064,-0.263 -0.042,-0.332 -0.004,-0.464 0.055,-0.08 0.295,-0.094 0.213,-0.249 0.188,-0.284 0.275,-0.5 0.226,-0.541 -0.217,-0.023 -0.184,-0.102 0.2,-0.256 -0.062,-0.324 -0.3,-0.398 -0.165,-0.47 -0.265,-0.208 -0.14,-0.076 -0.171,0.11 -0.14,0.132 0.13,0.306 -0.016,0.271 0.021,0.268 0.132,0.015 0.163,-0.067 0.13,0.047 0.076,0.141 0.021,0.181 -0.058,0.179 -0.119,0.089 -0.146,-0.007 -0.147,-0.097 -0.115,-0.138 -0.275,-0.076 -0.29,0.163 -0.275,0.332 -0.235,0.168 0.11,-0.246 0.053,-0.266 -0.114,-0.187 -0.27,-0.311 -0.063,-0.18 -0.016,-0.218 0.048,-0.216 0.276,0.248 0.142,0.309 0.204,0.136 0.255,0.001 -0.196,-0.454 -0.07,-0.115 -0.274,-0.204 -0.376,-0.343 -0.238,-0.166 0.084,-0.359 0.141,-0.071 0.118,0.017 0.398,0.127 0.037,-0.179 -0.059,-0.096 -0.03,-0.111 0.263,-0.155 0.429,-0.128 0.088,-0.06 0.076,-0.129 0.105,-0.067 0.3,0.002 0.253,-0.124 0.209,-0.335 0.05,-0.184 0.074,-0.154 0.521,-0.272 0.129,-0.042 0.349,0.034 0.318,0.154 0.157,0.324 0.138,0.346 0.331,0.235 z m -3.87,-0.491 -0.194,0.139 -0.146,-0.108 0.071,-0.3 0.048,-0.1 0.166,0.099 0.055,0.27 z m -0.854,1.762 -0.197,0.157 -0.143,0 0.13,-0.184 0.018,-0.087 0.109,-0.247 0.213,-0.088 0.09,-0.011 -0.174,0.256 -0.046,0.204 z m -1.164,1.274 -0.07,0.036 -0.09,-0.3 -0.063,-0.107 0.105,-0.057 0.211,-0.545 0.038,0.216 0.082,0.214 0.082,0.034 -0.08,0.156 -0.117,0.058 -0.098,0.295 z m 30.21,-0.718 -0.049,0.035 -0.135,-0.109 -0.02,-0.097 0.024,-0.06 0.088,-0.013 0.182,0.119 -0.09,0.125 z m -31.365,0.906 0.109,0.09 0.159,-0.051 0.127,-0.012 0.091,0.043 0.115,0.231 0.042,0.137 -0.205,0.019 -0.087,0.032 -0.112,0.167 -0.161,-0.062 -0.101,-0.079 -0.022,-0.111 0.045,-0.404 z m 3.977,1.835 -0.222,0.118 -0.028,-0.113 -0.094,-0.052 0.161,-0.159 -0.006,-0.072 -0.102,-0.107 0.118,-0.406 -0.032,-0.175 0.443,-0.065 0.081,0.165 0.008,0.5 -0.327,0.366 z m 0.838,-0.641 -0.248,0.015 -0.103,-0.039 -0.041,-0.105 0.348,-0.213 0.27,0.038 -0.12,0.192 -0.106,0.112 z m -1.86,2.526 -0.088,0.057 0.056,-0.258 0.226,-0.226 0.019,0.146 -0.213,0.281 z m 3.484,4.107 -0.246,0.034 -0.005,-0.188 0.195,-0.424 0.021,-0.312 0.182,-0.394 0.077,-0.086 0.058,-0.031 0.063,0.123 -0.07,0.482 -0.183,0.365 -0.092,0.431 z m -0.945,0.433 -0.321,0.07 -0.176,-0.075 -0.162,-0.399 0.307,-0.25 0.41,0.248 0.084,0.071 -0.142,0.335 z m -3.284,6.573 -0.242,0.257 -0.257,-0.232 -0.31,-0.155 0.147,-0.042 0.086,-0.063 0.009,-0.098 0.201,-0.146 0.398,-0.113 0.127,-0.007 0.143,-0.106 0.047,-0.096 0.059,-0.046 0.257,-0.132 0.07,0.152 -0.012,0.119 -0.193,0.066 -0.188,0.159 -0.175,0.198 -0.156,0.084 -0.05,0.056 0.039,0.145 z m -0.361,0.33 0.019,0.074 -0.275,-0.062 -0.112,-0.289 0.183,0.052 0.056,0.099 0.129,0.126 z m -0.915,1.213 -0.118,0.058 -0.157,-0.08 -0.049,-0.362 0.07,-0.176 0.123,-0.039 0.107,0.313 0.074,0.129 -0.05,0.157 z m -2.075,3.352 -0.271,0.144 -0.1,0.171 -0.25,0.058 -0.243,0.24 -0.236,0.043 0.006,0.193 0.101,0.163 -0.157,0.029 -0.165,0.199 -0.013,0.145 0.059,0.116 -0.008,0.059 -0.208,0.172 -0.215,0.008 -0.009,-0.186 0.014,-0.139 0.203,-0.338 0.005,-0.393 0.188,-0.045 0.068,-0.055 0.297,-0.28 0.055,-0.119 -0.154,-0.116 0.012,-0.137 0.035,-0.058 0.244,0.044 0.099,0.102 0.049,0.011 0.143,-0.076 0.067,-0.136 0.266,-0.268 0.108,-0.266 0.215,0.218 -0.058,0.286 -0.147,0.211 z m 39.093,0.114 -0.052,0.002 -0.176,-0.331 0.051,-0.016 0.103,0.052 0.113,0.191 -0.039,0.102 z m -46.992,5.802 -0.237,0.08 -0.254,-0.047 0.041,-0.429 0.088,0.06 0.055,0.146 0.189,0.086 0.118,0.104 z m -3.231,0.698 -0.165,0.484 -0.137,0.07 -0.14,-0.039 -0.144,-0.27 0.101,-0.104 0.14,0.055 0.113,-0.021 0.257,-0.394 0.062,0.064 -0.087,0.155 z m -1.134,0.722 -0.177,0.043 -0.213,-0.053 -0.194,-0.015 -0.002,-0.091 0.203,-0.094 0.004,-0.131 0.05,-0.071 0.459,0.161 -0.02,0.118 -0.11,0.133 z\"\n\t\t\t\tid=\"JP\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 594.89475,511.2514 -0.017,0.004 -0.029,-0.006 -0.049,-0.047 0.039,-0.017 0.065,0.038 z\"\n\t\t\t\tid=\"JU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 592.44275,451.8244 -0.345,0.492 -0.414,0.59 -0.763,1.085 -0.58,0.571 -0.438,0.432 -0.041,0.078 0.002,0.481 0.005,1.176 0.009,2.351 0.009,2.35 0.009,2.35 0.004,1.175 0.002,0.395 0.385,0.494 0.376,0.483 0.497,0.638 0.267,0.342 0.044,0.114 -0.014,0.229 -0.409,0.479 -0.335,0.218 -0.451,0.104 -0.135,-0.02 -0.177,-0.068 -0.069,0.115 -0.052,0.179 -0.1,-0.038 -0.075,-0.053 0.045,0.318 0.046,0.157 -0.069,0.21 -0.219,0.185 -0.02,0.157 -0.474,0.41 -0.673,0.045 -0.354,0.204 -0.157,0.167 -0.12,0.365 0.042,0.559 -0.188,0.43 -0.035,0.216 -0.348,0.279 -0.154,0.256 -0.114,0.261 -0.099,0.114 -0.118,0.584 -0.162,0.355 -0.044,0.118 -0.04,0.106 -0.125,0.208 -0.082,0.144 -0.059,0.094 -0.41,0.91 -0.32,0.411 -0.251,-0.047 -0.167,0.159 -0.018,0.075 -0.089,-0.042 -0.209,-0.151 -0.431,-0.309 -0.431,-0.309 -0.431,-0.309 -0.431,-0.309 -0.431,-0.309 -0.431,-0.309 -0.431,-0.309 -0.431,-0.309 -0.253,-0.181 -0.111,-0.107 -0.088,-0.213 -0.042,-0.053 -0.115,-0.067 -0.135,-0.015 -0.039,-0.041 10e-4,-0.103 0.046,-0.148 0.159,-0.283 0.017,-0.167 -0.031,-0.189 -0.049,-0.303 -0.043,-0.069 -0.286,-0.159 -0.598,-0.332 -0.598,-0.332 -0.598,-0.332 -0.599,-0.332 -0.598,-0.332 -0.598,-0.332 -0.598,-0.332 -0.598,-0.332 -0.599,-0.332 -0.598,-0.332 -0.599,-0.332 -0.598,-0.332 -0.598,-0.332 -0.598,-0.332 -0.598,-0.332 -0.599,-0.332 -0.225,-0.125 -0.202,-0.105 -0.214,0 -0.009,-0.475 0.068,-1.209 -0.008,-1.062 0.061,-0.532 0.264,-0.337 0.122,-0.245 0.087,-0.342 0.138,-0.279 0.313,-0.227 0.056,-0.125 0.332,-0.379 0.199,-0.487 0.15,-0.166 0.188,-0.153 0.132,-0.081 0.218,-0.081 0.171,-0.046 0.031,-0.039 0.015,-0.079 -0.057,-0.302 0.073,-0.099 0.116,-0.202 0.133,-0.188 0.12,-0.12 0.067,-0.123 0.031,-0.212 0.005,-0.151 -10e-4,-0.246 -0.038,-0.559 -0.141,-0.468 -0.087,-0.524 0.064,-0.172 -0.111,-0.307 -0.055,-0.017 -0.09,-0.067 -0.116,-0.29 -0.087,-0.264 -0.054,-0.066 -0.376,-0.231 -0.187,-0.545 -0.21,-0.121 -0.114,-0.542 -0.022,-0.154 0.119,-0.541 -0.012,-0.124 -0.126,-0.114 -0.353,-0.117 -0.286,-0.223 0.037,-0.078 0.021,-0.081 -0.151,-0.054 -0.438,-0.925 0.563,-0.556 0.571,-0.563 0.729,-0.713 0.669,-0.655 0.578,-0.566 0.516,-0.505 -0.013,0.096 0.002,0.128 0.064,0.078 0.106,0.054 0.147,-0.057 0.129,-0.079 0.126,-0.017 0.775,0.21 0.13,0.183 -0.009,0.197 0.034,0.143 -0.06,0.144 -0.064,0.434 0.02,0.398 0.231,0.295 0.208,0.231 0.165,0.325 0.122,0.1 0.168,0.052 0.533,0.014 0.789,0.021 0.759,0.02 0.069,0.008 0.161,0.044 0.699,0.438 0.64,0.402 0.542,0.349 0.526,0.339 0.511,0.33 0.396,0.273 0.391,0.083 0.635,0.04 0.439,0.014 0.406,0.115 0.604,0.107 0.45,0.055 0.272,0.062 0.755,0.063 0.125,-0.037 0.333,-0.303 0.373,-0.493 0.146,-0.271 0.482,-0.27 0.847,-0.376 0.597,-0.266 0.664,-0.267 0.302,0.231 0.416,0.371 0.186,0.183 0.149,0.081 0.226,0.054 0.275,10e-4 0.15,-0.008 0.307,-0.048 0.718,-0.044 0.422,0.012 z m -2.497,17.116 -0.104,0.024 0.054,-0.16 0.308,-0.205 0.125,0.046 0.024,0.046 -0.007,0.043 -0.052,0.042 -0.348,0.164 z\"\n\t\t\t\tid=\"KE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 700.00175,332.8134 0.056,0.227 0.048,0.264 -0.03,0.062 -0.054,0.042 -0.86,0.065 -0.194,0.073 -0.208,0.364 -0.736,0.292 -0.42,0.15 -0.17,-0.006 -0.408,0.239 -1.139,0.595 -0.56,0.375 -0.281,0.157 -0.226,0.171 -0.038,0.173 -0.008,0.163 -0.625,0.765 -0.469,0.092 -0.396,-0.018 -0.27,0.116 -0.386,0.117 -0.836,-0.08 -0.285,0.013 -0.549,-0.105 -0.222,0.055 -0.234,0.155 -0.325,0.607 -0.132,0.142 -0.061,0.138 -0.05,0.294 -0.124,0.311 -0.159,0.245 -0.115,0.227 -0.235,0.219 -0.218,0.138 -0.169,-0.288 -0.146,0.082 -0.14,0.117 -0.264,-0.041 -0.163,0.059 -0.372,0.25 -0.546,-0.009 -0.06,-0.086 -0.108,-0.688 -0.095,-0.327 -0.079,-0.073 -0.098,-0.008 -0.785,0.542 -0.364,0.096 -0.299,0.017 -0.391,-0.162 -0.085,0.04 -0.067,0.087 -0.028,0.111 0.114,0.307 -0.032,0.06 -0.176,-0.005 -0.246,0.071 -0.188,0.141 -0.564,0.494 -0.475,0.165 -0.442,0.065 -0.181,0.055 -0.081,0.059 -0.148,0.235 -0.152,0.368 -0.079,0.179 -0.059,0.104 0.012,0.136 0.12,0.175 0.091,0.393 -0.021,0.102 -0.097,0.164 -0.14,0.161 -0.301,0.097 -0.236,0.049 -0.157,-0.032 -0.295,-0.011 -0.233,0.064 -0.144,0.11 -0.284,0.137 -0.353,0.046 -0.449,0.018 -0.216,-0.012 -0.652,-0.092 -0.215,0.032 -0.205,0.071 -0.372,0.075 -0.198,0.228 -0.104,0.209 -0.056,0.03 -0.232,-0.192 -0.177,-0.18 -0.116,-0.15 -0.146,0.004 -0.519,0.272 -0.077,-0.009 -0.148,-0.104 0.027,-0.257 -0.01,-0.164 -0.167,-0.087 -0.354,-0.022 -0.12,-0.093 0.007,-0.139 0.032,-0.133 -0.04,-0.103 -0.092,-0.078 -0.186,0.021 -0.213,0.106 -0.156,0.121 -0.196,0.057 -0.238,0.022 -0.148,0.073 -0.169,0.295 -0.577,0.062 -0.186,-0.067 -0.152,-0.209 -0.199,-0.338 -0.111,-0.042 -0.188,-0.042 -0.307,0.02 -0.413,0.142 -0.1,-0.117 -0.107,-0.034 -0.097,0.097 -0.099,-0.011 -0.408,0.027 -0.517,-0.013 -0.295,-0.066 -0.191,0.004 -0.38,0.151 -0.201,-10e-4 -0.264,0.027 -0.049,-0.511 -0.144,-0.346 0.044,-0.24 0.096,-0.33 0.08,-0.186 0.163,0.079 0.187,0.136 0.124,-0.036 0.033,-0.112 -0.048,-0.147 -0.007,-0.11 0.07,-0.145 0.103,-0.135 0.66,-0.222 0.565,-0.162 0.294,0.108 0.569,0.248 0.293,0.128 0.204,0.075 0.179,0.363 0.117,-0.017 0.118,-0.073 0.07,-0.089 0.057,-0.309 0.265,-0.174 0.583,-0.206 0.041,-0.121 -0.009,-0.067 0.092,-0.059 0.292,-0.06 0.59,-0.057 0.2,0.043 0.229,0.122 0.177,0.121 0.168,-0.004 0.139,-0.025 0.06,0.034 0.044,0.107 0.072,0.096 0.226,-0.131 0.204,-0.169 0.161,-0.024 0.148,-0.064 0.043,-0.113 0.116,-0.188 0.333,-0.359 0.173,-0.058 0.112,0 0.006,0.058 0.054,0.053 0.291,0.083 0.089,-0.095 0.047,-0.131 -0.102,-0.208 -0.002,-0.087 0.038,-0.08 0.054,-0.048 0.465,0.198 0.103,-0.004 0.212,-0.111 0.194,-0.195 0.07,-0.154 0.951,-0.5 0.067,-0.091 -0.013,-0.066 -0.399,-0.117 -0.18,0.065 -0.166,0 -0.101,-0.074 -0.484,-0.028 -0.106,-0.052 -0.321,-0.362 -0.221,-0.138 -0.178,-0.091 -0.193,0.013 -0.23,0.095 -0.071,-0.043 -0.02,-0.152 0.001,-0.191 -0.047,-0.205 -0.137,-0.048 -0.177,0.081 -0.264,-0.083 -0.225,-0.03 -0.058,-0.433 -0.091,-0.185 -0.093,-0.194 -0.098,-0.056 -0.16,-0.097 -0.01,-0.229 -0.034,-0.065 -0.057,-0.031 -0.077,0.026 -0.099,0.116 0.049,0.253 -0.038,0.253 -0.058,0.127 -0.112,0.094 -0.128,0.002 -0.222,-0.128 -0.035,0.766 -0.043,0.047 -0.265,-0.108 -0.212,0.046 -0.316,-0.047 -0.237,-0.126 -0.178,-0.035 -0.287,-0.107 -0.219,-0.14 -0.135,-0.514 -0.128,-0.184 -0.121,-0.039 -0.489,0.178 -0.179,-0.138 -0.33,-0.176 -0.25,-0.066 -0.067,-0.095 0.011,-0.117 0.77,-0.575 0.303,-0.396 0.19,-0.168 0.272,-0.111 0.212,-0.065 0.108,-0.365 0.041,-0.042 0.151,-0.027 0.342,-0.15 0.551,-0.321 0.011,-0.088 -0.056,-0.076 -0.231,-0.165 -0.264,-0.131 -0.16,0.068 -0.091,0.067 -0.151,-0.17 0,-0.175 0.167,-0.3 0.14,-0.15 0.059,-0.29 0.198,-0.194 0.207,-0.308 0.251,-0.252 0.464,-0.189 0.259,0.062 0.243,-0.044 0.376,-0.153 0.072,-0.01 0.158,-0.002 0.968,0.234 0.32,0.011 0.75,0.304 0.345,0.066 0.244,0.086 0.11,0.131 0.176,0.161 0.942,0.13 0.259,0.086 0.093,0.141 0.269,0.179 0.229,0.041 -0.2,-0.7 0.08,-0.417 0.298,-1.143 0.156,-0.173 0.299,-0.153 0.47,-0.171 0.178,-0.239 0.385,0.024 0.167,-0.021 0.115,-0.043 0.063,-0.134 0.434,0.233 0.726,0.472 0.548,0.299 0.646,0.282 0.894,0.257 0.756,0.085 0.13,-0.061 0.303,-0.391 0.143,-0.017 0.258,0.034 0.802,0.018 0.817,0.019 0.385,-0.038 0.836,-0.163 0.123,-0.008 0.194,0.011 0.5,0.222 0.374,0.031 0.254,-0.001 0.148,0.018 0.31,-0.008 0.503,0.026 0.622,0.144 0.749,-0.026 0.24,-0.027 0.417,0.026 0.331,0.137 0.419,0.145 0.263,0.061 0.176,0.031 0.314,0.011 0.188,-0.045 0.107,0.063 0.106,0.354 0.26,0.232 0.203,0.219 0.17,0.242 0.173,0.099 0.305,0.003 0.575,0.069 0.33,0.096 0.422,0.417 0.384,0.424 z m -25.267,8.517 0.026,-0.052 -0.103,-0.267 0.139,-0.25 -0.275,-0.042 -0.141,-0.074 -0.158,-0.253 -0.052,-0.012 -0.082,0.069 -0.044,0.166 0.039,0.179 0.112,0.121 0.074,0.04 0.011,0.008 -0.003,0.059 -0.09,0.296 0.147,0.038 0.258,0.005 0.142,-0.031 z m 1.609,-0.21 0.028,-0.165 -0.068,0.008 -0.081,0.045 -0.155,0.045 -0.034,0.082 0.104,0.104 0.132,0.038 0.074,-0.157 z m -3.025,0.455 -0.01,-0.075 -0.096,-0.035 -0.272,-0.04 -0.194,-0.058 -0.042,-10e-4 0.018,0.072 0.083,0.127 0.114,0.136 0.147,0.015 0.252,-0.141 z\"\n\t\t\t\tid=\"KG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 767.96675,433.7354 -0.46,-0.369 -0.913,-0.129 -0.099,-0.163 -0.088,-0.032 -0.084,0.212 -0.502,0.203 -0.21,-0.123 -0.153,-0.148 0.022,-0.182 0.146,-0.148 0.249,-0.106 0.115,-0.374 -0.19,-0.479 -0.166,-0.14 -0.176,-0.11 -0.185,0.178 -0.155,0.305 -0.162,0.157 -0.229,0.035 -0.335,-0.013 -0.13,-0.455 -0.043,-0.39 0.046,-0.446 0.051,-0.264 -0.322,-0.364 -0.019,-0.347 -0.155,-0.179 -0.046,0.091 0.004,0.1 -0.044,-0.072 -0.51,-1.02 -0.085,-0.473 0.088,-0.365 0.051,-0.122 -0.147,-0.192 -0.206,-0.218 -0.365,-0.286 -0.024,-0.453 -0.082,-0.534 -0.109,-0.181 -0.167,-0.329 -0.091,-0.273 -0.031,-0.722 0.047,-0.058 0.259,-0.021 0.332,-0.052 0.053,-0.116 -0.059,-0.097 0.212,-0.164 0.305,-0.359 0.235,-0.375 0.17,-0.237 0.101,-0.235 0.342,-0.333 0.473,-0.23 0.32,-0.054 0.334,-0.078 0.319,-0.112 0.152,-0.011 0.396,0.135 0.215,0.034 0.226,-0.002 0.233,0.015 0.203,-0.014 0.486,-0.094 0.517,0.075 0.461,-0.059 0.57,-0.109 0.28,0.069 0.255,0.109 0.035,0.221 0.06,0.101 0.085,0.078 0.113,0 0.146,-0.154 0.121,-0.159 0.04,-0.029 0.006,0.078 0.061,0.172 0.108,0.169 0.11,0.112 0.183,0.149 0.119,0.007 0.391,-0.141 0.584,0.205 0.068,0.103 0.189,0.208 0.204,0.149 0.456,0.01 0.162,-0.368 -0.078,-0.224 -0.26,-0.391 -0.071,-0.231 0.083,-0.041 0.44,-0.044 0.071,-0.045 0.097,-0.253 0.12,0.029 0.244,0.033 0.258,-0.173 0.153,-0.182 0.083,0.083 0.092,0.128 0.1,0.074 0.186,0.11 0.204,0.154 0.127,0.151 0.103,0.059 0.262,-0.042 0.07,0.006 0.151,-0.184 0.106,-0.1 0.091,0.028 0.132,-0.002 0.272,-0.234 0.156,-0.214 0.086,-0.059 0.244,0.107 0.098,-0.022 0.142,-0.294 0.152,-0.116 0.045,0.159 -0.118,0.301 -0.126,0.272 -0.235,0.238 -0.012,0.175 -0.081,0.521 0.031,0.166 0.055,0.142 0.077,0.076 0.204,0.51 0.187,0.463 0.184,0.38 0.032,0.24 -0.169,0.609 -0.196,0.559 0.017,0.278 0.085,0.278 0.09,0.371 0.033,0.474 -0.049,0.309 -0.089,0.192 -0.17,0.196 -0.147,0.101 -0.178,-0.167 -0.142,-0.007 -0.189,0.05 -0.149,0.077 -0.304,0.289 -0.337,0.281 -0.466,0.072 -0.181,0.208 -0.194,0.029 -0.368,0.011 -0.241,0.048 0.011,0.105 -0.02,0.494 0.005,0.116 -0.037,0.031 -0.167,0.015 -0.282,-0.076 -0.382,-0.122 -0.272,-0.019 -0.14,0.215 -0.083,0.084 -0.104,0.013 -0.107,0.038 -0.036,0.096 -0.009,0.12 0.052,0.205 0.02,0.326 -0.014,0.222 0.1,0.141 0.584,0.472 0.172,0.118 0.02,0.07 -0.102,0.257 0.091,0.361 -0.183,-0.007 -0.306,-0.155 -0.146,-0.095 -0.177,0.076 -0.062,-0.014 -0.119,-0.178 -0.156,-0.181 -0.161,-0.012 -0.34,0.071 -0.348,0.05 -0.132,-0.001 -0.055,0.033 -0.201,0.27 -0.085,-0.046 -0.351,-0.103 -0.319,-0.039 -0.065,0.069 0.039,0.22 0.07,0.214 -0.042,0.091 -0.176,0.113 -0.231,0.203 -0.143,0.158 -0.099,0.039 -0.353,-0.007 -0.352,0.021 -0.142,0.149 -0.132,0.116 -0.113,0.033 z m -3.876,-2.481 -0.05,0.027 -0.048,-0.001 -0.048,-0.042 0.005,-0.164 0.035,-0.1 0.082,-0.019 0.024,0.299 z m 0.764,1.609 -0.103,0.11 -0.163,-0.227 10e-4,-0.063 0.265,0.18 z\"\n\t\t\t\tid=\"KH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 1003.3637,470.6364 0.092,0.053 0.07,0.072 0.034,0.1 0,0.025 -0.054,-10e-4 -0.065,-0.031 -0.047,-0.042 -0.024,-0.011 -0.01,-0.009 0.056,0.006 0.064,0.042 0.048,0.019 0,-0.049 -0.058,-0.085 -0.034,-0.029 -0.044,-0.025 -0.05,-0.017 -0.034,0.015 -0.019,0.007 -0.01,-0.02 0.01,-0.018 0.018,-0.018 0.06,0.016 z m 1.719,1.031 -0.013,0.021 -0.02,-0.018 0.014,-0.033 0.012,-0.028 0.019,0.015 -0.012,0.043 z m -0.416,3.71 -0.027,0.013 -0.032,-0.004 -0.021,-0.019 0,-0.03 0.026,-0.021 0.037,0.007 0.021,0.027 0,0.027 z m -2.754,0.133 0.018,0.019 0.041,-0.005 0.036,-0.003 -0.022,0.019 -0.074,0.008 -0.036,-0.048 0.045,-0.037 0.04,-0.006 0,0.01 0,0.011 -0.019,0 -0.03,0.009 0,0.023 z m -6.44995,0.459 0.033,0.037 0,0.018 -0.016,-0.003 -0.048,-0.011 -0.016,-0.022 0.035,0.015 0.015,-0.003 -0.032,-0.033 -0.028,-0.024 -0.021,-0.01 0,-0.012 0.026,0.006 0.052,0.042 z m -967.750002,-23.994 0.224,0.236 -0.043,0.119 -0.162,-0.011 -0.074,-0.042 0.126,-0.021 0.021,-0.044 -0.058,-0.069 -0.077,-0.048 -0.053,0 -0.013,0.095 -0.087,-0.074 0.051,-0.074 0.062,-0.049 0.083,-0.018 z m 932.620002,2.219 -0.178,0.093 -0.054,-0.015 0.211,-0.132 -10e-4,0.016 0.022,0.038 z m -0.352,0.217 -0.208,0.108 -0.056,-0.058 0.075,-0.002 0.14,-0.104 0.169,-0.008 -0.02,0.058 -0.1,0.006 z m -926.664002,3.337 0.467,0.323 -0.198,0.023 -0.488,-0.156 -0.446,-0.319 0.133,-0.069 0.065,0.115 0.203,0.107 0.12,-0.225 0.079,-0.051 -0.356,-0.232 0.141,0.012 0.337,0.158 -0.057,0.314 z m 927.153002,0.027 0.014,0.064 -0.16,-0.175 -0.095,-0.113 0.006,-0.049 0.043,0.031 0.053,0.055 0.035,0.044 0.104,0.143 z m 0.031,0.358 -0.102,0.012 0.076,-0.04 0.021,-0.055 -0.012,-0.173 0.04,0.014 0.014,0.071 0.007,0.104 -0.044,0.067 z m 0.024,1.047 -0.075,0.01 0.049,-0.057 0.321,-0.063 0.028,-0.018 0.052,0.035 -0.001,0.033 -0.023,0.017 -0.159,10e-4 -0.125,0.03 -0.067,0.012 z m -0.016,0.917 0.151,0.11 -0.02,0.076 -0.051,0.087 -0.197,0.222 -0.06,-0.021 0.192,-0.201 0.074,-0.133 -0.11,-0.102 -0.044,0.022 -0.018,0 -0.038,-0.095 0.038,0 0.083,0.035 z m 4.143,5.06 -0.091,0.076 -0.035,-0.069 0.045,-0.085 -0.076,-0.353 -0.126,-0.048 -0.075,-0.106 0.036,0 0.126,0.097 0.101,0.044 0.059,0.232 0.036,0.212 z m -13.913,0.2 -0.026,0.006 -0.053,-0.029 0.007,-0.036 0.037,-0.016 0.047,0.027 -0.012,0.048 z m 14.655,0.943 0.017,0.144 -0.064,-0.019 -0.021,-0.056 -0.021,-0.145 -0.067,-0.142 0.076,0.038 0.063,0.111 0.017,0.069 z m -925.381002,8.027 -0.008,0.017 -0.034,-0.022 -0.066,-0.041 -0.056,-0.045 -10e-4,-0.019 0.079,-0.027 0.101,-0.021 0.022,0.029 -0.019,0.041 -0.018,0.088 z m -2.547,4.305 -0.065,0.015 -0.076,0 -0.038,-0.037 -0.002,-0.03 0.026,0 0.024,0.005 0.108,0.005 0.028,0.022 -0.005,0.02 z m 11.454,16.4 -0.023,0.045 -0.044,-0.016 -0.026,-0.057 -0.009,-0.062 0.017,-0.05 0.029,0.002 0.033,0.062 0.023,0.076 z\"\n\t\t\t\tid=\"KI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 596.88175,496.3434 -0.053,0.038 -0.256,-0.163 -0.146,-0.038 -0.215,-0.263 0.083,-0.91 0.069,-0.117 0.052,-0.047 0.119,-0.017 0.145,0.114 -0.038,0.585 0.191,0.394 0.123,0.313 -0.074,0.111 z m 2.836,0.514 0.141,0.394 -10e-4,0.297 -0.06,0.094 -0.126,-0.062 -0.232,-0.236 -0.441,-0.23 0.203,-0.019 0.118,0.023 0.125,-0.021 0.078,-0.13 0.016,-0.077 0.11,-0.062 0.069,0.029 z m -1.93,0.643 0.197,0.175 -0.548,-0.072 -0.086,-0.158 -0.004,-0.116 0.205,0.025 0.236,0.146 z\"\n\t\t\t\tid=\"KM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 299.12275,414.1094 -0.072,0.046 -0.128,-0.18 -0.206,-0.049 -0.178,-0.106 -0.004,-0.023 0.003,-0.053 0.035,-0.062 0.091,-0.047 0.227,0.145 0.106,0.182 0.099,0.083 0.027,0.064 z m 0.277,0.346 -0.141,0.062 -0.12,-0.084 0.027,-0.203 0.114,-0.006 0.114,0.09 0.006,0.141 z\"\n\t\t\t\tid=\"KN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 841.21675,331.5054 0.076,0.23 0.18,0.224 0.094,0.163 0.019,0.169 0.082,0.095 -0.143,0.105 -0.188,-0.064 -0.313,-0.038 -0.401,0.331 -0.222,0.116 -0.156,0.325 -0.313,0.193 -0.171,0.205 -0.222,0.355 -0.146,0.342 -0.337,0.35 -0.197,0.439 -0.011,0.376 0.215,0.384 0.02,0.326 -0.15,0.67 0.083,0.709 -0.093,0.277 -1.032,0.484 -0.27,0.241 -0.379,0.625 -0.462,0.232 -0.287,0.254 -0.397,0.15 -0.254,0.438 -0.279,0.248 -0.332,0.151 -0.249,0.194 -0.556,0.012 -0.393,0.135 -0.279,0.363 -0.839,0.415 -0.114,0.313 0.056,0.482 0.005,0.369 -0.073,0.303 -0.184,-0.085 -0.099,0.099 -0.109,0.28 0.031,0.318 0.288,0.103 0.235,0.13 0.331,0.066 0.245,0.147 0.521,0.67 0.425,0.292 0.11,0.108 0.244,0.147 0.225,0.23 0.127,0.206 -0.099,0.056 -0.169,0.301 -0.158,0.381 -0.152,0.206 -0.175,0.114 -0.189,0.067 -0.375,0.029 -0.339,-0.026 -0.109,-0.041 -0.466,0.024 -0.132,0.027 -0.669,-0.029 -0.35,0.031 -0.223,0.074 -0.227,0.154 -0.195,0.231 -0.172,0.247 -0.35,0.451 -0.245,0.219 -0.001,0.316 -0.006,0.096 -0.086,0.067 -0.029,-0.029 -0.142,-0.023 -0.569,-0.289 -0.469,0.176 -0.118,0.229 -0.124,0.074 -0.187,-0.449 -0.305,-0.014 -0.484,-0.396 -0.208,0.081 -0.053,0.159 -0.266,0.364 -0.371,0.3 -0.12,0.04 -0.137,-0.021 0.02,-0.083 -0.151,-0.337 -0.586,-0.136 -0.211,-0.144 -0.107,-0.031 0.574,-0.377 0.15,-0.067 -0.112,-0.088 -0.124,-0.043 -0.471,0.056 -0.246,-0.124 -0.358,0.04 -0.249,-0.098 0.516,-0.371 0.023,-0.219 -0.006,-0.167 0.261,-0.494 0.263,-0.273 0.681,-0.389 0.296,-0.054 0.215,0.016 0.176,-0.036 -0.185,-0.149 -0.181,-0.068 -0.352,0.014 -0.365,-0.224 -0.032,-0.237 0.708,-1.501 0.01,-0.137 -0.11,-0.367 -0.036,-0.358 -0.508,-0.206 -0.225,-0.025 -0.651,-0.405 -0.26,-0.205 -0.103,0.061 -0.019,0.324 -0.093,0.072 -0.171,0.063 -0.086,-0.37 -0.141,-0.268 -0.432,-0.273 -0.154,-0.15 0.074,-0.326 -0.036,-0.029 0.068,-0.366 0.265,-0.283 0.649,-0.504 0.167,-0.237 0.33,-0.279 0.148,0.006 0.153,-0.024 0.046,-0.122 0.035,-0.096 0.132,-0.087 0.317,-0.154 0.36,-0.203 0.288,-0.057 0.353,-0.305 0.144,-0.134 0.145,0 0.039,-0.063 0.082,-0.158 0.112,-0.104 0.156,-0.02 0.255,-0.075 0.32,-0.046 0.218,-0.257 0.074,-0.184 0.145,-0.202 0.306,-0.221 0.211,-0.327 0.233,-0.355 0.111,-0.114 0.109,-0.023 0.064,-0.134 0.075,-0.379 0.107,-0.369 0.063,-0.174 0.27,-0.19 0.068,-0.093 0.061,-0.031 0.125,0.025 0.168,-0.112 0.157,-0.124 0.144,0.043 0.146,0.103 0.152,0.205 0.068,0.163 0.12,0.136 0.023,0.198 0.121,0.086 0.256,0.043 0.419,0.135 0.271,0.007 0.155,0.101 0.324,0.055 0.648,-0.079 0.265,0.046 0.111,0.124 0.164,0.098 0.107,0.006 0.143,-0.169 0.153,-0.274 0.101,-0.21 -0.004,-0.167 -0.089,-0.18 -0.213,-0.167 -0.141,-0.259 -0.134,-0.268 -0.079,-0.087 -0.064,-0.13 -0.012,-0.2 0.046,-0.135 0.323,-0.09 0.414,-0.053 0.335,0.057 0.56,-0.038 0.344,-0.075 0.255,0.011 0.234,-0.001 0.104,-0.115 0.327,-0.277 0.158,-0.099 0.174,-0.188 0.027,-0.197 0.035,-0.16 0.098,-0.17 0.172,-0.211 0.146,-0.097 0.163,0.013 0.171,0.097 0.109,0.097 0.123,-0.028 0.103,-0.166 0.067,-0.032 0.195,-0.015 0.063,-0.102 0.075,-0.489 0.075,-0.386 0.016,-0.271 0.175,-0.449 0.056,-0.271 0.104,-0.126 0.12,0.009 0.101,0.08 0.127,0.046 0.169,-0.044 0.119,0.069 0.074,0.146 0.25,0.1 0.023,0.073 -0.006,0.487 0.137,0.228 0.184,0.206 0.251,0.187 0.135,0.042 0.086,0.137 z m -15.777,11.12 -0.157,0.104 -0.009,-0.186 0.122,-0.157 0.127,-0.021 -0.083,0.26 z\"\n\t\t\t\tid=\"KP\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 830.29175,348.9054 0.086,-0.067 0.006,-0.096 0.001,-0.316 0.245,-0.219 0.35,-0.451 0.172,-0.247 0.195,-0.231 0.227,-0.154 0.223,-0.074 0.35,-0.031 0.669,0.029 0.132,-0.027 0.466,-0.024 0.109,0.041 0.339,0.026 0.375,-0.029 0.189,-0.067 0.175,-0.114 0.152,-0.206 0.158,-0.381 0.169,-0.301 0.099,-0.056 0.686,1.595 0.655,1.026 0.559,0.74 0.796,1.419 0.233,0.756 0.022,0.467 0.133,0.641 -0.113,0.367 0.033,0.577 -0.05,0.296 -0.098,0.218 -0.003,0.418 0.031,0.223 0.003,0.296 0.063,0.115 0.091,0.042 0.145,-0.107 0.177,-0.045 -0.031,0.355 -0.214,0.897 -0.186,0.651 -0.253,0.566 -0.322,0.517 -0.386,0.202 -0.271,0.072 -0.518,0.026 -0.43,-0.087 -0.369,0.063 -0.148,0.107 -0.11,0.184 0.081,0.285 -0.011,0.21 -0.158,-0.016 -0.313,-0.122 -0.347,-0.017 -0.162,-0.061 -0.164,-0.301 -0.167,0.011 -0.29,0.179 -0.444,0.04 -0.156,0.097 -0.056,0.125 0.064,0.158 0.224,0.207 -0.075,0.209 -0.232,0.104 -0.188,-0.257 -0.117,-0.252 -0.131,-0.014 -0.204,0.072 -0.041,0.272 0.095,0.185 0.156,0.215 -0.219,0.247 -0.058,0.176 -0.157,0.126 -0.424,-0.281 0.061,-0.2 0.184,-0.192 0.022,-0.2 -0.061,-0.118 -0.606,0.504 -0.374,0.57 -0.2,-0.042 -0.083,-0.146 -0.117,-0.06 -0.404,0.367 -0.074,0.291 -0.148,0.011 -0.065,-0.123 -0.005,-0.264 -0.069,-0.222 -0.419,-0.324 -0.19,-0.284 0.103,-0.159 0.35,0.086 0.277,-0.011 -0.055,-0.135 -0.091,-0.064 0.185,-0.076 0.154,-0.155 -0.128,-0.042 -0.194,0.09 -0.162,-0.044 -0.064,-0.373 -0.197,-0.383 -0.103,-0.372 0.195,-0.214 0.099,-0.334 0.182,-0.484 0.091,-0.157 0.251,-0.114 0.089,-0.125 -0.138,-0.064 -0.22,-0.057 0.005,-0.14 0.15,-0.076 0.168,-0.155 0.324,-0.188 0.101,-0.355 -0.094,-0.09 -0.203,-0.084 0.046,-0.18 0.084,-0.137 -0.032,-0.082 -0.239,-0.232 -0.158,-0.211 0.047,-0.241 -0.036,-0.365 0.021,-0.307 -0.011,-0.167 -0.117,-0.375 -0.053,-0.377 -0.153,0.055 -0.124,0.094 -0.443,-0.133 -0.141,-0.008 -0.057,-0.28 0.159,-0.345 0.377,-0.305 0.217,-0.038 0.163,-0.134 0.255,-0.042 0.306,0.208 0.274,0.042 0.152,0.357 0.094,0.076 0.02,-0.131 0.222,-0.154 0.053,-0.116 -0.048,-0.064 -0.255,-0.063 -0.229,-0.444 -0.032,-0.195 -0.083,-0.124 0.123,-0.356 -0.265,-0.407 -0.129,-0.128 0.019,-0.367 -0.138,-0.233 -0.077,-0.128 -0.047,-0.222 0.04,-0.1 0.12,-0.038 0.03,-0.095 z m -0.318,0.159 -0.013,0.467 -0.155,-0.02 -0.105,-0.047 -0.045,-0.091 -0.106,-0.433 0.119,-0.179 0.229,0.142 0.076,0.161 z m 12.336,0.912 -0.128,0.104 -0.151,-0.104 -0.019,-0.111 0.079,-0.096 0.184,-0.058 0.086,0.084 -0.051,0.181 z m -12.626,3.448 -0.038,0.225 -0.186,-0.148 -0.054,-0.494 0.191,0.144 0.087,0.273 z m 6.522,5.826 -0.265,0.21 -0.357,-0.282 -0.085,-0.155 0.271,-0.229 0.23,-0.261 0.151,-0.016 0.055,0.733 z m -1.896,-0.025 -0.031,0.333 -0.198,0.017 -0.118,-0.214 -0.126,0.104 -0.065,0.002 -0.1,-0.267 -0.017,-0.208 0.233,-0.159 0.142,0.095 0.202,0.049 0.078,0.248 z m -5.314,0.254 -0.037,0.082 -0.122,-0.024 -0.126,-0.234 -0.052,-0.186 -0.125,-0.102 0.199,-0.161 0.253,0.29 0.01,0.335 z m 4.566,0.394 -0.032,0.105 -0.142,-0.159 0.141,-0.174 0.033,0.228 z m -4.393,0.829 -0.18,0.052 -0.101,-0.117 -0.07,-0.031 0.04,-0.153 0.292,-0.301 0.058,-0.104 0.271,0.063 0.101,0.16 -0.124,0.242 -0.287,0.189 z m 1.458,0.09 0.047,0.161 -0.227,-0.03 -0.12,-0.155 0.016,-0.133 0.135,-0.019 0.149,0.176 z m -1.197,3.765 -0.126,0.074 -0.117,-0.044 -0.031,-0.035 -0.142,-0.191 -0.036,-0.098 0.095,-0.188 0.388,-0.309 1.004,-0.298 0.181,-0.013 0.396,0.128 0.085,0.239 -0.073,0.206 -0.091,0.138 -0.459,0.232 -0.358,0.111 -0.716,0.048 z\"\n\t\t\t\tid=\"KR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 535.40975,332.5954 -0.004,0 -0.481,0.105 -0.162,0.123 -0.096,0.216 -0.031,0.111 -0.085,0.004 -0.141,-0.111 -0.178,-0.174 -0.233,0.014 -0.79,0.378 -0.078,0.198 -0.017,0.429 -0.054,0.116 -0.085,0.074 -0.326,-0.047 -0.035,-0.028 0.043,-0.164 -0.017,-0.36 -0.148,-0.597 -0.104,-0.195 -0.217,-0.195 -0.168,-0.128 -0.303,-0.114 -0.153,-0.33 -0.231,-0.374 -0.111,-0.086 0.018,-0.037 0.053,-0.283 -0.066,-0.206 -0.102,-0.176 0.069,-0.107 0.213,10e-4 0.176,0.02 0.063,-0.169 0.363,-0.11 0.349,-0.115 0.051,-0.08 -0.08,-0.174 0.047,-0.109 0.418,-0.31 0.068,-0.141 0.026,-0.11 -0.056,-0.118 -0.079,-0.183 0.038,-0.078 0.217,-0.106 0.177,-0.124 0.104,-0.01 0.065,0.089 0,0.092 0.058,0.155 0.13,0.084 0.216,0.137 0.251,0.093 0.196,0.186 0.269,0.332 0.04,0.164 0.242,0.147 0.224,0.165 -0.035,0.305 0.763,0.266 0.172,-0.002 0.082,0.047 -0.002,0.069 -0.06,0.213 -0.314,0.654 -0.025,0.135 -0.225,0.142 -0.031,0.082 0.064,0.179 z\"\n\t\t\t\tid=\"XK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 609.54675,375.1874 -0.014,0.119 0.09,0.355 0.201,0.387 0.165,0.313 0.021,0.147 -0.151,-0.021 -0.115,-0.059 -0.221,-0.062 -0.427,0.415 -0.258,0.226 -0.007,0.077 0.344,0.087 0.253,-0.002 0.176,-0.061 0.149,0.097 0.098,0.256 0.039,0.208 0.234,0.739 0.194,0.249 0.242,0.44 0.09,0.228 0.052,0.191 0.148,0.282 -0.488,0.007 -0.615,0.01 -0.499,0.006 -0.563,0.007 -0.248,-0.301 -0.083,-0.33 -0.09,-0.339 -0.247,-0.484 -0.826,-0.117 -0.439,-0.063 -0.723,-0.092 -0.542,-0.069 0.456,-0.522 0.212,-0.281 0.383,-0.609 0.197,-0.435 0.19,-0.483 0.164,-0.376 0.034,-0.069 0.095,-0.128 0.21,-0.131 0.303,-0.123 0.515,-0.054 0.362,-0.003 0.082,0.006 0.228,0.061 0.629,0.301 z m 0.833,1.153 -0.161,0.072 -0.108,-0.031 -0.104,-0.173 -0.171,-0.43 0.093,-0.161 -0.003,-0.069 0.019,-0.052 0.053,-0.033 0.055,-0.203 0.074,-0.062 0.12,0.137 0.338,0.495 -0.002,0.202 -0.02,0.081 -0.183,0.227 z\"\n\t\t\t\tid=\"KW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 250.87175,406.8394 -0.131,0.045 -0.102,-0.018 0.23,-0.123 0.059,-0.042 0.051,-0.022 0.053,0 0.067,0.025 0,0.019 -0.227,0.116 z m -0.436,0.011 -0.028,0.017 -0.09,-0.013 -0.206,0.121 -0.089,-0.007 0.027,-0.042 0.043,-0.04 0.048,-0.029 0.045,-0.012 0.144,-0.024 0.068,-0.003 0.047,0.027 -0.009,0.005 z m -3.903,1.063 0.091,0.057 0.114,-0.035 0.033,-0.063 0.433,0.046 0.065,0.123 -0.33,0.003 -0.148,0.079 -0.074,0.016 -0.283,-0.019 -0.041,-0.285 0.079,-0.03 0.061,0.108 z\"\n\t\t\t\tid=\"KY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 719.96575,305.1724 -0.26,-0.085 -0.51,-0.018 -0.311,0.053 -0.146,0.03 -0.218,0.175 -0.155,0.174 -0.068,0.296 0.082,0.334 -0.112,0.694 -0.152,0.261 -0.32,0.453 -0.186,0.098 -0.312,0.081 -0.3,0.134 -0.588,0.13 -0.635,0.066 -0.226,0.097 -0.161,0.309 -0.114,0.257 -0.07,0.196 -0.18,0.638 -0.102,0.569 0.1,0.705 0.075,0.781 -0.005,0.269 0.155,0.398 0.078,0.244 -0.037,0.346 -0.223,0.272 -0.134,0.36 -0.126,0.153 -0.363,0.069 -0.342,0.042 -0.345,0.309 -0.276,0.213 -0.432,0.271 -0.203,0.051 -0.112,-0.138 -0.074,-0.307 -0.148,-0.136 -0.209,-0.011 -0.168,-0.003 -0.543,-0.083 -0.348,0.006 -0.261,0.066 -0.298,0.033 -0.515,-0.112 -0.333,-0.095 -0.224,-0.091 -0.535,-0.269 -0.703,-0.32 -0.288,-0.094 -0.171,0.096 -0.026,0.183 -0.045,0.443 -0.082,0.277 -0.49,1.396 -0.303,0.966 -0.385,0.923 -0.122,0.617 -0.23,0.779 -0.229,0.563 -0.093,0.306 -0.008,0.125 0.04,0.175 0.351,0.191 0.368,0.117 0.081,0.073 0.04,0.198 -0.014,0.324 -0.067,0.306 -0.106,0.24 -0.105,0.119 -0.12,0.007 -0.23,-0.154 -0.205,-0.172 -0.159,-0.052 -0.404,0.096 -0.374,0.131 -0.125,0.004 -0.217,-0.084 -0.219,-0.174 -0.087,-0.337 -0.188,-0.153 -0.252,0.153 -0.75,0.257 -0.826,0.306 -0.525,0.158 -0.205,-0.024 -0.407,0.036 -0.353,0.085 -0.265,0.118 -0.523,0.163 -0.475,0.109 -0.306,0.247 -0.22,0.238 0.009,0.09 0.16,0.141 0.183,0.11 0.366,-0.026 0.357,-0.017 0.297,0.149 0.266,0.096 0.073,0.124 -0.073,0.121 -0.154,0.028 -0.054,0.084 0.027,0.113 -0.102,0.294 -0.053,0.445 0.053,0.438 0.029,0.403 -0.019,0.203 -0.01,0.289 0.113,0.195 0.101,0.371 0.181,0.232 0.273,0.802 0.161,0.467 0.148,0.528 -0.107,0.285 0.007,0.165 0.174,0.138 0.076,0.269 0.081,0.164 -0.022,0.163 -0.074,0.063 -0.377,-0.099 -0.309,0.163 -0.328,0.164 -0.044,0.087 -0.009,0.095 0.033,0.083 0.189,0.146 0.261,0.091 -0.013,0.146 -0.323,0.067 -0.487,0.223 -0.135,0.239 -0.104,0.263 -0.009,0.152 0.049,0.407 0.074,0.45 0.139,0.474 0.011,0.146 -0.072,0.104 -0.067,0.067 -0.387,-0.427 -0.422,-0.417 -0.33,-0.096 -0.575,-0.069 -0.305,-0.003 -0.173,-0.099 -0.17,-0.242 -0.203,-0.219 -0.26,-0.232 -0.106,-0.354 -0.107,-0.063 -0.188,0.045 -0.314,-0.011 -0.176,-0.031 -0.263,-0.061 -0.419,-0.145 -0.331,-0.137 -0.417,-0.026 -0.24,0.027 -0.749,0.026 -0.622,-0.144 -0.503,-0.026 -0.31,0.008 -0.148,-0.018 -0.254,10e-4 -0.374,-0.031 -0.5,-0.222 -0.194,-0.011 -0.123,0.008 -0.836,0.163 -0.385,0.038 -0.817,-0.019 -0.802,-0.018 -0.258,-0.034 -0.143,0.017 -0.303,0.391 -0.13,0.061 -0.756,-0.085 -0.894,-0.257 -0.646,-0.282 -0.548,-0.299 -0.726,-0.472 -0.434,-0.233 -0.063,0.134 -0.115,0.043 -0.167,0.021 -0.385,-0.024 -0.178,0.239 -0.47,0.171 -0.299,0.153 -0.156,0.173 -0.298,1.143 -0.08,0.417 0.2,0.7 -0.229,-0.041 -0.269,-0.179 -0.093,-0.141 -0.259,-0.086 -0.942,-0.13 -0.176,-0.161 -0.11,-0.131 -0.244,-0.086 -0.345,-0.066 -0.75,-0.304 -0.32,-0.011 -0.968,-0.234 -0.158,0.002 -0.072,0.01 -0.376,0.153 -0.243,0.044 -0.259,-0.062 -0.464,0.189 -0.251,0.252 -0.207,0.308 -0.198,0.194 -0.059,0.29 -0.14,0.15 -0.167,0.3 0,0.175 0.151,0.17 -0.242,0.157 -0.269,0.049 -0.139,0.096 -0.148,0.231 -0.138,0.198 -0.081,0.07 -0.124,-0.013 -0.144,-0.154 -0.205,0.007 -0.244,0.19 -0.29,0.309 -0.365,0.471 -0.381,0.25 -0.482,0.212 -0.349,0.094 -0.276,0.161 -0.461,0.326 -0.092,0.192 -0.334,0.113 -0.269,0.13 -0.249,0.217 -0.061,0.383 -0.158,0.22 -0.381,0.301 -0.32,0.304 -0.209,0.298 -0.221,0.315 -0.069,0.173 -0.008,0.237 0.104,0.199 0.02,0.189 -0.079,0.137 -0.216,0.052 -0.226,-0.04 -0.347,-0.135 -0.369,-0.242 -0.135,-0.119 -0.181,-0.204 0.026,-0.189 0.093,-0.369 0.063,-0.253 -0.15,-0.121 -0.111,-0.13 -0.079,-0.125 -0.156,-0.247 -0.196,0.061 -0.17,0.061 -0.197,-0.087 -0.581,0.038 -0.438,0.028 -0.412,0.026 -0.522,0.034 -0.63,0.041 -0.181,-0.054 -0.113,-0.082 -0.114,-0.341 -0.066,-0.29 -0.122,-0.543 -0.082,-0.421 -0.097,-0.502 -0.064,-0.556 -0.046,-0.396 -0.477,-0.013 -0.381,-0.01 -0.515,-0.014 0.004,-0.316 0.006,-0.399 0.007,-0.455 0.096,-0.598 0.036,-0.502 0.045,-0.615 0.028,-0.407 0.032,-0.449 -0.266,0.139 -0.293,0.153 -0.275,0.143 -0.189,-0.363 -0.184,-0.354 -0.279,-0.539 -0.209,-0.404 -0.363,-0.237 -0.271,-0.175 -0.279,-0.295 -0.241,-0.307 -0.229,-0.292 -0.274,-0.253 -0.263,0.08 -0.297,0.159 -0.286,0.152 -0.303,0.162 -0.148,0.079 -0.352,-0.03 -0.307,-0.026 -0.549,-0.047 -0.463,-0.04 -0.473,-0.041 -0.659,-0.057 -0.668,-0.057 -0.446,0.076 -0.566,0.095 -0.594,0.1 -0.491,0.083 -0.622,0.104 -0.465,0.078 -0.229,-0.011 -0.288,-0.328 -0.462,-0.527 -0.279,-0.32 -0.274,-0.314 -0.396,-0.453 -0.318,-0.344 -0.311,-0.336 -0.179,-0.311 -0.089,-0.392 -0.162,-0.178 -0.36,-0.24 -0.388,-0.258 -0.388,-0.258 -0.388,-0.258 -0.388,-0.259 -0.388,-0.259 -0.388,-0.259 -0.388,-0.26 -0.388,-0.26 -0.388,-0.26 -0.388,-0.261 -0.379,-0.258 -0.388,-0.261 -0.388,-0.262 -0.388,-0.262 -0.388,-0.262 -0.388,-0.262 -0.319,-0.191 -0.297,0.05 -0.444,0.134 -0.466,0.14 -0.461,0.139 -0.826,0.248 -0.531,0.16 -0.415,0.134 -0.442,0.143 -0.58,0.187 -0.486,0.157 -0.569,0.184 -0.505,0.163 -0.424,0.136 -0.442,0.143 -0.35,0.112 0,0.906 0,0.902 10e-4,0.899 0,0.896 0,0.892 10e-4,0.888 0,0.885 0,0.881 0,0.878 10e-4,0.875 0,0.872 0,0.869 10e-4,0.865 0,0.862 0,0.859 0.001,0.856 -0.12,-0.007 -0.269,0.05 -0.45,0.119 -0.374,0.06 -0.164,-0.037 -0.147,-0.089 -0.129,-0.188 -0.192,-0.229 -0.197,-0.186 -0.245,-0.381 -0.17,-0.293 -0.419,-0.642 -0.059,-0.203 -0.078,-0.207 -0.14,-0.173 -0.494,-0.425 -0.575,-0.384 -0.564,-0.377 -0.159,-0.092 -0.264,-0.117 -0.325,-0.002 -0.222,0.023 -0.676,0.125 -0.519,0.146 -0.703,0.198 -0.545,0.219 -0.122,0.064 -0.398,0.264 -0.487,0.438 -0.569,0.616 -0.074,-0.396 -0.025,-0.611 0.01,-0.197 0.155,-0.515 0.157,-0.354 0.126,-0.369 0.057,-0.483 -0.117,-0.778 -0.131,-0.173 -0.157,-0.056 -0.168,-0.016 -0.309,0.032 -0.144,0.063 -0.251,-0.263 -0.303,-0.042 -0.16,0.073 -0.162,0.038 -0.176,-0.073 -0.152,-0.156 -0.093,-0.168 -0.072,-0.19 -0.238,-0.382 -0.236,-0.208 -0.286,-0.046 -0.467,0.012 -0.147,-0.026 -0.008,-0.217 0.059,-0.48 10e-4,-0.251 -0.033,-0.237 -0.078,-0.195 -0.099,-0.169 -0.278,-0.278 -0.21,-0.392 -0.351,-0.809 -0.307,-0.912 -0.135,-0.138 -0.274,-0.145 -0.599,-0.116 -0.395,-0.12 -0.155,-0.116 -0.065,-0.201 0.002,-0.216 0.032,-0.255 0.092,-0.216 0.314,-0.167 0.683,-0.037 0.583,0.018 0.529,0.386 0.173,0.088 0.188,0.025 0.374,-0.122 0.186,-0.035 0.468,0.04 -0.14,-0.183 -0.176,-0.096 -0.182,0.008 -0.157,-0.075 -0.259,-0.354 -0.449,-0.404 -0.104,-0.167 -0.032,-0.268 0.087,-0.231 0.318,-0.237 0.271,-0.323 0.123,-0.429 0.111,-0.198 0.23,-0.311 0.348,0.06 0.542,-0.225 0.887,0.044 1.062,-0.064 0.292,0.023 0.677,0.22 0.389,0.095 0.473,0.048 0.341,-0.097 -0.321,-0.3 -0.697,-0.356 -0.179,-0.304 0.319,-0.828 0.432,-0.757 0.264,-0.902 -0.074,-0.9 -0.126,-0.249 0.041,-0.293 0.15,-0.248 0.106,-0.247 -0.092,-0.298 -0.19,-0.466 -0.098,-0.151 -0.333,-0.252 -0.669,-0.011 -0.546,-0.138 -0.177,0.111 -0.1,0.17 -0.125,0.112 -0.425,0.226 -0.142,0.045 -0.148,-0.045 -0.209,-0.254 -0.186,0.028 -0.563,-0.159 -0.265,-0.346 -0.099,-0.048 -0.91,-0.277 -0.316,-0.053 -0.725,0.285 -0.525,0.365 -0.148,0.053 -0.271,0.231 -0.153,0.037 -0.157,-0.04 -0.149,0.014 -0.317,0.346 -0.574,0.402 -0.285,0.253 -0.318,0.157 -0.354,0.099 -0.361,0.016 -0.133,0.091 -0.413,0.032 -0.252,0.074 -0.009,0.137 0.05,0.306 -0.214,-0.108 -0.225,0.208 0.074,0.196 -0.135,-0.047 -0.632,-0.378 -0.519,-0.268 -0.461,-0.238 -0.067,-0.043 -0.126,-0.116 -0.09,-0.181 -0.019,-0.198 0.045,-0.146 0.112,-0.093 0.132,-0.036 0.117,0.03 0.13,0.089 0.232,0.108 0.301,0.02 0.188,-0.083 0.025,-0.199 -0.358,-0.738 -0.33,-0.597 -0.319,-0.666 -0.135,-0.242 -0.391,-0.56 -0.386,-0.553 -0.305,-0.494 -0.16,-0.152 -0.492,-0.063 -0.938,-0.122 -0.332,-0.058 -0.266,0.147 -0.267,0.115 -0.253,-0.214 -0.2,-0.352 -0.105,-0.296 0.051,-0.303 0.021,-0.448 -0.153,-0.442 -0.169,-0.219 -0.424,-0.165 -0.54,-0.373 -0.145,-0.683 0.262,-0.982 0.422,-0.698 0.307,-0.293 0.146,-0.256 0.048,-0.222 -0.037,-0.212 -0.182,-0.226 -0.282,-0.22 -0.143,-0.271 0.059,-0.582 0.187,-0.841 0.288,-0.675 0.386,-0.375 0.333,-0.269 0.131,-0.251 0.007,-0.357 -0.008,-0.337 0.089,-0.245 0.14,-0.195 0.148,-0.175 0.208,-0.196 0.27,-0.048 0.297,0.156 0.404,0.419 0.592,0.825 0.338,0.539 0.122,0.166 0.309,0.32 0.279,0.129 0.465,-0.2 0.446,-0.233 0.144,-0.148 0.092,-0.221 -0.071,-0.378 -0.093,-0.247 -0.099,-0.315 -0.137,-0.549 -0.097,-0.864 -0.115,-0.275 0.084,-0.032 0.224,0.057 0.207,0.025 0.296,-0.191 0.406,-0.36 0.743,-0.557 0.157,-0.368 0.127,-0.41 0.206,-0.252 0.473,-0.083 0.438,-0.132 0.309,-0.292 0.484,-0.257 0.398,-0.156 0.175,-0.144 0.125,-0.216 0.456,-0.61 0.358,-0.376 0.315,-0.388 0.105,-0.244 0.249,0.045 0.38,0.169 0.408,0.154 0.299,0.239 0.059,0.244 0.029,0.192 0.121,0.099 0.145,0.019 0.218,-0.048 0.381,-0.009 0.467,-0.316 0.65,-0.534 0.595,-0.166 0.313,0.127 0.259,0.393 0.205,0.369 0.211,0.137 0.131,0.004 0.048,0.006 0.262,-0.084 0.02,0.001 0.239,0.015 0.23,0.125 0.381,0.014 0.531,-0.095 0.056,-0.039 0.255,0.051 0.31,0.17 0.241,0.202 0.432,0.662 0.248,0.17 0.506,0.235 0.237,0.205 0.276,0.332 0.144,0.201 0.3,0.363 0.347,0.593 0.062,0.471 0.079,0.397 0.129,0.188 0.106,0.023 0.114,-0.065 0.112,-0.181 0.039,-0.302 -0.034,-0.535 -0.089,-0.438 -0.114,-0.139 -0.055,-0.154 0.075,-0.196 0.193,-0.095 0.24,0.06 0.395,0.252 0.412,0.317 0.507,0.554 0.465,0.351 0.509,0.28 0.404,0.083 0.313,-0.084 0.369,-0.228 0.338,-0.264 0.154,-0.277 0.11,-0.303 0.51,-0.405 0.466,-0.371 0.212,0.067 0.149,0.105 0.478,-0.226 0.166,-0.062 0.455,-0.088 0.47,0.13 0.375,0.398 0.363,0.256 0.325,-0.03 0.269,-0.131 0.178,-0.248 0.135,-0.293 0.18,-0.188 0.027,-0.012 0.579,0.102 0.363,-0.015 0.039,-0.042 0.479,0.08 0.529,0.413 0.328,0.457 0.42,0.581 0.195,0.189 0.284,0.081 0.223,0.035 0.299,0.09 0.79,0.121 0.12,0.071 0.081,0.095 -0.073,0.316 0.07,0.08 0.641,-0.225 0.172,-0.168 0.211,-0.478 0.189,-0.482 0.141,-0.179 0.149,-0.047 0.15,0.072 0.21,0.285 0.284,0.29 0.384,0.11 0.234,0.044 0.363,0.024 0.854,-0.141 0.799,-0.351 0.456,-0.382 0.212,-0.574 0.133,-0.654 0.204,-0.414 -0.085,-0.424 -0.402,-0.404 -0.136,-0.122 -0.978,-0.227 -0.06,-0.164 -0.056,-0.038 -0.964,-0.36 -0.464,-0.154 -0.131,-0.238 -0.086,-0.312 -0.301,-0.279 -0.598,-0.254 -0.104,-0.194 0.099,-0.196 0.472,-0.218 0.539,-0.46 0.207,-0.095 0.479,-0.021 0.444,-0.377 0.306,-0.216 0.16,-0.257 -0.042,-0.266 -0.444,-0.805 -0.132,-0.489 0.079,-0.319 0.255,-0.345 0.145,-0.189 0.174,-0.34 0.114,-0.182 0.448,-0.077 0.543,-0.032 0.373,0.081 0.521,0.042 0.475,0.063 0.24,0.056 0.177,-0.104 0.128,-0.183 -0.004,-0.242 -0.187,-0.235 -0.697,-0.309 -0.299,-0.255 -0.234,0.028 -0.392,-0.08 -0.354,-0.167 -0.313,-0.056 -0.102,-0.232 0.064,-0.326 0.121,-0.187 0.231,-0.093 0.251,0.047 0.273,-0.136 0.079,-0.08 0.023,-0.103 -0.044,-0.147 -0.127,-0.121 -0.18,-0.032 -0.207,0.103 -0.248,0.067 -0.419,-0.151 -0.334,-0.182 0.017,-0.168 0.247,-0.251 0.111,-0.204 0,-0.282 0,-0.33 0.086,-0.387 0.245,-0.265 0.288,-0.142 0.742,0.259 0.928,0.231 0.159,-0.038 0.047,-0.122 0.106,-0.108 1.288,-0.05 0.25,-0.149 0.125,-0.119 1.238,-0.171 0.147,-0.163 0.182,-0.152 0.285,0.003 0.339,-0.061 0.473,-0.186 0.335,-0.102 0.056,-0.008 0.354,0.041 0.439,-0.147 0.095,-0.061 0.071,-0.111 0.383,-0.214 0.735,-0.176 0.179,0.105 0.351,0.048 0.447,-0.079 0.33,-0.135 0.192,0.134 0.261,0.138 0.195,-0.117 0.097,-0.369 0.126,-0.361 0.221,-0.171 0.175,-0.063 0.158,-0.139 0.119,-0.145 0.647,0.022 0.579,-0.361 0.114,0.164 0.752,-0.038 0.934,-0.233 0.559,-0.109 0.965,-0.244 0.446,-0.198 0.639,-0.125 0.586,-0.087 0.383,-0.347 0.309,-0.049 0.376,-0.029 0.23,-0.083 0.15,-0.128 0.097,-0.241 -0.053,-0.308 -0.054,-0.224 0.269,-0.125 0.384,-0.039 0.242,-0.051 0.528,-0.51 0.364,-0.245 0.377,-0.154 0.757,0.084 0.691,0.077 0.693,0.244 0.364,0.304 0.313,0.229 0.296,0.109 0.268,0.07 0.311,-0.104 0.22,-0.14 0.128,-0.201 0.194,-0.144 0.707,-0.112 0.146,0.217 0.336,0.653 0.229,0.867 0.377,1.145 0.166,0.561 -0.073,0.293 10e-4,0.401 -0.021,0.44 -0.278,0.497 0.113,0.231 0.683,0.257 0.956,-0.094 0.59,-0.208 0.329,0.076 0.172,-0.125 0.111,-0.368 0.227,-0.083 0.233,0.257 0.169,0.434 0.162,0.279 -0.012,0.332 0.06,0.425 0.119,0.107 0.234,-0.161 0.156,-0.096 0.037,-0.129 -0.066,-0.159 -0.031,-0.162 0.052,-0.149 0.111,-0.061 0.333,0.047 0.485,0.082 0.576,0.604 0.311,0.109 0.131,0.011 0.292,-0.035 0.351,-0.173 0.236,-0.218 0.079,-0.107 0.136,0.019 0.129,0.101 0.009,0.22 -0.103,0.318 -0.35,0.291 -0.435,0.27 -0.264,0.494 -0.056,0.514 0.115,0.261 0.099,0.174 0.028,0.244 0.098,0.032 0.178,-0.1 0.485,-0.506 0.247,-0.125 0.358,-0.08 0.589,0.04 0.396,0.165 0.189,0.229 0.208,0.189 0.144,-0.079 0.074,-0.218 0.004,-0.25 0.061,-0.206 0.644,-0.507 0.429,-0.338 0.147,-0.04 0.287,0.07 0.178,-0.036 0.471,-0.318 0.44,-0.363 0.043,-0.246 0.017,-0.223 0.109,-0.101 0.616,-0.078 0.102,-0.042 0.526,-0.254 0.729,-0.434 0.354,-0.256 0.645,-0.114 0.12,-0.074 0.214,-0.173 0.404,-0.24 0.219,-0.026 -0.136,0.58 -0.241,0.668 -0.136,0.178 -0.654,-0.03 0.001,0.182 0.103,0.278 0.074,0.156 0.079,0.14 0.176,0.242 0.688,0.569 0.875,0.722 0.945,0.808 0.66,0.562 0.267,0.29 0.17,0.226 0.486,0.814 0.462,0.769 0.779,1.348 0.689,1.294 0.76,1.415 0.439,0.814 0.898,1.693 0.24,0.517 0.455,0.976 0.401,0.911 0.355,0.802 0.224,0.072 0.018,-0.217 0.04,-0.145 0.114,-0.082 0.262,-0.237 0.141,-0.057 0.21,0.024 0.22,-0.121 0.081,-0.228 -0.053,-0.423 -0.034,-0.195 0.075,-0.21 0.12,-0.082 0.167,-0.066 0.154,-0.034 0.126,-0.237 0.238,-0.072 0.219,0.044 0.18,0.009 0.159,0.173 0.089,0.237 0.172,0.019 0.281,-0.024 0.039,0.198 -0.08,0.331 -0.099,0.256 -0.017,0.205 0.149,0.1 0.546,-0.089 0.193,0.044 0.062,0.208 0.078,0.172 0.038,0.21 -0.057,0.232 0.098,0.139 0.471,0.003 0.332,-0.112 0.51,-0.009 0.461,0.246 0.319,-0.038 0.321,-0.1 0.471,0.063 0.331,-0.194 0.228,-0.243 0.071,-0.191 0.119,-0.106 0.444,10e-4 0.28,-0.019 0.207,-0.281 0.189,-0.127 0.318,-0.024 0.234,0 0.629,0.261 0.383,0.216 0.398,0.307 0.239,0.192 0.161,0.433 0.271,0.318 0.216,0.371 0.052,0.365 0.178,0.655 0.184,0.215 0.218,0 0.275,0.089 0.304,0.071 0.65,0.485 0.239,0.014 0.184,0.116 0.028,0.223 -0.068,0.258 0.071,0.247 0.213,0.315 0.168,0.307 0.207,0.372 0.063,0.212 0.166,0.07 0.224,-0.105 0.356,0.08 1.071,0.211 0.149,0.026 0.114,0.22 0.155,-0.018 0.178,-0.009 0.247,0.026 0.172,-0.203 0.141,-0.178 0.353,-0.22 0.293,-0.299 0.246,-0.266 0.184,-0.035 0.149,0.124 0.006,0.23 -0.184,0.168 -0.144,0.203 0.034,0.203 0.247,0.018 0.274,0.305 0.396,0.713 0.134,0.149 0.196,0.14 0.217,0.063 0.24,0.102 0.178,0.293 0.085,0.266 z m -103.872,16.897 -0.097,0.054 -0.059,-0.252 0.108,-0.212 0.154,-0.028 -0.053,0.335 -0.053,0.103 z m -0.356,0.464 -0.101,0.111 -0.15,-0.017 -0.281,-0.419 0.079,-0.426 0.102,-0.087 0.142,-0.06 0.019,0.094 -0.199,0.191 -0.019,0.241 0.167,0.267 0.241,0.105 z\"\n\t\t\t\tid=\"KZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 761.51475,398.8644 0.156,0.287 0.332,0.319 0.396,0.455 0.126,0.209 0.267,0.16 0.076,0.158 0.061,0.242 0.027,0.18 0.059,0.106 0.094,0.042 0.121,-0.047 0.091,-0.096 0.076,-0.265 0.05,-0.028 0.082,0.218 0.087,0.037 0.117,0.029 0.089,0.094 0.027,0.166 -0.03,0.169 -0.109,0.19 -0.062,0.2 -0.043,0.307 -0.058,0.214 0.09,0.189 0.62,0.93 0.298,0.152 0.709,0.182 0.256,0.125 0.226,0.122 0.222,-0.059 0.214,-0.277 0.257,-0.155 0.478,-0.238 0.137,-0.013 0.264,0.095 0.434,0.277 0.313,0.26 0.194,0.137 0.148,0.123 -0.023,0.138 -0.119,0.136 -0.151,0.075 -0.199,0.131 -0.113,0.132 0.069,0.049 0.292,0.033 0.345,0.117 0.105,0.137 0.015,0.117 0.042,0.191 0.061,0.058 0.319,-0.034 0.099,0.043 0.115,0.098 0.114,0.257 -0.003,0.192 -0.231,0.211 -0.086,0.128 -0.038,0.201 -0.164,0.241 -0.436,0.404 -0.117,0.024 -0.803,-0.222 -0.373,0.014 -0.18,0.007 -0.087,0.01 -0.052,0.084 0.107,0.244 0.032,0.242 -0.1,0.184 -0.267,0.16 -0.101,0.077 -0.012,0.104 0.075,0.108 0.246,0.111 0.287,0.104 0.946,0.625 0.202,0.147 0.268,0.217 0.29,0.168 0.776,0.222 0.343,0.145 0.088,0.082 -0.003,0.101 -0.09,0.129 -0.074,0.226 -0.004,0.136 0.081,0.131 0.137,0.196 0.308,0.303 0.169,0.135 0.187,0.03 0.164,0.074 0.169,0.225 0.196,0.275 0.026,0.192 0.084,0.246 0.179,0.282 0.247,0.274 0.346,0.339 0.199,0.239 0.092,0.093 0.738,0.579 0.18,0.214 0.26,0.412 0.11,0.06 0.104,0.081 0.066,0.226 0.022,0.162 0.035,0.496 0.134,0.147 0.123,0.181 0.052,0.132 0.112,0.098 0.122,0.018 0.145,-0.109 0.115,-0.105 0.053,0.031 0.116,0.346 0.107,0.126 0.2,0.121 0.19,0.093 0.415,0.416 0.221,0.152 0.152,0.048 0.129,0.071 0.039,0.132 -0.051,0.133 -0.088,0.087 -0.483,0.241 -0.064,0.105 0.066,0.16 0.121,0.2 0.132,0.172 0.166,0.169 0.339,0.274 0.294,0.214 0.161,0.237 0.089,0.158 -0.055,0.189 -0.124,0.207 -0.096,0.177 -0.165,0.103 -0.045,0.119 0.068,0.185 0.056,0.127 -0.03,0.158 0.015,0.323 -0.152,0.116 -0.142,0.294 -0.097,0.022 -0.245,-0.107 -0.086,0.059 -0.156,0.214 -0.272,0.233 -0.132,0.003 -0.091,-0.028 -0.106,0.099 -0.152,0.184 -0.07,-0.006 -0.262,0.042 -0.102,-0.059 -0.127,-0.151 -0.204,-0.154 -0.186,-0.11 -0.099,-0.074 -0.092,-0.128 -0.083,-0.083 -0.154,0.182 -0.257,0.174 -0.245,-0.033 -0.12,-0.029 -0.096,0.253 -0.072,0.046 -0.44,0.044 -0.083,0.04 0.071,0.231 0.26,0.391 0.078,0.224 -0.162,0.368 -0.456,-0.01 -0.204,-0.149 -0.19,-0.209 -0.068,-0.103 -0.584,-0.205 -0.391,0.141 -0.119,-0.007 -0.182,-0.149 -0.111,-0.112 -0.108,-0.17 -0.061,-0.172 -0.005,-0.078 0.168,-0.062 0.277,-0.141 0.226,-0.158 0.149,-0.168 0.06,-0.175 0.008,-0.203 0.065,-0.526 0.066,-0.256 -0.037,-0.316 -0.121,-0.248 0,-0.373 0.044,-0.182 0.02,-0.12 0.17,-0.151 0.117,-0.217 0.066,-0.283 0.006,-0.204 -0.053,-0.126 -0.168,-0.12 -0.281,-0.113 -0.178,-0.144 -0.072,-0.173 0.007,-0.152 0.086,-0.132 -0.212,-0.146 -0.511,-0.161 -0.285,-0.194 -0.06,-0.226 -0.213,-0.296 -0.366,-0.367 -0.193,-0.528 -0.02,-0.69 0.043,-0.562 0.16,-0.651 -0.214,-0.472 -0.235,-0.249 -0.327,-0.183 -0.312,-0.262 -0.297,-0.343 -0.354,-0.506 -0.414,-0.67 -0.278,-0.3 -0.143,0.07 -0.299,-0.063 -0.456,-0.194 -0.397,-0.105 -0.34,-0.015 -0.221,0.044 -0.102,0.103 -0.008,0.101 0.086,0.1 -0.047,0.078 -0.178,0.056 -0.143,0.11 -0.162,0.246 0.004,-0.01 -0.006,0.013 0.002,-0.003 -0.111,0.322 -0.169,0.124 -0.26,0.027 -0.255,0.092 -0.252,0.156 -0.12,0.119 0.014,0.081 -0.055,0.018 -0.123,-0.045 -0.058,-0.106 0.007,-0.168 -0.129,-0.112 -0.263,-0.058 -0.3,-0.179 -0.338,-0.303 -0.234,-0.161 -0.131,-0.02 -0.187,0.12 -0.246,0.26 -0.202,0.102 -0.159,-0.053 -0.123,0.091 -0.086,0.237 -0.159,0.185 -0.348,0.203 -0.023,0.024 -0.398,0.273 -0.319,0.275 -0.371,0.369 -0.175,0.057 -0.167,-0.09 -0.252,-0.09 -0.133,-0.125 0.254,-0.625 0.321,-0.693 0.086,-0.32 0.013,-0.234 -0.031,-0.19 -0.126,-0.199 -0.118,-0.154 -0.011,-0.103 0.038,-0.108 0.129,-0.161 0.166,-0.25 0.154,-0.513 0.185,-0.544 -0.018,-0.33 -0.149,-0.362 -0.082,-0.344 0.065,-0.469 -0.024,-0.183 -0.161,-0.092 -0.528,-0.093 -0.17,0.016 -0.134,0.06 -0.145,0.128 -0.176,0.08 -0.332,0.045 -0.314,-0.159 -0.263,-0.27 -0.063,-0.33 0.193,-0.394 0.135,-0.319 0.08,-0.274 -0.009,-0.13 -0.056,-0.135 -0.079,-0.019 -0.168,-0.168 -0.164,-0.296 -0.156,-0.136 -0.145,0.025 -0.135,0.113 -0.123,0.198 -0.097,0.082 -0.069,-0.037 0.021,-0.175 0.02,-0.166 0.152,-0.646 0.184,-0.42 0.216,-0.195 0.228,-0.083 0.24,0.031 0.203,-0.036 0.162,-0.103 -0.015,-0.059 -0.192,-0.015 -0.077,-0.112 0.041,-0.211 0.084,-0.137 0.132,-0.063 0.128,-0.212 0.123,-0.363 0.151,-0.183 0.176,-0.005 0.303,-0.155 0.429,-0.307 0.165,-0.297 0.162,0.136 -0.061,0.344 0.085,0.072 0.04,0.123 -0.022,0.192 0.036,0.163 0.066,0.079 0.093,0.04 0.455,-0.14 0.278,-0.01 0.117,0.092 0.105,0.057 0.132,0.044 0.102,0.059 0.065,-0.019 0.156,-0.143 0.047,-0.025 0.005,-0.07 -0.109,-0.129 -0.113,-0.108 0.004,-0.24 0.053,-0.416 0.011,-0.216 -0.01,-0.517 -0.02,-0.146 -0.104,-0.168 -0.271,-0.323 -0.076,-0.197 -0.044,-0.197 0.004,-0.125 -0.069,-0.143 -0.035,-0.133 0.121,-0.068 0.147,-0.154 0.074,-0.235 0.07,-0.172 0.102,-0.073 0.088,-0.027 0.059,0.015 0.23,0.308 0.291,-0.154 0.22,0.001 0.189,0.081 z\"\n\t\t\t\tid=\"LA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 575.56175,363.8614 -0.08,0.055 -0.149,0.153 -0.149,0.124 -0.301,0.193 -0.068,0.115 -0.067,-0.104 -0.131,0.071 -0.11,0.437 -0.23,0.146 -0.288,-0.013 -0.24,-0.041 -0.322,0.027 0.131,-0.254 0.136,-0.331 0.134,-0.446 0.237,-0.371 0.491,-1.264 0.284,-0.513 0.101,-0.73 0.439,-0.639 0.328,-0.19 0.159,-0.183 -0.004,-0.278 0.49,0.002 0.316,-0.014 0.091,-0.156 0.247,0.071 0.137,0.15 -0.124,0.159 -0.175,0.181 0.01,0.047 0.131,0.015 0.222,0.098 0.136,0.115 0.227,0.714 -0.14,0.293 -0.218,0.262 -0.097,0.023 -0.191,0.13 -0.16,0.178 -0.056,0.112 0.012,0.105 0.226,0.131 0.007,0.053 -0.047,0.042 -0.183,-0.029 -0.236,-0.014 -0.139,10e-4 -0.161,0.026 -0.206,0.16 -0.092,0.106 -0.049,0.068 -0.074,0.217 0.083,0.149 0.154,0.085 0.022,0.043 -0.035,0.075 -0.153,0.094 -0.115,0.115 -0.033,0.117 z\"\n\t\t\t\tid=\"LB\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 303.99375,424.0054 -0.158,0.3 -0.307,-0.188 -0.034,-0.237 0.027,-0.143 0.187,-0.274 0.146,-0.178 0.103,-0.059 0.06,0.236 z\"\n\t\t\t\tid=\"LC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 501.78175,313.6684 -0.218,-0.022 -0.041,0.002 -0.023,-0.145 0.013,-0.309 0.121,-0.404 0.026,0.066 0.015,0.085 0.025,0.09 0.014,0.11 0.045,0.113 0.082,0.107 0.026,0.102 -0.041,0.129 z\"\n\t\t\t\tid=\"LI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 699.36475,435.4304 0.27,0.015 0.288,-0.007 0.201,0.039 0.346,0.436 0.94,0.78 0.513,0.792 0.046,0.173 0.071,0.15 0.123,0.041 0.104,0.068 0.511,0.764 0.06,0.151 -0.009,0.167 0.03,0.124 0.134,0.062 0.166,0.032 0.109,0.115 0.139,0.609 0,0.19 0.039,0.081 0.644,0.947 0.037,0.115 -0.007,0.086 0.019,0.075 0.125,0.167 0.194,0.451 0.1,0.103 0.118,0.394 0.008,0.753 -0.044,0.334 -0.12,0.408 -0.143,0.398 -0.154,0.288 -0.211,0.243 -0.723,0.517 -0.207,0.104 -0.94,0.324 -0.693,0.306 -0.641,0.083 -0.642,-0.169 -0.482,-0.402 -0.247,-0.593 -0.17,-0.618 -0.245,-0.687 -0.189,-2.124 -0.09,-0.594 -0.146,-0.758 0.015,-0.329 0.104,-0.315 -10e-4,0.691 0.096,0.086 0.071,-0.089 0.064,-0.716 0.053,-0.303 0.256,-0.79 0.005,-0.14 -0.044,-0.297 0.002,-0.149 0.382,-0.554 0.098,-0.323 0.053,-0.33 -0.021,-0.357 -0.068,-0.352 0.308,0.112 0.17,0.123 0.173,0.083 0.14,-0.042 0.17,-0.001 -0.121,-0.191 -0.358,-0.177 -0.595,-0.109 -0.186,-0.14 -0.071,-0.122 0.036,-0.142 0.037,-0.06 z m -0.036,0.515 -0.176,0.031 -0.139,-0.188 -0.033,-0.08 0.037,-0.056 0.038,-0.028 0.045,0.009 0.066,0.175 0.162,0.137 z m -0.266,1.639 0.081,0.213 -0.231,-0.146 -0.152,-0.122 -0.055,-0.098 0.315,0.11 0.042,0.043 z\"\n\t\t\t\tid=\"LK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 451.07775,441.7884 0.055,0.033 0.084,0.086 0.08,0.294 0.314,0.949 -0.016,0.262 -0.062,0.171 -0.002,0.167 -0.021,0.166 -0.192,0.27 -0.568,0.554 0.044,0.049 0.135,0.063 0.139,0.032 0.113,-0.017 0.142,0.138 0.153,0.174 0.162,0.091 0.234,0.079 0.204,0.009 0.174,-0.031 0.245,0.035 0.261,0.144 0.093,0.237 0.063,0.207 0.09,0.105 0.013,0.179 0.185,0.157 0.265,0.032 0.343,0.184 0.087,-0.01 0.038,-0.023 0.042,0.035 0.086,0.532 0.067,0.282 -0.036,0.115 -0.045,0.089 -0.003,0.43 -0.156,0.246 -0.025,0.271 -0.043,0.087 -0.166,0.078 -10e-4,0.208 -0.045,0.251 -0.017,0.266 0.046,0.698 0.009,0.519 0.075,0.098 -0.323,-0.043 -0.95,-0.397 -0.731,-0.227 -2.451,-1.3 -0.68,-0.522 -0.786,-0.777 -1.745,-1.567 -0.398,-0.251 -0.502,-0.122 -0.31,-0.134 -0.219,-0.145 -0.178,-0.434 -0.437,-0.259 -0.805,-0.368 -0.606,-0.612 0.149,-0.126 0.218,-0.403 0.306,-0.387 0.285,-0.23 0.226,-0.237 0.24,-0.181 0.342,-0.212 0.525,-0.557 0.122,-0.065 0.084,-0.386 0.132,-0.491 0.152,-0.153 0.357,-0.091 0.083,-0.085 0.126,-0.347 0.082,-0.403 0.007,-0.088 0.14,-0.01 0.241,-0.087 0.14,0.039 0.061,0.116 0.032,0.098 0.729,-0.252 0.064,-0.052 0.038,0.009 0.092,0.227 0.052,-0.014 0.044,-0.065 0.049,-0.007 0.057,0.031 0.057,0.105 0.093,0.096 0.158,0.067 0.1,0.091 -0.011,0.243 0.038,0.236 0.069,0.054 0.036,0.141 0.018,0.154 0.038,0.081 0.027,0.156 -0.014,0.168 0.029,0.117 0.116,0.203 0.072,0.255 10e-4,0.182 -0.043,0.19 -0.077,0.174 -0.135,0.189 -0.011,0.075 0.08,0.049 0.122,0.011 0.102,-0.04 0.258,0.088 0.135,0.124 0.119,0.155 0.107,0.078 0.048,0.097 0.183,-0.026 0.213,-0.094 0.044,-0.045 0.063,0.024 0.137,0.01 0.096,-0.169 0.077,-0.194 0.165,-0.211 0.081,-0.081 0.021,-0.134 0.009,-0.174 0.06,-0.151 0.136,-0.083 0.147,10e-4 0.08,0.031 0.041,0.146 0.118,0.111 z\"\n\t\t\t\tid=\"LR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 555.54475,551.0404 -0.252,0.08 -0.035,0.006 -0.163,-0.018 -0.216,0.019 -0.169,0.044 -0.132,0.017 -0.215,0.229 -0.392,0.618 -0.104,0.13 -0.028,0.244 -0.091,0.193 -0.112,0.15 -0.108,0.037 -0.326,-0.06 -0.418,-0.077 -0.243,-0.187 -0.216,-0.246 -0.113,-0.179 -0.12,-0.098 -0.041,-0.055 -0.169,-0.082 -0.064,-0.043 -0.057,-0.031 -0.068,-0.118 -0.041,-0.103 0.016,-0.287 -0.12,-0.171 -0.205,-0.291 -0.129,-0.239 -0.177,-0.326 -0.109,-0.278 -0.112,-0.288 0.015,-0.124 0.107,-0.084 0.315,-0.145 0.244,-0.112 0.175,-0.205 0.191,-0.306 0.093,-0.183 0.093,-0.084 0.101,-0.129 0.177,-0.287 0.197,-0.318 0.211,-0.341 0.266,-0.099 0.363,-0.114 0.35,-0.298 0.416,-0.25 0.671,-0.272 0.313,-0.069 0.12,-0.04 0.075,0.052 0.08,0.155 0.114,0.131 0.265,0.226 0.112,0.055 0.274,0.336 0.292,0.23 0.337,0.266 0.229,0.132 0.118,0.037 0.096,0.236 0.099,0.175 0.055,0.164 -0.011,0.16 -0.106,0.392 -0.155,0.401 -0.125,0.166 -0.152,0.106 -0.148,0.159 -0.057,0.322 -0.067,0.379 -0.194,0.156 -0.15,0.103 -0.209,0.126 z\"\n\t\t\t\tid=\"LS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 549.52975,274.9174 -0.007,0.223 -0.068,0.377 -0.133,0.486 -0.139,0.376 -0.034,0.145 0.105,0.121 0.522,0.057 0.222,0.064 0.043,0.1 -0.116,0.129 -0.167,0.107 -0.074,0.102 -0.133,0.363 -0.868,-0.046 -0.115,0.074 -0.055,0.168 -0.043,0.194 -0.114,0.23 -0.23,0.2 -0.361,0.074 -0.295,0.136 -0.22,0.418 -0.164,0.56 0.004,0.396 0.021,0.221 -0.019,0.126 -0.111,0.137 -0.182,0.363 -0.148,0.401 -0.057,0.217 0.028,0.102 0.167,0.003 0.241,0.082 0.128,0.16 0.047,0.185 0,0.198 -0.045,0.109 -0.193,0.079 -0.302,0.003 -0.176,-0.094 -0.036,-0.075 0.084,-0.191 -0.061,-0.239 -0.125,-0.133 -0.254,0.199 -0.244,0 -0.292,0.178 -0.191,0.284 -0.183,0.104 -0.496,-0.058 -0.123,0.125 -0.103,0.576 -0.059,0.112 -0.414,-0.024 -0.399,0.229 -0.451,0.185 -0.228,-0.128 -0.127,-0.145 -0.246,0.026 -0.268,0.064 -0.18,-0.035 -0.202,0.016 -0.39,0.111 -0.49,-0.036 -0.209,-0.095 -0.02,-0.091 0.015,-0.224 -0.005,-0.348 -0.078,-0.308 -0.235,-0.272 -0.246,-0.191 -0.314,-0.197 -0.232,-0.086 -0.127,-0.022 -0.029,-0.114 -0.046,-0.099 -0.109,-0.086 -0.232,-0.116 -0.197,-0.025 -0.161,0.187 -0.118,-0.234 -0.125,-0.421 0.013,-0.337 0.071,-0.337 0.341,-0.999 -0.018,-0.16 -0.248,-0.28 -0.306,-0.204 -0.169,-0.432 -0.62,-0.025 -0.585,0.024 -0.184,-0.021 -0.557,-0.181 -0.537,-0.292 -0.359,-0.171 -0.302,-0.192 -0.163,-0.202 -0.257,0.054 -0.174,0.002 0.002,-0.035 -0.099,-0.357 0.104,-0.548 -0.188,-0.806 -0.307,-0.973 -0.022,-1.047 -0.022,-0.236 0.754,-0.594 0.951,-0.637 0.216,-0.058 0.876,-0.378 0.117,-0.03 0.79,0.07 0.62,0.09 0.523,-0.011 0.287,-0.097 0.26,0.081 0.209,0.285 0.216,-0.034 0.213,-0.184 1.17,0.168 0.264,-0.004 0.297,0.027 0.548,0.171 0.316,0.157 0.694,-0.095 0.297,-0.005 0.155,-0.062 0.479,-0.43 0.207,-0.074 0.19,-0.077 0.174,0.065 0.114,0.367 0.354,0.631 0.385,0.111 1.063,0.242 0.217,0.127 0.598,0.554 0.359,0.271 0.228,0.216 0.348,0.423 0.201,0.307 0.336,0.232 0.398,0.156 0.149,0.025 z m -15.817,1.92 -0.163,-0.038 0.321,-0.568 0.123,-0.37 0.085,-0.526 0.075,-0.166 0.002,0.239 -0.033,0.398 -0.203,0.677 -0.207,0.354 z\"\n\t\t\t\tid=\"LT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 492.06075,300.7024 -0.022,0.117 0.004,0.261 0.079,0.261 0.188,0.258 0.143,0.186 0.193,0.149 0.326,0.141 0.13,0.03 0.018,0.191 -0.025,0.202 -0.113,0.111 -0.106,0.161 -0.08,0.195 -0.083,0.375 -0.012,0.259 -0.188,-0.107 -0.099,-0.073 -0.172,-0.02 -0.171,0.06 -0.128,0.131 -0.177,0.04 -0.145,-0.04 -0.086,-0.098 -0.077,-0.053 -0.219,-0.066 -0.095,-0.143 0.073,-0.067 0.062,-0.106 0.053,-0.149 0.067,-0.137 -0.215,-0.379 -0.045,-0.116 -0.176,-0.213 0.002,-0.109 0.042,-0.103 -0.016,-0.081 0.025,-0.191 0.124,-0.181 0.082,-0.224 0.139,-0.306 0.307,-0.368 0.22,0.057 0.097,-0.002 0.058,0.135 z\"\n\t\t\t\tid=\"LU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 551.65775,265.4494 0.331,0.021 0.116,0.083 0.078,0.408 0.376,0.321 0.348,0.265 0.089,0.123 0.027,0.236 -0.022,0.276 -0.044,0.142 -0.146,0.164 -0.127,0.415 -0.018,0.394 -0.2,0.68 0.045,0.012 0.422,-0.122 0.119,0.07 0.093,0.149 0.03,0.425 0.138,0.191 0.141,0.298 0.044,0.231 0.269,0.275 0.021,0.179 0.164,0.627 0.063,0.36 0.029,0.279 -0.08,0.353 -0.072,0.238 -0.084,-0.015 -0.241,0.063 -0.381,0.287 -0.567,0.675 -0.146,0.149 -0.148,0.511 -0.036,0.052 -0.33,-0.023 -0.09,-0.012 -0.33,0.01 -0.721,-0.133 -0.279,0.088 -0.366,0.516 -0.143,0.076 -0.425,0.071 -0.075,0.06 -0.142,-0.024 -0.398,-0.156 -0.336,-0.232 -0.202,-0.307 -0.348,-0.423 -0.228,-0.216 -0.359,-0.271 -0.598,-0.555 -0.217,-0.127 -1.064,-0.242 -0.384,-0.111 -0.354,-0.631 -0.114,-0.368 -0.174,-0.065 -0.191,0.077 -0.206,0.074 -0.479,0.43 -0.155,0.061 -0.297,0.005 -0.694,0.095 -0.316,-0.157 -0.548,-0.171 -0.298,-0.027 -0.264,0.004 -1.17,-0.168 -0.213,0.184 -0.216,0.033 -0.209,-0.285 -0.261,-0.081 -0.287,0.097 -0.523,0.011 -0.62,-0.09 -0.789,-0.07 -0.117,0.03 -0.877,0.379 -0.216,0.057 -0.951,0.637 -0.754,0.594 -0.087,-0.95 0.046,-1.914 0.112,-0.955 0.522,-0.559 0.262,-0.436 0.152,-0.584 0.046,-0.542 0.106,-0.449 0.757,-1.294 0.599,-0.14 0.812,-0.361 0.907,-0.301 0.175,0.383 0.089,0.292 1.092,1.059 0.278,0.355 0.422,1.21 1.012,0.612 0.795,-0.193 0.346,-0.297 0.637,-0.548 0.284,-0.402 0.058,-0.388 -0.113,-1.67 -0.172,-0.728 0.058,-0.454 0.112,0.023 0.271,-0.22 0.889,-0.408 0.178,-0.019 0.203,-0.083 0.56,-0.312 0.181,0.166 0.15,0.188 0.082,0.002 0.041,-0.07 -0.011,-0.121 0.039,-0.086 0.161,0.048 0.649,0.511 0.249,0.12 0.171,0.033 0.204,0.239 0.554,0.159 0.068,0.123 0.042,0.154 0.519,0.644 0.233,0.323 0.46,0.296 0.198,0.07 0.806,-0.302 0.224,-0.104 0.186,-0.002 0.189,0.159 0.432,0.211 0.391,0.067 z\"\n\t\t\t\tid=\"LV\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 545.47975,369.7494 -0.108,0.092 -0.154,0.196 -0.097,0.174 -0.26,0.284 -0.217,0.303 0.021,0.443 0.049,0.45 0.146,0.439 0.125,0.488 -0.036,0.318 -0.107,0.391 -0.128,0.326 -0.424,0.669 -0.065,0.16 0.024,0.225 0.258,0.792 0.02,0.249 0.154,0.766 0.141,0.622 0.156,0.489 0.024,0.134 0,0.717 0,0.716 0,0.714 0,0.713 0,0.711 0,0.71 0,0.708 0,0.707 0,0.705 0,0.704 0,0.702 0,0.702 0,0.699 0,0.698 0,0.697 0,0.696 0,0.694 0,0.693 0,0.692 0,0.69 0,0.69 0,0.688 0,0.686 0,0.686 0,0.684 0,0.683 0,0.682 0,0.681 0,0.679 0,0.679 0,0.678 0,0.676 0,1.497 -10e-4,1.492 0,1.487 -0.001,1.482 -0.009,0.004 -0.008,0.006 -0.009,0.005 -0.009,0.006 -0.692,-10e-4 -0.692,0 -0.693,0 -0.692,-0.001 0,0.371 0,0.37 0,0.369 0,0.37 -1.345,-0.701 -1.344,-0.701 -1.345,-0.703 -1.344,-0.704 -1.345,-0.705 -1.344,-0.706 -1.345,-0.707 -1.344,-0.708 -1.345,-0.71 -1.344,-0.711 -1.345,-0.711 -1.344,-0.713 -1.345,-0.715 -1.344,-0.716 -1.345,-0.716 -1.345,-0.718 -0.928,-0.497 -1.002,0.485 -0.785,0.38 -1.034,0.499 0,0 -1.188,0.647 -0.912,0.496 -0.043,-0.004 -0.041,-0.012 -0.949,-0.842 -0.741,-0.659 -0.329,-0.185 -1.397,-0.337 -1.389,-0.335 -1.462,-0.354 -0.266,-0.539 -0.297,-0.603 -0.401,-0.755 -0.245,-0.463 -0.082,-0.072 -1.121,-0.366 -1.185,-0.36 -0.693,0.218 -0.122,-0.016 -0.196,-0.137 -0.197,-0.187 -0.104,-0.261 -0.278,-0.35 -0.257,-0.803 -0.025,-0.64 -0.051,-0.227 -0.617,-0.904 -0.561,-0.823 -0.373,-0.55 -0.072,-0.249 0.043,-0.306 0.15,-0.275 0.543,-0.325 0.49,-0.355 0.067,-0.246 0.031,-0.679 -0.16,-0.212 -0.118,-0.404 -0.12,-0.547 -0.014,-0.351 0.218,-0.699 0.255,-0.733 -0.162,-0.814 -0.12,-1.639 0.075,-1.296 -0.061,-0.472 -0.043,-0.199 -0.167,-0.614 -0.205,-0.635 -0.092,-0.223 -0.263,-0.513 -0.436,-0.637 -0.226,-0.392 0.31,-0.207 0.275,-0.162 0.335,-0.171 0.475,-0.194 0.246,-0.146 0.105,-0.123 0.357,-0.502 0.186,-0.278 0.254,-0.381 0.111,-0.266 0.003,-0.246 -0.039,-0.298 -0.198,-0.714 -0.162,-0.696 0.126,-0.269 0.101,-0.128 0.221,-0.328 0.088,-0.066 0.477,-0.102 0.19,-0.218 0.146,-0.274 0.037,-0.144 0.208,-0.151 0.249,-0.151 0.153,-0.196 0.502,-0.304 0.458,-0.277 0.533,-0.292 0.412,-0.226 0.087,-0.198 -0.006,-0.171 -0.224,-0.39 0,-0.462 0.015,-0.384 0.022,-0.227 0.099,-0.633 0.006,-0.089 0.428,0.211 0.439,0.084 1.309,0.783 0.413,0.098 0.916,0.093 1.079,-0.32 0.408,-0.058 0.71,0.301 0.313,0.085 0.526,0.023 0.899,0.272 0.229,0.095 0.524,0.434 0.251,0.13 1.861,0.397 0.254,0.263 0.259,0.501 0.011,0.622 0.143,0.45 0.231,0.583 0.279,0.412 0.309,0.343 0.355,0.214 0.816,0.316 0.92,0.121 0.928,0.041 1.593,0.435 1.351,0.501 0.333,0.247 0.677,0.242 1.345,1.174 0.749,0.405 0.525,0.078 0.471,-0.071 0.837,-0.406 0.346,-0.242 0.842,-1.014 0.277,-0.53 0.11,-0.375 -0.027,-0.381 -0.105,-0.343 -0.236,-0.36 -0.165,-0.476 -0.097,-0.859 0.132,-0.597 0.161,-0.358 0.254,-0.366 0.699,-0.701 0.703,-0.495 1.239,-0.648 0.719,-0.007 0.298,-0.072 0.592,-0.459 0.24,-0.017 0.332,0.112 0.976,-0.032 0.43,0.128 0.513,0.286 0.648,0.177 0.457,0.177 0.487,0.227 0.11,0.565 -0.054,0.168 -0.012,0.219 0.505,0.388 1.435,0.182 0.283,0.104 0.395,0.297 0.254,0.091 0.983,0.042 0.573,-0.063 0.546,0.104 0.202,0.1 0.209,0.232 0.253,0.562 z\"\n\t\t\t\tid=\"LY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 468.66575,358.2084 0.081,0.253 0.166,0.202 0.592,0.461 0.351,0.284 0.01,0.098 -0.113,0.233 -0.048,0.16 0.092,0.171 0.217,0.206 0.017,0.099 -0.052,0.115 -0.112,0.221 0.238,0.648 0.04,0.627 -0.062,0.445 0.002,0.257 0.031,0.218 0.202,0.503 -0.135,0.831 0.152,0.452 0.209,0.366 0.114,0.652 0.168,0.309 0.275,0.271 0.157,0.091 0.303,0.224 0.217,0.186 0.127,0.278 -0.272,0.228 -0.218,0.204 -0.062,0.22 0.102,0.352 0,0.189 -0.139,0.06 -0.566,-0.02 -0.444,-0.015 -0.51,-0.017 -0.718,-0.034 -0.444,-0.021 -0.61,-0.028 -0.21,0.014 -0.559,0.098 -0.395,0.07 -0.067,0.019 -0.123,0.087 -0.085,0.259 -0.076,0.295 -0.082,0.131 -1.185,0.426 -0.463,0.059 -0.268,-0.044 -0.191,0.035 -0.164,0.091 -0.056,0.137 -0.008,0.176 0.035,0.177 0.114,0.246 0.02,0.246 -0.073,0.174 -0.017,0.174 -0.034,0.188 0.061,0.102 0.114,0.016 0.115,0.086 0.162,0.078 0.134,0.149 -0.006,0.212 -0.112,0.12 -0.099,0.063 -0.444,0.056 -0.351,0.045 -0.459,0.338 -0.489,0.36 -0.578,0.238 -0.255,0.067 -0.445,0.171 -0.533,0.281 -0.263,0.45 -0.331,0.518 -0.319,0.347 -0.435,0.329 -0.406,0.125 -0.51,0.158 -0.643,0.121 -0.455,0.04 -0.136,0.026 -0.401,0.008 -0.196,-0.025 -0.147,-0.014 -0.059,0.037 -0.02,0.081 -0.008,0.186 -0.027,0.213 -0.127,0.179 -0.09,0.08 -0.105,0.033 -0.337,-0.048 -0.282,-0.057 -0.671,-0.076 -0.134,0.018 -0.05,0.022 -0.209,0.122 -0.322,0.256 -0.219,0.224 -0.163,0.105 -0.39,0.055 -0.17,0.082 -0.726,0.559 -0.155,0.136 -0.747,0.485 -0.211,0.161 -0.165,0.159 -0.446,0.358 -0.285,0.157 -0.052,0.093 -0.014,0.218 0,0.482 0,0.462 0,0.67 0,0.67 0,0.77 -0.377,0 0,0.001 -0.002,-0.001 -12.234,0.014 0.004,-0.012 0.38,-0.36 0.257,-0.456 0.436,-0.203 0.912,-0.098 1.355,-0.379 1.216,-0.573 0.344,-0.228 0.368,-0.458 0.612,-0.597 1.143,-0.718 0.526,-0.402 0.802,-1.009 0.533,-0.837 0.443,-0.54 0.306,-0.48 0.215,-0.487 0.121,-0.786 -0.081,-0.308 -0.338,-0.504 -0.226,-0.135 -0.061,-0.238 0.121,-0.42 -0.002,-0.724 0.068,-1.16 0.376,-0.939 0.919,-1.235 0.171,-0.509 0.105,-0.81 0.009,-0.287 1.15,-1.156 0.673,-0.889 0.234,-0.218 0.594,-0.407 2.074,-0.891 1.172,-0.639 0.684,-0.466 0.408,-0.553 1.13,-2.179 1.109,-3.096 0.093,-0.36 0.496,-0.104 0.351,-0.045 0.283,-0.114 0.35,-0.234 0.336,0.094 -0.168,0.159 0,0.384 0.238,0.449 0.414,0.504 0.752,0.639 0.586,0.256 0.837,0.154 0.976,-0.28 0.546,-0.005 0.265,-0.121 0.289,0.177 0.549,0.057 0.53,-0.093 0.401,-0.268 0.255,-0.309 0.04,0.152 0.012,0.164 0.078,0.096 0.158,0.392 0.083,0.153 0.305,-0.025 0.265,0.077 0.598,-0.037 z\"\n\t\t\t\tid=\"MA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 495.77175,326.8484 -0.171,0.073 0.007,-0.084 0.042,-0.046 0.054,-0.022 0.063,0.037 z\"\n\t\t\t\tid=\"MC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 554.07275,320.1704 -0.14,-0.253 -0.142,-0.221 -0.104,-0.119 0.044,-0.055 0.113,-0.063 0.081,-0.075 -0.009,-0.264 -0.06,-0.304 -0.055,-0.147 -0.005,-0.231 -0.039,-0.36 0.055,-0.67 0.226,-0.844 0.125,-0.421 -0.061,-0.231 0.047,-0.54 -0.098,-0.267 -0.153,-0.35 -0.219,-0.763 -0.274,-0.266 -0.338,-0.293 -0.144,-0.221 -0.097,-0.244 -0.201,-0.243 -0.231,-0.223 -0.276,-0.559 -0.143,-0.253 -0.044,-0.067 -0.315,-0.36 -0.165,-0.325 -0.084,-0.268 -0.048,-0.247 -0.222,-0.491 -0.201,-0.369 -0.191,-0.264 -0.088,-0.187 -0.224,-0.235 -0.319,-0.188 -0.207,-0.032 -0.266,0.015 0.061,-0.144 0.579,-0.391 0.151,0.064 0.303,0.015 0.617,-0.013 0.304,-0.258 0.188,0.072 0.153,-0.116 0.255,-0.146 0.037,0.031 0.032,0.023 0.394,0.065 0.297,0.14 0.198,0.215 0.205,0.133 0.21,0.052 0.117,0.108 0.023,0.162 0.198,0.08 0.371,-0.002 0.157,0.107 -0.056,0.217 0.038,0.071 0.132,-0.074 0.1,0.064 0.052,0.16 0.06,0.076 0.189,-0.251 0.2,0.025 0.483,0.104 0.258,0.519 0.161,0.186 0.141,0.076 0.178,-0.081 0.158,-0.096 0.09,0.045 0.196,0.343 0.045,0.448 -0.001,0.18 -0.069,0.304 -0.099,0.322 -0.078,0.21 0.033,0.168 0.07,0.141 0.114,0.046 0.374,0.284 0.14,0.198 0.203,0.146 0.154,0.008 0.08,0.081 0.028,0.1 -0.021,0.252 -0.086,0.236 0.011,0.152 0.136,0.18 0.015,0.208 0.009,0.134 0.072,0.103 0.343,0.229 0.443,0.221 0.113,0.19 0.069,0.24 -0.022,0.403 -0.029,0.35 0.58,0.47 -0.066,0.088 -0.09,0.096 -0.554,0.071 -0.113,0.039 -0.241,-0.353 -0.127,-0.045 -0.118,0.13 -0.14,0.072 -0.167,-0.036 -0.18,-0.109 -0.091,-0.077 -0.073,-0.009 -0.112,0.077 -0.149,-0.033 -0.098,-0.087 -0.141,0.3 -0.086,0.063 -0.054,-0.009 -0.011,-0.51 -0.041,-0.077 -0.112,-0.013 -0.27,0.122 -0.257,0.157 -0.087,0.139 0.009,0.251 0.037,0.299 0.175,0.453 -0.096,0.197 -0.068,0.314 -0.275,0.287 -0.312,0.167 -0.026,0.342 -0.173,0.233 -0.296,0.233 -0.198,0.281 0.05,0.191 0.012,0.182 -0.034,0.123 -0.007,0.095 -0.078,0.042 -0.452,0.035 -0.128,0.059 z\"\n\t\t\t\tid=\"MD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 613.92475,497.8574 0.129,0.299 0.15,0.287 0.469,0.694 0.201,0.267 0.171,0.284 0.083,0.567 0.299,0.882 0.281,1.328 0.086,1.365 0.087,0.627 0.219,0.591 0.359,0.614 0.116,0.683 -0.22,0.705 -0.317,0.665 -0.082,0.125 -0.149,0.171 -0.067,-0.007 -0.254,-0.172 -0.208,-0.281 -0.263,-0.661 -0.096,-0.335 -0.11,-0.053 -0.308,0.029 -0.223,0.208 -0.041,0.131 0.048,0.373 0.085,0.335 0.037,0.341 0.007,0.429 0.083,0.13 0.122,0.109 0.127,0.281 0.022,0.67 -0.078,0.339 -0.217,0.292 0.013,0.161 0.081,0.166 -0.077,0.1 -0.289,0.126 -0.117,0.112 -0.156,0.297 -0.253,0.606 -0.034,0.31 0.158,0.944 -0.044,0.67 -0.322,1.285 -0.186,0.611 -0.263,0.731 -0.402,0.965 -0.398,1.215 -0.338,1.253 -0.25,0.755 -0.284,0.745 -0.389,1.319 -0.33,1.343 -0.491,1.482 -0.678,1.659 -0.073,0.217 -0.141,0.851 -0.152,0.74 -0.182,0.734 -0.38,1.216 -0.043,0.375 -0.086,0.361 -0.366,0.766 -0.155,0.285 -0.109,0.303 -0.062,0.385 -0.109,0.372 -0.268,0.685 -0.399,0.59 -0.272,0.215 -0.588,0.312 -0.298,0.063 -0.661,0.007 -0.64,0.178 -0.667,0.342 -0.642,0.393 -0.246,0.187 -0.271,0.107 -0.848,0.022 -0.254,-0.085 -0.849,-0.646 -0.329,-0.106 -0.623,-0.088 -0.188,-0.055 -0.171,-0.084 -0.252,-0.337 -0.5,-0.284 -0.12,-0.089 -0.076,-0.196 -0.052,-0.211 -0.13,-0.236 -0.096,-0.449 -0.163,-0.313 -0.46,-0.553 -0.049,-0.177 -0.037,-0.586 0.015,-0.396 -0.045,-0.724 0.053,-0.34 0.162,-0.306 -0.066,-0.331 -0.172,-0.348 -0.064,-0.359 -0.126,-0.327 -0.482,-0.588 -0.113,-0.289 -0.078,-0.299 -0.182,-0.931 -0.022,-0.324 0.027,-0.684 0.067,-0.352 0.117,-0.245 0.029,-0.183 0.076,-0.157 0.114,-0.125 0.077,-0.149 0.18,-0.87 0.228,-0.193 0.338,-0.111 0.271,-0.227 0.156,-0.306 0.156,-0.631 0.426,-0.625 0.152,-0.328 0.344,-0.496 0.304,-0.696 0.092,-0.328 0.066,-0.335 0.077,-0.735 0.058,-0.365 -0.012,-0.362 -0.174,-0.371 -0.415,-0.673 -0.013,-0.125 0.033,-0.5 -0.035,-0.361 -0.153,-0.36 -0.196,-0.338 -0.193,-0.632 -0.094,-1.043 0.02,-0.376 -0.057,-0.334 -0.14,-0.318 0.1,-0.555 1.241,-2.01 0.041,-0.236 -0.05,-0.611 0.026,-0.355 0.043,-0.132 0.095,-0.077 0.212,-0.037 1.003,-0.087 0.129,-0.062 0.25,-0.168 0.344,-0.326 0.158,-0.094 0.136,0.035 0.087,0.139 0.112,0.076 0.405,-0.147 0.155,-0.004 0.159,0.024 0.074,-0.136 0.044,-0.182 0.059,-0.128 0.108,-0.073 0.521,-0.04 0.333,-0.052 0.43,-0.127 0.092,0.025 0.347,0.458 0.105,0.039 0.135,0.019 0.118,-0.083 -0.282,-0.239 -0.042,-0.135 0.015,-0.154 0.151,-0.329 0.252,-0.251 0.56,-0.381 0.582,-0.44 0.169,-0.03 0.143,0.069 0.11,0.52 -0.014,0.085 0.093,0.012 0.108,-0.064 0.096,-0.209 0.005,-0.174 -0.078,-0.167 -0.038,-0.141 -0.003,-0.13 0.295,-0.307 0.232,-0.292 0.107,-0.349 0.093,-0.161 0.245,-0.181 0.072,0.028 0.057,0.147 0.032,0.156 -0.063,0.155 -0.089,0.153 -0.036,0.204 0.138,0.04 0.13,-0.049 0.19,-0.369 0.217,-0.349 0.129,-0.182 0.163,-0.126 0.271,0.025 0.263,0.078 -0.429,-0.368 -0.107,-0.504 0.51,-0.871 0.005,-0.181 0.074,-0.056 0.035,-0.07 -0.264,-0.293 -0.05,-0.146 0.035,-0.221 0.126,-0.196 0.115,-0.137 0.163,-0.053 0.129,0.075 0.284,0.241 0.191,0.037 0.231,-0.231 0.189,-0.289 0.284,-0.198 0.323,-0.123 0.491,-0.455 0.32,-0.95 0.025,-0.277 -0.071,-0.335 -0.113,-0.319 -0.189,-0.398 0.049,-0.088 0.269,0.053 0.09,-0.056 0.292,-0.352 0.481,-0.674 0.158,10e-4 0.136,0.125 0.051,0.185 0.096,0.136 0.325,0.32 0.163,0.23 z m -3.358,2.666 0.004,0.104 -0.369,-0.043 -0.058,-0.359 0.181,-0.011 0.04,-0.147 0.11,-0.018 0.119,0.319 -0.027,0.155 z m 4.475,10.227 -0.315,0.536 0.089,-0.447 0.365,-0.644 0.104,-0.049 -0.243,0.604 z\"\n\t\t\t\tid=\"MG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 528.76375,327.6884 -0.007,0.047 0.013,0.139 0.063,0.135 0.223,0.138 0.327,0.274 0.384,0.502 0.176,0.148 0.159,0.037 0.309,0.207 0.216,0.051 0.241,0.057 0.628,0.433 0.283,0.126 0.2,0.163 0.022,0.153 -0.009,0.095 -0.363,0.11 -0.063,0.169 -0.176,-0.02 -0.213,-10e-4 -0.069,0.107 0.102,0.176 0.066,0.206 -0.053,0.283 -0.018,0.037 -0.051,-0.01 -0.3,0.164 -0.222,0.077 -0.201,0.039 -0.095,-0.079 -0.047,-0.107 0.009,-0.31 -0.037,-0.105 -0.068,-0.051 -0.138,0.073 -0.159,0.241 -0.149,0.278 -0.223,0.29 -0.184,0.278 -0.198,0.351 -0.135,0.289 0.14,0.164 0.086,0.226 -0.026,0.17 0.025,0.099 -0.044,0.297 -0.008,0.187 -0.438,-0.299 -0.18,-0.421 -0.64,-0.713 -0.733,-0.486 -0.039,-0.077 0.04,-0.094 0.035,-0.074 -0.153,-0.006 -0.106,0.06 -0.102,-0.017 -0.114,-0.183 -0.108,-0.158 -0.005,-0.14 0.049,-0.018 0.073,-0.056 0.155,-0.155 0.031,-0.082 -0.008,-0.124 -0.217,-0.392 -0.031,-0.255 -0.031,-0.475 0.046,-0.112 0.079,-0.055 0.379,-0.059 -0.005,-0.371 0.023,-0.112 0.076,-0.154 0.048,-0.141 0.211,-0.203 0.286,-0.241 0.125,-0.008 0.109,0.034 0.124,0.208 0.135,-0.027 0.028,-0.25 -0.177,-0.327 -0.094,-0.209 0.029,-0.116 0.066,-0.061 0.153,0.038 0.145,0.058 0.091,-0.039 0.145,-0.03 z\"\n\t\t\t\tid=\"ME\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 298.05475,411.6834 -0.314,0 0.023,-0.064 0.146,-0.072 0.107,0.006 0.043,0.026 z\"\n\t\t\t\tid=\"MF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 943.27075,431.6294 -0.073,0.02 -0.055,-0.02 0.04,-0.037 0.082,-0.006 0.031,0.01 -0.025,0.033 z m 5.445,10.861 -0.041,0.043 -0.271,-0.026 -0.124,-0.054 0.012,-0.041 0.214,0.039 0.21,0.039 z m 6.375,0.48 0.352,0.144 0.468,-0.067 -0.075,0.043 -0.175,0.04 -0.116,0.035 -0.078,0 -0.093,-0.014 -0.3,-0.1 -0.168,-0.132 0.041,-0.044 0.144,0.095 z m 1.334,0.253 0.104,0.061 0.207,-0.004 0.191,0.155 -0.073,-0.01 -0.104,-0.066 -0.095,-0.028 -0.128,0.008 -0.06,-0.025 -0.042,-0.091 z m -5.451,3.418 -0.056,0.084 -0.069,-0.006 0.061,-0.063 0.042,-0.088 0.067,-0.25 0.139,-0.089 0.096,-0.104 -0.023,0.108 -0.15,0.113 -0.107,0.295 z\"\n\t\t\t\tid=\"MH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 537.60375,332.3444 0.433,0.562 0.237,0.228 0.279,0.172 0.319,0.126 0.115,0.12 0.203,0.595 0.097,0.226 0.135,0.067 0.033,0.065 0.006,0.086 -0.152,0.417 -0.062,0.931 -0.038,0.074 -0.159,-0.004 -0.212,0.02 -0.08,0.072 -0.085,0.499 -0.341,0.142 -0.309,0.08 -0.26,-0.018 -0.458,-0.118 -0.149,-0.013 -0.128,0.067 -0.409,0.036 -0.179,0.087 -0.421,0.582 -0.426,0.201 -0.146,0.101 -0.325,-0.128 -0.156,-0.014 -0.226,0.148 -0.494,0.015 -0.133,0.026 -0.381,0.023 -0.016,-0.08 -0.071,-0.117 -0.178,-0.055 -0.363,0.047 -0.088,-0.085 -0.15,-0.494 -0.116,-0.079 -0.131,-0.166 -0.221,-0.538 -0.006,-0.236 0.015,-0.207 -0.123,-0.484 0.076,-0.123 0.114,-0.077 10e-4,-0.196 -0.032,-0.297 0.135,-0.584 0.036,-0.043 0.035,0.028 0.326,0.047 0.085,-0.074 0.054,-0.116 0.017,-0.429 0.078,-0.198 0.79,-0.378 0.233,-0.014 0.178,0.174 0.141,0.111 0.085,-0.004 0.031,-0.111 0.096,-0.216 0.162,-0.123 0.481,-0.105 0.004,0 0.157,0.021 0.339,-0.097 0.212,-0.134 0.108,-0.02 0.143,-0.051 0.206,0.007 0.209,0.058 0.266,-0.077 0.261,-0.125 0.105,0.032 0.113,0.106 z\"\n\t\t\t\tid=\"MK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 486.75975,408.5224 0.002,0.516 0.002,0.777 0.003,0.865 0.002,0.796 0.003,0.906 0.003,0.727 0.002,0.859 0.003,0.853 -0.089,0.098 -0.033,0.479 -0.025,0.63 -0.171,0.652 -0.299,0.48 -0.108,0.456 -0.082,0.261 -0.112,0.142 -0.026,0.17 -0.059,0.24 -0.095,0.155 -0.074,0.08 -0.301,0.094 -0.53,0.459 -0.046,0.367 -0.604,-0.101 -0.642,-0.104 -0.086,0.007 -0.054,0.048 -0.026,0.194 -0.874,0.032 -0.754,0.028 -0.934,0.032 -0.642,0.022 -0.814,0.044 -0.755,0.041 -0.502,0.422 -0.453,0.402 -0.036,0.014 -0.642,0.079 -0.801,-0.07 -0.412,-0.004 -0.162,0.048 -0.031,0.151 -0.59,-0.212 -0.682,-0.215 -0.476,0.135 -0.076,-0.046 -0.062,-0.09 -0.23,-0.052 -0.365,0.023 -0.264,0.064 -0.414,0.318 -0.312,0.277 -0.085,0.063 -0.436,0.168 -0.81,0.39 -0.46,0.287 -0.106,0.052 -0.204,0.065 -0.314,0.013 -0.262,0.072 -0.236,0.754 -0.157,0.075 -0.966,-0.304 -0.195,0.045 -0.168,0.089 -0.539,0.442 -0.267,0.354 -0.146,0.47 0.021,0.145 0.004,0.164 -0.095,0.089 -0.13,0.032 -0.117,-0.005 -0.448,-0.097 -0.14,0.042 -0.061,0.232 0.009,0.506 -0.098,0.344 -0.266,0.106 -0.206,0.136 -0.162,0.039 -0.135,-0.033 -0.779,-0.514 -0.263,-0.082 -0.292,0.057 -0.28,0.218 -0.127,0.143 -0.175,0.169 -0.197,0.225 0.052,0.19 0.139,0.221 0.099,0.274 -0.005,0.245 -0.711,0.348 0.058,0.119 0.107,0.14 10e-4,0.253 -0.02,0.443 -0.144,0.16 -0.186,0.158 -0.115,0.203 -0.113,0.1 -0.202,0.125 -0.277,0.126 -0.48,0.11 -0.384,0.074 -0.145,0.072 -0.204,0.148 -0.163,0.178 -0.039,0.192 0.033,0.22 0.057,0.18 0.071,0.123 0.043,0.155 -0.058,0.417 -0.139,0.483 -0.134,0.215 -0.215,0.118 -0.186,0.132 0.061,0.316 0.032,0.453 -0.052,0.362 -0.009,0.223 -0.079,0.232 -0.046,0.163 -0.093,-0.04 -0.386,0.019 -0.42,0.124 -0.147,0.099 -0.032,0.135 -0.093,0.091 -0.134,0.102 -0.129,0.125 -0.232,-0.02 -0.224,-0.086 -0.117,-0.083 -0.007,-0.05 0.073,-0.122 0.063,-0.133 0.006,-0.088 -0.076,-0.216 -0.062,-0.232 0.025,-0.111 -0.055,-0.342 -0.03,-0.017 -0.294,0.088 -0.107,0.022 -0.061,0.038 -0.02,0.065 0.071,0.217 -0.046,0.037 -0.165,-0.005 -0.23,-0.072 -0.251,-0.199 -0.063,0.065 -0.027,0.158 -0.017,0.187 0.064,0.34 -0.067,0.121 -0.168,-0.022 -0.226,0.001 -0.197,0.033 -0.131,0.008 -0.081,0.121 -0.035,0.136 0.079,0.15 -0.012,0.064 -0.061,0.058 -0.077,0.035 -0.064,-0.004 -0.182,-0.167 -0.218,-0.062 -0.507,-0.096 -0.061,-0.228 -0.084,-0.004 -0.117,-0.12 -0.116,-0.159 -0.098,0.008 -0.082,0.045 -0.278,-0.018 -0.247,0.241 -0.183,0.3 -0.196,0.144 -0.216,0.063 -0.083,0.002 0.045,-0.189 -0.031,-0.139 -0.061,-0.123 -0.629,-0.329 -0.098,-0.136 -0.099,-0.374 -0.063,-0.374 0.007,-0.219 0.043,-0.197 -0.018,-0.152 -0.069,-0.116 -0.189,-0.112 -0.196,-0.052 -0.25,0.146 -0.12,0.028 -0.112,-0.01 -0.058,-0.054 0.008,-0.075 0.272,-0.401 0.132,-0.167 0.159,-0.128 0.107,-0.068 0.069,-0.098 0.006,-0.078 -0.025,-0.056 -0.177,-0.074 -0.276,-0.187 -0.147,-0.02 -0.123,-0.085 -0.13,-0.293 -0.061,-0.056 -0.13,-0.03 -0.12,-0.072 0.006,-0.381 0.005,-0.329 -0.268,-0.53 -0.104,-0.334 -0.135,-0.344 -0.124,-0.161 -0.217,-0.135 -0.267,-0.094 -0.237,-0.022 -0.182,0.032 -0.085,0.042 0.004,0.064 0.148,0.217 0.027,0.121 -0.025,0.117 -0.05,0.078 -0.131,0.009 -0.23,0.067 -0.283,0.132 -0.198,0.113 -0.159,0.286 -0.11,0.036 -0.187,-0.036 -0.533,-0.211 -0.439,-0.174 -0.303,-0.1 -0.182,0.064 -0.093,0.031 -0.261,0.116 -0.347,0.423 -0.083,0.14 -0.069,0.045 -0.094,0.074 -0.09,0.002 -0.072,-0.05 -0.023,-0.031 -0.178,-0.305 -0.195,-0.336 -0.16,-0.152 -0.201,-0.007 -0.171,0.105 -0.179,0.216 -0.225,0.2 -0.143,0.06 -0.125,-0.033 -0.307,-0.252 -0.219,-0.18 -0.027,-0.09 0.077,-0.138 0.076,-0.206 0.083,-0.167 0.08,-0.077 0.02,-0.213 -0.186,-0.151 -0.006,-0.073 0.019,-0.2 0.083,-0.423 -0.008,-0.161 0.075,-0.315 -0.122,-0.142 -0.028,-0.105 -0.137,-0.168 -0.157,-0.238 -0.036,-0.191 -0.055,-0.152 -0.151,-0.229 -0.11,-0.036 -0.236,-0.035 -0.039,0.079 -0.087,0.114 -0.08,0.033 -0.129,-0.14 -0.049,-0.12 10e-4,-0.109 -0.175,-0.191 -0.272,-0.35 0.028,-0.289 0.168,-0.156 0.05,-0.118 0.015,-0.132 -0.076,-0.16 -0.09,-0.126 0.025,-0.279 -0.022,-0.388 -0.138,-0.194 -0.125,-0.142 -0.175,-0.153 -0.149,-0.236 0.06,-0.324 0.057,-0.223 -0.264,-0.463 0.494,0.183 0.065,-0.06 0.168,-0.112 0.227,-0.236 0.19,-0.313 0.086,-0.387 0.038,-0.334 0.085,-0.283 0.108,-0.24 0.236,-0.25 0.222,-0.177 0.264,-0.184 0.134,0.033 0.251,0.257 0.551,0.515 0.455,0.392 0.166,0.208 0.147,0.002 0.226,-0.38 0.234,-0.327 0.099,-0.08 0.308,-0.036 0.262,-0.014 0.229,0.006 0.42,0.063 0.192,0.058 0.18,0.035 0.528,0.029 0.523,-0.08 0.497,-0.103 0.368,-0.061 0.019,-0.155 -0.021,-0.183 0.059,-0.139 0.116,-0.129 0.098,-0.029 0.042,0.44 0.117,0.066 0.328,0.019 0.533,0 0.572,0 0.572,0 0.573,0 0.572,0 0.572,0 0.573,0 0.572,0 0.573,0 0.572,0 0.572,0 0.572,0 0.573,0 0.572,0 0.573,0 0.572,0 0.573,0 0.593,0 0.16,-0.849 0.146,-0.779 0.122,-0.654 -0.42,-0.462 -0.334,-0.368 -0.078,-0.702 -0.079,-0.725 -0.08,-0.726 -0.081,-0.727 -0.079,-0.728 -0.08,-0.729 -0.08,-0.73 -0.08,-0.731 -0.08,-0.732 -0.08,-0.734 -0.08,-0.734 -0.08,-0.735 -0.08,-0.737 -0.079,-0.738 -0.08,-0.739 -0.081,-0.741 -0.079,-0.741 -0.08,-0.743 -0.08,-0.744 -0.08,-0.745 -0.08,-0.747 -0.08,-0.747 -0.08,-0.75 -0.08,-0.75 -0.08,-0.752 -0.079,-0.753 -0.08,-0.755 -0.08,-0.756 -0.08,-0.758 -0.08,-0.759 -0.08,-0.76 -0.08,-0.762 -0.08,-0.764 -0.075,-0.701 0.862,0 0.919,-0.001 0.895,0 1.313,-10e-4 0.983,0 0.857,0.588 0.777,0.555 0.919,0.657 0.919,0.656 0.92,0.655 0.919,0.653 0.919,0.652 0.918,0.652 0.92,0.649 0.919,0.65 0.919,0.648 0.919,0.647 0.919,0.646 0.919,0.645 0.919,0.644 0.919,0.643 0.919,0.642 0.919,0.642 0.411,0.286 0.038,0.118 0.038,0.241 -0.024,0.271 0.004,0.221 0.121,0.149 0.229,0.16 0.899,0.472 0.071,0.093 0.032,0.195 0.107,0.239 0.19,0.14 0.222,0.103 0.271,0.072 0.815,0.074 0.173,0.111 0.352,0.435 0.191,0.086 0.543,0.125 0.393,0.07 0.162,0.04 0.356,0.116 0.387,0.198 0.205,0.179 0,0.056 -0.002,0.156 -0.003,0.467 0.071,0.257 0.081,0.186 -0.004,0.113 -0.098,0.08 -0.076,0.099 -0.042,0.13 -0.111,0.165 -0.089,0.184 0.038,0.138 0.153,0.09 0.229,0.175 0.19,0.074 0.093,0.005 0.124,-0.005 0.107,-0.023 0.686,-0.134 0.636,-0.125 z\"\n\t\t\t\tid=\"ML\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 793.37275,399.4184 0.006,-0.066 0.037,-0.073 0.092,-0.013 0.059,0.07 -0.008,0.003 -0.131,0.06 -0.041,0.012 z\"\n\t\t\t\tid=\"MO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 758.74075,401.3064 -0.165,0.296 -0.429,0.307 -0.303,0.156 -0.177,0.004 -0.15,0.184 -0.123,0.362 -0.128,0.212 -0.132,0.063 -0.085,0.137 -0.04,0.21 0.076,0.112 0.192,0.015 0.015,0.059 -0.162,0.103 -0.202,0.036 -0.24,-0.031 -0.229,0.083 -0.216,0.195 -0.184,0.421 -0.152,0.646 -0.02,0.166 -0.334,-0.188 -0.139,-0.106 -0.179,-0.027 -0.184,0.119 -0.146,0.129 -0.149,0.047 -0.229,0.015 -0.3,-0.067 -0.204,-0.06 -0.031,0.033 0.111,0.272 0.039,0.217 -0.044,0.113 -0.097,0.094 -0.146,0.074 -0.172,0.043 -0.152,-0.004 -0.243,-0.103 -0.186,-0.004 -0.159,0.051 -0.097,0.076 -0.054,0.095 -0.094,0.536 -0.082,0.167 -0.115,0.095 -0.115,0.01 -0.158,-0.026 -0.165,0.022 -0.749,0.207 -0.109,0.02 -0.234,0.016 -0.218,0.006 -0.153,-0.01 -0.359,-0.212 -0.174,-0.022 -0.096,0.06 -0.066,0.284 -0.21,0.181 -0.28,0.393 -0.064,0.574 0.028,0.4 -0.251,0.396 -0.023,0.191 0.135,0.916 -0.022,0.096 -0.052,0.047 -0.157,0.032 -0.265,0.096 -0.175,0.091 -0.084,0.01 -0.247,-0.068 -0.064,-10e-4 0.019,0.07 0.197,0.396 0.204,0.188 0.213,-0.021 0.092,0.037 -0.027,0.095 0.082,0.248 0.19,0.4 0.058,0.3 -0.116,0.298 0.021,0.107 0.063,0.063 0.18,0.277 0.383,0.433 0.375,0.468 0.313,0.39 0.229,0.27 0.512,0.501 0.091,0.235 0.02,0.474 0.126,0.274 0.117,0.196 0.081,0.164 0.188,0.536 0.08,0.072 0.41,-0.326 0.095,0.068 0.054,0.123 0,0.156 -0.064,0.177 -0.133,0.164 -0.634,0.378 -0.052,0.325 -0.044,0.493 -0.011,0.605 0.031,0.452 -0.023,0.104 -0.056,0.049 -0.239,-0.02 -0.344,0.228 -0.122,0.02 -0.151,0.087 -0.115,0.108 -0.037,0.164 0.068,0.496 0.123,0.465 0.241,0.341 0.191,0.27 0.267,0.375 0.21,0.326 0.425,0.357 0.596,0.534 0.228,0.295 0.201,0.357 0.142,0.305 0.054,0.404 0.044,0.226 0.013,0.756 -0.109,0.172 -0.084,0.199 0.047,0.208 0.139,0.199 0,0.227 0.13,0.407 0.218,0.249 0.21,0.167 0.093,0.132 -0.03,0.212 0.062,0.225 0.046,0.245 0.085,0.339 0.169,0.287 0.257,0.879 -0.006,0.09 -0.111,0.178 -0.162,0.161 -0.104,0.052 -0.099,0.166 -0.235,0.469 -0.474,0.808 -0.462,0.526 -0.389,0.374 -0.281,0.227 -0.083,0.135 0,0.106 0.051,0.188 -0.02,0.358 -0.06,0.227 -0.08,0.24 -0.045,0.214 -0.125,0.032 -0.268,0.408 -0.116,-0.205 -0.068,-0.213 0.073,-0.483 -0.163,-0.915 0.102,-0.122 0.097,-0.062 0.178,-0.351 0.215,-0.348 0.021,-0.416 0.174,-0.305 -0.041,-0.255 0.009,-0.299 0.037,-0.245 -0.014,-0.201 0.138,-0.208 0.239,-0.156 -0.1,-0.056 -0.1,-0.114 -0.313,0.173 -0.16,-0.057 -0.032,-0.18 0.04,-0.193 0.016,-0.117 0.125,-0.132 -0.009,-0.258 -0.063,-0.227 0.091,-0.281 -0.185,-10e-4 -0.085,-0.057 0.053,-0.156 0.168,-0.138 -0.153,-0.264 0.113,-0.283 -0.004,-0.35 -0.077,-0.309 0.004,-0.222 -0.118,-0.394 -0.054,-0.504 -0.249,-0.375 -0.185,-0.547 -0.494,-0.716 0.009,-0.307 -0.026,-0.27 -0.108,-0.131 -0.143,0.955 -0.109,-0.188 -0.035,-0.533 -0.071,-0.253 0.077,-0.503 -0.286,-0.5 -0.061,-0.363 -0.188,-0.551 0.055,-0.124 0.251,0.124 -0.231,-0.321 -0.188,0.072 -0.16,-0.347 -0.035,-0.941 -0.157,-0.352 0.086,-0.359 -0.179,-1.288 -0.354,-0.418 0.07,-0.36 0.088,-0.32 -0.02,-0.592 0.087,-0.183 0.172,-0.14 -0.161,0.049 -0.137,0.042 -0.321,0.035 -0.363,0.007 -0.126,-0.433 -0.178,-0.208 -0.156,-0.435 -0.094,-0.495 0.061,-0.097 -0.28,-0.202 -0.072,-0.124 -0.293,-0.322 -0.333,-0.245 0.074,0.172 0.09,0.109 -0.166,0.298 0.162,0.502 -0.142,0.32 -0.133,0.416 -0.127,0.198 -0.401,0.426 -0.325,0.144 -0.212,0.027 -0.188,-0.045 -0.23,-0.22 -0.056,-0.184 -0.037,-0.309 -0.081,-0.044 -0.087,0.036 0.136,0.399 -0.002,0.186 0.245,0.358 -0.087,0.1 -0.444,0.196 -0.151,-0.032 -0.107,0.039 -0.029,0.161 -0.056,0.09 -0.699,0.246 -0.146,0.277 -0.09,0.281 -0.348,0.403 -0.466,0.333 -0.115,-0.019 -0.132,-0.078 0.018,-0.36 0.16,-0.305 -0.051,-0.326 -0.039,0.187 -0.301,0.454 -0.137,0.148 -0.276,-0.039 -0.382,0.061 -0.144,-0.466 0.003,-0.171 -0.028,-0.145 0.044,-0.153 -0.014,-0.122 -0.092,0.233 -0.035,0.202 -0.14,0.18 -0.383,0.193 -0.016,-0.245 -0.013,-0.221 0.082,-0.199 -0.012,-0.315 0.122,-0.456 -0.01,-0.156 -0.037,-0.173 -0.068,0.251 -0.039,0.26 -0.077,0.079 -0.141,0.059 -0.258,0.298 -0.151,0.267 -0.4,0.252 -0.211,-0.026 -0.027,-0.32 0.16,-1.135 0.157,-0.16 0.073,-0.197 0.131,-0.665 0.147,-0.251 0.058,-0.528 0.06,-0.091 0.197,-0.415 0.068,-0.762 -0.081,-0.379 -0.185,-0.368 -0.178,-1.106 -0.464,-0.898 -0.038,-0.3 -0.229,-0.363 0.211,-0.026 -0.434,-0.318 -0.06,-0.13 -0.087,-0.746 0.017,-0.417 -0.063,0.055 -0.059,0.257 -0.17,0.105 0.076,0.445 -0.02,0.108 -0.09,0.173 -0.362,-0.18 -0.266,-0.196 -0.301,-0.477 -0.295,-0.535 0.104,-0.083 0.136,-0.01 0.419,0.398 0.271,0.083 0.172,-0.099 0.213,-0.17 0.102,-0.33 -0.104,-0.121 -0.205,-0.066 -0.135,-0.089 -0.196,-0.224 -0.024,-0.114 -0.061,-0.146 -0.198,-0.103 -0.16,-0.131 0.135,-0.231 0.133,-0.172 -0.352,0.008 -0.4,-0.296 -0.083,-0.086 -0.133,-0.059 -0.315,-0.035 -0.262,0.087 0.119,0.423 -0.023,0.14 -0.172,-0.021 -0.358,-0.644 0.108,-0.163 0.154,-0.153 -0.076,-0.022 -0.149,0.01 0.146,-0.572 -0.089,-0.085 -0.046,0.179 -0.079,0.172 -0.305,0.404 -0.151,-0.076 -0.104,-0.101 0.146,-0.212 0.079,-0.057 0.055,-0.114 -0.113,-0.222 -0.18,-0.162 -0.144,-0.279 -0.075,-0.004 0.066,0.329 -0.027,0.47 -0.322,-0.519 -0.645,-0.738 -0.152,-0.222 -0.034,-0.217 -0.072,-0.2 -0.05,-0.219 -0.011,-0.169 -0.14,-0.153 -0.063,-0.268 -0.035,-0.272 0.08,-0.194 0.201,-0.209 0.143,-0.037 0.118,0.092 0.278,0.138 0.188,0.129 0.083,0.169 0.088,-0.021 0.089,-0.108 -0.018,-0.133 -0.09,-0.35 -0.025,-0.425 -0.004,-0.996 -0.022,-0.114 0.155,-0.1 0.063,-0.114 0.063,-0.17 0.04,-0.075 0.09,-0.005 0.142,0.083 0.232,0.285 0.155,0.064 0.154,-0.045 0.161,-0.427 0.059,-0.116 0.078,-0.076 0.143,0.013 0.083,-0.077 0.031,-0.185 -0.001,-0.206 -0.159,-0.564 -0.048,-0.261 -0.026,-0.257 0.1,-0.265 0.136,-0.31 -0.032,-0.271 0.037,-0.105 0.111,-0.015 0.139,0.065 0.153,-0.045 0.116,-0.166 0.047,-0.145 0.07,-0.627 0.047,-0.575 0.02,-0.469 -0.119,-0.281 -0.183,-0.756 0.053,-0.129 0.083,-0.03 0.271,0.265 0.117,0.044 0.197,-0.041 0.194,-0.059 0.141,-0.004 0.203,0.091 0.279,0.101 0.437,0.125 0.179,0.094 0.148,-0.013 0.12,-0.294 0.139,-0.429 0.206,-0.639 0.236,-0.465 0.063,-0.124 0.263,-0.379 0.255,-0.398 0.223,-0.503 0.124,-0.363 -0.011,-0.151 -0.08,-0.125 -0.167,-0.08 -0.138,-0.083 -0.038,-0.075 0.004,-0.085 0.071,-0.236 0.121,-0.279 0.126,-0.151 0.331,-0.187 0.211,-0.241 0.238,-0.319 0.129,-0.217 0.065,-0.442 0.071,-0.088 0.146,-0.143 0.111,-0.167 -0.009,-0.091 -0.059,-0.065 -0.11,-0.31 -0.051,-0.486 0.024,-0.395 0.083,-0.161 0.11,-0.224 0.204,-0.138 0.291,-0.096 0.445,-0.262 0.771,-0.608 0.278,-0.198 0.19,-0.103 0.185,-0.255 0.254,-0.279 0.363,-0.139 0.233,-0.054 1.1,-0.191 0.185,0.024 0.186,0.111 0.231,0.372 0.205,0.14 0.238,0.098 0.179,-0.042 0.005,-0.15 -0.566,-0.868 -0.051,-0.237 -0.02,-0.227 0.064,-0.18 0.177,-0.172 0.244,-0.194 0.304,-0.243 0.191,-0.168 0.225,-0.054 0.081,-0.097 0.023,-0.141 -0.012,-0.154 -0.103,-0.174 0.021,-0.219 0.034,-0.199 0.096,-0.116 0.21,-0.315 0.13,-0.228 0.068,-0.097 0.101,-0.171 0.172,-0.021 0.168,0.054 0.1,0.097 0.1,0.198 0.109,0.162 0.134,0 0.136,-0.023 0.063,0.022 0.13,0.135 0.248,0.324 0.11,0.082 0.104,0.138 0.055,0.276 0.034,0.277 0.311,0.961 0.093,0.202 0.069,0.154 0.145,0.038 0.118,-0.154 0.046,-0.165 0.122,-0.056 0.146,0.03 0.268,0.154 0.144,0.083 0.072,0.474 0.016,0.555 -0.021,0.172 0.117,0.457 0.036,0.524 0.025,0.287 0.003,0.273 -0.021,0.358 -0.063,0.479 -0.105,0.409 0.038,0.34 -0.063,0.155 -0.256,0.079 -0.022,0.13 0.075,0.213 0.179,0.267 0.005,0.168 -0.087,0.114 -0.188,0.011 -0.261,0.106 -0.18,0.344 -0.19,0.282 -0.104,0.056 -0.348,-0.08 -0.083,0.072 -0.122,0.48 -0.1,0.207 -0.149,0.174 -0.137,0.103 -0.124,0.072 -0.276,-0.048 -0.146,0.289 -0.146,0.381 -0.012,0.197 0.076,0.31 -0.04,0.086 -0.149,0.067 -0.245,0.139 -0.151,0.441 0.006,0.428 0.09,0.146 0.169,0.064 0.121,0.131 0.012,0.206 0.104,0.257 -0.049,0.299 -0.344,0.435 -0.01,0.237 0.183,0.073 0.158,-0.034 0.195,-0.103 0.229,-0.166 0.504,-0.242 0.549,-0.138 0.434,-0.026 0.371,0.01 0.182,0.051 0.055,0.089 0.508,-0.141 0.106,-0.008 0.092,-0.008 -0.003,0.094 -0.372,0.387 -0.069,0.18 0.012,0.193 0.152,0.179 0.147,0.138 0.125,0.346 -0.097,0.316 0.062,0.115 0.109,0.129 0.066,0.182 0.009,0.221 -0.062,0.353 0.537,0.184 0.464,0.083 0.338,0.022 0.217,0.081 0.131,0.07 0.092,0.126 0.027,0.138 -0.113,0.097 -0.229,0.309 -0.132,0.413 0.014,0.309 -0.016,0.268 -0.266,0.386 -0.105,0.265 -0.093,0.271 0.003,0.118 0.055,0.082 0.113,0.048 0.196,0.029 0.24,-0.031 0.572,0.065 0.653,0.119 0.259,0.065 0.085,0.12 -0.021,0.261 -0.041,0.243 0.042,0.187 0.105,0.171 0.177,0.057 0.152,0.066 0.029,0.131 -0.047,0.178 0.077,0.14 0.087,0.092 0.188,0.053 0.381,-0.114 0.267,0.051 0.241,0.078 0.205,-0.041 0.203,-0.1 0.444,-0.451 0.517,-0.244 0.17,-0.058 0.114,0.029 0.028,0.031 -0.007,0.092 0.054,0.371 -0.022,0.044 z m -22.814,4.904 0.037,0.282 -0.135,-0.116 -0.176,-0.392 0.005,-0.257 0.126,0.12 0.143,0.363 z m 1.352,0.093 0.061,0.409 -0.192,-0.153 -0.071,-0.211 -0.019,-0.216 0.221,0.171 z m 0.626,0.991 0.321,0.245 0.128,-0.017 0.199,0.155 0.005,0.061 -0.038,0.126 -0.09,0.099 -0.243,0.099 -0.167,-0.08 -0.066,-0.268 -0.196,-0.126 -0.051,-0.107 0.124,-0.146 0.074,-0.041 z m -0.067,2.58 -0.047,0.025 -0.292,-0.247 -0.231,-0.318 0.367,-0.063 0.354,0.069 0.002,0.169 -0.076,0.272 -0.077,0.093 z m 10.901,7.11 -0.106,0.038 -0.159,-0.19 -0.032,-0.452 0.133,-0.104 0.071,-0.025 0.104,0.056 0.04,0.073 0.018,0.091 -0.028,0.093 -0.041,0.42 z m -8.695,0.892 -0.183,0.283 -0.067,-0.423 0.297,-0.235 0.147,-0.225 0.155,-0.153 0.049,0.187 -0.147,0.354 -0.251,0.212 z m 0.921,0.367 -0.058,0.074 -0.115,-0.053 -0.027,-0.032 0.265,-0.319 0.028,0.119 -0.093,0.211 z m 9.852,7.836 -0.018,0.47 -0.141,-0.227 -0.023,-0.259 0.011,-0.241 0.03,-0.039 0.009,0.037 0.084,0.108 0.048,0.151 z m 0.276,1.433 0.063,0.079 0.09,-0.002 -0.025,0.279 -0.22,0.343 -0.131,0.05 -0.058,0 0.049,-0.501 -0.081,-0.286 0.027,-0.19 0.236,0.088 0.05,0.14 z m -0.976,0.594 -0.017,0.104 -0.162,0.213 -0.143,-0.124 -0.036,-0.067 0.145,-0.137 0.154,0.02 0.041,-0.031 0.018,0.022 z m 0.198,0.684 -0.033,0.016 -0.046,-0.009 -0.093,-0.046 -0.107,-0.194 0.057,-0.136 0.039,-0.033 0.094,0.011 0.05,0.026 0.017,0.05 -0.027,0.107 0.004,0.092 0.045,0.116 z m 1.065,0.699 -0.117,0.016 -0.056,-0.461 0.033,-0.066 0.166,0.226 0.236,0.138 -0.093,0.09 -0.169,0.057 z m -1.237,0.606 0.022,0.158 -0.175,-0.168 -0.03,-0.468 0.138,0.295 0.06,0.067 -0.015,0.116 z m 1.342,-0.15 -0.071,0.587 -0.178,-0.081 -0.085,0 -0.106,-0.332 0.008,-0.089 -0.064,-0.218 0.413,-0.038 0.083,0.171 z m -0.932,0.76 -0.016,0.064 -0.019,-0.002 -0.063,-0.045 0.039,-0.27 0.106,-0.221 0.109,-0.324 0.061,-0.07 0.022,0.171 -0.067,0.367 -0.057,0.2 -0.115,0.13 z m 0.899,1.468 -0.064,0.006 -0.059,-0.014 -0.058,-0.044 0.138,-0.305 0.043,0.357 z m -0.932,0.025 0.234,0.491 -0.025,0.076 -0.036,0.038 -0.056,-0.013 -0.094,-0.265 -0.176,-0.171 -0.211,0.032 0.175,-0.217 0.069,-0.049 0.12,0.078 z m -0.076,2.89 -0.136,0.165 -0.046,-0.007 0.063,-0.274 0.226,-0.2 0.199,-0.018 -0.022,0.124 -0.146,0.152 -0.138,0.058 z\"\n\t\t\t\tid=\"MM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 802.36575,301.9954 -0.263,0.602 -0.526,1.202 -0.445,1.012 -0.236,0.568 -0.172,0.432 -0.179,0.409 -0.026,0.245 -0.201,0.394 -0.374,0.475 -0.081,0.514 0.015,0.461 -0.032,0.412 -0.41,0.261 -0.321,0.232 0.092,0.778 0.165,0.293 0.267,0.316 0.281,0.253 0.243,0.213 0.268,-0.102 0.227,-0.325 0.438,-0.286 0.243,-0.007 0.17,0.066 0.38,0.019 0.389,-0.104 0.305,-0.022 0.394,0.07 0.142,0.068 0.331,0.126 0.357,0.275 0.25,0.307 0.182,0.059 0.093,-0.098 0.2,-0.273 0.281,-0.263 0.341,-0.432 0.257,-0.332 0.202,-0.051 0.39,10e-4 0.175,-0.08 0.295,-0.042 0.261,0.123 0.726,0.065 0.195,0.17 0.344,0.505 0.195,0.269 0.338,0.135 0.204,0.093 0.181,0.072 0.18,0.13 0.043,0.157 0.073,0.24 0.11,0.138 0.205,0.136 0.156,0.082 0.049,0.173 0.049,0.085 0.143,0.121 0.421,0.516 0.205,0.138 0.312,0.298 0.13,0.247 0.007,0.259 0.081,0.197 0.208,0.296 0.098,0.2 -0.039,0.271 0.034,0.24 -0.081,0.247 -0.335,0.183 -0.116,0.087 -0.242,0.008 -0.41,-0.092 -0.399,0.052 -0.477,-0.102 -0.374,-0.217 -0.2,-0.175 -0.319,-0.103 -0.15,0.054 -0.189,0.225 -0.208,-0.04 -0.192,0.04 -0.494,-0.046 -0.269,-0.057 -0.425,0.157 -0.241,0.049 -0.452,0.192 -0.271,0.333 -0.203,0.079 -0.198,-0.016 -0.141,-0.122 -0.206,-0.147 -0.306,0.008 -0.091,0.063 -0.038,0.135 -0.1,0.41 0.002,0.184 -0.067,0.119 -0.181,0.039 -0.317,-0.011 -0.497,-0.027 -0.336,-0.106 -0.202,0.045 -0.275,0.222 -0.196,0.036 -0.159,0.094 -0.129,0.327 -0.202,0.203 -0.244,0.252 -0.262,0.537 -0.144,0.307 0.046,0.165 0.032,0.2 -0.121,0.227 -0.246,0.211 -0.198,0.039 -0.296,0.203 -0.407,0.365 -0.304,0.306 -0.396,0.074 -0.281,0.078 -0.623,0.095 -0.154,0.024 -0.683,0.047 -0.506,-0.164 -0.266,0.025 -0.236,0.093 -0.12,0.101 -0.042,0.192 -0.042,0.177 -0.192,0.275 -0.387,0.364 -0.319,0.241 -0.245,0.312 -0.139,0.113 -0.28,0.119 -0.151,0.064 -0.351,0.277 -0.279,0.247 -0.184,0.069 -0.222,-0.065 -0.147,-0.021 -0.434,-0.095 -0.294,-0.012 -0.411,-0.061 -0.962,-0.289 -0.309,-0.135 -0.273,-0.368 -0.247,-0.187 -0.335,-0.02 -0.503,0 -0.225,-0.073 -0.378,0.069 -0.413,0.374 -0.195,0.278 -0.169,0.285 -0.207,0.607 -0.092,0.405 -0.07,0.228 -0.221,0.363 -0.024,0.203 0.076,0.176 0.159,0.198 0.095,0.311 0.232,0.33 0.228,0.257 0.429,0.414 0.122,0.217 0.145,0.248 0.031,0.242 -0.027,0.158 -0.154,0.121 -0.301,0.061 -0.145,0.167 -0.221,0.224 -0.262,0.258 -0.123,0.014 -0.148,0.069 -0.741,0.319 -0.282,0.089 -0.222,0.106 -0.263,0.324 -0.207,0.241 -0.256,0.32 -0.113,0.141 -0.227,0.319 -0.299,0.364 -0.166,0.195 -0.09,0.116 -0.082,0.153 -0.313,0.117 -0.258,0.125 -0.39,0.188 -0.559,0.206 -0.452,0.2 -0.287,0.164 -0.427,0.207 -0.29,0.066 -0.584,-0.008 -0.722,0.053 -0.526,0.04 -0.395,-0.05 -0.597,-0.029 -0.457,-0.04 -0.305,0.077 -0.719,0.081 -0.161,0.018 -1.281,0.196 -0.566,0.104 -0.518,0.048 -0.381,0.076 -0.216,0.096 -0.32,0.136 -0.169,0.06 -0.567,0.268 -1.262,0.552 -0.844,0.447 -0.139,0.076 -0.569,0.315 -0.329,0.123 -0.229,0.28 -0.183,0.177 -0.192,0.076 -0.342,-0.18 -0.242,0.01 -0.773,-0.066 0,-0.818 -0.542,0.115 -0.865,0.185 -0.802,0.171 -0.734,-0.392 -0.566,-0.303 -0.492,-0.261 -0.746,-0.173 -0.651,-0.151 -1.174,-0.249 -0.516,-0.218 -0.261,-0.289 -0.466,-0.656 -0.151,-0.13 -0.227,-0.09 -0.235,-0.057 -0.51,0.003 -0.622,-0.051 -0.896,-0.138 -0.712,-0.111 -1.214,-0.205 -0.288,-0.025 -0.635,0.182 -0.814,0.233 -1.461,-0.183 -0.648,-0.085 -1.313,-0.174 -1.486,-0.197 -1.44,-0.204 -1.046,0.112 -0.583,0.063 -0.673,0.09 -0.093,-0.101 -0.027,-0.391 -0.121,-0.303 -0.368,-0.328 -0.247,-0.312 -0.471,-0.423 -0.148,-0.267 -0.05,-0.414 -0.434,-1.081 -0.27,-0.735 -0.068,-0.149 -0.116,-0.24 -0.152,-0.125 -0.323,-0.077 -0.087,-0.13 0,-0.255 0.051,-0.353 0.066,-0.258 -0.047,-0.065 -0.843,0.073 -0.517,-0.171 -0.431,-0.186 -0.612,-0.476 -0.363,-0.184 -0.465,-0.494 -0.676,-0.117 -0.252,-0.194 -0.318,-0.424 -0.277,-0.273 -0.394,-0.172 -0.622,-0.153 -1.062,-0.146 -0.36,-0.062 -0.586,0.098 -0.435,0.008 -0.705,-0.104 -0.402,-0.131 -0.496,-0.004 -0.323,0.002 -0.431,-0.03 -0.208,-0.086 -0.193,-0.105 -0.362,0.026 -0.253,-0.105 -0.236,-0.196 -0.247,-0.093 -0.27,0.006 -0.111,0.087 -0.104,-0.008 -0.067,-0.265 -0.253,-0.429 -0.038,-0.193 -0.155,-0.222 -0.091,-0.202 0.025,-0.279 0.109,-0.543 0.243,-0.492 0.158,-0.128 0.097,-0.146 0.204,-0.255 0.118,-0.204 -0.014,-0.28 -0.139,-0.292 -0.1,-0.377 0.018,-0.217 0.15,-0.258 0.176,-0.573 -0.015,-0.151 -0.069,-0.12 -0.018,-0.267 -0.034,-0.358 -0.211,-0.549 -0.114,-0.292 -0.2,-0.126 -0.234,-0.076 -0.202,-0.396 -0.254,-0.468 -0.159,-0.294 -0.055,-0.18 -0.025,-0.327 -0.119,-0.397 -0.125,-0.218 -0.093,-0.168 -0.048,-0.241 -0.048,-0.088 -0.344,-0.107 -0.246,-0.18 -0.102,-0.242 -0.036,-0.196 -0.074,-0.114 -0.194,-0.036 -0.135,0.176 -0.221,0.088 -0.15,-0.016 -0.147,-0.106 -0.091,-0.111 -0.154,-0.125 -0.218,-0.397 -0.229,-0.105 -0.42,0.018 -0.374,0.184 -0.226,-0.029 -0.192,-0.062 -0.214,-0.198 -0.15,-0.164 -0.223,-0.053 -0.439,-0.289 -0.297,-0.208 -0.025,-0.409 -0.14,-0.282 -0.29,-0.08 -0.292,-0.29 -0.426,-0.156 -0.268,-0.121 -0.233,-0.073 -0.034,-0.11 0.014,-0.094 0.107,-0.157 0.112,-0.147 0.027,-0.136 -0.09,-0.12 -0.241,-0.126 -0.31,-0.113 -0.063,-0.187 -0.185,-0.195 0.032,-0.157 0.147,-0.115 0.148,-0.085 0.035,-0.148 -0.106,-0.136 -0.051,-0.206 0.025,-0.154 -0.031,-0.197 0.011,0.001 0.327,-0.011 0.15,-0.095 0.113,-0.141 0.245,-0.157 0.052,-0.18 0.004,-0.357 0.16,-0.302 0.407,-0.09 0.156,-0.044 0.166,0.044 0.258,-0.043 0.249,-0.015 0.139,0.093 0.184,0.078 0.235,-0.009 0.08,-0.142 0.01,-0.199 0.101,-0.052 0.127,0.138 0.072,0.103 0.105,0.047 0.284,-0.123 0.198,-0.133 0.065,-0.274 0.115,-0.135 0.154,0.069 0.271,-0.002 0.223,-0.212 0.293,-0.169 0.21,-0.077 0.042,-0.143 -0.098,-0.316 0.027,-0.346 0.281,-0.196 0.376,-0.023 0.279,-0.135 0.077,-0.37 0.138,-0.106 0.139,-0.042 0.339,-0.058 0.244,-0.151 0.151,-0.069 0.426,-0.203 0.388,-0.039 0.166,-0.162 0.13,-0.204 0.218,-0.078 0.221,-0.177 0.293,-0.225 0.116,-0.032 0.48,-0.131 0.188,-0.048 0.113,-0.029 0.208,0.009 0.088,-0.239 0.211,-0.175 0.212,-0.059 0.103,-0.175 0.203,-0.223 0.275,-0.123 0.427,-0.019 0.414,0.025 0.249,-0.038 0.204,-0.33 0.039,-0.163 0.047,-0.167 0.166,-0.064 0.2,0.271 0.169,0.168 0.259,0.175 0.134,0.164 0.154,0.023 0.161,-0.123 0.114,-0.299 0.216,-0.046 0.238,0.048 0.063,0.147 0.02,0.144 0.109,0.256 0.262,0.223 0.335,-0.011 0.135,-0.04 0.326,0.031 0.321,0.048 0.35,0.053 0.102,0.008 0.375,0.027 0.545,0.039 0.241,-0.018 0.492,0.073 0.1,0.198 0.091,0.468 0.077,0.445 0.023,0.357 0.128,0.185 0.163,0.06 0.108,0.144 0.19,0.196 0.14,0.28 0.171,-0.019 0.119,-0.066 0.262,-0.021 0.334,0.019 0.233,0.154 0.087,0.204 0.189,0.113 0.153,-0.036 0.458,-10e-4 0.158,0.012 0.158,0.112 0.227,0.019 0.125,-0.142 0.395,-0.097 0.228,-0.202 0.176,-0.002 0.133,0.098 0.102,0.132 0.151,-0.059 0.082,-0.109 0.132,0 0.129,0.071 0.331,0.123 0.24,0.23 0.185,0.023 0.24,-0.068 0.11,-0.031 0.105,0.114 0.155,0.061 0.117,-0.084 0.201,-0.06 0.769,0.125 0.177,0.23 0.137,0.108 0.11,0.187 0.201,0.134 0.424,-0.046 0.165,-0.137 0.343,-0.304 0.137,-0.297 0.173,-0.095 0.195,-0.049 0.183,0.001 0.191,-0.01 0.233,-0.218 0.188,-0.076 0.279,-0.277 0.052,-0.125 0.136,-0.324 0.084,-0.205 0.141,-0.328 0.076,-0.529 0.043,-0.281 -0.037,-0.203 -0.166,-0.106 -0.211,-0.05 -0.186,-0.155 -0.138,-0.181 -0.081,-0.253 -0.109,-0.297 0.006,-0.215 -0.031,-0.166 -0.093,-0.142 -0.179,-0.249 -0.087,-0.186 0.029,-0.296 0.211,-0.506 0.02,-0.236 0.026,-0.146 -0.011,-0.133 0.066,-0.305 0.119,-0.128 0.136,-0.327 0.183,-0.151 0.23,-0.01 0.099,-0.089 0.048,-0.328 0.111,-0.253 0.074,-0.179 0.14,-0.196 0.807,-0.378 0.335,-0.471 0.119,-0.238 0.13,-0.512 0.125,-0.215 0.182,0.071 0.214,0.302 0.16,0.003 0.238,0.163 0.649,0.343 0.351,0.107 0.226,0.033 0.299,0.095 0.192,0.2 0.375,0.326 0.317,0.083 0.55,0.033 0.669,0.017 0.19,0.057 0.489,0.234 0.542,0.259 0.51,0.231 0.386,0.178 0.229,0.174 0.215,0.099 0.233,-0.085 0.299,0.019 0.702,0.208 0.444,0.174 0.371,0.129 0.124,0.178 0.012,0.237 -0.05,0.2 0.028,0.484 0.119,0.254 0.044,0.339 0.045,0.324 -0.032,0.319 0.057,0.169 0.116,0.1 0.113,0.222 -0.037,0.234 -0.05,0.136 0.008,0.219 0.134,0.18 0.199,0.035 0.174,0.047 0.216,0.283 0.385,0.326 0.23,0.09 0.265,0.146 0.505,0.144 0.343,0.042 0.202,0.117 0.198,0.279 0.328,0.058 0.21,0.097 0.384,0.115 0.254,-0.066 0.223,-0.098 0.149,0.019 0.288,0.063 0.337,0.014 0.283,-0.067 0.226,-0.197 0.263,-0.266 0.316,-0.135 0.365,-0.048 0.25,-0.108 0.818,-0.18 0.33,-0.032 0.256,-0.173 0.227,-0.136 0.328,-0.059 0.443,0.143 0.424,0.119 0.513,0.039 0.341,0.164 0.241,0.155 0.38,0.123 0.422,-0.057 0.579,-0.049 0.383,0.071 0.4,0.282 0.246,0.225 0.277,0.482 0.29,0.232 0.252,0.19 0.32,0.013 0.797,0.015 0.437,0.1 0.364,0.054 0.087,0.1 -0.036,0.329 0.011,0.469 -0.005,0.215 0.08,0.162 0.124,0.029 0.068,0.229 0.18,0.135 0.323,0.163 0.544,0.553 0.325,0.236 0.255,0.08 0.335,-0.055 0.525,0.002 0.889,10e-4 0.609,0.166 0.211,0.113 0.622,0.132 0.684,0.144 0.578,0.151 0.34,-0.195 0.299,-0.018 0.285,0.141 0.286,0.212 0.22,-0.023 0.331,-0.099 1.057,-0.592 0.371,-0.222 0.26,0.057 0.232,-0.078 0.177,-0.067 0.451,-0.092 0.275,-0.025 0.283,-0.053 0.408,-0.036 0.829,-0.389 0.336,-0.076 0.568,0.108 0.306,-0.071 0.305,-0.196 0.394,-0.203 0.103,-0.33 0.202,-0.454 0.436,-0.334 0.354,-0.293 0.361,-0.284 0.444,-0.238 0.418,-0.172 0.532,-0.453 0.424,-0.23 0.211,-0.075 0.251,0.083 0.469,0.061 0.34,-0.018 0.192,0.052 0.382,0.222 0.348,0.194 0.266,0.346 0.495,0.481 0.254,0.161 0.18,0.067 0.446,0.045 0.364,0.024 0.218,-0.11 0.367,-0.201 0.585,-0.256 0.23,0.007 0.377,0.136 0.562,0.251 0.225,0.188 z\"\n\t\t\t\tid=\"MN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 883.82475,409.6444 -0.086,0.11 -0.071,-0.081 -0.02,-0.16 0.125,0.015 0.046,0.033 0.006,0.083 z m 0.193,2.01 -0.136,0.064 0.169,-0.289 0.051,-0.05 0.079,0.105 -0.163,0.17 z m -0.183,5.08 -0.062,0.02 -0.089,-0.01 -0.063,-0.046 -0.014,-0.077 0.181,-0.004 0.067,0.058 -0.02,0.059 z m 0.112,3.495 -0.008,0.075 -0.144,-0.018 -0.039,-0.034 0.081,-0.261 0.206,-0.12 0.1,-0.024 -0.094,0.124 -0.018,0.139 -0.084,0.119 z m -0.252,0.47 -0.116,0.147 -0.082,-0.229 -0.014,-0.092 0.106,-0.084 0.063,0.001 0.043,0.257 z m -1.115,2.341 -0.14,0.134 -0.1,-0.027 -0.063,-0.046 -0.015,-0.077 0.226,-0.074 0.092,0.026 0,0.064 z\"\n\t\t\t\tid=\"MP\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 304.18675,422.0714 -0.029,0.165 -0.071,0.032 -0.105,-0.137 -0.461,0.019 -0.071,-0.122 -0.004,-0.058 0.222,-0.208 -0.261,-0.056 -0.103,-0.09 -0.221,-0.438 0.018,-0.128 0.092,-0.067 0.149,-0.009 0.282,0.141 0.209,0.202 0.071,0.003 0.024,0.057 -0.042,0.142 0.125,0.12 0.054,0.089 z\"\n\t\t\t\tid=\"MQ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 461.36075,390.8904 -0.983,0 -1.313,10e-4 -0.895,0 -0.919,0 -0.861,0 0.075,0.701 0.08,0.764 0.08,0.762 0.08,0.761 0.08,0.759 0.08,0.758 0.08,0.756 0.08,0.754 0.08,0.753 0.08,0.751 0.08,0.75 0.08,0.75 0.08,0.748 0.08,0.747 0.08,0.746 0.08,0.744 0.08,0.743 0.08,0.742 0.08,0.74 0.08,0.739 0.08,0.738 0.08,0.737 0.08,0.735 0.08,0.734 0.08,0.733 0.08,0.732 0.08,0.731 0.08,0.73 0.08,0.729 0.08,0.728 0.08,0.727 0.08,0.726 0.08,0.725 0.078,0.702 0.334,0.368 0.42,0.462 -0.123,0.654 -0.146,0.779 -0.16,0.849 -0.593,0 -0.573,0 -0.572,0 -0.572,0 -0.572,0 -0.573,0 -0.572,0 -0.572,0 -0.572,0 -0.572,0 -0.573,0 -0.572,0 -0.572,0 -0.572,0 -0.573,0 -0.572,0 -0.572,0 -0.533,0 -0.328,-0.02 -0.117,-0.066 -0.042,-0.439 -0.098,0.028 -0.116,0.129 -0.06,0.14 0.021,0.183 -0.019,0.155 -0.368,0.061 -0.497,0.104 -0.523,0.08 -0.528,-0.029 -0.18,-0.036 -0.191,-0.058 -0.42,-0.063 -0.229,-0.005 -0.262,0.014 -0.309,0.035 -0.099,0.081 -0.233,0.327 -0.226,0.379 -0.147,-0.002 -0.166,-0.208 -0.455,-0.392 -0.551,-0.516 -0.251,-0.256 -0.133,-0.033 -0.264,0.184 -0.222,0.177 -0.236,0.25 -0.107,0.24 -0.085,0.283 -0.038,0.333 -0.086,0.388 -0.191,0.313 -0.226,0.236 -0.168,0.111 -0.065,0.061 -0.494,-0.184 -0.062,-0.023 -0.298,-0.208 -0.144,-0.247 -0.235,-0.186 -0.326,-0.125 -0.212,-0.142 -0.099,-0.16 -0.12,-0.106 -0.127,-0.055 -0.012,-0.057 0.03,-0.079 -0.03,-0.146 -0.191,-0.326 -0.178,-0.15 -0.152,0.024 -0.086,-0.04 -0.052,-0.072 -0.021,-0.105 -0.104,-0.091 -0.18,-0.04 -0.145,-0.242 -0.109,-0.445 -0.142,-0.347 -0.174,-0.249 -0.125,-0.093 -0.092,-0.017 -0.031,-0.039 -0.025,-0.072 -0.136,-0.026 -0.191,0.075 -0.172,-0.025 -0.084,-0.122 -0.117,-0.011 -0.149,0.1 -0.165,-0.029 -0.18,-0.159 -0.1,-0.158 -0.019,-0.157 -0.311,-0.313 -0.602,-0.47 -0.656,-0.22 -0.71,0.029 -0.398,-0.022 -0.087,-0.074 -0.087,0.006 -0.088,0.086 -0.093,0.019 -0.099,-0.048 -0.062,0.036 -0.024,0.12 -0.25,0.062 -0.475,10e-4 -0.384,0.074 -0.292,0.146 -0.414,0.063 -0.536,-0.02 -0.323,-0.054 -0.11,-0.086 -0.154,-0.021 -0.198,0.046 -0.178,0.233 -0.157,0.419 -0.129,0.239 -0.103,0.059 -0.11,0.312 -0.062,0.522 -0.093,0.229 -0.001,-1.302 0.153,-0.487 0.05,-0.428 0.328,-0.947 0.391,-0.776 0.361,-1.032 0.136,-1.002 -0.046,-0.983 -0.107,-0.876 -0.183,-0.58 -0.177,-0.841 -0.261,-0.444 -0.478,-0.388 -0.107,-0.227 0.111,-0.085 0.291,-0.058 0.185,-0.303 -0.392,0.117 0.453,-0.93 0.141,-0.634 -0.022,-0.417 0.086,-0.258 -0.346,-0.559 -0.269,-0.705 -0.139,-0.111 -0.144,-0.059 -0.013,0.166 -0.078,0.148 -0.168,-0.089 -0.297,-0.513 -0.415,-0.836 -0.146,-0.086 -0.121,0.115 -0.076,0.11 -0.14,0.698 -0.045,-0.277 0.061,-0.326 0.103,-0.402 0.116,-0.559 0.36,0 0.644,-10e-4 0.644,-0.001 0.644,0 0.644,-10e-4 0.644,-0.001 0.643,-10e-4 0.644,0 0.644,-10e-4 0.644,-0.001 0.644,0 0.644,-10e-4 0.644,-0.001 0.643,0 0.644,-10e-4 0.644,-10e-4 0.643,0 0.425,0 -0.025,-0.398 -0.02,-0.316 -0.027,-0.425 -0.027,-0.423 -0.026,-0.424 -0.025,-0.399 -0.025,-0.399 -0.023,-0.37 -0.021,-0.34 -0.037,-0.196 -0.137,-0.389 -0.029,-0.193 0.037,-0.204 0.091,-0.192 0.251,-0.352 0.38,-0.271 0.438,-0.313 0.334,-0.239 0.171,-0.059 0.523,-0.083 0.412,-0.181 0.401,-0.176 0.168,-0.098 0.02,-0.331 0,-0.37 0,-0.415 0,-0.416 0,-0.416 0,-0.417 0,-0.417 0,-0.417 0,-0.418 0,-0.418 0,-0.418 0,-0.419 0,-0.42 0,-0.42 0,-0.421 0,-0.421 0,-0.422 0,-0.422 0,-0.37 0.42,0 0.523,0 0.522,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.523,0 0.522,0 0.523,0 0.523,0 0.571,0 0,-0.354 0,-0.509 -10e-4,-0.7 0,-0.704 -0.001,-0.62 0,-0.621 -10e-4,-0.523 0.528,0.347 0.528,0.347 0.528,0.347 0.528,0.346 0.528,0.346 0.528,0.345 0.527,0.345 0.528,0.345 0.528,0.345 0.528,0.344 0.528,0.344 0.528,0.343 0.528,0.343 0.528,0.343 0.528,0.343 0.527,0.342 0.442,0.286 0.679,0.461 0.633,0.429 0.625,0.429 z m -32.417,15.965 -0.18,0.288 -0.08,-0.11 -0.031,-0.189 0.16,-0.271 0.076,-0.14 0.139,-0.051 -0.084,0.473 z\"\n\t\t\t\tid=\"MR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 300.47675,415.5674 -0.016,0.172 -0.19,-0.053 -0.004,-0.152 0.089,-0.154 0.044,-0.015 z\"\n\t\t\t\tid=\"MS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 515.06575,355.0364 -0.168,0.053 -0.167,-0.104 -0.039,-0.063 0.232,-0.053 0.114,0.047 0.048,0.09 -0.02,0.03 z m 0.709,0.604 -0.094,0.112 -0.27,-0.005 -0.236,-0.175 -0.002,-0.366 0.272,0.072 0.249,0.245 0.081,0.117 z\"\n\t\t\t\tid=\"MT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 636.69275,521.3014 -0.354,0.084 -0.398,-0.029 -0.154,-0.159 -0.03,-0.067 0.133,-0.063 -0.008,-0.205 0.066,-0.324 0.085,-0.133 0.197,-0.119 0.081,-0.261 0.17,-0.174 0.227,-0.022 0.226,0.322 0.154,0.339 -0.032,0.341 -0.156,0.124 -0.052,0.197 z\"\n\t\t\t\tid=\"MU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 681.20675,451.3024 -0.049,0.026 -0.046,-0.01 -0.016,-0.033 0.023,-0.048 0.038,-0.063 0.026,-0.068 0.038,-0.036 0.029,0.012 -0.003,0.038 -0.014,0.052 -0.009,0.068 -0.017,0.062 z m -0.269,2.607 -0.06,0.005 -0.037,-0.048 0.008,-0.069 0.047,-0.049 0.073,-0.003 0.042,0.043 -0.021,0.067 -0.052,0.054 z\"\n\t\t\t\tid=\"MV\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 573.00875,495.4224 -0.373,-0.007 -0.469,0.037 -0.115,0.09 -0.035,0.199 -0.147,0.41 -0.082,0.151 -0.173,0.276 -0.244,0.389 -0.051,0.127 0.008,0.131 0.144,0.529 0.151,0.556 0.048,0.218 0.107,0.74 0.06,0.524 0.009,0.308 0.051,0.412 0.134,0.223 0.141,0.14 0.53,0.084 0.158,0.103 0.3,0.263 0.656,0.728 0.36,0.465 0.317,0.409 0.566,0.761 0.44,0.592 0.055,0.556 0.073,0.081 -0.148,0.413 -0.097,0.667 0.07,0.443 -0.029,0.757 -0.081,0.807 -0.101,0.289 -0.13,0.109 -0.308,0.087 -0.676,0.101 -0.101,0.095 -0.087,0.157 -0.137,0.373 -0.161,0.376 -0.051,0.161 0.031,0.038 0.145,0.192 0.144,0.491 0.026,0.843 -0.05,0.063 -0.2,0.037 -0.215,-0.011 -0.089,-0.048 -0.08,-0.094 -0.058,-0.18 0.141,-0.125 0.05,-0.22 -0.09,-0.188 -0.181,-0.042 -0.23,-0.173 -0.49,-0.563 -0.41,-0.395 -0.238,-0.327 -0.243,-0.13 -0.07,-0.08 -0.059,-0.138 -10e-4,-0.199 0.022,-0.146 -0.076,-0.165 -0.246,-0.254 -0.112,-0.141 -0.006,-0.168 0.104,-0.162 0.21,-0.198 0.159,-0.401 0.057,-0.259 0.297,-0.521 0.041,-0.452 0.006,-0.361 -0.018,-0.27 -0.076,-0.553 -0.053,-0.382 -0.366,-0.5 -0.119,-0.047 -0.347,0.044 -0.3,0.073 -0.147,0.104 -0.223,0.005 -0.585,0.087 -0.184,0.037 -0.106,0.09 -0.062,0.019 -0.368,-0.386 -0.323,-0.417 -0.411,-0.708 -0.117,-0.085 -0.15,-0.208 -0.125,0.052 -0.172,0.146 -0.093,0.04 -0.048,-0.004 -0.031,-0.037 -0.038,-0.093 -0.133,-0.267 -0.149,-0.191 -0.158,-0.074 -0.129,-0.088 0.057,-0.085 0.06,-0.061 -0.026,-0.063 -0.072,-0.092 -0.28,-0.133 -0.004,-0.057 0.247,-0.115 0.156,-0.137 0.106,-0.131 0.134,-0.287 0.109,-0.286 0.082,-0.093 0.028,-0.189 -0.019,-0.213 0.055,-0.272 0.026,-0.257 -0.083,-0.1 -0.07,-0.173 0.083,-0.294 0.13,-0.203 0.623,-0.211 0.434,-0.191 0.092,-0.083 0.147,-0.163 0.082,-0.159 -0.059,-0.047 -0.341,-0.004 -0.084,-0.061 -0.246,-0.559 0.136,-0.64 0.012,-0.251 -0.003,-0.312 -0.043,-0.227 -0.108,-0.095 -0.066,-0.122 0.018,-0.333 0.1,-0.04 0.216,-0.44 0.096,-0.259 -0.115,-0.207 -0.127,-0.295 -0.058,-0.188 -0.032,-0.062 0.088,-0.116 0.146,-0.112 0.164,-0.031 0.173,-0.053 0.545,-0.546 0.007,-0.106 -0.099,-0.183 -0.204,-0.276 -0.045,-0.112 -0.024,-0.332 -0.081,-0.099 -0.299,-0.223 -0.23,-0.235 0.072,-0.238 0.039,-0.26 -0.114,-0.143 -0.169,-0.148 -0.105,-0.216 -0.048,-0.161 -0.133,-0.064 -0.123,-0.002 -0.09,0.1 -0.097,-0.009 -0.118,-0.035 -0.039,-0.139 -0.007,-0.15 -0.081,-0.102 -0.078,-0.142 -0.01,-0.075 0.049,-0.022 0.103,-0.013 0.439,0.285 0.266,0.013 0.296,0.053 0.253,0.251 0.131,0.033 0.167,-0.035 0.478,-0.026 0.192,0.036 0.247,0.147 0.097,0.02 0.155,0.006 0.027,-0.04 0.016,-0.087 -0.027,-0.176 0.035,-0.095 0.094,-0.103 0.261,0.12 0.652,0.548 0.02,0.071 0.416,0.544 0.135,0.23 0,0.122 0.128,0.476 0.028,0.223 -0.029,0.17 0.005,0.136 0.05,0.194 -0.017,0.082 0.148,0.285 0.071,0.24 0.015,0.234 -0.042,0.229 -0.131,0.333 -0.022,0.134 0.029,0.122 0.085,0.133 0.141,0.143 0.106,0.172 0.072,0.203 0.061,0.092 0.076,-0.002 0.14,0.031 0.112,0.119 0.13,0.199 0.043,0.229 0.026,0.099 z m -0.892,1.242 -0.056,0.151 -0.116,-0.002 -0.109,-0.134 0.035,-0.104 0.105,-0.032 0.092,0.039 0.049,0.082 z m 0.218,0.276 -0.099,0.023 -0.062,-0.051 0.015,-0.152 0.035,-0.11 0.098,-0.017 0.068,0.029 0.047,0.05 0.001,0.081 -0.029,0.083 -0.074,0.064 z\"\n\t\t\t\tid=\"MW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 202.25575,387.9034 -0.051,0.641 -0.17,0.524 -0.559,1.089 -0.233,0.674 -0.451,1.918 -0.139,1.252 -0.033,0.588 -0.039,0.083 0.042,0.086 -0.108,1.297 0.058,1.104 -0.037,0.171 -0.164,0.332 -0.115,0.459 0.045,0.204 -0.002,0.141 0.168,0.697 0.054,0.523 0.501,0.894 0.281,0.312 0.349,0.27 0.128,0.152 -0.063,0.379 -0.142,0.191 -0.061,0.304 -0.07,-0.251 0.027,-0.326 0.111,-0.175 0.004,-0.128 -0.205,-0.137 -0.375,-0.449 -0.458,-0.796 0.326,1.271 0.112,0.203 0.087,0.084 0.146,0.089 0.038,0.138 0.001,0.102 0.402,0.88 0.455,0.908 0.024,0.248 0.182,0.305 1.159,1.27 0.709,0.946 0.246,0.896 0.148,0.279 0.073,0.382 0.464,0.428 0.142,0.276 0.249,0.153 0.201,0.462 0.378,0.27 -0.09,0.005 -0.331,-0.136 0.022,0.09 0.278,0.191 0.545,0.188 0.136,0 -0.215,-0.098 -0.182,-0.132 0.064,-0.019 0.381,0.164 1.065,0.054 0.469,0.383 0.608,0.165 0.327,0.489 0.38,0.51 0.243,0.024 0.189,0.002 0.57,-0.086 0.886,-0.321 0.305,-0.157 0.595,-0.213 0.911,-0.039 0.282,0.06 0.681,-0.133 0.325,-0.163 0.113,-0.148 0.053,-0.109 0.631,-0.156 0.125,-0.031 0.639,-0.028 0.309,-0.058 0.363,-0.034 0.262,0.23 0,0.112 -0.175,0.106 0.082,0.103 0.311,0.17 0.57,0.069 0.185,-0.027 0.263,-0.251 0.463,-0.243 -0.01,-0.283 -0.083,-0.155 -0.134,-0.01 -0.032,-0.087 0.094,-0.208 -0.024,-0.07 -0.288,0.2 -0.066,0 0.032,-0.093 0.06,-0.074 0.844,-0.436 0.216,-0.179 0.292,-0.158 0.605,-0.593 0.129,-1.118 0.121,-0.196 0.401,-0.344 0.043,-0.104 0.026,-0.234 -0.011,-0.589 0.022,-0.464 -0.017,-0.525 0.072,-0.469 0.065,-0.131 0.23,-0.752 0.478,-0.333 0.829,-0.395 0.19,-0.065 2.641,-0.418 0.371,-0.102 0.454,-0.271 0.332,-0.092 0.605,0.007 0.186,-0.036 0.037,-0.037 0.001,-0.037 0.112,-0.037 0.35,0.036 0.654,0.164 0.238,0.041 0.585,0.19 0.644,0.076 0.092,-0.033 0.085,-0.058 0.065,-0.111 -0.067,-0.097 -0.063,0.007 -0.109,0.052 -0.13,0.005 -0.255,-0.08 0.051,-0.067 0.26,0.006 0.167,-0.032 0.247,-0.117 0.263,0.088 0.346,0.388 0.246,0.123 0.02,0.562 0.037,0.103 0.09,0.148 -0.123,0.435 -0.138,0.359 -0.173,0.294 -0.374,0.463 -0.454,0.37 -0.562,0.821 -0.128,0.384 0.003,0.308 0.095,0.297 -0.027,0.11 -0.069,0.111 -0.114,-0.01 -0.222,0.142 -0.286,0.422 -0.006,0.128 0.125,0.118 0.163,-0.057 0.212,-0.005 0.119,-0.035 0.125,0.009 -0.028,0.242 -0.134,0.172 -0.085,0.054 -0.152,0.029 -0.17,0.098 -0.087,0.09 0.008,0.279 0.094,0.022 0.2,-0.208 0.116,0.01 0.023,0.088 -0.259,0.713 -0.167,0.731 -0.226,0.423 -0.08,0.615 -0.119,0.262 -0.138,0.259 -0.081,-0.014 -0.218,-0.491 -0.223,-0.126 -0.049,-0.119 0.127,-0.596 -0.058,-0.33 -0.118,0.013 -0.148,0.181 -0.197,0.157 0.004,0.227 -0.226,0.377 -0.056,0.124 -0.215,-0.029 -0.25,0.016 -0.173,0.091 -0.177,0.457 -0.442,0.643 -0.176,0.311 -0.144,0.107 -0.113,0.042 -0.126,-0.073 -0.302,-0.176 -0.233,0.084 -0.081,0.202 0.003,0.255 -0.59,0 -1.002,-10e-4 -1.276,-0.001 -1.23,-10e-4 -1.03,-0.001 -0.004,0.573 -0.003,0.507 -0.003,0.57 -0.568,-0.005 -0.601,-0.005 0.048,0.057 0.206,0.107 0.267,0.255 0.315,0.397 0.382,0.316 0.449,0.235 0.295,0.23 0.143,0.225 0.072,0.191 0,0.158 0.164,0.125 0.293,0.083 0.152,0.141 0,0.115 -0.093,0.261 -0.027,0.288 0.036,0.26 -0.21,0.004 -0.509,0 -0.775,10e-4 -0.713,0 -0.562,0 -0.849,0.001 -0.233,0.4 -0.387,0.664 -0.351,0.601 -0.294,0.505 -0.048,0.133 0,0.108 0.364,0.472 -0.067,0.137 -0.127,0.072 -0.041,0.111 0.008,0.18 -0.086,0.239 0.028,0.165 0.046,0.203 -0.076,0.176 -0.062,0.17 -0.073,0.074 -0.083,-0.064 -0.748,-0.784 -0.78,-0.863 -0.307,-0.282 -0.297,-0.214 -0.4,-0.398 -1.05,-0.875 -0.542,-0.4 -0.51,-0.479 -0.458,-0.266 -0.451,-0.173 -0.201,-0.1 -0.176,-0.131 -0.098,-0.008 -0.049,0.178 0.158,0.089 0.189,0.076 0.149,0.005 0.157,0.063 0.463,0.243 0.076,0.125 -1.317,-0.486 -0.536,-0.045 -0.058,-0.076 0.267,-0.254 -0.083,-0.092 -0.095,-0.013 -0.287,0.176 -0.106,0.012 -0.019,-0.116 0.013,-0.109 -0.185,-0.16 -0.117,0.006 -0.096,0.112 -0.25,0.211 0.008,0.083 0.49,0.09 0.169,0.051 -0.039,0.056 -0.42,-0.001 -0.52,0.096 -0.926,0.587 -0.862,0.252 -1.24,0.564 -0.547,0.029 -0.287,0.09 -0.834,-0.216 -1.057,-0.53 -1.6,-0.167 -1.078,-0.695 -1.07,-0.286 -0.679,-0.668 -0.409,-0.029 -0.263,-0.107 -0.972,-0.242 -0.961,-0.16 -0.937,-0.585 -0.613,-0.186 -0.53,-0.233 -1.167,-0.398 -0.433,-0.221 -0.409,-0.342 -0.667,-0.354 -0.285,-0.296 -0.318,-0.106 -0.455,-0.558 -0.237,-0.235 -0.201,-0.11 -0.215,-0.038 -0.621,0.045 -0.927,-0.247 -0.428,-0.063 -0.895,-0.364 -1.188,-0.407 -0.389,-0.468 -0.333,-0.437 -0.6,-0.576 -0.374,-0.246 -0.649,-0.292 -0.36,-0.237 -0.555,-0.182 -0.942,-0.462 -0.299,-0.396 -0.175,-0.352 -0.501,-0.428 -0.549,-0.799 -0.142,-0.295 -0.106,-0.453 -0.127,-0.263 -0.15,-0.206 0.077,-0.15 0.279,-0.185 0.464,-0.042 0.328,-0.2 0.043,-0.165 -0.021,-0.102 -0.21,-0.252 -0.261,-0.067 -0.203,-0.004 -0.052,-0.096 0.153,-0.105 0.175,-0.246 0.258,-0.3 0.182,-0.277 0.034,-0.391 -0.023,-0.391 0.069,-0.331 -0.625,-0.382 -0.073,-0.163 -0.197,-0.439 -0.341,-0.51 0.01,-1.021 -0.411,-0.908 -0.425,-0.452 -0.22,-0.158 -0.597,-0.703 -0.471,-0.409 -0.461,-0.771 -0.456,-0.491 -0.58,-0.825 -0.419,-0.412 -1.909,-1.395 0.107,0 0.56,0.343 0.094,-0.028 0.013,-0.167 -0.064,-0.2 -0.104,-0.048 -0.149,0.045 -0.201,-0.042 -0.101,-0.066 -0.301,-0.042 -0.377,-0.233 -0.162,-0.242 -0.018,-0.276 -0.541,-0.589 -0.205,-0.329 0.105,0.024 0.144,0.132 0.146,0.038 0.17,0.001 0.123,-0.053 -0.044,-0.098 -0.116,-0.082 -0.788,-0.311 -0.26,-0.218 -0.646,-0.364 -0.153,-0.128 -0.102,-0.352 -0.158,-0.017 -0.139,0.098 -0.381,0.096 -0.097,-0.112 -0.014,-0.108 0.269,-0.114 0.247,-0.333 -0.005,-0.116 -0.136,0.134 -0.206,0.149 -0.212,0.083 -0.315,0.069 -0.162,-0.05 -0.141,-0.075 -0.227,-0.291 -0.114,-0.948 0.2,-0.329 0.234,-0.326 0.199,-0.193 0.115,0.146 0.118,0.018 -0.083,-0.165 -0.196,-0.154 -0.069,-0.154 -0.007,-0.141 -0.093,-0.262 -0.58,-0.551 -0.542,0.042 -0.221,-0.019 -0.207,-0.21 -0.176,-0.354 -0.086,-0.297 -0.011,-0.158 -0.052,-0.159 -0.935,-0.26 -0.281,-0.223 -0.282,-0.281 -0.117,-0.229 -0.11,-0.169 -0.09,-0.296 -0.064,-0.345 0.104,-0.447 0.136,-0.216 -0.643,-0.161 -0.251,-0.007 -0.203,0.091 -0.183,-0.117 -0.38,-0.13 -0.452,-0.469 -0.531,-0.852 -0.584,-0.274 -0.188,-0.297 -0.239,-0.268 -0.209,-0.332 -0.032,-0.145 -0.063,-0.081 -0.292,-0.232 -0.328,-0.393 -0.085,-0.316 -0.088,-0.484 -0.219,-0.171 -0.215,-0.079 -0.042,-0.231 0.013,-0.129 -0.073,-0.245 -0.444,-0.588 -0.225,-0.484 -0.124,-0.151 -0.116,-0.221 -0.059,-0.453 -0.184,-0.564 -0.356,-0.679 -0.297,-0.458 -0.148,-0.462 0.066,-0.471 -0.05,-0.291 -0.038,-0.068 0.03,-0.095 0.099,0.053 0.083,-0.085 -0.01,-0.301 -0.104,-0.091 -0.288,-0.094 -0.127,-0.065 -0.7,-0.123 -0.401,-0.171 -0.026,-0.398 -0.188,-0.183 -0.167,-0.113 -0.528,-0.235 -0.083,0.12 -0.071,0.222 -0.22,0.048 -0.192,0.01 -0.322,-0.154 -0.799,-0.587 -0.169,-0.094 -0.249,-0.05 -0.125,-0.098 -0.54,-0.31 0.108,0.165 0.156,0.171 0.139,0.497 -0.163,0.358 -0.095,1.248 0.104,0.248 0.234,0.397 0.162,0.629 0.05,0.468 0.146,0.371 -0.046,0.87 0.056,0.264 0.223,0.433 0.413,0.406 0.086,0.213 0.542,0.309 0.33,0.401 0.654,0.546 0.206,0.23 0.59,0.849 0.019,0.252 0.109,0.309 0.331,-0.064 0.148,0.235 -0.017,0.108 0.04,0.083 0.173,-0.018 0.149,0.064 0.314,0.913 0.168,0.125 0.216,0.053 0.241,0.101 0.016,0.233 -0.009,0.186 0.204,0.269 -0.035,0.364 0.165,0.308 -0.025,0.298 0.068,0.235 0.509,0.532 0.627,0.422 0.131,0.553 0.256,0.505 0.262,0.127 0.264,0.209 -0.033,0.218 0.019,0.133 0.354,0.397 0.057,0.505 0.305,0.331 0.086,0.026 0.067,-0.052 -0.222,-0.332 -0.107,-0.216 -0.014,-0.34 0.075,-0.045 0.633,0.538 0.067,0.401 0.212,0.227 0.016,0.306 0.129,0.182 0.039,0.264 0.204,0.435 0.005,0.603 0.108,0.439 0.399,0.673 0.323,0.141 0.058,0.33 0.336,0.852 0.388,0.461 0.193,0.391 0.026,0.243 -0.145,0.36 -0.016,0.25 0.211,0.762 0.315,0.39 0.353,0.094 0.061,0.056 -0.028,0.104 0.118,0.093 0.133,-0.119 0.065,-0.169 -0.067,-0.197 -0.012,-0.143 0.06,-0.103 0.115,-0.015 0.674,0.52 0.113,0.2 0.25,0.233 0.23,0.287 0.099,0.226 0.184,0.187 0.095,0.434 0.469,0.194 0.249,0.358 0.017,0.227 -0.121,0.58 -0.105,0.167 -0.378,0.247 -0.275,0.293 -0.266,0.181 -0.282,0.11 -0.232,-0.025 -0.224,-0.337 -0.266,-1.021 -0.178,-0.215 -0.125,-0.321 -0.208,-0.266 -0.75,-0.403 -0.378,-0.426 -0.367,-0.285 -0.395,-0.413 -1.076,-0.685 -0.446,-0.349 -0.294,-0.346 -0.189,0.005 -0.146,0.036 -0.056,-0.095 -0.008,-0.18 -0.065,-0.117 -0.629,-0.522 -0.13,-0.289 -0.027,-0.336 0.142,-0.866 0.063,-0.508 -0.04,-0.262 -0.066,-0.036 -0.06,-0.142 -0.014,-0.419 -0.152,-0.456 -0.571,-0.937 -0.417,-0.185 -0.371,-0.135 -1.017,-0.831 -0.276,-0.416 -0.067,-0.237 -0.035,-0.482 -0.14,0.279 -0.187,0.207 -0.431,-0.015 -0.484,0.233 -0.288,-0.219 -0.156,-0.249 -0.237,-0.299 -0.266,-0.059 -0.17,-0.008 -0.319,-0.371 -0.258,-0.118 -0.369,-0.046 -0.314,-0.188 -0.097,-0.206 -0.052,-0.291 -0.117,-0.172 -0.493,-0.341 -0.401,-0.377 -0.378,-0.242 -0.111,-0.198 -0.009,-0.136 0.598,0.038 0.711,0.145 0.341,-0.041 0.212,-0.14 0.203,-0.101 0.032,0.109 -0.037,0.198 0.195,0.182 0.268,0.147 0.19,-0.014 -0.185,-0.161 -0.113,-0.328 0.051,-0.118 -0.003,-0.164 -0.265,0.037 -0.037,-0.083 0.227,-0.25 0.26,-0.658 0.124,-0.65 -0.272,-0.57 -0.459,-0.396 -0.996,-1.163 -0.595,-0.599 -0.172,-0.223 -0.158,-0.105 -0.485,-0.137 -0.407,-0.336 -0.713,-0.476 -0.305,-0.246 -0.21,-0.577 -0.167,-0.079 0.053,-0.4 -0.073,-0.709 -0.12,-0.182 -0.386,-0.177 -0.092,-0.483 -0.019,-0.46 -0.075,-0.321 -0.657,-0.541 -0.037,-0.262 0,-0.249 -0.067,-0.247 -0.351,-0.517 -0.424,-0.452 -0.148,-0.216 -0.018,-0.438 -0.15,-0.118 0.057,-0.03 0.139,0.011 0.079,-0.058 0.009,-0.306 -0.638,-0.481 -0.184,-0.663 -0.34,-0.352 -0.08,-0.127 -0.183,-0.628 0.803,-0.071 0.803,-0.071 0.803,-0.071 0.803,-0.071 0.803,-0.071 0.803,-0.071 0.803,-0.071 0.803,-0.071 0.321,-0.036 -0.178,0.5 -0.134,0.187 1.331,0.49 1.331,0.489 1.331,0.488 1.331,0.487 1.331,0.487 1.331,0.486 1.331,0.485 1.331,0.484 0.992,-0.002 0.992,-0.002 0.992,-0.002 0.992,-0.002 0.992,-0.002 0.992,-0.002 0.992,-0.002 0.992,-0.002 0.002,-0.368 0.001,-0.368 0.002,-0.369 0.002,-0.369 0.617,0.004 0.617,0.004 0.617,0.003 0.617,0.004 0.617,0.003 0.617,0.004 0.617,0.004 0.617,0.004 0.022,0.006 0.026,0.013 0.25,0.281 0.256,0.44 0.302,0.307 0.348,0.174 0.593,0.512 0.838,0.849 0.668,0.564 0.499,0.282 0.334,0.242 0.171,0.203 0.23,0.44 0.434,1.013 0,0.464 0.166,0.439 0.332,0.568 0.29,0.334 0.248,0.101 0.271,0.201 0.294,0.301 0.339,0.202 0.384,0.103 0.53,0.27 0.676,0.436 0.464,0.222 0.251,0.01 0.22,-0.14 0.188,-0.289 0.185,-0.186 0.182,-0.083 0.074,-0.133 -0.034,-0.184 0.123,-0.412 0.28,-0.642 0.334,-0.348 0.389,-0.054 0.254,-0.121 0.12,-0.188 0.208,-0.02 0.297,0.147 0.483,0.095 0.669,0.042 0.395,-0.014 0.121,-0.072 0.063,0.004 0.005,0.079 0.099,0.034 0.193,-0.012 0.168,0.11 0.216,0.349 0.742,0.558 0.001,0 0.063,0.191 0.258,0.275 0.476,0.423 0.269,0.364 0.063,0.306 0.243,0.483 0.423,0.659 0.188,0.355 -0.046,0.051 0.033,0.185 0.113,0.319 0.209,0.27 0.307,0.221 0.31,0.396 0.313,0.571 0.38,0.434 0.446,0.296 0.252,0.276 0.059,0.255 -0.004,0.218 -0.068,0.181 0.029,0.172 0.125,0.163 0.042,0.2 -0.049,0.277 0.003,0.078 0,0 0.036,0.063 0.396,0.476 0.204,0.384 0.162,0.612 10e-4,0.005 0.18,0.366 0.26,0.149 0.399,0.056 0.303,0.127 0.207,0.199 0.262,0.12 0.315,0.041 0.302,0.132 0.29,0.221 0.54,0.145 0.79,0.07 0.601,0.18 0.413,0.29 0.181,0.059 0.049,0.004 0.023,-0.044 0.031,-0.082 0.16,-0.094 0.388,-0.062 z m -49.248,-18.32 -0.093,0.014 -0.174,-0.151 0.013,-0.139 0.038,-0.014 0.174,0.122 0.059,0.107 -0.017,0.061 z m 4.318,8.59 -0.02,0.056 -0.287,-0.198 -0.65,-0.674 -0.236,-0.338 -0.039,-0.159 0.02,-0.354 0.223,0.042 0.258,0.237 0.112,0.22 0.005,0.251 0.482,0.119 0.068,0.543 0.064,0.255 z m 2.673,0.15 -0.211,0.752 -0.216,-0.012 -0.446,-0.237 -0.047,-0.148 0.171,-0.874 0.13,-0.115 0.389,-0.118 0.061,0.108 0.041,0.258 0.128,0.386 z m -16.95,0.202 -0.12,0.122 -0.322,-0.666 -0.003,-0.161 0.094,-0.08 0.156,0.015 0,0.167 0.131,0.141 0.051,0.138 0.013,0.324 z m 8.622,2.772 -0.038,0.102 -0.474,-0.211 0.26,-0.369 -0.038,-0.388 0.113,-0.081 0.103,0.128 0.136,0.494 -0.062,0.325 z m 11.423,6.422 0.035,0.112 -0.019,0.032 -0.115,-0.078 -0.194,0.464 -0.057,0.042 0.117,-0.635 0.123,-0.091 0.136,-0.018 -0.026,0.172 z m -2.686,4.553 -0.057,0.034 -0.24,-0.355 -0.036,-0.244 -0.098,-0.103 -0.242,-0.082 0.209,-0.497 0.177,-1.031 0.078,0.189 -0.187,1.044 0.009,0.136 0.087,0.127 0.094,0.215 0.011,0.232 0.165,0.216 0.03,0.119 z m 4.182,-1.407 0.08,0.344 -0.144,-0.051 -0.188,-0.187 -0.129,-0.239 0.012,-0.107 0.025,-0.02 0.267,0.141 0.077,0.119 z m -3.176,1.874 -0.038,0.145 -0.845,-0.573 0.203,-0.054 0.236,0.04 0.444,0.442 z m 5.315,0.742 -0.061,0.01 -0.144,-0.162 -0.063,-0.399 0.029,-0.042 0.271,0.494 -0.005,0.061 -0.027,0.038 z m 9.269,7.695 -0.082,0.247 -0.212,-0.099 -0.076,-0.155 -0.015,-0.254 0.118,-0.043 0.171,0.108 0.035,0.072 0.061,0.124 z m 55.536,1.114 0.05,0.145 -0.049,-0.017 -0.064,-0.109 -0.046,-0.136 0.039,-0.003 0.034,0.047 0.036,0.073 z m -0.633,2.793 -0.146,0.093 -0.079,-0.328 0.116,-0.32 0.141,-0.184 0.278,-0.021 0.184,-0.061 0.023,0.081 -0.151,0.248 -0.366,0.492 z m -67.286,4.623 -0.169,0.062 -0.249,-0.181 0.066,-0.143 0.142,-0.097 0.133,0.181 0.077,0.178 z m 53.972,0.189 -0.316,0.068 -0.056,-0.064 0.637,-0.301 0.109,0.013 0.038,0.041 -0.33,0.143 -0.082,0.1 z\"\n\t\t\t\tid=\"MX\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 803.65175,442.8864 -0.171,0.148 -0.058,-0.179 0.012,-0.23 0.231,-0.214 0.329,-0.041 0.047,0.171 -0.039,0.196 -0.077,0.101 -0.274,0.048 z m 1.215,8.399 -0.104,-0.002 -0.242,-0.06 -0.486,-0.297 -0.497,-0.105 -0.722,-0.009 -0.408,-0.042 -0.166,0.044 -0.14,0.002 -0.101,-0.06 -0.107,-0.03 -0.282,0.175 -0.131,-0.053 -0.133,-0.074 -0.236,-0.024 -0.286,0.021 -0.316,0.18 -0.352,-0.162 -0.1,0.002 -0.067,0.042 -0.152,0.222 -0.291,0.169 -0.144,0.311 -0.089,0.298 -0.077,0.103 -0.021,0.575 -0.046,0.278 0.073,0.367 -0.013,0.158 -0.129,0.235 -0.017,0.054 -0.068,0.373 0.026,0.1 -0.017,0.125 -0.109,0.262 -0.197,0.072 -0.207,0.041 -0.178,-0.089 -0.16,0.144 -0.203,0.222 -0.088,0.15 0.001,0.139 0.021,0.093 -0.042,0.096 -0.005,0.102 0.01,0.147 0.138,0.061 0.144,0.127 -0.005,0.122 -0.079,0.084 -0.181,0.13 -0.33,0.266 -0.372,0.227 -0.141,0.053 -0.051,0.105 -0.026,0.141 0.082,0.309 0.078,0.091 0.041,0.108 -0.05,0.129 -0.036,0.111 -0.137,0.07 -0.134,0.051 -0.049,0.088 -0.07,0.37 -0.081,0.193 -0.182,0.287 -0.061,0.131 -0.094,0.042 -0.352,-0.134 -0.315,0.081 -0.418,0.052 -0.354,-0.008 -0.273,0.059 -0.188,0.151 -0.21,0.191 -0.221,0.142 -0.167,0.069 -0.306,-0.202 -0.155,0.018 -0.278,-0.07 -0.653,-0.226 -0.161,-0.066 -0.174,-0.006 -0.052,-0.065 0.027,-0.109 -0.027,-0.144 -0.127,-0.054 -1.311,0.022 -0.378,0.124 -0.255,0.098 -0.182,0.113 -0.052,0.281 -0.109,0.264 -0.141,0.28 -0.436,0.084 -0.32,0.283 -0.11,0.034 -0.22,-0.041 -0.236,-0.023 -0.17,0.079 -0.179,-0.004 -0.551,-0.132 -0.521,-0.021 -0.295,0.067 -0.163,0.025 -0.907,0.388 -0.307,0.045 -0.124,-0.056 -0.175,-0.159 -0.235,-0.159 -0.563,-0.541 -0.208,-0.127 -0.138,-0.13 -0.131,-0.155 -0.187,-0.167 -0.17,-0.115 -0.23,-0.234 -0.229,-0.256 -0.052,-0.451 -0.182,-0.083 -0.062,-0.118 -0.028,-0.133 0.253,-0.366 0.184,0.387 0.07,0.086 0.408,0.261 0.336,0.13 0.363,0.053 0.37,0.011 0.146,-0.018 0.144,-0.052 0.141,0.056 0.773,0.423 0.3,0.076 0.317,-0.032 0.126,0.042 0.445,0.325 0.131,0.039 0.219,-0.025 -0.279,-0.148 -0.184,-0.105 -0.083,-0.198 0.051,-0.211 0.178,-0.141 0.124,-0.153 0.044,-0.456 0.079,-0.231 0.148,-0.219 0.049,-0.212 -0.167,-0.162 -0.037,-0.278 0.036,-0.23 0.095,-0.157 0.15,0.104 0.156,0.096 0.153,-0.01 0.106,-0.038 0.019,-0.119 -0.028,-0.207 0.008,-0.38 0.194,-0.304 0.311,-0.209 0.293,-0.1 1.098,-0.17 1.736,-0.435 0.514,-0.168 0.189,-0.087 0.159,-0.121 0.269,-0.386 0.505,-0.609 0.354,-0.5 0.746,-0.729 0.595,-0.676 0.08,-0.127 0.099,-0.369 0.008,-0.174 -0.018,-0.176 0.079,-0.082 0.116,-0.049 0.028,0 0.088,0.077 0.207,0.107 0.154,0.138 0.104,0.178 0.074,0.166 0.006,0.142 0.094,0.116 0.263,0.02 0.085,0.146 0.183,0.251 0.168,0.181 0.103,0.07 0.128,-0.038 0.199,-0.165 0.144,-0.202 0.097,-0.273 -0.076,-0.04 0.134,-0.206 0.025,-0.108 -0.062,-0.099 -0.079,-0.099 -0.03,-0.249 -0.055,-0.317 -0.037,-0.144 0.105,-0.103 0.226,-0.131 0.226,-0.152 0.229,-0.122 0.006,0.22 -0.006,0.363 0.069,0.304 0.156,0.538 0.178,0.073 0.214,0.048 0.124,-0.015 0.08,-0.036 0.021,-0.043 -0.133,-0.211 -0.035,-0.497 -0.109,-0.326 -0.167,-0.325 -0.079,-0.092 0.659,-0.092 0.147,-0.102 0.259,-0.223 0.098,-0.125 0.077,-0.282 -0.323,-0.167 -0.127,-0.214 -0.008,-0.231 0.386,-0.43 0.134,-0.103 0.058,0.153 0.17,0.039 0.156,0.006 0.157,-0.009 0.226,-0.217 0.116,-0.312 0.396,-0.441 0.141,-0.338 0.08,-0.354 1,-1.1 0.122,-0.171 0.594,-1.107 0.074,-0.037 0.159,0.107 0.047,0.352 -0.021,0.153 -0.097,0.228 -0.055,0.238 0.068,-0.005 0.283,-0.145 0.295,-0.387 0.167,-0.335 0.142,-0.146 0.285,0.082 0.063,0.058 -0.02,0.241 0.027,0.14 0.109,0.299 0.242,0.182 0.334,0.114 0.31,0.166 0.102,0.109 0.066,0.131 0.068,0.215 0.005,0.218 -0.224,0.213 0.095,0.345 -0.015,0.201 -0.076,0.172 -0.326,0.157 0.889,-0.156 0.219,-0.089 0.304,-0.227 0.162,0.196 0.152,0.339 -0.122,0.085 -0.387,0.125 -0.019,0.051 0.128,0.176 0.161,-0.017 0.319,-0.118 0.293,-0.186 0.142,0.002 0.15,0.038 0.289,0.12 0.162,0.097 0.138,0.125 0.089,0.259 0.334,0.094 0.684,0.363 0.127,0.031 0.133,0.007 0.36,-0.044 0.127,0.051 0.09,0.131 0.03,0.162 -0.01,0.174 -0.037,0.132 -0.084,0.109 -0.245,0.166 -0.617,0.217 -0.675,0.165 -0.339,-0.011 -0.476,-0.141 -0.173,0.018 -0.168,0.065 -0.21,0.449 0.389,0.447 0.669,0.465 0.092,0.116 -0.024,0.143 -0.106,0.085 -0.142,0.047 -0.376,0.074 -0.38,0.055 -0.313,0.08 -0.307,0.104 -0.315,-0.036 -0.434,-0.208 -0.125,-0.015 -0.132,0.107 -0.129,0.292 -0.078,0.073 z m -43.426,-5.8 0.485,0.109 0.186,0.088 0.545,0.868 0.718,0.61 0.305,0.228 0.235,0.108 0.321,0.326 0.28,0.41 0.614,1.153 0.106,0.506 0.042,0.772 -0.135,1.164 -0.165,0.58 0.032,0.274 0.226,0.42 -0.068,0.397 0.044,0.33 -0.016,0.914 0.128,0.27 0.146,0.172 0.771,0.542 0.057,0.201 0.38,0.69 0.704,1.502 0.196,0.675 -0.022,0.182 -0.085,0.075 -0.207,0.066 -0.173,-0.132 -0.058,-0.094 0.018,-0.118 -0.068,-0.116 -0.169,-0.138 -0.097,-0.124 0.027,0.205 10e-4,0.266 -0.215,0.023 -0.275,-0.083 -0.344,0.075 -0.406,0.326 -0.195,0.009 -0.148,-0.28 -0.076,-0.19 -0.121,-0.134 -1.291,-0.687 -0.477,-0.176 -0.502,-0.521 -1.13,-0.575 -0.718,-0.561 -0.305,-0.346 -0.734,-0.307 -0.316,-0.362 -0.156,-0.071 -0.156,-0.129 0.165,-0.352 -0.068,-0.367 -0.085,-0.31 -0.518,-0.611 -0.254,-0.426 -0.487,-0.425 -0.195,-0.245 -0.186,-0.284 0.116,-0.1 0.108,-0.06 -0.099,-0.207 -0.279,-0.359 -0.13,-0.413 0,-0.78 -0.396,-1.097 -0.339,-1.521 0.061,-0.533 -0.087,-0.578 -0.225,-0.556 -0.294,-0.397 -0.11,-0.33 0.053,-0.131 0.065,-0.429 0.044,-0.085 0.111,-0.041 0.126,0.011 0.235,0.373 0.613,0.231 0.185,0.055 0.241,-0.092 0.109,0.058 0.11,0.095 0.063,0.266 0.161,0.242 0.322,-0.035 0.114,0.035 0.067,0.007 0.063,0.214 0.029,0.372 -0.03,0.216 -0.232,0.309 -0.031,0.21 0.122,0.13 0.158,0.139 0.091,0.107 0.095,-0.018 0.12,-0.072 0.11,-0.182 0.076,-0.156 0.413,-0.174 0.427,-0.157 0.058,0.016 0.069,0.069 0.136,0.228 0.08,0.048 0.115,0.023 0.2,-0.024 0.232,-0.129 0.122,-0.241 0.054,-0.19 0.334,-0.329 0.037,-0.247 0.096,-0.163 z m -6.323,-0.627 0.198,0.301 -0.099,0.134 -0.05,0.039 -0.119,-0.044 -0.114,0.115 -0.109,0.023 -0.109,-0.208 -0.135,-0.083 -0.029,-0.144 0.181,-0.025 0.108,0.05 0.203,-0.1 0.074,-0.058 z m 1.237,3.282 -0.07,0.078 -0.204,-0.045 0.036,-0.459 0.116,-0.059 0.182,0.083 0.08,0.078 -0.14,0.324 z m 49.382,3.101 -0.391,0.054 -0.271,-0.006 0.05,-0.098 -0.013,-0.129 0.129,-0.034 0.149,0.028 0.347,0.185 z m -46.492,3.345 -0.142,0.051 -0.008,-0.073 0.025,-0.102 0.104,-0.097 0.048,0.055 -0.027,0.166 z m 8.147,0.717 -0.136,0.029 -0.074,-0.019 -0.05,-0.109 0.114,-0.25 0.042,-0.042 0.108,0.272 -0.004,0.119 z m 20.117,0.883 -0.086,0.037 -0.133,-0.099 -0.031,-0.847 0.093,-0.076 0.061,0.011 0.065,0.154 -0.006,0.371 0.012,0.328 0.025,0.121 z\"\n\t\t\t\tid=\"MY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 567.18975,540.7074 -0.308,0.005 -0.527,0.015 -0.312,0.009 -0.349,0.009 -0.432,-0.088 -0.243,0.019 -0.02,-0.999 -0.079,-0.219 -0.083,-0.32 -0.02,-0.205 0.052,-0.206 0.025,-0.326 -0.023,-0.286 -0.258,-0.143 -0.057,-0.045 -0.056,-0.224 -0.022,-0.346 0.181,-0.439 -0.015,-0.843 0.021,-0.296 -0.003,-0.585 -0.004,-0.707 -0.003,-0.633 0.007,-0.545 -0.054,-0.258 -0.045,-0.142 -0.12,-0.288 -0.14,-0.599 -0.165,-0.452 -0.212,-0.298 -0.067,-0.157 -0.068,-0.209 -0.201,-0.37 -0.164,-0.215 -0.045,-0.172 0.006,-0.445 -0.183,-0.797 -0.133,-0.58 -0.2,-0.628 -0.134,-0.419 -0.02,-0.072 -0.015,-0.159 0.398,-0.311 0.398,-0.438 0.466,-0.512 0.416,-0.457 0.366,-0.401 0.501,-0.548 0.495,-0.541 0.116,-0.069 0.049,-0.044 -0.214,-0.48 0.344,-0.557 0.019,-0.362 -0.015,-0.346 0.042,-0.159 0.104,-0.139 0.402,-0.289 0.304,-0.46 0.249,-0.43 0.346,-0.69 0.034,-0.163 0.005,-0.167 -0.094,-0.235 -0.23,-0.377 -0.167,-0.326 -0.149,-0.501 0.15,-0.435 0.053,-0.263 0,-0.142 -0.066,-0.134 -0.168,-0.102 -0.14,-0.066 -0.047,-0.18 -0.001,-0.213 0.063,-0.118 0.372,-0.191 0.084,-0.104 0.044,-0.116 0.004,-0.165 0.115,-0.413 0.142,-0.392 0.01,-0.138 -0.05,-0.121 -0.039,-0.221 -0.025,-0.333 -0.002,-0.931 0.073,-0.959 -0.032,-0.543 -0.238,-0.624 -0.023,-0.45 0.173,-0.314 0.028,-0.185 -0.126,-0.024 -0.26,-0.019 -0.192,-0.058 -0.297,-0.257 -0.516,-0.214 -0.586,-0.195 -0.852,-0.058 -0.708,-0.624 -0.555,-0.1 -0.179,-0.08 -0.533,-0.374 -0.835,-0.035 -0.866,-0.037 -0.54,-0.011 -0.08,-0.05 -0.031,-0.515 -0.006,-0.457 -0.046,-0.397 -0.082,-0.452 -0.126,-0.176 -0.15,-0.305 -0.076,-0.336 -0.009,-0.163 0.028,-0.058 0.601,-0.239 0.257,-0.118 0.381,-0.137 0.678,-0.189 0.605,-0.169 0.555,-0.164 0.588,-0.174 0.239,-0.117 0.297,-0.117 0.711,-0.235 0.203,-0.081 0.408,-0.131 0.205,-0.051 0.787,-0.269 0.902,-0.308 0.316,-0.108 0.603,-0.206 0.117,0.085 0.411,0.708 0.323,0.417 0.368,0.386 0.062,-0.019 0.106,-0.09 0.184,-0.037 0.585,-0.087 0.223,-0.005 0.147,-0.104 0.3,-0.073 0.347,-0.044 0.119,0.047 0.366,0.5 0.053,0.382 0.076,0.553 0.018,0.27 -0.006,0.361 -0.041,0.452 -0.297,0.521 -0.057,0.259 -0.159,0.401 -0.21,0.198 -0.104,0.162 0.006,0.168 0.112,0.141 0.246,0.254 0.076,0.165 -0.022,0.146 10e-4,0.199 0.059,0.138 0.07,0.08 0.243,0.13 0.238,0.327 0.41,0.395 0.49,0.563 0.23,0.173 0.181,0.042 0.09,0.188 -0.05,0.22 -0.141,0.125 0.058,0.18 0.08,0.094 0.089,0.048 0.215,0.011 0.2,-0.037 0.05,-0.063 -0.026,-0.843 -0.144,-0.491 -0.145,-0.192 -0.031,-0.038 0.051,-0.161 0.161,-0.376 0.137,-0.373 0.087,-0.157 0.101,-0.095 0.676,-0.101 0.308,-0.087 0.13,-0.109 0.101,-0.289 0.081,-0.807 0.029,-0.757 -0.07,-0.443 0.097,-0.667 0.148,-0.413 -0.073,-0.081 -0.055,-0.556 -0.44,-0.592 -0.566,-0.761 -0.317,-0.409 -0.36,-0.465 -0.656,-0.728 -0.3,-0.263 -0.158,-0.103 -0.53,-0.084 -0.141,-0.14 -0.134,-0.223 -0.051,-0.412 -0.009,-0.308 -0.06,-0.524 -0.107,-0.74 -0.048,-0.218 -0.151,-0.556 -0.144,-0.529 -0.008,-0.131 0.051,-0.127 0.244,-0.389 0.173,-0.276 0.082,-0.151 0.147,-0.41 0.035,-0.199 0.115,-0.09 0.469,-0.037 0.373,0.007 0.626,-0.009 0.661,0.024 0.093,0.018 0.149,0.043 0.168,-0.007 0.187,-0.058 0.207,-0.142 0.227,-0.226 0.354,0.005 0.479,0.235 0.262,0.205 0.044,0.175 0.321,0.102 0.598,0.028 0.435,-0.091 0.273,-0.21 0.286,-0.111 0.298,-0.013 0.225,0.072 0.153,0.156 0.293,0.112 0.434,0.068 0.474,-0.101 0.514,-0.269 0.293,-0.281 0.072,-0.292 0.085,-0.178 0.098,-0.063 0.272,-0.036 0.447,-0.01 0.389,0.092 0.496,0.291 0.313,-0.193 0.537,-0.331 0.541,-0.175 0.515,-0.001 0.423,-0.126 0.33,-0.25 0.349,-0.159 0.368,-0.067 0.344,-0.121 0.481,-0.26 0.499,-0.378 0.508,-0.386 0.326,-0.248 0.149,0.292 0.267,0.267 -0.159,0.155 -0.192,0.139 0.31,0.186 -0.227,0.281 -0.028,0.195 0.058,0.077 0.05,0.114 -0.149,0.322 -0.198,0.247 -0.051,0.189 0.175,0.333 -0.09,0.592 0.169,0.533 0.047,0.273 0.059,0.183 -0.084,0.327 0.022,0.552 0.039,0.228 -0.101,0.284 0.172,0.098 0.091,0.312 -0.024,0.351 -0.053,0.189 -0.296,0.229 -0.035,0.089 0.004,0.135 0.37,0.004 0.013,0.209 -0.024,0.165 0.014,0.31 -0.049,0.201 0.086,0.23 -0.105,0.255 0.036,0.197 0.005,0.255 0.086,0.645 0.015,0.798 0.019,0.128 0.132,0.09 0.185,0.045 -0.007,0.219 -0.206,0.286 -0.012,0.178 0.03,0.25 0.226,-0.34 0.136,10e-4 0.121,0.133 -0.017,0.196 0.042,0.097 -0.018,0.19 0.067,0.241 -0.026,0.21 -0.166,0.147 -0.211,0.252 -0.038,0.236 0.02,0.155 -0.146,0.049 -0.068,0.096 0.099,0.223 -0.006,0.197 -0.258,0.614 -0.688,0.841 -0.297,0.299 -0.278,0.325 0,0.134 -0.027,0.116 -0.324,0.465 -0.348,0.076 -0.193,0.125 0.151,0.41 -0.225,0.095 -0.391,0.323 -1.075,0.621 -0.17,0.144 -0.273,0.381 -0.36,0.092 -0.2,0.108 -0.357,0.039 -0.125,-0.027 -0.122,0.014 -0.103,0.082 -0.709,0.268 -0.662,0.212 -0.163,0.097 -0.108,0.132 -0.586,0.21 -0.918,0.519 -0.751,0.496 -0.544,0.496 -0.144,0.075 -0.168,0.172 -0.057,0.254 -0.055,0.144 -0.403,0.524 -0.606,0.62 -0.118,0.169 -0.241,0.345 -0.023,0.226 -0.215,0.069 -0.18,-0.216 -0.077,0.417 -0.147,0.03 -0.163,-0.086 -0.407,0.207 -0.354,0.239 -0.568,0.503 -0.803,0.976 -1.171,0.944 -0.16,0.027 -0.108,-0.004 -0.369,-0.329 -0.201,-0.024 0.18,0.195 0.119,0.163 -0.03,0.319 0.014,0.479 -0.145,0.933 0.02,0.204 0.167,0.265 0.315,0.324 0.295,0.404 0.38,1.162 0.029,0.6 0.392,0.767 0.015,0.333 0.159,0.829 -0.011,0.672 -0.028,0.412 0.189,0.174 0.07,-0.157 -0.02,-0.261 0.05,-0.418 0.105,-0.186 0.105,0.026 0.031,0.197 0.071,0.175 0.029,0.164 0.005,0.223 -0.145,0.849 0.043,0.346 0.195,0.579 -0.228,0.673 -0.33,1.59 -0.019,0.276 0.08,0.12 0.177,0.041 0.065,-0.204 0.104,0.002 0.055,0.12 -0.147,0.736 -0.145,0.323 -0.515,0.793 -0.277,0.34 -0.46,0.335 -1.08,0.524 -2.165,0.759 -0.858,0.373 -0.513,0.223 -1.084,0.709 -0.474,0.476 -0.195,0.547 -0.187,0.25 -0.184,0.318 0.16,0.273 0.157,0.207 0.186,0.139 0.096,0.12 0.126,0.083 0.126,-0.43 0.063,-0.134 0.108,-0.01 -0.06,0.524 -0.125,1.804 -0.013,0.07 z m 5.145,-43.767 0.075,-0.063 0.029,-0.083 -10e-4,-0.081 -0.047,-0.05 -0.068,-0.029 -0.098,0.017 -0.035,0.11 -0.015,0.152 0.062,0.051 0.098,-0.024 z m -0.218,-0.276 -0.049,-0.083 -0.092,-0.039 -0.105,0.032 -0.035,0.104 0.109,0.134 0.116,0.002 0.056,-0.15 z\"\n\t\t\t\tid=\"MZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 540.51275,512.9044 0.601,-0.12 0.574,-0.115 0.667,-0.115 0.534,-0.092 0.134,-0.024 1.285,0.107 0.56,0.075 0.195,0.074 0.253,0.192 0.468,0.467 -0.12,-0.018 -0.862,0.099 -0.328,0.127 -0.734,0.551 -0.156,-0.071 -0.176,-0.114 -0.149,-0.033 -0.323,0.132 -0.322,0.159 -0.355,0.225 -0.293,0.22 -0.096,0.119 -0.459,0.455 -0.15,0.073 -0.133,0.032 -0.054,-0.021 -0.057,-0.196 -0.282,-0.456 -0.452,-0.598 -0.132,-0.058 -0.091,-0.023 -0.335,0.029 -0.974,0.169 -0.822,0.142 -1.259,0.244 -1.352,0.196 -0.833,0.121 -0.726,0.036 0.001,0.592 10e-4,1.203 0.002,1.204 0.002,1.208 0.002,1.21 10e-4,1.214 0.002,1.217 0.002,1.221 0.002,1.224 0,0.535 -0.024,0.115 -0.416,0 -0.941,0 -0.791,0 -0.64,0 10e-4,0.73 10e-4,0.865 0,0.867 10e-4,0.869 10e-4,0.87 0.001,0.873 10e-4,0.874 10e-4,0.877 10e-4,0.878 0,0.664 0,0.076 0,1.293 0,1.375 0,1.38 0,1.385 0,1.391 0,1.396 0,1.401 0,1.408 0,0.447 -0.288,-0.006 -0.579,0.173 -0.369,0.225 -0.16,0.277 -0.212,0.168 -0.266,0.06 -0.117,0.141 0.032,0.224 -0.103,0.171 -0.235,0.119 -0.381,-0.035 -0.526,-0.188 -0.669,-0.044 -0.812,0.099 -0.585,-0.046 -0.355,-0.193 -0.377,-0.109 -0.399,-0.028 -0.232,-0.08 -0.474,-0.143 -0.09,-0.246 -0.056,-0.185 -0.135,-0.195 -0.015,-0.158 0.106,-0.12 0.015,-0.192 -0.075,-0.266 -0.131,-0.129 -0.186,0.007 -0.116,-0.102 -0.046,-0.21 -0.109,-0.159 -0.261,-0.162 -0.345,0.122 -0.163,0.185 -0.096,0.288 -0.087,0.145 -0.044,0.241 -0.02,0.171 -0.088,0.183 -0.092,0.074 -0.095,-0.034 -0.177,0.074 -0.391,0.269 -0.111,0.142 -0.315,-0.257 -0.92,-0.967 -0.327,-0.251 -0.482,-0.591 -1.06,-1.826 -0.151,-0.351 -0.202,-0.878 -0.232,-0.649 -0.026,-0.374 0.111,-0.212 -0.068,-0.287 -0.119,-0.257 -0.361,-0.336 -0.103,-1.118 -0.242,-0.721 0.053,-0.595 -0.116,-0.541 -0.011,-0.346 0.052,-0.658 -0.194,-0.755 -0.393,-0.736 -0.355,-1.06 -0.051,-0.464 0.038,-1.243 -0.069,-0.507 0.004,-0.594 -0.14,-0.615 -0.058,-0.335 0.099,-0.265 0.058,0.084 0.102,0.04 0.069,-0.352 0.016,-0.311 -0.177,-0.766 -0.395,-0.782 -0.979,-1.27 -0.239,-0.484 -0.136,-0.4 -1.092,-1.666 -0.466,-1.171 -0.326,-1.01 -0.354,-0.465 -1.639,-3.259 -0.363,-0.518 -0.654,-0.619 -0.153,-0.206 -0.252,-0.589 -0.492,-0.788 -0.12,-0.735 -0.033,-0.832 0.06,-0.636 0.448,-0.066 0.313,-0.17 0.281,-0.011 0.278,0.133 0.295,0.01 0.115,-0.022 0.53,0.019 0.304,-0.152 0.361,-0.152 0.208,-0.134 0.292,-0.137 0.387,-0.139 0.22,0.011 0.27,0.052 0.359,0.054 0.203,0.093 0.24,0.296 0.373,0.269 0.274,0.161 0.315,0.211 0.094,0.082 0.139,0.045 0.085,0.014 0.585,-0.033 0.529,-0.029 0.571,10e-4 1.073,0.001 1.074,0.002 1.074,10e-4 1.074,0.002 1.074,0.002 1.073,0.002 1.074,0.001 1.074,0.002 0.439,10e-4 0.767,0.009 0.808,0.01 0.089,0.017 0.09,0.056 0.074,0.054 0.285,0.372 0.364,0.39 0.304,0.184 0.362,0.11 0.34,0.041 0.318,-0.027 0.526,0.05 0.736,0.126 0.765,0.037 0.793,-0.051 0.557,0.069 0.322,0.191 0.33,0.13 0.338,0.068 0.456,-0.04 0.576,-0.148 0.49,0.021 0.227,0.107 0.135,0.003 0.846,-0.155 0.68,-0.124 1.021,-0.199 0.841,-0.164 1.246,-0.242 z\"\n\t\t\t\tid=\"NA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 923.79875,517.8204 -0.044,0.063 -0.022,-0.469 0.089,-0.176 0.043,0.365 -0.066,0.217 z m 11.928,2.77 0.316,0.187 0.34,-0.08 0.427,0.294 1.088,0.894 0.382,0.189 0.225,0.072 0.17,0.146 0.152,0.207 0.207,0.146 0.09,0.136 0.022,0.184 0.075,0.113 0.379,0.297 0.226,0.261 0.314,0.133 0.135,0.156 0.176,0.076 0.18,0.16 0.304,0.125 0.689,0.46 0.532,0.437 0.266,0.271 0.286,0.241 0.366,0.193 0.344,0.22 0.173,0.516 -0.095,0.185 -0.197,0.092 -0.183,0.007 -0.171,0.062 -0.571,-0.333 -0.136,-0.049 -0.152,0.021 -0.085,-0.074 -0.06,-0.106 -0.349,-0.124 -0.324,-0.198 -0.094,-0.135 -0.055,-0.168 -0.078,-0.096 -0.457,-0.146 -0.308,-0.163 -0.224,-0.229 -0.347,-0.16 -0.541,-0.328 -0.277,-0.105 -0.243,-0.164 -0.65,-0.595 -0.232,-0.111 -0.202,-0.264 -0.561,-0.627 -0.271,-0.257 -0.294,-0.229 -0.225,-0.268 -0.173,-0.318 -0.402,-0.455 -0.049,-0.194 0.017,-0.199 -0.097,-0.128 -0.164,-0.078 -0.078,-0.134 0.009,-0.181 0.054,-0.093 0.401,0.308 z m 6.58,1.348 -0.149,0.029 0.18,-0.273 0.006,-0.167 0.072,-0.33 -0.009,-0.11 0.119,0.014 0.129,0.095 -0.148,0.082 -0.05,0.143 0.006,0.178 0.057,0.033 -0.095,0.195 -0.118,0.111 z m 2.397,1.38 -0.153,0.024 -0.205,-0.216 -0.391,-0.108 -0.172,-0.189 -0.112,-0.223 0.222,-0.055 0.218,-0.3 -0.148,-0.111 -0.256,-0.02 0.029,-0.117 0.416,-0.139 0.183,0.081 0.081,0.095 -0.012,0.475 0.188,0.151 0.195,0.338 0,0.095 -0.083,0.219 z m 1.713,0.806 0.131,0.056 0.229,-0.01 -0.052,0.512 -0.321,0.082 -0.11,-0.004 -0.072,-0.108 -0.184,-0.071 0.009,-0.175 -0.178,-0.393 0.31,-0.06 0.176,-0.105 -0.01,0.096 0.027,0.111 0.045,0.069 z m -1.31,3.592 -0.089,0.114 -0.11,-0.023 -0.084,-0.043 -0.061,-0.062 0.061,-0.233 0.241,0.114 0.042,0.133 z\"\n\t\t\t\tid=\"NC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 516.93375,396.9984 0.308,1.748 0.234,1.495 0.016,0.95 0.011,0.248 0.096,0.167 0.218,0.168 0.88,1.368 -0.188,0.237 0.132,0.423 0.228,0.181 0.732,0.812 0.095,0.16 -0.04,0.128 -0.513,0.953 -0.087,0.233 -0.102,1.211 -0.072,0.853 -0.1,1.168 -0.118,1.395 -0.095,1.173 -0.126,1.548 -0.119,1.46 -0.736,0.8 -1.306,1.416 -1.063,1.15 -0.533,0.769 -1.041,1.499 -0.462,0.968 -0.362,0.505 -0.183,0.215 0.162,0.708 0.282,1.236 -0.504,0.008 -0.289,0.088 -0.365,0.281 -0.408,0.111 -0.496,0.245 -0.314,0.196 -0.295,0.155 -0.406,0.379 -0.132,0.288 -0.404,0.057 -0.565,-0.047 -0.359,-0.291 -0.832,-0.303 -0.54,-0.123 -0.25,-0.037 -1.271,-0.052 -1.356,0.119 -0.691,0.141 -0.126,0.031 -0.392,0.183 -0.325,0.203 -0.879,0.929 -1.164,-0.031 -0.684,-0.103 -0.581,-0.145 -0.827,-0.434 -1.013,-0.663 -0.391,-0.09 -0.351,-0.052 -0.117,0.009 -1.21,0.66 -0.233,-0.014 -0.285,0.074 -0.188,0.164 -0.139,0.082 -0.145,0.014 -0.191,-0.036 -0.186,-0.101 -0.186,-0.184 -0.499,-0.735 -0.103,-0.129 -0.213,-0.218 -0.358,-0.34 -0.243,-0.158 -0.148,-0.041 -0.176,0.027 -0.972,-0.292 -0.971,-0.309 -0.214,0.04 -0.152,0.064 -0.336,0.228 -0.396,0.042 -0.503,-0.018 -0.276,-0.031 -0.444,0.076 -0.296,0.091 -0.388,0.155 -0.503,0.421 -0.144,0.054 -0.122,0.07 -0.168,1.152 -0.137,0.346 -0.255,0.457 -0.501,0.436 -0.344,0.264 -0.008,0.356 -0.027,0.582 -0.005,0.399 0.023,0.26 -0.058,0.124 -0.023,0.113 0.018,0.169 0.082,0.081 0.048,0.106 -0.032,0.086 -0.162,0.102 -0.179,-0.26 -0.23,-0.183 -0.252,-0.082 -0.171,-0.133 -0.088,-0.184 -0.331,-0.36 -0.762,-0.713 -0.078,-0.017 -0.127,-0.028 -0.215,0.085 -0.132,0.117 -0.093,0.046 -0.14,0.007 -0.362,0.09 -0.29,0.116 -0.008,0.096 0.139,0.539 -0.066,0.292 -0.129,-0.139 -0.418,-0.544 -0.289,-0.403 -0.051,-0.09 -0.041,-0.139 0.028,-0.06 0.115,-0.042 0.265,-0.053 0.049,-0.042 0.013,-0.111 -0.041,-0.207 -0.145,-0.28 -0.155,-0.186 -0.086,-0.036 -0.159,-0.006 -0.172,0.025 -0.323,0.227 -0.143,0.042 -0.334,-0.019 -0.297,-0.044 -0.181,-0.117 -0.538,-0.452 -0.595,-0.477 -0.25,-0.068 -0.058,-0.049 -0.039,-0.367 0.01,-0.442 0.033,-0.116 0.248,0.069 0.264,0.032 0.085,-0.08 -0.212,-0.157 -0.303,-0.159 -0.113,-0.241 -0.087,-0.084 -0.136,-0.086 -0.157,-0.044 -0.157,-0.068 -0.108,-0.07 -0.177,-0.032 -0.186,-0.051 -0.269,-0.391 -0.262,-0.381 -0.154,-0.3 -0.055,-0.18 0.078,-0.307 -0.078,-0.121 -0.292,-0.312 -0.244,-0.29 0.06,-0.449 0.05,-0.375 0.002,-0.237 0.039,-0.134 0.031,-0.151 0.162,-0.048 0.412,0.004 0.801,0.07 0.642,-0.079 0.036,-0.014 0.453,-0.402 0.502,-0.422 0.755,-0.041 0.814,-0.044 0.642,-0.022 0.934,-0.032 0.754,-0.028 0.874,-0.032 0.026,-0.194 0.054,-0.048 0.086,-0.007 0.642,0.104 0.604,0.101 0.046,-0.367 0.53,-0.459 0.301,-0.094 0.074,-0.08 0.095,-0.155 0.059,-0.24 0.026,-0.17 0.112,-0.142 0.082,-0.261 0.108,-0.456 0.299,-0.48 0.171,-0.652 0.025,-0.63 0.033,-0.479 0.089,-0.098 -0.003,-0.853 -0.002,-0.859 -0.003,-0.727 -0.003,-0.906 -0.002,-0.796 -0.003,-0.865 -0.002,-0.777 -0.002,-0.516 0.613,-0.123 0.633,-0.128 0.926,-0.187 1.003,-0.202 1.093,-0.221 0.248,-0.133 0.825,-0.749 0.373,-0.339 0.74,-0.672 0.571,-0.521 0.726,-0.662 0.769,-0.667 0.613,-0.534 0.964,-0.605 1.453,-0.913 1.453,-0.916 1.454,-0.918 1.453,-0.92 1.453,-0.921 1.453,-0.924 1.454,-0.926 1.453,-0.928 1.462,0.354 1.389,0.335 1.397,0.337 0.329,0.185 0.741,0.659 0.949,0.842 0.041,0.012 0.043,0.004 0.912,-0.496 1.188,-0.647 z\"\n\t\t\t\tid=\"NE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 946.21575,547.5604 0.056,0.033 0.052,0.019 0.034,0.025 -0.005,0.054 -0.026,0.054 -0.032,0.023 -0.01,0.007 -0.007,0.011 -0.003,0.011 0,0.014 -0.016,-0.045 -0.03,-0.03 -0.029,-0.003 -0.021,0.035 -0.017,0 -0.006,-0.036 -0.012,-0.031 -0.005,-0.03 0.012,-0.024 0.022,-0.029 0.001,-0.024 -0.017,-0.011 -0.035,0.01 0.041,-0.046 z\"\n\t\t\t\tid=\"NF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 513.08175,424.3434 0.441,0.617 0.474,0.663 0.369,0.515 0.27,1.333 0.029,0.253 0.021,0.114 0.021,0.105 0.035,0.181 0.212,0.078 0.4,0.036 0.291,0.131 0.174,0.217 0.017,0.036 0.092,0.167 0.021,0.121 -0.025,0.348 -0.059,0.447 -0.1,0.288 0.056,0.392 -0.018,0.167 -0.044,0.114 -0.179,0.131 -0.243,0.128 -0.581,0.378 -0.166,0.056 -0.243,0.01 -0.211,0.094 -0.25,0.204 -0.54,0.758 -0.461,0.761 -0.16,0.629 -0.18,0.6 -0.406,0.383 -0.057,0.215 -0.017,0.125 -0.014,0.289 -0.049,0.478 -0.063,0.23 -0.065,0.068 -0.438,0.146 -0.252,0.175 -0.151,0.347 -0.055,0.375 -0.088,0.427 -0.05,0.375 -0.068,0.194 -0.144,0.204 -0.223,0.219 -0.193,0.124 -0.503,0.081 -0.259,0.496 -0.219,0.387 -0.006,0.155 -0.211,0.802 -0.367,0.604 -0.024,0.213 -10e-4,0.175 -0.459,0.531 -0.122,0.157 -0.117,0.205 0.116,0.198 0.129,0.18 0.019,0.061 -0.208,0.169 -0.364,0.294 -0.217,0.176 -0.048,0.096 -0.032,0.441 -0.063,0.119 -0.145,0.162 -0.213,0.178 -0.216,0.138 -0.245,0.096 -0.235,0.036 -0.132,-0.056 -0.075,-0.134 -0.132,-0.54 -0.067,-0.116 -0.153,-0.105 -0.302,-0.296 -0.306,-0.299 -0.369,-0.21 -0.079,0.015 -0.061,0.057 -0.105,0.301 -0.103,0.11 -0.194,0.038 -0.337,0.002 -0.246,-0.042 -0.056,-0.06 -0.05,-0.13 -0.068,-0.104 -0.294,0.211 -0.462,0.332 -0.15,0.054 -0.115,0.067 -0.152,0.309 -0.185,0.331 -0.241,0.173 -0.235,0.146 -0.135,0.127 -0.193,0.15 -0.378,0.375 -0.501,0.496 -0.177,0.256 -0.175,0.383 -0.102,0.424 -0.111,0.464 -0.163,0.746 -0.24,0.422 -0.21,0.335 -0.156,0.263 -0.082,0.217 -0.034,-0.007 -0.082,0.093 -0.234,-0.061 -0.105,-0.189 -0.145,-0.031 -0.25,-0.277 -0.053,0.046 0.264,0.704 -0.098,0.275 -0.743,0.006 -0.639,0.092 -0.439,-0.008 -0.22,-0.1 -0.098,-0.264 -0.038,0.027 -0.022,0.141 -0.139,0.111 -0.493,0.021 -0.218,-0.18 -0.176,-0.202 -0.189,-0.089 0.029,0.084 0.217,0.197 -0.026,0.283 -0.397,0.328 -0.253,0.019 -0.155,-0.141 -0.081,-0.23 -0.041,-0.34 -0.104,-0.222 -0.056,0 0.052,0.203 0.017,0.166 0.002,0.345 0.189,0.268 -0.29,0.083 -0.118,0.003 -0.23,0.006 -0.044,-0.1 -0.044,-0.222 -0.061,-0.058 -0.071,0.376 -0.153,0.026 -0.106,-0.003 -0.456,0.082 -0.102,-0.016 -0.021,-0.07 0.054,-0.104 -0.012,-0.169 -0.158,0.13 -0.025,0.261 -0.09,0.042 -0.271,-0.037 -0.297,-0.134 -0.181,-0.137 -0.302,-0.191 -0.592,-0.535 -0.096,-0.241 -0.169,-0.295 -0.126,-0.3 -0.182,-0.512 0.056,-0.037 0.137,0.044 0.067,-0.077 -0.246,-0.056 -0.051,-0.06 -0.017,-0.18 0.011,-0.22 0.2,-0.077 0.173,-0.038 0.087,-0.133 0.05,-0.134 -0.459,0.203 -0.431,-0.23 -0.093,-0.139 0.047,-0.107 0.206,-0.016 0.294,0.008 0.176,-0.104 -0.108,-0.037 -0.19,0.004 -0.07,-0.069 0.006,-0.167 -0.062,0.037 -0.082,0.148 -0.29,0.109 -0.17,-0.109 -0.017,-0.242 -0.037,-0.109 -0.143,-0.085 -0.508,-0.641 -0.638,-0.535 -0.567,-0.369 -0.857,-0.176 -1.794,0.007 -0.101,-0.051 0.11,-0.084 0.157,-0.057 0.577,-0.299 -0.097,-0.04 -0.6,0.187 -0.205,0.018 -0.266,0.359 -1.58,0.06 -0.185,0.019 0.004,-0.164 0.077,-0.472 0.051,-0.186 0.059,-0.14 -0.061,-0.168 -0.06,-0.228 -0.029,-0.358 0.074,-0.111 0.025,-0.135 -0.018,-0.212 0,-0.708 0.043,-0.077 0.051,-0.059 0.003,-0.094 -0.096,-0.183 -0.089,-0.209 0.003,-0.301 -0.036,-0.291 -0.061,-0.133 0.046,-0.496 0.026,-0.628 -0.024,-0.279 0.058,-0.197 0.031,-0.485 -0.005,-0.475 0.118,-0.751 0.346,-0.036 0.412,-0.063 0.184,-0.295 0.106,-0.374 -0.034,-0.37 0.08,-0.122 0.165,-0.201 0.298,-0.287 -0.012,-0.315 0.082,-0.097 0.141,-0.073 0.202,-0.037 0.226,-0.157 0.125,-0.275 0.123,-0.44 -0.194,-0.307 0.003,-0.068 0.074,-0.165 0.119,-0.165 0.094,-0.053 0.22,0.042 0.038,-0.014 0.034,-0.052 0.142,-0.487 -0.013,-0.131 -0.205,-0.326 -0.034,-0.232 -0.03,-0.345 -0.05,-0.306 -0.059,-0.116 -0.109,-0.097 -0.049,-0.063 -0.424,-0.622 0.007,-0.295 0.178,-0.377 0.116,-0.183 0.162,-0.102 0.032,-0.087 -0.048,-0.106 -0.082,-0.08 -0.019,-0.17 0.023,-0.113 0.058,-0.124 -0.023,-0.26 0.005,-0.399 0.027,-0.582 0.008,-0.356 0.344,-0.264 0.501,-0.437 0.255,-0.457 0.137,-0.346 0.168,-1.152 0.122,-0.07 0.144,-0.054 0.503,-0.42 0.387,-0.156 0.296,-0.09 0.445,-0.076 0.276,0.031 0.503,0.019 0.396,-0.042 0.336,-0.229 0.152,-0.064 0.214,-0.04 0.972,0.309 0.971,0.292 0.176,-0.027 0.148,0.041 0.243,0.158 0.358,0.339 0.213,0.219 0.103,0.128 0.499,0.735 0.186,0.185 0.187,0.101 0.19,0.036 0.146,-0.014 0.138,-0.083 0.188,-0.164 0.286,-0.075 0.233,0.015 1.209,-0.661 0.117,-0.009 0.352,0.052 0.391,0.091 1.013,0.663 0.827,0.434 0.581,0.145 0.685,0.103 1.163,0.031 0.879,-0.929 0.325,-0.203 0.392,-0.183 0.126,-0.031 0.691,-0.141 1.355,-0.119 1.271,0.052 0.25,0.037 0.54,0.123 0.832,0.303 0.359,0.291 0.564,0.048 0.404,-0.058 0.132,-0.288 0.406,-0.379 0.295,-0.154 0.313,-0.197 0.496,-0.245 0.408,-0.11 0.365,-0.281 0.289,-0.089 0.502,-0.007 z m -17.697,26.249 -0.271,0.085 -0.178,-0.021 0.244,-0.37 0.124,0.08 0.159,0.033 -0.078,0.193 z\"\n\t\t\t\tid=\"NG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 241.51475,420.6334 -0.078,0.106 -0.086,0.07 -0.179,0.345 -0.062,0.031 -0.013,-0.255 -0.107,-0.034 -0.125,0.091 -0.069,0.131 0.109,0.17 0.096,0.003 0.116,0.047 0.313,1.178 -0.067,0.21 -0.194,0.327 -0.184,0.277 -0.185,0.174 -0.229,0.74 -0.206,1.201 0.148,1.077 -0.075,0.995 0.066,0.234 0.019,0.292 -0.152,0.053 -0.086,-0.009 -0.088,-0.179 0.01,-0.158 0.091,-0.185 0.037,-0.251 -0.043,-0.131 -0.09,0.286 -0.158,0.128 -0.103,0.045 -0.1,0.144 0.106,0.272 0.137,0.199 0.046,0.142 -0.051,0.17 -0.031,0.58 -0.049,-0.016 -0.05,-0.078 -0.145,-0.006 -0.017,0.234 0.011,0.13 -0.123,0.101 -0.044,0.1 0.101,0.072 0.111,0.042 0.137,-0.01 0.112,0.287 0.036,0.233 -0.262,0.215 -0.088,0.178 -0.148,0.216 -0.084,0.212 -0.025,0.152 0.102,0.482 0.179,0.342 0.151,0.217 0.202,0.047 -0.047,0.228 -0.152,0.145 -0.276,0.121 -0.303,0.022 -0.496,-0.114 -0.203,-0.013 -0.079,-0.061 -0.024,-0.112 -0.142,-0.169 -0.26,-0.225 -0.15,0.016 -0.245,-0.049 -0.407,-0.153 -0.188,-0.019 -0.27,0.131 -0.314,0.172 -0.757,-0.268 -0.532,-0.189 -0.478,-0.171 -0.127,-0.065 -0.105,0.014 -0.091,0.089 -0.103,0.158 -0.034,0.046 -0.055,0.043 -0.062,0.012 -0.002,-0.075 -0.234,-0.314 -0.372,-0.377 -1.425,-1.158 -0.524,-0.693 -0.281,-0.499 -0.267,-0.26 -0.77,-0.532 -0.178,-0.212 -0.762,-0.712 -0.582,-0.418 -0.008,-0.178 0.239,-0.222 0.117,0.011 0.128,0.158 0.206,0.181 0.097,0.001 0.144,-0.084 0.003,-0.084 0.781,-0.034 0.14,-0.047 0.141,-0.131 0.073,-0.184 0.012,-0.176 0.03,-0.127 0.125,-0.123 0.229,-0.038 0.176,-0.013 0.052,-0.083 -0.053,-0.269 -0.095,-0.654 -0.02,-0.183 0.032,-0.136 0.072,-0.049 0.346,-0.033 0.655,0.055 0.127,-0.041 0.262,-0.372 0.244,-0.273 0.174,-0.123 0.138,-0.037 0.158,0.243 0.553,0.348 0.094,-0.022 0.054,-0.019 0.018,-0.05 -0.01,-0.16 0.138,-0.146 0.287,-0.131 0.288,-0.231 0.29,-0.332 0.252,-0.195 0.212,-0.058 0.082,-0.09 -0.051,-0.123 0.017,-0.175 0.084,-0.226 0.124,-0.131 0.162,-0.036 0.065,-0.071 -0.034,-0.107 0.031,-0.117 0.147,-0.193 0.35,-0.165 0.2,0.055 0.166,0.222 0.236,0.151 0.304,0.08 0.236,-0.029 0.168,-0.139 0.151,-0.042 0.134,0.055 0.071,-0.032 0.008,-0.116 0.069,-0.027 0.132,0.063 0.116,0.016 0.102,-0.03 0.04,-0.057 0.021,-0.059 0.076,-0.043 0.263,0.043 0.294,-0.067 0.327,-0.179 0.217,-0.078 0.107,0.02 0.128,-0.09 0.149,-0.2 0.341,-0.09 z\"\n\t\t\t\tid=\"NI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 489.58075,285.9684 -0.119,-0.065 0.631,-0.187 0.399,-0.057 0.071,0.025 -0.721,0.246 -0.261,0.038 z m 1.401,-0.304 0.554,-0.077 -0.003,-0.029 -0.146,-0.047 -0.472,0.008 -0.151,0.033 0.031,0.055 0.187,0.057 z m 1.688,-0.321 -0.119,-0.02 -0.346,0.1 -0.024,0.046 0.096,0.034 0.393,-0.16 z m -3.437,0.952 -0.229,-0.01 -0.334,0.299 0.044,0.055 0.519,-0.344 z m 4.749,-1.493 -0.13,0 -0.241,0.094 -0.075,0.125 0.26,-0.016 0.186,-0.203 z m -7.829,10.259 -0.358,0.186 -0.468,-0.065 -0.356,-0.136 -0.459,0.026 -0.212,0.071 0.084,0.388 0.064,0.123 0.083,0.08 0.11,0.016 0.127,-0.096 0.177,-0.101 0.285,0.047 0.207,0.093 0.074,0.097 0.137,0.092 0.2,0.022 0.387,-0.176 0.372,-0.269 0.109,-0.187 0.041,-0.169 -0.322,0.116 -0.282,-0.158 z m 8.942,-8.645 -0.391,-0.085 -0.252,-0.125 -0.157,-0.226 -0.27,-0.309 -0.709,0.032 -0.59,0.089 -0.817,0.038 -0.529,0.15 -0.958,0.5 -0.241,0.255 -0.246,0.549 -0.834,0.632 -0.486,0.243 -0.137,-0.093 -0.197,-0.061 -0.157,0.321 -0.097,0.289 -0.326,1.693 -0.222,0.612 -0.299,0.514 -0.47,0.628 -0.216,0.214 -0.132,0.081 -0.165,0.302 -0.132,0.362 -0.09,0.169 0.527,0.622 0.066,0.178 0.069,0.104 -0.499,0.065 0.212,0.201 0.267,0.144 0.179,0.069 0.098,0.145 -0.192,0.067 -0.181,0.004 -0.716,-0.533 -0.398,-0.098 -0.548,0.031 -0.138,0.056 -0.142,0.162 0.201,0.246 0.186,0.145 0.299,0.019 0.36,0.182 0.518,-0.152 0.372,0.187 0.245,0.067 0.22,0.112 0.194,0.024 0.085,-0.05 -0.054,-0.271 0.158,-0.145 0.175,-0.067 0.079,0.118 0.161,0.12 0.126,10e-4 0.342,-0.312 0.08,0.062 0.074,0.111 0.016,0.089 0.013,0.094 0.077,0.039 0.269,-0.02 0.137,-0.169 0.107,-0.106 0.08,0.072 0.039,0.208 0.074,0.271 0.321,0.302 0.271,0.086 0.333,-0.059 0.132,-0.054 0.089,0.045 0.089,0.16 0.192,0.183 0.403,0.129 0.124,0.073 0.086,0.123 -0.025,0.175 -0.192,0.435 -0.025,0.128 0.026,0.043 -0.038,0.08 -0.25,0.291 -0.022,0.103 0.083,0.167 0.069,0.138 0,0 0.15,0.067 0.141,0.022 0.267,0.009 0.285,0.009 0.153,-0.685 -0.117,-0.2 -0.145,-0.102 -0.169,-0.05 -0.078,-0.095 -0.027,-0.109 0.03,-0.067 0.199,0.02 0.062,-0.071 0.474,-0.404 0.02,-0.078 -0.066,-0.044 -0.086,-0.023 -0.022,-0.085 0.003,-0.112 0.253,-0.585 0.075,-0.25 0.017,-0.177 -0.016,-0.175 -0.146,-0.275 -0.141,-0.22 -0.005,-0.175 -0.103,-0.092 -0.292,-0.471 0,-0.182 0.165,-0.142 0.231,-0.09 0.077,-0.075 0.138,-0.047 0.367,0.136 0.164,0.118 0.046,-0.024 0.148,-0.128 0.26,0.02 0.629,-0.258 0.094,-0.124 0.07,-0.132 0.006,-0.058 -0.244,-0.255 -0.007,-0.094 0.032,-0.106 0.069,-0.084 0.144,-0.057 0.153,-0.112 0.343,-0.318 0.119,-0.276 0.037,-0.3 0.007,-0.224 -0.094,-0.178 -0.095,-0.115 -0.129,0.018 -0.251,-0.009 -0.235,-0.1 -0.129,-0.162 -0.032,-0.142 0.059,-0.09 0.018,-0.11 -0.038,-0.111 0.015,-0.093 0.106,-0.075 0.743,0.002 0.056,-0.082 0.05,-0.432 0.186,-0.659 0.175,-0.368 0.029,-0.155 -0.003,-0.875 0.022,-0.448 z m -9.726,7.374 0.245,-0.071 0.371,0.302 0.348,-0.098 -0.021,-0.084 -0.059,-0.079 -0.274,-0.247 -0.449,-0.031 -0.254,0.076 10e-4,0.089 0.092,0.143 z m 2.962,-6.056 0.278,-0.33 0,-0.525 -0.411,0.429 -0.086,0.258 0.049,0.077 0.17,0.091 z\"\n\t\t\t\tid=\"NL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 546.70275,175.2494 0.75,0.332 0.256,-0.007 0.373,0.619 0.194,-0.055 -0.037,0.376 -0.376,0.179 -0.585,0.108 -0.087,0.075 -0.5,-0.06 -0.281,-0.506 -0.469,-0.125 10e-4,-0.163 0.304,-0.384 0.457,-0.389 z m 14.828,11.398 0.153,1.065 -0.005,0.37 -0.072,0.358 -0.101,0.183 -0.201,0.08 -0.487,-0.032 -0.661,-0.419 -0.427,-0.395 -0.133,-0.017 -0.058,0.048 0.104,0.396 -0.028,0.304 -0.064,0.33 -0.09,0.299 -0.125,0.25 -0.262,0.322 -0.453,0.254 -1.247,0.495 -0.099,0.218 -0.402,1.37 -0.109,0.2 -0.147,0.169 -0.429,0.219 -0.208,-0.302 -0.166,-0.459 0.038,-0.456 0.501,-0.878 0.469,-0.625 0.132,-0.217 0.266,-0.631 -0.538,-1.594 -0.958,-0.485 -1.091,-0.741 -0.4,-0.396 -0.623,-0.819 -0.441,-0.738 -0.398,-0.026 -0.438,0.186 -0.684,0.674 -0.399,0.338 -0.22,0.1 -0.053,0.015 -0.49,-0.191 -0.544,-0.04 -0.438,0.055 -0.165,0.092 -0.61,1.084 -0.427,0.544 -0.235,0.187 -0.171,0.314 -0.14,0.516 -0.313,1.776 -0.233,0.666 -0.052,0.406 0.055,1.224 -0.056,0.674 -0.285,0.554 -0.201,0.249 -0.265,0.051 -0.347,0.141 -0.303,0.319 -0.214,0.435 -0.241,0.971 -0.408,0.356 -0.39,-0.102 -0.278,-0.356 -0.597,-0.276 -0.445,-0.176 -0.499,-0.382 -0.44,-0.291 -0.402,-0.058 -0.229,0.369 -0.184,0.344 -0.686,0.279 -0.389,0.221 -0.504,0.049 -0.204,-0.245 -0.732,-0.162 -0.871,-0.192 -0.252,0.002 -0.079,-0.439 -0.232,-0.615 -0.619,-1.068 -0.253,-0.378 -0.477,-0.891 -0.555,-0.918 -0.079,-0.023 -0.372,-0.031 -0.545,0.03 -0.346,0.209 -0.218,0.262 -0.038,0.218 0.211,0.832 -0.065,0.207 -0.109,0.1 -0.495,-0.233 -0.599,0.016 -0.151,0.256 -0.365,0.028 -1.053,0.097 0.465,0.676 0.154,0.271 0.031,0.396 -0.081,0.734 -0.223,0.625 -0.26,0.507 -0.501,0.501 0.761,0.494 -0.517,0.665 -0.242,0.258 -0.28,-0.044 -0.501,-0.229 -1.213,-0.556 -0.579,-0.209 -0.518,-0.064 -0.276,0.008 -1.098,-0.478 -0.212,0.053 -0.394,0.207 -0.044,0.464 0.025,1.149 0.058,0.88 -0.145,0.506 -0.145,0.343 -0.439,0.921 -0.988,-0.626 -0.674,-0.416 -0.433,0.553 -1.085,1.01 -0.556,1.976 -0.032,0.064 -0.329,0.499 -0.421,0.229 -0.319,0.113 -0.186,0.581 0.433,0.829 0.222,0.436 0.207,0.702 -0.038,0.445 -0.048,0.276 -0.465,0.564 -0.992,1.481 -0.918,1.534 -0.376,0.438 0.17,1.288 -0.305,0.376 -0.622,0.424 -0.318,0.163 -0.342,0.096 -1.052,0.169 0.187,1.36 0.071,0.599 -10e-4,0.354 -0.109,0.345 -0.13,0.657 -0.196,2.33 -0.15,0.249 -0.207,0.625 -0.666,1.493 -0.534,0.986 -0.771,1.411 0.627,0.443 0.572,0.323 0.119,0.495 0.079,0.824 -0.019,0.559 -0.219,0.501 -0.17,0.351 -0.119,0.171 -0.813,-0.17 -1.042,-0.219 -0.27,-0.002 -0.606,0.158 -0.547,0.323 -0.288,0.272 -0.077,0.108 -0.364,0.618 -0.648,1.092 -0.355,0.475 0.104,0.653 -0.596,1.255 0.39,1.258 0.017,0.042 0.207,0.506 -0.216,0.326 -0.091,0.175 0.031,0.575 0.057,0.641 -0.05,0.375 -0.021,0.415 0.53,1.855 -0.006,0.432 -0.026,0.278 -0.164,1.141 -0.22,1.521 0.384,0.397 0.546,0.474 0.307,0.187 0.453,0.562 0.346,0.547 -0.048,0.362 -0.1,0.399 -0.145,0.278 -0.137,0.381 -0.061,0.281 -0.064,0.075 -0.605,0.031 -0.319,0.106 -0.167,0.119 0.057,0.638 0.367,1.163 0.305,0.822 0.098,0.54 -0.1,0.546 -0.104,0.279 -0.003,0.375 -0.08,0.744 -0.236,0.375 -0.309,0.408 -0.344,0.304 -0.273,0.085 -0.234,0.035 -0.158,0.154 -0.143,0.453 -0.132,0.474 -0.431,0.582 0.012,0.202 0.164,0.686 0.154,0.778 -0.13,0.725 -0.111,0.757 -0.195,0.503 -0.278,0.18 -0.204,-0.09 -0.231,-0.69 -0.012,-0.163 -0.057,-0.212 -0.656,-0.211 -0.116,0.007 -0.258,-0.124 -0.151,-0.035 -0.31,-0.071 -0.258,-0.614 -0.273,-0.512 -0.04,-0.214 0.01,-0.963 -0.084,-0.43 -0.026,-0.47 -0.172,0.382 0.1,0.603 -0.212,0.252 -0.269,0.123 0.025,0.351 0.11,0.067 0.023,0.363 -0.065,0.538 -0.528,1.189 -0.106,0.127 -0.073,0.16 -0.27,-0.106 -0.347,0.33 -0.329,0.053 -0.119,-0.373 -0.463,-0.495 -0.218,0.028 0.196,0.244 0.194,0.317 -0.11,0.209 -0.108,0.137 -0.189,0.071 -0.677,0.413 0.241,0.277 -0.205,0.314 -0.236,0.046 -0.126,0.146 -0.044,0.198 -0.701,0.565 -1.142,1.441 -0.587,0.406 -0.41,0.42 -0.361,-0.01 -0.454,0.357 -1.15,0.312 -0.763,-0.141 -0.531,0.124 -0.285,-0.245 -0.037,-0.168 0.014,-0.098 0.047,-0.118 -0.099,-0.039 -0.208,-0.02 -0.089,0.118 -0.012,0.269 -0.099,0.07 -0.396,-0.154 -0.1,-0.138 0.142,-0.281 0.244,-0.253 -0.044,-0.052 -0.047,-0.154 -0.119,-0.02 -0.354,0.038 -0.288,-0.046 -0.938,-0.571 -0.219,-0.306 -0.757,-0.489 -0.339,-0.52 -0.193,-0.572 0.015,-0.52 0.093,-0.827 0.159,-0.205 0.679,0.291 0.687,0.484 0.107,-0.024 0.216,-0.38 0.418,-0.306 -0.119,-0.084 -0.622,0.351 -0.231,-0.194 -0.359,-0.396 0,-0.205 0.167,-0.205 0.056,-0.277 -0.087,-0.262 0.041,-0.357 0.277,-0.379 0.416,-0.385 0.3,-0.373 0.308,-0.229 -0.032,-0.077 -0.352,0.146 -0.337,0.248 -0.396,0.415 -0.483,0.335 -0.357,0.13 -0.17,0.108 -0.262,0.104 -0.271,0.479 -0.296,0.205 -0.53,0.021 -0.117,-0.35 0.15,-1.248 0.16,-0.611 0.176,-0.433 0.276,-0.073 0.194,-0.318 0.161,0 0.14,0.147 0.541,0.142 0.267,-0.405 0.347,-0.06 0.633,-0.41 -0.013,-0.075 -0.428,0.09 -0.26,0.013 -0.372,0.103 -0.198,-0.074 -0.093,-0.307 0.149,-0.278 0.597,-0.665 0.207,-0.292 0.117,-0.273 -0.019,-0.186 0.1,-0.386 0.584,-0.675 0.476,-0.31 0.156,0.266 -0.133,0.831 10e-4,0.342 0.376,-1.21 0.166,-0.289 0.188,-0.204 0.456,-0.137 0.129,-0.192 -0.532,0.063 -1.289,0.464 -0.543,0.413 -0.145,0.317 -0.377,0.478 -0.177,0.309 -0.078,0.454 -0.212,0.246 -0.287,0.091 -0.398,0.572 -0.176,0.459 -0.396,0.364 -0.251,0.28 -0.083,0.1 -0.136,0.274 -0.113,0.02 -0.098,-0.161 -0.017,-0.354 0.04,-0.568 0.191,-0.41 0.091,-0.401 -0.126,-0.375 0.088,-0.238 0.167,0.009 0.312,0.108 0.331,-0.017 0.545,-0.297 -0.087,-0.174 -0.235,-0.025 -0.439,0.025 -0.369,-0.291 -0.287,-0.58 -0.13,-0.778 0.087,-0.223 1.062,-0.796 0.286,-0.363 -0.166,-0.036 -0.399,0.44 -0.57,0.272 -0.36,-0.379 -0.187,-0.409 -0.108,-0.867 0.039,-0.447 -0.045,-0.589 0.244,-0.192 0.272,0.102 0.269,0.038 0.609,-0.052 1.344,-0.355 0.866,0.211 0.352,-0.019 0.539,-0.306 0.471,-0.031 0.353,0.233 0.193,0.268 0.024,0.357 0.163,0.238 0.11,-0.078 -0.088,-0.283 -0.018,-0.439 1.417,-0.499 0.167,-0.194 -0.563,-0.068 -0.161,-0.457 0.297,-0.694 -0.028,-0.09 -0.313,0.367 -0.154,0.514 0.062,0.41 -0.062,0.19 -0.288,0.087 -0.648,0.032 -0.416,-0.174 -0.385,-0.094 -0.131,-0.131 0.044,-0.293 -0.073,-0.061 -0.16,0.263 -0.142,0.523 -0.306,0.121 -0.845,-0.194 -1.223,0.114 -0.549,0.262 -0.355,-0.034 -0.612,-0.46 -0.238,-0.367 -0.089,-0.742 0.036,-0.327 0.476,-0.138 0.241,0.009 0.226,-0.176 -0.2,-0.115 -0.281,-0.226 -0.191,-0.452 -0.289,-0.148 -0.193,-0.387 -0.049,-0.585 0.055,-0.408 0.154,-0.131 0.371,0.089 0.978,-0.069 0.92,0.416 0.625,0.234 1.265,-0.118 0.741,-0.371 -0.136,-0.102 -0.804,0.214 -0.743,-0.009 -1.31,-0.419 -0.537,-0.135 -0.579,0.06 -0.301,-0.127 -0.177,-0.416 0.131,-0.798 0.274,-0.172 0.148,0.208 0.179,0.013 0.182,-0.334 0.173,-0.191 0.138,-0.432 0.519,-0.411 0.219,-0.035 0.314,-0.189 0.201,0.054 0.128,0.19 0.163,0.157 0.352,-0.019 1.042,-0.33 0.112,-0.097 0.203,-0.271 -0.66,0.121 -0.548,0.192 -0.353,0.054 -0.05,-0.241 0.13,-0.213 0.204,-0.228 0.099,-0.389 0.225,-0.166 0.243,0.009 0.502,-0.071 0.354,-0.101 0.607,0.067 0.906,0.149 0.583,0.362 0.22,-0.033 0.233,-0.096 0.106,-0.131 -0.458,-0.15 -0.026,-0.215 0.057,-0.162 0.748,-0.299 0.816,-0.066 -0.14,-0.241 -1.788,0.364 -0.467,-0.249 -0.369,0.002 -0.241,0.142 -0.688,0.172 -0.126,-0.122 0.131,-0.422 0.412,-0.694 0.034,-0.17 0.191,-0.168 1.068,-0.405 0.513,-0.472 0.231,-0.06 0.229,0.033 0.349,-0.055 0.674,0.135 0.311,0.59 0.279,0.185 0.877,0.734 -0.039,-0.21 -0.76,-0.997 -0.29,-0.248 -0.217,-0.492 0.074,-0.466 0.244,-0.312 0.867,-0.167 0.155,-0.181 0.016,-0.311 -0.133,-0.213 -0.319,0.012 -0.263,-0.132 -0.072,-0.336 0.105,-0.228 0.5,-0.417 0.273,-0.135 0.474,-0.146 0.823,0.33 0.063,0.172 -0.231,0.414 0.023,0.232 0.202,0.025 0.47,-0.698 0.553,-0.097 0.229,-0.15 0.266,-0.095 0.379,0.632 0.167,0.202 0.125,0.083 0.121,0.524 0.117,0.028 0.167,-0.262 0.303,-0.139 0.425,-0.091 0.704,0.139 0.319,-0.103 0.156,0.015 -0.15,-0.471 -0.093,-0.137 0.145,-0.422 0.151,-0.165 0.486,-0.297 0.464,-0.133 0.303,-0.282 0.407,-0.261 -0.064,-0.208 -0.113,-0.242 -0.264,-0.015 -0.107,-0.132 0.334,-0.314 0.458,-0.35 -0.08,-0.138 -0.344,-0.156 -0.261,0.117 -0.388,0.271 -0.452,0.428 0.147,0.125 0.226,0.359 -0.315,0.476 -1.672,1.259 -0.797,0.367 -0.368,-0.057 -0.088,-0.343 -0.169,-0.253 -0.182,-0.525 -0.31,0.014 -0.176,0.116 -0.076,-0.172 0.133,-0.562 0.262,-0.445 0.439,-0.337 0.211,-0.408 0.198,-0.649 0.635,-0.62 0.924,-1.542 0.753,-0.495 0.276,-0.543 0.444,-0.24 0.379,-0.425 0.297,-0.042 0.54,-0.384 0.306,-0.458 -0.2,-0.028 -0.475,0.297 -0.269,0.12 0.019,-0.491 0.13,-0.505 0.391,-0.463 1.881,-1.351 0.188,0.224 0.225,0.396 0.566,-0.089 0.646,-0.767 0.497,-0.837 -0.269,0.146 -0.293,0.343 -0.571,0.475 -0.264,0.075 -0.151,-0.062 -0.084,-0.317 -0.198,-0.103 -0.179,0.071 -0.185,-0.226 -0.033,-0.559 0.236,-0.835 0.187,-0.554 0.202,-0.421 0.794,-1.2 0.171,-0.658 0.359,-0.348 0.466,0.077 0.141,-0.101 -0.16,-0.434 -0.508,-0.344 -0.031,-0.217 1.693,-0.571 0.806,0.019 0.239,-0.285 0.438,-0.184 0.332,-0.35 -0.171,-0.155 -0.819,0.322 -0.512,0.151 -0.231,-0.005 -0.181,0.11 -0.654,0.042 -0.143,-1.397 0.103,-0.763 0.244,0.016 0.056,-0.731 0.282,-0.433 0.389,-0.097 0.196,-0.185 0.283,-0.378 0.468,0.087 0.481,-0.084 -0.12,-0.179 -0.597,-0.23 -0.147,-0.396 0.21,-0.222 0.229,-0.163 0.202,-0.029 0.399,-0.777 0.243,-0.333 0.271,0.058 0.378,-0.344 0.372,0.117 0.359,-0.225 0.491,-0.149 1.797,-0.057 0.053,-0.321 -0.378,-0.074 -1.335,-0.083 -0.682,0.007 -0.287,0.083 -0.105,-0.112 0.019,-0.192 0.248,-0.305 0.117,-0.337 0.496,-0.826 0.581,-0.552 0.445,0.141 0.473,0.527 0.337,0.066 0.157,0.17 0.246,0.724 0.117,0.023 -0.053,-0.695 0.325,-0.568 -0.084,-0.157 -0.488,0.206 -0.374,-0.214 -0.295,-0.428 -0.084,-0.392 0.184,-0.388 0.173,-0.196 -0.117,-0.229 -0.738,0.611 -0.522,0.143 -0.206,-0.085 0.111,-0.554 -0.062,-0.441 0.7,-1.09 0.241,-0.126 0.393,0.088 0.355,0.308 0.297,-0.049 0.322,-0.165 -0.044,-0.296 -0.698,-0.118 -0.18,-0.246 0.065,-0.243 0.479,-0.256 0.477,-0.463 0.546,-0.135 0.439,-0.351 0.085,0.08 0.074,0.138 0.158,1.298 0.393,1.052 0.145,0.038 -0.151,-0.894 0.141,-0.258 0.178,-0.196 0.056,-0.224 -0.204,-0.076 -0.167,-0.322 -0.238,-1.033 0.082,-0.27 0.517,-0.554 0.648,-0.127 0.69,0.388 0.243,0.004 0.4,-0.104 0.679,-0.32 0.4,-0.122 0.208,0 0.051,-0.162 -0.193,-0.104 -0.062,-0.101 -0.151,-0.058 -0.628,0.173 -1.733,-0.055 -0.167,-0.185 -0.031,-0.321 0.184,-0.46 0.202,-0.255 0.654,-0.459 0.691,-0.062 0.729,-0.819 0.278,-0.616 0.158,-0.955 0.444,-0.776 1.114,-0.443 0.045,-0.196 -0.118,-0.407 0.01,-0.734 0.305,-0.859 0.203,-0.299 0.094,-0.036 0.24,0.282 0.292,0.598 0.457,0.342 0.599,0.059 0.16,-0.168 -0.465,-0.34 -0.353,-0.446 -0.028,-0.449 0.167,-0.238 0.26,0.026 0.326,-0.05 0.304,-0.303 0.044,-0.213 0.013,-0.29 0.076,-0.295 0.446,-0.707 1.374,-0.461 0.1,0.188 -0.074,1.363 -0.158,0.876 0.005,0.638 0.268,-0.638 0.358,-1.757 0.27,-0.832 0.304,-0.479 0.217,-0.108 0.215,-0.249 0.284,-0.148 0.087,0.191 0.09,0.443 -0.153,1.546 0.015,0.486 -0.171,0.649 -0.655,1.439 0.03,0.183 0.148,-0.068 0.253,-0.236 0.812,-1.368 0.709,0.173 0.009,-0.112 -0.228,-0.403 -0.277,-0.387 -0.084,-0.48 0.037,-1.288 0.214,-0.513 0.612,0.054 0.367,-0.071 0.171,0.233 0.367,-0.017 0.254,-0.93 0.503,-0.082 0.442,0.616 0.531,0.413 0.427,0.592 0.121,-0.162 -0.23,-1.386 -0.252,-0.508 -0.547,-0.265 -0.583,-0.629 -0.151,-0.28 0.026,-0.208 0.514,-0.201 0.678,0.231 0.604,-0.527 0.165,0.145 0.463,-0.276 0.288,0.372 0.177,-0.11 0.102,-0.499 0.739,-0.31 0.469,0.287 0.251,0.295 0.117,0.567 0.179,1.115 0.366,0.599 0.228,0.293 0.269,0.081 0.13,-0.298 -0.252,-0.36 -0.068,-0.34 0.121,-0.846 0.141,-0.333 0.791,-1.269 0.662,-0.662 0.396,-0.056 0.694,-1.493 0.196,-0.273 0.181,-0.063 -0.046,-0.368 -0.379,-0.233 -0.013,-0.458 0.5,-0.558 0.607,-0.941 0.299,-0.063 0.188,0.262 0.591,0.425 0.362,0.485 0.262,0.244 0.17,-0.051 0.141,-0.364 0.17,-0.171 0.375,0.096 0.224,0.234 0.175,0.031 0.158,0.142 0.037,0.311 -0.325,0.339 -0.554,0.893 -0.546,1.01 -0.18,0.53 -0.177,1.383 -0.427,0.879 -0.033,0.614 0.172,0.288 0.471,-0.226 0.581,-0.819 0.145,-0.874 1.453,-2.391 0.682,-1.334 0.774,-1.113 0.434,-0.231 0.204,0.739 -0.164,0.96 -0.329,0.609 0.243,0.279 -0.046,0.72 -0.076,0.399 -0.048,0.417 0.003,0.366 0.228,-0.098 0.907,-0.752 0.23,-0.818 0.213,-0.616 0.102,-0.533 0.353,-0.507 0.666,-0.004 0.026,-0.2 -0.808,-0.697 -0.095,-0.319 0.271,-0.426 0.745,-0.816 0.383,0.09 0.229,0.186 0.917,0.142 0.704,0.583 -0.027,0.909 -0.157,0.378 -0.154,0.232 -0.901,0.684 -0.148,0.337 0.283,0.116 0.608,-0.34 0.158,0.309 -0.194,0.77 -0.033,1.149 -0.07,0.667 0,0.606 0.076,0.325 0.245,-1.29 0.083,-0.333 0.358,-0.489 0.133,-0.989 0.35,-1.195 0.395,-0.698 0.229,-0.191 0.76,0.027 0.326,0.263 0.288,0.583 0.215,0.233 0.678,0.247 0.232,0.309 0.043,0.184 0.166,0.037 0.458,-0.439 0.297,-0.073 0.484,0.684 -0.097,0.505 0.028,0.16 0.586,-0.032 0.488,0.198 0.927,1.028 0.097,0.478 -0.046,0.578 -1.338,0.633 -0.578,0.604 -0.946,0.232 -3.212,-0.404 0.065,0.437 2.237,0.951 0.128,0.271 -0.072,0.568 -10e-4,0.455 0.042,0.31 0.165,0.288 0.273,0.135 0.557,-0.071 0.274,0.155 0.188,-0.229 0.07,-0.773 0.162,-0.171 0.312,0.225 0.136,0.826 0.087,0.085 0.157,-0.588 0.309,0.042 0.337,-0.049 0.435,0.097 z m -20.85,-8.59 -0.055,0.268 -0.095,0.26 -0.23,0.274 -0.666,1.081 -0.391,0.173 -0.124,0.169 -0.156,0.101 -0.486,-0.147 -0.142,0.218 -0.134,0.146 -0.352,0.056 -0.207,-0.047 -0.533,-0.398 -0.317,-0.432 -0.172,-0.37 0.493,0.007 0.175,-0.09 0.331,0.078 0.199,-0.381 0.42,0.046 0.807,-0.265 0.296,0.148 0.677,-0.889 0.212,0.023 0.324,-0.255 0.126,0.226 z m 1.619,2.107 -0.535,0.336 -0.31,-0.289 -0.13,-0.297 -0.019,-0.661 0.072,-0.404 0.251,-0.209 0.163,0.153 0.043,0.128 0.292,0.125 0.343,0.416 -0.17,0.702 z m -1.128,0.152 0.052,0.394 0.02,0.324 -0.262,0.467 -0.604,0.611 0.035,0.164 -0.209,0.157 -0.313,0.115 -0.165,-0.111 0.022,-0.523 -0.05,-0.156 -0.237,0.208 -0.247,-0.267 0,-0.268 0.065,-0.233 0.229,-0.355 0.381,-0.245 0.251,0.092 0.838,-0.943 0.09,0.198 0.104,0.371 z m -10.799,2.778 0.143,0.097 0.142,-0.06 0.117,0.085 0.235,0.436 0.253,0.171 0.012,0.218 -0.231,0.212 -0.305,0.064 -0.327,-0.074 -0.096,-0.272 -0.101,-0.453 -0.273,-0.445 -0.041,-0.391 0.238,-0.062 0.234,0.474 z m -1.438,1.241 0.249,0.447 0.221,-0.043 0.066,-0.168 0.15,-0.084 0.304,0.237 -0.043,0.401 -0.421,0.505 -0.302,0.718 -0.386,0.166 -0.186,-0.086 -0.346,0.413 -0.276,0.428 -0.287,0.54 -0.018,0.278 -0.045,0.212 -1.051,0.21 -0.382,0.139 -0.405,-0.179 -0.192,-0.356 0.062,-0.193 0.404,-0.077 0.013,-0.331 0.103,-0.202 0.131,-0.111 0.096,-0.424 0.16,-0.111 0.298,0.104 0.201,-0.308 0.113,-0.053 0.139,0.255 0.067,-0.351 -0.067,-0.321 0.035,-0.217 0.385,-0.565 0.167,-0.413 0.24,-0.267 0.231,0.042 0.067,-0.394 -0.067,-0.404 0.025,-0.264 0.204,-0.642 0.224,-0.027 0.103,0.571 0.016,0.925 z m 4.277,-0.192 -0.151,0.191 -0.232,0.078 -0.125,-0.118 -0.178,-0.078 -0.198,0.035 -0.166,-0.351 0.019,-0.295 0.227,-0.4 0.455,-0.228 0.368,0.094 0.094,0.117 -0.113,0.955 z m 25.755,2.396 -0.533,0.237 -0.062,-0.195 0.117,-0.304 0.14,-0.624 0.219,0.025 0.222,0.238 0.174,0.284 -0.277,0.339 z m -34.949,1.62 0.337,0.459 0.151,-0.14 0.299,-0.053 0.222,0.162 0.182,0.291 0.215,0.013 0.135,0.38 0.069,0.493 -0.156,0.367 -0.222,0.167 -0.06,0.431 0.084,0.603 -0.498,0.206 -0.576,0.092 -0.226,-0.288 -0.46,0.526 -0.457,0.817 -0.22,0.096 -0.016,-0.258 -0.328,-0.179 -0.42,-0.01 0.014,-0.192 0.077,-0.135 0.362,-0.201 0.072,-0.416 -0.066,-0.744 0.064,-0.363 0.014,-0.25 0.228,-0.294 0.78,0.138 0.095,-0.281 -0.059,-0.177 -0.403,-0.31 0.062,-0.209 0.291,-0.187 0.275,-0.025 0.083,-0.316 0.014,-0.139 0.042,-0.074 z m -4.891,8.13 0.034,0.054 0.382,-0.74 0.424,-0.231 0.026,-0.259 0.164,-0.25 -0.019,-0.41 0.083,-0.333 0.216,-0.089 0.135,-0.113 0.149,-0.063 0.271,0.271 0.152,0.3 0.19,0.668 -0.079,0.644 -0.509,0.501 -0.404,0.225 -0.409,0.572 -0.205,0.467 -0.177,0.101 -0.111,-0.038 -0.099,-0.112 -0.207,0 -0.228,0.404 -0.688,0.328 -0.27,-0.095 -0.012,-0.402 -0.161,0.033 -0.258,0.482 -0.252,0.161 -0.169,0.049 -0.311,-0.181 -0.836,0.818 -0.784,0.152 -0.258,-0.094 -10e-4,-0.5 0.507,-0.642 0.415,-0.447 1.43,-0.313 0.891,-1.336 0.215,-1.463 0.21,-0.532 -0.099,-0.301 -0.239,-0.053 -0.015,-0.464 0.125,-0.508 0.467,-0.7 0.26,-0.299 0.423,-0.849 0.204,-0.191 0.232,0 0.229,0.223 -0.041,0.455 -0.343,0.818 -0.508,0.694 0.062,0.497 0.202,0.407 0.05,0.694 0.013,0.666 -0.385,0.896 -0.084,0.428 z m -1.553,-2.955 0.365,0.784 0.167,0.457 -0.135,0.859 -0.355,0.432 -0.547,0.077 -0.384,-0.036 -0.242,-0.208 -0.03,-0.233 -0.14,-0.069 -0.369,0.3 -0.256,0.04 -0.326,-0.232 -0.088,-0.372 0.346,-0.467 0.16,-0.364 0.383,0.032 0.096,0.113 0.217,0.071 0.132,-0.439 -0.03,-0.304 0.097,-0.212 0.463,0.153 10e-4,-0.83 0.18,-0.058 0.074,0.032 0.133,0.175 0.088,0.299 z m -3.744,5.209 0.167,0.129 0.436,-0.038 0.088,0.048 -0.063,0.213 -0.189,0.234 -0.397,0.144 -0.179,0.357 -0.128,0.121 -0.343,0.001 -0.203,0.083 -0.249,0.316 -0.199,-0.233 -0.056,0.166 -0.036,0.296 -0.111,0.086 -0.344,0.107 -0.083,-0.689 0.158,-0.25 0.124,-0.3 0.19,-0.046 0.17,0.025 0.307,-0.648 0.42,-0.185 0.271,-0.021 0.249,0.084 z m -2.53,2.938 -0.415,0.393 0.151,-0.718 0.224,-0.73 0.31,-0.419 0.154,0.164 -0.071,0.351 10e-4,0.346 -0.066,0.163 -0.288,0.45 z m -1.548,13.121 -0.26,0.045 0.043,-0.305 0.21,-0.29 0.081,-0.198 0.042,-0.234 0.186,-0.177 0.262,0.227 0.005,0.384 -0.13,0.35 -0.439,0.198 z m 0.252,0.973 -0.225,0.02 0.002,-0.281 0.129,-0.256 0.204,-0.171 0.263,-0.045 0.294,-0.02 0.089,0.136 -0.169,0.191 -0.587,0.426 z m -1.52,1.881 -0.186,0.209 -0.347,-0.06 -0.037,-0.18 0.099,-0.36 0.211,-0.149 0.272,0.029 0.087,0.15 -0.099,0.361 z m -2.067,5.092 -0.147,0.184 -0.327,-0.147 -0.645,0.114 -0.26,-0.179 0.207,-0.35 0.583,-0.368 0.313,0.017 0.319,0.452 -0.043,0.277 z m -7.748,7.741 -0.322,0.015 -0.194,-0.142 0.461,-0.282 0.723,-0.27 0.069,-0.171 0.087,-0.021 0.125,0.21 0.016,0.288 -0.08,0.143 -0.885,0.23 z m -1.034,2.07 -0.275,0.004 -0.327,-0.096 -0.205,-0.205 -0.032,-0.181 0.377,-0.225 0.379,-0.132 0.176,0.248 0.013,0.406 -0.106,0.181 z m -8.823,13.55 -0.249,0.073 -0.2,-0.063 0.071,-0.554 0.104,-0.09 0.151,-0.032 0.163,0.297 -0.04,0.369 z m 0.357,4.448 0.009,0.671 -0.258,-0.051 -0.116,-0.257 -0.034,-0.165 0.021,-0.389 -0.058,-0.402 0.076,-0.2 0.094,-0.027 0.167,0.358 0.099,0.462 z\"\n\t\t\t\tid=\"NO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 722.17475,381.9264 0.113,0.086 0.012,0.141 -0.021,0.156 -0.116,0.337 -0.106,0.236 -0.123,0.499 -0.111,0.863 0.024,0.151 0.331,0.493 0.129,0.38 0.013,0.257 -0.141,0.433 -0.159,0.487 -0.078,0.11 -0.09,0.039 -0.409,-0.17 -0.281,0.024 -0.324,0.094 -0.338,-0.019 -0.28,-0.056 -0.353,0.196 -0.339,-0.106 -0.217,-0.121 -0.144,-0.339 -0.061,-0.043 -0.713,0.354 -0.171,0.022 -0.443,-0.19 -0.362,-0.189 -0.136,-0.056 -0.35,-0.074 -0.314,-0.043 -0.343,-0.117 -0.426,0.154 -0.172,-0.013 -0.16,-0.111 -0.084,-0.227 -0.021,-0.216 -0.145,-0.148 -0.223,-0.034 -0.315,0.133 -0.459,0.176 -0.148,-0.03 -0.136,-0.05 -0.05,-0.047 -0.063,-0.203 -0.073,-0.045 -0.107,-0.007 -0.188,-0.049 -0.234,-0.151 -0.706,-0.357 -0.089,-0.159 0.003,-0.352 -0.039,-0.145 -0.086,-0.153 -0.363,-0.156 -0.704,-0.25 -0.39,-0.2 -0.186,0.094 -0.358,0.083 -0.192,0.181 -0.23,-0.058 -0.547,-0.19 -0.294,-0.028 -0.177,0.065 -0.041,0.108 -0.224,0.124 -0.213,-0.099 -0.421,-0.132 -0.368,-0.073 -0.559,-0.162 -0.064,-0.244 -0.094,-0.242 -0.132,-0.043 -0.501,0.048 -0.46,-0.267 -0.493,-0.343 -0.21,-0.112 -0.139,-0.041 -0.119,0.045 -0.136,0.079 -0.124,0.023 -0.268,-0.148 -0.341,-0.21 -0.42,-0.259 -0.492,-0.361 -0.202,-0.205 -0.091,-0.153 -0.105,-0.145 -0.428,-0.237 -0.338,-0.187 -0.408,-0.226 -0.068,-0.045 -0.154,-0.135 -0.237,-0.169 -0.194,-0.05 -0.062,0.094 -0.047,0.098 -0.169,-0.023 -0.264,-0.173 -0.276,-0.181 -0.215,-0.168 -0.222,-0.173 -0.054,-0.128 0.093,-0.395 0.129,-0.339 0.109,-0.076 0.178,-0.225 0.065,-0.395 -0.003,-0.338 0.173,-0.477 0.24,-0.508 0.413,-0.545 0.178,-0.181 0.201,-0.124 0.381,-0.403 0.079,-0.066 0.167,-0.104 0.164,-0.026 0.124,0.05 0.127,0.211 0.154,0.201 0.187,-0.01 0.219,-0.172 0.454,-0.79 0.631,-0.162 0.598,0.082 0.529,0.115 0.156,0.264 0.102,0.279 0.066,0.141 0.174,0.166 0.746,0.394 0.433,0.355 0.599,0.476 0.448,0.209 0.397,0.018 0.224,0.186 0.337,0.371 0.285,0.425 0.355,0.393 0.246,-0.013 0.335,-0.127 0.409,-0.167 0.241,0.082 0.223,0.109 0.074,0.203 0.135,0.384 0.148,0.398 0.234,0.139 0.278,0.204 0.153,0.162 0.52,0.298 0.073,0.121 0.105,0.082 0.127,0.052 0.105,0.061 0.164,0.021 0.6,-0.178 0.16,0.022 0.092,0.033 0.003,0.065 -0.108,0.278 -0.092,0.356 0.095,0.178 0.252,0.074 0.556,0.053 0.751,-0.005 0.229,0.18 0.226,0.27 0.229,0.461 0.091,0.195 0.113,0.056 0.195,-0.077 0.033,-0.189 0.008,-0.282 0.164,-0.097 0.105,0.072 0.122,0.22 0.31,0.198 0.225,0.097 0.214,-0.034 0.09,-0.076 0.105,-0.385 0.169,-0.056 0.213,0.025 0.082,0.077 0.086,0.154 0.259,0.073 0.257,0.096 0.241,0.126 0.341,0.285 0.419,0.053 0.487,-0.007 0.256,0.007 0.188,0.021 0.169,-0.02 0.499,-0.204 0.204,-0.015 0.253,0.023 z\"\n\t\t\t\tid=\"NP\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 943.46275,464.3614 -0.055,0.096 -0.064,-0.012 -0.026,-0.064 0.019,-0.068 0.071,-0.027 0.047,0.021 z\"\n\t\t\t\tid=\"NR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 1008.6787,517.1444 -0.281,0.162 -0.125,-0.192 0.111,-0.244 0.132,-0.063 0.078,-0.008 0.114,0.226 z\"\n\t\t\t\tid=\"NU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 990.79075,598.9554 -0.101,0.101 -0.172,-0.005 -0.301,0.395 0.019,-0.295 -0.09,-0.115 -0.258,0.027 -0.049,0.065 0.173,0.078 0.038,0.043 -0.165,0.171 0.172,0.367 0.15,-0.013 0.146,0.287 -10e-4,0.09 -0.334,0.111 -0.176,0.155 -0.157,-0.006 -0.074,-0.03 -0.088,-0.277 -0.007,-0.116 0.193,-0.203 0.109,-0.207 -0.088,-0.19 -0.223,-0.123 -0.486,0.056 -0.112,-0.041 0.243,-0.256 0.264,0.028 0.284,-0.184 1.091,0.087 z m 0.003,2.262 -0.124,0.034 0.018,-0.223 -0.042,-0.144 0.21,-0.047 0.09,0.171 -0.152,0.209 z m -29.619,-34.16 0.042,0.156 0.155,-0.111 0.116,-0.175 0.187,-0.178 -0.025,0.287 0.096,0.063 0.62,0.2 0.128,0.167 0.132,0.048 0.074,-0.094 0.088,-0.051 0.224,0.105 0.506,0.292 0.042,0.101 -0.026,0.15 0.025,0.159 0.069,0.127 0.168,0.029 0.224,-0.188 0.105,-0.023 0.148,0.267 0.056,0.151 -0.023,-0.005 0.097,0.15 0.128,0.148 0.221,0.439 -0.033,0.154 -0.065,0.139 0.203,0.407 -0.133,0.028 -0.399,-0.069 0.013,0.082 0.233,0.299 0.196,0.423 0.157,0.255 0.554,0.793 -0.083,0.282 0.013,0.187 -0.071,0.161 0.189,0.422 -0.118,0.131 -0.078,0.433 -0.086,0.076 0.011,0.158 0.224,0.042 0.135,0.067 0.116,0.129 0.072,-0.155 0.098,-0.042 0.267,0.207 0.556,0.207 0.153,0.077 0.075,0.167 0.057,0.404 0.108,0.178 0.213,0.034 0.229,-0.054 0.072,-0.147 -0.046,-0.396 -0.165,-0.632 -0.001,-0.205 0.023,-0.206 -0.038,-0.204 -0.083,-0.192 -0.089,-0.147 -0.114,-0.124 0.04,-0.193 0.171,-0.087 0.104,0.163 0.085,0.197 0.431,0.584 0.255,-0.041 0.023,0.242 0.173,0.246 0.096,0.289 0.126,0.865 0.193,0.817 0.35,0.356 0.041,0.171 -0.213,-0.088 -0.065,0.051 0.022,0.086 0.197,0.157 0.232,0.077 0.146,-0.011 0.137,0.057 0.907,0.534 0.436,0.208 1.1,0.341 0.314,0.027 0.174,-0.009 0.329,-0.118 0.295,-0.212 0.255,-0.317 0.22,-0.361 0.239,-0.175 0.271,-0.138 0.137,-0.128 0.144,-0.091 0.737,0.042 0.249,0.182 0.323,0.146 0.169,0.114 -0.057,0.232 -0.193,0.342 -0.148,0.375 -0.132,0.854 -0.089,0.866 -0.134,0.383 -0.244,0.295 -0.27,0.216 -0.305,0.102 -0.124,0.495 -0.061,0.581 0.018,0.146 0.098,0.116 0.04,0.173 -0.16,0.35 -0.093,-0.051 -0.132,-0.292 -0.119,-0.122 -0.366,-0.091 -0.373,-0.042 -0.323,0.026 -0.312,0.125 -0.471,0.253 -0.146,0.128 -0.128,0.163 -0.216,0.364 -0.052,0.446 0.01,0.234 0.077,0.181 0.401,0.247 -0.398,0.864 -0.353,0.902 -0.2,0.258 -0.23,0.239 -0.217,0.545 -0.379,0.47 -0.256,0.36 -0.2,0.374 -0.175,0.398 -0.373,0.563 -0.165,0.373 -0.216,0.311 -0.402,0.397 -0.428,0.341 -0.674,0.472 -0.188,0.156 -0.198,0.115 -0.246,-0.135 -0.049,-0.147 -0.059,-0.323 -0.054,-0.118 -0.313,-0.098 -0.415,0.156 -0.069,-0.033 -0.018,-0.074 0,-0.469 0.07,-0.132 -0.097,-0.073 -0.096,0.029 -0.033,0.12 0.061,0.104 -0.236,0.129 -0.246,0.003 -0.074,-0.051 -0.021,-0.086 0.06,-0.142 0.079,-0.125 0.457,-0.59 0.475,-0.781 0.409,-0.834 0.106,-0.428 0.15,-0.792 -0.123,-0.33 -0.152,-0.309 -0.411,-0.594 -0.549,-0.335 -0.355,-0.047 -0.336,-0.125 -0.316,-0.283 -0.288,-0.333 -0.571,-0.273 -0.602,-0.214 -0.343,-0.302 -0.082,-0.179 -0.054,-0.208 0.008,-0.193 0.043,-0.196 0.068,-0.15 0.107,-0.109 0.637,-0.389 0.675,-0.216 0.124,0.004 0.119,-0.035 0.169,-0.132 0.302,-0.302 0.088,-0.203 0.06,-0.644 0.097,-0.632 0.175,-0.723 0.264,-0.447 0.086,-0.274 -0.107,-0.451 0.099,-0.165 0.12,-0.1 0.136,-0.058 -0.23,-0.422 -0.271,-0.637 -0.057,-0.197 0.041,-0.195 0.066,-0.191 -0.169,-0.048 -0.098,-0.183 -0.243,-0.615 0.066,-0.098 0.141,0.066 0.209,0.443 0.034,-0.228 0.16,-0.141 0.17,-0.073 0.182,-0.016 -0.412,-0.494 -0.138,0.02 -0.182,0.079 -0.187,0.048 -0.183,-0.043 -0.171,-0.109 -0.088,-0.208 -0.107,-0.399 -0.067,-0.147 -0.542,-0.813 0.159,-0.026 0.438,0.407 0.085,-0.13 0.063,-0.187 -0.021,-0.208 -0.104,-0.158 -0.155,-0.102 -0.003,-0.185 0.118,-0.169 -0.007,-0.118 -0.251,-0.241 -0.1,-0.026 -0.045,0.112 0.072,0.167 -0.067,0.019 -0.609,-0.438 -0.188,-0.352 -0.154,-0.386 -0.016,0.157 0.023,0.221 0.241,0.443 0.391,0.496 0.067,0.132 -0.058,0.171 -0.136,0.049 -0.12,-0.108 -0.179,-0.425 -0.129,-0.212 -1.495,-2.184 0.191,-0.287 0.296,-0.242 0.068,-0.107 0.045,-0.131 -0.125,-0.022 -0.112,0.06 -0.128,0.111 -0.117,0.126 -0.148,0.281 -0.07,0.065 -0.175,-0.195 -0.067,-0.12 0.003,-0.144 -0.047,-0.091 -0.13,-0.029 -0.191,-0.286 -0.121,-0.146 0.202,-0.279 0.005,-0.367 -0.206,-0.384 -0.246,-0.353 -0.474,-0.569 -0.435,-0.601 0.471,-0.076 0.478,-0.013 -0.225,0.36 0.102,0.208 0.152,0.176 0.328,0.54 0.028,0.156 0.166,0.158 0.08,0.121 z m 6.38,4.621 0.022,0.189 -0.215,-0.067 -0.084,-0.143 -0.241,-0.148 -0.035,-0.044 -0.027,-0.287 0.127,-0.139 0.021,-0.059 0.056,-0.023 0.099,0.151 0.191,0.215 0.086,0.355 z m -6.813,17.94 0.323,0.018 0.301,-0.272 0.308,-0.221 0.323,-0.183 0.492,-0.419 0.129,-0.062 0.319,-0.08 0.139,-0.099 0.155,-0.023 -0.14,0.248 -0.176,0.083 -0.028,0.089 0.099,0.144 -0.153,0.201 0.006,0.251 -0.182,0.297 0.278,-0.122 0.103,-0.193 -0.053,-0.109 0.12,-0.216 0.187,-0.103 -0.074,-0.163 0.005,-0.129 0.229,0.048 0.113,-0.005 0.09,-0.051 0.165,-0.02 0.033,0.144 0.222,-0.018 -0.081,0.182 -0.169,0.211 -0.04,0.128 -0.271,0.213 -0.181,0.091 0.279,0.023 0.408,-0.285 0.242,-0.251 -0.007,0.314 -0.197,0.282 -0.168,0.178 -0.19,0.056 -0.189,0.145 -0.092,0.237 0.011,0.158 0.054,0.125 0.193,0.211 -0.217,0.408 0.242,-0.051 0.132,0.077 0.186,0.235 -0.112,0.272 -0.078,0.139 -0.472,0.575 -0.206,0.292 -0.241,0.187 0.003,0.307 -0.138,0.224 -0.704,0.769 -0.123,0.167 -0.555,1.229 -0.354,0.518 -0.203,0.177 -0.215,0.143 -0.515,0.245 -0.228,0.282 -0.251,0.234 -0.265,0.053 0.008,0.104 0.17,0.058 0.133,0.154 -0.099,0.173 -0.189,0.108 -0.196,0.031 -0.1,0.111 0.468,-0.079 0.132,0.09 0.024,0.191 0.05,0.172 0.113,0.228 0.394,0.146 0.354,0.068 0.069,0.106 0.053,0.365 -0.064,0.179 -0.079,0.118 -0.119,0.042 -0.288,0.023 -0.289,-0.083 -0.191,-0.221 -0.547,0.071 -0.146,0.047 -0.075,-0.04 0.303,-0.232 -0.158,-0.132 -0.132,-0.049 -0.143,0.077 -0.096,0.122 -0.028,0.2 -0.099,0.116 -0.15,0.033 -0.213,-0.167 -0.211,-0.238 -0.31,-0.24 0.048,0.148 0.238,0.363 0.119,0.241 -0.277,0.193 -0.29,0.15 -0.244,0.088 -0.23,0.138 -0.271,0.215 -0.149,0.076 -0.396,0.005 -0.212,0.068 -0.07,0.284 -0.148,0.181 -0.348,0.036 0.126,0.057 0.077,0.091 -0.23,0.858 -0.05,0.357 -0.043,0.612 -0.145,0.57 -0.413,-0.003 0.066,0.101 0.313,0.161 -0.059,0.243 -0.344,0.445 -0.144,0.257 -0.14,0.626 -0.21,0.579 -0.321,0.66 -0.003,0.119 0.113,0.169 0.137,0.146 0.008,0.206 -0.042,0.109 -0.153,0.028 -0.134,0.071 -0.716,0.182 -0.234,0.204 -0.193,0.366 -0.226,0.316 -0.752,0.702 -0.442,0.59 -0.089,0.169 -0.119,0.123 -0.967,0.28 -0.684,0.042 -0.372,-0.072 -0.359,-0.142 -0.199,-0.048 -0.38,0.087 -0.166,0.095 -0.298,-0.094 -0.236,0.071 -0.07,-0.069 -0.088,-0.173 0.049,-0.23 -0.065,-0.17 -0.15,-0.115 -0.101,-0.134 -0.115,-0.095 -0.314,-0.037 -0.496,0.06 -0.164,-0.006 -0.337,-0.563 -0.111,-0.138 -0.401,-0.179 -0.137,0.025 -0.215,0.3 -0.127,0.051 -0.754,0.032 -0.756,-0.097 -0.278,-0.112 -0.055,-0.259 0.574,-0.711 -0.17,0.095 -0.354,0.289 -0.226,-0.044 0.217,-0.315 0.019,-0.141 -0.045,-0.156 -0.295,0.265 -0.336,0.035 -0.043,-0.246 0.03,-0.285 0.068,-0.081 0.907,-0.149 0.327,-0.097 0.143,-0.153 -0.543,-0.052 -0.034,-0.214 0.078,-0.171 0.464,-0.284 -0.342,0.072 -0.379,-0.025 0.025,-0.3 0.099,-0.234 0.397,-0.007 -0.124,-0.161 -0.019,-0.224 0.11,-0.015 0.403,0.302 0.291,0.11 -0.123,-0.227 0.017,-0.143 0.077,-0.064 0.238,-0.045 -0.066,-0.04 -0.223,-0.058 -0.266,-0.172 -0.028,-0.182 0.01,-0.21 0.286,-0.289 0.169,0.172 0.2,-0.047 -0.153,-0.135 -0.093,-0.202 0.063,-0.133 0.607,-0.535 0.155,0.515 0.036,-0.171 0.009,-0.162 -0.073,-0.141 0.011,-0.142 0.07,-0.122 0.26,-0.121 0.338,-0.392 0.25,-0.182 0.203,0.117 0.139,0.157 -0.021,-0.156 -0.099,-0.129 -0.027,-0.359 0.454,-0.556 0.499,-0.528 0.479,-0.552 0.255,-0.2 0.543,-0.227 0.348,0.095 0.089,-0.018 0.516,-0.396 0.214,-0.103 0.195,0.141 0.12,0.051 -0.121,-0.362 0.095,-0.166 0.431,-0.292 0.54,-0.301 0.41,-0.125 0.302,-0.204 0.182,-0.005 -0.027,-0.154 0.031,-0.147 0.156,0.01 0.048,-0.058 -0.138,-0.08 0.445,-0.294 0.242,-0.325 0.126,-0.067 0.115,-0.098 0.142,-0.224 0.168,-0.074 0.156,0.035 0.113,0.11 -0.062,-0.183 -0.2,-0.104 0.215,-0.158 0.223,-0.11 0.217,0.079 0.213,0.128 -0.213,-0.196 -0.035,-0.121 0.259,-0.14 0.14,-0.043 0.196,0.262 -0.028,-0.208 0.046,-0.184 0.277,-0.301 0.363,-0.496 0.116,0.173 0.019,0.209 -0.018,0.253 0.075,-0.087 0.025,-0.229 -0.056,-0.403 0.454,-0.743 0.09,-0.083 0.1,-0.05 0.158,-0.02 -0.049,-0.112 -0.123,-0.108 0.124,-0.376 0.074,-0.429 0.105,-0.412 0.169,-0.402 0.185,-0.67 0.141,-0.14 0.381,-0.048 0.167,-0.094 0.278,-0.241 0.329,-0.436 0.176,-0.351 0.231,-0.905 0.13,-0.943 0.374,-0.697 0.549,-0.503 0.483,-0.382 0.198,-0.08 0.334,-0.024 0.318,0.105 -0.592,0.092 -0.061,0.227 -0.019,0.23 0.068,0.206 0.106,0.184 0.287,0.173 0.336,0.103 0.15,0.39 0.027,0.463 0.046,0.398 0.136,0.349 z m 2.243,-1.541 -0.376,0.215 0.016,-0.149 0.073,-0.325 0.171,-0.164 0.084,-0.011 0.172,-0.123 -0.019,0.272 -0.121,0.285 z m -19.464,16.519 0.121,0.477 -0.257,-0.091 -0.107,-0.145 0.196,-0.239 0.047,-0.002 z m -0.654,1.898 -0.015,0.197 -0.033,0.099 -0.098,10e-4 -0.146,-0.022 -0.143,-0.091 -0.092,0.026 -0.076,-0.033 0.099,-0.222 0.333,-0.118 0.128,0.095 0.043,0.068 z m 3.925,4.881 0.002,0.163 -0.293,-0.058 0.006,0.183 0.231,0.097 0.085,0.132 0.24,-0.038 0.054,0.197 -0.056,0.177 -0.16,0.129 -0.474,0.065 -0.308,0.257 -0.266,-0.039 -0.072,0.023 -0.305,0.276 -0.341,0.085 -0.093,-0.021 0.047,-0.246 0.254,-0.233 0.005,-0.224 0.065,-0.179 0.243,-0.126 0.004,-0.232 0.164,-0.207 -0.1,-0.445 0.053,-0.399 0.482,-0.022 0.533,0.685 z m -5.399,16.581 0.061,0.373 -0.154,0.001 -0.321,-0.104 -0.101,-0.159 -0.068,-0.039 -0.117,0.185 -0.188,0.009 -0.042,-0.062 0.074,-0.197 0.443,-0.372 0.083,-0.467 -0.006,-0.15 0.348,-0.035 0.082,0.057 0.037,0.064 -0.022,0.082 -0.141,0.154 -0.005,0.178 0.036,0.186 -0.115,0.09 0.06,0.16 0.056,0.046 z m 8.299,7.828 0.155,0.234 -0.298,0.102 -0.145,-0.085 -0.102,-0.107 -0.051,-0.151 0.161,0.016 0.139,-0.063 0.141,0.054 z\"\n\t\t\t\tid=\"NZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 632.89475,388.8674 -0.055,0.071 -0.081,0.007 -0.186,-0.061 -0.109,-0.141 0.021,-0.172 0.006,-0.318 0.053,-0.3 -0.015,-0.318 -0.144,-0.064 -0.101,0.018 0.235,-0.449 0.093,-0.069 0.087,0.029 0.217,-0.048 0.114,-0.244 0.091,-0.133 0.097,0.016 0.047,0.075 -0.034,0.371 -0.004,0.309 -0.12,0.944 -0.124,0.163 -0.063,0.132 -0.025,0.182 z m -0.046,1.283 -0.116,0.083 -0.083,-0.014 0.017,-0.165 0.05,-0.115 0.12,0.009 0.029,0.069 -0.017,0.133 z m -8.969,25.684 -0.17,-0.384 -0.17,-0.384 -0.171,-0.384 -0.17,-0.385 -0.119,-0.27 -0.2,-0.095 -0.122,-0.285 -0.124,-0.292 -0.124,-0.292 -0.124,-0.292 -0.124,-0.292 -0.125,-0.293 -0.124,-0.293 -0.124,-0.293 -0.124,-0.293 -0.125,-0.293 -0.124,-0.293 -0.124,-0.294 -0.124,-0.294 -0.124,-0.294 -0.125,-0.294 -0.124,-0.294 -0.124,-0.294 0.396,-0.139 0.482,-0.169 0.483,-0.169 0.482,-0.169 0.483,-0.169 0.482,-0.169 0.482,-0.17 0.483,-0.169 0.482,-0.169 0.483,-0.17 0.482,-0.17 0.482,-0.169 0.483,-0.17 0.482,-0.17 0.482,-0.17 0.483,-0.17 0.482,-0.17 0.299,-0.105 0.124,-0.396 0.103,-0.329 0.103,-0.329 0.103,-0.33 0.104,-0.33 0.103,-0.33 0.103,-0.33 0.103,-0.331 0.104,-0.331 0.103,-0.331 0.103,-0.331 0.103,-0.332 0.103,-0.332 0.104,-0.332 0.103,-0.332 0.103,-0.333 0.103,-0.333 0.095,-0.305 -0.178,-0.294 -0.238,-0.396 -0.25,-0.414 -0.234,-0.39 -0.171,-0.284 -0.206,-0.343 0.022,-0.441 -0.005,-0.221 0.021,-0.339 0.197,-0.471 0.233,-0.6 0.17,-0.399 0.147,-0.348 0.118,-0.279 0.065,-0.288 -0.035,-0.203 -0.077,-0.074 -0.065,-0.096 0.223,-0.154 0.418,-0.1 0.231,0.021 0.322,-0.074 0.256,-0.067 0.02,-0.09 -0.072,-0.152 -0.106,-0.222 -0.361,-0.023 -0.109,-0.062 0.126,-0.328 -0.005,-0.104 -0.048,-0.123 -0.053,-0.206 0.026,-0.266 0.074,-0.181 10e-4,-0.146 -0.035,-0.3 0.011,-0.267 0.076,-0.133 0.135,-0.124 0.127,-0.063 0.132,0.004 0.105,0.053 0.045,0.14 -0.028,0.097 -0.075,0.013 -0.026,0.041 0.107,0.187 0.155,0.183 0.12,-0.031 0.134,-0.144 0.142,-0.116 0.177,-0.103 0.129,-0.199 0.11,-0.129 0.098,-0.018 0.286,0.808 0.424,0.755 0.374,0.416 0.389,0.564 0.591,0.518 0.271,0.177 1.099,0.363 0.601,0.136 0.828,0.13 0.573,0.282 0.192,0.018 0.3,-0.084 0.219,0.007 0.548,0.384 0.161,0.364 0.228,0.192 0.201,0.302 0.131,0.316 0.463,0.481 0.326,0.541 0.332,0.4 0.297,0.249 0.45,0.098 0.358,0.112 0.04,0.267 -0.037,0.348 -0.068,0.257 -0.334,0.5 -0.08,0.308 -0.378,0.508 -0.41,0.851 -0.188,0.19 -0.661,0.438 -0.486,0.527 -0.576,0.914 -0.438,0.904 -0.168,0.289 -0.353,0.06 -0.231,-0.025 -0.16,-0.085 0.063,-0.247 0.038,-0.275 -0.213,0.029 -0.187,0.057 -0.437,0.675 -0.24,0.296 -0.051,0.375 -0.116,0.484 -0.171,0.445 -0.076,0.374 0.003,0.212 0.128,0.517 0.009,0.529 0.074,0.317 0.06,0.38 -0.205,0.117 -0.176,0.058 -0.696,0.042 -0.705,0.122 -0.616,0.22 -0.368,0.219 -0.479,0.489 -0.293,1.239 -0.469,0.522 -0.318,0.109 -0.765,0.046 -1.077,0.144 -0.378,0.125 -0.628,0.754 -0.049,0.237 0.121,0.171 0.04,0.189 -0.057,0.177 -0.285,0.477 -0.308,0.346 -0.82,0.217 -0.301,-0.129 -0.275,-0.065 -0.532,-0.007 -0.866,0.082 -0.319,0.256 -0.503,0.181 -0.464,0.279 -0.876,0.106 -0.601,0.225 z m 15.818,-10.5 -0.177,0.045 -0.051,-0.021 10e-4,-0.376 0.412,-0.474 0.271,-0.548 0.187,0.49 -0.325,0.274 -0.176,0.468 -0.142,0.142 z\"\n\t\t\t\tid=\"OM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 257.74575,438.6914 -0.053,0.039 -0.155,0.222 -0.084,0.19 0.2,0.201 0.06,0.213 0.113,0.231 0.176,0.232 0.198,0.431 0.045,0.173 -0.056,0.112 -0.188,0.069 -0.176,0.201 -0.048,0.246 0.034,0.122 -0.526,0.393 -0.136,0.065 -0.09,-0.06 -0.112,-0.197 -0.134,-0.159 -0.072,-0.056 -0.042,-0.002 -0.042,0.037 -0.02,0.086 0.07,0.369 -0.058,0.149 -0.179,0.115 -0.205,0.6 -0.08,-0.076 -0.675,-0.808 -0.584,-1.001 -0.122,-0.454 0.151,-0.027 0.146,0.01 0.079,-0.07 0.091,-0.132 -0.074,-0.307 0.284,-0.233 0.107,-0.157 0.079,0.018 0.186,0.268 0.27,0.153 0.331,0.223 0.205,0.051 -0.259,-0.234 -0.448,-0.308 -0.125,-0.202 -0.118,-0.281 -0.175,0.122 -0.081,0.103 -0.091,0.058 -0.079,-0.07 -0.014,-0.091 -0.264,-0.018 -0.068,-0.083 -0.07,-0.046 0.032,0.176 0.052,0.108 -0.028,0.131 -0.086,0.009 -0.073,-0.135 -0.094,-0.123 -0.125,-0.512 -0.3,-0.241 -0.138,-0.081 -0.113,-0.03 -0.167,-0.164 -0.22,-0.087 -0.3,-0.255 -0.368,-0.183 -0.45,-0.064 -0.547,0.04 -0.184,0.102 -0.125,0.129 -0.058,0.06 -0.323,0.147 -0.122,0.213 -0.077,0.18 -0.161,0.204 0.184,0.123 -1.053,0.693 -0.208,0.101 -0.473,0.071 -0.109,0.074 -0.144,0.137 -0.02,0.208 0.022,0.177 0.137,0.137 0.123,0.086 0.293,0.412 0.521,0.52 0.099,0.189 0.081,0.281 -0.157,0.132 -0.122,0.056 -0.496,0.022 -0.171,0.112 -0.069,0.171 -0.185,0.14 -0.639,0.139 -0.502,0.016 -0.156,-0.16 -0.038,-0.451 -0.338,-0.77 -0.081,-0.531 -0.084,0.066 -0.179,0.062 -0.061,0.132 -0.045,0.391 -0.066,0.134 -0.138,-0.013 -0.284,-0.14 -0.378,-0.129 -0.481,-0.829 -0.052,-0.156 -0.094,-0.187 -0.372,-0.079 -0.317,-0.14 -0.346,-0.021 -0.177,0.079 -0.181,-0.1 -0.031,-0.228 -0.363,0.102 -0.466,-0.036 -0.417,-0.097 -0.285,0.052 -0.239,0.162 0.033,0.413 -0.07,0.082 -0.011,-0.169 -0.083,-0.194 -0.1,-0.161 -0.21,-0.167 -0.011,-0.061 0.083,-0.084 0.381,-0.242 0.047,-0.101 0.006,-0.21 -0.037,-0.201 -0.172,-0.296 0.098,-0.183 0.197,-0.147 0.202,-0.116 0.034,-0.049 -0.037,-0.101 -0.118,-0.109 -0.276,-0.185 -0.166,-0.012 -0.007,-0.533 0.008,-0.566 0.042,-0.056 0.101,-0.034 0.081,-0.086 0.045,-0.168 0.121,-0.06 0.218,0.129 0.223,0.114 0.092,-0.038 0.069,-0.056 0.049,-0.055 0.016,-0.052 0.178,0.151 0.363,0.268 0.021,0.131 -0.034,0.126 0.1,0.362 0.188,0.052 0.19,-0.07 0.047,0.067 -0.035,0.067 -0.098,0.075 -0.024,0.311 0.311,0.145 0.156,0.127 0.516,-0.06 0.19,0.034 0.13,-0.037 -0.144,-0.25 -0.193,-0.185 0.016,-0.083 0.146,0.062 0.112,0.126 0.254,0.156 0.467,0.542 0.536,0.131 0.424,-0.017 0.395,-0.073 0.629,-0.21 0.456,-0.38 0.363,-0.169 1.178,-0.361 0.418,-0.378 0.177,-0.049 0.168,-0.047 0.37,-0.286 0.199,-0.223 0.21,-0.112 0.623,0.081 0.404,0.105 0.279,-0.014 0.268,0.075 0.117,0.162 0.122,0.069 0.659,-0.018 0.54,0.08 1.183,0.48 0.708,0.475 0.375,0.504 0.904,0.648 z m -13.638,-2.04 -0.031,0.132 -0.217,-0.237 0.129,-0.039 0.046,0.005 0.073,0.139 z m 9.36,3.122 -0.056,0.119 -0.131,-0.266 0.021,-0.068 -0.009,-0.24 0.125,-0.063 0.092,-0.005 0.076,0.034 0.048,0.283 -0.04,0.128 -0.126,0.078 z m -0.469,0.057 -0.126,0.125 -0.048,-0.118 0.088,-0.123 0.031,-0.001 0.055,0.117 z m -7.122,2.593 -0.154,0.015 -0.314,-0.121 -0.23,-0.233 -0.019,-0.075 0.005,-0.078 0.125,-0.238 0.168,-0.082 0.066,10e-4 0.161,0.275 -0.109,0.106 0.044,0.17 0.228,0.126 0.029,0.134 z\"\n\t\t\t\tid=\"PA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 278.53675,474.7414 -0.017,0.182 -0.09,0.073 -0.138,0.016 -0.212,-0.13 -0.155,0.033 -0.155,0.008 -0.218,-0.151 -0.075,-0.149 -0.171,-0.122 -0.354,0.049 -0.292,0.003 -0.244,-0.028 -0.219,0.041 -0.186,0.157 -0.139,0.184 -0.163,0.154 -0.479,0.103 -0.255,0.003 -0.229,0.101 -0.341,0.037 -0.233,0.09 -0.413,0.049 -0.495,0.047 -0.276,0.137 -0.11,0.06 -0.281,0.189 -0.489,0.298 -0.27,0.104 -0.326,0.323 -0.391,0.303 -0.254,0.161 -0.373,0.074 -0.155,0.082 -0.057,0.097 0.033,0.114 -0.064,0.292 -0.114,0.539 -0.031,0.265 -0.028,0.126 -0.247,0.434 -0.266,0.403 -0.131,0.267 -0.073,0.196 0.082,0.162 0.108,0.293 0.091,0.234 0.026,0.159 -0.032,0.182 -0.112,0.167 -0.177,0.109 -0.238,0.03 -0.49,0.293 -0.546,0.434 -0.179,0.202 -0.051,0.191 -0.079,0.298 0.033,0.155 0.097,0.106 0.098,0.253 0.008,0.131 -0.081,0.073 -0.155,0.016 -0.139,0.025 -0.106,0.065 -0.106,-0.016 -0.097,0.032 0,0.107 0.032,0.122 -0.016,0.131 -0.065,0.081 -0.057,0.057 0.057,0.082 0.097,0.074 0.147,0.122 0.204,0.237 0.155,0.041 0.13,0.082 0.016,0.13 -0.049,0.131 -0.114,0.057 -0.008,0.115 0.155,0.139 0.106,0.098 0.106,0.147 0.098,0.205 0,0.13 0.106,0.164 0.065,0.139 0,0.131 0.171,0.13 0.147,0.099 0.105,0.09 0.106,0.057 0.025,0.098 -0.014,0.149 0.152,0.246 0.279,0.184 0.226,0.267 0.146,0.194 0.271,0.312 0.01,0.358 -0.335,0.411 -0.336,0.412 0.549,-0.011 0.56,0.008 0.586,0.118 0.395,0.113 0.241,0.051 0.171,0.132 0.081,0.205 0.065,0.168 0.017,0.242 0.244,0.197 -0.017,0.188 -0.007,0.265 0.108,0.004 0.717,0.001 0.784,10e-4 0.754,-0.049 0.285,-0.064 0.344,-0.322 0.207,-0.095 0.199,-0.15 0.242,-0.274 0.192,-0.123 0.162,-0.152 0.241,-0.152 0.1,-0.112 0.082,-0.041 0.187,-0.074 -0.081,0.148 -0.063,0.151 -0.019,0.218 0.089,0.238 -0.074,0.178 -0.121,0.159 -0.002,0.419 -0.002,0.594 -0.003,0.509 -0.003,0.638 -0.003,0.723 -0.002,0.481 0.128,-0.095 0.178,-0.085 0.231,0.221 0.165,0.096 0.141,0.023 0.145,-0.007 0.197,-0.047 0.432,-0.185 0.296,-0.149 0.339,0.01 0.465,0.058 0.268,-0.006 0.351,0.616 0.257,0.452 0.293,0.515 0.235,0.415 0.358,0.63 0.309,0.545 0.33,0.581 0.375,0.661 -0.121,0.168 -0.098,0.134 0.011,0.227 -0.148,0.121 -0.157,0.073 -0.185,0.192 -0.126,0.165 -0.006,0.237 0.024,1.202 -0.031,0.327 -0.096,0.281 -0.099,0.142 -0.06,0.112 0.143,0.279 0.137,0.562 0.104,0.112 0.128,0.229 0.058,0.217 -0.026,0.083 -0.257,0.103 -0.092,0.088 -0.024,0.323 -0.111,0.116 -0.188,0.152 -0.121,0.174 -0.102,0.121 -0.1,0.07 -0.049,0.213 -0.067,0.216 -0.234,0.143 -0.04,0.265 -0.003,0.219 0.124,0.219 0.403,0.461 0.041,0.11 -0.23,0.278 -0.133,0.193 -0.328,0.59 -0.006,0.108 0.081,0.279 0.489,1.196 0.083,0.097 0.151,0.114 0.247,-0.013 0.373,0.129 0.181,0.148 0.017,0.073 -0.042,0.049 -0.197,0.099 -0.219,0.13 -0.076,0.123 -0.015,0.195 0.05,0.289 -0.095,0.094 -0.219,0.112 -0.189,0.162 -0.189,0.269 -0.321,0.41 -0.111,0.112 -0.048,0.142 -0.183,0.047 -0.341,0.279 -0.058,0.141 0.055,0.134 0.175,0.113 0.117,0.163 0.031,0.209 0,0.13 0,0.004 -0.212,0.196 -0.276,0.225 -0.34,0.044 -0.129,0.113 0.029,0.239 0.11,0.337 -10e-4,0.264 -0.104,0.302 -0.243,0.331 -0.372,0.228 -0.351,0.122 -0.276,10e-4 -0.267,0.024 -0.114,0.035 -0.206,-0.2 -0.915,-0.661 -0.348,-0.353 -0.323,-0.165 -0.787,-0.566 -0.078,-0.181 -0.097,-0.581 -0.102,-0.163 -0.271,-0.21 -0.679,-0.279 -0.264,-0.139 -0.276,-0.254 -0.406,-0.18 -0.442,-0.369 -0.263,-0.294 -0.295,-0.195 -0.916,-0.272 -0.459,-0.273 -0.859,-0.385 -0.383,-0.245 -0.919,-0.298 -0.273,-0.142 -0.904,-0.697 -0.634,-0.228 -0.511,-0.391 -1.542,-0.831 -0.242,-0.266 -0.236,-0.41 -0.342,-0.244 -0.385,-0.561 -0.572,-0.33 -0.551,-0.437 -0.203,-0.397 -0.366,-0.505 -0.108,-0.269 -0.32,-0.27 -0.022,-0.531 -0.223,-0.244 0.16,-0.121 0.169,-0.053 0.211,-0.825 -0.111,-0.413 -0.572,-0.749 -0.21,-0.359 -0.149,-0.46 -0.229,-0.273 -0.34,-0.575 -0.208,-0.509 -0.454,-0.369 -0.124,-0.133 -0.069,-0.188 -0.253,-0.133 -0.013,-0.39 -0.176,-0.74 -0.252,-0.373 -0.907,-0.696 -0.015,-0.268 -0.072,-0.487 -0.202,-0.527 -1.009,-1.634 -0.253,-0.486 -0.252,-0.789 -0.227,-0.447 -0.25,-0.796 -0.377,-0.605 -0.238,-0.524 -0.252,-0.651 -0.022,-0.348 -0.458,-0.598 -0.243,-0.548 -0.427,-0.459 -0.417,-0.349 -0.181,-0.247 -0.594,-1.172 -0.081,-0.347 -0.404,-0.644 -0.401,-0.462 -0.253,-0.373 -0.324,-0.335 -1.968,-1.031 -0.693,-0.428 -0.234,-0.204 -0.108,-0.321 0.045,-0.188 0.203,-0.176 0.281,0.136 0.172,-0.057 0.134,-0.229 0.003,-0.347 -0.172,-0.447 -0.631,-0.863 0.048,-0.183 0.119,-0.207 -0.243,-0.415 -0.265,-0.333 -0.133,-0.255 0.15,-0.971 0.144,-0.246 0.954,-0.985 0.262,-0.421 0.41,-0.26 0.418,-0.397 0.503,-0.302 0.073,0.052 0.07,0.051 0.004,0.102 0.019,0.088 0.056,0.083 0.005,0.152 0.065,0.102 0.004,0.115 0.005,0.157 -0.033,0.079 0.032,0.136 0.108,0.252 -0.042,0.078 -0.102,0.051 -0.102,0.07 -0.102,0.157 -0.154,-0.005 -0.222,-0.069 -0.149,0.087 -0.055,0.167 0.046,0.139 0.014,0.129 0.097,0.111 0.283,0.009 -0.255,0.356 -0.125,0.162 0.027,0.102 0.153,0.087 0.114,0.006 0.253,-0.13 0.172,-0.19 0.097,-0.106 0.163,-0.042 0.213,0.088 0.283,0.176 0.33,0.155 0.135,0.085 0.242,-0.024 0.203,-0.036 0.171,0.128 0.173,0.108 0.04,0.367 0.129,0.268 0.158,0.206 0.192,0.246 0.177,0.083 0.228,0.002 0.31,0.091 0.121,-0.06 0.106,-0.172 0.056,-0.097 0.158,-0.042 0.014,-0.11 -0.033,-0.135 0.052,-0.157 0.129,-0.139 0.332,-0.202 0.16,-0.085 0.033,-0.124 0.06,-0.167 -0.023,-0.092 -0.067,-0.115 0.016,-0.163 0.088,-0.217 0.125,-0.254 0.108,-0.324 0.041,-0.152 0.116,-0.097 0.044,-0.14 0.063,-0.165 0.143,-0.185 -0.004,-0.199 0.06,-0.088 0.005,-0.222 0.143,-0.456 0.005,-0.095 0.063,-0.025 0.109,0.029 0.094,0.104 0.029,0.102 0.039,0.046 0.089,-0.009 0.102,-0.058 -0.007,-0.092 -0.074,-0.09 -0.021,-0.054 0.032,-0.085 0.155,-0.185 0.169,-0.215 0.363,-0.447 0.219,-0.182 0.565,-0.193 0.429,-0.147 0.41,-0.14 0.558,-0.201 0.788,-0.284 0.565,-0.204 0.505,-0.364 0.391,-0.282 0.334,-0.243 0.424,-0.31 0.574,-0.668 0.396,-0.461 0.288,-0.337 0.2,-0.213 0.159,-0.599 0.182,-0.683 0.08,-0.304 0.035,-0.106 0.078,0.045 0.09,0.074 0.109,0.003 0.103,-0.003 0.065,-0.042 -0.096,-0.682 0.014,-0.149 0.054,-0.178 -0.011,-0.096 -0.174,-0.136 -0.279,-0.273 -0.116,-0.243 -0.07,-0.204 -0.195,-0.135 -0.201,-0.118 0.017,-0.097 0.119,0 0.302,0.095 0.218,-0.03 0.162,-0.011 0.158,-0.1 0.168,-0.18 0.113,0 0.129,0.024 0.235,0.185 0.139,0.109 0.168,0.09 0.158,0.032 0.144,0.01 0.101,-0.008 0.059,0.123 0.07,0.151 0.179,0.102 0.212,0.097 0.171,0.167 0.116,0.112 0.137,0.132 0.133,0.176 0.12,0.309 0.061,0.21 0.069,0.116 -0.016,0.118 0.142,0.215 0.105,0.119 0.184,0.076 0.355,0.086 0.19,0.194 0.168,0.075 0.178,0.2 0.158,0.059 0.2,-0.011 0.2,0.097 0.152,0.189 0.098,0.237 0.152,0.134 0.075,0.243 -0.086,0.285 0.081,0.151 0.157,0.124 0.255,0.129 0.233,-0.032 0.119,0.043 0.076,0.118 0.043,0.141 0.102,0.342 0.053,0.217 -0.095,0.21 -0.035,0.146 0.052,0.194 0.242,0.095 0.22,0.077 0.136,0.151 0.152,0.041 0.213,-0.009 0.272,-0.037 0.152,-0.087 0.097,-0.026 0.109,0.038 0.242,0.083 0.294,0.094 0.267,-0.054 0.231,-0.025 0.229,-0.055 0.232,-0.157 0.196,0.006 0.145,-0.106 0.183,-0.17 0.181,-0.171 0.141,-0.038 0.228,0.082 0.314,0.118 0.178,0.153 0.136,0.04 0.142,0.113 0.272,0.002 0.291,-0.061 0.233,-0.188 0.241,-0.055 0.165,-0.053 0.152,0.032 0.587,0.345 0.161,0.178 0.202,0.035 0.166,0.097 0.277,0.105 0.152,0.108 0.194,0.065 0.142,0.15 0.223,0.093 0.194,0.051 0.087,0.122 0,0.081 -0.026,0.054 -0.205,0.318 -0.402,0.623 -0.362,0.561 -0.569,0.884 -0.317,0.494 0.081,0.021 0.495,0.216 0.123,0.008 0.181,-0.055 0.118,-0.086 0.111,-0.012 0.116,0.083 0.163,0.107 0.117,0.315 0.087,0.154 0.204,0.117 0.218,0.195 z\"\n\t\t\t\tid=\"PE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 81.782748,487.8634 -0.275,0.066 -0.131,-0.012 -0.099,-0.23 0.036,-0.142 0.044,-0.045 0.468,0.056 0.04,0.104 -0.007,0.099 -0.076,0.104 z m 1.45,0.084 -0.182,0.022 -0.03,-0.14 0.056,-0.074 0.078,-0.035 0.139,0.043 0.073,0.061 -0.004,0.052 -0.13,0.071 z m -1.458,1.372 -0.061,0.052 -0.114,-0.169 -0.018,-0.071 0.206,-0.088 0.112,0.046 -0.125,0.23 z m 2.951,0.761 0.42,0.147 0.132,-0.016 -0.134,0.145 -0.419,0.079 -0.139,0.07 -0.169,-0.045 -0.091,-0.168 0.4,-0.212 z m -0.1,0.669 -0.208,0.221 0,-0.235 0.075,-0.031 0.068,0 0.065,0.045 z m 1.147,1.654 -0.103,0.048 -0.007,-0.303 0.133,0.058 0.052,0.049 -0.022,0.083 -0.053,0.065 z m -17.962,15.303 -0.018,0.131 -0.053,-0.126 -0.173,-0.202 -0.064,-0.09 0.077,0.014 0.231,0.273 z m 7.127,0.697 -0.05,0.031 0.064,-0.23 0.072,-0.029 -0.086,0.228 z m -8.349,0.678 0.013,0.05 -0.058,-0.003 -0.104,-0.147 -0.037,-0.127 -0.066,-0.145 -0.091,-0.105 -0.01,-0.097 -0.003,-0.153 0.103,0.234 0.098,0.188 0.071,0.154 0.084,0.151 z m -16.783,0.954 -0.051,0.022 -0.054,-0.053 -0.023,-0.081 0.019,-0.131 0.136,0.086 0.054,0.058 -0.081,0.099 z m 22.159,-0.067 -0.111,0.017 -0.271,-0.173 0.104,0 0.155,0.108 0.123,0.048 z m 0.366,-0.043 0.153,0.143 -0.203,-0.098 -0.258,-0.042 0.098,-0.026 0.143,0.004 0.067,0.019 z m -22.365,0.751 -0.111,0.004 -0.101,-0.045 0.025,-0.3 0.027,-0.062 0.156,0.101 0.131,0.262 -0.127,0.04 z m 4.48,1.949 -0.088,0.076 -0.117,-0.054 -0.052,-0.073 -0.019,-0.078 0.027,-0.093 0.262,0.013 0.074,0.041 -0.087,0.168 z m 1.38,0.424 0.404,0.136 0.075,0.221 -0.086,0.147 -0.204,-0.036 -0.101,-0.081 -0.142,-0.264 -0.395,0.06 -0.273,-0.052 -0.151,-0.344 -0.006,-0.156 0.066,-0.095 0.29,-0.104 0.362,0.076 0.138,0.195 0.023,0.297 z m 23.89,0.488 0.014,0.056 -0.102,-0.007 -0.03,-0.019 0.002,-0.104 0.074,-0.126 0.058,-0.106 0.118,-0.099 0.211,-0.099 0.102,-0.042 0.033,0.023 -0.039,0.015 -0.349,0.208 -0.109,0.146 -0.048,0.102 0.009,0.032 0.056,0.02 z m -0.058,0.976 0.02,0.081 -0.105,-0.054 -0.099,-0.149 -0.177,-0.185 -0.042,-0.076 0.136,0.072 0.089,0.108 0.178,0.203 z m 10.828,0.449 0.001,0.055 -0.27,-0.281 0.106,0.022 0.163,0.204 z m -10.422,0.111 0.038,0.107 -0.068,-0.05 -0.217,-0.104 -0.024,-0.087 0.271,0.134 z m 12.324,0.484 -0.057,0.064 -0.005,-0.062 -0.079,-0.03 -0.109,-0.063 -0.148,-0.072 -0.08,-0.012 -0.04,-0.042 0.056,-0.022 0.091,0.033 0.128,0.066 0.148,0.066 0.095,0.074 z m -6.207,6.854 -0.082,0.056 0.03,-0.076 -0.063,-0.166 -0.062,-0.024 0.062,-0.047 0.088,0.125 0.027,0.132 z\"\n\t\t\t\tid=\"PF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 905.79275,495.1324 0.469,0.149 0.159,0.165 -0.169,0.075 -0.41,0.051 -0.096,-0.101 -0.394,-0.102 -0.063,-0.184 -0.196,0.063 0.1,-0.129 -0.247,-0.146 -0.077,-0.195 -0.01,-0.079 0.29,0.091 0.644,0.342 z m 2.09,-0.326 -0.041,0.155 -0.103,-0.052 -0.305,0.08 -0.16,-0.018 -0.092,-0.139 -0.022,-0.064 0.265,0.05 -0.044,-0.154 0.382,0.079 0.12,0.063 z m -9.492,-2.261 -0.04,0.222 -0.23,-0.066 -0.047,-0.048 0.038,-0.14 0.204,-0.006 0.075,0.038 z m 0.511,-1.545 0.119,0 0.199,-0.211 0.173,-0.064 0.113,0.096 -0.184,0.674 -0.155,-0.102 -0.607,-0.188 -0.019,-0.267 -0.158,-0.086 -0.098,-0.26 -0.201,-0.288 -0.038,-0.185 0.114,0.076 0.128,0.188 0.531,0.386 -0.021,0.125 0.104,0.106 z m -1.551,-1.905 0.396,0.231 0.217,-0.067 0.118,0.038 0.254,0.268 0.014,0.196 0.041,0.168 -0.013,0.074 -0.141,0.1 0.013,-0.114 -0.108,-0.022 -0.369,0.005 -0.286,-0.071 -0.394,-0.019 0.166,-0.178 0.037,-0.073 -0.207,-0.286 -0.009,-0.136 0.017,-0.075 0.173,-0.041 0.081,0.002 z m -0.513,0.416 -0.039,0.07 -0.164,-0.051 -0.458,-0.391 0.071,-0.29 0.206,-0.15 0.313,0.164 0.104,0.24 0.031,0.134 -0.064,0.274 z m 6.415,-1.51 0.163,0.042 0.339,-0.021 0.112,0.162 0.155,0.056 0.134,0.073 0.119,0.106 -0.001,0.065 -0.028,0.056 -0.072,0.051 0.021,0.114 -0.124,-0.017 -0.154,0.06 -0.304,-0.133 -0.11,-0.03 -0.033,-0.114 -0.197,-0.191 -0.345,-0.137 0.174,-0.112 0.151,-0.03 z m -25.373,-0.919 0.051,0.124 -0.408,-0.169 -0.39,-0.283 -0.197,-0.077 -0.132,-0.187 0.242,0.139 0.422,0.13 0.412,0.323 z m 21.095,0.282 0.048,0.202 -0.219,-0.216 0.098,-0.244 0.017,-0.132 -0.011,-0.074 -0.219,-0.126 0.116,-0.206 0.123,-0.07 0.077,-0.02 -0.004,0.291 0.063,0.13 -0.089,0.465 z m -21.105,-0.71 -0.122,0.009 -0.495,-0.191 -0.126,-0.139 0.579,0.031 0.149,0.035 0.031,0.195 -0.016,0.06 z m 12.458,-7.462 -0.113,0.021 -0.049,-0.127 -0.263,-0.11 -0.262,-0.342 0.004,-0.293 0.034,-0.084 0.146,-0.004 0.584,0.338 0.061,0.108 -0.044,0.321 -0.098,0.172 z m 22.261,2.413 -0.068,0.263 -0.052,0.045 -0.064,-0.099 -0.244,0.096 -0.116,0.109 -0.124,0.08 -0.286,-0.02 -0.271,-0.072 -0.263,-0.133 -0.233,-0.171 -0.234,-0.269 -0.146,-0.278 0.072,-0.323 -0.091,-0.292 -0.442,-0.207 -0.097,-0.067 -0.196,-0.29 -0.195,-0.126 -0.249,-0.254 -0.063,-0.11 -0.106,-0.322 -0.034,-0.194 0.09,-0.565 -0.033,-0.282 0.121,0.027 0.129,0.111 0.146,0.077 0.355,0.052 0.271,0.225 0.261,0.439 0.031,0.144 0.083,0.104 0.268,0.187 0.14,0.12 0.265,0.479 0.146,0.102 0.174,0.041 0.161,0.069 0.269,0.21 0.248,0.238 0.167,0.25 0.128,0.268 0.082,0.338 z m -24.645,-3.518 -0.157,0.016 -0.256,-0.266 -0.065,-0.099 0.025,-0.139 0.326,-0.186 0.211,0.17 0.044,0.364 -0.128,0.14 z m 20.967,0.002 -0.056,0.022 -0.122,-0.354 -0.021,-0.262 -0.037,-0.193 -0.064,-0.115 0.184,-0.212 0.076,-0.059 0.139,0.112 0.021,0.249 0.106,0.211 -0.081,0.461 -0.145,0.14 z m -24.214,-1.977 -0.188,0.083 -0.135,-0.063 -0.058,-0.184 0.046,-0.177 0.165,-0.14 0.104,-0.042 0.117,0.095 0.045,0.188 -0.096,0.24 z m 16.548,-1.201 0.146,0.056 0.42,-0.292 0.225,0.204 0.287,0.099 0.298,0.056 -0.118,0.42 0.035,0.194 0.077,0.193 -0.01,0.285 -0.137,0.254 -0.263,0.371 -0.118,0.068 -0.138,0.04 -0.43,0.03 -0.083,0.197 0.028,0.209 0.232,0.274 0.186,0.308 -0.185,0.283 -0.305,0.198 -0.289,0.101 -0.479,-0.06 -0.505,0.025 -0.095,0.108 -0.002,0.179 -0.071,0.136 -0.092,0.124 -0.256,0.257 -0.287,0.227 -0.391,0.215 -0.131,0.051 -0.347,0.034 -0.311,0.124 -0.139,0.121 -0.151,0.098 -0.33,0.107 -0.321,0.212 -0.127,0.036 -0.667,0.037 -0.954,0.01 -0.282,0.022 -0.274,-0.029 -0.151,-0.083 -0.324,-0.381 -0.282,-0.131 -0.308,0.004 -0.41,0.135 -0.077,-0.03 -0.818,-0.563 -0.248,-0.138 -0.265,-0.102 -0.323,-0.072 -0.305,-0.113 -0.18,-0.268 0.021,-0.349 0.245,-0.205 0.373,0.101 0.143,-0.001 0.14,-0.058 0.165,0.019 0.166,0.051 0.605,-0.076 0.35,0.106 0.341,0.142 0.318,0.03 0.327,-0.03 0.438,-0.16 0.139,0.021 0.422,10e-4 0.369,-0.214 0.138,-0.863 0.094,-0.294 0.126,-0.064 0.09,0.018 0.135,0.147 -0.173,0.183 -0.076,0.141 -0.025,0.344 0.095,0.334 0.216,0.265 0.324,0.034 0.297,-0.175 0.323,-0.037 0.298,0.17 0.306,-0.029 0.14,-0.111 0.163,-0.048 0.162,-0.018 0.147,-0.066 0.195,-0.289 0.13,-0.325 0.194,-0.256 0.529,-0.427 0.153,-0.053 0.165,-0.029 0.372,0.019 0.277,-0.152 0.021,-0.342 -0.04,-0.347 -0.316,-0.815 -0.021,-0.129 0.045,-0.145 0.092,-0.13 0.311,-0.002 0.324,0.047 0.128,0.123 0.144,0.103 z m 4.893,-0.552 -0.025,0.066 -0.165,-0.076 0.136,-0.143 0.065,-0.01 -0.011,0.163 z m -2.774,-2.698 -0.068,0.245 -0.172,-0.144 -0.117,-0.207 0.074,-0.092 0.193,-0.055 0.09,0.253 z m -1.604,-0.519 -0.03,0.141 -0.088,-0.008 -0.241,-0.276 -0.047,-0.072 0.057,-0.069 0.28,0.203 0.069,0.081 z m -0.398,-0.328 -0.067,0 -0.01,-0.223 0.046,-0.117 0.156,0.082 0.026,0.199 -0.151,0.059 z m -21.99,2.751 0.354,0.008 0.355,-0.043 0.146,0.019 0.144,0.044 0.131,0.084 0.066,0.161 0.221,0.224 0.312,0.101 0.297,0.203 0.267,0.242 0.196,0.244 0.223,0.206 0.337,0.087 0.355,0.014 1.214,1.225 0.059,0.189 0.014,0.804 -0.134,0.628 0.302,0.193 0.412,0.072 0.578,0.134 0.556,0.2 1.771,0.848 0.243,0.072 0.357,0.028 0.36,-0.012 0.129,0.043 0.27,0.154 0.135,0.101 0.242,0.274 0.216,0.298 0.093,0.085 0.109,0.066 0.063,0.162 0.084,0.5 -0.025,0.312 -0.099,0.116 -0.283,0.056 -0.992,0.053 -0.664,-0.058 -0.465,0.315 -0.013,0.138 0.033,0.128 0.404,0.669 0.238,0.594 0.197,0.241 0.295,0.196 0.263,0.232 0.242,0.267 0.503,0.465 0.273,0.173 0.321,0.106 0.534,0.361 0.071,0.159 0.152,0.502 0.066,0.341 0.01,0.141 0.038,0.126 0.47,0.31 0.104,0.086 0.209,0.688 0.161,0.32 0.271,0.113 0.315,-0.007 0.857,-0.205 0.124,-0.007 0.159,0.047 0.139,0.112 0.046,0.31 -0.135,0.326 -0.037,0.313 0.169,0.257 0.437,0.2 0.16,0.055 0.786,0.064 0.309,0.054 0.303,0.087 0.104,0.078 -0.073,0.138 -0.158,0.068 -0.18,0.027 -0.289,0.1 0.005,0.178 0.163,0.185 0.149,0.223 0.125,0.081 0.136,0.055 0.34,0.077 0.331,0.106 0.218,0.105 0.225,0.076 0.49,0.048 0.36,0.143 0.512,-0.06 -0.443,0.232 -0.153,0.057 -0.535,-0.087 -0.101,0.09 0.221,0.246 0.327,0.165 0.117,0.096 -0.082,0.112 -0.381,0.225 -0.159,0.033 -0.297,0.018 -0.498,-0.097 -0.353,-0.124 -0.099,-0.169 -0.094,-0.099 -0.318,-0.238 -0.227,-0.13 -0.288,-0.044 -0.301,0.002 -0.538,-0.138 -1.167,-0.098 -0.278,-0.06 -0.35,-0.19 -0.165,-0.027 -0.177,0.06 -0.451,0.037 -0.132,-0.017 -0.322,-0.162 -0.331,-0.06 -0.139,0.049 -0.14,0.011 -0.453,-0.116 -0.341,-0.049 -0.28,-0.162 -0.152,-0.151 -0.172,-0.134 -0.159,-0.345 -0.247,-0.327 -0.308,-0.269 -0.658,-0.434 -0.132,-0.108 -0.258,-0.397 0.014,-0.264 0.094,-0.266 -0.142,0.091 -0.16,-0.012 -0.448,-0.176 -0.185,-0.209 -0.299,-0.568 -0.191,-0.3 -0.447,-0.53 -0.129,-0.314 -0.188,-0.275 -0.115,-0.102 -0.096,-0.118 -0.085,-0.153 -0.127,-0.106 -0.624,-0.235 -0.109,-0.074 -0.121,-0.039 -0.464,-0.024 -0.269,-0.039 -0.506,-0.193 -0.262,-0.058 -0.314,-0.037 -0.305,-0.073 -0.148,-0.072 -0.1,-0.121 -0.059,-0.287 -0.256,0.031 -0.25,-0.05 -0.242,-0.101 -0.247,-0.061 -0.169,0.087 -0.052,0.229 -0.078,0.012 -0.145,-0.047 -0.072,0.028 -0.157,0.105 -0.125,0.143 -0.232,-0.022 -0.475,-0.144 -0.212,-0.09 -0.18,-0.163 -0.154,-0.185 -0.156,-0.146 -0.192,-0.106 0.244,0.252 0.563,1.109 -0.141,0.021 -0.145,-0.028 0.133,0.213 -0.153,0.032 -0.152,-0.002 -0.32,-0.092 -0.318,-0.031 -0.094,0.045 0.067,0.08 0.112,0.236 0.089,0.247 -0.46,0.111 -0.472,0.068 -0.525,0.133 -0.531,0.009 -0.272,-0.076 -0.279,-0.043 -0.264,0.043 -0.255,0.097 -0.215,-0.016 -0.136,-0.174 -0.063,-0.131 -0.081,-0.114 -0.201,0.018 -0.194,0.062 0.332,0.007 0.1,0.146 0.086,0.176 0.235,0.16 0.283,-0.095 0.623,0.026 0.605,0.279 0.144,0.032 0.132,0.055 0.312,0.275 0.235,0.25 0.198,0.286 0.042,0.112 -0.014,0.3 -0.06,0.149 -0.391,0.211 -0.417,0.16 -0.615,0.311 -0.595,0.354 -0.313,-0.069 -0.282,-0.188 -0.109,-0.051 -0.291,-0.102 -0.177,-0.037 -0.704,0.08 -0.705,0.041 -0.298,-0.003 -0.288,-0.06 -0.317,-0.111 -0.314,0.049 -0.215,0.13 -0.235,0.02 -0.44,-0.29 -0.001,-0.037 0,-0.574 0,-0.573 0,-0.573 -10e-4,-0.573 0,-0.573 0,-0.572 0,-0.572 0,-0.572 -10e-4,-0.572 0,-0.571 0,-0.47 -0.156,-0.183 -0.16,-0.281 0.034,-0.361 0.194,-0.446 0.087,-0.298 0,-0.243 0,-0.57 0,-0.57 -10e-4,-0.57 0,-0.569 0,-0.569 0,-0.569 0,-0.569 -0.001,-0.569 0,-0.568 0,-0.568 0,-0.568 0,-0.568 -10e-4,-0.568 0,-0.568 0,-0.568 -10e-4,-0.567 0,-0.567 0,-0.342 0,-0.188 0,-0.011 0.084,0.001 0.284,0.003 0.228,0.046 1.406,0.606 0.42,0.243 0.144,0.057 0.141,0.002 0.135,0.028 0.634,0.335 0.947,0.338 1,0.324 0.31,0.068 0.321,0.028 0.696,0.112 0.367,0.1 0.537,0.397 0.271,0.123 0.254,0.224 0.359,0.241 0.142,0.061 0.156,0.032 z m 24.82,2.631 -0.208,0.213 -0.129,-0.199 -0.166,-0.174 -0.131,-0.178 -0.167,-0.384 -0.008,-0.193 0.044,-0.205 0.01,-0.207 -0.08,-0.42 -0.196,-0.383 -0.681,-0.913 -0.214,-0.239 -0.245,-0.214 -0.157,-0.052 -0.317,-0.051 -0.141,-0.043 -0.262,-0.149 -0.243,-0.173 -0.603,-0.515 -0.318,-0.146 -0.168,-0.18 -0.949,-0.58 -0.277,-0.137 -0.338,0 -0.285,-0.114 0.226,-0.072 0.047,-0.194 -0.05,-0.197 0.477,0.322 0.503,0.281 0.146,0.227 0.248,0.014 0.451,0.188 0.31,0.169 0.292,0.195 0.329,0.279 0.634,0.219 0.09,0.08 0.321,0.364 0.421,0.309 0.144,0.17 1.785,1.463 0.302,0.41 0.023,0.28 -0.059,0.11 -0.188,0.237 0.003,0.28 -0.063,0.251 -0.163,0.251 z m -7.098,-5.852 -0.56,0.038 -0.201,-0.042 -0.18,-0.161 -0.163,-0.251 -0.164,-0.059 -0.066,-0.049 0.396,-0.192 0.351,-0.058 0.567,0.24 0.058,0.12 0.005,0.078 -0.016,0.255 -0.027,0.081 z m -7.184,-1.056 -0.091,0.147 -0.212,-0.013 -0.094,-0.043 0.153,-0.028 0.062,-0.121 0.066,-0.043 0.116,0.101 z m -2.272,-0.901 0.936,0.181 0.062,-0.002 -0.011,-0.065 0.016,-0.018 0.056,0.047 -0.018,0.132 -0.147,0.033 -0.138,-0.013 -0.098,0.069 -0.268,0.255 -0.18,-0.042 -0.22,0.057 -0.386,0.005 -0.501,-0.112 -0.138,0.095 -0.178,-0.026 -0.177,0.104 -0.073,-0.005 -0.043,-0.152 0.003,-0.078 0.21,-0.065 -0.031,-0.239 0.169,-0.12 0.292,0.01 0.272,-0.081 0.591,0.03 z m 7.573,-1.136 -0.007,0.101 -0.202,-0.051 -0.056,0.016 -0.352,-0.292 0.006,-0.178 0.093,-0.152 0.146,0.024 0.259,0.191 0.113,0.341 z\"\n\t\t\t\tid=\"PG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 816.94475,403.6574 -0.136,0.243 -0.109,-0.002 0.016,-0.136 0.145,-0.282 0.054,0.006 0.03,0.171 z m 0.23,1.24 -0.052,0.036 -0.077,-0.017 0.076,-0.281 0.141,-0.077 0.112,0.03 -0.2,0.309 z m -1.233,2.978 0.029,0.268 -0.166,-0.006 -0.25,-0.163 -0.023,-0.083 0.004,-0.069 0.044,-0.059 0.362,0.112 z m -0.754,0.825 -0.016,0.199 -0.142,-0.105 -0.031,-0.149 0.014,-0.111 0.065,-0.132 0.089,0.12 0.021,0.178 z m 1.879,0.554 -0.178,0.212 -0.093,-0.059 0.1,-0.206 -0.003,-0.072 0.082,-0.161 0.152,-0.056 0.125,0.159 -0.185,0.183 z m -2.302,0.823 0.43,0.153 0.95,0.55 0.347,0.136 0.362,0.102 0.285,0.03 0.256,-0.126 0.107,-0.128 0.196,-0.338 0.209,-0.042 0.124,0.123 0.097,0.165 0.043,0.242 -0.06,0.253 -0.199,0.227 -0.122,0.272 -0.08,0.902 0.004,0.27 0.064,0.26 0.173,0.412 0.09,0.116 0.262,0.147 0.071,0.111 0.015,0.2 0.041,0.176 0.17,0.067 0.144,0.088 -0.054,0.195 -0.09,0.198 -0.118,0.488 -0.562,1.128 -0.032,0.243 -0.222,0.484 -0.451,0.078 -0.521,0.234 -0.29,0.182 -0.253,0.236 -0.096,0.309 0.082,0.141 0.053,0.151 -0.006,0.163 -0.078,0.135 -0.251,0.329 -0.106,0.269 -0.112,0.121 -0.055,0.146 0.019,0.167 0.101,0.146 0.306,0.627 0.328,0.605 0.07,0.07 0.027,0.081 -0.193,0.16 0.004,0.29 0.058,0.288 0.29,0.712 0.041,0.19 0.096,0.156 0.148,0.146 0.163,0.123 0.472,0.21 0.182,0.042 0.189,0.007 0.047,-0.142 0.165,-0.048 -0.036,-0.139 -0.202,-0.193 -0.008,-0.104 0.106,-0.078 0.126,-0.045 0.284,-0.21 0.301,-0.168 0.383,0.014 0.375,0.094 0.267,0.098 0.22,0.18 0.226,0.312 0.158,0.345 -10e-4,0.164 -0.038,0.165 0.008,0.163 0.118,0.111 0.363,0.008 0.185,-0.256 0.023,-0.288 -0.13,-0.111 0.06,-0.142 0.111,-0.106 0.161,0.095 0.153,0.179 0.563,0.195 0.144,0.004 0.117,0.037 0.252,0.135 0.118,0.108 -0.145,0.224 -0.559,0.05 -0.162,0.168 0.165,0.337 0.268,0.277 0.172,0.224 0.152,0.241 -0.007,0.223 -0.089,0.232 0.246,-0.018 0.231,0.049 0.32,0.194 0.1,0.02 0.106,-0.031 -0.015,0.7 -0.218,0.641 -0.275,-0.08 -0.235,-0.271 0.048,-0.33 0.15,-0.319 -0.086,-0.067 -0.151,0.026 -0.173,0.072 -0.187,0.025 -0.307,-0.042 -0.63,-0.347 -0.256,-0.032 -0.058,-0.157 0.014,-0.333 -0.251,-0.396 -0.04,-0.142 -0.08,-0.111 -0.749,-0.431 -0.092,-0.073 -0.23,-0.344 -0.522,-0.49 -0.146,-0.05 -0.159,-0.014 -0.052,0.124 0.072,0.191 0.029,0.164 -0.011,0.172 0.021,0.133 0.247,0.272 0.037,0.128 0.165,0.349 0.02,0.408 -0.211,0.169 -0.237,-0.188 -0.008,-0.154 -0.041,-0.143 -0.255,-0.371 -0.086,-0.08 -0.48,-0.366 -0.372,-0.402 -0.827,-0.429 -0.099,-0.023 -0.144,0.032 -0.135,0.053 -0.4,0.212 -0.141,0.147 -0.013,0.227 -0.287,0.18 -0.395,0.025 -0.303,-0.113 -0.251,-0.226 -0.207,-0.011 -0.257,-0.353 -0.313,-0.045 -0.259,0.276 -0.055,-0.548 -0.002,-0.554 0.072,-0.162 0.129,-0.135 0.655,-0.582 0.083,-0.187 -0.028,-0.25 -0.149,-0.204 -0.235,-0.124 -0.271,-0.052 -0.195,-0.114 -0.153,-0.188 -0.104,0.333 0.101,0.494 0.017,0.321 -0.093,0.121 -0.168,0.003 -0.16,-0.038 -0.119,-0.115 -0.087,-0.332 -0.229,-0.219 -0.093,-0.314 -0.104,-0.045 -0.213,0.024 -0.157,-0.146 -0.104,-0.367 -0.022,-0.394 -0.089,-0.332 -0.128,-0.321 -0.075,-0.262 -0.115,-1.178 -0.028,-0.108 -0.062,-0.089 -0.145,-0.134 -0.109,-0.164 -0.021,-0.135 0.03,-0.581 0.05,-0.14 0.113,-0.067 0.155,0.114 0.124,0.141 0.154,0.068 0.136,0.089 0.254,0.344 0.1,0.054 0.313,-0.011 0.185,-0.043 0.089,-0.125 0.057,-0.149 10e-4,-0.176 -0.181,-0.52 -0.055,-0.375 -0.003,-0.338 0.047,-0.339 0.247,-0.564 0.031,-0.392 -0.023,-0.525 0.043,-0.313 -0.007,-0.18 -0.147,-0.283 -0.039,-0.302 0.412,-1.537 0.129,-0.298 0.094,-0.308 0.043,-0.409 0.308,-0.112 0.293,-0.169 0.151,0.013 0.161,0.041 0.354,-0.084 0.143,-0.005 z m 2.617,10.522 0.051,0.101 -0.057,-0.005 -0.04,0.019 -0.132,0.208 0.144,0.385 -0.089,0.28 -0.16,0.018 -0.063,-0.03 0.033,-0.139 0.034,-0.063 -0.032,-0.183 -0.095,-0.115 -0.076,-0.223 -0.117,-0.134 0.055,-0.215 0.37,-0.024 0.174,0.12 z m 0.397,2.755 -0.009,0.117 -0.605,-0.426 -0.028,-0.073 -10e-4,-0.068 0.037,-0.068 0.606,0.518 z m 6.113,1.196 -0.074,0.186 -0.092,-0.066 -0.13,0.011 -0.204,0.158 -0.332,-0.212 -0.051,-0.166 0.237,-0.365 -0.002,-0.543 0.087,-0.134 0.091,-0.096 0.108,-0.052 0.234,0.375 0.08,0.046 0.226,0.172 -0.059,0.347 0.021,0.203 -0.14,0.136 z m -11.457,-0.34 0.004,0.194 -0.473,-0.286 -0.014,-0.099 0.012,-0.074 0.049,-0.044 0.254,0.107 0.168,0.202 z m 4.613,0.604 0.174,0.008 0.054,-0.027 0.333,0.24 -0.02,0.122 0.042,0.16 -0.19,0.276 -0.034,0.093 -0.105,0.09 -0.361,-0.22 -0.132,-0.134 -0.039,-0.274 0.144,-0.407 0.134,0.073 z m -3.397,0.174 0.143,0.024 0.449,-0.086 0.184,0.043 0.123,0.165 0.153,0.051 0.121,0.084 0.226,-0.146 0.229,0.167 0.203,0.312 0.239,0.221 0.227,0.164 0.044,0.121 -0.137,0.199 -0.042,0.251 0.014,0.271 0.171,0.569 -0.06,0.154 -0.172,0.218 -0.129,0.242 0.017,0.098 -0.051,0.08 -0.016,0.171 -0.105,-0.036 -0.097,0.027 -0.094,0.077 -0.146,0.165 -0.229,-0.05 -0.107,-0.049 -0.026,-0.143 -0.068,-0.101 -0.098,-0.06 -0.241,-0.247 -0.113,-0.186 -0.002,-0.198 -0.063,-0.185 -0.125,-0.165 -0.165,-0.127 -0.055,-0.122 -0.021,-0.144 -0.015,-0.369 -0.233,-0.46 -0.082,-0.11 -0.219,-0.114 -0.183,-0.147 -0.077,-0.146 -0.071,-0.236 -0.049,-0.034 -0.142,0.011 -0.138,-0.031 0.04,-0.173 0.137,-0.126 0.188,-0.016 0.52,0.071 0.143,0.051 z m 7.233,1.793 0.239,0.437 -0.261,-0.298 -0.303,-0.203 -0.314,-0.336 -0.227,-0.118 -0.069,-0.068 0.024,-0.139 0.167,-0.026 0.074,0.008 0.457,0.595 0.213,0.148 z m 1.386,1.142 0.01,0.25 -0.105,-0.092 -0.339,-0.491 -0.094,-0.179 0.096,-0.119 0.245,0.183 0.187,0.448 z m -4.719,0.283 -0.226,0.711 -0.15,-0.245 0.061,-0.154 -0.13,-0.128 -0.034,-0.117 0.05,-0.154 0.136,-0.143 0.034,-0.466 0.287,-0.149 0.115,-0.006 -0.041,0.114 0.004,0.215 -0.106,0.522 z m 0.608,-0.497 -0.087,0.087 -0.053,-0.014 -0.036,-0.154 0.084,-0.103 0.027,0.01 0.065,0.174 z m 3.945,0.69 0.538,0.337 0.371,0.577 0.043,0.442 -0.028,0.168 -0.177,-0.189 -0.379,-0.27 -0.263,-0.06 -0.081,-0.049 0.03,-0.146 -0.172,-0.135 -0.02,-0.055 -0.156,-0.06 -0.228,-0.303 -0.161,-0.057 -0.153,0.064 -0.354,0.45 -0.379,0.316 -0.005,-0.121 0.153,-0.395 0.098,-0.632 0.062,-0.192 -0.077,-0.284 -0.01,-0.253 0.283,0.117 0.354,0.118 0.27,0.161 0.044,0.108 0.397,0.343 z m 4.275,-0.687 0.198,0.233 0.049,0.168 -0.021,0.187 0.09,0.083 0.159,0.022 0.203,0.094 0.152,0.173 -0.091,0.158 0.028,0.231 -0.159,0.291 0.021,0.516 0.092,0.165 0.009,0.166 -0.023,0.174 0.039,0.143 0.245,0.472 0.045,0.157 -0.075,0.124 -0.024,0.118 0.151,0.012 0.215,0.196 0.127,0.259 -0.038,0.068 -0.172,-0.203 -0.13,-0.032 -0.551,0.055 -0.338,-0.084 -0.219,-0.008 -0.219,-0.347 -0.19,-0.058 -0.15,-0.153 -0.25,-0.393 -0.079,-0.225 0.174,-0.228 0.055,-0.182 -0.01,-0.178 -0.166,0.029 -0.145,-0.059 -0.177,-0.219 -0.071,-0.126 -0.129,-0.105 -0.205,-0.25 -0.295,-0.098 -0.12,-0.068 -0.233,-0.21 -0.171,-0.26 -0.166,-0.456 -0.087,-0.473 0.761,0.123 0.77,-0.024 0.87,-0.108 0.251,0.13 z m -7.255,0.625 -0.144,0.067 -0.292,-0.28 -0.17,-0.131 -0.044,-0.073 0.137,-0.105 0.37,10e-4 0.196,0.192 0.027,0.12 -0.08,0.209 z m -7.169,0.403 0.153,0.043 0.109,-0.042 0.097,-0.151 0.091,0.223 0.228,0.183 -0.076,0.186 -0.199,0.021 -0.195,-0.042 -0.207,0.074 -0.251,-0.042 -0.15,-0.174 -0.171,-0.313 -0.085,-0.058 0.011,-0.128 0.063,-0.081 -0.033,-0.021 0.016,-0.057 0.031,-0.039 0.055,-0.016 0.134,0.139 0.318,0.207 0.061,0.088 z m -0.172,1.324 -0.21,0.097 -0.054,-0.061 -0.037,-0.141 0.003,-0.097 -0.201,-0.512 0.154,-0.078 0.114,0.06 0.115,0.081 0.107,0.042 0.098,0.162 -0.023,0.112 0.03,0.108 -0.096,0.227 z m 6.896,0.251 0.327,0.145 0.318,-0.125 0.314,0.035 0.261,0.189 -0.085,0.12 -0.018,0.131 0.584,-0.285 0.156,0.017 -0.005,0.265 -0.035,0.225 -0.068,0.218 -0.124,0.255 -0.166,0.229 -0.218,0.166 -0.259,0.101 -0.123,0.092 -0.037,0.139 0.005,0.174 -0.06,0.159 -0.271,0.065 -0.424,0.309 -0.911,0.196 -0.25,0.135 -0.159,0.174 -0.178,0.158 -0.097,0.039 -0.044,-0.075 -0.013,-0.064 0.13,-0.411 -0.021,-0.171 -0.063,-0.166 0.04,-0.325 0.158,-0.305 0.084,-0.336 0.025,-0.648 0.123,-0.903 -0.007,-0.108 -0.096,-0.122 -0.354,-0.099 -0.14,-0.093 0.07,-0.181 0.134,-0.123 0.184,0.005 0.162,0.115 0.572,0.237 0.304,0.199 0.275,0.248 z m 6.619,0.058 -0.052,0.146 -0.082,-0.041 -0.071,-0.066 -0.105,-0.221 -0.036,-0.162 0.162,0.091 0.093,0.161 0.091,0.092 z m -0.691,0.292 -0.351,0.018 -0.153,-0.13 -0.191,-0.382 0.216,-0.083 0.206,0.022 0.151,0.135 0.161,0.256 -0.039,0.164 z m -0.095,0.424 0.195,0.1 0.225,-0.04 0.272,-0.226 0.306,0.082 0.179,0.333 0.092,0.125 0.05,0.217 -0.013,0.521 -0.074,0.472 0.058,0.097 0.141,0.085 0.122,0.104 0.103,0.134 0.066,0.149 0.026,0.362 0.177,0.305 0.023,0.119 -0.042,0.125 -0.295,-0.024 -0.023,0.105 0.007,0.13 -0.104,-0.082 -0.173,-0.298 -0.158,-0.125 0.049,0.483 0.052,0.231 0.009,0.233 -0.273,-0.178 -0.326,-0.11 -0.09,-0.095 0.03,-0.302 -0.006,-0.15 -0.146,-0.318 0.171,-0.688 -0.004,-0.141 -0.029,-0.141 -0.135,-0.279 -0.214,-0.234 -0.131,0 -0.317,0.164 -0.161,-0.054 -0.095,-0.645 -0.128,-0.626 -0.099,-0.16 -0.063,-0.168 0.063,-0.139 0.122,0.057 0.174,0.165 0.21,0.095 0.105,0.083 0.072,0.147 z m -13.227,-0.519 0.061,0.15 -0.079,0.226 -0.067,0.049 -0.09,-0.094 -0.192,-0.066 -0.013,-0.122 0.101,0.003 0.184,-0.119 0.095,-0.027 z m -7.157,8.738 -0.26,0.204 0.028,-0.252 0.076,-0.237 0.264,-0.487 0.191,-0.15 0.314,-0.383 0.178,-0.186 0.426,-0.367 0.392,-0.402 0.132,-0.03 0.145,-0.006 0.114,-0.046 0.256,-0.217 0.643,-0.724 0.532,-0.54 0.545,-0.683 0.26,-0.199 0.069,-0.073 0.502,-0.63 0.157,-0.092 0.178,-0.066 0.12,-0.085 0.106,-0.107 0.177,-0.274 0.072,-0.321 -0.045,-0.181 -0.1,-0.267 0.125,-0.365 0.099,-0.168 0.35,-0.742 0.101,-0.15 0.146,0.094 0.02,0.133 -0.072,0.313 -0.006,0.157 0.083,0.159 -0.1,0.263 0.251,0.698 0.192,0.441 0.007,0.146 -0.258,0.264 -0.153,0.08 -0.331,0.071 -0.149,0.077 -0.237,0.214 -0.148,0.282 -0.037,0.146 -0.076,0.112 -0.682,0.191 -0.32,0.125 -0.146,0.094 -0.077,0.153 0.054,0.27 -0.573,0.973 -0.183,0.254 -0.195,0.217 -0.24,0.154 -0.337,0.094 -0.268,0.188 -0.182,0.333 -0.224,0.3 -0.283,0.223 -0.306,0.196 -0.28,0.143 -0.303,0.101 -0.091,0.131 -0.064,0.162 -0.134,0.076 -0.159,0.043 -0.286,0.155 z m 18.09,-8.049 0.164,0.377 -0.222,-0.002 -0.081,-0.274 0.095,-0.089 0.044,-0.012 z m -1.085,5.198 -0.108,0.075 -0.044,-0.187 0.031,-0.252 0.215,-0.88 -0.049,-0.22 0.359,-0.491 0.221,-0.46 0.333,-0.484 0.042,-0.251 0.295,-0.479 0.275,-0.661 -0.015,-0.219 0.071,-0.109 0.04,-0.166 0.008,-0.141 0.202,-0.246 0.053,0.16 -0.06,0.314 0.01,0.151 0.035,0.071 0.002,0.292 -0.072,0.448 0.066,0.517 -0.13,0.526 -0.148,0.236 -0.219,0.167 -0.239,0.104 -0.248,0.262 -0.16,0.306 -0.026,0.279 -0.394,0.94 -0.346,0.398 z m -0.672,1.089 -0.186,0.03 -0.196,-0.016 -0.132,-0.139 -0.228,-0.598 -0.265,-0.146 -0.303,-0.11 -0.152,-0.093 -0.134,-0.112 -0.426,-0.597 -0.032,-0.365 0.073,-0.207 0.129,-0.185 0.146,-0.05 0.351,-0.007 0.182,-0.024 0.4,-0.274 0.028,-0.108 0.003,-0.451 -0.04,-0.315 -0.1,-0.308 0.108,-0.141 0.142,-0.139 0.147,-0.272 0.028,-0.191 0.003,-0.2 0.038,-0.143 0.115,-0.072 0.554,-0.218 0.098,-0.015 0.713,0.202 0.146,0.304 0.014,0.1 -0.111,0.337 -0.099,0.226 -0.24,0.35 -0.179,0.378 -0.133,0.569 -0.084,0.185 -0.224,0.356 -0.068,0.195 0.002,0.423 -0.038,0.156 0.002,0.15 0.444,0.705 0.038,0.111 -0.004,0.126 -0.076,0.157 -0.182,0.271 -0.102,0.095 -0.17,0.07 z m -1.351,-3.985 -0.078,0.039 -0.069,-0.005 -0.165,0.102 -0.061,-0.191 0.059,-0.326 0.248,-0.249 0.063,-0.078 0.067,-0.046 0.081,-0.005 0.078,0.097 0.022,0.147 -0.157,0.444 -0.088,0.071 z m 4.678,-0.378 -0.078,0.013 0.13,-0.298 0.103,0.043 0.031,0.033 -0.003,0.134 -0.183,0.075 z m -12.349,0.34 -0.346,0.087 -0.08,-0.273 0.245,-0.251 0.275,0.101 0.164,0.098 -0.077,0.089 -0.181,0.149 z m 16.204,1.619 -0.049,0.079 -0.067,-0.163 -0.163,-0.153 -0.157,-0.26 -0.111,-0.081 0.076,-0.206 0.007,-0.335 0.156,-0.153 0.072,-0.045 0.118,-0.163 0.053,-0.009 0.05,0.136 -0.106,0.416 0.159,0.492 -0.054,0.307 0.023,0.069 -0.007,0.069 z m -3.076,0.36 -0.027,0.104 -0.221,-0.008 -0.079,0.016 -0.208,0.266 -0.122,0.067 -0.666,0.087 -0.524,-0.07 -0.18,-0.146 -0.117,-0.241 -0.036,-0.159 0.132,-0.174 0.126,-0.115 0.424,-0.228 0.096,-0.173 0.222,-0.209 0.457,-0.07 0.044,0.052 0.061,0.033 0.092,0.009 0.227,0.172 0.254,0.11 -0.062,0.417 0.076,0.141 0.031,0.119 z m 1.928,-0.552 0.019,0.14 -0.36,-0.369 -0.073,-0.261 0.12,0.011 0.154,0.1 0.14,0.379 z m 2.184,0.612 -0.035,0.015 -0.156,-0.22 0.021,-0.25 0.211,-0.374 0.156,0.327 -0.002,0.148 -0.022,0.073 0.146,0.185 -0.101,0.091 -0.218,0.005 z m -0.149,1.258 0.229,0.17 0.297,-0.045 -0.004,0.429 0.048,0.125 0.269,0.363 0.042,0.303 -0.159,0.284 -0.119,0.135 -0.222,0.194 -0.005,0.089 0.094,0.101 0.307,0.058 0.232,0.156 0.041,0.443 0.222,0.349 -0.006,0.152 -0.088,0.624 0.028,0.266 0.166,0.213 0.14,0.09 0.072,0.134 0.065,0.367 -0.012,0.623 -0.021,0.218 -0.098,0.202 -0.303,0.459 -0.406,0.365 -0.217,-0.024 -0.069,0.108 0.135,0.333 -0.054,0.703 -0.089,0.487 -0.132,-0.247 -0.092,-0.258 -0.083,-0.684 -0.104,-0.308 -0.163,-0.282 -0.065,-0.252 -0.169,-0.235 -0.216,-0.608 -0.143,0.031 -0.237,0.167 -0.053,0.114 -0.028,0.173 -0.055,0.156 -0.276,0.249 -0.218,0.296 -0.179,0.324 -0.057,0.297 0.146,0.232 0.15,0.094 0.219,0.208 0.067,0.095 0.23,0.675 -0.008,0.691 -0.168,0.304 -0.427,0.577 -0.308,0.183 -0.164,-0.093 -0.132,-0.35 -0.021,-0.144 0.089,-0.329 0.01,-0.301 -0.104,-0.102 -0.113,0.02 -0.048,0.043 -0.275,0.395 -0.114,0.1 -0.169,0.014 -0.134,-0.027 -0.816,-0.345 -0.667,-0.34 -0.522,-0.318 -0.378,-0.48 -0.079,-0.359 -0.005,-0.376 -0.169,-0.551 -0.02,-0.188 0.012,-0.18 0.169,-0.338 0.203,-0.171 0.114,-0.123 0.091,-0.136 0.063,-0.182 -0.018,-0.181 -0.068,-0.113 -0.321,-0.397 -0.279,-0.244 -0.571,-0.219 -0.133,-0.121 -0.146,-0.091 -0.159,-0.039 -0.156,-10e-4 -0.169,0.068 -0.044,0.145 0.012,0.13 -0.015,0.126 -0.239,0.725 -0.306,-0.159 -0.292,-0.184 -0.077,-0.129 -0.033,-0.154 -0.05,-0.104 -0.068,-0.094 -0.134,0.242 -0.167,0.191 -0.204,0.044 -0.207,0.003 -0.068,-0.083 -0.075,-0.461 -0.219,-0.146 -0.274,0.031 -0.332,0.254 -0.065,0.095 -0.073,0.219 -0.361,0.622 -0.191,0.478 -0.212,0.466 -0.094,0.153 -0.125,0.101 -0.197,-0.042 -0.179,-0.111 -0.168,-0.3 0.057,-0.349 0.188,-0.223 0.157,-0.238 0.189,-0.833 0.015,-0.296 0.033,-0.127 0.313,-0.379 0.264,-0.235 0.139,-0.049 0.569,-0.134 0.234,-0.112 0.369,-0.002 0.3,-0.064 0.239,-0.181 0.018,-0.187 -0.011,-0.195 0.053,-0.119 0.092,-0.1 0.128,-0.132 0.144,-0.099 0.409,-0.072 0.136,-0.082 0.109,-0.127 0.152,-0.248 0.181,0.062 0.182,0.096 0.327,0.076 0.289,0.206 0.186,0.324 0.031,0.16 0.048,0.527 -0.067,0.123 -0.282,0.245 0.13,0.026 0.37,-0.223 0.185,-0.086 0.456,-0.12 0.107,-0.079 0.079,-0.118 0.161,-0.323 0.117,-0.345 0.093,-0.144 0.131,-0.114 0.131,-0.019 0.479,0.236 0.307,-0.114 0.086,-0.358 0.07,-0.52 0.055,-0.141 0.176,-0.136 0.21,0.044 0.288,0.187 0.266,0.062 0.099,-0.15 0.094,-0.296 0.107,0.001 0.358,0.098 0.346,-0.065 0.098,-0.356 -0.065,-0.381 -0.271,-1.112 0.161,-0.248 0.14,-0.007 0.341,0.296 0.657,0.4 0.219,0.244 0.138,0.3 z m -0.1,-0.77 -0.051,0.072 -0.085,-0.151 0.074,-0.333 0.054,-0.056 0.07,0.211 -0.062,0.257 z m -6.379,1.007 0.024,0.293 -0.258,0.085 -0.207,-0.075 -0.133,-0.176 10e-4,-0.066 0.116,0.005 0.255,-0.154 0.081,-0.03 0.121,0.118 z m 3.113,0.267 -0.08,0.168 -0.315,-0.139 -0.075,-0.121 0.04,-0.143 0.154,-0.049 0.08,0 0.15,0.15 0.046,0.134 z m -20.912,2.617 -0.191,0.066 -0.042,-0.176 0.024,-0.173 0.137,0.019 0.067,0.054 0.005,0.21 z m -0.773,0.933 -0.146,0.214 -0.165,-0.246 0.018,-0.343 0.051,-0.095 0.233,-0.052 0.009,0.522 z m 16.438,1.335 0.031,0.065 -0.013,0.07 -0.292,0.13 -0.098,-0.004 -0.023,-0.217 0.072,-0.099 0.138,0.088 0.122,-0.102 0.063,0.069 z m 7.992,1.254 -0.044,0.16 -0.173,-0.377 -0.068,-0.093 0.088,-0.315 0.193,0.154 0.004,0.471 z m -10.361,1.5 -0.284,0.039 -0.091,-0.003 -0.223,-0.286 -0.021,-0.126 -0.179,-0.143 0.065,-0.142 0.232,-0.034 0.402,-0.181 0.645,0.286 0.1,0.103 -0.201,0.063 -0.143,0.271 -0.302,0.153 z m -2.621,0.989 0.153,0.202 0.192,-0.053 0.306,0.057 0.065,0.105 -0.01,0.069 -0.327,0.195 -0.215,-0.204 -0.379,0.139 -0.181,-0.084 -0.247,0.075 -0.152,-0.158 0.062,-0.152 0.392,-0.25 0.341,0.059 z m -2.55,2.295 -0.076,0.169 -0.089,0.079 -0.116,-0.044 -0.089,-0.087 -0.05,0.13 -0.245,0.05 -0.155,0.2 -0.226,0.054 -0.158,-0.026 0.017,-0.178 0.437,-0.267 0.272,-0.099 0.239,-0.193 0.12,-0.021 0.061,0.157 0.058,0.076 z\"\n\t\t\t\tid=\"PH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 684.93575,351.7284 0.135,0.093 0.168,-0.055 0.295,-0.066 0.256,0.049 0.565,0.209 0.085,0.104 0.133,0.507 0.101,0.046 0.318,-0.119 0.263,0.06 0.295,0.164 0.19,0.158 0.126,0.17 0.135,0.276 0.052,0.22 0.064,0.263 -0.017,0.74 -0.096,0.121 -0.082,0.157 0.02,0.137 0.093,0.108 0.183,0.074 0.169,0.046 0.091,0.117 0.125,0.414 0.084,0.064 0.208,-0.002 0.376,-0.09 0.326,-0.142 0.139,-0.03 0.034,0.393 0.192,0.15 0.268,0.175 0.111,0.058 0.314,0.166 0.593,0.211 0.575,0.151 0.426,0.112 0.206,0.007 0.147,0.005 0.425,-0.03 0.212,-0.052 -0.288,0.18 -0.352,0.222 -0.416,0.26 -0.366,0.23 -0.35,0.219 -0.335,0.21 -0.051,0.163 -0.083,0.239 -0.307,0.182 -0.306,0.131 -0.071,0.077 -0.023,0.103 -0.148,0.206 -0.286,0.174 -0.237,-0.017 -0.15,-0.052 -0.797,0.3 -0.37,-0.007 -0.288,0.194 -0.214,0.178 -0.428,0.194 -0.291,10e-4 -0.43,-0.115 -0.529,-0.22 -0.214,-0.127 -0.194,0.007 -0.468,-0.03 -0.458,-0.109 -0.546,-0.129 -0.27,-0.055 -0.554,-0.114 -0.361,0.152 -0.326,0.136 -0.265,0.093 -0.219,0.422 -0.093,0.149 -0.106,0.212 -0.05,0.15 0.044,0.179 0.321,0.126 0.134,0.174 0.02,0.153 -0.116,0.157 -0.097,0.124 10e-4,0.109 0.052,0.11 0.077,0.082 0.456,0.051 0.271,0.001 0.105,0.044 0.013,0.149 -0.1,0.2 -0.384,0.161 -0.217,0.17 -0.07,0.225 0.003,0.179 0.075,0.119 0.184,0.137 0.173,0.156 0.053,0.127 -0.022,0.174 -0.069,0.238 -0.189,0.277 -0.158,0.197 -0.011,0.07 0.039,0.106 0.127,0.154 0.216,0.227 0.269,0.183 0.173,0.051 0.055,0.045 0.054,0.212 0.021,0.223 -0.069,0.168 0.138,0.138 0.361,-0.007 0.294,0.059 0.124,-0.059 0.087,0.044 -0.055,0.498 0.04,0.294 0.079,0.083 0.289,0.12 0.556,-0.015 0.329,0.139 0.363,0.159 0.193,0.176 0.087,0.131 -0.024,0.211 -0.199,0.247 -0.323,0.118 -0.189,0.051 -0.932,0.462 -0.291,0.195 -0.226,0.234 -0.083,0.176 -0.044,0.171 0.202,0.62 0.034,0.192 -0.166,0.667 -0.049,0.247 0.063,0.173 0.198,0.064 0.043,0.145 0.019,0.111 -0.344,0.244 -0.364,0.216 -0.115,-0.001 -0.348,0.405 -0.579,0.809 -0.308,0.274 -0.022,0.133 -0.024,0.136 0.117,0.228 0.024,0.193 -0.13,0.193 -0.218,0.223 -0.424,0.193 -0.535,0.199 -0.24,0.12 -0.181,0.52 -0.167,0.521 -0.075,0.193 -0.288,0.599 -0.504,0.88 -0.128,0.192 -0.78,0.423 -0.795,0.46 -0.141,0.174 -0.163,0.418 -0.153,0.458 -0.143,0.239 -0.506,0.536 -0.166,0.411 -0.053,0.268 -0.43,0.15 -0.488,0.143 -0.71,0.046 -0.295,0.075 -0.87,0.369 -0.216,0.016 -0.17,-0.061 -0.128,-0.126 -0.119,-0.21 -0.057,-0.323 -0.168,-0.146 -0.226,-0.125 -0.238,-0.005 -0.24,0.137 -0.207,0.15 -0.142,0.124 -0.138,0.145 -0.267,0.486 -0.431,0.697 -0.481,0.506 -0.178,0.151 -0.111,0.115 -0.151,0.168 -0.087,0.162 -0.119,0.529 -0.069,0.468 0.032,0.105 0.072,0.089 0.263,0.135 0.379,0.226 0.493,0.128 0.415,0.022 0.156,0.096 0.092,0.13 0.026,0.109 -0.022,0.386 -0.047,0.414 -0.153,0.444 0.002,0.254 0.061,0.249 0.461,0.63 0.17,0.065 0.346,0.014 0.161,-0.013 0.179,-0.064 0.127,0.044 0.095,0.077 0.024,0.128 -0.015,0.627 0.142,0.284 0.275,0.386 0.217,0.441 0.205,0.527 0.197,0.412 0.076,0.215 -0.128,0.104 -0.073,0.108 -0.019,0.144 0.027,0.152 -0.017,0.107 0.093,0.132 0.109,0.044 -0.003,0.092 -0.172,0.119 -0.153,-0.004 -0.118,0.058 -0.228,0.25 -0.106,0.05 -0.143,0.023 -0.159,-0.025 -0.226,-0.101 -0.065,-0.159 0.025,-0.167 -0.051,-0.1 -0.162,0.019 -0.561,0.171 -0.535,0.211 -0.093,0.144 -0.124,0.149 -0.245,0.062 -0.362,0.019 -0.249,-0.023 -0.23,-0.161 -0.21,-0.146 -0.325,-0.007 -0.585,0.022 -0.324,-0.002 -0.191,-0.054 -0.188,0.041 -0.235,-0.06 -0.105,0.08 -0.099,0.008 -0.079,-0.138 -0.053,-0.015 -0.062,0.02 -0.055,0.047 -0.032,0.081 -0.011,0.92 -0.386,-0.006 -0.275,-0.002 -0.302,0.05 -0.276,0.07 -0.136,0.084 -0.194,0.131 -0.046,0.184 -0.093,0.134 -0.134,-0.198 -0.086,-0.092 -0.1,0.068 -0.142,-0.008 -0.256,-0.226 -0.114,0.228 -0.423,0.052 -0.053,-0.172 -0.01,-0.16 -0.233,0.116 -0.167,-0.178 -0.075,-0.239 -0.064,-0.066 -0.073,-0.076 -0.176,-0.082 -0.156,-0.254 -0.015,-0.27 -0.044,-0.321 -0.328,-1.192 -0.199,-0.11 -1.117,-0.212 -0.057,-0.209 0.077,-0.562 -0.031,-0.355 -0.362,-0.469 -0.101,-0.328 -0.295,-0.281 -0.293,-0.082 -0.296,0.037 -0.159,0.111 -0.087,0.188 0.632,-0.044 0.142,0.069 0.17,0.123 -0.181,-0.005 -0.21,-0.058 -0.263,0.004 -0.985,0.138 -0.572,0.199 -0.767,-0.059 -0.968,0.196 -0.8,0.011 -0.33,0.381 -0.183,-0.069 -0.14,-0.093 -1.1,-0.299 -0.076,-0.125 -0.184,-0.09 -0.202,0.16 -0.145,0.026 -0.603,-0.133 -0.461,0.101 -0.171,0.172 -0.012,0.267 -0.576,-0.052 -0.326,-0.084 -0.434,0.093 -0.984,-0.123 -0.258,0.03 -0.359,0.178 -0.15,0.138 -0.213,0.054 -0.188,-0.192 -0.14,-0.085 -0.13,0.056 -0.176,0.158 -0.51,0.074 -0.461,-0.021 -0.496,-0.148 0.059,-0.05 0.077,-0.258 0.069,-0.923 0.088,-0.334 -0.026,-0.182 0.018,-0.055 0.195,-0.162 0.047,-0.068 0.074,-0.474 0.082,-0.526 0.091,-0.189 0.076,-0.051 0.615,-0.237 0.105,-0.157 0.317,0.037 0.029,-0.038 0.029,-0.182 0.147,-0.197 0.204,-0.162 0.153,-0.057 0.553,-0.102 0.324,-0.142 0.097,-0.015 0.861,0.036 0.181,-0.054 0.028,-0.05 0.051,-0.538 0.157,-0.084 0.024,-0.045 -0.053,-0.373 0.03,-0.249 0.177,-0.148 -0.011,-0.084 -0.126,-0.177 -0.169,-0.113 -0.082,-0.027 -0.706,0.107 -0.292,-0.035 -0.136,-0.065 -0.029,-0.048 0.028,-0.109 0.005,-0.177 0.102,-0.276 0.031,-0.165 -0.083,-0.957 -0.119,-0.637 0.064,-0.633 -0.013,-0.131 -0.024,-0.03 -0.089,0 -0.43,0.056 -0.366,-0.408 -0.228,-0.161 -0.624,-0.203 -0.274,-0.04 -0.401,-0.176 -0.371,-0.385 -0.378,-0.395 -0.153,-0.253 -0.169,-0.431 -0.478,-0.827 0.004,-0.214 -0.059,-0.131 -0.467,-0.545 -0.331,-0.388 -0.535,-0.628 1.069,0.352 0.833,0.269 1.347,0.434 1.045,0.337 0.289,0.055 3.063,-0.288 1.131,0.218 0.359,0.122 0.054,-0.071 0.152,-0.148 0.264,-0.15 0.358,-0.119 0.357,-0.065 0.512,-0.009 0.348,0.01 0.257,0.036 0.496,-0.021 0.238,-0.058 0.815,-0.238 0.548,-0.16 0.829,-0.249 0.605,-0.183 0.151,-0.097 0.156,-0.174 0.075,-0.157 -0.186,-0.242 -0.024,-0.213 0.122,-0.271 0.066,-0.413 -0.013,-0.589 -0.04,-0.34 0.169,-0.633 0.141,-0.356 0.281,-0.17 0.196,-0.104 0.081,-0.077 0.08,-0.085 0.3,-0.484 0.275,-0.226 0.266,-0.137 0.292,0.018 0.247,0.187 0.48,0.082 0.465,-0.055 0.403,-0.141 0.183,-0.115 0.214,-0.101 -0.012,-0.116 -0.243,-0.1 -0.139,-0.142 -0.054,-0.174 0.136,-0.106 0.318,-0.031 0.778,-0.425 0.317,-0.28 0.086,-0.131 0.15,-0.014 0.296,0.13 0.347,0.043 0.217,-0.13 0.216,-0.029 0.212,0.142 0.114,0.17 0.192,0.202 0.243,0.04 0.293,-0.108 0.308,-0.234 0.292,-0.328 0.259,-0.324 -0.064,-1.03 -0.043,-0.609 0.137,-0.322 0.195,-0.197 0.129,-0.307 -0.003,-0.271 0.137,-0.228 0.136,-0.623 0.185,-0.147 0.382,-0.102 0.608,-0.059 0.477,-0.285 0.48,-0.304 0.064,-0.268 -0.18,-0.286 -0.241,-0.556 -0.217,-0.333 -0.53,-0.598 0.061,-0.369 0.295,-0.151 0.726,0.256 0.202,0.05 0.253,0.036 0.669,-0.006 0.546,-0.1 0.57,-0.228 0.112,-0.238 -0.007,-0.283 0.01,-0.234 0.009,-0.325 -0.205,-0.209 -0.124,-0.187 -0.037,-0.15 0.143,-0.082 0.139,-0.153 0.133,-0.278 0.316,-0.333 0.191,-0.3 0.18,-0.142 0.272,-0.196 0.174,-0.287 0.08,-0.172 0.157,-0.168 0.053,-0.11 -0.043,-0.099 -0.078,-0.124 -0.089,-0.14 0,-0.136 0.074,-0.143 0.081,-0.129 -0.038,-0.181 -0.043,-0.295 -0.148,-0.174 -0.1,-0.403 -0.157,-0.41 -0.084,-0.16 -0.154,-0.202 -0.344,-0.214 -0.099,-0.143 0.134,-0.276 0.225,-0.171 0.423,-0.423 0.231,-0.292 0.209,-0.204 0.27,0.034 0.158,-0.018 0.139,-0.189 0.276,-0.167 0.491,-0.346 0.172,-0.234 0.261,-0.118 0.217,-0.027 0.292,-0.082 0.281,-0.126 0.257,-0.096 0.402,-0.02 0.639,-0.057 0.344,-0.06 0.827,-0.046 0.9,-0.021 0.104,-0.002 0.39,0.124 0.264,0.104 0.104,-0.009 0.437,-0.248 0.664,-0.304 0.309,-0.135 0.166,-0.05 0.257,0.003 0.207,0.08 z\"\n\t\t\t\tid=\"PK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 529.91475,280.8274 0.112,0.058 0.786,0.063 0.797,0.063 1.281,0.069 1.335,0.07 1.386,0.075 1.499,0.079 1.581,0.047 0.097,-0.032 0.161,-0.187 0.197,0.025 0.233,0.116 0.108,0.086 0.046,0.099 0.029,0.114 0.127,0.022 0.233,0.087 0.314,0.197 0.246,0.191 0.235,0.272 0.078,0.308 0.004,0.349 -0.015,0.224 0.02,0.091 0.321,1.613 0.534,1.543 0.196,0.742 0.078,0.394 0.063,0.57 0.019,0.4 -0.002,0.224 -0.04,0.308 -0.158,0.182 -1.025,0.52 -0.193,0.162 -0.302,0.404 -0.279,0.415 -0.064,0.142 -0.017,0.093 0.062,0.136 0.365,0.221 0.368,0.178 0.12,0.133 0.272,0.17 0.099,0.153 0.054,0.132 -0.004,0.307 -0.122,0.423 0.051,0.319 -0.125,0.213 -0.102,0.236 -0.015,0.412 0.184,0.454 0.151,0.31 0.058,0.243 -0.061,0.19 0.018,0.19 0.135,0.202 0.424,0.62 0.209,0.595 0.134,0.232 0.309,0.3 0.028,0.123 -0.124,0.113 -0.1,0.015 -0.081,0.03 -0.052,0.105 0.081,0.113 0.109,0.165 0.136,0.467 -0.013,0.382 -0.105,0.097 -0.134,0.226 -0.09,0.207 -0.733,0.143 -0.176,0.221 -0.401,0.425 -0.273,0.245 -0.405,0.441 -0.64,0.756 -0.236,0.316 -0.173,0.261 -0.518,0.692 -0.159,0.29 0.031,0.238 0.167,0.559 0.035,0.252 -0.03,0.232 -0.055,0.207 0.01,0.092 0.153,0.15 0.243,0.235 0.014,0.079 -0.034,0.102 -0.084,0.077 -0.305,-0.082 -0.34,-0.159 -0.116,0.02 -0.184,-0.038 -0.759,-0.307 -0.512,-0.241 -0.051,-0.157 -0.096,-0.227 -0.218,-0.191 -0.5,-0.165 -0.203,-0.129 -0.812,-0.072 -0.352,-0.003 -0.249,0.053 -0.16,-0.005 -0.219,0.337 -0.151,0.098 -0.221,0.01 -0.194,-0.06 -0.198,-0.177 -0.316,-0.094 -0.229,0.045 -0.169,-0.038 -0.145,-0.01 -0.051,0.036 -0.117,-0.005 -0.169,0.085 -0.186,0.119 -0.204,0.092 -0.158,0.196 -0.14,0.383 -0.397,-0.172 -0.132,0.075 -0.188,0.05 -0.128,-0.052 0.03,-0.132 0.058,-0.149 -0.003,-0.208 -0.036,-0.231 -0.123,-0.075 -0.185,-0.027 -0.095,-0.046 -0.01,-0.076 -0.095,-0.098 -0.164,-0.248 -0.154,-0.31 -0.107,-0.091 -0.155,0.147 -0.235,0.167 -0.147,0.058 -0.283,0.48 -0.508,0.016 -0.031,-0.224 -0.054,-0.216 -0.297,-0.053 -0.009,-0.127 -0.062,-0.318 -0.596,-0.623 -0.072,-0.26 0.023,-0.101 -0.041,-0.166 -0.13,-0.1 -0.471,-0.119 -0.121,0.068 -0.109,-0.07 -0.172,-0.15 -0.297,-0.122 -0.033,-0.063 -0.107,-0.108 -0.059,-0.014 -0.039,0.065 -0.086,0.092 -0.306,0.117 -0.122,-0.048 -0.111,-0.101 -0.127,-0.219 -0.184,-0.192 -0.151,-0.068 -0.087,-0.101 -0.019,-0.078 0.336,-0.158 0.074,-0.163 -0.043,-0.297 -0.05,-0.037 -0.134,0.1 -0.281,0.088 -0.258,0.041 -0.133,0 -0.739,-0.541 -0.48,-0.166 -0.283,-0.048 -0.03,0.055 0.127,0.304 0.222,0.375 -0.011,0.099 -0.265,0.153 -0.15,0.067 -0.177,0.129 -0.15,0.18 -0.13,0.081 -0.112,-0.021 -0.119,-0.086 -0.306,-0.553 -0.385,-0.424 -0.046,-0.095 -0.12,-0.022 -0.17,-0.098 -0.058,-0.13 0.086,-0.136 0.117,-0.124 0.208,-0.077 0.063,-0.073 0.037,-0.109 0.077,-0.141 -0.02,-0.05 -0.147,-0.16 -0.218,-0.151 -0.606,0.113 -0.166,0.081 -0.094,-0.105 -0.071,-0.153 -0.153,-0.03 -0.21,-0.14 -0.249,-0.138 -0.243,-0.04 -0.505,-0.199 -0.195,-0.011 -0.112,-0.068 -0.118,-0.151 -0.1,-0.165 -0.052,-0.336 -0.372,-0.152 -0.371,-0.096 -0.026,0.049 0.016,0.338 -0.02,0.181 -0.245,0.111 -0.242,0.011 0.013,-0.056 0.29,-0.609 0.13,-0.385 0.149,-0.703 -0.179,-0.557 -0.049,-0.262 -0.083,-0.125 -0.509,-0.273 -0.039,-0.094 0.078,-0.37 -0.038,-0.156 -0.123,-0.165 -0.161,-0.328 -0.062,-0.279 0.205,-0.328 0.051,-0.242 0.089,-0.331 0.066,-0.182 0.013,-0.05 -0.135,-0.129 -0.034,-0.182 0.036,-0.262 -0.072,-0.195 -0.18,-0.126 -0.117,-0.168 -0.054,-0.208 0.042,-0.328 0.14,-0.447 -0.296,-0.54 -0.731,-0.633 -0.35,-0.443 0.028,-0.254 0.154,-0.23 0.279,-0.206 0.212,-0.367 0.119,-0.437 0.003,-0.083 0.007,-0.312 -0.325,-1.282 -0.053,-0.322 -0.039,-0.39 -0.02,-0.106 0.642,0.273 0.269,0.154 -0.034,-0.173 -0.054,-0.149 0.036,-0.218 -0.018,-0.33 -0.583,-0.169 -0.385,-0.057 -0.043,-0.23 0.036,-0.149 0.107,0.088 0.378,0.034 0.931,-0.445 1.607,-0.581 1.717,-0.545 0.401,-0.06 0.402,-0.115 0.149,-0.205 0.149,-0.137 0.233,-0.362 0.517,-0.564 0.914,-0.206 0.342,-0.268 0.715,-0.376 1.63,-0.423 0.682,-0.094 0.667,-0.011 0.594,0.334 0.629,0.412 0.113,0.247 -0.34,-0.154 -0.496,-0.369 -0.184,-0.016 0.424,1.121 0.232,0.396 0.467,0.294 0.393,0.1 1.21,-0.179 0.429,-0.234 z\"\n\t\t\t\tid=\"PL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 316.98275,314.5654 -0.245,0.176 -0.085,-0.098 0.021,-0.116 0.125,-0.279 -0.004,-0.081 -0.148,-0.542 0.025,-0.089 0.037,-0.039 0.217,0.115 0.025,0.148 -0.103,0.333 0.071,0.221 0.096,0.16 -0.032,0.091 z m 0.326,0.311 -0.059,0.039 -0.201,-0.059 0.096,-0.127 0.068,-0.037 0.091,-0.016 0.043,0.039 -0.005,0.094 -0.033,0.067 z\"\n\t\t\t\tid=\"PM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 114.85075,533.1164 -0.028,0.046 -0.058,-0.039 -0.06,-0.089 -0.023,-0.093 0.056,-0.052 0.075,0.031 0.036,0.096 z\"\n\t\t\t\tid=\"PN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 289.30375,410.5794 0.086,0.058 0.084,-0.008 -0.068,-0.121 0.063,0 0.538,0.074 0.346,0.125 0.356,0.059 0.022,0.409 -0.274,0.164 -0.179,0.17 -0.146,0.209 -0.384,0.243 -0.462,0.073 -0.308,0.007 -0.115,-0.008 -0.112,-0.042 -0.232,0.04 -0.287,-0.107 -0.246,0.027 -0.488,-0.025 -0.183,0.092 -0.175,0.021 -0.171,-0.017 -0.146,-0.042 -0.362,0.003 -0.153,-0.081 0.063,-0.465 0.005,-0.21 -0.089,-0.174 -0.098,-0.109 -0.07,-0.129 0.142,-0.085 0.117,-0.124 0.037,-0.187 0.128,-0.046 0.15,-0.021 0.692,0.087 1.752,0.049 0.1,0.015 0.067,0.076 z m 1.975,0.996 -0.22,0.018 -0.143,-0.024 -0.048,-0.087 0.267,-0.082 0.311,0.012 0.178,0.049 0.022,0.033 -0.367,0.081 z m -6.867,0.134 -0.026,0.003 -0.026,-0.003 -0.012,-0.008 -0.018,-0.027 -0.08,-0.044 -0.019,-0.041 0.018,-0.042 0.033,-0.017 0.162,-0.004 0.017,0.004 0.032,0.03 10e-4,0.021 -0.016,0.021 -0.029,0.051 -0.012,0.013 -0.009,0.013 -0.004,0.023 -0.012,0.007 z\"\n\t\t\t\tid=\"PR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 571.29375,370.9354 -0.289,0.276 -0.092,-0.274 -0.041,-0.099 0.531,-0.527 0.253,-0.332 0.131,0.142 0.004,0.053 -0.492,0.533 -0.005,0.228 z m 3.32,-2.27 0.077,0.722 -0.167,0.306 -0.095,0.361 -0.042,0.272 -0.117,-0.012 -0.371,0.197 -0.493,0.186 -0.542,0.048 -0.077,-0.055 -0.022,-0.094 0.159,-0.458 0.061,-0.215 0.235,-0.232 0.333,-0.201 0.141,-0.051 -0.016,-0.086 -0.199,-0.133 -0.208,-0.069 -0.197,0.069 -0.062,-0.021 -0.021,-0.059 0.069,-0.083 0.032,-0.154 -0.031,-0.258 -0.021,-0.314 -0.043,-0.244 0.123,-0.396 0.031,-0.189 0.153,-0.404 0.359,-0.245 0.311,0.071 0.164,0.018 0.069,0.048 0.045,0.14 0.229,0.162 0.188,0.021 0.058,0.521 -0.105,0.445 -0.008,0.386 z\"\n\t\t\t\tid=\"PS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 426.64975,365.7404 0.383,0.175 0.352,-0.084 0.436,0.225 0.227,0.052 -0.202,0.161 -0.203,0.204 -0.507,-0.048 -0.429,-0.196 -0.154,-0.149 -0.042,-0.134 0.139,-0.206 z m -21.994,-13.945 -0.012,0.064 -0.159,-0.025 -0.201,0.019 -0.108,-0.186 0.098,-0.077 0.226,-0.019 0.108,0.083 0.048,0.141 z m -1.744,-3.099 0.178,0.024 0.895,-0.052 0.238,0.038 -0.025,0.26 -0.169,0.104 -0.527,0.07 -0.829,-0.168 -0.278,-0.224 -0.04,-0.164 0.005,-0.077 0.175,-0.061 0.377,0.25 z m -7.011,-2.174 0.231,0.143 -0.351,0.031 -0.116,0.07 -0.284,-0.101 -0.343,0.015 -0.215,-0.192 -0.049,-0.2 0.108,-0.124 0.303,-10e-4 0.716,0.359 z m -1.387,-0.258 -0.288,0.009 -0.275,-0.272 0.405,-0.143 0.119,0.087 0.088,0.099 0.052,0.127 -0.101,0.093 z m 2.422,-0.11 -0.133,0.043 -0.748,-0.275 -0.267,-0.125 -0.346,-0.317 0.977,0.385 0.517,0.289 z m 1.973,-0.314 -0.056,0.034 -0.583,-0.097 -0.166,-0.131 -0.067,-0.244 0.098,-0.083 0.256,-0.049 0.372,0.046 0.239,0.175 0,0.223 -0.093,0.126 z m -11.4,-2.747 -0.124,0.174 -0.214,-0.062 -0.071,-0.065 0.062,-0.372 0.171,-0.087 0.172,0.15 0.004,0.262 z m 64.448,-8.888 0.059,0.03 0.163,-0.008 0.29,-0.142 0.197,-0.119 0.069,0.049 0.571,-0.067 0.135,0.054 0.09,0.061 0.281,0.082 0.306,0.009 0.379,-0.115 0.166,-0.116 0.032,-0.128 0.008,-0.097 0.049,-0.062 0.086,-0.035 0.135,0.063 0.193,0.051 0.463,0.021 0.091,-0.071 0.157,0.021 0.207,0.09 0.239,-0.029 0.121,0.11 0.05,0.146 0.014,0.317 -0.018,0.32 0.047,0.118 0.162,0.031 0.261,-0.004 0.235,0.086 0.182,0.151 0.06,0.154 0.026,0.106 -0.089,0.06 -0.126,0.228 -0.32,0.297 -0.457,0.267 -0.349,0.332 -0.24,0.396 -0.301,0.168 -0.092,0.09 -0.036,0.107 0.199,0.484 0.061,0.373 0.049,0.456 -0.032,0.128 -0.017,0.5 -0.046,0.146 0.012,0.119 0.073,0.127 0.033,0.122 -0.137,0.155 -0.251,0.18 -0.186,0.158 -0.05,0.148 0.014,0.092 0.313,0.313 0.057,0.128 -0.042,0.309 -0.18,0.505 -0.172,0.307 -0.03,0.03 -0.197,0.087 -0.944,0.003 -0.229,0.069 0.032,0.062 0.222,0.394 0.231,0.209 0.077,0.048 0.083,0.459 0.375,0.732 0.363,0.101 0.126,0.183 -0.023,0.256 -0.112,0.281 -0.223,0.288 -0.265,0.202 -0.173,0.201 -0.014,0.233 -0.055,0.295 -0.083,0.233 -0.021,0.157 0.664,0.985 0.37,-0.048 0.048,0.023 -0.066,0.234 -0.117,0.274 -0.14,0.052 -0.317,0.084 -0.3,0.354 -0.243,0.425 -0.183,0.206 -0.167,0.504 0.021,0.218 0.081,0.336 0.171,0.874 -0.246,0.039 -0.956,0.569 -0.296,0.001 -0.553,-0.25 -0.976,-0.081 -0.318,-0.075 -0.397,0.164 -0.307,-0.004 -0.244,0.209 -0.175,-0.057 0.201,-0.469 0.315,-0.93 -0.013,-0.569 0.075,-0.496 -0.086,-0.492 -0.158,-0.308 0.215,-0.799 -0.024,-0.413 -0.197,-0.524 0.597,0.08 -0.185,-0.208 -0.182,-0.127 -0.176,0.029 -0.149,-0.008 -0.508,0.203 -0.255,0.061 -0.074,-0.036 0.028,-0.324 -0.132,-0.421 0.204,-0.111 0.237,-0.032 0.202,-0.18 0.125,-0.201 -0.066,-0.359 0.175,-0.341 0.411,-0.289 -0.213,0.044 -0.244,0.18 -0.384,0.652 -0.125,0.33 -0.327,0.107 -0.293,0.053 -0.15,-0.035 -0.18,-0.083 -0.016,-0.243 0.014,-0.194 0.122,-0.386 0.048,-0.546 0.173,-0.49 -0.013,-0.131 -0.049,-0.195 0.154,-0.191 0.191,-0.126 0.29,-0.422 0.405,-1.009 0.467,-1.077 -0.038,-0.132 -0.099,-0.102 0.04,-0.292 0.281,-1.273 0.114,-0.167 0.132,-0.375 0.03,-0.606 0.052,-0.418 -0.012,-0.21 -0.042,-0.253 -0.179,-0.484 -0.188,-1.026 -0.015,-0.344 0.155,-0.174 -0.255,-0.025 -0.116,-0.223 0.026,-0.253 0.284,-0.409 0.265,-0.254 0.262,-0.166 0.145,-0.063 0.605,-0.173 0.159,-0.084 0.149,0.014 0.025,0.083 0.086,0.16 0.096,0.111 0.026,0.082 -0.234,0.343 -0.032,0.117 0.122,0.221 0.018,0.07 z\"\n\t\t\t\tid=\"PT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 852.63475,442.2854 -0.17,0.06 -0.08,-0.215 0.027,-0.25 0.112,-0.192 0.123,-0.061 0.024,-0.022 0.12,-0.249 0.023,0.137 -0.075,0.456 -0.098,0.177 -0.006,0.159 z m -9.606,12.196 -0.063,0.012 -0.041,-0.009 0.005,-0.04 0.042,-0.041 0.058,-0.018 0.044,0.014 -0.005,0.038 -0.04,0.044 z\"\n\t\t\t\tid=\"PW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 311.67075,520.3484 0.062,0.216 0.037,0.167 0.093,0.118 0.092,0.157 0.093,0.089 0.065,0.148 -0.019,0.167 0.038,0.217 0.046,0.187 0.046,0.05 0.134,0.049 0.066,0.17 -0.048,0.086 0.019,0.099 0.048,0.096 -0.044,0.095 0.023,0.071 0.09,0.064 0.084,0.237 0.009,0.406 -0.093,0.218 -0.074,0.178 -0.018,0.109 0.055,0.158 -0.093,0.188 -0.111,0.228 0.028,0.159 0.018,0.149 0.009,0.159 0.028,0.149 -0.037,0.159 -0.037,0.139 -0.019,0.159 0.047,0.179 -0.084,0.169 -0.046,0.119 -0.019,0.12 0.084,0.189 0.214,0.08 0.167,0.02 0.157,-0.1 0.121,-0.03 0.223,0.09 0.204,0.159 0.26,0.02 0.232,0.03 0.176,0.05 0.26,-0.06 0.27,0.06 0.315,0.09 0.26,0.079 0.26,-0.02 0.195,-0.009 0.204,-0.09 0.195,0.01 0.148,-0.16 0.084,-0.139 0.074,-0.1 0.214,-0.08 0.148,0.05 0.121,0.26 0.213,0.149 0.084,0.109 0.157,0.051 0.344,0.009 0.214,-0.009 0.241,0.079 0.157,0 0.14,0.14 0.13,0.169 0.018,0.31 0.121,0.24 0.158,0.09 0.083,0.15 -0.027,0.21 -0.075,0.21 0.01,0.231 0.083,0.21 0,0.211 0.056,0.21 0.111,0.181 0.037,0.291 -0.018,0.211 0.074,0.121 0.028,0.171 -0.047,0.14 -0.018,0.192 0.009,0.171 0.056,0.141 0.167,0.181 0.046,0.323 0,0.222 0.074,0.262 0.14,0.122 0.223,0.04 0.259,0.04 0.316,-0.06 0.279,-0.071 0.157,-0.071 0.306,-0.191 0.27,-0.112 0.139,-0.07 0.13,-0.051 0.269,0.121 0.251,0.152 0.194,0.212 0.363,0.232 -0.071,0.057 -0.144,0.191 0.003,0.223 0.102,0.321 -0.09,0.681 -0.281,1.042 -0.115,0.609 0.05,0.173 -0.104,0.305 -0.385,0.656 -0.015,0.443 -0.045,1.333 -0.129,0.942 -0.217,0.698 -0.197,0.373 -0.179,0.045 -0.127,0.112 -0.078,0.177 -0.144,0.148 -0.212,0.119 -0.114,0.13 -0.018,0.141 -0.202,0.091 -0.387,0.041 -0.226,0.113 -0.068,0.185 -0.129,0.147 -0.192,0.109 -0.09,0.181 0.009,0.253 -0.11,0.216 -0.229,0.181 -0.212,0.005 -0.193,-0.171 -0.26,-0.113 -0.325,-0.057 -0.271,0.044 -0.218,0.142 -0.193,0.226 -0.168,0.31 -0.187,0.052 -0.206,-0.208 -0.261,-0.063 -0.315,0.082 -0.252,-0.028 -0.186,-0.139 -0.287,-0.015 -0.387,0.108 -0.784,-0.125 -1.182,-0.358 -0.999,-0.136 -1.225,0.129 -0.104,-0.372 0.065,-0.2 0.199,-0.151 0.125,-0.171 0.051,-0.191 0.137,-0.146 0.224,-0.1 0.095,-0.101 -0.034,-0.103 0.048,-0.09 0.129,-0.079 0.073,-0.124 0.017,-0.169 0.049,-0.084 0.086,-0.062 0.01,-0.118 -0.048,-0.361 0.006,-0.297 0.06,-0.231 0.075,-0.139 0.053,-0.035 0.05,-0.082 0.019,-0.139 0.081,-0.13 0.391,-0.266 0.147,-0.144 0.013,-0.132 0.059,-0.177 0.232,-0.383 0.071,-0.179 0.006,-0.089 0.083,-0.093 0.28,-0.212 0.151,-0.199 0.024,-0.187 -0.067,-0.212 -0.159,-0.237 -0.499,-0.593 -0.388,-0.269 -0.496,-0.221 -0.326,-0.072 -0.157,0.078 -0.159,-0.062 -0.161,-0.2 -0.272,-0.158 -0.573,-0.172 -1.301,-0.689 -0.521,-0.333 -0.175,-0.205 -0.486,-0.368 -0.797,-0.53 -0.611,-0.258 -0.426,0.014 -0.683,-0.153 -0.939,-0.322 -0.541,-0.313 -0.146,-0.302 -0.347,-0.303 -0.549,-0.303 -0.285,-0.199 -0.021,-0.096 -0.163,-0.125 -0.304,-0.154 -0.334,-0.263 -0.364,-0.372 -0.389,-0.576 -0.414,-0.777 -0.444,-0.524 -0.474,-0.27 -0.238,-0.179 0.001,-0.087 -0.071,-0.083 0.064,-0.15 0.172,-0.589 0.25,-0.852 0.26,-0.88 0.305,-1.035 0,-0.733 10e-4,-0.77 0.434,-0.633 0.308,-0.449 0.267,-0.427 0.269,-0.73 0.18,-0.486 0.687,-0.116 1.167,-0.252 0.582,-0.126 1.227,-0.265 1.247,-0.27 1.309,-0.017 1.264,-0.017 0.98,0.604 0.749,0.462 0.825,0.508 0.057,0.11 0.057,0.427 z\"\n\t\t\t\tid=\"PY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 618.77875,392.0844 -0.253,0.063 -0.237,0.067 -0.198,-0.002 -0.16,-0.026 -0.106,-0.065 -0.204,-0.26 -0.144,-0.337 0.089,-0.188 0.03,-0.117 -0.195,-0.89 -0.063,-0.685 0.023,-0.14 0.111,-0.162 0.186,-0.358 0.099,-0.345 0.278,-0.798 0.295,-0.308 0.432,-0.226 0.356,0.442 0.432,0.337 0.083,0.377 -0.127,0.307 -0.118,0.486 0.071,0.224 0.026,0.194 0.117,0.325 0.114,0.421 0.019,0.293 -0.061,0.271 -0.151,0.228 -0.296,0.684 -0.088,0.071 z\"\n\t\t\t\tid=\"QA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 631.48975,523.8534 -0.397,0.089 -0.276,-0.032 -0.547,-0.254 -0.146,-0.169 -0.218,-0.475 0.048,-0.167 0.172,-0.294 0.39,-0.116 0.41,0.043 0.184,0.08 0.217,0.344 0.28,0.35 -0.047,0.416 z\"\n\t\t\t\tid=\"RE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 554.07275,320.1704 0.296,0.411 0.375,0.219 0.868,0.231 0.078,-0.028 0.008,-0.043 -0.06,-0.06 -0.009,-0.076 0.042,-0.094 0.12,-0.005 0.196,0.084 0.374,-0.122 0.55,-0.328 0.506,-0.066 0.46,0.194 0.236,0.226 0.152,0.215 -0.048,0.265 -0.029,0.165 -0.121,0.681 -0.084,0.254 -0.135,0.284 -1.429,0.339 0.092,-0.163 -0.033,-0.285 -0.06,-0.216 0.133,-0.194 -0.321,-0.071 -0.141,0.107 -0.11,0.186 0.097,0.429 -0.156,0.237 -0.06,0.132 -0.007,0.313 -0.093,0.134 -0.018,0.148 0.228,-0.038 -0.103,0.269 -0.428,0.516 -0.15,0.308 0.037,1.215 -0.191,0.724 -0.015,0.213 -0.454,0.007 -0.136,-0.017 -0.43,-0.108 -0.483,-0.192 -0.283,-0.374 -0.181,-0.267 -0.41,0.121 -0.077,-0.032 -0.113,-0.129 -0.308,-0.087 -0.381,-0.002 -0.855,-0.489 -0.094,-0.082 -0.672,0.082 -1.006,0.242 -0.767,0.299 -0.793,0.531 -0.321,0.402 -0.373,0.213 -0.53,0.158 -0.947,-0.059 -0.987,-0.202 -1.059,-0.217 -0.573,0.12 -0.774,-0.09 -1.168,-0.259 -0.87,-0.079 -0.858,0.153 -0.144,-0.117 -0.031,-0.134 0.033,-0.189 0.121,-0.153 0.208,-0.116 0.109,-0.118 0.012,-0.119 -0.233,-0.192 -0.478,-0.265 -0.197,-0.166 -0.048,-0.041 -0.013,-0.149 -0.099,-0.117 -0.186,-0.086 -0.143,-0.155 -0.102,-0.225 0.022,-0.212 0.145,-0.199 0.186,-0.087 0.226,0.027 0.094,-0.057 -0.038,-0.139 -0.221,-0.179 -0.405,-0.217 -0.412,0.118 -0.421,0.454 -0.302,0.073 -0.186,-0.305 -0.33,-0.183 -0.475,-0.057 -0.292,-0.117 -0.109,-0.177 -0.208,-0.136 -0.458,-0.145 -0.006,-0.138 0.074,-0.033 0.163,-0.013 0.218,-0.029 0.035,-0.079 0.002,-0.072 -0.172,-0.091 -0.173,-0.062 -0.091,-0.062 -0.058,-0.069 -0.012,-0.072 0.051,-0.049 0.07,-0.003 0.069,-0.043 0.039,-0.167 0.094,-0.138 0.067,-0.048 -0.004,-0.102 -0.07,-0.095 -0.095,-0.082 -0.14,-0.05 -0.436,-0.144 -0.22,-0.2 -0.135,-0.008 -0.213,-0.111 -0.23,-0.174 -0.2,-0.248 -0.215,-0.161 -0.056,-0.066 -0.005,-0.062 0.04,-0.07 -0.002,-0.076 -0.056,-0.243 0.038,-0.258 -0.01,-0.243 -0.003,-0.109 -0.042,-0.034 -0.037,0.037 -0.053,0.046 -0.052,0.009 -0.159,-0.177 -0.201,-0.361 -0.136,-0.121 -0.265,-0.166 -0.224,-0.14 -0.16,-0.302 -0.167,-0.234 0.11,-0.098 0.637,-0.138 0.297,0.135 0.133,-0.049 0.129,-0.109 0.072,-0.088 0.013,-0.093 0.064,-0.116 0.215,-0.055 0.57,0.071 0.229,-0.163 0.085,-0.088 0.052,-0.196 0.06,-0.158 0.204,-0.084 -0.003,-0.144 -0.031,-0.156 0.118,-0.351 0.072,-0.144 0.116,-0.052 0.139,-0.111 0.242,-0.23 -0.056,-0.2 0.048,-0.149 0.252,-0.362 0.192,-0.35 -0.003,-0.176 0.028,-0.153 0.17,-0.168 0.178,-0.219 0.235,-0.686 0.085,-0.115 0.154,-0.131 0.115,-0.13 0.012,-0.452 0.108,-0.131 0.207,-0.147 0.206,-0.236 0.167,-0.28 0.129,-0.131 0.171,-0.035 0.185,-0.11 0.207,-0.041 0.201,0.054 0.127,-0.028 0.193,-0.136 0.491,-0.516 0.069,-0.103 0.102,-0.071 0.398,-0.177 0.101,-0.178 0.137,-0.16 0.177,0.012 0.578,0.396 0.618,-0.025 0.113,0.015 0.037,0.008 0.076,0.032 0.822,0.196 0.127,-0.022 0.035,-0.015 0.331,0.161 0.293,-0.021 0.278,-0.112 0.289,-0.038 0.266,0.067 0.202,0.227 0.525,0.482 0.156,0.18 0.24,-0.027 0.266,-0.09 0.269,-0.321 0.827,-0.366 0.631,-0.091 0.616,-0.147 0.713,-0.104 0.206,-0.3 0.114,-0.205 0.081,-0.38 0.384,-0.11 0.365,-0.078 0.13,-0.048 0.266,-0.015 0.207,0.032 0.319,0.188 0.224,0.235 0.088,0.187 0.191,0.264 0.201,0.369 0.222,0.491 0.048,0.247 0.084,0.268 0.165,0.325 0.315,0.36 0.044,0.067 0.143,0.253 0.276,0.559 0.231,0.223 0.201,0.243 0.097,0.244 0.144,0.221 0.338,0.293 0.274,0.266 0.219,0.763 0.153,0.35 0.098,0.267 -0.047,0.54 0.061,0.231 -0.125,0.421 -0.226,0.844 -0.055,0.67 0.039,0.36 0.005,0.231 0.055,0.147 0.06,0.304 0.009,0.264 -0.081,0.075 -0.113,0.063 -0.044,0.055 0.104,0.119 0.142,0.221 z\"\n\t\t\t\tid=\"RO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 530.25175,317.3554 0.337,0.024 0.252,-0.063 0.637,0.08 0.137,0.063 0.089,0.071 0.167,0.234 0.16,0.302 0.224,0.14 0.265,0.166 0.136,0.121 0.201,0.361 0.159,0.177 0.052,-0.009 0.053,-0.046 0.037,-0.037 0.042,0.034 0.003,0.109 0.01,0.243 -0.038,0.258 0.056,0.243 0.002,0.076 -0.04,0.07 0.005,0.062 0.056,0.066 0.215,0.161 0.2,0.248 0.23,0.174 0.213,0.111 0.135,0.008 0.22,0.2 0.436,0.144 0.14,0.05 0.095,0.082 0.07,0.095 0.004,0.102 -0.067,0.048 -0.094,0.138 -0.039,0.167 -0.069,0.043 -0.07,0.003 -0.051,0.049 0.012,0.072 0.058,0.069 0.091,0.062 0.173,0.062 0.172,0.091 -0.002,0.072 -0.035,0.079 -0.218,0.029 -0.163,0.013 -0.074,0.033 0.006,0.138 0.458,0.145 0.208,0.136 0.109,0.177 0.292,0.117 0.475,0.057 0.33,0.183 0.186,0.305 0.302,-0.073 0.421,-0.454 0.412,-0.118 0.405,0.217 0.221,0.179 0.038,0.139 -0.094,0.057 -0.226,-0.027 -0.186,0.087 -0.145,0.199 -0.022,0.212 0.102,0.225 0.143,0.155 0.186,0.086 0.099,0.117 0.013,0.149 0.048,0.041 -0.106,0.068 -0.114,0.102 -0.065,0.178 -0.017,0.285 -0.36,0.223 -0.135,0.041 -0.061,0.148 -0.095,0.417 0.011,0.313 0.049,0.159 0.022,0.13 0.117,0.159 0.106,0.244 0.07,0.322 0.156,0.248 0.399,0.244 0.198,0.142 0.147,0.206 0.112,0.186 0.329,0.247 -0.025,0.176 -0.072,0.172 -0.076,0.081 -0.164,0.221 -0.16,0.124 -0.263,0.389 -0.415,0.021 -0.099,0.031 -0.158,0.106 -0.077,0.194 0.074,0.156 -0.007,0.157 -0.075,0.305 0.1,0.327 0.147,0.149 0.023,0.086 -0.025,0.152 -0.219,0.31 -0.066,0.115 -0.219,0.056 -0.075,-0.029 -0.113,-0.106 -0.105,-0.032 -0.261,0.125 -0.266,0.077 -0.209,-0.058 -0.206,-0.007 -0.143,0.051 -0.108,0.02 -0.212,0.134 -0.339,0.097 -0.157,-0.021 -0.058,-0.126 -0.064,-0.179 0.031,-0.082 0.225,-0.142 0.025,-0.135 0.314,-0.654 0.06,-0.213 0.002,-0.069 -0.082,-0.047 -0.172,0.002 -0.763,-0.266 0.035,-0.305 -0.224,-0.165 -0.242,-0.147 -0.04,-0.164 -0.269,-0.332 -0.196,-0.186 -0.251,-0.093 -0.216,-0.137 -0.13,-0.084 -0.058,-0.155 0,-0.092 -0.065,-0.089 -0.104,0.01 -0.177,0.124 -0.217,0.106 -0.038,0.078 0.079,0.183 0.056,0.118 -0.026,0.11 -0.068,0.141 -0.418,0.31 -0.047,0.109 0.08,0.174 -0.051,0.08 -0.349,0.115 0.009,-0.095 -0.022,-0.153 -0.2,-0.163 -0.283,-0.126 -0.628,-0.433 -0.241,-0.057 -0.216,-0.051 -0.309,-0.207 -0.159,-0.037 -0.176,-0.148 -0.384,-0.502 -0.327,-0.274 -0.223,-0.138 -0.063,-0.135 -0.013,-0.139 0.007,-0.047 0.169,-0.198 0.13,-0.028 0.167,-0.007 0.111,0.1 0.144,0.022 0.081,-0.128 0.042,-0.184 -0.019,-0.235 -0.349,-0.547 -0.299,-0.382 -0.035,-0.085 0.065,-0.072 0.105,-0.038 0.112,0.032 0.292,0.028 0.281,-0.036 0.096,-0.093 0,-0.126 -0.102,-0.117 -0.329,-0.315 -0.256,-0.278 -0.302,-0.214 -0.223,-0.086 -0.066,-0.109 -0.028,-0.116 0.025,-0.213 0.015,-0.272 0.052,-0.17 0.202,-0.323 0.193,-0.343 0.119,-0.33 0.063,-0.307 -0.023,-0.089 -0.101,-0.065 -0.212,-0.067 -0.296,0.058 -0.251,0.112 -0.098,0.009 -0.033,-0.138 0.039,-0.061 0.079,0.008 0.065,0.026 0.069,-0.063 0.042,-0.185 -0.105,-0.648 0.188,-0.057 0.003,-0.094 0.017,-0.083 0.194,0.113 0.272,0.002 0.239,-0.023 0.036,-0.064 -0.002,-0.092 -0.05,-0.073 -0.085,-0.058 -0.061,-0.09 -0.161,-0.04 -0.505,-0.234 -0.248,-0.249 0.008,-0.265 0.072,-0.145 0.087,-0.051 -0.026,-0.049 -0.284,-0.123 -0.101,-0.171 0.083,-0.219 -0.148,-0.447 -0.156,-0.275 0.153,-0.119 0.021,-0.17 0.012,-0.097 0.063,0.002 0.247,-0.114 0.09,-0.092 0.052,-0.109 0.059,-0.027 0.165,0.118 0.175,0.01 0.195,-0.074 0.147,-0.103 0.175,-0.086 0.08,-0.059 0.102,-0.092 0.205,-0.274 0.233,-0.057 z\"\n\t\t\t\tid=\"RS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 627.21975,65.281401 -1.303,-0.928 0.107,-0.469 0.141,-0.197 0.004,-0.461 -0.12,-0.352 0.052,-0.724 0.841,0.53 0.08,0.216 0.566,0.369 0.085,0.706 -0.063,0.439 -0.39,0.871 z m -7.559,101.707999 -0.281,0.831 -0.108,0.411 -0.042,0.981 0.028,0.438 0.204,1.15 0.222,0.685 0.284,0.407 0.34,0.299 0.352,0.146 0.68,-0.137 0.67,-0.413 0.729,0.276 0.646,0.094 1.277,-0.413 0.134,0.102 -0.222,0.468 -0.038,0.688 0.255,0.518 0.296,-0.021 0.3,0.086 -0.088,0.316 0.829,0.876 0.756,0.614 -0.173,0.176 -0.481,-0.281 -0.247,0.095 0.063,0.488 -0.523,-0.143 -0.232,0.299 0.014,0.445 0.064,0.429 -0.006,0.311 -0.409,0.121 -0.235,0.231 0.95,0.505 1.339,0.422 0.374,0.172 0.519,0.437 0.234,0.112 0.021,-0.281 0.104,-0.243 0.623,0.541 0.518,0.097 0.521,0.006 1.264,-0.222 0.054,0.144 0.001,0.282 0.253,0.222 0.31,-0.091 0.097,-0.194 0.408,0.261 0.077,-0.235 0.078,-0.099 0.82,0.801 0.183,-0.029 0.173,-0.229 -0.405,-0.604 -0.23,-0.1 -0.21,-0.323 0.353,-0.165 0.349,0.045 0.165,0.267 0.148,0.356 0.076,0.075 1.396,0.485 0.283,-0.135 0.047,-0.261 0.515,-0.211 0.501,-0.575 -0.194,-0.315 -0.204,-0.225 -1.173,-0.715 -0.479,-0.437 -1.236,-1.555 -1.153,-2.076 -0.629,-1.426 -0.577,-1.62 -0.188,-0.836 -0.212,-0.772 -0.486,-0.597 0.217,-0.721 0.079,-0.838 0.257,-0.69 0.065,-0.352 -0.334,-0.856 -0.024,-0.594 -0.087,-0.286 -0.01,-0.524 0.171,-0.337 -0.038,-0.446 0.106,-0.247 0.491,-0.222 0.237,-0.683 0.05,-0.47 0.014,-0.424 0.27,-0.219 0.741,0.001 0.106,-0.164 0.138,-0.395 0.063,-0.542 -0.073,-0.748 0.063,-0.478 0.408,-0.777 0.177,-0.246 0.09,-0.601 -0.222,-0.237 -0.598,-0.298 -0.983,-0.121 -1.312,-0.387 -0.557,-0.475 -0.508,-0.259 -0.384,-0.043 -0.358,0.173 -0.978,0.69 -0.353,0.176 -0.313,0.048 -0.632,-0.22 -0.315,0.056 -0.336,0.322 -0.341,0.212 -0.434,0.134 -0.299,0.404 -0.149,0.343 -0.025,0.421 0.135,0.894 0.029,0.365 0.344,0.54 -0.326,0.124 -0.333,-0.09 -0.311,-0.003 -0.313,0.13 -0.283,0.235 -0.653,0.797 -0.08,0.216 -0.063,0.295 0.215,0.314 0.219,0.205 0.655,0.127 -0.217,0.466 -0.045,0.263 0.113,0.388 -0.322,0.624 -0.098,0.428 -0.023,0.427 -0.123,0.501 -0.111,0.332 -0.102,0.156 -0.348,0.292 -0.155,0.511 -0.209,0.392 -0.226,0.221 -0.514,-0.013 -0.515,-0.202 -0.225,0.101 -0.428,0.391 -0.203,0.261 z m 2.717,-98.048999 0.159,0.177 0.081,0.202 0.618,0.093 1.866,-0.196 0.37,-0.616 0.351,-0.096 0.207,-0.664 -1.026,-0.916 -0.394,-0.718 -0.047,-0.606 -0.402,-0.172 -0.932,0.172 -0.387,0.921 -0.1,0.486 -0.292,0.359 -0.859,0.342 -0.16,0.209 0.366,0.835 0.581,0.188 z m 8.886,-17.137 1.333,-0.652 0.482,0.833 0.418,0.062 0.439,-0.422 0.429,-0.729 0.947,1.093 0.818,0.783 0.895,-0.623 0.401,-0.509 0.287,-1.054 -0.29,-0.896 -0.149,-1.207 1.44,-0.354 0.539,-0.59 -0.359,-0.863 -1.177,-0.372 -0.433,-0.43 -0.146,-0.754 -0.263,-0.355 -0.73,0.416 -0.257,0.145 -0.768,-0.114 -0.332,0.584 -0.714,1.648 -0.882,0.683 -0.695,1.565 -1.052,-0.49 -0.887,0.339 0.299,1.537 0.407,0.726 z m -3.762,7.194 0.439,0.069 0.254,0.311 0.126,0.463 1.26,-0.23 1.188,0.846 0.482,1.143 0.48,0.153 1.212,-0.077 1.401,-0.531 2.148,-1.597 0.319,-0.645 -0.354,-0.481 -1.847,-1.646 -1.226,-1.524 -0.849,-0.555 -1.963,0.167 -2.109,-1.737 -0.238,0.05 -0.609,2.285 -0.14,1.475 -0.355,0.035 -0.548,0.529 0.06,1.029 0.869,0.468 z m 10.071,-16.761 0.928,-0.38 2.978,-0.855 0.002,-0.431 0.145,-0.875 -0.411,-0.568 -3.164,0.518 -0.42,0.61 -0.111,0.964 -0.102,0.506 0.032,0.223 0.123,0.288 z m -24.913,21.445 -1.299,0.127 -0.45,-0.849 -0.174,-0.184 -0.271,0.124 -0.274,0.303 -0.877,0.253 -0.673,0.485 -0.71,0.945 -2.129,2.424 0.263,0.708 0.302,0.339 0.408,0.898 0.723,0.042 0.265,-0.137 0.284,-0.686 0.556,-0.251 0.703,0.101 0.238,0.441 -0.714,1.007 -0.254,0.645 0.294,0.495 0.568,-0.113 0.241,-0.177 0.197,-0.373 0.2,-0.171 0.615,0.604 0.226,-0.234 0.185,-0.788 0.062,-0.412 0.077,-0.199 0.605,0.563 0.265,0.096 0.24,-0.12 0.093,-0.738 -0.056,-0.578 -0.088,-0.387 -0.105,-0.184 -0.654,-0.225 -0.034,-0.163 0.376,-0.896 0.239,-0.26 1.937,-0.124 0.584,-0.821 -0.124,-0.791 0.27,-0.434 1.217,-0.506 1.912,-0.223 0.52,-1.088 1.564,-1.445 -0.315,-0.924 -0.383,-0.068 -1.507,-2.563 -0.327,-0.422 -1.038,0.059 -0.43,-0.292 -0.432,0.06 -1.73,1.038 -0.739,0.775 -0.272,1.911 0.127,0.973 -0.021,1.674 -0.276,0.736 z m 3.716,-9.982 0.299,0.701 0.274,0.078 0.387,-0.111 0.098,-0.441 0.442,-0.658 -0.19,-0.777 -0.456,-0.361 -0.349,0.022 -0.196,0.205 -0.044,0.255 -0.115,0.328 -0.271,0.067 0.025,0.358 0.096,0.334 z m -4.094,135.157999 -0.304,0.117 -0.599,0.47 -0.611,0.72 -0.263,0.606 -0.066,0.675 -0.045,0.687 -0.004,0.442 0.044,0.439 0.061,0.327 0.345,1.07 0.64,0.555 0.683,-0.077 0.758,-0.273 1.251,-0.631 0.6,-0.889 0.228,-0.623 0.485,-0.568 0.133,0.215 0.065,0.476 0.158,-0.088 0.175,-0.314 -0.05,-0.762 -0.275,-0.565 -0.479,-0.415 -2.164,-1.609 -0.766,0.015 z m -10.002,-125.935999 0.706,0.399 0.921,-0.557 0.153,0.49 0.102,0.971 0.229,0.628 0.665,-0.17 0.38,-0.317 0.309,-1.108 0.151,-0.354 0.936,-0.013 0.376,-0.805 0.149,-0.101 0.297,0.15 0.31,-1.179 0.275,-0.232 0.247,-0.939 0.295,-0.406 0.203,0.157 0.749,1.531 1.631,0.67 0.163,-0.068 0.008,-1.463 -0.391,-1.07 -0.286,-0.473 -0.282,-0.228 -0.286,-0.079 -0.965,0.19 -1.284,-0.722 -0.251,0.013 -0.931,0.679 -0.621,1.037 -1.324,0.35 -3.376,1.439 -0.616,0.706 0.686,0.215 0.672,0.659 z m 15.961,10.411 0.996,0.184 0.011,-0.184 -0.072,-0.198 -0.231,-0.452 -0.236,-0.305 -0.014,-0.309 0.046,-0.621 -0.893,-0.742 -0.73,0.743 -0.57,0.213 -1.07,0.888 1.019,0.902 1.744,-0.119 z m -2.876,-2.302 0.058,-0.573 0.693,-1.031 -0.026,-0.218 -0.165,-0.558 -1.031,-0.178 -0.919,1.175 0.09,0.374 1.073,1.23 0.227,-0.221 z m 36.664,-15.216 -0.832,1.3 -0.636,0.721 -0.203,0.549 0.674,1.038 0.679,0.87 0.521,0.265 0.522,-0.043 3.296,-0.964 1.261,-1.112 1.234,-1.979 -0.184,-0.666 -0.033,-0.719 0.062,-0.875 -0.203,-0.717 -0.387,-0.866 -0.404,-0.464 -0.634,-0.509 -0.636,-0.023 -0.744,0.427 -0.152,0.561 -0.128,0.693 -0.125,1.277 -0.197,0.672 -0.673,0.308 -0.677,0.004 -1.401,0.252 z m -20.745,14.721 0.246,0.287 1.092,0.174 2.207,0.081 0.262,-0.378 -0.021,-0.73 0.13,-0.897 0.011,-2.039 -0.123,-0.567 -0.377,-0.256 -0.666,0.049 -0.146,0.551 -1.77,-0.184 -0.098,0.355 0.063,1.927 -0.196,0.669 -0.614,0.958 z m -1.484,-2.006 0.799,-0.779 -0.126,-0.473 -0.229,-0.257 -0.317,-0.128 -0.417,0.497 -0.314,0.65 0.193,0.464 0.411,0.026 z m 10.951,-18.639 0.606,-0.24 0.173,-0.369 -0.264,-0.765 -0.577,-0.592 -0.546,0.11 -0.69,0.589 -0.068,0.431 0.306,0.441 1.06,0.395 z m -2.546,3.624 -0.246,-0.357 -0.147,-0.076 -1.104,1.572 -0.69,-0.274 -0.559,0.535 0.545,1.822 0.967,0.462 0.528,1.687 0.976,0.499 1,-0.054 0.611,-0.2 0.199,-0.918 -0.079,-1.165 -0.245,-0.639 -0.15,-1.025 -0.391,-0.911 -0.322,-0.363 -0.893,-0.595 z m 3.133,8.421 -0.051,0.774 0.046,0.874 0.118,0.281 0.852,1.25 0.702,-0.25 1.062,-0.819 1.246,1.012 0.923,0.271 0.656,-1.458 0.877,-0.515 0.234,-0.879 0.247,-0.252 0.86,-0.273 0.109,-1.153 0.217,-0.808 0.101,-1.122 -0.168,-0.709 -0.183,-0.562 -0.708,-0.342 -0.71,-0.125 -0.798,0.537 -1.384,0.637 -0.95,0.392 -0.571,0.049 -0.121,-0.639 -0.394,-0.191 -1.063,0.216 -0.347,0.349 -0.12,0.578 -0.152,0.299 -0.305,0.941 -0.225,1.637 z m 0.928,125.216999 0.246,0.12 0.247,0.085 0.3,-0.011 0.299,-0.162 0.532,0.237 0.313,-0.223 0.317,-0.086 0.104,-0.549 0.01,-0.747 -0.084,-0.403 -0.163,-0.225 -0.618,-0.496 -0.607,-0.703 -0.896,-0.732 -0.301,-0.431 -0.29,-0.515 -0.325,-0.422 -0.622,-0.631 -0.113,-0.196 -0.12,-0.039 -0.592,0.27 -0.326,0.613 -0.176,0.073 -0.269,0.272 -0.132,0.428 0.267,0.92 0.105,0.219 0.08,0.339 0.129,0.304 0.765,1.296 0.144,0.078 0.221,-0.225 0.174,-0.091 0.348,0.191 0.318,0.065 0.34,0.197 0.221,0.613 -0.009,0.423 0.163,0.144 z m 15.605,-66.332 -0.349,0.036 -0.346,0.149 -0.68,0.698 -0.686,0.571 -2.63,0.816 -1.558,0.861 -0.531,-0.101 -0.873,0.173 -0.656,-0.131 -1.263,-0.584 -0.611,-0.088 -1.032,0.195 -0.125,0.1 -0.345,0.479 0.008,0.751 0.048,0.576 -0.158,0.357 -0.156,0.21 -0.396,0.029 -0.198,-0.411 -0.349,-0.054 -0.918,0.145 -0.451,0.346 -0.23,0.961 -0.714,0.439 -1.222,0.448 -0.663,0.384 -0.324,0.022 -0.318,0.195 -0.642,0.893 -0.657,0.65 -1.011,0.644 0.04,0.499 0.059,0.298 -0.87,0.965 -0.211,0.584 -0.216,1.092 -0.069,0.168 -0.855,-0.355 -0.602,-0.118 -0.275,0.097 -0.407,0.263 -0.098,0.255 0.056,0.561 0.132,0.367 -0.858,1.607 -0.239,0.018 -0.27,-0.46 -0.282,-0.286 -0.354,-0.244 -0.355,-0.084 -0.322,0.284 -0.311,0.476 0.031,0.374 0.117,0.348 0.379,0.601 0.96,-0.109 0.248,0.439 0.197,0.171 -0.788,0.643 -0.854,1.088 -0.712,1.488 -0.218,0.303 0.079,0.393 0.144,0.363 0.253,0.157 0.549,-0.01 0.533,0.484 -0.165,0.155 -1.858,0.473 -0.211,0.172 -0.894,2.416 -0.287,0.591 -0.25,0.342 -0.274,0.631 -0.255,0.757 -0.104,0.084 -0.615,0.159 -0.596,0.505 -0.591,0.64 -0.314,0.219 -0.249,0.346 0.213,0.691 1.027,1.543 -0.205,0.603 0.473,1.278 0.746,-0.663 0.569,-0.304 0.668,-0.043 0.768,0.607 0.755,0.346 1.362,0.107 0.544,0.311 0.566,0.165 0.572,-0.069 0.926,-0.608 0.478,-1.356 0.914,-1.049 0.232,-0.477 -0.22,-0.878 -0.487,-0.688 0.063,-0.236 0.38,0.125 0.436,0.504 0.151,0.074 0.276,-0.01 0.249,-0.361 0.077,-0.457 -0.053,-0.479 -0.211,-0.771 -0.03,-0.406 1.892,-1.176 0.495,-1.014 0.133,-0.64 -0.055,-0.402 -0.235,-0.977 -0.168,-0.443 0.092,-0.364 1.104,0.38 0.314,-0.239 0.17,-0.231 0.127,-0.466 0.03,-0.623 0.07,-0.582 0.163,-0.289 0.999,0.84 0.219,0.038 0.221,-0.284 0.053,-0.291 -0.104,-0.329 0.036,-0.537 0.659,0.013 0.274,-0.12 0.399,-0.435 0.22,-0.434 0.389,-0.411 0.175,-0.315 -0.131,-0.448 -0.6,-0.266 0.101,-0.398 0.558,-0.512 0.163,-0.049 0.341,0.046 0.18,-0.147 0.309,-0.46 0.299,-0.578 0.594,-0.646 0.285,-0.644 0.301,-0.374 0.366,0.044 0.364,-0.097 1.263,-1.201 2.75,-1.658 0.76,-0.308 0.962,-0.743 0.336,-0.043 1.356,-0.535 1.353,-0.781 1.282,-0.586 1.173,-0.749 1.861,-0.914 1.052,-0.735 0.662,-0.294 0.656,-0.419 0.668,-0.622 1.123,-0.897 1.123,-0.559 0.16,-0.339 0.943,-1.62 0.958,-1.486 -0.117,-0.455 0.091,-0.597 0.144,-0.584 -0.084,-0.646 -0.107,-0.356 -0.489,-0.998 -0.599,-0.78 -1.315,-0.708 -1.025,-0.261 -0.328,0.047 -0.761,0.548 -1.221,0.496 -1.357,1.27 -0.792,0.919 -0.292,0.71 -0.27,0.907 -0.303,0.412 -0.331,0.008 -0.305,0.13 -0.614,0.602 -0.319,0.217 z m -22.795,-56.767999 -0.18,0.435 0.203,0.391 0.288,0.826 0.072,0.466 0.006,0.673 0.189,2.228 0.143,0.589 0.169,0.311 1.145,0.574 0.438,-0.313 0.58,-1.204 0.26,-0.087 0.084,-0.765 -0.005,-0.825 0.32,-0.35 2.406,-0.409 -0.392,-0.758 -0.404,-0.462 -1.379,-0.826 -2.689,-0.18 -1.254,-0.314 z m 10.529,-7.576 0.881,-0.369 0.93,-1.085 0.269,-0.707 -0.31,-0.971 -2.443,0.295 -1.232,1.281 -0.194,0.313 -0.057,0.261 0.738,0.521 1.418,0.461 z m 4.784,-13.297 0.117,0.269 0.875,0.466 1.806,0.236 0.344,-0.245 0.369,-0.781 -0.042,-0.277 -0.162,-0.448 -2.567,-0.615 -1.434,0.241 -0.499,0.528 1.147,0.391 0.046,0.235 z m -10.137,29.305 0.509,0.33 0.192,0.255 0.094,0.247 0.359,0.159 1.006,-0.526 0.623,-0.62 -0.307,-1.434 -0.722,-0.59 -1.524,1.058 -0.155,0.188 -0.075,0.933 z m -101.622,207.504999 0.341,-0.999 -0.018,-0.16 -0.248,-0.28 -0.306,-0.204 -0.169,-0.432 -0.62,-0.025 -0.585,0.024 -0.184,-0.021 -0.557,-0.181 -0.537,-0.292 -0.359,-0.171 -0.302,-0.192 -0.163,-0.202 -0.257,0.054 -0.174,0.002 -0.036,0.767 -0.095,0.843 -0.542,0.158 -0.304,-0.033 -0.318,-0.183 -0.271,-0.042 -0.233,-0.13 0.743,-0.984 0.276,-0.468 -0.163,-0.038 -0.152,0.268 -0.468,0.635 -0.445,0.526 -0.347,0.213 -0.812,-0.025 -0.374,0.172 -0.06,0.441 -0.026,0.391 -0.239,0.563 -0.282,0.43 -0.433,0.414 0.112,0.058 0.787,0.063 0.796,0.063 1.281,0.068 1.335,0.071 1.385,0.074 1.5,0.08 1.581,0.047 0.097,-0.032 -0.118,-0.234 -0.125,-0.421 0.013,-0.337 0.075,-0.339 z m 85.586,-104.893 -0.036,-0.483 -0.144,-0.232 -0.188,0.035 -0.225,-0.466 -0.255,-0.646 -0.355,-0.306 -0.125,-0.034 -0.033,0.122 0.026,0.304 -0.315,-0.248 -0.294,-0.015 -0.606,0.248 -0.159,0.279 0.027,0.352 0.112,0.127 0.382,0.271 0.34,-0.098 0.538,0.608 0.143,0.57 0.13,0.252 0.32,0.279 0.154,0.362 0.051,0.37 0.276,-0.115 -0.043,-0.149 -0.162,-0.273 0.066,-0.294 0.375,-0.82 z m 124.556,-105.601999 -1.31,0.25 -1.976,0.796 -0.391,-0.093 -0.322,0.216 -0.854,-0.215 -1.012,0.072 -0.3,0.535 -0.147,0.498 -0.159,0.188 -0.825,-1.078 -0.114,0.124 -0.369,0.885 -0.269,0.382 -1.044,1.117 -0.254,1.792 -0.614,1.167 -0.536,0.855 -1.241,1.096 -0.938,2.111 0.565,0.567 0.579,-0.067 0.786,0.173 1.291,0.75 0.267,1.44 0.473,1.339 0.386,0.393 0.034,0.769 0.058,0.199 0.39,0.606 0.644,0.502 0.316,0.045 0.853,-0.736 0.265,0.018 0.481,1.273 0.263,0.155 1.546,-0.212 0.232,0.188 1.061,0.266 0.178,0.31 0.173,0.438 0.885,0.961 0.863,0.601 0.373,-0.011 0.607,0.248 0.419,-0.155 0.641,0.375 0.36,0.104 1.146,-0.44 1.74,-0.231 0.284,-0.269 1.091,-1.584 -0.084,-0.661 -0.238,-1.322 -0.179,-0.175 -0.656,-0.334 -0.561,-1.45 -0.773,-0.992 0.176,-0.187 0.176,-0.014 0.619,0.477 0.42,-0.027 0.402,-0.707 0.115,-0.938 -0.043,-1.198 0.041,-0.436 0.078,-0.36 0.063,-0.812 0.029,-0.94 0.067,-0.387 0.095,-0.248 0.215,-1.089 0.408,-0.612 -0.322,-1.14 -0.359,-0.785 -0.258,-0.349 -0.534,-0.343 -0.178,-0.464 -0.287,-0.262 -0.213,-0.484 -1.203,-0.471 -0.757,-0.111 -0.182,0.14 -0.168,0.559 0.076,0.903 -0.409,1.103 -0.225,0.163 -0.586,-0.431 -0.543,0.773 -0.411,1.131 -0.204,0.328 -0.17,-0.226 0.101,-1.198 0.373,-0.725 0.135,-0.97 0.277,-0.765 0.312,-0.31 -0.32,-1.172 -0.643,-1.035 -0.247,-0.16 z m -2.799,54.638999 0.068,-0.502 -0.229,-0.169 -0.734,-0.322 -0.336,0.396 -1.023,-0.26 -0.538,0.523 -0.603,-0.466 -0.162,0.324 -0.03,0.553 1.031,0.248 0.465,0.393 0.742,0.056 0.538,0.395 0.148,-0.653 -0.008,-0.408 0.382,-0.254 0.289,0.146 z m 0.809,-1.586 -0.119,0.124 -0.007,0.246 -0.26,0.785 -0.003,0.601 0.042,0.131 0.122,0.086 0.157,-0.126 0.338,-0.44 0.222,-0.781 -0.022,-0.152 -0.154,-0.333 -0.316,-0.141 z m 8.601,-45.085999 -0.076,1.089 0.619,-0.196 0.462,-0.875 -0.446,-0.21 -0.205,-0.271 -0.315,0.168 -0.039,0.295 z m -7.387,41.060999 0.088,0.738 0.249,0.462 0.294,0.076 0.149,-0.181 -0.58,-1.305 -0.2,0.21 z m 28.86,-7.995 -0.302,-0.219 -0.337,0.006 -0.271,0.736 0.092,0.605 0.316,-0.015 0.742,-0.325 -0.042,-0.402 -0.099,-0.254 -0.099,-0.132 z m -20.575,-17.550999 -0.015,0.819 -0.119,0.538 -0.146,0.449 -0.11,0.47 -0.186,1.26 -0.108,0.576 -0.957,1.457 -0.371,0.754 -0.3,1.290999 -0.426,0.622 0.293,0.505 0.306,0.332 0.967,0.259 0.666,-0.244 1.288,-0.979 1.399,-1.298999 0.461,-0.669 1.37,-0.033 1.37,-0.15 1.226,-0.266 0.157,0.315 0.172,0.162 0.175,0.027 0.579,-0.934 2.01,-0.033 1.623,-1.062 0.623,-0.197 0.624,0.131 0.255,-0.18 1.347,-2.059 0.085,-1.329 -0.092,-1.027 -0.151,-0.958 -0.145,-0.675 -0.165,-0.562 -0.368,-0.354 -0.375,-0.168 -0.695,0.286 -0.509,-0.652 0.07,-0.631 -0.078,-0.594 -0.126,-0.193 -0.879,-0.53 -0.244,-0.729 -0.221,-0.899 -0.35,-0.388 -0.359,-0.011 -0.672,0.356 -0.658,0.813 -0.346,0.219 -0.353,0.011 -0.296,0.611 -0.272,0.951 -0.45,1.142 -0.491,0.521 0.1,-0.599 0.837,-3.371 0.116,-1.048 0.273,-1.163 0.154,-0.259 0.316,-0.171 0.128,-0.251 -0.158,-0.49 -0.707,-0.921 -1.08,-0.627 -0.344,0.048 -0.161,0.262 -0.124,0.603 -0.01,0.922 0.207,0.854 -0.344,0.054 -0.346,-0.168 -0.262,-0.725 -0.247,-0.889 -0.177,-0.026 -0.331,0.161 -0.147,0.166 -0.1,0.573 -0.034,0.878 -0.652,0.328 -0.321,0.423 -0.133,0.711 -0.271,0.501 0.044,0.4 -0.104,1.079 -0.184,0.247 -0.18,0.389 -0.104,0.795 -0.023,0.41 0.117,1.238 0.162,0.347 -0.225,0.07 -0.719,-0.199 -0.291,0.139 -0.279,0.499 -0.371,1.061 -0.058,0.677 z m 16.861,5.944 0.567,-0.534 0.09,-0.229 0.489,-0.046 0.112,0 0.002,-0.403 -0.08,-0.311 -0.143,-0.271 -0.515,-0.053 -0.299,0.934 -0.82,0.11 -0.097,0.613 0.357,0.295 0.337,-0.105 z m -35.55,-23.75 0.561,-1.399 -0.902,-0.586 -2.495,-0.893 -1.177,-0.792 -1.183,-0.111 -0.915,0.05 -0.552,0.3 -0.446,0.796 0.156,1.23 0.702,1.107 0.863,0.712 1.319,1.668 0.805,0.144 0.682,-0.152 0.682,-0.302 0.642,-0.521 0.638,-0.73 0.62,-0.521 z m -19.396,64.393999 0.659,0.188 0.237,-0.334 0.316,-0.84 -0.202,-0.461 -0.146,-0.102 -0.739,0.314 -0.235,-0.199 -0.134,-0.125 -0.283,0.291 -0.488,0.292 -0.202,0.489 0.37,0.459 0.847,0.028 z m 162.758,166.523 -0.221,-0.275 -0.492,-0.491 -0.254,-0.554 -0.193,-0.561 -0.091,-0.519 -0.113,-0.507 -0.163,-0.482 -0.262,-1.016 -0.651,-1.688 -0.225,-0.984 -0.566,-3.281 -0.128,-0.138 -0.044,-0.099 -0.016,-0.46 -0.033,-0.313 -0.106,-0.221 -0.272,-0.282 -0.059,-0.221 -0.014,-0.506 -0.124,-0.469 -0.168,-0.438 -0.099,-0.633 0.047,-1.214 0.081,-0.429 0.177,-0.164 0.087,-0.232 0.08,-0.389 0.025,-0.399 -0.022,-1.219 -0.104,-0.798 -0.078,-0.387 -0.102,-0.368 -0.36,-0.905 -0.498,-1.443 0.052,-0.079 -0.07,-0.32 0.043,-0.367 0.113,-0.349 0.053,-0.271 -0.026,-0.264 -0.604,-1.212 -0.191,-0.107 -0.075,0.279 -0.142,0.262 -0.18,0.118 -0.607,-0.008 0.369,0.633 0.571,0.859 0.101,0.345 -0.064,0.378 -0.112,0.375 0.129,0.031 -0.026,0.264 -0.356,0.103 -0.122,0.307 0.209,0.239 -0.161,0.42 -0.286,0.173 -0.15,0.038 -0.146,-0.014 -0.39,-0.369 -0.106,-0.055 -0.498,0.185 -0.314,0.314 -0.081,0.234 0.043,0.94 0.098,0.464 -0.051,1.14 -0.146,1.099 -0.156,0.463 -0.184,0.439 -0.061,0.395 0.021,1.547 0.147,0.393 0.245,0.261 -0.103,0.169 -0.139,0.07 0.139,0.208 0.284,0.271 0.373,0.493 0.238,0.41 0.325,0.927 0.004,0.999 -0.171,0.481 -0.131,0.504 -0.097,0.645 0.014,0.509 0.202,0.891 0.028,0.418 -0.03,2.813 -0.095,0.558 -0.118,0.548 -0.13,1 -0.114,0.454 -0.317,0.945 0.019,0.204 0.068,0.2 0.368,0.751 0.3,0.788 0.13,1.161 -0.091,0.464 -0.206,0.391 -0.169,0.448 -0.145,0.47 -0.005,0.181 0.061,0.811 0.093,0.425 0.061,0.43 -0.077,0.452 -0.406,1.375 -0.102,0.989 0.242,1.135 0.038,0.333 0.089,0.302 0.151,0.208 0.173,0.179 0.203,-0.331 0.166,-0.361 0.268,-1.086 0.129,-0.41 0.158,-0.39 0.203,-0.365 0.278,-0.23 0.162,-0.063 0.157,0.022 0.156,0.164 0.135,0.206 0.095,0.061 0.613,0.052 0.658,0.137 0.196,0.336 0.051,0.478 0.136,0.553 0.036,0.78 0.09,-0.165 0.053,-0.187 0.023,-0.237 0.051,-0.225 0.202,-0.529 -0.006,-0.184 -0.107,-0.687 -0.153,-0.722 -0.108,-0.163 -0.177,-0.056 -0.184,-0.007 -0.284,0.051 -0.111,-0.201 -0.249,-0.642 -0.234,-0.912 -0.184,-0.413 -0.098,-0.161 -0.116,-0.124 -0.177,-0.101 -0.156,-0.15 -0.211,-0.35 -0.256,-0.61 -0.063,-0.224 -0.03,-0.613 0.079,-0.782 0.216,-0.733 0.899,-2.838 0.155,-0.801 0.22,-0.399 0.368,-0.274 0.409,-0.12 0.982,-0.091 0.244,0.015 0.417,0.139 0.228,0.116 0.215,0.174 0.444,0.593 0.359,0.356 0.35,0.396 0.237,0.335 0.146,0.578 0.115,0.162 -0.02,-0.76 -0.06,-0.215 z m -168.32,-161.779 0.136,-0.623 0.32,-0.588 -0.542,0.033 -0.392,0.23 -0.424,0.377 0.111,0.252 0.791,0.319 z m -3.648,3.716 0.111,-0.124 0.128,0.033 0.149,-0.238 0.194,-0.181 -0.294,-0.337 -1.021,-0.3 -0.693,0.233 -0.238,0.382 0.957,0.167 0.707,0.365 z m 23.089,-80.209999 0.713,0.343 0.563,0.43 0.307,0.725 2.247,1.266 1.831,1.502 0.611,-0.008 1.279,-1.069 0.664,-0.816 0.271,0.053 0.842,-0.452 2.511,-0.436 3.703,-1.057 0.346,-0.526 0.333,-0.839 -0.366,-0.324 -0.103,-0.343 -0.379,-2.255 -0.119,-0.396 -0.133,-0.268 0.246,-1.345 0.304,-0.662 1.246,-0.443 0.229,-0.357 0.307,0.011 0.038,-1.136 -0.106,-0.613 -0.362,-0.5 -0.812,-0.267 -1.849,-2.058 -0.173,-0.65 -0.366,-0.645 -0.103,-0.82 -0.155,-0.43 -0.798,-1.542 -0.313,-0.162 -0.256,-0.342 -0.229,-0.906 -0.285,-0.367 -1.799,0.175 -0.277,1.526 -0.626,0.889 -0.635,0.451 -0.662,0.132 -0.661,0.324 -0.705,0.562 -0.707,0.365 -0.392,-0.019 -0.39,0.135 -0.823,0.775 -0.355,1.119 -0.487,0.582 -0.153,0.37 -0.28,1.096 -0.05,0.511 0.506,0.214 1.374,-0.396 -0.79,1.54 -0.433,1.46 -0.698,1.461 -0.93,0.582 -0.982,0.367 -0.586,0.998 -0.46,1.008 0.317,1.477 z m 41.475,32.014 1.645,0.601999 0.961,-0.04 0.387,0.555 0.35,-0.337 0.25,-0.657999 -0.343,-0.748 -0.183,-0.052 -2.596,0.299 -0.471,0.379 z m -30.127,14.600999 0.238,0.383 0.25,0.196 0.664,-0.344 0.332,0.129 0.123,-0.189 0.09,-0.242 0.39,-0.558 0.384,-0.734 0.002,-0.308 -0.094,-0.651 -1.893,1.362 -1.217,0.516 -0.422,0.47 0.264,0.092 0.889,-0.122 z m -16.011,-61.251999 3.5,0.893 0.966,-1.403 -0.251,-0.781 -1.035,-0.278 -2.916,-0.268 -0.474,0.788 0.052,0.401 0.158,0.648 z m 129.021,80.250999 0.202,-0.321 -0.155,-0.534 0.051,-0.401 0.521,-0.941 -0.117,-0.226 -0.625,-0.779 -0.155,-0.396 -0.172,-0.79 -0.251,-0.536 -0.238,0.903 -0.1,0.642 -0.048,0.833 0.088,0.677 -0.194,0.906 -0.141,0.365 -0.06,0.821 0.825,0.084 0.569,-0.307 z m 2.969,1.932 0.594,1.22 0.643,0.758 0.34,0.148 0.323,0.348 0.65,1.487 0.242,0.471 0.256,0.316 2.17,1.029 0.326,0.29 0.329,0.181 0.326,-0.033 0.31,-0.289 0.293,-0.664 0.231,-0.947 0.1,-0.712 0.163,-0.448 0.211,-0.2 0.217,0.004 0.709,0.744 0.721,0.514 0.551,-0.098 0.552,-0.277 1.823,-0.445 0.616,-0.259 0.613,-0.383 0.671,-0.094 0.315,0.436 0.237,0.554 0.289,0.534 0.256,0.229 0.265,0.087 0.43,-0.182 0.427,-0.326 0.982,-1.105 -0.557,-0.999 -0.653,-0.443 -0.226,-0.33 -0.987,-2.344 -0.186,-0.517 -0.134,-0.723 -0.182,-2.285 0.622,-0.353 0.684,-0.332 1.096,0.087 0.17,0.606 -0.046,0.301 -0.333,0.694 -0.373,0.306 -0.098,1.072 0.084,1.238 0.254,0.772 0.286,0.555 0.696,1.102 0.634,0.372 0.646,-0.013 1.105,0.428 0.551,-0.158 0.538,-0.469 1.335,-1.829 -0.194,-0.614 -0.246,-0.455 0.215,-0.562 0.618,-0.823 0.944,-0.457 -0.141,-0.377 -0.153,-0.243 -4.404,-3.164 -0.354,0.038 -0.698,0.437 -0.354,0.1 -0.725,-0.152 -0.723,-0.419 -0.587,-0.462 -1.288,-1.62 -0.728,-0.751 -0.721,-0.341 -0.522,0.857 -0.748,0.869 -0.133,0.283 -0.099,0.429 -0.068,0.697 0.002,0.778 0.039,0.563 0.011,0.559 -0.154,0.549 -0.206,0.241 -0.446,-0.039 -0.153,-0.111 -0.155,-0.218 -0.142,-0.302 -0.302,-1.208 -0.321,-0.304 -0.344,0.144 -0.29,-0.219 -0.856,-1.429 -0.603,-0.699 -0.891,-0.783 -0.287,-0.322 -0.257,-0.606 -0.275,-0.43 -0.296,-0.035 -1.076,0.816 -0.626,0.177 -0.313,0.402 -0.161,0.387 -0.173,0.227 -0.569,0.14 -0.418,0.319 -0.182,0.382 -0.167,0.525 0.26,0.991 0.316,0.729 -0.977,-0.251 -0.251,0.367 -0.151,2.208 0.21,2.298 -0.348,0.022 -0.516,-0.208 -0.098,0.441 0.042,0.61 0.126,0.393 z m 66.359,42.782 0.189,-0.144 -0.207,-0.52 -0.223,-0.345 -0.329,-0.088 -0.022,0.098 -0.01,0.613 0.19,0.268 0.412,0.118 z m -32.125,-59.467 0.179,-0.856 0.388,-0.428 -1.928,0.435 -0.762,0.85 -0.139,0.35 2.109,-0.142 0.153,-0.209 z m -6.397,18.574 0.614,0.696 0.317,0.153 1.038,0.274 0.319,0.292 0.648,0.803 0.339,0.339 0.573,0.271 2.114,0.299 1.534,-10e-4 0.678,-0.243 1.384,-0.766 0.698,-0.561 0.186,-0.277 0.494,-2.305 -0.184,-0.064 -0.187,0.078 -0.218,0.384 -0.23,0.222 -0.318,-0.376 -0.384,-0.325 -0.495,-0.606 -1.287,-0.279 -1.578,-0.193 -0.536,0.374 -0.848,-0.091 -0.323,-0.397 0.04,-0.408 0.083,-0.3 -0.027,-0.566 -0.215,-0.29 -2.625,-0.301 -0.15,0.028 -1.075,0.82 -0.744,-0.072 -0.132,-0.645 0.008,-0.915 -0.6,-0.802 -0.277,0.266 -0.269,0.867 -0.239,0.973 -0.201,1.088 -0.105,1.071 1.558,0.921 0.622,0.564 z m 16.728,-11.948 -0.062,-0.489 -0.081,-0.255 -0.1,-0.113 -0.439,0.235 -0.236,0.366 0.639,0.676 0.279,-0.42 z m 72.708,52.702 0.193,-0.038 0.816,-0.46 1.391,-0.16 0.655,-0.659 0.333,-0.149 0.746,0.184 0.639,0.415 0.255,0.038 0.727,-0.179 1.765,-0.645 1.307,-0.234 0.676,-0.222 0.837,-0.86 0.07,-0.455 -0.095,-0.383 -0.146,-0.163 -0.653,-0.51 -0.443,-0.444 -0.229,-0.414 -0.217,-0.245 -0.227,-0.143 -0.39,-0.42 -0.24,-0.106 -1.228,-0.318 -0.33,-0.144 -0.33,-0.027 -0.406,0.217 -0.409,0.045 -0.404,-0.14 -0.406,0.04 -0.432,0.239 -0.436,0.117 -0.318,0.127 -0.479,0.505 -0.473,0.164 -0.877,1.082 -0.966,0.816 -0.174,0.463 -0.407,0.626 -0.156,0.504 0.056,0.403 0.405,1.533 z m -49.583,13.338 0.031,0.684 0.129,0.225 0.509,0.292 0.272,0.383 -0.014,0.231 -0.095,0.518 0.125,-0.01 0.111,-0.207 0.029,-0.328 -0.063,-0.363 -0.282,-0.709 -0.047,-0.693 -0.014,-0.778 -0.061,-0.608 0.065,-0.354 0.466,-0.182 0.193,-0.515 0.023,-0.734 -0.271,-0.335 -0.044,-0.044 -0.269,0.353 -0.242,0.44 -0.597,0.569 -0.078,0.512 0.229,0.574 -0.105,1.079 z m 19.273,-4.632 0.426,0.506 0.571,0.396 1.594,0.749 0.8,-0.073 0.126,-0.166 0.05,-0.222 0.101,-0.856 0.093,-0.282 0.24,-0.078 0.044,-0.43 -0.036,-0.194 -0.129,-0.216 -2.854,-1.088 -0.454,0.06 -0.384,0.274 -0.547,0.604 -0.143,0.229 -0.07,0.295 0.091,0.14 0.481,0.352 z m -156.711,-66.486 0.401,0.137 0.274,0.651 0.385,0.405 0.121,-0.028 0.032,-0.367 0.078,-0.196 0.131,-0.124 -0.079,-0.523 -0.435,-0.821 -0.235,-0.278 -0.315,0.309 -0.759,-0.176 -0.119,0.081 0.095,0.281 0.425,0.649 z m 65.376,26.366 0.519,0.599 0.229,0.633 0.945,1.327 0.197,0.446 0.212,-0.29 0.174,-0.724 -0.624,-1.075 -1.146,-1.332 -0.678,-0.345 0.044,0.533 0.128,0.228 z m -30.778,3.379 0.172,-0.022 0.309,-0.383 -0.045,-0.125 -0.25,-0.338 -0.331,-0.093 -0.262,0.149 -0.002,0.183 0.086,0.361 0.323,0.268 z m 42.67,4.204 0.28,0.692 0.392,0 0.286,-0.061 1.025,-0.726 0.759,-0.164 0.256,0.059 1.203,0.559 1.162,0.768 1.486,0.285 0.605,0.28 0.688,-0.004 0.714,0.083 0.987,0.234 0.725,-0.103 0.112,-0.147 -0.077,-2.08 -0.149,-0.612 -0.188,-0.474 -1.978,-2.34 -0.573,-0.488 -0.702,-0.448 -0.71,-0.192 -0.701,0.108 -1.038,0.327 -0.343,-0.047 -0.295,0.107 -0.284,0.346 -0.28,0.543 -0.522,1.484 -0.292,0.642 -0.598,0.806 -0.633,0.251 -0.659,0.088 -0.658,0.224 z m -55.226,3.704 0.711,-0.433 -0.068,-0.168 -0.444,-0.478 -0.32,-0.106 -0.568,0.118 -0.341,0.301 0.426,0.761 0.604,0.005 z m 57.257,-8.653 0.274,0.031 1.412,-0.82 0.103,-0.52 0.142,-1.203 -0.05,-0.427 -0.115,-0.344 -0.265,-0.227 -0.267,-0.094 -1.24,0.075 -0.301,0.096 -0.299,0.212 -0.259,0.541 0.229,1.839 0.636,0.841 z m -162.584,-1.569 0.378,0.198 0.273,-0.352 -0.06,-0.208 -0.219,-0.382 -0.239,-0.132 -0.402,0.125 -0.148,0.187 0.146,0.327 0.271,0.237 z m 155.307,23.682 -1.501,0.071 -0.319,0.202 -0.108,0.009 -0.134,0.119 -0.05,0.113 0.041,0.245 0.524,0.409 0.221,-0.041 0.166,-0.148 0.152,-0.054 0.152,0.078 0.283,0.359 0.277,0.094 0.696,-0.745 -0.073,-0.311 -0.213,-0.357 -0.114,-0.043 z m -136.163,-58.951 0.603,-0.061 0.426,-0.833 0.039,-0.328 -0.179,-0.392 -0.939,0.122 -0.228,0.376 -0.164,0.574 0.105,0.214 0.337,0.328 z m 216.605,166.063 -0.211,-0.272 -0.438,-0.782 -0.051,-0.377 0.129,-0.342 -0.18,-0.059 -0.787,-0.135 -0.283,0.219 -0.223,0.061 0.676,0.511 0.209,0.269 0.045,0.29 0.104,0.226 0.31,0.458 0.267,0.351 0.159,0.129 0.23,0.055 0.161,0.288 0.348,0.356 0.015,-0.704 -0.204,-0.334 -0.276,-0.208 z m -33.303,25.461 -0.006,0.372 0.291,0.113 0.269,-0.19 0.055,-0.154 -0.077,-0.518 0.228,-0.423 0.046,-0.276 -0.21,-0.072 -0.596,1.148 z m -4.39,6.7 -0.182,0.288 0.056,0.06 0.14,0.031 0.133,-0.236 -0.062,-0.191 -0.085,0.048 z m 8.288,-12.702 -0.328,0.322 -0.314,0.889 -0.26,0.359 -0.691,0.14 -0.301,0.332 -0.304,-0.021 -0.065,0.146 0.134,0.227 0,0.516 0.129,0.146 0.304,0.087 0.146,-0.159 0.189,-0.296 0.256,-0.138 0.519,-0.108 0.361,-0.438 0.347,-0.656 0.157,-0.473 0.063,-0.494 -0.073,-0.445 -0.269,0.064 z m 1.051,-0.466 -0.459,0.343 -0.126,0.234 0.079,0.131 0.363,0.278 0.111,0.023 0.111,-0.105 0.219,-0.414 0.013,-0.406 -0.089,-0.074 -0.222,-0.01 z m -209.917,-163.14 0.211,0.465 0.121,0.092 0.457,-0.397 0.125,0.593 0.206,0.172 0.201,-1.037 0.362,0.022 0.118,-0.128 -0.036,-0.405 -0.102,-0.361 -0.019,-1.076 -0.404,0.024 -0.306,0.177 -0.009,0.422 0.048,0.558 -0.237,0.032 -0.365,-0.495 -0.594,0.93 0.089,0.314 0.134,0.098 z m 207.608,163.369 0.256,-0.05 0.024,-0.104 -0.039,-0.289 -0.199,-0.106 -0.284,0.093 0.045,0.195 0.083,0.143 0.114,0.118 z m -9.508,15.78 -0.354,0.392 -0.492,0.599 -0.419,0.066 0.023,0.098 0.086,0.166 0.172,0.005 0.523,-0.45 0.806,-1.005 -0.152,-0.005 -0.193,0.134 z m 5.502,-7.504 -0.097,0.308 -0.279,0.253 0.023,0.071 0.119,0.072 0.107,-0.219 0.346,-0.284 0.067,-0.148 -0.083,-0.055 -0.203,0.002 z m -22.669,22.126 -0.059,0.051 0.012,0.051 0.037,-0.009 0.068,-0.047 0.047,-0.029 0.04,-0.042 -0.034,-0.034 -0.111,0.059 z m 0.798,-0.825 -0.064,-0.017 -0.074,0.051 -0.028,0.034 0.041,0.017 0.123,0.021 0.074,-0.021 -0.024,-0.073 -0.048,-0.012 z m -0.353,-3.31 -0.268,-0.01 -0.482,0.89 -0.141,0.094 -0.107,0.217 -0.221,0.25 -0.07,0.224 -0.23,0.282 -0.573,0.498 -0.101,0.235 0.037,0.284 0.327,0.28 0.087,-0.699 0.506,-0.371 0.338,-0.416 0.074,-0.218 0.557,-0.555 0.17,-0.089 0.347,-0.048 0.394,-0.37 0.224,0.004 0.145,-0.258 -0.595,0.062 -0.418,-0.286 z m -0.775,4.044 -0.049,0.006 -0.052,0.003 -0.039,-0.02 -0.035,0.007 0,0.028 0.035,0.025 0.014,0.042 0.021,0.051 0.037,-0.01 0.067,-0.013 0.034,-0.003 -0.007,-0.073 -0.026,-0.043 z m 8.122,-7.833 0.002,-0.12 -0.039,-0.096 -0.11,-0.066 -0.186,0.023 -0.265,0.144 -0.809,0.806 -0.545,0.096 -0.208,-0.016 -0.257,-0.46 -0.113,-0.022 -0.145,0.33 0.036,0.297 -0.326,0.139 -0.313,0.387 -0.281,0.121 -0.357,0.464 -0.516,0.352 -0.258,0.354 -0.039,0.405 -0.468,0.383 -0.114,0.207 -0.102,0.426 0.564,-0.498 0.306,-0.087 0.288,-0.487 0.711,-0.622 0.13,-0.202 0.035,-0.229 0.101,-0.128 0.354,0.074 0.363,-0.126 0.257,-0.316 0.722,-0.582 0.428,-0.12 0.519,-0.28 0.537,-0.025 0.13,-0.154 -0.096,-0.203 0.064,-0.169 z m 4.163,-2.989 -0.972,0.72 -0.467,0.586 -0.365,0.146 -0.614,0.987 0.258,0.008 0.417,-0.203 0.55,-0.565 0.198,-0.158 0.288,-0.108 0.388,-0.337 0.111,-0.318 0.894,-0.792 -0.573,-0.02 -0.113,0.054 z m -9.778,9.263 -0.568,0.184 -0.023,0.062 -0.014,0.219 0.208,0.094 0.087,-0.106 0.52,-0.234 -0.042,-0.097 -0.168,-0.122 z m 10.781,-69.686 -0.206,0.344 -0.344,0.235 0.005,0.105 0.11,0.149 0.221,-0.062 0.387,-0.417 -0.042,-0.148 -0.131,-0.206 z m 39.028,-0.334 -0.155,-0.031 -0.885,0.713 -1.238,0.442 0.017,0.232 0.05,0.231 -0.162,0.711 -0.421,0.851 -0.419,0.333 0.013,0.176 0.043,0.115 0.068,0.082 0.459,-0.504 0.912,-0.757 0.895,-0.51 0.945,-0.257 0.129,-0.462 -0.091,-0.771 -0.16,-0.594 z m -248.146,-177.497999 0.853,0.516 0.503,0.016 0.036,0.788 0.451,0.06 2.186,-0.191 -0.111,-0.346 -0.531,-0.502 -2.505,-1.341 -0.267,0.435 -0.347,-0.559 -0.282,-0.209 -0.272,0.308 0.058,0.298 0.228,0.727 z m -0.039,73.997999 -0.159,0.306 0.425,0.466 1.193,0.362 0.271,-0.062 -1.418,-1.081 -0.312,0.009 z m -0.877,0.941 0.207,-0.221 0.422,-0.67 -0.033,-0.105 -0.307,-0.136 -1.012,0.327 -0.547,0.625 -0.086,0.444 0.447,-0.24 0.909,-0.024 z m -3.908,5.347 0.431,0.253 0.141,0.165 0.063,-0.092 0.103,-0.327 -0.104,-0.207 -0.036,-0.38 0.268,-0.611 0.614,-0.287 -0.663,-0.44 -0.352,-0.132 -0.536,-0.084 -0.591,0.207 -0.157,0.335 -0.118,0.508 0.226,0.443 0.711,0.649 z m 13.088,-100.633999 2.604,-0.636 0.894,-0.35 0.08,-0.259 0.152,-0.8 -0.416,-0.394 -1.327,-0.457 -1.653,0.269 -0.302,0.655 -0.371,1.335 0.082,0.237 0.257,0.4 z m -25.202,99.209999 0.505,0.114 0.229,-0.035 0.824,-0.452 0.598,-0.237 1.315,-0.415 0.76,-0.111 0.012,-0.493 -0.114,-0.568 -0.406,-0.576 -0.263,-0.295 -0.336,-0.742 -0.254,-0.298 -0.331,-0.259 -0.233,-0.101 -1.656,0.363 -0.563,0.324 -0.432,0.838 0.064,1.318 -0.093,0.535 -0.155,0.413 -0.028,0.406 0.338,0.456 0.219,-0.185 z m 24.591,2.907 1.544,0.387 0.198,-0.106 0.103,-0.449 0.01,-1.419 -0.362,-0.617 -0.156,-0.533 -0.54,-0.537 -1.424,1.938 -0.066,0.396 0.16,0.45 0.533,0.49 z m 249.783,119.036 -0.483,-0.386 -0.331,-0.134 -0.227,-0.288 -0.197,0.005 0.131,0.296 0.531,0.472 1.134,0.894 -0.119,-0.252 -0.439,-0.607 z m -254.001,-117.283 -0.329,0.739 -0.312,0.437 -0.691,0.683 -0.09,0.449 0.098,0.179 0.673,0.146 1.366,-0.086 0.416,-0.16 0.636,-0.776 0.413,-0.228 0.592,-0.608 -0.035,-0.204 -0.207,-0.457 -1.488,-0.731 -0.478,0.003 -0.564,0.614 z m 167.317,115.325 -0.562,0.408 -0.227,0.26 0.142,0.049 0.386,-0.071 0.188,0.178 0.241,-0.013 0.346,-0.848 -0.063,-0.036 -0.22,0.079 -0.231,-0.006 z m 2.906,0.192 -0.254,-0.192 -0.085,-0.085 -0.935,-0.426 -0.095,0.167 -0.303,0.72 -0.144,0.075 -0.307,0.535 -0.119,0.489 0.121,-0.009 0.523,-0.394 0.177,0.231 0.381,0.837 0.169,-0.048 0.193,-0.163 0.224,-0.255 0.251,-0.191 0.089,-0.154 0.071,-0.39 0.225,-0.439 0.308,-0.208 -0.096,-0.13 -0.394,0.03 z m 146.47395,-64.032 -0.312,-0.141 -0.997,-0.04 0.146,-0.222 -0.056,-0.245 -0.099,-0.247 -0.152,-0.155 -0.168,-0.027 -0.343,0.138 -0.341,0.203 0.173,-0.293 0.196,-0.204 -0.103,-0.164 -0.129,-0.095 -1.042,-1.21 -0.624,-0.444 -0.593,-0.594 -0.587,-1.008 -0.635,-0.807 -0.662,-0.298 -0.68,0.056 -0.487,-0.188 -0.487,-0.252 -1.08495,-0.274 0.017,0.223 1.17595,0.403 0.176,0.181 -0.082,0.157 -0.256,0.04 -0.90395,-0.122 -0.269,-0.099 -0.248,-0.309 -0.13,0.039 -0.099,0.18 0.034,0.41 0.114,0.333 -0.234,0.175 -0.248,-0.081 0.012,-0.413 0.055,-0.326 0.279,-0.576 0.158,-0.123 0.027,-0.122 -0.943,-0.26 -0.26,-0.199 -0.261,-0.087 -0.574,0.276 -1.581,0.024 -0.288,0.09 -0.012,0.199 0.1,0.1 0.247,0.082 0.25,-0.015 0.163,0.274 0.363,0.14 0.19,0.28 0.127,0.482 0.063,0.343 0.037,0.348 -0.154,0.63 -0.222,0.263 -0.258,0.146 0.099,0.361 0.265,0.282 0.508,0.133 0.221,0.235 0.192,0.377 -0.163,0.48 -0.19,0.389 -0.156,0.165 -0.109,0.286 -0.087,0.112 -0.111,0 0.133,-1.066 -0.188,-0.635 -0.341,0.146 -0.143,0.167 -0.307,0.561 -0.078,0.029 -0.069,-0.194 -0.099,-0.406 -0.067,-0.437 -0.072,-0.322 -0.306,-0.335 -0.175,-0.127 -0.532,-0.068 -0.17,-0.071 0.154,-0.72 0.277,-0.422 -0.035,-0.944 -0.126,-0.319 -0.158,-0.279 -0.149,-0.667 0.021,-0.797 0.17,-0.472 0.057,-0.584 -0.191,-0.428 -0.237,-0.218 -0.177,0.176 -0.161,0.266 -0.09,0.084 -0.617,0.058 0.399,-0.651 -0.02,-0.545 -0.074,-0.333 -0.123,-0.261 -0.1,-0.561 -4.384,-3.287 -0.742,-0.418 -0.353,-0.361 -0.31,-0.171 -0.317,0.063 -0.192,0.095 -0.141,-0.128 0.13,-0.302 0.185,-0.101 -0.438,-0.519 -1.59,-1.364 -0.346,-0.186 0.248,0.361 1.187,1.071 0.183,0.306 -0.353,0.39 -0.375,0.164 0.104,-0.438 -0.084,-0.5 -0.137,-0.277 -0.413,-0.32 -0.644,-0.268 -0.614,-0.339 -0.123,-0.361 -0.042,-0.519 0.387,0.441 0.211,0.134 -0.423,-0.688 -0.519,-0.61 -1.134,-0.548 -0.215,-0.216 -0.322,-0.462 -0.123,-0.037 -0.227,0.083 -0.57,-0.265 -0.565,-0.336 -0.37,-0.229 -1.671,-1.945 -0.904,-0.287 -0.071,-0.239 -0.051,-0.287 -0.165,-0.2 -1.138,-0.525 -1.429,-0.341 -1.514,-0.931 -1.319,-0.277 -1.442,-0.991 -0.85,-0.746 -0.522,-0.286 -0.478,-0.072 -1.279,0.359 -1.431,0.036 -1.309,-0.211 -1.042,0.061 -0.603,-0.139 -0.827,-0.455 -0.239,0.187 -0.214,0.818 -0.62,-0.334 -0.524,-0.447 -0.869,-0.397 -1.653,-0.262 -2.031,-0.623 -1.063,-0.164 -1.069,-0.095 0.108,1.393 -0.063,0.664 -0.403,0.858 -0.444,0.548 -0.113,0.457 1.183,0.348 0.37,1.562 0.476,0.99 0.317,1.018 -0.004,0.703 -1.284,1.716 -1.325,0.207 -1.279,0.098 -0.548,-1.038 -0.292,-1.251 -1.022,-0.659 -1.006,-0.514 -0.462,-0.088 -0.337,-0.253 -0.205,-1.396 -0.225,-1.045 -0.287,-0.388 -0.274,-0.593 -0.261,-0.235 -0.643,-0.099 -1.558,1.499 -0.529,0.438 -0.18,0.002 -2.357,-0.372 -0.616,-0.309 -3.501,-0.199 -0.993,-0.889 -0.6,-0.128 -0.675,0.27 -0.582,0.069 -0.833,-0.174 -0.72,0.259 -1.598,0.271 -0.588,0.303 -0.62,0.534 -1.146,1.324 -0.159,0.631 0,0.779 0.239,1.084 0,1.241 -0.197,0.431 -0.365,0.208 -0.378,1.308 -0.354,0.703 -0.697,0.185 0.396,-0.531 0.371,-0.356 0.594,-1.947 -0.086,-0.602 -0.475,-0.443 -0.296,-0.465 -0.15,-1.867 -0.148,-0.989 -0.052,-1.185 -0.48,-0.394 -1.74,-0.603 -0.805,-0.447 -0.289,-0.693 0.308,-0.979 -0.021,-0.751 0.163,-0.637 0.263,-0.519 0.065,-0.733 -0.135,-0.951 -0.131,-0.691 -0.301,-0.833 -0.216,-0.378 -1.059,-1.198 -1.819,-1.234 -1.867,-0.897 -1.655,-0.305 -2.141,-0.166 -2.215,-0.015 -0.84,0.492 -1.59,0.038 -1.728,0.515 -1.739,0.811 -0.937,0.012 -1.858,0.368 -0.813,0.009 -2.096,-1.269 0.667,-0.172 0.261,-0.18 -0.935,-1.686 -0.498,-0.604 -1.227,-0.76 -0.498,-0.059 -0.41,0.154 -1.624,0.838 -0.408,0.354 0.806,-0.981 0.395,-0.413 0.4,-0.611 -0.093,-0.385 -0.098,-0.188 -1.513,0.083 -0.097,-0.093 -0.319,-0.526 -0.156,-0.185 -1.008,-0.557 -0.729,-0.213 -0.757,-0.022 -0.126,-0.216 0.088,-0.264 0.029,-0.167 0.234,-0.296 0.648,-0.268 1.688,-0.157 0.381,-0.475 -0.053,-0.496 -0.098,-0.378 -0.553,-0.901 -0.743,-0.668 -1.506,-0.808 -1.58,-0.549 -2.717,-0.268 -0.482,0.12 -0.379,0.331 -0.651,0.87 -1.479,2.508 -0.827,1.025 -0.754,0.555 -1.729,0.454 -0.317,-0.104 -0.241,-0.411 0.079,-0.361 0.157,-0.334 0.011,-0.214 -0.087,-0.418 0.048,-0.226 0.174,-0.01 0.408,0.294 0.382,0.041 0.98,-0.462 0,-0.72 -0.26,-0.421 0.129,-1.011 -0.001,-0.263 0.138,-0.18 0.114,0.037 0.707,0.73 0.241,-0.039 0.261,0.082 -0.63,1.747 0.302,0.004 0.81,-0.821 0.555,-0.803 0.583,-1.036 0.069,-0.542 -0.667,-0.065 -4.364,0.393 -1.596,0.782 -0.493,-0.164 -0.353,-0.608 0.538,-0.06 0.636,-0.37 0.53,-0.71 0.34,-0.13 0.885,0.033 0.714,0.284 2.154,0.115 0.051,-0.858 -0.476,-0.271 -1.036,-0.242 -0.641,-0.417 -0.805,-0.263 -1.77,-0.373 -0.743,-0.311 -1.748,-0.285 -0.464,-0.236 -4.081,-0.212 -1.524,-0.643 -0.586,-0.656 -1.407,-0.316 -0.281,0.009 -0.09,0.175 -0.066,0.274 0.899,1.192 0.029,0.819 0.27,0.404 -1.051,0.636 -0.714,0.241 -2.384,-0.028 -0.357,0.276 -0.935,1.268 0.012,0.603 0.088,0.927 0.714,0 0.21,-0.405 0.313,-0.165 1.452,0.147 0.149,0.168 -0.487,0.268 -0.469,0.124 -0.581,1.369 -0.788,0.426 0.542,0.223 0.479,0.377 -0.078,1.656 0.684,1.271 0.128,0.585 -0.988,0.02 -0.875,0.393 -0.312,0 -0.573,-0.983 -0.631,-0.648 -0.31,-0.052 -0.406,0.64 -0.581,-0.355 -0.235,0.057 -0.325,0.268 -0.196,0.356 -0.148,0.552 -0.191,0.298 -0.025,0.402 0.291,0.181 0.211,0.042 0.608,0.29 -0.627,0.158 -0.163,0.189 -0.056,0.219 -0.474,0.296 0.163,0.285 0.201,0.221 0.051,0.225 -0.146,0.081 -0.397,-0.265 -0.414,-0.385 -0.653,-0.793 -0.287,-0.529 -0.56,-0.494 -1.992,-1.371 -0.886,-0.434 -0.577,-0.098 -0.914,0.18 -0.561,0.593 -0.945,0.252 -0.586,0.48 -0.312,0.65 -1.684,0.069 -1.162,-0.486 -0.737,-0.501 -0.829,-1.025 -0.817,-1.325 -0.101,-0.111 -0.099,-0.279 -0.147,-0.655 -0.174,-0.492 -0.257,0.277 -0.664,1.52 -0.275,0.745 -0.361,1.408 -0.268,1.178 -0.036,0.499 0.125,0.43 -0.361,0.36 -0.386,0.879 -0.581,1.726 -0.364,0.623 -0.46,0.535 -0.312,0.199 -0.381,-0.033 -0.347,-0.489 -0.186,-1.132 -0.21,-0.227 -0.249,0.635 -0.369,-0.036 -0.718,-0.47 -0.716,-1.018 -0.741,-0.469 -1.045,-2.491 -0.464,-0.917 -0.253,-0.745 -0.594,-0.079 -0.223,-0.549 0.297,-0.394 0.8,-0.333 0.637,0.05 -0.475,-0.996 -0.229,-0.602 -0.249,-0.328 0.092,0.674 -0.105,0.486 -0.215,0.379 -0.36,0.243 -1.552,-3.01 -0.933,-1.481 -0.519,-0.537 -0.324,-0.972 0.217,-0.193 1.104,1.152 0.781,0.59 1.29,1.521 0.979,-0.115 0.356,-0.679 0.003,-1.372 -0.365,-1.132 -0.463,-0.447 -1.592,-0.094 -0.368,-0.367 0.254,-0.114 0.351,-0.026 0.51,-0.335 0.849,-0.855 0.373,-0.266 -0.061,-0.667 -0.594,-0.918 -0.964,-0.128 -0.21,-0.089 0.382,-0.459 0.332,-0.281 0.563,-0.699 0.131,-0.646 -0.116,0.047 -0.409,-0.03 -0.117,-0.278 0.048,-0.493 -0.443,-0.419 -0.403,-0.282 -0.924,-0.049 0.018,-0.324 0.049,-0.292 -0.393,-0.213 -0.325,-0.376 -0.081,-0.342 -0.117,-0.196 -0.603,-0.355 -1.99,-0.651 -0.213,0.19 -0.328,0.927 -0.803,0.974 -0.608,-0.527 -0.121,-0.053 -0.099,-0.251 0.145,-0.432 0.102,-0.42 -0.138,-0.3 -0.116,-0.114 -0.413,0.304 -0.616,0.192 -0.262,0.292 -0.55,0.207 0.052,-0.722 -2.304,-1.901 -0.716,-0.396 -0.43,-0.036 -1.035,0.426 -0.239,0.23 -0.385,0.623 -0.858,-0.394 -0.21,0.294 -0.312,1.032 0.049,1.007 0.092,0.278 0.08,0.541 0.329,0.836 0.34,0.665 -0.14,0.154 -0.142,0.043 -0.169,0.278 -0.16,0.565 -0.291,0.807 -0.395,0.45 -0.452,-0.094 -1.078,-0.607 -0.248,0.108 -0.069,0.441 0.643,0.376 0.059,0.237 -0.168,0.15 -0.434,0.124 -0.778,-0.026 -0.646,-0.159 -0.403,-0.608 -0.388,-0.084 -1.104,-0.012 -1.003,0.327 -1.12,-0.425 -1.898,0.093 -0.48,-0.074 -0.912,-0.815 -1.305,-0.514 -1.488,-1.253 -0.15,-1.179 0.226,-0.955 0.835,-10e-4 0.511,-0.165 -0.071,-0.367 -0.112,-0.193 -1.181,-0.515 -3.204,-0.093 -2.282,-0.766 -3.249,-0.265 -1.465,0.951 -2.12,0.224 -0.571,0.508 -0.973,0.281 0.082,0.703 0.482,0.542 0.235,0.109 0.255,0.212 -0.159,0.188 -0.18,0.084 -0.354,0.433 -0.226,0.398 0.063,0.876 -0.109,0.848 -0.352,1.172 -0.297,0.514 -0.27,0.689 0.231,0.635 0.263,0.263 0.669,0.32 0.23,0.215 -0.134,0.185 -0.988,-0.215 -0.354,-0.687 -0.078,-0.372 -0.085,-0.581 0.336,-0.633 0.342,-0.427 0.296,-1.017 0.036,-0.938 0.009,-1.956 -0.601,-0.445 -0.336,-0.669 0.582,-1.218 0.146,-0.645 -0.251,-0.597 -0.408,-1.305 -0.417,-0.772 -0.274,-0.322 -0.278,-0.166 0.291,1.278 -0.234,0.649 -0.17,0.251 -1.11,0.35 -0.709,0.022 -0.964,-0.364 -1.132,-0.829 -0.283,-0.576 -0.201,-0.848 0.651,-0.369 0.254,-0.241 -0.587,-0.192 -0.591,-0.056 -0.21,1.155 -0.382,-0.086 -1.849,-0.707 -0.498,0.234 -0.603,0.647 -0.267,0.5 -0.305,0.816 0.115,0.567 0.129,0.212 0.95,0.141 0.834,-0.175 0.938,-0.54 0.216,0.202 0.193,0.292 -0.266,0.416 -0.968,0.601 -1.609,1.55 -0.612,0.182 -0.858,-0.33 -0.465,0.865 -0.212,0.208 -1.444,0.581 -0.629,0.086 -0.185,0.433 -0.378,0.078 -0.42,0.217 -0.704,0.606 -1.071,0.097 -0.729,-0.137 -1.771,0.367 -0.457,0.319 -0.298,0.442 -0.139,0.563 -0.26,0.5 -1.007,1.079 -0.857,0.443 -0.727,0.123 0.699,-0.607 0.798,-1.128 1.436,-3.372 1.377,-0.221 0.322,-0.451 1.047,-2.099 0.292,-0.314 1.387,-0.04 1.219,-0.689 2.457,-3.414 1.223,-0.577 0.841,-0.824 0.15,-0.409 0.133,-0.541 -0.126,-0.329 -0.073,-0.299 1.082,-0.59 0.415,-0.913 1.457,-0.862 1.14,-1.166 1.598,-0.868 0.908,-1.21 2.058,-1.748 1.933,-3.042 0.316,-1.751 -0.47,-0.575 -0.569,-0.361 -0.317,-0.869 -0.229,-0.103 -0.578,0.548 -0.634,-1.876 -0.776,-1.057 0.036,-0.155 0.086,-0.071 0.372,0.166 1.396,1.56 0.744,0.236 0.218,0.24 0.135,0.394 -0.088,0.653 0.229,-0.05 0.146,-0.274 0.361,-1.269 0.344,-1.727 -0.039,-0.751 -0.823,0.341 -0.382,-2.557 -0.175,-0.782 -0.261,-0.857 -0.523,-0.076 -0.275,0.217 0.219,0.289 0.237,0.479 -0.158,0.487 -0.133,0.22 -0.64,0.647 -0.456,0.059 0.184,-0.275 0.215,-0.613 -0.156,-0.672 -0.164,-0.375 -0.182,-1.951 -0.579,-0.295 -0.326,-0.315 -0.433,0.128 -0.562,0.52 0.208,-0.479 0.217,-0.716 -0.436,-0.88 -0.429,-0.605 -0.521,-0.228 -0.584,-0.782 -0.779,-0.444 -1.806,-0.433 -1.38,0.564 -1.717,-0.457 -2.052,0.355 -0.804,0.007 -0.479,-0.224 -0.431,0.237 -0.219,0.705 -0.134,1.102 -0.506,0.572 -0.275,0.146 -1.309,-0.168 -0.933,0.529 -0.399,-0.416 -0.757,0.029 -0.081,-0.931 0.451,0.038 0.263,0.156 0.848,-1.909 0.699,-1.122 0.673,-1.292 -0.424,-0.801 -0.946,-0.542 -0.443,0.033 -0.221,0.225 -1.028,-0.426 -0.542,0.032 -0.907,0.597 -0.31,-0.049 -0.186,-1.243 -0.914,0.105 -3.137,-0.119 0.34,-0.388 1.651,-0.531 1.326,-0.799 0.981,-1.457 0.913,-0.494 -0.214,-0.735 -0.249,-0.533 -0.518,-0.472 -1.126,-0.312 -0.965,-0.593 -0.424,-0.751 -1.767,-1.031 -0.478,0 -1.273,1.295 -0.645,-0.12 -0.561,0.191 -1.463,1.537 -3.066,3.979 -0.631,1.218 -0.301,0.915 -0.549,0.475 -0.236,1.115 0.041,0.965 0.246,0.505 0.256,0.947 -0.262,1.081 -0.219,0.706 0.209,0.316 0.591,-0.063 1.32,0.604 -0.241,0.555 -0.805,-0.476 -0.702,0.02 -0.609,-0.577 -1.463,0.554 -1.085,-0.129 -1.009,0.221 -1.983,-0.458 -0.18,0.348 0.46,0.597 0.349,0.555 1.03,1.296 0.438,0.412 0.586,1.225 0.073,2.391 -0.32,0.572 -0.359,0.795 -0.192,0.146 -0.277,-0.053 0.45,-0.56 0.244,-1.201 0.228,-0.839 -0.301,-0.573 -0.134,-0.05 -0.148,-0.315 -1.054,-0.801 -0.568,-0.351 -0.6,-0.194 -0.306,-0.22 -0.898,0.731 -0.414,0.166 -0.49,0.384 -0.285,0.526 -0.697,0.124 -0.09,0.57 -0.389,0.566 -0.417,-0.617 -0.407,0.171 -0.916,1.015 -1.072,0.459 0.114,-0.35 0.176,-0.789 -0.258,-0.182 -1.61,0.92 -0.536,0.619 -0.254,-0.229 0.934,-1.358 0.251,-0.841 -0.437,-0.364 -0.958,-0.283 -0.615,-0.027 -0.9,0.305 -1.299,-0.447 -0.193,0.512 -0.333,0.061 -0.802,-0.243 -0.729,0.261 -0.546,0.549 -0.811,-0.543 -0.281,0.023 -0.434,0.849 -0.374,-0.573 -0.316,1.11 0.089,0.804 0.27,0.083 0.23,-0.117 0.134,-0.367 0.174,-0.166 0.64,0.667 0.194,-0.365 0.277,-0.271 0.316,0.401 1.317,-0.435 -0.228,0.535 -1.475,0.677 -2.658,0.858 -0.548,0.336 -1.577,0.295 -1.027,0.84 -1.332,0.001 -2.301,0.661 -1.655,1.49 -0.8,-0.133 -1.62,1.125 -0.644,0.872 -2.336,1.768 -1.404,-0.681 -0.463,0.24 -0.236,0.624 0.048,0.487 0.566,-0.045 0.412,0.215 0.505,0.427 -0.135,0.783 -1.06,1.741 -0.502,0.65 -0.594,0.376 -1.264,-1.427 -0.229,0.629 -0.17,0.311 -0.5,-0.128 -0.252,1.011 0.913,0.175 0.868,0.455 0.771,0.664 0.545,0.763 0.595,0.482 0.347,0.414 -0.931,0.401 -0.655,-0.926 -0.354,-0.313 -0.4,-0.061 -0.598,0.283 -0.509,1.114 0.495,0.379 1.104,0.369 0.354,0.499 1.438,3.23 0.358,0.329 0.466,0.137 0.19,0.219 -0.566,0.551 -0.21,0.513 -0.489,0.894 -2.088,0.459 -0.621,0.338 -0.172,0.156 -0.262,0.329 -0.169,0.29 -0.081,0.649 0.171,0.425 0.424,0.394 1.665,1.757 -0.107,0.184 -0.456,-0.326 -0.579,-0.535 -0.589,-0.747 -0.786,-0.53 -0.044,-0.438 -0.027,-0.654 0.021,-0.203 0.075,-0.334 0.749,-0.846 0.763,-0.413 0.932,-0.968 0.932,-1.077 -0.191,-0.369 -0.192,-0.266 -0.846,-0.072 -1.719,0.377 -1.032,0.356 -0.457,0.873 -0.695,0.131 -0.346,0.021 -0.953,-0.434 -0.899,0.409 -2.106,0.355 -0.343,0.199 -4.849,0.077 -0.978,0.184 -2.485,0.715 -0.06,0.53 0.095,0.404 -0.386,0.594 -0.169,0.558 0.059,0.657 0.016,0.569 0.087,0.737 0.151,0.667 0.362,0.355 0.333,0.23 0.236,0.729 -0.19,0.844 -0.275,0.964 -0.054,0.446 0.178,0.604 0.219,1.199 0.083,0.296 0.761,0.916 0.518,0.286 0.852,0.066 0.58,0.232 0.845,0.564 0.252,0.256 0.072,0.242 0.2,0.971 0.108,0.304 0.915,1.331 0.308,0.202 1.25,0.254 0.394,0.424 0.544,1.287 0.054,0.305 0.05,0.493 -0.059,0.45 -0.054,0.261 -0.206,0.413 -0.538,1.683 -0.322,1.498 0.513,0.994 0.688,1.906 0.203,0.796 0.237,1.062 -0.1,0.673 -0.113,0.403 -0.457,0.61 -0.571,0.2 -0.616,0.371 0.057,0.461 0.106,0.529 -0.063,0.393 -0.081,0.136 -0.336,0.04 -0.293,-0.134 -0.251,-0.409 -0.238,-0.526 0.169,-0.571 0.498,-1.008 0.31,-1.454 0.079,-0.966 -0.021,-1.025 -0.115,-0.686 -0.396,-0.51 -0.368,0.11 -0.408,0.447 -0.396,1.703 -0.542,1.238 -0.075,0.51 0.012,0.442 -0.041,0.289 -0.108,-0.97 -0.055,-0.73 0.302,-0.919 0.184,-0.856 -0.056,-0.616 -0.216,-1.016 0.042,-0.504 0.063,-0.322 0.129,-1.448 0.479,-0.287 1.192,-1.115 0.165,-0.277 0.361,-0.982 0.168,-0.353 0.191,-0.587 -0.356,-0.467 -0.339,-0.252 -0.641,-0.138 -0.591,0.049 -1.312,0.463 -1.174,-0.082 -0.422,-0.27 -1.839,-2.019 -0.116,-0.764 -0.146,-0.317 -0.178,-0.083 -0.632,-0.501 -1.46,-0.641 -1.492,-1.455 -2.637,-0.132 -0.722,0.162 -0.722,0.451 -0.66,0.917 -0.303,0.255 -0.431,0.085 -0.09,0.326 -0.081,0.446 0.23,0.329 0.808,-0.389 0.661,0.203 0.35,0.432 0.257,0.839 -0.128,0.408 -1.148,0.637 -0.637,-0.051 -1.374,-1.465 -0.532,-0.262 -1.263,0.246 -0.835,0.719 -0.257,0.146 0.199,0.733 0.314,1.31 0.271,0.778 0.34,0.382 1.229,0.936 0.681,0.328 1.031,0.858 0.633,0.096 0.566,-0.206 0.854,0.505 0.488,1.558 0.294,0.534 0.271,0.271 0.382,0.154 0.224,0.021 0.239,-0.203 0.548,-0.042 -0.192,0.446 -0.205,0.141 -1.169,0.188 -0.575,-0.16 -0.709,-0.48 -1.343,-1.57 -1.668,-0.114 -0.187,0.461 -0.524,-0.645 -1.772,-0.144 -1.058,-0.413 -1.127,-0.663 -0.096,-0.322 -0.05,-0.454 0.384,-0.569 0.145,-0.352 0.098,-1.068 -0.718,-1.42 0.074,-1.313 0.338,-0.22 0.438,-1.71 0.264,-0.564 0.141,-0.195 0.132,-0.394 -0.141,-0.496 -0.132,-0.299 -0.148,-0.696 0.033,-0.512 10e-4,-0.645 -0.361,-0.977 -0.296,-1.056 -0.608,-0.532 -0.59,-0.011 -0.218,0.146 -0.219,0.252 0.309,0.963 0.312,0.854 0.147,0.662 0.104,1.194 -0.021,1.456 -0.103,0.588 -0.172,0.498 -0.528,0.616 -0.884,0.731 -0.499,0.355 -1.043,0.39 -0.751,0.628 -1.644,3.564 0.18,0.526 0.604,0.574 0.398,0.492 0.194,0.41 0.435,1.283 1.626,3.55 0.092,0.633 -0.384,1.12 -0.756,1.44 -0.301,0.806 -0.708,3.054 -0.05,0.776 0.289,0.728 0.476,0.909 0.163,0.687 -0.323,1.744 0.17,0.434 0.396,0.225 1.081,-0.235 1.269,0.425 0.67,-0.203 1.029,-0.965 0.396,-0.104 1.234,0.132 1.808,0.928 1.918,1.244 0.387,0.417 0.518,0.017 0.378,2.11 0.341,1.137 0.146,0.802 0.103,0.893 -0.355,0.188 -0.313,0.093 -0.258,0.242 -0.361,1.374 -0.045,0.732 0.191,1.172 1.608,0.544 1.116,0.289 0.785,0.058 0.137,0.133 0.098,0.177 -0.935,0.079 -1.694,0.142 -0.601,-0.082 -0.271,-0.142 -0.269,-0.4 -0.516,-0.404 -0.197,-0.273 -0.423,-0.317 0.207,-1.209 0.035,-2.819 -0.063,-1.172 -0.356,-0.97 -1.057,-1.394 -0.363,-0.938 -0.411,-0.629 -0.402,-0.104 -0.585,0.124 -1.453,0.582 -1.305,0.307 -1.53,0.857 -0.276,0.713 -0.251,1.826 0.336,0.894 0.34,0.642 0.31,1.09 0.1,0.657 0.025,0.66 -0.05,0.975 -0.262,0.53 -1.688,2.06 -0.248,0.63 -0.289,1.757 -0.256,0.644 -0.781,0.96 -0.482,0.386 -2.594,1.743 -0.094,0.382 -0.176,1.222 -0.713,0.549 -0.423,0.046 -0.985,-0.607 -0.583,-0.179 -0.597,-0.051 -2.262,0.17 -1.002,-0.413 -0.79,-0.583 -0.811,-0.184 -0.611,-0.479 -0.142,-0.438 -0.148,-0.587 -0.112,-0.304 -0.105,-0.156 0.184,-0.196 0.391,-0.09 1.467,0.1 0.383,-0.221 0.201,0.111 0.407,0.538 0.532,0.486 0.45,-0.082 0.38,-0.4 0.145,-0.003 0.168,0.063 -0.344,0.315 -0.353,0.231 -0.095,0.146 -0.072,0.319 0.501,0.379 0.459,0.206 0.602,-0.202 0.354,-0.397 0.775,-0.582 0.555,0.026 0.032,-0.549 -0.287,-0.844 -0.234,-0.591 0.85,0.156 0.504,-0.487 2.096,-4.209 0.995,-0.805 0.331,-0.523 0.239,-0.729 0.059,-0.805 -0.122,-0.884 0.028,-0.681 0.356,-0.855 0.558,-1.036 0.354,-0.39 -0.051,-0.389 -0.071,-0.321 -1.003,-1.019 -1.063,-0.839 -0.375,-0.463 -0.284,-0.731 -0.14,-0.876 0,-0.58 0.085,-1.775 0.163,-0.843 -0.045,-2.492 -0.196,-3.107 -0.169,-0.849 0.26,-0.588 0.256,-0.483 0.132,-0.452 0.089,-3.092 -0.076,-1.203 -0.346,-1.623 -1.409,-1.356 -0.595,-1.324 0.048,-0.477 0.077,-0.323 0.611,-0.543 0.42,-0.77 0.269,-1.129 0.559,-1.726 0.142,-0.608 0.36,-2.421 0.097,-1.298 0.069,-1.954 -0.5,-0.501 -0.526,-0.434 -0.97,-0.367 -0.48,0.088 -0.878,-0.784 -0.327,-0.11 -2.371,0.222 -1.356,-0.103 -0.799,0.178 -0.419,-0.023 -0.262,-0.12 0.039,-0.327 0.141,-0.235 -0.041,-0.203 -0.231,-0.042 -0.619,0.253 -0.988,2.711 -0.588,2.601 -0.624,3.476 -0.387,1.448 -0.563,1.522 -0.869,1.195 -1.172,1.204 -0.751,0.563 -1.001,0.573 -0.42,1.241 -0.36,0.507 0.148,0.343 0.434,-0.19 -0.248,0.874 -0.26,0.53 0.025,0.307 0.076,0.395 0.338,0.18 0.9,-0.343 0.191,0.334 0.205,0.508 -0.106,2.017 -0.252,1.713 -0.029,0.625 0.143,0.4 0.117,0.524 -0.266,0.637 -0.212,0.205 -0.4,-0.071 -0.264,1.406 -0.083,0.829 0.004,0.654 0.102,0.403 0.158,0.445 0.105,-0.345 0.083,-0.475 0.282,-0.308 1.57,0.881 0.422,0.437 0.649,0.4 0.189,0.474 0.124,1.466 0.667,1.329 0.526,0.787 0.328,0.31 0.29,0.078 0.453,-0.303 0.606,0.043 -0.325,1.033 -0.547,1.933 -0.913,1.672 -0.374,0.26 -0.601,-0.68 -0.791,-0.555 -0.405,-0.284 -0.256,-0.503 -1.376,-1.346 -0.412,-0.928 -0.69,-0.144 -0.955,-0.435 -0.142,-0.105 -0.788,-0.586 -0.764,-0.32 -0.216,-0.435 -0.584,-0.324 -0.564,-0.22 -0.828,-0.542 -0.38,0.174 0.091,-0.615 -0.944,-0.878 -1.127,-0.792 -2.327,-1.131 -2.049,-0.549 -2.416,-0.161 -2.117,-0.718 -0.3,0.035 -0.271,0.211 -0.713,1.044 -0.793,0.32 -0.297,0.497 0.468,1.073 0.919,2.75 0.544,-0.277 0.211,1.246 -0.332,0.714 -0.498,0.841 -0.417,0.449 -0.923,0.227 -0.742,-0.052 -0.087,0.781 0.214,0.724 -0.052,0.299 -0.071,0.377 -0.108,0.197 -0.088,0.12 -0.285,0.218 -0.341,0.003 -0.824,-0.374 -0.594,-0.336 0.037,-1.317 0.31,-0.578 0.212,-0.132 0.203,-0.231 -0.422,-0.862 -0.309,-0.364 -0.142,-0.594 -0.007,-0.262 -0.389,0.018 -1.586,0.684 -0.328,0.64 -0.18,-0.434 -2.045,1.922 -0.891,0.672 -0.61,-0.098 -0.812,-0.402 -0.967,-0.039 -0.651,-0.191 -0.334,0.089 -0.7,0.473 -0.722,0.062 -0.75,0.673 -0.639,0.81 -0.174,1.304 -0.402,0.133 -0.439,-0.671 -0.239,-0.16 -0.23,0.145 -0.452,0.066 -0.375,0.055 -0.368,0.24 -0.152,-0.029 -1.119,-0.215 -0.313,0.021 -0.4,-0.081 0.092,-0.335 0.139,-0.239 0.629,-0.182 0.346,-0.27 0.392,0.151 0.284,-0.403 -0.037,-0.775 -0.445,-0.745 0.21,-0.578 0.161,-0.716 0.107,-0.08 0.115,-0.251 -0.143,-0.21 -0.341,-0.104 -0.002,-0.177 0.216,-0.149 1.408,-0.297 0.322,-0.216 -0.856,-0.086 -1.077,0.058 -1.092,0.651 -2.047,1.407 -0.953,0.949 0.255,-0.016 0.323,0.137 0.274,0.662 0.21,0.169 -0.148,0.437 -0.547,0.34 -0.22,0.231 -0.209,0.091 -0.177,-0.085 -0.212,-0.178 0.123,-0.337 0.162,-0.312 -0.439,-0.556 -0.205,-0.071 -0.171,0.02 -1.061,0.478 -0.788,0.564 -0.723,0.297 -0.673,0.102 -0.392,0.245 -0.801,0.752 -0.507,0.325 -0.848,0.829 -2.178,1.456 -0.565,0.124 -0.318,-0.118 -0.242,-0.196 -0.165,0.162 0.188,0.351 0.323,0.709 -0.125,0.369 -0.503,-0.102 -1.053,0.331 -1.134,0.487 0.022,0.506 0.072,0.444 -0.193,0.722 -0.2,0.583 -0.166,1.666 -0.149,0.496 -0.448,0.33 -2.261,0.745 -0.389,0.046 -0.168,0.134 -0.123,-0.134 -0.423,-0.17 -0.6,-0.005 -0.275,-0.068 -0.283,-0.271 -0.373,-0.702 -0.534,-1.415 -1.188,-0.718 -0.56,-0.48 -0.105,-0.455 0.104,-0.47 1.22,-1.555 0.434,-0.508 1.811,-0.45 0.715,-0.041 0.733,-0.187 -0.019,-0.907 -0.712,-1.113 -0.761,-1.303 -0.748,-1.434 -1.046,-0.512 -1.238,-0.243 -2.534,0.279 -0.357,-0.054 -1.617,-1.007 -0.165,-0.015 -0.225,0.064 0.07,0.29 0.129,0.21 2.147,2.15 0.1,0.556 0.062,0.75 -0.036,0.315 0.05,0.311 -0.018,0.567 -0.53,2.415 -0.505,1.699 -0.17,0.8 -0.038,0.545 0.205,0.477 0.615,0.154 0.61,0.488 0.315,0.687 0.071,0.476 0.022,1.021 0.145,0.872 -0.484,1.341 -0.269,0.523 -0.346,1.2 0.135,0.849 -0.036,0.333 -0.079,0.386 -0.246,-0.284 -0.204,-0.338 -0.282,-0.302 -0.3,-0.111 -0.317,0.081 -0.23,0.162 0.024,-0.347 0.289,-0.539 -0.14,-0.28 -0.147,-0.21 -0.892,-0.659 -0.637,-0.038 -0.56,0.067 -0.573,-0.078 -0.425,-0.42 -0.384,-0.227 -0.29,-0.035 -0.356,0.377 -0.85,1.445 -0.856,0.943 -1.122,0.708 -0.847,0.229 -0.232,0.168 -0.501,0.821 -0.52,0.63 -1.435,1.046 -0.1,0.428 -0.09,0.586 0.137,0.661 0.276,0.638 0.691,1.278 0.389,0.433 0.265,0.674 0.195,0.775 -0.104,0.157 -0.573,-0.191 -0.409,0.087 -0.587,0.527 -0.044,0.224 -0.21,0.519 -0.535,0.042 -1.442,-0.938 -1.236,-0.478 -0.202,-0.03 -0.278,-0.237 -0.084,-0.197 -0.516,0.039 -0.315,-0.022 -0.298,-0.16 -1.351,-1.522 -1.087,-0.574 -0.254,-0.011 -0.47,0.157 -0.272,1.232 -0.373,0.342 -0.332,-0.021 -0.018,0.603 0.142,0.371 0.127,0.266 0.408,0.428 0.761,1.281 0.402,0.524 0.297,0.198 0.393,0.028 0.873,-0.151 0.289,0.198 0.309,0.299 0.066,0.73 0.239,0.746 0.024,0.418 -0.289,0.49 -0.933,0.355 -0.542,0.509 -0.195,-0.021 -1.116,-0.591 -0.733,-0.227 -0.979,-0.369 -0.177,-0.202 -0.437,-0.993 -0.966,-0.944 -0.435,-0.278 -0.604,0.204 -0.416,-0.102 -0.698,-0.504 -0.465,-0.78 -0.032,-0.959 0.132,-0.21 0.131,-0.113 -0.335,-0.291 -0.016,-0.742 -0.066,-0.485 -0.372,-1.211 -0.379,-0.734 -0.363,-0.792 0.387,-0.411 0.201,-0.36 0.28,-1.045 0.054,-0.356 0.119,-0.354 0.045,-0.329 -0.019,-0.33 -0.266,-0.6 -0.819,-1.219 -0.806,-0.672 -1.533,-0.667 -0.423,0.038 -0.155,-0.097 0.327,-0.121 0.326,-0.264 0.176,-0.407 -0.388,-0.202 -0.315,-0.091 -0.527,-0.333 -0.097,-0.297 0.116,-0.211 -0.123,-0.538 -0.707,-0.171 -0.186,-0.123 -0.015,-0.181 -0.479,-0.588 -0.625,-0.62 0.104,-0.627 -0.45,-0.46 -0.39,-0.326 -0.613,-0.12 -0.246,-0.228 1.416,0.063 1.489,0.475 -0.126,0.185 -0.106,0.284 0.434,0.812 0.416,0.459 0.931,0.565 0.115,0.001 0.203,-0.144 0.461,0.239 0.376,0.313 0.708,0.025 0.857,0.369 -0.058,0.151 -0.098,0.117 0.243,0.443 0.358,-0.065 0.602,-0.364 1.514,1.284 0.419,0.23 2.414,0.653 1.112,0.061 0.601,0.146 0.873,0.331 0.936,0.663 0.765,0.235 1.395,0.215 0.719,-0.032 1.783,-0.436 2.285,-1.167 1.174,-1.026 1.873,-2.683 0.243,-0.629 0.221,-1.487 0.013,-0.637 -0.272,-0.064 -0.359,-0.352 0,-0.866 -0.205,-0.425 -0.265,-1.979 -0.562,-0.218 -0.308,-0.23 -0.367,-0.116 -0.407,-0.313 -0.488,-0.819 -0.479,-0.55 -0.394,-0.744 -0.242,-0.274 -0.177,-0.085 0.122,0.376 0.094,0.403 -0.714,-0.099 -2.07,-1.912 -0.354,-0.15 -0.137,0.173 -0.636,-0.256 -0.204,-0.453 -1.76,-2.124 -3.122,-2.419 -2.134,-1.479 -1.594,-0.662 -0.159,0.078 -0.161,0.275 -0.466,0.076 -0.409,-0.054 -1.435,-0.593 -0.347,-0.081 -1.529,0.023 -0.161,0.167 -0.537,1.255 -0.287,0.253 -0.54,0.231 0.155,-0.378 0.369,-0.275 0.239,-0.913 0.014,-0.379 0.129,-0.5 -0.026,-0.398 -0.195,-0.129 -0.362,0.132 -0.777,0.481 -0.104,-0.127 0.223,-0.497 -0.06,-0.196 -0.326,0.074 -0.693,-0.229 -0.727,0.083 -0.132,-0.602 -0.475,-0.34 -0.196,-0.289 0.239,-0.335 1.621,0.551 0.451,0.032 0.223,-0.197 0.051,-0.357 -0.014,-0.417 -0.186,-0.241 -1.056,-0.443 -0.488,-0.506 -1.142,-0.694 -0.043,0.325 0.172,0.641 -0.091,0.207 -0.333,-0.18 -0.255,0.132 -0.344,0.769 -0.334,0.194 -0.264,0.06 -1.132,-0.645 -0.505,-0.115 0.153,1.065 -0.005,0.37 -0.072,0.358 -0.101,0.183 -0.201,0.08 -0.487,-0.032 -0.661,-0.419 -0.427,-0.395 -0.133,-0.017 -0.058,0.048 0.104,0.396 -0.028,0.304 -0.064,0.33 -0.09,0.299 -0.125,0.25 -0.262,0.322 -0.453,0.254 -1.247,0.495 -0.099,0.218 -0.402,1.37 -0.109,0.2 -0.147,0.169 -0.429,0.219 -0.188,0.097 -0.58,0.38 -0.354,0.256 -0.426,0.188 0.11,0.249 0.708,0.052 0.109,0.071 0.079,0.127 0.013,0.204 -0.071,0.329 -0.766,1.801 -0.024,0.377 0.25,1.044 0.351,1.224 1.061,0.541 0.788,0.421 0.506,0.994 0.835,1.301 0.442,0.484 0.025,0.15 -0.131,0.889 -0.535,0.886 -0.5,0.744 -0.518,0.892 -0.405,0.757 -0.439,0.903 -0.051,0.292 -0.008,0.275 0.076,0.303 0.562,1.093 0.219,0.555 0.261,0.598 0.225,0.65 0.13,0.581 0.225,0.563 0.14,0.287 0.232,0.402 0.28,0.596 0.093,0.471 0.423,1.624 0.043,0.411 -0.021,0.304 -0.186,0.074 -0.411,0.048 -0.446,0.199 -0.022,0.067 0.291,0.378 -0.257,0.645 -0.037,0.919 -0.274,0.48 -0.026,0.111 0.012,0.093 0.049,0.073 0.507,0.128 0.044,0.13 0.002,0.269 -0.045,0.248 -0.255,0.184 -0.273,0.271 -0.061,0.25 0.009,0.222 0.093,0.375 0.181,0.436 0.229,0.273 0.813,0.259 0.105,0.213 0.044,0.292 -0.017,0.285 -0.378,0.568 0.003,0.218 0.155,0.526 0.186,0.501 0.793,0.542 0.273,0.296 0.072,0.235 0.04,0.379 -0.005,0.41 -0.062,0.363 -0.249,0.467 -0.575,0.918 -0.579,0.355 -0.035,0.077 0.179,0.292 1.019,1.166 0.665,0.543 0.896,0.73 0.578,0.575 0.187,0.412 0.25,0.458 0.281,0.373 0.203,0.323 0.077,0.208 -0.007,0.223 -0.271,0.671 -0.154,0.517 -0.271,0.755 -0.278,0.524 -0.704,0.954 -1.039,1.18 -0.241,0.355 -0.486,0.617 -0.833,1.233 -0.215,0.271 -0.682,0.976 -0.311,0.31 -0.245,0.289 -0.675,0.915 -0.726,0.691 -0.712,0.64 -0.214,0.323 -0.266,0.247 -0.317,0.234 -0.133,0.131 -0.717,0.869 -0.995,1.198 1.071,-0.199 0.936,-0.607 0.183,0.142 0.204,0.237 -0.029,0.388 -0.05,0.292 -0.367,-0.276 0.086,0.326 0.339,0.611 0.476,0.248 0.72,0.792 0.846,0.087 0.558,-0.146 0.426,0.037 0.424,0.419 0.293,0.531 0.233,0.133 0.316,0.254 -0.044,0.295 -0.096,0.171 -1.271,-0.458 -1.466,-0.247 -0.191,0.217 -0.185,0.333 -0.089,0.261 -0.096,0.146 -0.226,0.094 -0.335,0.029 -0.403,-0.063 -0.241,-0.175 -0.18,0.197 -0.085,0.446 -0.25,0.231 -0.343,-0.179 -0.228,-0.344 -0.205,0.028 -0.124,0.316 0.091,0.431 0.05,0.516 -0.145,0.385 0.149,0.171 0.188,0.276 0.051,0.158 -0.064,0.093 -0.188,0.079 -0.043,0.085 -0.083,0.143 -0.22,0.026 -0.113,0.106 -0.135,0.465 -0.258,0.768 -0.381,0.582 -0.305,0.318 -0.136,0.244 -0.085,0.292 -0.02,0.293 0.292,1.6 -0.003,0.288 -0.069,0.295 -0.05,0.299 0.041,0.259 0.193,0.442 0.205,0.658 0.083,0.419 0.136,0.153 0.131,0.113 0.027,0.071 -0.004,0.073 -0.068,0.083 -0.591,0.219 -0.077,0.185 -0.064,0.207 -0.258,0.305 -0.079,0.284 -0.049,0.325 -0.006,0.116 0.331,0.021 0.116,0.083 0.078,0.408 0.376,0.321 0.348,0.266 0.089,0.123 0.027,0.236 -0.022,0.275 -0.044,0.143 -0.146,0.164 -0.127,0.415 -0.018,0.394 -0.201,0.679 0.045,0.013 0.422,-0.123 0.12,0.07 0.092,0.15 0.03,0.425 0.138,0.191 0.141,0.298 0.044,0.231 0.269,0.275 0.021,0.178 0.164,0.627 0.063,0.36 0.029,0.278 -0.081,0.353 -0.071,0.238 0.383,0.437 0.09,0.017 0.213,-0.172 0.042,-0.012 0.44,-0.015 0.204,0.152 0.151,0.296 0.141,0.236 0.151,0.064 0.428,-0.298 0.237,-0.099 0.156,0.003 0.549,0.267 0.258,0.146 0.059,0.132 0.005,0.156 -0.07,0.231 -0.055,0.251 0.167,0.296 0.194,0.2 0.415,-0.331 0.153,-0.092 0.167,-0.003 0.224,-0.123 0.162,-0.186 0.155,-0.064 0.296,0.044 0.536,-0.044 0.625,0.292 0.054,0.089 0.312,0.341 0.109,0.169 0.103,0.054 0.167,0.166 0.222,0.104 0.155,-0.032 0.074,0.055 0.069,0.13 0.005,0.222 -0.022,0.632 -0.109,0.182 -0.115,0.148 -0.029,0.115 0.011,0.139 0.177,0.271 0.228,0.421 0.053,0.244 0,0.183 -0.311,0.536 -0.104,0.125 -0.072,0.263 -0.038,0.267 0.022,0.11 0.52,0.424 0.385,0.229 0.086,0.112 0.008,0.069 -0.205,0.454 -0.02,0.122 0.309,0.188 0.17,0.295 0.15,0.48 0.293,0.459 0.631,0.405 0.459,0.264 0.095,0.12 0.033,0.143 -0.035,0.313 -0.118,0.381 -0.081,0.211 0.187,0.088 0.481,-0.023 0.584,0.074 0.701,0.418 0.002,0.187 -0.072,0.17 0.048,0.179 0.077,0.152 0.606,0.465 0.058,0.135 0.011,0.226 -0.017,0.165 -0.168,0.035 -0.187,0.077 -0.305,0.197 -0.121,0.279 -0.493,0.384 -0.305,0.173 -0.243,0.008 -0.577,-0.078 -0.203,-0.189 -0.084,-0.174 -0.222,-0.078 -0.295,-0.007 -0.407,0.03 -0.083,0.052 -0.067,0.214 -0.173,0.364 -0.124,0.206 0.103,0.125 0.162,0.262 0.252,0.333 0.259,0.295 0.083,0.18 -0.003,0.128 -0.124,0.151 0.019,0.304 0.252,0.399 -0.085,0.063 -0.025,0.489 0.002,0.521 0.068,0.126 0.136,0.104 0.114,0.19 0.191,0.433 0.013,0.113 0.054,0.008 0.262,0.13 0.275,0.11 0.19,0.007 0.226,-0.025 0.266,-0.147 0.185,-0.142 0.225,-0.722 0.08,-0.104 0.124,-0.057 0.203,-0.006 0.386,0.135 0.452,0.121 0.262,-0.017 0.698,-0.385 0.389,-0.06 0.462,0.09 0.454,0.005 0.342,-0.056 0.235,0.133 0.29,0.294 0.262,0.436 0.274,0.803 0.799,0.903 0.013,0.176 -0.065,0.113 -0.393,0.109 -0.332,0.059 -0.016,0.154 0.088,0.167 0.152,0.244 0.023,0.314 -0.008,0.288 0.065,0.254 0.127,0.104 0.016,0.127 -0.146,0.156 -0.041,0.096 0.057,0.052 0.721,0.03 0.353,0.151 0.268,0.138 0.135,0.013 0.304,-0.088 0.342,-0.056 0.207,-0.008 0.08,0.102 0.064,0.267 0.12,0.267 0.112,0.076 0.2,-0.013 0.12,0.013 0.064,0.101 -0.072,0.152 0.016,0.165 0.088,0.202 0.104,0.467 0.096,0.139 0.064,0.176 0,0.202 -0.08,0.176 -0.056,0.138 0.056,0.314 0.216,0.351 0.16,0.087 0.128,0.313 0.232,0.1 0.344,-0.263 0.264,-0.138 0.33,0.077 0.305,0.049 0.205,0.179 0.151,0.246 0.176,0.137 0.176,-0.072 0.367,0.072 0.168,0.199 0.168,0.112 0.216,-0.162 0.176,-0.2 0.644,-0.209 0.4,-0.052 0.112,-0.041 0.235,-0.15 0.248,-0.1 0.223,0.027 0.22,0.311 0.228,0.214 0.064,0.337 0.278,0.462 0.691,0.631 0.271,0.192 0.184,-0.034 0.096,-0.05 0.045,-0.066 0.042,-0.309 0.087,-0.114 0.14,-0.003 0.541,0.384 0.283,0.042 0.269,0.007 0.362,0.298 0.397,0.259 0.307,0.027 0.245,-0.102 0.168,-0.062 0.104,0.099 0.096,0.223 0.16,0.173 0.184,0.049 0.265,0.011 0.46,0.334 0.432,0.34 0.27,0.019 0.229,-0.1 0.202,-0.026 0.141,0.086 0.04,0.147 -0.104,0.197 0,0.282 0.192,0.27 0.006,0.265 -0.055,0.239 -0.109,0.22 -0.263,0.302 -0.243,0.281 -0.365,0.117 -0.205,0.123 0.054,0.206 0.134,0.192 0.31,0.155 0.352,0.113 0.041,0.125 -0.054,0.063 -0.226,0.058 -0.312,-0.059 -0.104,0.109 -0.144,0.181 -0.096,0.326 -0.072,0.302 0.339,0.082 0.197,0.123 0.062,0.247 0.07,0.275 0.021,0.247 -0.112,0.12 -0.007,0.123 0.053,0.061 0.146,0.027 0.111,0.055 0.009,0.13 -0.213,0.292 -0.199,0.558 -0.107,0.296 0.008,0.321 -0.12,0.178 -0.225,0.009 -0.75,0.031 -0.653,-0.016 -0.282,-0.046 -0.442,-0.028 -0.219,0.076 -0.29,0.512 -0.22,0.2 -0.363,0.181 -0.399,0.052 -0.229,0.21 -0.081,0.33 -0.006,0.292 -0.037,0.146 -0.086,0.128 -0.031,0.091 0.019,0.1 0.093,0.036 0.111,0.046 0,0.072 -0.043,0.091 -0.124,0.1 -0.056,0.154 0.013,0.164 0.024,0.181 0.759,-0.346 0.259,-0.262 0.519,-0.092 -0.073,0.106 -0.257,0.098 -0.258,0.254 0.325,0.026 0.73,-0.13 0.268,-0.398 0.482,0.014 0.137,0.286 0.137,0.386 -0.012,0.143 -0.052,0.11 -0.404,0.085 -0.914,0.481 -0.478,0.136 -0.539,0.245 0.139,0.33 0.036,0.28 -0.442,-0.06 -0.319,-0.093 -0.198,0.043 -0.538,0.296 -0.282,-0.064 -0.283,-0.009 0.121,0.423 0.293,0.51 0.179,0.096 0.281,-0.046 0.667,0.617 0.497,0.611 -0.258,0.042 -0.249,-0.062 -0.36,0.002 -0.143,0.371 -0.149,0.274 -0.027,-0.141 0.011,-0.19 -0.167,-0.123 -0.228,0.186 -0.259,0.813 -0.481,0.583 -0.16,0.357 -0.007,0.26 0.069,0.053 0.105,-0.008 0.003,0.234 -0.072,0.209 -1.075,0.264 -0.142,0.154 -0.309,-0.122 -0.353,-0.321 -0.314,-0.173 -0.202,0.069 -0.206,0.151 0.116,0.094 0.139,0.033 0.365,0.2 -0.191,0.151 -0.712,0.263 0.024,0.136 0.065,0.099 0.824,0.225 0.73,0.386 0.223,0.265 0.191,0.46 0.166,0.209 0.235,0.158 0.217,0.096 0.372,0.038 0.411,-0.147 0.926,1.096 0.366,0.177 0.909,0.22 0.229,0.117 1.718,1.522 0.525,0.656 1.002,0.985 0.294,0.204 0.127,-0.25 0.17,-0.263 0.184,-0.064 0.539,0.104 0.496,0.119 0.362,-0.084 0.431,0.208 0.394,0.238 0.396,0.168 0.772,0.158 0.288,0.219 0.336,0.219 1.317,0.111 0.106,-0.034 0.097,-0.032 0.442,-0.08 0.391,0.015 0.413,0.265 0.264,-0.015 0.282,-0.04 0.363,0.142 0.285,0.158 0.024,0.16 0.25,0.232 0.726,0.353 0.589,0.199 0.184,0.14 0.447,0.231 0.045,0.073 -0.009,0.094 -0.127,0.173 -0.033,0.154 0.06,0.088 0.186,0.084 0.369,0.019 0.133,-0.11 0.275,-0.079 0.272,-0.142 0.364,-0.189 0.495,-0.172 0.198,0 0.19,0.052 0.133,0.096 0.223,0.353 0.223,-0.495 0.058,-0.037 0.203,0.1 0.36,0.138 0.249,0.073 0.134,0.102 0.38,0.45 0.615,-0.023 0.26,0.069 0.14,0.074 0.063,0.087 -0.11,0.446 -0.152,0.463 0.012,0.112 0.247,0.174 0.335,0.185 0.181,0.148 0.123,0.133 0.265,0.101 0.313,0.063 0.148,0.008 0.155,0.111 0.403,0.209 0.051,0.052 0.302,0.077 0.041,0.218 0.054,0.046 0.125,-0.026 0.208,-0.091 0.166,0.07 0.214,0.259 0.295,0.273 0.16,0.184 0.063,0.126 0.151,0.123 0.221,0.144 0.176,0.226 0.157,0.524 0.159,0.121 0.569,0.199 0.2,0.041 0.559,0.07 0.197,-0.05 0.288,-0.451 0.259,-0.465 0.242,-0.097 0.437,-0.225 0.262,-0.213 0.11,-0.23 0.247,-0.434 0.152,-0.245 -0.27,-0.228 -0.142,-0.071 -0.12,-0.111 -0.227,-0.477 -0.208,-0.38 -0.417,-0.653 -0.724,-0.985 -0.147,-0.119 -0.118,-0.137 -0.053,-0.496 -0.208,-0.353 -0.297,-0.243 -0.112,-0.125 -0.072,-0.135 0.14,-0.704 -0.003,-0.199 -0.062,-0.427 0.054,-0.493 0.166,-0.677 0.168,-0.468 0.053,-0.305 -0.235,0.194 -0.28,1.082 -0.094,-0.869 -0.19,-0.828 -0.153,-0.428 -0.216,-0.348 -0.301,-0.271 -0.278,-0.319 -0.303,-0.171 -0.457,-0.131 -0.09,-0.122 -0.039,-0.202 0.025,-0.225 0.11,-0.376 0.241,-0.243 0.327,-0.253 0.073,-0.169 0.054,-0.199 0.102,0.151 0.125,0.082 0.087,-0.351 0.131,-0.251 0.168,-0.216 0.209,-0.496 0.155,-0.271 0.112,-0.306 0.062,-0.502 0.116,-0.048 0.096,-0.088 0.072,-0.143 0.042,-0.157 -0.015,-0.286 -0.171,-0.312 0.045,-0.032 0.082,0.054 0.185,0.16 0.166,0.201 0.046,-0.291 0.144,-0.118 0.176,0.081 0.186,0.012 0.625,-0.232 0.298,-0.064 0.276,-0.164 0.644,-0.631 0.141,-0.029 0.146,0.029 0.135,0.117 0.147,0.068 0.112,-0.032 0.056,-0.096 -0.129,-0.224 -0.045,-0.212 -0.01,-0.231 0.166,-0.059 0.189,0.001 0.756,-0.358 0.088,-0.158 0.041,-0.216 0.338,-0.04 -0.038,-0.185 -0.135,-0.047 -0.632,-0.378 -0.519,-0.268 -0.461,-0.238 -0.067,-0.043 -0.126,-0.116 -0.09,-0.181 -0.019,-0.198 0.045,-0.146 0.112,-0.093 0.132,-0.036 0.117,0.03 0.13,0.089 0.232,0.108 0.301,0.02 0.188,-0.083 0.025,-0.199 -0.358,-0.738 -0.33,-0.597 -0.319,-0.666 -0.135,-0.242 -0.391,-0.56 -0.386,-0.553 -0.305,-0.494 -0.16,-0.152 -0.492,-0.063 -0.938,-0.122 -0.332,-0.058 -0.266,0.147 -0.267,0.115 -0.253,-0.214 -0.2,-0.352 -0.105,-0.296 0.051,-0.303 0.021,-0.448 -0.153,-0.442 -0.169,-0.219 -0.424,-0.165 -0.54,-0.373 -0.145,-0.683 0.262,-0.982 0.422,-0.698 0.307,-0.293 0.146,-0.256 0.048,-0.222 -0.037,-0.212 -0.182,-0.226 -0.282,-0.22 -0.143,-0.271 0.059,-0.582 0.187,-0.841 0.288,-0.675 0.386,-0.375 0.333,-0.269 0.131,-0.251 0.007,-0.357 -0.008,-0.337 0.089,-0.245 0.14,-0.195 0.148,-0.175 0.208,-0.196 0.27,-0.048 0.297,0.156 0.404,0.419 0.592,0.825 0.338,0.539 0.122,0.166 0.309,0.32 0.279,0.129 0.465,-0.2 0.446,-0.233 0.144,-0.148 0.092,-0.221 -0.071,-0.378 -0.093,-0.247 -0.099,-0.315 -0.137,-0.549 -0.097,-0.864 -0.115,-0.275 0.084,-0.032 0.224,0.057 0.207,0.025 0.296,-0.191 0.406,-0.36 0.743,-0.557 0.157,-0.368 0.127,-0.41 0.206,-0.252 0.473,-0.083 0.438,-0.132 0.309,-0.292 0.484,-0.257 0.398,-0.156 0.175,-0.144 0.125,-0.216 0.456,-0.61 0.358,-0.376 0.315,-0.388 0.105,-0.244 0.249,0.045 0.38,0.169 0.408,0.154 0.299,0.239 0.059,0.244 0.029,0.192 0.121,0.099 0.145,0.019 0.218,-0.048 0.381,-0.009 0.467,-0.316 0.65,-0.534 0.595,-0.166 0.313,0.127 0.259,0.393 0.205,0.369 0.211,0.137 0.131,0.004 0.048,0.006 0.262,-0.084 0.02,0.001 0.239,0.015 0.23,0.125 0.381,0.014 0.531,-0.095 0.056,-0.039 0.255,0.051 0.31,0.17 0.241,0.202 0.432,0.662 0.248,0.17 0.506,0.235 0.237,0.205 0.276,0.332 0.144,0.201 0.3,0.363 0.347,0.593 0.062,0.471 0.079,0.397 0.129,0.188 0.106,0.023 0.114,-0.065 0.112,-0.181 0.039,-0.302 -0.034,-0.535 -0.089,-0.438 -0.114,-0.139 -0.055,-0.154 0.075,-0.196 0.193,-0.095 0.24,0.06 0.395,0.252 0.412,0.317 0.507,0.554 0.465,0.351 0.509,0.28 0.404,0.083 0.313,-0.084 0.369,-0.228 0.338,-0.264 0.154,-0.277 0.11,-0.303 0.51,-0.405 0.466,-0.371 0.212,0.067 0.149,0.105 0.478,-0.226 0.166,-0.062 0.455,-0.088 0.47,0.13 0.375,0.398 0.363,0.256 0.325,-0.03 0.269,-0.131 0.178,-0.248 0.135,-0.293 0.18,-0.188 0.027,-0.012 0.579,0.102 0.363,-0.015 0.039,-0.042 0.479,0.08 0.529,0.413 0.328,0.457 0.42,0.581 0.195,0.189 0.284,0.081 0.223,0.035 0.299,0.09 0.79,0.121 0.12,0.071 0.081,0.095 -0.073,0.316 0.07,0.08 0.641,-0.225 0.172,-0.168 0.211,-0.478 0.189,-0.482 0.141,-0.179 0.149,-0.047 0.15,0.072 0.21,0.285 0.284,0.29 0.384,0.11 0.234,0.044 0.363,0.024 0.854,-0.141 0.799,-0.351 0.456,-0.382 0.212,-0.574 0.133,-0.654 0.204,-0.414 -0.085,-0.424 -0.402,-0.404 -0.136,-0.122 -0.978,-0.227 -0.06,-0.164 -0.056,-0.038 -0.964,-0.36 -0.464,-0.154 -0.131,-0.238 -0.086,-0.312 -0.301,-0.279 -0.598,-0.254 -0.104,-0.194 0.099,-0.196 0.318,-0.147 0.153,-0.071 0.539,-0.46 0.207,-0.095 0.479,-0.021 0.444,-0.377 0.306,-0.216 0.16,-0.257 -0.042,-0.266 -0.444,-0.805 -0.132,-0.489 0.079,-0.319 0.255,-0.345 0.145,-0.189 0.174,-0.34 0.114,-0.182 0.448,-0.077 0.543,-0.032 0.373,0.081 0.521,0.042 0.475,0.063 0.24,0.056 0.177,-0.104 0.128,-0.183 -0.004,-0.242 -0.187,-0.235 -0.697,-0.309 -0.299,-0.255 -0.234,0.028 -0.392,-0.08 -0.354,-0.167 -0.313,-0.056 -0.102,-0.232 0.064,-0.326 0.121,-0.187 0.231,-0.093 0.251,0.047 0.273,-0.136 0.079,-0.08 0.023,-0.103 -0.044,-0.147 -0.127,-0.121 -0.18,-0.032 -0.207,0.103 -0.248,0.067 -0.419,-0.151 -0.334,-0.182 0.017,-0.168 0.247,-0.251 0.111,-0.204 0,-0.282 0,-0.33 0.086,-0.387 0.245,-0.265 0.288,-0.142 0.742,0.259 0.928,0.231 0.159,-0.038 0.047,-0.122 0.106,-0.108 1.288,-0.05 0.25,-0.149 0.125,-0.119 1.238,-0.171 0.147,-0.163 0.182,-0.152 0.285,0.003 0.339,-0.061 0.473,-0.186 0.335,-0.102 0.056,-0.008 0.354,0.041 0.439,-0.147 0.095,-0.061 0.071,-0.111 0.383,-0.214 0.735,-0.176 0.179,0.105 0.351,0.048 0.447,-0.079 0.33,-0.135 0.192,0.134 0.261,0.138 0.195,-0.117 0.097,-0.369 0.126,-0.361 0.221,-0.171 0.175,-0.063 0.158,-0.139 0.119,-0.145 0.647,0.022 0.579,-0.361 0.114,0.164 0.752,-0.038 0.934,-0.233 0.559,-0.109 0.965,-0.244 0.446,-0.198 0.639,-0.125 0.586,-0.087 0.383,-0.347 0.309,-0.049 0.376,-0.029 0.23,-0.083 0.15,-0.128 0.097,-0.241 -0.053,-0.308 -0.054,-0.224 0.269,-0.125 0.384,-0.039 0.242,-0.051 0.528,-0.51 0.364,-0.245 0.377,-0.154 0.757,0.084 0.691,0.077 0.693,0.244 0.364,0.304 0.313,0.229 0.296,0.109 0.268,0.07 0.311,-0.104 0.22,-0.14 0.128,-0.201 0.194,-0.144 0.707,-0.112 0.146,0.217 0.336,0.653 0.229,0.867 0.377,1.145 0.166,0.561 -0.073,0.293 10e-4,0.401 -0.021,0.44 -0.278,0.497 0.113,0.231 0.683,0.257 0.956,-0.094 0.59,-0.208 0.329,0.076 0.172,-0.125 0.111,-0.368 0.227,-0.083 0.233,0.257 0.169,0.434 0.162,0.279 -0.012,0.332 0.06,0.425 0.119,0.107 0.234,-0.161 0.156,-0.096 0.037,-0.129 -0.066,-0.159 -0.031,-0.162 0.052,-0.149 0.111,-0.061 0.333,0.047 0.485,0.082 0.576,0.604 0.311,0.109 0.131,0.011 0.292,-0.035 0.351,-0.173 0.236,-0.218 0.079,-0.107 0.136,0.019 0.129,0.101 0.009,0.22 -0.103,0.318 -0.35,0.291 -0.435,0.27 -0.264,0.494 -0.056,0.514 0.115,0.261 0.099,0.174 0.028,0.244 0.098,0.032 0.178,-0.1 0.485,-0.506 0.247,-0.125 0.358,-0.08 0.589,0.04 0.396,0.165 0.189,0.229 0.208,0.189 0.144,-0.079 0.074,-0.218 0.004,-0.25 0.061,-0.206 0.644,-0.507 0.429,-0.338 0.147,-0.04 0.287,0.07 0.178,-0.036 0.471,-0.318 0.44,-0.363 0.043,-0.246 0.017,-0.223 0.109,-0.101 0.616,-0.078 0.102,-0.042 0.526,-0.254 0.729,-0.434 0.354,-0.256 0.645,-0.114 0.12,-0.074 0.214,-0.173 0.404,-0.24 0.219,-0.026 -0.136,0.58 -0.241,0.668 -0.136,0.178 -0.654,-0.03 10e-4,0.182 0.103,0.278 0.074,0.156 0.079,0.14 0.176,0.242 0.688,0.569 0.875,0.722 0.945,0.808 0.66,0.562 0.267,0.29 0.17,0.226 0.486,0.814 0.462,0.769 0.779,1.348 0.689,1.294 0.76,1.415 0.439,0.814 0.898,1.693 0.24,0.517 0.455,0.976 0.401,0.911 0.355,0.802 0.224,0.072 0.018,-0.217 0.04,-0.145 0.114,-0.082 0.262,-0.237 0.141,-0.057 0.21,0.024 0.22,-0.121 0.081,-0.228 -0.053,-0.423 -0.034,-0.195 0.075,-0.21 0.12,-0.082 0.167,-0.066 0.154,-0.034 0.126,-0.237 0.238,-0.072 0.219,0.044 0.18,0.009 0.159,0.173 0.089,0.237 0.172,0.019 0.281,-0.024 0.039,0.198 -0.08,0.331 -0.099,0.256 -0.017,0.205 0.149,0.1 0.546,-0.089 0.193,0.044 0.062,0.208 0.078,0.172 0.038,0.21 -0.057,0.232 0.098,0.139 0.471,0.003 0.332,-0.112 0.51,-0.009 0.461,0.246 0.319,-0.038 0.321,-0.1 0.471,0.063 0.331,-0.194 0.228,-0.243 0.071,-0.191 0.119,-0.106 0.444,10e-4 0.28,-0.019 0.207,-0.281 0.189,-0.127 0.318,-0.024 0.234,0 0.629,0.261 0.383,0.216 0.398,0.307 0.239,0.192 0.161,0.433 0.271,0.318 0.216,0.371 0.052,0.365 0.178,0.655 0.184,0.215 0.218,0 0.275,0.089 0.304,0.071 0.65,0.485 0.239,0.014 0.184,0.116 0.028,0.223 -0.068,0.258 0.071,0.247 0.213,0.315 0.168,0.307 0.207,0.372 0.063,0.212 0.166,0.07 0.224,-0.105 0.356,0.08 1.071,0.211 0.149,0.026 0.114,0.22 0.155,-0.018 0.178,-0.009 0.247,0.026 0.172,-0.203 0.141,-0.178 0.353,-0.22 0.293,-0.299 0.246,-0.266 0.184,-0.035 0.149,0.124 0.006,0.23 -0.184,0.168 -0.144,0.203 0.034,0.203 0.247,0.018 0.274,0.305 0.396,0.713 0.134,0.149 0.196,0.14 0.217,0.063 0.24,0.102 0.178,0.293 0.072,0.264 0.264,0.04 0.167,-0.063 0.111,-0.133 0.171,-0.042 0.257,-0.064 0.265,-0.08 0.146,0.015 0.011,10e-4 0.327,-0.011 0.149,-0.096 0.113,-0.141 0.245,-0.157 0.052,-0.181 0.004,-0.356 0.16,-0.302 0.407,-0.09 0.156,-0.044 0.166,0.044 0.258,-0.042 0.249,-0.016 0.139,0.093 0.184,0.079 0.235,-0.009 0.08,-0.143 0.01,-0.199 0.102,-0.052 0.127,0.138 0.071,0.103 0.105,0.047 0.284,-0.123 0.198,-0.133 0.064,-0.273 0.115,-0.136 0.154,0.069 0.271,-0.001 0.223,-0.212 0.293,-0.169 0.21,-0.077 0.043,-0.143 -0.099,-0.316 0.027,-0.346 0.281,-0.196 0.376,-0.023 0.278,-0.134 0.077,-0.37 0.138,-0.106 0.14,-0.042 0.339,-0.059 0.244,-0.15 0.15,-0.069 0.427,-0.203 0.388,-0.04 0.166,-0.162 0.13,-0.204 0.218,-0.078 0.222,-0.177 0.293,-0.225 0.115,-0.032 0.48,-0.131 0.188,-0.048 0.113,-0.029 0.208,0.009 0.088,-0.238 0.211,-0.176 0.212,-0.059 0.104,-0.175 0.203,-0.223 0.274,-0.124 0.428,-0.018 0.414,0.025 0.248,-0.038 0.204,-0.33 0.039,-0.164 0.047,-0.167 0.166,-0.064 0.2,0.271 0.169,0.168 0.26,0.175 0.134,0.164 0.153,0.023 0.161,-0.123 0.114,-0.299 0.216,-0.046 0.238,0.048 0.063,0.147 0.021,0.143 0.109,0.256 0.262,0.223 0.335,-0.011 0.135,-0.04 0.326,0.031 0.321,0.048 0.35,0.053 0.102,0.008 0.375,0.027 0.546,0.039 0.24,-0.018 0.492,0.072 0.101,0.198 0.091,0.468 0.077,0.445 0.022,0.357 0.128,0.185 0.163,0.061 0.108,0.144 0.189,0.196 0.141,0.28 0.171,-0.019 0.119,-0.066 0.262,-0.021 0.334,0.019 0.232,0.155 0.088,0.203 0.188,0.114 0.153,-0.037 0.458,-10e-4 0.158,0.013 0.157,0.111 0.228,0.019 0.125,-0.142 0.395,-0.096 0.229,-0.203 0.176,-0.002 0.133,0.098 0.103,0.133 0.15,-0.059 0.082,-0.109 0.132,0 0.129,0.071 0.331,0.124 0.24,0.23 0.186,0.022 0.239,-0.067 0.11,-0.031 0.105,0.114 0.154,0.062 0.117,-0.084 0.201,-0.06 0.769,0.125 0.178,0.229 0.137,0.108 0.11,0.188 0.2,0.134 0.425,-0.046 0.164,-0.137 0.344,-0.304 0.137,-0.297 0.173,-0.096 0.195,-0.048 0.183,0 0.191,-0.01 0.232,-0.218 0.188,-0.076 0.279,-0.277 0.052,-0.125 0.136,-0.323 0.084,-0.206 0.141,-0.328 0.076,-0.529 0.043,-0.281 -0.037,-0.204 -0.165,-0.105 -0.212,-0.05 -0.186,-0.156 -0.138,-0.18 -0.081,-0.253 -0.109,-0.297 0.006,-0.215 -0.031,-0.166 -0.093,-0.142 -0.179,-0.25 -0.087,-0.186 0.029,-0.295 0.211,-0.506 0.02,-0.235 0.026,-0.146 -0.012,-0.133 0.066,-0.304 0.119,-0.128 0.136,-0.327 0.184,-0.151 0.229,-0.01 0.099,-0.089 0.049,-0.328 0.11,-0.253 0.074,-0.18 0.14,-0.195 0.808,-0.378 0.335,-0.471 0.119,-0.238 0.13,-0.512 0.125,-0.215 0.182,0.071 0.214,0.302 0.16,0.003 0.238,0.164 0.648,0.342 0.352,0.107 0.226,0.033 0.299,0.095 0.192,0.2 0.375,0.326 0.317,0.083 0.55,0.033 0.669,0.017 0.189,0.057 0.489,0.234 0.542,0.258 0.51,0.231 0.387,0.179 0.229,0.173 0.215,0.099 0.233,-0.084 0.299,0.019 0.702,0.208 0.444,0.174 0.371,0.129 0.124,0.178 0.012,0.237 -0.05,0.2 0.027,0.484 0.119,0.253 0.044,0.34 0.045,0.323 -0.031,0.319 0.057,0.169 0.116,0.1 0.112,0.222 -0.037,0.234 -0.05,0.136 0.008,0.219 0.135,0.18 0.198,0.035 0.175,0.046 0.216,0.283 0.385,0.326 0.23,0.091 0.265,0.146 0.505,0.143 0.343,0.043 0.202,0.116 0.198,0.28 0.328,0.058 0.21,0.097 0.384,0.115 0.254,-0.066 0.223,-0.097 0.149,0.019 0.288,0.063 0.337,0.013 0.283,-0.066 0.226,-0.197 0.264,-0.266 0.315,-0.135 0.365,-0.048 0.25,-0.108 0.818,-0.18 0.33,-0.031 0.256,-0.174 0.227,-0.136 0.328,-0.059 0.443,0.143 0.424,0.119 0.513,0.039 0.341,0.164 0.241,0.155 0.38,0.123 0.422,-0.057 0.579,-0.049 0.383,0.071 0.4,0.282 0.246,0.226 0.277,0.481 0.289,0.233 0.253,0.19 0.319,0.012 0.797,0.015 0.438,0.101 0.364,0.053 0.087,0.101 -0.036,0.329 0.011,0.469 -0.005,0.215 0.08,0.162 0.124,0.029 0.067,0.229 0.181,0.135 0.323,0.163 0.544,0.553 0.324,0.236 0.256,0.08 0.335,-0.055 0.524,10e-4 0.889,0.002 0.609,0.166 0.211,0.113 0.622,0.131 0.685,0.144 0.577,0.151 0.341,-0.195 0.299,-0.018 0.285,0.141 0.285,0.212 0.221,-0.023 0.331,-0.099 1.057,-0.592 0.371,-0.222 0.26,0.057 0.232,-0.079 0.177,-0.067 0.451,-0.092 0.274,-0.025 0.283,-0.053 0.408,-0.036 0.829,-0.389 0.336,-0.076 0.568,0.108 0.306,-0.07 0.305,-0.197 0.395,-0.203 0.103,-0.33 0.202,-0.454 0.436,-0.334 0.354,-0.292 0.361,-0.285 0.443,-0.237 0.418,-0.173 0.532,-0.453 0.424,-0.229 0.211,-0.075 0.251,0.083 0.47,0.061 0.34,-0.019 0.191,0.053 0.383,0.221 0.348,0.194 0.266,0.346 0.495,0.481 0.254,0.161 0.181,0.066 0.445,0.045 0.364,0.023 0.218,-0.11 0.367,-0.201 0.585,-0.255 0.23,0.007 0.377,0.136 0.562,0.251 0.226,0.188 0.146,0.231 0.577,0.373 0.372,0.194 0.629,0.294 0.649,0.066 0.621,0.318 0.32,0.096 0.171,0 0.879,-0.774 0.743,-0.657 0.854,-0.514 0.628,-0.07 0.472,-0.15 0.314,-0.231 0.187,-0.386 0.057,-0.542 -0.126,-0.329 -0.308,-0.114 -0.079,-0.115 0.148,-0.117 0.11,-0.227 0.069,-0.338 0.178,-0.322 0.285,-0.304 0.158,-0.338 0.029,-0.372 0.172,-0.372 0.313,-0.371 0.172,-0.346 0.029,-0.32 0.159,-0.392 0.432,-0.695 0.28,-0.803 0.478,-0.552 0.768,-0.568 0.479,-0.565 0.191,-0.562 -0.015,-0.498 -0.222,-0.432 -0.043,-0.44 0.138,-0.449 -0.121,-0.336 -0.379,-0.223 -0.452,-0.055 -0.525,0.113 -0.295,-0.141 -0.065,-0.394 0.141,-0.319 0.347,-0.244 0.57,-0.595 0.794,-0.95 0.79,-0.527 1.178,-0.152 0.95,-0.313 0.968,-0.318 0.699,-0.158 0.119,0.106 0.381,0.026 0.643,-0.054 0.597,-0.137 0.552,-0.221 0.437,-0.052 0.321,0.117 0.184,0.006 0.127,0.014 0.07,-0.001 0.135,-0.094 0.373,0.167 0.713,0.496 0.447,0.22 0.185,-0.054 0.2,0.137 0.219,0.328 0.271,0.193 0.488,0.089 0.484,0.358 0.195,0.02 0.068,-0.201 0.181,-0.115 0.292,-0.03 0.423,0.177 0.553,0.383 0.347,0.168 0.141,-0.046 0.148,0.071 0.119,0.179 0.011,0.221 -0.041,0.118 0.133,0.186 0.153,0 0.25,0.089 0.196,0.328 0.176,0.152 0.123,0.131 0.022,0.109 0.011,0.11 -0.036,0.085 -0.067,0.141 -0.021,0.151 0.085,0.17 0.311,0.123 0.105,0.127 0.024,0.162 0.097,0.179 0.212,0.207 0.08,0.173 -0.049,0.139 0.063,0.116 0.104,0.091 0.022,0.329 0.009,0.189 0.171,0.212 0.035,0.434 0.119,0.479 0.401,0.655 0.133,0.354 -0.034,0.42 0.058,0.197 0.183,0.095 0.087,0.177 -0.01,0.259 0.071,0.161 0.058,0.171 -0.039,0.266 0.058,0.239 0.094,0.14 0.066,0.258 0.037,0.322 0.269,0.508 0.499,0.694 0.306,0.538 0.111,0.382 10e-4,0.314 -0.109,0.246 -0.006,0.179 0.098,0.112 0.029,0.151 -0.039,0.191 0.162,0.226 0.548,0.392 -0.219,0.6 -0.058,0.421 0.029,0.442 0.136,0.311 0.241,0.18 0.15,0.188 0.059,0.196 0.29,0.213 0.52,0.231 0.667,0.041 0.813,-0.151 0.497,-0.025 0.183,0.1 0.063,0.152 -0.059,0.203 0.138,0.133 0.334,0.064 0.229,0.127 0.126,0.192 0.154,0.054 0.183,-0.083 0.178,0.012 0.173,0.106 0.112,-0.037 0.098,-0.116 0.157,0 0.161,0.002 0.1,0.281 0.162,0.158 0.224,0.035 0.341,0.341 0.686,0.969 0.446,0.343 0.447,0.107 0.556,0.022 0.18,0.374 -0.146,0.395 -0.037,0.329 0.126,0.118 0.174,0.386 0.246,0.224 0.047,0.177 0.114,0.198 -0.048,0.365 -0.211,0.533 0.058,0.454 0.326,0.375 0.188,0.361 0.049,0.346 0.081,0.21 0.115,0.074 0.334,-0.026 0.555,-0.125 0.406,0.021 0.26,0.169 0.641,0.006 1.023,-0.156 0.646,-0.048 0.27,0.06 0.24,-0.223 0.211,-0.507 0.197,-0.238 0.185,0.03 0.292,-0.163 0.401,-0.357 0.348,-0.173 0.441,0.018 0.47,0.018 0.294,-0.15 0.276,-0.313 0.479,-0.277 1.021,-0.363 0.245,-0.057 0.117,0.02 0.34,0.057 0.302,0.142 0.285,0.285 0.044,0.183 -0.032,0.24 -0.063,0.139 -0.117,0.156 -0.11,0.253 0.071,0.197 0.165,0.421 0.136,0.304 0.15,0.358 -0.067,0.128 -0.091,0.248 -0.279,0.419 -0.152,0.16 -0.164,0.156 -0.283,0.038 -0.121,0.036 -0.137,0.066 -0.086,0.148 -0.098,0.104 -0.162,0.208 -0.013,0.179 0.073,0.266 0.036,0.272 -0.183,0.243 -0.142,0.373 -0.043,0.112 -0.07,0.282 -0.021,0.098 -0.045,0.592 -0.183,0.403 -0.255,0.468 0.057,0.279 0.045,0.258 -0.063,0.125 -0.016,0.109 -0.037,0.248 -0.08,0.095 -0.232,0.155 -0.139,0.187 0.029,0.283 -0.071,0.245 -0.106,0.216 -0.111,0.141 -0.16,0.09 -0.106,0.076 -0.08,0.274 -0.024,0.212 -0.075,0.211 0.046,0.215 -0.081,0.186 -0.228,0.13 -0.129,0.077 -0.119,0.031 -0.228,0.202 -0.204,0.691 -0.046,0.401 0.047,0.356 -0.286,0.223 -0.212,0.177 -0.133,-0.064 -0.141,-0.06 -0.324,-0.077 -0.162,-0.052 -0.326,-0.116 -0.522,-0.147 -0.51,-0.171 -0.32,-0.09 -0.252,-0.072 -0.191,-0.118 -0.161,-0.211 -0.16,0.085 -0.148,0.25 -0.247,0.148 -0.112,0.273 -0.099,0.209 -0.256,0.279 -0.114,0.115 -0.501,0.189 -0.113,0.063 -0.409,0.04 -0.139,0.083 -0.144,0.176 -0.039,0.175 0.102,0.184 0.159,0.368 0.074,0.251 0.108,0.497 0.363,1.553 -0.117,0.267 -0.109,1.157 0.026,0.208 -0.011,0.324 0.007,0.237 0.075,0.059 0.098,0.083 0.05,0.138 -0.013,0.212 -0.05,0.155 -0.077,0.307 -0.102,0.443 -0.113,0.17 -0.074,0.135 -0.063,0.093 -0.008,0.313 -0.042,0.206 -0.177,0.073 -0.176,0.12 -0.209,-0.044 -0.184,0.024 -0.227,0.08 -0.407,0.093 -0.236,0.124 -0.113,0.09 -0.078,0.108 -0.014,0.104 0.054,0.055 0.229,0.042 0.157,0.194 0.022,0.212 -0.162,0.121 0.076,0.23 0.18,0.224 0.094,0.163 0.019,0.169 0.082,0.095 0.12,-0.087 0.292,-0.747 -0.35,-0.507 0.131,-0.064 0.532,0.149 0.222,-0.042 0.375,0.073 0.244,-0.271 0.132,-0.284 0.283,-0.191 0.346,-0.665 0.577,-0.79 0.204,-0.202 0.404,-0.179 0.104,0.022 0.104,0.062 -0.322,0.42 -0.089,0.29 0.227,-0.001 0.229,-0.09 0.574,-0.483 0.214,-0.263 0.07,0.288 -0.086,1.36 0.498,-0.101 0.267,0.146 0.372,-0.016 0.434,0.313 0.17,-0.044 0.204,-0.011 0.176,0.325 0.282,0.099 0.476,-0.255 0.723,-0.245 0.344,-0.007 0.845,-0.448 0.41,-0.362 1.502,-0.952 0.632,-0.523 0.602,-0.382 0.362,-0.614 0.626,-0.583 0.016,-0.247 0.124,-0.282 0.959,-1.568 0.315,-0.26 0.436,-0.193 0.187,-0.286 0.119,-0.412 0.587,-0.612 0.403,-0.616 0.374,-0.403 0.186,-0.361 0.964,-0.884 0.781,-0.984 0.73,-0.715 0.234,-0.442 0.946,-1.3 0.292,-0.86 0.355,-0.327 0.154,-0.822 0.305,-0.592 0.082,-0.354 0.16,-0.333 1.163,-1.343 0.466,-1.042 0.577,-1.051 0.414,-0.367 0.438,-0.479 0.237,-0.38 0.667,-0.602 0.322,-0.417 0.161,-0.426 0.15,-1.055 0.433,-0.814 -0.126,-0.131 -0.069,-0.252 0.047,-0.282 0.064,-0.168 0.045,-0.264 0.097,-0.295 0.09,-0.179 0.242,-1.14 -0.017,-0.716 -0.132,-0.277 -0.005,-0.373 0.342,-0.53 0.081,-0.088 0.031,-0.125 -0.17,-0.106 -0.08,-0.105 -0.166,-1.821 0.125,-1.123 0.351,-0.828 0.07,-0.287 0.048,-0.807 0.423,-0.815 0.265,-0.925 0.552,-0.487 0.362,-0.602 0.305,-0.272 0.052,-0.621 0.28,-0.553 -0.214,-0.255 -0.223,-0.168 -0.449,-0.446 -0.104,-0.309 0.315,-0.526 0.059,-0.473 -0.028,-0.867 -0.474,-0.267 -0.596,-0.661 -0.098,-0.224 0.133,-0.017 0.825,0.355 0.412,-0.382 0.208,-0.405 -0.08,-0.509 -0.438,-0.196 -0.569,-0.562 -0.025,-0.19 -0.894,-0.479 -0.955,-1.022 -0.296,-0.896 -0.177,-0.241 -0.899,-0.735 -0.176,-0.245 -0.247,-0.1 -1.089,0.403 -0.603,-0.119 -1.148,-0.49 -0.108,0.104 0.165,0.363 -0.031,0.359 0.048,0.496 -0.063,0.828 -0.109,0.593 -0.42,0.825 -0.169,0.156 -0.366,0.066 -0.198,-0.005 0.119,-0.322 0.322,-0.386 0.455,-0.685 -0.002,-0.61 -0.113,-0.06 -0.097,10e-4 -0.321,0.239 -0.354,0.867 -0.85,0.581 -0.596,0.204 -1.15,0.101 -0.209,-0.034 -0.091,-0.156 0.259,-0.248 0.571,-0.356 0.358,-0.752 0.396,-0.178 0.137,-0.207 -0.596,-0.113 -0.41,-0.272 -0.385,-0.348 0.18,-0.11 0.135,-0.033 0.174,-0.124 0.429,-0.608 -0.396,-0.038 -0.414,0.042 -0.662,0.48 -0.128,0.256 0.214,0.342 0.24,0.151 -0.288,0.968 -0.383,-0.125 -0.372,0.042 -0.234,0.271 -0.235,-0.104 -0.101,-0.604 0.13,-0.616 0.115,-1.401 0.141,-0.477 0.009,-0.526 -0.074,-0.288 -0.231,-0.016 -0.377,0.052 -0.961,-0.002 -1.085,0.146 -1.161,-0.525 -0.315,-0.072 -0.189,-0.117 -0.13,-0.531 0.065,-0.304 0.077,-0.195 0.781,-0.833 0.59,-0.229 1.19,-0.941 0.494,-0.779 0.307,-0.33 0.936,-0.583 0.613,-0.503 0.498,-0.484 0.546,-0.412 0.529,-0.689 0.333,-0.137 1.073,-1.482 0.188,-0.333 0.11,-0.456 0.105,-0.206 1.248,-1.721 0.852,-0.631 0.605,-0.896 0.736,-0.354 0.177,-0.148 0.315,-0.507 0.517,-0.305 0.163,-0.183 0.396,-0.723 1.248,-0.663 0.135,-0.272 0.533,-1.834 0.295,-0.486 0.555,-0.605 1.009,-0.596 0.718,-0.65 0.426,-0.519 0.76,-1.379 0.855,-0.834 0.702,-0.479 1.717,-0.713 0.931,0.146 0.969,-0.373 0.714,0.017 1.011,0.176 3.006,-0.205 0.566,0.219 0.204,0.239 0.288,0.723 0.331,0.152 0.628,-0.278 0.479,-1.148 0.261,-0.146 0.748,0.463 0.663,0.04 1.332,0.534 0.486,-0.122 0.524,-0.535 1.074,-0.144 0.656,0.834 0.66,0.024 0.526,-0.136 0.142,-0.475 -0.21,-0.17 -0.408,0.146 -0.1,-0.413 0.248,-0.462 0.358,0.316 0.584,-0.03 0.202,-0.042 -0.083,-0.213 -0.134,-0.177 -0.176,-0.397 0.633,-0.543 0.376,-0.181 0.612,-0.052 1.571,0.662 0.345,0.069 0.37,0.267 0.59,0.19 -0.358,0.173 -0.158,0.169 0.37,-0.067 0.32,0.207 0.264,0.046 0.112,-0.081 0.137,-0.263 0.197,-0.267 0.144,-0.079 0.384,0.013 0.499,0.123 0.387,0.205 0.876,1.106 0.405,0.215 0.455,-0.036 0.183,0.069 0.255,0.298 -0.759,0.348 -0.72,0.073 -0.642,-0.095 -1.078,0.445 0.578,1.127 1.06,0.046 1.076,-0.238 0.217,-0.47 0.434,-0.184 0.228,0.024 0.491,0.393 0.68,0.151 0.181,-0.069 0.549,-0.777 0.332,-0.068 0.216,0.017 0.247,-0.674 0.938,-0.055 0.552,0.604 0.334,0.211 0.662,-0.18 0.362,-0.433 0.23,-0.157 0.689,0.412 0.338,-0.253 0.541,-0.044 0.403,0.03 -0.021,-0.438 0.038,-0.494 -0.549,-0.492 -1.091,-0.5 -0.631,0.324 -0.24,0.035 -0.166,-0.045 -0.177,-0.249 0.166,-0.397 0.168,-0.321 -0.007,-0.4 0.074,-0.573 0.272,-0.242 0.143,-0.039 0.386,-1.184 1.102,-1.589 1.283,-0.984 0.809,-0.757 0.385,-0.543 0.569,-1.258 0.809,-0.924 0.389,-0.296 0.413,-0.387 0.142,-1.218 0.31,-0.288 0.284,-0.209 0.54,-0.651 0.804,-0.422 0.277,-0.308 0.926,0.022 0.76,0.247 0.229,-0.067 0.512,-0.36 0.599,0.087 0.778,-0.233 0.708,-0.428 0.315,-0.042 0.297,0.091 0.359,0.63 0.206,0.158 0.157,0.367 0.477,-0.23 1.292,-0.857 0.155,-0.006 0.2,0.057 0.034,0.332 -0.012,0.268 -0.197,0.862 -0.236,0.648 -0.651,1.251 -0.134,0.188 0.087,0.334 0.099,0.615 -0.321,0.664 -0.124,0.331 0.26,0.076 0.34,-0.37 0.506,-0.232 0.272,0.017 0.273,0.111 -0.43,1.119 -0.069,0.585 -0.066,0.223 -0.011,0.299 0.319,-0.164 0.227,-0.238 0.319,-0.179 0.799,-0.077 0.417,-0.801 0.343,-0.405 3.23,-3.366 0.573,-0.715 0.319,-0.048 0.284,0.119 0.257,-0.015 0.053,-0.251 0.097,-0.095 0.291,0.037 0.185,0.634 0.202,0.315 0.149,-0.059 0.107,-0.097 0.15,-0.241 0.165,-0.197 0.169,-0.323 -0.141,-0.22 -0.557,-0.326 0.023,-0.591 0.317,-0.947 -0.035,-0.617 0.127,-0.641 0.14,-0.325 0.125,-0.142 0.124,-0.218 -0.162,-0.499 0.12,-0.34 0.125,-0.24 2.593,-0.888 0.457,-0.049 0.417,0.178 0.633,0.636 0.706,0.329 0.989,0.14 0.059,0.284 -0.385,-0.096 -0.187,0.09 0.033,0.257 -0.049,0.192 -0.236,-0.227 -0.663,-0.123 -0.609,-0.254 -0.203,0.02 -0.872,0.75 -0.226,0.328 -0.373,1.484 -0.018,1.02 -0.136,0.967 -0.384,0.417 -0.128,0.482 -0.093,0.569 0.473,0.243 0.055,0.185 0.037,0.26 -0.314,0.603 -0.769,0.751 -0.085,0.156 -0.1,0.34 0.438,0.628 -0.351,0.228 -0.333,0.158 -0.32,0.284 -1.063,0.101 -0.729,0.707 -1.255,0.701 -0.556,0.4 -0.182,0.262 -0.442,1.064 -0.26,0.451 -0.854,0.702 -0.646,1.017 -1.021,1.216 -0.403,0.14 -0.461,0.3 -0.553,0.846 -1.412,1.463 -0.718,1.758 -0.39,0.582 -0.404,0.46 -0.274,0.489 -0.487,0.511 -0.982,0.761 -0.667,0.631 -0.36,0.421 -0.129,0.394 -0.182,-0.086 -0.662,0.208 -0.864,-0.179 -0.606,1.163 -0.655,0.118 -0.648,-0.281 -0.319,0.14 -0.118,0.126 -0.107,0.166 0.304,0.373 0.136,0.32 0.043,0.286 0.037,0.494 -0.359,0.915 -0.338,0.714 -0.559,0.676 -1.296,1.229 -0.118,0.151 -0.12,0.29 -0.746,3.151 -0.206,1.394 -0.248,2.204 0.024,0.734 0.159,1.635 0.241,1.662 0.557,2.842 0.128,0.872 0.417,3.463 0.032,0.652 0.124,0.55 0.208,0.559 0.382,0.539 0.035,0.656 0.316,2.068 0.029,1.978 0.059,0.426 0.063,0.308 0.357,0.379 0.119,0.459 0.03,0.343 0.066,0.346 0.279,-0.166 0.996,-0.919 0.807,-0.878 0.116,-0.318 0.274,-0.246 0.546,-0.319 0.786,-0.922 0.641,-1.278 0.37,-0.978 0.083,-0.358 0.02,-0.354 -0.055,-0.766 0.148,-0.285 0.211,-0.857 -0.137,-0.226 -0.358,-0.164 0.111,-0.349 0.26,-0.082 0.211,0.164 0.123,0.369 0.174,0.123 0.58,-0.645 0.517,-0.324 1.262,-0.563 0.521,0.038 0.493,0.488 0.218,-0.021 -0.064,-0.679 -0.293,-0.496 0.004,-0.314 0.159,-0.492 -0.116,-0.324 -0.122,-0.245 -0.076,-0.525 0.219,-1.068 0.248,-0.584 0.181,-0.279 0.602,-0.475 0.641,-0.686 0.718,-0.533 0.457,-0.179 0.545,-0.096 0.461,0.375 0.929,0.021 0.282,-0.081 0.678,-0.753 0.389,-0.308 -0.07,-0.651 -0.236,-0.545 -0.482,-0.689 -0.11,-0.326 -0.156,-0.751 -0.016,-0.682 0.146,-0.786 0.416,-0.923 0.452,-1.248 0.172,-0.194 0.527,-0.299 0.356,-0.24 0.188,-0.127 -0.111,-0.7 0.282,-0.283 0.231,-0.178 0.578,0.069 0.187,-0.161 0.265,-0.07 -0.177,0.37 -0.23,0.251 -0.505,0.347 -0.239,0.497 0.596,0.838 0.368,0.16 0.213,-0.055 0.398,-0.463 0.202,-0.185 0.208,-0.296 -0.116,-1.087 -0.143,-0.593 0.037,-0.628 -0.256,-0.191 -0.334,-0.081 -0.349,0.095 -0.202,-0.175 -0.134,-0.279 -0.032,-0.327 0.067,-0.76 -0.02,-0.409 -0.13,-0.729 0.002,-0.208 0.048,-0.381 0.498,-0.624 0.426,-0.456 0.223,-0.379 0.072,-0.259 0.034,-0.543 -0.227,-0.247 -1.198,-0.573 -0.18,-0.012 -0.371,0.233 -0.154,0.726 -0.212,0.257 0.002,-0.146 0.054,-0.175 -0.601,-0.267 -0.279,-0.24 -0.163,-0.23 -0.106,-0.331 -0.117,-0.507 0.25,-1.041 0.26,-0.932 0.874,-1.403 0.534,-0.493 0.572,-0.755 0.245,-0.134 0.099,-0.123 0.097,-0.183 -0.181,-0.513 0.099,-0.125 0.099,-0.061 0.21,0.092 0.527,-0.937 -0.011,-1.197 0.146,-1.027 0.122,-0.423 0.127,-0.298 0.235,-0.29 0.226,-0.152 0.325,-0.36 0.15,-0.278 0.103,-0.073 0.372,0.022 0.294,0.11 0.33,0.185 -0.062,0.485 0.389,-0.426 0.352,-0.472 0.177,-0.083 0.239,0.064 0.405,0.358 0.309,0.689 0.21,0.186 0.278,-0.015 0.184,-0.096 0.153,-0.474 0.03,-0.858 0.304,-0.147 0.26,-0.057 0.367,-0.396 0.469,-0.177 1.008,-0.681 0.668,-0.701 0.482,-0.025 -0.123,0.401 -0.044,0.386 -0.176,0.948 -0.173,0.503 -0.091,0.614 0.036,0.321 0.105,0.405 0.243,-0.038 0.165,-0.09 0.339,-0.417 1.436,-2.025 0.737,-0.563 1.12,-0.356 0.337,-0.229 1.099,-0.368 0.913,-0.104 0.582,0.167 0.331,-0.005 1.23,-0.183 0.138,0.224 0.962,0.675 0.551,0.978 0.111,0.085 0.092,0.182 0.029,0.395 0.083,0.245 0.156,0.209 0.48,0.454 0.553,0.115 0.128,-0.248 0.075,-0.213 0.25,-1.192 0.214,-0.471 0.003,-0.288 0.053,-0.234 0.536,-0.35 0.421,-0.15 1.517,-1.159 0.673,-0.673 0.283,0.033 0.245,-0.154 0.225,-0.21 0.195,-0.086 0.409,-0.475 0.504,-0.37 -0.085,-0.318 0.095,-0.295 0.283,-0.107 0.246,-0.026 0.314,-0.343 -0.02,-0.267 0.114,-0.112 0.164,0.021 0.221,0.103 0.113,-0.108 -0.197,-0.374 -0.087,-0.355 0.14,-0.193 0.556,0.369 0.217,-0.003 0.727,-0.881 0.653,-0.94 0.559,0.217 0.888,-0.685 0.41,-0.133 0.644,-0.036 0.271,-0.262 0.293,-0.478 0.231,0.054 1.108,-0.57 0.212,-0.407 0.274,-0.114 0.214,-0.04 0.482,-0.338 2.005,-0.974 0.304,-0.392 0.747,-0.575 0.575,-0.184 0.707,-0.152 0.085,-0.186 -0.51,-0.213 -0.122,-0.196 -0.003,-0.211 0.074,-0.177 0.094,-0.337 0.19,-0.075 0.229,0.24 0.241,-0.001 0.111,-0.207 0.114,0.018 0.058,0.271 -0.123,0.316 -0.056,0.249 -0.01,0.277 0.165,0.071 0.875,0.028 1,0.218 2.65,1.162 0.227,0.19 0.214,0.02 0.037,-0.459 0.121,-0.44 0.313,-0.25 0.529,-0.625 0.262,-0.454 0,-0.526 -0.167,-0.548 -0.365,-0.128 -0.221,-0.346 -0.12,-0.422 0.195,-0.307 0.213,-0.123 -0.046,-0.43 -0.158,-0.267 -0.854,-0.574 -0.299,-0.391 -0.009,-0.345 -0.353,-0.879 -0.049,0.189 0.031,0.425 -0.119,0.298 -0.184,-0.047 -0.028,-0.236 0.106,-0.512 -0.148,-0.221 -0.526,-0.11 -0.072,-0.199 0.521,-0.285 0.154,0 0.141,-0.103 -0.109,-1.111 -0.118,-0.783 -0.32,-0.066 -0.237,-0.229 0.065,-0.498 0.007,-0.249 -0.269,-0.856 -0.192,-0.346 -0.234,-0.323 -0.184,0.358 -0.094,0.477 -0.241,0.101 -0.257,-0.017 -0.746,-0.533 -0.714,-0.906 -0.065,-0.835 0.161,-1.074 -0.111,-0.174 -0.112,-0.07 -0.947,0.36 -0.581,0.56 -0.314,0.059 -0.626,-0.377 -1.029,0.631 0.22,-0.367 0.18,-0.143 0.19,-0.271 -0.142,-0.517 -0.151,-0.39 -0.218,-0.275 -0.316,-0.132 -0.311,0.261 -0.245,0.263 -0.507,0.282 -0.975,0.235 -0.655,0 -1.118,0.428 -0.421,-0.017 1.541,-0.61 0.838,-0.045 1.08,-0.397 0.785,-0.772 1.034,0.699 0.356,0.1 0.771,-0.061 0.667,0.412 0.223,-0.119 0.21,-0.375 -0.279,-0.564 -0.241,-0.349 -0.273,-0.109 -0.826,0.059 -0.543,-0.12 -0.312,-0.146 0.202,-0.159 0.594,0.224 0.719,-0.294 0.838,0.45 0.203,0.401 0.239,0.147 0.687,1.012 0.469,0.4 1.506,0.293 0.658,0.453 0.502,-0.184 1.267,-0.987 0.837,-0.266 0.57,-0.653 0.494,-0.75 0.484,-0.22 0.829,-0.799 0.195,-0.381 0.324,-0.954 0.19,-0.397 0.279,-0.482 0.021,-0.396 -0.061,-0.43 -0.233,-0.335 -0.537,-0.476 -0.246,-0.316 -0.173,-0.666 0.018,-0.806 0.12,-0.606 0.161,-0.543 0.188,0.39 0.543,-0.091 0.269,-0.149 0.03,-0.397 -0.067,-0.471 0.132,-0.123 0.282,-0.052 0.04,-0.285 0.099,-0.152 0.103,0.203 0.005,0.795 0.222,0.198 0.311,0.164 0.133,-0.049 0.133,-0.108 0.19,-0.241 0.385,-0.822 0.25,-0.325 -0.021,0.595 -0.147,0.822 -0.083,0.225 -0.218,0.29 -0.104,0.602 -0.045,0.163 -0.313,-0.165 -0.227,0.033 0.168,0.663 0.247,0.493 0.314,0.475 0.339,0.283 0.09,-0.008 0.067,0.101 0.009,0.298 -0.075,0.705 0.06,0.378 0.259,0.282 0.287,0.072 1.717,-0.033 0.589,-0.095 0.88,-0.664 0.334,-0.081 0.376,0.083 1.052,0.365 1.274,0.518 0.479,0.799 0.188,0.803 0.072,0.85 -0.082,0.341 0.016,0.288 0.388,0.43 0.548,0.522 0.105,0.122 0.115,0.21 0.132,0.094 0.391,0.056 0.309,-0.101 0.309,-0.029 0.576,0.248 0.729,0.383 0.709,0.525 0.317,0.391 0.571,0.839 0.291,0.255 0.472,0.293 0.179,0.046 0.175,-0.053 0.361,-0.409 0.223,-0.328 0.191,-0.395 0.051,0.34 0,0.291 -0.186,0.21 -10e-4,0.36 0.281,0.422 0.332,0.064 0.416,-0.114 0.138,-0.196 0.124,-0.27 -0.093,-0.896 0.128,-0.122 0.31295,0.177 0.1,0.253 0.048,0.31 0.124,0.034 0.823,-0.044 0.063,-0.114 -0.042,-0.28 -0.12,-0.265 -0.143,-0.188 -0.361,-0.22 -0.367,-0.166 -0.301,-0.043 -0.13095,-0.124 0.033,-0.23 -0.0987,-0.269 0.061,-0.159 0.25495,-0.21 0.03,-0.193 -0.26995,-0.234 -0.283,-0.073 -0.247,0.13 0.056,-0.197 0.188,-0.194 0.285,-0.083 0.29395,0.042 0.561,-0.166 0.545,-0.376 0.265,-0.248 0.256,-0.305 -0.029,-0.536 -0.175,-0.515 -0.261,-0.14 -0.29,0.032 -0.255,-0.042 -0.249,-0.136 0.989,-0.182 0.11,-0.182 0.164,-0.823 -0.06,-0.206 -0.205,0.054 -0.314,-0.012 0.072,-0.168 0.107,-0.145 -0.569,-0.786 -0.636,-0.469 0.18,-0.078 0.313,0.017 0.483,0.139 0.318,0.354 0.112,0.239 0.136,0.081 0.287,0.024 0.489,0.168 0.028,0.231 0.112,0.081 0.327,-0.099 0.91,-0.153 0.287,0.04 0.415,0.166 0.129,0.004 0.18,-0.06 0.146,-0.264 -0.226,-0.53 -0.474,-0.479 -0.276,-0.363 -0.139,-0.29 0.083,-0.11 0.126,0.044 0.406,0.458 0.317,0.286 0.329,0.205 0.294,0.152 0.647,0.143 0.295,-0.236 0.056,-0.368 -0.062,-0.774 0.063,-0.287 0.392,-0.433 0.678,-0.548 0.438,-0.175 0.152,0.017 0.162,0.172 0.168,0.049 0.288,-0.408 -0.126,-0.588 z m -219.29195,-71.166 -0.216,0.234 -0.052,0.321 -0.018,0.418 -0.095,0.705 -0.195,0.26 -0.68,-0.109 -0.189,0.063 -0.187,0.159 0.392,0.831 0.755,0.555 0.542,0.577 0.254,0.174 1.646,0.525 0.081,-0.081 0.467,-0.964 0.597,-0.438 0.192,-0.345 0.113,-0.46 0.151,-0.372 0.096,-0.494 -0.283,-0.424 -0.938,-0.404 -2.433,-0.731 z m -128.101,35.679 -0.062,0.132 -0.065,0.253 0.036,0.945 0.114,0.462 0.188,0.389 0.148,0.112 -0.021,-0.338 -0.29,-1.328 0.015,-0.599 -0.063,-0.028 z m 10.206,31.613 -0.446,-0.112 -0.329,-0.176 -0.517,-0.018 -0.319,-0.086 -0.094,0.249 0.512,1.065 0.542,0.532 0.494,-0.088 0.108,-0.108 0.143,-0.363 -0.148,-0.214 10e-4,-0.196 0.053,-0.485 z m -7.894,-20.646 0.228,-0.698 -0.045,-0.34 -0.316,-0.026 -0.534,0.739 0.061,0.129 0.142,0.159 0.464,0.037 z\"\n\t\t\t\tid=\"RU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 560.52075,465.8974 -0.092,0.043 -0.019,0.135 0.106,0.215 0.348,0.444 0.221,0.081 0.144,0.173 0.142,0.291 0.042,0.365 -0.059,0.438 0.035,0.325 0.128,0.214 0.033,0.277 -0.06,0.34 -0.074,0.204 -0.087,0.068 -0.099,0.025 -0.134,-0.023 -0.163,0.029 -0.177,0.064 -0.112,0.009 -0.07,-0.012 -0.13,-0.055 -0.207,-0.176 -0.386,0.097 -0.105,-0.002 -0.141,0.084 -0.116,0.103 -0.069,0.007 -0.072,-0.014 -0.332,-0.207 -0.122,0.006 -0.05,0.583 -0.055,0.325 -0.069,0.144 -0.238,0.139 -0.239,0.079 -0.131,-0.005 -0.527,0.043 -0.206,10e-4 -0.114,-0.047 -0.148,-0.331 -0.279,-0.147 -0.268,-0.069 -0.109,0.019 -0.097,0.173 -0.04,0.155 -0.26,-0.106 -0.078,-0.131 -0.007,-0.222 -0.095,-0.304 0.053,-0.129 0.102,-0.084 0.216,-0.16 0.328,-0.223 0.07,-0.105 0.046,-0.177 -0.021,-0.411 -0.031,-0.347 0.039,-0.123 0.15,-0.268 0.2,-0.275 0.235,-0.29 0.141,-0.028 0.185,-0.109 0.196,-0.163 0.11,-0.061 0.092,-0.002 0.605,-0.144 0.06,0.045 0.098,0.279 0.052,0.041 0.084,0.01 0.17,-0.064 0.311,-0.219 0.136,-0.132 0.16,-0.187 0.205,-0.21 0.114,-0.184 0.111,-0.107 0.146,-0.032 0.162,0.009 z\"\n\t\t\t\tid=\"RW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 605.48575,378.0324 0.542,0.069 0.723,0.092 0.439,0.063 0.826,0.117 0.247,0.484 0.09,0.339 0.083,0.33 0.248,0.301 0.563,-0.007 0.499,-0.006 0.615,-0.01 0.488,-0.007 0.157,0.299 0.069,0.298 0.29,0.705 0.414,0.549 0.099,0.2 0.066,0.301 -0.072,0.112 -0.028,0.129 0.307,0.3 0.506,0.254 0.198,0.064 0.225,0.112 -0.175,0.173 0.299,0.4 0.347,0.407 0.372,0.092 0.502,0.614 0.757,0.397 0.459,0.52 -0.043,0.01 -0.135,-0.053 -0.169,-0.071 -0.051,0.064 0.009,0.218 0.045,0.256 0.234,0.221 0.208,0.159 0.081,0.301 -0.164,0.647 -0.057,0 -0.11,-0.056 -0.117,-0.013 -0.063,0.037 0.139,0.465 0.139,0.356 0.166,0.282 0.139,0.412 0.119,0.176 0.487,0.437 0.15,0.365 0.139,0.679 0.306,0.378 0.165,0.291 0.221,0.247 0.144,0.337 0.204,0.259 0.106,0.065 0.159,0.027 0.198,10e-4 0.237,-0.067 0.253,-0.063 0.197,0.131 0.204,-0.02 0.021,0.122 -0.137,0.166 -0.168,0.418 0.239,0.066 0.229,0.033 0.162,0.067 0.095,0 0,0.087 0.011,0.396 0.057,0.151 0.104,0.134 0.154,0.2 0.154,0.2 0.154,0.2 0.154,0.2 0.154,0.2 0.155,0.2 0.154,0.199 0.154,0.2 0.154,0.199 0.154,0.199 0.154,0.199 0.154,0.199 0.154,0.199 0.154,0.199 0.155,0.199 0.154,0.198 0.127,0.164 0.236,0.031 0.075,0.01 0.213,0.028 0.33,0.043 0.428,0.057 0.507,0.067 0.565,0.074 0.605,0.08 0.624,0.082 0.625,0.082 0.604,0.08 0.565,0.075 0.507,0.066 0.429,0.057 0.33,0.043 0.213,0.028 0.075,0.01 0.223,0.029 0.042,-0.007 0.187,-0.243 0.206,0.343 0.171,0.284 0.234,0.39 0.25,0.414 0.238,0.396 0.178,0.294 -0.095,0.305 -0.103,0.333 -0.103,0.333 -0.103,0.332 -0.104,0.332 -0.103,0.332 -0.103,0.332 -0.103,0.331 -0.103,0.331 -0.104,0.331 -0.103,0.331 -0.103,0.33 -0.103,0.33 -0.104,0.33 -0.103,0.33 -0.103,0.329 -0.103,0.329 -0.124,0.396 -0.299,0.105 -0.482,0.17 -0.483,0.17 -0.482,0.17 -0.482,0.17 -0.483,0.17 -0.482,0.169 -0.482,0.17 -0.483,0.17 -0.482,0.169 -0.483,0.169 -0.482,0.17 -0.482,0.169 -0.483,0.169 -0.482,0.169 -0.483,0.169 -0.482,0.169 -0.396,0.139 -0.659,0.093 -0.64,0.09 -0.72,0.102 -0.865,0.123 -0.679,0.096 -0.99,0.14 -0.889,0.125 -0.833,0.118 -0.833,0.118 -0.709,0.1 -0.423,0.116 -0.497,0.255 -0.763,0.391 -0.778,0.397 -0.403,0.206 -0.422,0.528 -0.214,0.267 -0.386,0.483 -0.292,0.364 -0.349,0.435 -0.152,0.386 -0.235,0.596 -0.203,0.15 -0.332,0.194 -0.302,0.138 -0.471,-0.02 -0.269,-0.366 -0.285,-0.389 -0.143,-0.156 -0.128,-0.008 -0.473,0.049 -0.57,0.06 -0.672,-0.063 -0.775,-0.074 -0.727,-0.069 -0.362,-0.052 -0.477,-0.252 -0.123,-0.05 -0.125,-0.012 -0.566,-0.006 -0.561,-0.006 -0.562,0.08 -0.538,-0.029 -0.558,0.046 -0.196,0.096 -0.218,-0.005 -0.136,0.085 -0.12,0.04 -0.142,-0.073 -0.174,0.016 -0.256,-0.063 -0.167,-0.165 -0.158,-0.145 -0.163,-0.08 -0.182,-0.05 -0.158,-10e-4 -0.202,0.088 -0.123,0.085 -0.312,0.285 -0.013,0.102 0.142,0.17 -0.043,0.08 -0.184,0.1 -0.057,0.269 -0.027,0.147 -0.027,0.352 0.082,0.277 0.109,0.102 0.005,0.119 -0.06,0.238 -0.169,0.073 -0.124,0.226 -0.076,0.105 -0.132,0.12 -0.525,0.399 -0.026,-0.232 -0.167,-0.344 -0.012,-0.243 -0.078,-0.244 -0.144,-0.188 -0.266,-0.196 -0.024,-0.266 -0.194,-0.263 -0.257,-0.212 -0.143,-0.392 -0.108,-0.521 -0.678,-0.686 -0.848,-0.634 -0.258,-0.357 -0.422,-0.729 -0.213,-0.577 -0.567,-0.665 -0.024,-0.256 -0.084,-0.312 -0.131,-0.348 -0.079,-0.274 -0.569,-1.206 -0.184,-0.192 -0.158,-0.27 -0.041,-0.209 -0.05,-0.114 -0.402,-0.198 -0.375,-0.508 -1.127,-0.81 -0.552,-0.081 -0.437,-0.29 -0.322,-0.379 -0.343,-0.654 -0.604,-0.708 -0.512,-1.006 0.161,-0.367 -0.01,-0.258 -0.158,-0.435 -0.171,-0.336 -0.118,-0.318 0.093,-0.457 0.036,-0.512 0.101,-0.272 0.073,-0.299 -0.095,-0.602 -0.17,-0.323 0.017,-0.215 -0.193,-0.105 -0.156,-0.234 0.163,0 -0.296,-0.325 -0.109,-0.181 -0.112,-0.442 -0.143,-0.338 -0.459,-0.768 -0.22,-0.469 -0.492,-0.607 -0.534,-0.449 -0.339,-0.204 -0.164,-0.186 -0.277,-0.006 -0.302,-0.266 -0.211,-0.01 -0.267,-0.043 -0.314,-0.513 -0.259,-0.481 -0.442,-0.627 0.111,-0.164 0.129,-0.267 -0.064,-0.35 -0.07,-0.238 -0.195,-0.434 -0.641,-1.082 -0.17,-0.159 -0.273,-0.183 -0.168,-0.47 -0.077,-0.422 -0.439,-0.205 -0.755,-1.526 -0.438,-0.535 -0.173,-0.36 -0.506,-0.593 -0.249,-0.591 -0.51,-0.546 -0.442,-0.949 -0.683,-0.951 -0.287,-0.165 -0.704,-0.068 -0.296,-0.07 -0.272,0.209 -0.024,-0.265 0.188,-0.367 0.271,-0.772 0.054,-0.678 0.426,-2.022 0.598,0.104 0.492,0.086 0.719,0.126 0.744,0.13 0.435,0.076 0.149,-0.033 0.602,-0.496 0.542,-0.448 0.325,-0.549 0.314,-0.533 0.144,-0.11 0.482,-0.1 0.765,-0.159 0.757,-0.157 0.061,-0.054 0.176,-0.429 0.224,-0.545 0.046,-0.057 0.055,-0.056 0.542,-0.306 0.329,-0.186 -0.469,-0.549 -0.442,-0.519 -0.496,-0.582 -0.42,-0.454 -0.629,-0.68 -0.412,-0.446 0.721,-0.212 0.78,-0.229 0.787,-0.231 0.947,-0.278 0.741,-0.218 1.106,-0.326 0.541,-0.159 0.098,-0.042 0.416,-0.386 0.626,0.108 0.941,0.163 0.909,0.156 0.958,0.185 0.307,0.15 0.925,0.552 0.601,0.358 0.702,0.417 0.877,0.521 0.602,0.357 0.771,0.457 0.601,0.521 0.761,0.659 0.836,0.722 0.688,0.56 0.948,0.77 0.934,0.757 0.915,0.739 0.732,0.591 0.927,0.746 0.072,0.028 0.937,0.084 1.259,0.114 1.265,0.114 1.142,0.103 0.498,-0.105 z m -27.886,10.642 -0.026,0.042 -0.118,-0.109 0.007,-0.239 0.102,-0.136 -0.008,0.186 0.044,0.188 -10e-4,0.068 z m 0.86,1.02 -0.074,0 -0.197,-0.209 -0.115,-0.154 -0.118,-0.104 -0.538,-0.209 -0.073,-0.135 0.082,-0.135 0.058,0.134 0.098,0.079 0.445,0.189 0.496,0.412 0.085,0.034 -0.149,0.098 z m 14.274,25.945 0.217,0.017 -0.09,-0.093 -0.019,-0.045 0.094,-0.134 0.31,0.276 -0.009,0.327 -0.026,0.075 -0.084,-0.07 -0.055,-0.069 -0.017,-0.074 -0.086,-0.08 -0.302,0.052 -0.188,-0.089 -0.269,-0.275 -0.072,-0.199 0.112,-0.039 0.119,-0.096 0.075,-0.157 -0.069,-0.163 0.16,0.026 0.086,0.167 0.017,0.379 0.024,0.08 -0.044,0.087 0.116,0.097 z\"\n\t\t\t\tid=\"SA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 916.88075,483.4134 0.089,0.099 -0.217,0.168 -0.286,-0.091 -0.063,-0.095 -0.007,-0.05 -0.2,0.032 -0.397,-0.083 -0.554,-0.402 -0.586,-0.757 -0.563,-0.419 -0.105,-0.13 -0.014,-0.216 0.076,-0.083 0.35,0.09 0.453,0.346 0.743,0.359 0.202,0.183 0.129,0.439 0.126,0.131 0.401,0.337 0.212,0.079 0.112,0.015 0.099,0.048 z m -4.622,-0.655 -0.282,0.067 -0.174,-0.09 0.077,-0.214 0.096,-0.111 0.353,0.197 -0.07,0.151 z m 11.335,4.044 0.005,0.065 -0.377,-0.235 -0.286,-0.288 -0.815,-0.313 -0.175,-0.161 -0.147,-0.02 -0.418,-0.262 -0.411,-0.177 -0.25,-0.228 -0.064,-0.093 -0.15,-0.056 -0.258,-0.25 -0.251,-0.166 -0.089,-0.303 -0.242,-0.208 -0.061,-0.091 0.777,0.168 0.36,0.332 0.308,0.188 0.107,0.136 0.277,0.187 0.249,0.017 0.249,0.188 0.227,0.05 0.179,0.098 1.155,0.839 -0.138,0.223 0.153,0.162 0.086,0.198 z m -8.956,-1.722 -0.054,0.039 -0.094,-0.152 -0.068,-0.047 0.002,-0.169 -0.283,-0.275 -0.023,-0.19 0.164,-0.186 0.221,0.108 0.219,0.234 0.257,0.076 -0.053,0.155 -0.231,0.279 -0.057,0.128 z m 1.359,0.521 -0.062,0.042 -0.306,-0.016 -0.232,-0.291 0.002,-0.215 0.183,-0.197 0.221,-0.035 0.121,0.076 0.112,0.165 0.041,0.21 -0.025,0.186 -0.055,0.075 z m -1.595,0.179 -0.034,0.07 -0.146,-0.348 0.007,-0.175 0.025,-0.112 0.054,-0.034 0.118,0.387 -0.024,0.212 z m 3.255,0.199 0.176,0.23 0.203,0.514 -0.037,0.177 -0.145,0.01 -0.041,0.111 -0.196,-0.25 -0.262,-0.067 -0.191,-0.153 -0.065,-0.303 -0.019,-0.191 -0.15,-0.033 -0.43,0.048 -0.137,0.163 -0.196,-0.052 -0.042,-0.147 0.03,-0.144 0.262,-0.142 0.054,-0.183 0.26,-0.314 0.161,-0.054 0.304,0.113 0.037,0.447 0.109,0.146 0.315,0.074 z m 8.38,0.202 0.696,0.84 -0.027,0.149 -0.095,0.096 -0.027,0.282 0.088,0.108 0.19,0.05 0.323,0.301 0.129,0.369 0.012,0.113 0.135,0.167 0.005,0.353 0.307,0.49 0.027,0.236 -0.028,0.106 -0.128,-0.062 -0.367,-0.556 -0.42,-0.24 -0.048,-0.103 -0.424,-0.324 -0.284,-0.545 -0.308,-0.968 0.145,-0.229 -0.347,-0.469 0.017,-0.125 0.146,0.029 0.102,-0.006 0.049,-0.056 0.132,-0.006 z m -2.98,0.547 -0.134,0.038 -0.199,-0.104 -0.086,-0.094 0.041,-0.147 0.116,-0.056 0.132,0.099 0.014,0.101 0.116,0.163 z m -6.451,0.58 0,0.041 -0.155,-0.079 -0.341,-0.381 0.061,-0.127 0.313,-0.247 0.096,-0.033 0.088,0.153 -0.076,0.226 -0.103,0.057 -0.042,0.212 0.159,0.178 z m 2.018,-0.083 -0.276,0.223 -0.202,-0.075 -0.163,-0.191 0.054,-0.23 0.03,-0.061 0.081,-0.013 0.081,-0.047 0.088,-0.102 0.301,0.081 0.074,0.056 -0.179,0.141 0.06,0.045 0.039,0.067 0.012,0.106 z m 0.26,0.388 -0.063,0.011 -0.065,-0.112 0.153,-0.304 0.074,0.245 0.048,0.092 -0.147,0.068 z m -1.559,-0.177 -0.006,0.099 -0.161,-0.031 -0.358,-0.149 -0.013,-0.068 0.204,-0.025 0.148,0.019 0.124,0.087 0.062,0.068 z m 4.331,1.029 -0.037,0.007 -0.132,-0.035 -0.16,-0.011 -0.098,-0.098 0.116,-0.14 0.146,-0.091 0.067,0.023 0.063,0.059 0.147,0.022 0.016,0.18 -0.128,0.084 z m 2.749,-0.362 0.162,0.04 0.078,-0.006 0.185,0.152 0.247,0.224 -0.101,0.116 -0.201,-0.06 -0.067,0.024 -0.021,-0.016 -0.042,-0.112 -0.219,-0.111 -0.196,-0.009 -0.025,-0.132 0.2,-0.11 z m -1.172,0.783 0.618,0.454 0.266,-0.042 0.812,0.008 0.479,0.324 0.281,0.149 0.158,0.29 0.195,0.066 0.12,0.148 0.069,0.27 -0.049,0.044 -0.248,0.101 -0.18,0.042 -0.471,-0.096 -0.45,-0.208 -0.895,-0.025 -0.417,-0.059 -0.144,-0.079 -0.133,-0.106 -0.21,-0.252 -0.164,-0.296 -0.027,-0.174 -0.014,-0.33 0.051,-0.121 0.171,-0.12 0.182,0.012 z m 5.044,0.998 0.031,0.303 -0.014,0.104 -0.213,-0.222 -0.1,0.079 -0.093,-0.105 0.007,-0.23 0.015,-0.245 -0.042,-0.186 -0.106,-0.268 0.119,0.043 0.396,0.727 z m 0.471,2.156 0.353,0.167 0.206,-0.028 0.305,0.115 0.231,-0.065 0.145,0.148 0.365,0.579 0.003,0.188 0.239,0.134 -0.202,0.025 -0.281,-0.069 -0.218,0.047 -0.228,-0.112 -0.384,-0.058 -0.334,-0.135 -0.698,-0.427 0.004,-0.213 -0.113,-0.104 -0.033,-0.264 -0.25,-0.083 -0.292,-0.016 -0.023,-0.125 0.054,-0.221 0.218,0.003 0.262,0.092 0.5,0.322 0.124,0.055 0.047,0.045 z m 12.398,1.051 -0.224,0.049 -0.071,-0.014 -0.168,0.026 -0.181,0.205 -0.133,-0.029 -0.104,0.008 -0.079,-0.168 -0.002,-0.082 0.128,0.013 0.067,-0.164 0.138,-0.082 0.322,-0.038 0.286,0.054 0.102,0.037 -0.09,0.148 0.009,0.037 z m -15.596,2.957 -0.195,0.098 -0.179,-0.049 -0.136,-0.074 -0.11,-0.219 -0.238,-0.137 -0.339,-0.057 -0.139,-0.095 -0.036,-0.047 -0.235,-0.042 -0.067,-0.119 0.02,-0.123 0.038,-0.065 0.217,0.06 1.043,0.578 0.248,0.179 0.108,0.112 z m 17.831,-0.378 -0.248,0.046 -0.099,-0.011 -0.164,-0.246 0.122,-0.056 0.182,0.021 0.055,0.145 0.152,0.101 z\"\n\t\t\t\tid=\"SB\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 630.76775,476.0194 0.008,0.259 -0.135,-0.087 -0.038,-0.167 -0.18,-0.125 -0.094,-0.114 0.203,-0.141 z\"\n\t\t\t\tid=\"SC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 563.20575,399.7514 -0.09,0.268 0.525,0 0.921,0 0.921,0 0.921,0 0.921,-0.001 0.92,0 0.921,0 0.921,0 0.921,0 0.921,0 0.92,0 0.922,-10e-4 0.92,0 0.921,0 0.921,0 0.921,0 0.921,-0.001 0.031,0.686 0.124,0.547 0.434,0.781 0.366,0.42 0.132,0.231 0.012,0.107 -0.017,0.1 -0.111,-0.115 -0.188,-0.078 -0.026,0.365 0.043,0.259 0.045,0.487 0.154,0.522 -0.111,0.482 0.015,0.816 0.194,0.976 -0.039,0.622 0.317,1.448 0.308,0.802 0.169,0.197 0.191,0.106 0.366,0.068 0.539,0.407 0.427,0.43 0.152,0.225 0.206,0.246 0.142,-0.044 0.087,-0.066 0.139,0.199 0.677,0.429 0.1,0.199 -0.244,0.195 -0.281,0.336 -0.071,0.134 -0.033,0.079 -0.033,0.1 -0.074,0.099 -0.161,0.136 -0.064,0.059 -0.038,0.094 -0.097,0.061 -0.106,0.003 -0.092,0.042 -0.139,0.064 -0.207,-0.033 -0.211,0.059 -0.077,0.074 -0.168,0.065 -0.167,0.014 -0.059,0.022 -0.158,0.109 -0.194,0.153 -0.227,0.097 -0.08,0.032 -0.104,0.105 -0.161,0.524 -0.118,0.137 -0.198,0.014 -0.257,0 -0.223,0.045 -0.303,-0.058 -0.147,0.007 -0.039,0.112 -0.054,0.449 0.007,0.193 -0.12,0.227 -0.134,0.285 0.049,0.48 0.023,0.475 -0.246,0.714 -0.035,0.164 -0.249,0.565 -0.128,0.211 -0.318,1.054 -0.124,0.324 -0.266,0.341 0.06,0.555 0.064,0.587 0.06,0.554 0.09,0.827 -0.226,0.772 0.009,0.421 -0.158,0.62 -0.125,0.287 -0.111,0.169 -0.093,0.176 -0.172,0.386 -0.146,0.509 -0.065,0.521 -0.005,0.303 -0.029,0.138 -0.049,0.088 -0.337,0.057 -0.469,0.062 -0.252,0.068 -0.169,0.106 -0.208,0.247 -0.412,0.676 -0.215,0.414 -0.338,0.566 -0.393,0.4 -0.083,0.195 -0.065,0.362 -0.145,0.573 -0.133,0.406 0.024,0.328 -0.124,0.567 0.018,0.276 -0.138,0.154 -0.185,0.146 -0.126,0.037 -0.27,-0.167 -0.206,-0.169 -0.084,-0.045 -0.179,0.106 -0.215,0.157 -0.246,0.366 -0.191,0.37 0.11,0.785 -0.01,0.171 -0.056,0.187 -0.298,0.584 -0.074,0.185 -0.108,0.35 -0.115,0.611 -0.004,0.147 0,0 -0.003,0 -0.522,-0.002 -0.009,-0.003 -0.008,-0.009 -0.008,-0.013 -0.009,-0.019 -0.02,-0.08 -0.011,-0.125 0.018,-0.216 0.058,-0.257 0.181,-0.361 0.009,-0.03 0.002,-0.017 0,-0.019 -0.017,-0.065 -0.021,-0.056 -0.01,-0.084 0.031,-0.188 0.003,-0.058 -0.004,-0.074 -0.014,-0.048 -0.126,-0.313 -0.042,-0.05 -1.215,-0.997 -0.222,-0.271 -0.024,-0.018 -0.03,-0.014 -0.617,-0.228 -0.03,-0.023 0.004,-0.033 0.019,-0.043 0.074,-0.132 0.01,-0.034 0.011,-0.053 -0.278,-2.108 10e-4,-0.041 0.012,-0.028 0.01,-0.017 0.037,-0.045 0.032,-0.046 0.037,-0.082 0.009,-0.03 0.039,-0.378 -0.003,-0.33 0.162,-0.551 0.018,-0.235 -1.34,-0.017 -0.008,0.012 -10e-4,0.015 0.003,0.016 0.002,0.018 -10e-4,0.037 -0.01,0.068 -0.003,0.037 0.001,0.036 0.021,0.133 0.035,0.099 0.005,0.033 0.002,0.036 -0.004,0.069 -1.865,0.008 0.738,0.828 0.009,0.017 0.013,0.045 0.005,0.034 0.014,0.291 -0.039,0.46 0.008,0.296 0.043,0.192 0.2,0.378 -0.013,0.071 -0.046,0.089 -1.323,1.122 -0.037,0.053 -0.184,0.468 -0.175,0.271 -0.077,0.078 -0.307,0.381 -1.207,1.195 -0.198,0.08 -0.601,0.033 -0.318,0.009 -0.036,0.009 -0.054,0.02 -0.033,0.031 -0.039,0.023 -0.039,-0.012 -0.045,-0.033 -0.742,-0.669 -1.324,-0.845 -0.127,0.077 -0.749,0.364 -0.154,0.094 -0.086,0.067 -0.004,0.407 -0.131,0.206 -0.236,0.226 -0.648,0.143 -0.337,0.122 -0.345,0.183 -0.056,0.046 0,-10e-4 -0.132,0.127 -0.261,0.255 -0.028,0.198 0.042,0.178 -2.233,-0.007 -0.147,-0.142 -0.31,-0.624 -0.014,-0.006 -0.228,0.039 -2.036,-0.073 -0.291,0.065 -0.582,0.258 -0.293,0.043 -0.302,-0.118 -1.071,-1.244 -0.231,-0.149 -0.085,-0.08 -0.158,-0.218 -0.229,-0.13 -0.077,-0.094 -0.025,-0.133 0.007,-0.274 -0.075,-0.171 -0.169,-0.039 -1.44,0.289 -0.206,-0.033 -0.302,0.052 -0.104,0.051 -0.122,0.164 -0.025,0.17 0.004,0.172 -0.037,0.169 -0.11,0.189 -0.41,0.422 -0.091,0.184 0.019,0.464 -0.027,0.235 -0.062,0.109 -0.178,0.178 -0.065,0.103 -0.03,0.145 -0.01,0.306 -0.032,0.143 -0.224,0.36 -0.053,0.127 -0.013,0.259 -0.036,0.079 -0.651,0.205 -0.243,0.131 -0.149,0.202 -0.036,0.086 0,0 -0.279,-0.072 -0.354,-0.052 -0.681,-0.064 -0.269,-0.094 -0.129,-0.141 0.041,-0.36 -0.068,-0.077 -0.108,-0.064 -0.075,-0.156 0.016,-0.187 0.359,-0.416 0.074,-0.222 0.057,-0.773 0.037,-0.272 -0.027,-0.319 -0.285,-0.587 -0.248,-0.408 -0.405,-0.605 -0.158,-0.198 -0.818,-0.834 -0.095,-0.124 -0.198,-0.353 0.098,-0.311 0.12,-0.462 0.014,-0.214 -0.056,-0.221 -0.207,-0.166 -0.184,-0.02 -0.082,-0.084 -0.16,-0.122 -0.158,-0.095 -0.14,-0.182 -0.097,-0.255 0.069,-0.913 -0.047,-0.122 -0.209,-0.034 -0.049,-0.066 0.008,-0.175 -0.112,-0.521 -0.126,-0.432 0.067,-0.238 -0.174,-0.326 -0.334,-0.14 -0.315,0.043 -0.338,0.065 -0.204,-0.018 -0.139,-0.061 -0.099,-0.119 -0.05,-0.142 0.046,-0.212 0.186,-0.39 0.231,-0.32 0.471,-0.293 0.125,-0.155 0.072,-0.173 0.012,-0.198 -0.032,-0.209 -0.053,-0.191 -0.139,-0.253 -0.127,-0.298 -0.003,-0.2 0.061,-0.144 0.126,-0.174 0.25,-0.196 0.06,-0.039 0.157,-0.105 0.137,-0.077 0.342,-0.206 0.08,-0.099 -0.029,-0.119 -0.084,-0.097 -0.138,-0.136 -0.028,-0.167 -0.04,-0.285 -0.071,-0.182 -0.051,-0.133 0.097,-0.1 0.145,-0.139 0.181,-0.085 0.279,-0.072 0.11,-0.1 0.032,-0.19 -0.009,-0.182 0.101,-0.135 0.135,-0.29 0.109,-0.132 0.183,-0.151 0.183,-0.189 0.081,-0.22 0.023,-0.211 -0.1,-0.642 0.211,-0.268 0.27,-0.222 0.388,0.015 0.602,-0.049 0.41,-0.092 0.292,0.003 0.667,0.12 0.055,-0.029 0.015,-0.024 0.036,-0.17 -10e-4,-0.428 -10e-4,-1.296 -0.001,-1.298 -10e-4,-1.301 -10e-4,-1.305 -10e-4,-1.308 -10e-4,-1.311 -0.001,-1.315 -10e-4,-1.318 0,-0.37 0,-0.369 0,-0.37 0,-0.371 0.692,0.001 0.693,0 0.692,0 0.692,10e-4 0.009,-0.006 0.009,-0.005 0.008,-0.006 0.009,-0.004 0.001,-1.482 0,-1.487 10e-4,-1.492 0,-1.497 1.072,0 1.073,10e-4 1.072,0 1.072,0 1.072,0 1.072,0 1.073,0 1.072,0.001 1.072,0 1.072,0 1.072,0 1.072,0 1.072,10e-4 1.072,0 1.073,0 1.072,0 0.327,0 0.144,-0.022 0.275,-0.561 0.117,-0.042 0.179,0.033 0.062,0.132 z\"\n\t\t\t\tid=\"SD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 542.68775,216.2374 -0.744,0.158 -0.559,-0.317 -0.279,0.159 -0.487,0.007 -0.554,0.125 -0.187,0.247 -0.147,0.099 -0.513,-0.349 -0.485,-0.579 -0.354,0.441 -0.229,0.083 -0.207,-0.399 -0.18,-0.065 -0.097,0.133 -0.085,0.353 -0.136,0.277 -0.036,0.175 -0.023,0.704 -0.035,0.163 -0.471,-0.091 0.028,0.185 0.103,0.093 0.042,0.117 -0.171,0.153 -0.467,-0.015 -0.048,0.163 0.131,0.256 -0.103,0.225 -0.095,0.088 -0.559,0.139 -0.323,-0.032 -0.093,0.145 -0.025,0.188 0.061,0.185 0.143,0.098 0.047,0.117 -0.01,0.253 -0.119,0.046 -0.336,-0.445 -0.103,0.023 0.077,0.231 0.192,0.252 0.111,0.257 0.097,0.308 -0.019,0.234 -0.418,0.752 -0.368,0.473 -0.274,0.425 -0.162,0.45 0.188,0.226 0.208,0.326 0.147,0.625 0.175,0.556 0.353,0.529 -0.071,0.305 -0.082,0.237 -0.587,0.521 -0.666,0.782 -0.718,1.984 -0.239,0.265 -0.628,0.333 -0.231,0.322 -0.468,0.382 -0.817,0.328 -0.37,0.456 -0.167,0.47 -0.186,0.034 -0.185,-0.184 -0.246,-0.137 -0.032,0.307 0.011,0.225 -0.394,-0.333 -0.186,0.306 -0.145,0.509 -0.567,0.684 -0.611,-0.123 -0.068,0.12 0.162,0.087 0.025,0.109 -0.111,0.058 -0.168,-0.006 -0.259,0.135 -0.17,-0.01 -0.081,0.322 -0.132,0.389 -0.345,0.161 -0.178,0.033 -0.088,0.221 0.531,0.046 -0.042,0.187 -0.012,0.187 -0.055,0.2 -0.604,0.288 -0.093,0.226 -0.126,0.14 -0.269,-0.008 0.01,-0.13 0.044,-0.147 -0.4,0.013 -0.125,-0.325 -0.076,0.083 0.045,0.262 0.104,0.272 0.117,0.399 -0.095,0.251 -0.105,0.125 0.077,0.115 0.213,0.088 0.086,0.157 -0.253,0.134 -0.316,0.46 -0.328,0.011 -0.2,0.304 -0.213,-0.001 -0.173,-0.191 -0.277,-0.157 -0.089,0.276 -0.014,0.22 0.156,0.555 0.298,0.428 0.276,0.185 -0.199,0.125 -0.148,0.276 -0.179,0.86 -0.097,0.338 -0.105,0.594 0.066,0.5 0.054,0.245 0.135,0.333 -0.367,-0.043 -0.388,-0.194 0.054,0.403 -0.238,0.476 0.044,0.418 0.05,0.271 -0.074,0.449 0.112,0.141 0.061,0.267 -0.101,0.197 0.044,0.169 0.017,0.597 0.076,0.931 -0.028,0.196 0.213,0.804 -0.049,0.281 -0.029,0.357 0.306,0.343 0.272,-0.005 0.276,-0.005 0.105,0.085 0.106,0.242 0.085,0.286 0.227,-0.023 0.363,-0.232 0.236,-0.055 0.156,0.446 0.424,0.588 0.247,0.263 0.419,0.139 0.442,0.472 -0.062,0.568 0.184,0.189 0.521,0.223 0.185,0.301 0.089,0.256 0.137,0.212 0.161,0.639 -0.056,0.393 -0.21,0.135 -0.497,0.42 -0.221,0.313 -0.173,0.194 -0.493,0.417 -0.181,0.075 -0.173,0.216 -0.167,0.095 -0.15,-0.054 -0.56,0.391 -0.378,-0.108 -0.159,-0.193 0.101,-0.768 -0.063,-0.248 -0.073,-0.125 -0.248,0.143 0.044,0.294 -0.429,0.012 -0.404,-0.249 -0.052,0.49 -0.868,-0.406 -0.239,0.103 -0.383,-0.204 -0.249,0.244 -0.296,-0.088 -0.205,-0.29 -0.284,0.51 -0.62,0.145 -0.583,0.081 0.281,0.17 1.308,-0.032 0.37,0.126 0.481,-0.084 0.426,0.4 0.307,0.096 0.363,0.459 0.186,-0.125 0.292,0.019 0.27,0.131 0.857,-0.017 0.291,-0.32 0.429,0.07 0.219,-0.083 0.168,-0.196 0.184,-0.045 0.167,0.037 0.178,-0.155 0.14,-0.062 0.144,0.075 0.161,0.371 -0.334,0.192 -0.237,0.009 -0.116,0.606 -0.143,0.26 -0.103,0.125 -0.525,0.257 -0.347,0.325 -0.409,0.261 -0.178,-0.057 -0.269,0.265 -0.597,0.313 -0.307,0.422 -0.687,0.376 -0.35,0.306 -0.951,0.016 -0.908,-0.067 -0.285,0.145 0.292,0.045 0.204,0.142 0.245,-0.06 0.576,0.071 0.296,0.078 0.38,0.498 -0.279,0.176 -0.484,0.136 0.182,0.702 0.149,0.472 -0.196,0.284 -0.015,1.287 -0.275,0.024 -0.117,0.53 0.086,0.27 -0.007,0.625 0.057,0.384 0.135,0.353 -0.06,0.367 -0.435,0.857 0.009,0.401 0.079,0.238 0.058,0.379 -0.198,0.727 -0.139,0.605 -0.166,0.508 -0.371,0.607 -0.185,0.453 -0.432,1.407 -0.214,0.278 -0.263,0.213 -0.293,-0.197 -0.269,-0.107 -0.328,0.013 -0.514,0.162 -0.773,-0.108 -0.755,0.052 -0.191,0.139 0.115,0.507 -0.279,0.066 -0.272,-0.144 -0.24,0.172 -0.2,0.188 -0.393,0.446 -0.132,0.274 -0.034,0.515 0.207,0.461 0.183,0.539 -0.471,0.647 -0.263,0.022 -0.768,-0.18 -1.361,0.405 -1.222,-0.32 0.153,-0.347 -0.005,-0.255 0.069,-0.393 0.041,-0.403 -0.011,-0.27 -0.09,-0.289 -0.301,-0.378 -0.679,-1.281 -0.201,-0.543 -0.14,-0.227 0.101,-0.012 0.56,0.292 0.13,-0.036 0.137,-0.109 -0.167,-0.419 -0.144,-0.189 -0.097,-0.284 0.327,-0.077 0.237,0.017 0.174,-0.32 -0.101,-0.519 -0.254,-0.16 -0.212,-0.07 -0.407,-0.82 -0.424,-0.426 -0.757,-1.651 -0.277,-1.142 -0.257,0.109 -0.125,-0.499 -0.09,-0.475 -0.018,-0.349 -0.404,-0.2 -0.016,-0.246 -0.073,-1.1 -0.433,-0.148 -0.28,-0.62 -0.05,-1.179 -0.285,-0.215 -0.229,0.06 0.011,-0.293 0.055,-0.276 -0.134,-1.098 -0.045,-1.007 -0.108,-0.306 -0.062,-0.358 0.055,-0.31 0.082,-0.179 0.279,-0.047 0.261,0.274 0.231,0.69 0.204,0.09 0.278,-0.18 0.195,-0.503 0.111,-0.757 0.13,-0.725 -0.154,-0.778 -0.164,-0.686 -0.012,-0.202 0.431,-0.582 0.132,-0.474 0.143,-0.453 0.158,-0.154 0.234,-0.035 0.273,-0.085 0.344,-0.304 0.309,-0.408 0.236,-0.375 0.08,-0.744 0.003,-0.375 0.104,-0.279 0.1,-0.546 -0.098,-0.54 -0.305,-0.822 -0.367,-1.163 -0.057,-0.638 0.167,-0.119 0.319,-0.106 0.605,-0.031 0.064,-0.075 0.061,-0.281 0.137,-0.381 0.145,-0.278 0.1,-0.399 0.048,-0.362 -0.346,-0.547 -0.453,-0.562 -0.307,-0.187 -0.546,-0.474 -0.384,-0.397 0.22,-1.521 0.164,-1.141 0.026,-0.278 0.006,-0.432 -0.53,-1.855 0.021,-0.415 0.05,-0.375 -0.057,-0.641 -0.031,-0.575 0.091,-0.175 0.216,-0.326 -0.207,-0.506 -0.017,-0.042 -0.39,-1.258 0.596,-1.255 -0.104,-0.653 0.355,-0.475 0.648,-1.092 0.364,-0.618 0.077,-0.108 0.288,-0.272 0.547,-0.323 0.606,-0.158 0.27,0.002 1.042,0.219 0.813,0.17 0.119,-0.171 0.17,-0.351 0.219,-0.501 0.019,-0.559 -0.079,-0.824 -0.119,-0.495 -0.572,-0.323 -0.627,-0.443 0.771,-1.411 0.534,-0.986 0.666,-1.493 0.207,-0.625 0.15,-0.249 0.196,-2.33 0.13,-0.657 0.109,-0.345 10e-4,-0.354 -0.071,-0.599 -0.187,-1.36 1.052,-0.169 0.342,-0.096 0.318,-0.163 0.622,-0.424 0.305,-0.376 -0.17,-1.288 0.376,-0.438 0.918,-1.534 0.992,-1.481 0.465,-0.564 0.048,-0.276 0.038,-0.445 -0.207,-0.702 -0.222,-0.436 -0.433,-0.829 0.186,-0.581 0.319,-0.113 0.421,-0.229 0.329,-0.499 0.032,-0.064 0.556,-1.976 1.085,-1.01 0.433,-0.553 0.674,0.416 0.988,0.626 0.439,-0.921 0.145,-0.343 0.145,-0.506 -0.058,-0.88 -0.025,-1.149 0.044,-0.464 0.394,-0.207 0.212,-0.053 1.098,0.478 0.276,-0.008 0.518,0.064 0.579,0.209 1.213,0.556 0.501,0.229 0.28,0.044 0.242,-0.258 0.517,-0.665 -0.761,-0.494 0.501,-0.501 0.26,-0.507 0.223,-0.625 0.081,-0.734 -0.031,-0.396 -0.154,-0.271 -0.465,-0.676 1.053,-0.097 0.365,-0.028 0.766,0.446 0.034,0.097 0.005,0.232 0.027,0.24 0.743,0.607 0.214,0.321 0.457,0.486 0.121,0.262 0.423,0.306 0.303,0.327 0.354,0.264 0.413,0.41 0.555,0.326 0.468,0.106 1.18,0.557 0.201,0.18 0.34,0.387 0.344,0.446 0.238,0.914 0.381,0.047 0.104,0.313 0.333,0.535 0.462,0.471 -0.017,0.158 -0.368,0.432 -0.04,0.584 0.035,0.743 0.116,0.604 -0.012,0.176 -0.091,0.208 -0.109,0.325 -0.04,0.283 0.01,0.138 0.037,0.076 0.194,0.006 0.347,0.067 0.204,0.125 0.116,0.687 -0.039,0.132 -0.292,0.31 -0.086,0.246 -0.008,0.36 0.052,0.396 0.101,0.441 0.229,0.471 0.31,0.491 0.204,0.402 0.096,0.282 0.035,0.198 -0.139,0.248 -0.125,0.489 -0.023,0.558 -0.057,0.363 -0.272,0.499 -0.189,0.176 -0.054,0.262 -0.023,0.439 0.056,0.534 0.019,0.36 0.058,0.259 0.086,0.169 0.437,0.297 0.245,0.608 0.153,0.487 0.309,1.263 z m -15.605,38.796 -0.07,0.183 -0.071,-0.224 0.028,-0.044 0.048,-0.221 0.136,-0.121 0.217,0.073 -0.001,0.055 -0.208,0.179 -0.079,0.12 z m -0.503,2.418 -0.125,0.052 -0.062,-0.016 0.077,-0.253 0.057,-0.109 0.189,-0.102 0.058,0.018 -0.194,0.41 z m 2.078,5.928 -0.051,0.329 -0.146,-0.025 -0.133,-0.243 0.269,-0.371 0.411,0.02 0.141,0.078 -0.491,0.212 z m -0.225,0.457 -0.232,0.125 -0.136,0.371 -0.188,0.063 -0.18,0.123 -0.064,1.166 0.329,0.441 -0.181,0.062 -0.165,0.132 -0.118,0.195 -0.121,0.419 -0.453,0.237 -0.171,0.175 -0.253,0.389 -0.132,0.563 -0.256,0.24 -0.288,0.057 0.168,-0.46 0.221,-0.376 -0.212,-0.259 -0.128,-0.405 -0.166,-0.312 0.132,-0.349 -0.065,-0.572 0.021,-0.561 0.192,-0.283 0.22,-0.231 0.342,-0.533 0.371,-0.388 0.518,-0.174 0.234,0.161 0.101,-0.353 0.167,-0.081 0.157,0.082 0.336,0.336 z m -7.15,7.963 -0.145,0.254 -0.128,-0.018 -0.085,-0.339 -0.02,-0.874 0.051,-0.434 0.612,-1.572 0.273,-0.129 0.384,-0.97 0.104,-0.434 0.167,-0.391 0.098,-0.351 0.083,-0.142 0.179,0.066 0.08,0.065 -0.189,0.204 0.022,0.265 -0.013,0.109 -0.477,1.149 -0.127,0.742 -0.169,0.181 -0.7,2.619 z\"\n\t\t\t\tid=\"SE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 766.68475,459.2094 -0.42,0.185 -0.476,-0.168 0.154,-0.273 0.316,-0.066 0.256,0.087 0.145,0.066 0.1,0.075 z\"\n\t\t\t\tid=\"SG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 434.58175,485.2254 -0.096,0.004 -0.028,-0.023 -0.018,-0.066 0.046,-0.107 0.042,-0.065 0.065,0.009 0.088,0.075 0.074,0.064 -0.04,0.058 -0.133,0.051 z m 24.339,22.892 -0.253,0.018 0.021,-0.137 0.188,-0.146 0.127,0.019 0.008,0.168 -0.091,0.078 z\"\n\t\t\t\tid=\"SH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 521.24775,315.9454 -0.248,-0.099 -0.299,-0.042 -0.056,0.054 -0.12,0.055 -0.061,0.098 0.046,0.384 -0.072,0.066 -0.34,-0.038 -0.112,0.044 -0.185,0.267 -0.189,0.113 -0.24,0.08 -0.178,0.096 -0.225,0.084 -0.191,0.051 -0.076,0.116 -0.046,0.129 0.012,0.124 0.195,0.245 0.026,0.261 -0.021,0.319 -0.045,0.17 -0.077,0.113 -0.479,0.146 -0.497,0.261 -0.011,0.06 0.227,0.231 0.009,0.058 -0.188,0.131 -0.018,0.132 0.021,0.152 0.1,0.157 0.036,0.141 -0.273,0.102 -0.37,-0.038 -0.438,-0.195 -0.153,0.028 -0.148,0.102 -0.152,-0.044 -0.167,-0.121 -0.236,-0.251 -0.115,-0.155 -0.047,-0.164 -0.064,-0.024 -0.098,0.048 -0.081,0.2 -0.218,0.357 -0.162,0.097 -0.243,-0.021 -0.342,0.006 -0.213,0.03 -0.26,-0.126 -0.063,0.024 0,0.083 -0.097,0.13 -0.16,0.086 -0.739,-0.193 -0.105,-0.16 0.167,-0.076 0.231,-0.207 0.157,0.023 0.194,-0.044 0.084,-0.088 -0.122,-0.262 -0.308,-0.324 -0.163,-0.123 -0.225,-0.082 -0.038,-0.087 0.124,-0.513 -0.038,-0.073 -0.256,0.024 -0.06,-0.053 -0.021,-0.089 0.017,-0.122 0.173,-0.201 0.192,-0.177 0.052,-0.099 -0.007,-0.079 -0.247,-0.078 -0.148,-0.081 -0.118,-0.028 -0.081,0.045 -0.059,-0.051 -0.061,-0.148 0.06,-0.227 0.222,-0.209 0.238,-0.186 0.207,-0.136 0.119,-0.058 0.057,-0.234 0.124,0.025 0.245,0.012 0.274,0.053 0.254,0.066 0.225,0.082 0.47,0.086 0.429,0.052 0.129,0.048 0.105,-0.004 0.131,0.07 0.076,-0.054 0.056,-0.093 0.233,-0.112 0.215,-0.145 0.151,-0.184 0.085,-0.146 0.148,-0.104 0.157,-0.03 0.144,-0.052 0.607,-0.069 0.624,0.055 0.297,-0.103 0.245,-0.178 0.359,-0.05 0.018,-0.003 0.535,0.138 0.041,-0.08 0.023,-0.036 -0.01,-0.389 0.17,-0.178 0.156,-0.076 0.535,0.025 0.07,0.12 0.028,0.186 0.048,0.249 0.089,0.068 0.049,0.098 -0.01,0.172 0.105,0.128 0.244,0.346 z\"\n\t\t\t\tid=\"SI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 449.76675,177.8574 -0.259,0.055 -0.149,-0.19 0.377,-0.522 1.246,-0.987 0.497,-0.947 0.96,-0.327 0.063,0.528 -0.065,0.654 -0.843,0.518 -0.935,0.35 -0.892,0.868 z m 79.067,-33.457 -0.339,0.404 -0.508,-0.609 -0.337,-0.785 0.179,-0.299 0.903,-0.04 0.221,0.409 0.037,0.233 -0.156,0.687 z m 6.704,-50.915999 0.386,0.335 0.835,-0.069 0.461,2.381 0.259,2.487 0.42,0.178 0.801,-0.34 0.714,-0.166 0.366,0.184 0.652,0.719 0.281,0.504 -0.245,0.394999 -0.597,0.441 -0.099,1.308 0.601,0.453 0.992,1.105 0.559,0.143 0.997,-0.452 0.936,0.856 0.927,1.033 -2.167,1.296 -0.19,0.362 -0.3,0.952 -0.319,0.779 -0.295,0.458 -0.648,0.785 -0.349,0.271 -0.784,-0.06 -0.294,0.311 -0.272,0.633 -0.274,0.454 -0.696,0.116 -0.355,-0.628 0.117,-0.194 0.05,-0.372 -0.124,-0.89 0.664,-0.915 0.15,-0.509 -0.132,-0.184 -0.183,0.05 -0.483,-0.28 -0.143,0.014 -0.4,0.536 -0.555,0.36 -0.563,0.091 -2.263,0.688 -0.342,-0.241 -0.154,-1.371 0.92,-0.708 0.141,-1.201 0.232,-0.804 0.271,-0.535 0.498,-1.387 0.125,-0.1 -1.242,-1.107 -0.491,-0.722 -0.535,-1.452999 -0.164,-1.185 -0.725,-1.015 0.089,-1.306 -0.526,0.103 -0.406,-0.922 0.378,-0.52 1.92,-0.592 1.145,-0.579 0.428,0.026 z m 14.785,-0.757 -0.412,0.035 -0.757,-1.055 -0.146,-0.922 0.135,-0.378 0.365,-0.014 0.569,1.26 0.614,0.379 -0.368,0.695 z m -43.854,0.544 0.032,0.977 0.457,-0.097 0.539,1.036 0.588,0.547 0.166,0.374 0.125,0.48 0.356,0.962 0.169,1.008 -0.425,0.106 -0.585,-1.438 -0.478,-0.823 -0.601,-0.706 -0.486,-0.035 -0.219,-0.309 -0.788,-2.566 -0.145,-0.597 -0.45,-0.965 -0.199,-1.208 0.001,-0.951 0.602,0.225 0.528,0.597 0.458,1.344 0.082,0.415 -0.209,0.55 0.215,0.649 0.267,0.425 z m 49.947,-4.339 0.837,0.092 0.841,-0.231 0.145,0.247 -1.083,0.766 -1.206,-0.407 -1.085,-0.104 -1.281,0.849 -0.418,-0.339 0.651,-0.819 0.71,-0.272 0.114,-0.502 0.271,-0.086 0.938,-0.052 0.566,0.858 z m -34.409,-15.197 0.146,0.032 0.142,-0.17 0.103,-0.45 0.114,-0.249 0.71,0.292 1.007,0.898 0.299,0.441 0.42,0.905 0.341,1.511 -0.271,1.083 -0.357,1.019 -0.126,0.56 0.13,0.801 -0.053,0.776 -0.13,0.684 0.54,-0.78 1.154,-2.522 0.172,-0.157 0.18,0.086 0.517,0.521 0.469,1.288 0.103,0.424 0.084,0.519 0.048,0.64 -0.026,0.73 -0.043,0.507 -0.245,0.327 -0.119,0.298 0.265,0.022 0.303,0.39 0.277,0.826 0.31,0.331 1.125,-0.279 0.731,0.431 0.401,1.345 0.618,-0.303 0.002,-0.717 0.136,-0.308 0.829,0.245 0.429,0.335 0.438,0.704 -0.748,1.146 0.617,1.092 1.036,0.787 0.625,0.822 0.113,0.343 0.102,0.455 -0.407,0.588 -0.414,0.331 -1.043,0.057 -0.948,0.414 -1.735,0.293 -0.258,0.187 -0.061,0.167 -0.102,0.506 -0.667,1.161 -0.646,1.404 -0.267,0.84 -0.201,1.169 -0.074,0.711 0.144,0.686 -0.038,0.690999 -0.486,0.54 -0.308,0.021 -0.386,-0.106 -0.38,0.31 -0.024,0.465 0.022,0.653 -0.097,1.977 -0.118,1.475 -0.177,1.359 -0.199,0.728 -0.254,0.202 -0.815,0.133 -0.628,1.257 -0.507,2.224 -0.264,0.865 -0.55,1.357 0.1,0.479 0.171,0.517 -0.3,0.921 -0.464,1.028 0.009,0.396 0.156,0.722 0.076,0.748 -0.358,0.641 -0.658,0.325 -0.67,-0.364 -0.326,-0.43 -0.302,-0.69 -0.321,-0.452 -0.334,-0.272 -1.285,-1.546 -1.186,-2.475 -1.083,-0.973 -0.706,-0.463 -0.34,-0.45 -0.332,-0.606 -0.287,-0.684 -0.267,-0.867 -0.129,-0.541 -0.024,-0.815 0.085,-0.48 0.127,-0.247 0.86,-0.203 0.309,0.115 0.304,0.428 0.277,0.168 0.634,-2.141 3.607,-1.237 1.159,-0.215 1.163,0.013 -0.181,-0.588 -0.154,-0.748 -0.171,-0.182 -0.879,0.42 -1.346,0.441 -0.656,0 -0.677,-0.294 -0.675,0.162 -0.696,0.639 -0.702,0.403 -0.682,0.162 -1.442,-0.065 -0.357,-0.33 -0.481,-0.766 -0.117,-0.394 -0.1,-0.484 -0.094,-1.463 0.104,-0.4 0.147,-0.23 0.151,-0.142 0.317,-0.007 0.311,0.254 0.728,0.836 -0.166,-0.897 2.095,-1.086999 0.973,-0.956 0.5,-0.161 0.501,0.07 -0.11,-0.511 -0.004,-0.475 0.356,-0.388 0.256,-0.167 0.771,-0.191 1.759,0.033 0.634,-0.263 0.475,-0.666 -0.506,0.232 -0.507,0.044 -0.237,-0.138 -0.537,-0.583 -0.244,-0.769 0.696,-1.546 0.242,-0.722 -0.708,0.104 -0.236,0.253 -0.811,1.423 -0.599,0.636 -0.739,0.305 -0.739,-0.026 -0.161,-0.201 -0.226,-0.938 -0.071,-0.495 0.03,-0.272 0.234,-0.782 0.122,-0.831 -0.021,-0.719 -0.172,-0.145 -0.273,0.704 -0.247,0.974 -0.339,0.486 -0.35,-0.133 -0.149,-0.373 -0.13,-0.572 -0.137,-0.221 -0.152,0 -0.313,0.229 -0.31,0.423 0.107,0.64 0.028,0.709 -0.134,0.561 -0.101,0.683 0.319,0.429 0.26,0.663 -0.39,0.311 -0.382,0.452 -0.351,0.695 -0.359,0.539 -0.569,0.057 -0.709,0.298 -1.417,0.105 -0.666,-0.877 -0.122,-0.418 -0.133,-0.281 -0.442,-0.463 -0.645,-1.374 -0.497,-1.578 -0.335,-0.154 -0.496,-0.524 -0.27,-0.45 -0.257,-0.603 -0.077,-0.717 0.025,-0.656 0.297,-0.292 -0.702,-0.741 -0.689,-0.984 0.254,-0.332 0.256,-0.146 2.042,1.149 0.136,-0.143 0.224,-0.57 -0.08,-0.192 -0.342,-0.132 -0.466,0.004 -0.116,-0.118 -0.18,-0.621 -0.157,-0.767 -0.067,-0.513 -0.026,-0.603 0.347,-0.908 0.19,-0.818 -0.296,-0.38 -0.839,0.023 -0.279,0.116 0.103,1.175 -0.267,0.807 -0.512,0.627 -0.367,-0.305 -0.283,-1.544 -0.37,-1.084 -0.139,-0.687 -0.106,-0.993 -0.15,-0.727 -0.272,-0.882 -0.036,-0.546 0.034,-0.405 0.207,-0.922 -0.157,-0.772 -0.192,-0.68 -0.012,-0.389 0.18,-0.481 0.162,-0.16 0.174,0.035 0.515,0.573 0.283,0.683 0.098,-0.055 0.184,-1.016 0.261,-0.23 1.007,-0.336 1.121,1.313 0.29,0.291 0.232,0.094 -0.12,-0.581 -0.073,-0.757 0.171,-0.287 0.905,0.677 0.424,-0.041 0.994,-0.886 1.643,-0.466 0.621,0.701 0.032,0.373 -0.013,0.501 -0.04,0.15 -0.363,0.581 -2.072,0.473 -1.358,1.803 1.852,-0.289 0.333,0.206 0.14,1.451 0.135,0.152 0.476,0.21 0.323,0.43 0.33,0.816 0.347,0.547 0.203,-0.068 0.074,-0.593 -0.083,-0.705 -0.043,-0.807 0.024,-0.875 0.056,-0.727 0.389,-0.514 0.565,-1.679 0.6,-1.148 0.668,0.511 0.619,1.432 0.558,2.021 0.541,2.131 0.606,2.603 0.292,0.908 0.265,0.214 1.224,2.647 0.138,0.073 -0.253,-2.008 -0.634,-3.457 -0.428,-2.706 -0.097,-1.046 -0.069,-1.481 0.027,-0.426 0.055,-0.387 0.31,-1.606 0.406,-0.786 -0.123,-1.114 0.104,-0.861 0.426,-0.684 0.396,-0.05 0.385,0.52 0.737,1.833 z m 44.172,-3.436 -2.662,0.615 -0.269,-0.431 4.314,-1.808 0.223,-0.177 0.801,-0.226 0.688,0.412 -0.204,0.318 -2.891,1.297 z m -38.685,-3 -0.608,0.919 -1.018,-0.707 0.121,-0.728 0.242,-0.444 0.639,0.167 0.624,0.793 z m 6.051,0.848 0.282,0.184 1.546,-0.067 0.296,0.404 0.117,0.977 0.236,0.334 0.329,0.104 0.821,1.187 0.279,0.17 0.243,-0.658 0.186,-1.649 0.01,-1.956 -0.079,-0.956 0.092,-0.616 0.275,-0.24 0.346,0.064 0.338,-0.344 0.292,-0.608 0.313,-0.084 0.683,0.462 0.18,0.362 -0.183,0.746 -0.071,1.059 -0.309,2.166 0.67,0.133 0.939,-0.456 0.238,-0.626 0.505,-1 0.534,0.158 0.256,-0.133 0.129,-0.437 0.049,-0.521 0.295,0.087 0.404,1.003 0.188,0.155 0.344,-0.258 0.139,0.01 0.34,0.399 1.584,0.723 0.549,0.385 0.236,0.359 0.239,0.211 1.685,-0.005 1.19,0.254 0.439,0.566 0.368,1.08 0.141,2.463 -0.333,0.659 -2.41,2.969 -0.604,0.943 -0.292,0.864 -0.493,1.873 -0.239,0.562 -1.128,0.882 -0.264,0.094 -0.848,-0.431 -0.259,0.04 -1.031,0.955 -0.355,0.575 -0.348,0.722 -0.52,0.317 -0.53,-0.17 -2.4,-0.375 -0.321,-0.507 -0.263,-0.978 0.477,-1.26 -2.677,0.47 -2.948,-0.255 -0.156,-0.178 -0.126,-0.489 -1.014,-0.335 -0.762,-0.403 -0.64,-0.681 -0.633,-0.888 0.203,-0.417 0.208,-0.244 0.544,-0.103 0.483,0.124 0.86,-0.007 0.2,-0.903 0.342,-0.261 0.273,-0.651 -0.908,-0.412 -0.946,-0.062 -0.631,0.542 -0.731,0.245 -0.668,0.032 -1.285,-0.153 -0.609,-0.385 -0.833,-1.01 -0.29,-0.56 -0.112,-0.441 -0.083,-0.67 0.952,-0.604 0.37,-0.476 0.364,-0.653 -1.438,-0.373 -0.602,-0.551 -0.597,-0.813 0.484,-0.46 1.936,-0.368 0.513,0.308 0.508,0.593 0.563,0.364 0.544,-0.767 -0.512,-0.364 -0.458,-1.286 -0.097,-0.643 0.061,-0.495 0.24,-0.074 0.179,0.215 0.676,1.216 0.513,0.377 0.144,-1.12 0.023,-0.536 -0.094,-0.444 -0.241,-0.822 -0.216,-1.016 0.334,-0.259 0.331,0.112 0.71,0.698 0.716,0.489 0.327,0.492 0.61,1.22 0.574,0.81 z\"\n\t\t\t\tid=\"SJ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 538.14975,305.2294 -0.041,0.176 -0.115,0.205 -0.143,0.212 -0.12,0.256 -0.16,0.545 -0.104,0.252 -0.428,0.496 -0.03,0.689 -0.058,0.05 -0.967,0.233 -0.127,-0.035 -0.132,-0.134 -0.073,-0.098 -0.045,-0.071 -0.084,-0.191 -0.111,-0.135 -0.164,-0.111 -0.15,-0.128 -0.193,-0.005 -0.522,0.181 -0.362,0.02 -0.242,-0.058 -0.322,-0.11 -0.627,-0.017 -0.429,0.096 -0.043,0.135 -0.396,0.84 -0.576,0.31 -0.5,0.316 -0.145,0.064 -0.249,-0.1 -0.283,-0.187 -0.235,-0.098 -0.172,0.043 -0.187,0.213 -0.086,0.215 -0.566,0.158 -0.985,0.093 -0.344,0.212 -0.117,0.254 -0.005,0.195 0.084,0.166 -0.105,0.193 -0.046,0.081 -0.696,0.042 -0.928,0.057 -0.555,-0.015 -0.522,-0.013 -0.355,-0.166 -0.434,-0.324 -0.459,-0.431 -0.044,-0.01 -0.068,-0.046 -0.288,-0.033 -0.077,0.026 -0.172,-0.141 -0.05,-0.183 -0.268,-0.481 -0.301,-0.794 -0.008,-0.23 0.118,-0.262 0.109,-0.201 0.016,-0.159 0.011,-0.043 0.091,-0.331 0.218,-0.44 0.204,-0.256 0.147,-0.085 0.305,0.077 0.521,0.064 0.401,-0.06 0.374,-0.197 0.203,-0.172 0.173,-0.181 0.058,-0.118 0.077,-0.056 0.309,-0.105 0.099,-0.122 0.04,-0.232 0.027,-0.258 0.063,-0.192 0.08,-0.141 0.572,-0.338 0.052,-0.12 0.091,-0.115 0.17,-0.13 0.164,-0.188 0.174,-0.115 0.223,0.013 0.206,-0.024 0.161,-0.066 0.071,-0.006 0.297,0.053 0.054,0.216 0.031,0.224 0.508,-0.016 0.283,-0.48 0.147,-0.058 0.235,-0.167 0.155,-0.147 0.107,0.091 0.154,0.31 0.164,0.248 0.095,0.098 0.01,0.076 0.095,0.046 0.185,0.027 0.123,0.075 0.036,0.231 0.003,0.208 -0.058,0.149 -0.03,0.132 0.128,0.052 0.188,-0.05 0.132,-0.075 0.397,0.172 0.14,-0.383 0.158,-0.196 0.204,-0.092 0.186,-0.119 0.169,-0.085 0.117,0.005 0.051,-0.036 0.145,0.01 0.169,0.038 0.229,-0.045 0.316,0.094 0.198,0.177 0.194,0.06 0.221,-0.01 0.151,-0.098 0.219,-0.337 0.16,0.005 0.249,-0.053 0.352,0.003 0.812,0.072 0.203,0.129 0.5,0.165 0.218,0.191 0.096,0.227 0.051,0.157 0.512,0.241 0.759,0.307 z\"\n\t\t\t\tid=\"SK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 446.03575,439.1794 -0.007,0.087 -0.081,0.404 -0.126,0.346 -0.083,0.085 -0.357,0.091 -0.152,0.152 -0.131,0.492 -0.084,0.386 -0.123,0.065 -0.524,0.557 -0.343,0.211 -0.239,0.182 -0.227,0.236 -0.285,0.23 -0.306,0.388 -0.218,0.403 -0.149,0.125 -0.112,-0.114 -0.521,-0.397 -0.55,-0.267 -1.171,-0.444 -0.39,-0.125 0.014,-0.158 0.134,-0.289 -0.218,-0.339 0.084,-0.247 -0.084,0 -0.168,0.148 -0.357,-0.043 -0.237,-0.212 -0.193,-0.078 -0.084,-0.106 -0.124,-0.559 -0.089,-0.254 -0.179,-0.157 -0.359,-0.039 -0.148,-0.341 -0.199,-0.265 0.033,-0.163 0.162,0.009 0.127,0.119 0.205,0.049 0.255,-0.287 0.228,-0.156 0.053,-0.136 -0.028,-0.075 -0.138,0.116 -0.378,-0.03 -0.094,0.104 -0.169,0.033 -0.131,-0.335 0.006,-0.198 0.054,-0.217 0.381,-0.038 0.033,-0.07 -0.265,-0.047 -0.331,-0.253 -0.06,-0.175 0.164,-0.059 0.157,0.026 0.136,0.038 0.148,-0.063 0.138,-0.096 0.083,-0.123 0.112,-0.329 0.358,-0.11 0.211,-0.202 0.201,-0.313 0.092,-0.22 0.083,-0.11 0.052,-0.095 0.039,-0.104 0.09,-0.096 0.094,-0.233 0.064,-0.212 0.206,-0.102 0.422,-0.09 0.38,0.154 0.616,-0.134 0.033,-0.199 0.564,-0.003 0.668,-0.004 0.556,-0.003 0.191,0.053 0.069,0.148 0.183,0.232 0.191,0.161 0.237,0.353 0.276,0.411 0.298,0.371 0.191,0.201 0.022,0.07 -0.014,0.08 -0.095,0.188 -0.081,0.204 0.008,0.077 0.057,0.038 0.312,0.063 0.028,0.227 0,0.314 0.151,0.293 0.144,0.215 -0.007,0.077 -0.352,0.367 -0.137,0.365 -0.07,0.103 -0.028,0.082 0.07,0.039 0.097,-0.024 0.136,0.03 0.13,0.011 0.172,-0.131 0.287,-0.335 0.096,-0.041 0.214,0.036 z m -6.295,2.953 -0.041,0.073 -0.187,-0.181 -0.967,-0.271 0.273,-0.144 0.671,-0.043 0.2,0.084 0.089,0.07 0.033,0.133 -0.071,0.279 z\"\n\t\t\t\tid=\"SL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 509.93475,326.2634 -0.165,0.029 -0.083,-0.158 0.124,-0.185 0.176,-0.029 0.031,0.143 z\"\n\t\t\t\tid=\"SM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 440.42975,421.1654 0.264,0.463 -0.057,0.223 -0.06,0.324 0.149,0.236 0.175,0.153 0.125,0.142 0.138,0.194 0.022,0.388 -0.025,0.279 0.09,0.126 0.076,0.16 -0.015,0.132 -0.05,0.118 -0.168,0.156 -0.028,0.289 0.272,0.35 0.175,0.191 -10e-4,0.109 0.049,0.12 0.129,0.14 0.08,-0.033 0.087,-0.114 0.039,-0.079 0.236,0.035 0.11,0.036 0.151,0.229 0.055,0.152 0.036,0.191 0.157,0.238 0.137,0.168 0.028,0.105 0.122,0.142 -0.075,0.315 0.008,0.161 -0.083,0.423 -0.019,0.2 0.006,0.073 0.186,0.151 -0.02,0.213 -0.189,-0.037 -0.328,-0.025 -0.657,0.111 -0.227,-0.045 -0.431,0.015 -0.308,0.061 -0.39,0.139 -0.303,-0.035 -0.164,-0.109 -0.216,0.008 -0.243,-0.059 -0.258,-0.106 -0.237,-0.053 -0.255,-0.195 -0.119,-0.034 -0.084,0.051 -0.071,0.064 -0.073,0.04 -0.139,-0.035 -0.052,-0.132 0.044,-0.128 0.012,-0.097 -0.065,-0.053 -0.155,-0.017 -0.252,0 -0.406,-0.04 -0.092,-0.025 -0.909,-0.033 -0.941,-0.004 -0.798,-0.003 -1.008,-0.005 -0.708,-0.003 -0.661,-0.003 -0.51,0.261 -0.553,0.281 -0.743,0.15 -0.855,-0.056 -0.273,0.041 -0.283,0.125 -0.208,0.09 -0.294,0.055 -0.381,-0.045 -0.154,0.027 -0.095,-0.128 -0.11,-0.208 0.069,-0.152 0.232,-0.098 0.349,-0.128 0.183,0.066 0.107,0.003 0.02,-0.082 -0.034,-0.044 -0.264,-0.111 -0.136,-0.147 -0.113,0.086 -0.098,0.18 -0.081,0.054 -0.119,0.05 -0.067,-0.122 -0.03,-0.119 0.055,-0.093 -0.028,-0.517 0.032,-0.276 -0.017,-0.241 0.165,-0.159 0.157,-0.099 0.611,-0.009 0.569,-0.009 0.548,0.006 0.558,0.005 0.055,-0.483 0.177,-0.038 0.264,-0.05 0.493,-0.059 0.549,-0.056 0.117,-0.095 0.091,-0.16 0.057,-0.144 0.114,-0.061 0.154,0.048 0.201,0.076 0.209,0.116 0.239,0.108 0.159,0.069 0.383,0.17 0.655,0.237 0.538,0.095 0.651,-0.174 0.47,-0.111 0.058,-0.208 -0.073,-0.203 -0.35,-0.186 -0.476,0.021 -0.146,0.05 -0.222,0.062 -0.133,0.024 -0.224,-0.043 -0.285,-0.161 -0.179,-0.162 -0.251,-0.075 -0.297,-0.077 -0.477,-0.333 -0.248,-0.06 -0.236,-0.017 -0.452,0.066 -0.442,0.178 -0.232,0.404 -0.442,-0.006 -0.939,-0.012 -0.862,-0.012 -0.711,0.027 -0.072,-0.293 -0.168,-0.234 -0.274,-0.199 -0.06,-0.186 0.092,-0.162 0.265,-0.132 0.06,-0.096 -0.139,0.015 -0.209,0.086 -0.139,0.004 -0.017,-0.256 -0.232,-0.331 -0.262,-0.561 -0.296,-0.229 -0.249,-0.455 -0.26,-0.174 -0.239,-0.081 -0.204,0.016 -0.075,0.208 -0.254,-0.299 0.347,-0.107 0.743,-0.375 0.853,-1.074 0.765,-1.275 0.099,-0.301 0.094,-0.229 0.061,-0.522 0.11,-0.311 0.103,-0.06 0.13,-0.239 0.156,-0.419 0.178,-0.233 0.198,-0.046 0.155,0.021 0.11,0.086 0.323,0.054 0.535,0.02 0.414,-0.063 0.292,-0.145 0.384,-0.074 0.475,-0.002 0.251,-0.061 0.024,-0.12 0.062,-0.036 0.099,0.047 0.094,-0.019 0.087,-0.086 0.088,-0.005 0.087,0.074 0.398,0.022 0.71,-0.029 0.655,0.22 0.602,0.469 0.311,0.313 0.019,0.157 0.1,0.158 0.18,0.159 0.164,0.029 0.15,-0.1 0.117,0.011 0.084,0.122 0.172,0.025 0.191,-0.075 0.136,0.026 0.025,0.072 0.032,0.039 0.092,0.017 0.124,0.092 0.175,0.249 0.142,0.347 0.109,0.445 0.145,0.242 0.179,0.039 0.105,0.091 0.02,0.106 0.053,0.072 0.086,0.04 0.152,-0.024 0.178,0.15 0.192,0.326 0.03,0.146 -0.03,0.079 0.011,0.058 0.128,0.055 0.12,0.106 0.098,0.16 0.212,0.142 0.326,0.125 0.235,0.186 0.144,0.247 0.298,0.208 z\"\n\t\t\t\tid=\"SN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 591.45675,467.6484 0.013,-0.229 -0.044,-0.114 -0.266,-0.343 -0.497,-0.638 -0.376,-0.483 -0.385,-0.493 -0.002,-0.395 -0.004,-1.175 -0.01,-2.349 -0.008,-2.35 -0.01,-2.35 -0.005,-1.176 -10e-4,-0.481 0.04,-0.078 0.439,-0.431 0.58,-0.572 0.762,-1.085 0.414,-0.591 0.346,-0.491 0.087,-0.15 0.306,-0.298 0.573,-0.178 0.356,-0.03 1.225,-0.223 0.182,-0.09 0.107,-0.103 0.102,-0.235 0.238,-0.33 0.308,-0.228 0.585,-0.296 0.573,-0.251 0.127,-0.041 0.69,-0.158 0.169,-0.054 0.279,-0.055 0.11,-0.002 0.958,0.055 0.75,0.044 0.771,0.044 0.082,-0.034 0.539,-0.586 0.858,-0.935 0.548,-0.596 0.846,-0.922 0.65,-0.666 0.719,-0.736 0.699,-0.674 0.839,-0.811 0.53,-0.511 0.822,-0.794 0.783,-0.757 0.692,-0.669 -0.955,0 -0.933,0 -0.919,0 -0.164,-0.081 -0.772,-0.26 -0.978,-0.329 -1.214,-0.408 -0.865,-0.29 -0.922,-0.305 -0.935,-0.308 -0.734,-0.242 -0.915,-0.302 -0.795,-0.263 -0.109,-0.064 -0.441,-0.401 -0.579,-0.527 -0.111,-0.009 -0.276,-0.11 -0.248,-0.285 -0.256,-0.364 -0.237,-0.456 -0.103,-0.31 -0.317,-0.131 -0.152,-0.245 -0.287,-0.363 -0.199,-0.176 -0.071,-0.154 -0.092,-0.318 -0.164,-0.347 -0.157,-0.214 -0.036,-0.093 0.009,-0.06 0.291,-0.47 0.131,-0.168 0.149,-0.162 0.121,-0.162 0.047,-0.111 0.353,-0.554 0.311,-0.488 0.243,-0.381 0.548,0.436 0.533,0.884 0.621,0.714 0.858,0.662 0.34,0.224 0.301,0.118 1.561,-0.018 1.108,-0.604 1.006,-0.438 0.338,-0.091 0.584,0.12 0.644,0.036 0.579,0.133 0.294,-0.034 1.146,-0.509 0.72,-0.496 0.491,-0.211 0.193,-0.002 0.67,0.179 0.861,-0.078 1.178,-0.428 0.375,-0.087 0.286,-0.006 0.641,0.193 0.1,-0.01 0.347,-0.036 0.915,-0.204 0.713,-0.308 1.313,-0.223 0.999,-0.564 0.175,-0.273 0.302,-0.344 0.438,-0.113 1.12,0.404 0.179,0.032 -0.065,0.244 -0.039,0.249 -0.229,0.434 -0.147,0.482 0.108,0.736 0.052,1.192 -0.027,0.173 -0.074,0.17 -0.031,0.135 -0.121,0.047 -0.053,0.077 0.088,0.03 0.35,-0.129 -0.006,-0.143 0.02,-0.07 0.288,0.159 0.206,0.066 0.06,0.15 -0.016,0.102 -0.327,-0.047 -0.167,-0.079 -0.485,0.13 -0.297,0.14 -0.089,0.234 -0.069,0.932 -0.115,0.604 -0.022,0.799 -0.393,0.528 -0.132,0.372 -0.584,0.746 -0.304,0.636 -0.1,0.311 -0.513,0.872 -0.705,0.668 -0.254,0.853 -0.252,0.535 -0.285,0.484 -0.622,0.862 -0.318,0.598 -0.399,1.038 -0.123,0.656 -1.123,1.904 -1.165,1.516 -0.725,1.275 -1.302,1.478 -1.775,1.907 -2.324,2.262 -0.63,0.461 -2.543,1.395 -1.649,1.168 -0.842,0.795 -0.884,0.692 -0.702,0.659 -2.121,2.222 -0.218,0.209 -0.206,0.197 -0.267,0.377 -0.186,0.149 -0.506,0.636 -0.317,0.329 -0.354,0.326 -0.151,0.23 -0.106,0.265 -0.119,0.147 -0.319,0.632 -0.282,0.414 z\"\n\t\t\t\tid=\"SO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 322.90675,447.9604 -0.236,0.198 -0.257,0.282 -0.338,0.487 0.015,0.153 -0.074,0.124 -0.018,0.218 0.024,0.245 0.087,0.16 0.04,0.304 -0.067,0.274 0.026,0.16 0.068,0.252 0.056,0.27 -0.006,0.108 0.082,0.089 0.076,0.086 -0.024,0.24 0.267,0.428 0.163,0.186 0.238,0.182 0.086,0.177 0.134,0.214 0.08,0.025 0.043,0.086 -0.044,0.165 -0.009,0.229 -0.151,0.266 -0.35,0.487 -0.043,0.113 0.091,0.404 -0.048,0.332 -0.021,0.159 -0.172,0.291 -0.408,0.703 -0.234,0.127 -0.142,0.203 -0.091,0.002 -0.102,0.019 -0.032,0.025 -0.128,-0.002 -0.1,-0.09 -0.016,-0.106 -0.053,-0.122 -0.126,-0.037 -0.238,0.043 -0.069,-0.031 -0.141,-0.13 -0.117,-0.143 -0.03,-0.138 -0.075,0.013 -0.181,0.125 -0.124,0.025 -0.097,-0.032 -0.109,0.009 -0.276,0.134 -0.163,0.03 -0.116,0.135 -0.767,0.061 -0.202,0.035 -0.458,-0.232 -0.118,-0.076 -0.06,-0.011 -0.051,0.012 -0.05,0.052 -0.076,0.292 -0.069,0.079 -0.12,0.065 -0.117,0.116 -0.023,0.113 0.18,0.063 0.15,0.219 0.163,0.176 0.131,0.154 -0.018,0.176 -0.022,0.249 -0.095,0.085 -0.159,0.041 -0.581,-0.12 -0.446,-0.108 -0.187,-0.023 -0.085,-0.028 -0.111,-0.091 -0.113,-0.084 -0.181,-0.031 -0.216,-0.057 -0.16,-0.219 -0.165,-0.311 -0.058,-0.141 -0.129,-0.136 -0.126,-0.194 -0.039,-0.172 -0.095,-0.157 -0.05,-0.053 -0.074,-0.214 -0.016,-0.08 -0.036,-0.01 -0.052,-0.069 -0.102,-0.229 -0.023,-0.057 -0.045,-0.02 -0.119,-0.161 -0.095,-0.056 -0.035,-0.083 0.008,-0.224 -0.051,-0.111 -0.015,-0.211 -0.003,-0.084 -0.049,-0.094 -0.081,-0.061 -0.014,-0.153 -0.02,-0.376 -0.039,-0.066 -0.342,0.005 -0.034,0.037 -0.148,0.022 -0.165,0.004 -0.15,-0.05 -0.123,-0.066 -0.027,-0.082 0.019,-0.261 -0.199,-0.198 -0.315,-0.245 -0.095,-0.311 -0.116,-0.194 -0.349,-0.406 -0.062,-0.278 0,-0.197 0.122,-0.18 0.171,-0.318 0.071,-0.288 0.052,-0.15 0.088,-0.197 0.08,-0.255 -0.061,-0.157 -0.104,-0.153 -0.034,-0.116 0.101,-0.168 0.101,-0.119 0.115,-0.016 0.146,-0.072 0.115,-0.102 0.175,-0.027 0.218,-0.011 0.446,0 0.228,-0.044 0.071,-0.082 -0.011,-0.158 0.113,-0.143 0.119,-0.06 0.048,-0.047 0.007,-0.053 -0.031,-0.048 -0.048,-0.032 -0.124,-0.011 -0.109,-0.248 0.075,-0.108 0.096,-0.199 0.027,-0.113 0.149,-0.176 0.036,0.054 0.115,-0.322 0.014,-0.262 0.088,-0.258 0.135,-0.306 0.243,-0.152 1.415,0.155 0.646,0.146 0.831,0.252 0.118,0.27 0.006,-0.27 -0.041,-0.272 0.23,-0.193 0.504,-0.068 0.755,0.093 0.649,-0.114 0.883,0.014 1.34,0.22 0.6,0.15 0.247,0.136 0.047,0.244 -0.023,0.313 -0.098,0.299 z\"\n\t\t\t\tid=\"SR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 570.20175,435.3384 -0.181,0.361 -0.058,0.257 -0.018,0.216 0.011,0.125 0.02,0.08 0.009,0.019 0.008,0.013 0.008,0.009 0.009,0.003 0.522,0.002 0.003,0 0,0 -0.003,0.115 0.021,0.572 0.018,0.5 0.03,0.817 0.001,0.213 -0.02,0.265 -0.062,0.105 -0.148,0.15 -0.187,0.137 -0.472,0.035 -0.394,-0.005 -0.279,-0.03 -0.382,-0.012 -0.359,0.029 -0.132,0.116 -0.194,0.409 -0.28,0.593 -0.148,0.251 -0.038,0.146 0.044,0.087 0.185,0.126 0.408,0.178 0.467,0.104 0.348,0.045 0.237,0.049 0.183,0.054 0.663,0.454 0.212,0.211 0.119,0.187 0.028,0.199 0.095,0.201 0.383,0.397 0.221,0.229 0.575,0.294 0.221,0.333 0.213,0.161 0.202,0.174 0.108,0.259 0.249,0.751 0.168,0.394 0.172,0.322 0.068,0.523 0.136,0.234 0.14,0.285 0.232,0.258 0.247,0.196 0.045,0.053 -0.516,0.505 -0.579,0.566 -0.669,0.656 -0.729,0.712 -0.571,0.564 -0.563,0.556 -0.658,0.657 -0.486,0.485 -0.081,0.068 -0.141,0.09 -0.463,0.002 -0.478,-0.057 -0.44,-0.295 -0.447,0.229 -0.283,0.072 -0.169,0.026 -0.399,0.037 -0.559,0.123 -0.253,0.153 -0.137,0.121 -0.113,0.223 -0.057,0.023 -0.103,-0.026 -0.143,-0.09 -0.299,-0.129 -0.151,-0.284 -0.138,-0.171 -0.115,-0.09 -0.474,0.283 -0.23,0.066 -0.188,-0.008 -0.344,-0.159 -0.38,-0.136 -0.196,0.001 -0.293,0.17 -0.333,0.254 -0.171,0.251 -0.083,0.149 -0.061,-0.119 -0.056,-0.111 -0.112,-0.142 -0.161,-0.056 -0.146,0.028 -0.171,0.028 -0.077,-0.081 -0.016,-0.195 -0.047,-0.18 -0.08,-0.135 -0.246,-0.135 -0.634,-0.274 -0.487,-0.547 -0.245,-0.254 -0.179,-0.164 -0.254,-0.43 -0.289,-0.296 -0.35,-0.138 -0.231,0.068 -0.238,0.317 -0.449,0.298 -0.206,0.01 -0.264,-0.161 -0.332,-0.115 -0.595,-0.05 -0.246,0.141 -0.322,0.228 -0.273,0.136 -0.169,0.016 -0.158,-0.055 -0.179,-0.029 -0.155,-0.005 -0.318,-0.208 -0.165,-0.153 -0.11,-0.147 -0.18,-0.1 -0.21,-0.084 -0.15,-0.131 -0.075,-0.164 -0.119,-0.21 -0.154,-0.189 -0.486,-0.34 -0.145,-0.201 -0.102,-0.196 -0.198,-0.216 -0.213,-0.289 -0.068,-0.423 -0.009,-0.341 -0.045,-0.158 -0.09,-0.158 -0.105,-0.134 -0.169,-0.15 -0.396,-0.219 -0.41,-0.254 -0.196,-0.148 -0.373,-0.054 -0.223,-0.145 -0.187,-0.319 -0.075,-0.255 -0.189,-0.199 -0.081,-0.144 -0.045,-0.166 0.15,-0.505 -0.217,-0.179 -0.323,-0.232 -0.232,-0.254 -0.141,-0.233 -0.415,-0.308 -0.904,-0.461 -0.522,-0.294 -0.285,-0.264 -0.249,-0.259 -0.025,-0.106 0.161,-0.258 0.024,-0.213 -0.132,-0.234 -0.542,-0.442 -0.432,-0.486 -0.327,-0.152 -0.788,-0.135 -0.226,-0.054 -0.236,-0.093 -0.233,-0.219 -0.079,-0.259 0.114,-0.415 -0.073,-0.127 -0.133,-0.035 0,0 0.036,-0.086 0.149,-0.202 0.243,-0.131 0.651,-0.205 0.036,-0.079 0.013,-0.259 0.053,-0.127 0.224,-0.36 0.032,-0.143 0.01,-0.306 0.03,-0.145 0.065,-0.103 0.178,-0.178 0.062,-0.109 0.027,-0.235 -0.019,-0.464 0.091,-0.184 0.41,-0.422 0.11,-0.189 0.037,-0.169 -0.004,-0.172 0.025,-0.17 0.122,-0.164 0.104,-0.051 0.302,-0.052 0.206,0.033 1.44,-0.289 0.169,0.039 0.075,0.171 -0.007,0.274 0.025,0.133 0.077,0.094 0.229,0.13 0.158,0.218 0.085,0.08 0.231,0.149 1.071,1.244 0.302,0.118 0.293,-0.043 0.582,-0.258 0.291,-0.065 2.036,0.073 0.228,-0.039 0.014,0.006 0.31,0.624 0.147,0.142 2.233,0.007 -0.042,-0.178 0.028,-0.198 0.261,-0.255 0.132,-0.127 0,10e-4 0.056,-0.046 0.345,-0.183 0.337,-0.122 0.648,-0.143 0.236,-0.226 0.131,-0.206 0.004,-0.407 0.086,-0.067 0.154,-0.094 0.749,-0.364 0.127,-0.077 1.324,0.845 0.742,0.669 0.045,0.033 0.039,0.012 0.039,-0.023 0.033,-0.031 0.054,-0.02 0.036,-0.009 0.318,-0.009 0.601,-0.033 0.198,-0.08 1.207,-1.195 0.307,-0.381 0.077,-0.078 0.175,-0.271 0.184,-0.468 0.037,-0.053 1.323,-1.122 0.046,-0.089 0.013,-0.071 -0.2,-0.378 -0.043,-0.192 -0.008,-0.296 0.039,-0.46 -0.014,-0.291 -0.005,-0.034 -0.013,-0.045 -0.009,-0.017 -0.738,-0.828 1.865,-0.008 0.004,-0.069 -0.002,-0.036 -0.005,-0.033 -0.035,-0.099 -0.021,-0.133 -0.001,-0.036 0.003,-0.037 0.01,-0.068 10e-4,-0.037 -0.002,-0.018 -0.003,-0.016 10e-4,-0.015 0.008,-0.012 1.34,0.017 -0.018,0.235 -0.162,0.551 0.003,0.33 -0.039,0.378 -0.009,0.03 -0.037,0.082 -0.032,0.046 -0.037,0.045 -0.01,0.017 -0.012,0.028 -10e-4,0.041 0.278,2.108 -0.011,0.053 -0.01,0.034 -0.074,0.132 -0.019,0.043 -0.004,0.033 0.03,0.023 0.617,0.228 0.03,0.014 0.024,0.018 0.222,0.271 1.215,0.997 0.042,0.05 0.126,0.313 0.014,0.048 0.004,0.074 -0.003,0.058 -0.031,0.188 0.01,0.084 0.021,0.056 0.017,0.065 0,0.019 -0.002,0.017 z\"\n\t\t\t\tid=\"SS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 495.73075,458.5514 -0.104,0.073 -0.124,-0.062 -0.033,-0.111 0.16,-0.214 0.076,-0.053 0.063,0.045 0.038,0.059 0.005,0.086 -0.081,0.177 z m -2.144,4.034 -0.29,0.204 -0.104,-0.053 -0.064,-0.142 -0.081,-0.307 0.026,-0.147 0.131,-0.168 0.285,-0.167 0.171,-0.012 0.176,0.22 0.001,0.229 -0.251,0.343 z\"\n\t\t\t\tid=\"ST\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 224.10075,422.2974 0.071,0.014 0.469,0.147 0.139,-0.029 0.178,0.118 0.085,0.093 0.075,0.128 0.37,0.255 0.062,0.112 0.277,0.151 0.112,0.116 0.118,0.047 0.231,0.045 0.198,0.061 0.023,0.042 0.019,0.172 0.042,0.144 0.094,0.009 0.114,-0.07 0.372,-0.193 0.351,-0.129 0.198,0.077 0.117,0.161 0.134,0.072 0.278,-0.044 0.252,0.014 0.198,0.141 0.046,0.081 -0.122,0.468 -0.044,0.199 -0.021,0.169 0.071,0.045 0.07,0.065 -0.015,0.091 -0.217,0.15 -0.068,0.038 0.05,0.288 -0.161,0.175 -0.148,0.125 -0.26,0.034 -0.441,0.014 -0.664,-0.142 -0.49,-0.194 -0.263,-10e-4 0.083,0.064 0.209,0.041 0.274,0.136 -0.079,0.038 -0.997,-0.284 -1.152,-0.559 -0.689,-0.089 -0.789,-0.146 -0.466,-0.353 -0.35,-0.153 -0.031,-0.134 0.004,-0.148 0.158,-0.199 0.296,-0.268 0.197,-0.139 0.092,-0.027 0.13,0.014 0.124,-0.078 0.107,-0.184 0.112,-0.119 0.284,-0.121 0.065,-0.048 -0.022,-0.103 -0.062,-0.201 0.01,-0.124 0.092,-0.057 0.112,-0.011 0.23,-0.05 0.1,0.01 z\"\n\t\t\t\tid=\"SV\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 297.74075,411.6834 0.314,0 -0.003,0.069 -0.03,0.077 -0.189,-0.065 -0.096,-0.068 z\"\n\t\t\t\tid=\"SX\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 593.77575,351.2754 0,0.047 -0.025,0.121 -0.317,0.348 -0.43,0.472 -0.309,0.298 -0.52,0.5 -0.389,0.107 -0.654,0.18 -0.176,0.174 -0.164,0.282 -0.096,0.385 -0.028,0.24 -0.017,0.448 0.153,0.465 0.147,0.445 0.019,0.294 -0.015,0.289 -0.142,0.309 -0.155,0.423 -0.089,0.477 -0.047,0.891 -10e-4,0.757 -0.013,0.123 -0.269,0.532 -0.314,0.622 -0.146,0.143 -0.689,0.185 -0.752,0.454 -0.841,0.507 -0.763,0.459 -0.801,0.481 -0.831,0.498 -0.594,0.355 -0.795,0.475 -0.724,0.453 -0.733,0.459 -0.558,0.347 -0.846,0.549 -0.496,0.322 -0.729,0.472 -0.642,0.415 -0.759,0.49 -0.952,-0.145 -0.301,-0.085 -0.246,-0.233 -0.181,-0.125 -0.45,-0.128 -0.289,-0.441 -0.173,-0.156 -0.302,-0.07 0.04,-0.158 0.156,-0.266 0.158,-0.29 -0.088,-0.161 -0.029,-0.138 -0.01,-0.164 0.108,-0.157 -0.051,-0.19 -0.083,-0.19 -0.061,-0.096 0,-0.175 0.04,-0.134 0.05,-0.205 0.128,-0.112 0.033,-0.117 0.115,-0.115 0.153,-0.094 0.035,-0.075 -0.022,-0.043 -0.154,-0.085 -0.083,-0.149 0.074,-0.217 0.049,-0.068 0.092,-0.106 0.206,-0.16 0.161,-0.026 0.139,-10e-4 0.236,0.014 0.183,0.029 0.047,-0.042 -0.007,-0.053 -0.226,-0.131 -0.012,-0.105 0.056,-0.112 0.16,-0.178 0.191,-0.13 0.097,-0.023 0.218,-0.262 0.14,-0.293 -0.227,-0.714 -0.136,-0.115 -0.222,-0.098 -0.131,-0.015 -0.01,-0.047 0.175,-0.181 0.124,-0.159 -0.137,-0.15 -0.247,-0.071 -0.091,0.156 -0.316,0.014 -0.49,-0.002 -0.216,-0.758 -0.033,-0.329 0.006,-0.381 0.149,-0.558 -0.07,-0.259 -0.006,-0.175 -0.038,-0.24 -0.387,-0.518 0.211,-0.956 0.149,-0.232 0.21,0.022 0.448,0.272 0.074,-0.008 0.136,-0.358 0.132,-0.121 0.276,-0.107 0.079,-0.58 0.129,-0.111 0.156,-0.06 0.24,-0.012 0.208,-0.034 0.013,-0.102 -0.292,-0.673 0.026,-0.171 0.141,-0.678 0.089,-0.266 0.085,-0.087 0.331,0.034 0.463,0.12 0.123,0.195 0.227,0.174 0.339,-0.012 0.393,0.033 0.306,0.011 0.245,-0.122 0.553,-0.228 0.273,-0.076 0.249,-0.101 0.8,-0.374 0.321,0.029 0.219,0.049 0.168,0.06 0.376,0.255 0.311,0.258 0.219,0.077 0.392,-0.006 0.567,0.05 0.696,-0.004 0.407,-0.072 0.519,-0.127 0.926,-0.305 1.218,-0.639 0.716,-0.311 0.309,-0.037 0.402,-0.003 0.402,0.081 0.456,0.058 0.211,-0.005 0.493,-0.064 0.64,-0.13 0.402,-0.106 0.486,-0.174 0.303,-0.29 0.098,-0.03 0.126,0.053 0.059,0.02 0.124,0.164 z\"\n\t\t\t\tid=\"SY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 564.55775,537.9284 0.056,0.045 0.259,0.143 0.023,0.286 -0.025,0.326 -0.052,0.206 0.02,0.205 0.083,0.32 0.079,0.219 0.019,0.998 -0.088,-0.046 -0.159,-0.043 -0.085,0.02 -0.077,0.449 -0.06,0.667 0.036,0.415 -0.606,0.013 -0.766,-0.045 -0.549,-0.18 -0.592,-0.395 -0.351,-0.616 -0.154,-0.386 -0.215,-0.022 -0.035,-0.066 -0.019,-0.471 0.004,-0.493 0.041,-0.131 0.398,-0.607 0.247,-0.376 0.154,-0.363 0.335,-0.427 0.358,-0.272 0.133,-0.039 0.092,0.011 0.632,0.374 0.648,0.355 0.142,-0.04 z\"\n\t\t\t\tid=\"SZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 273.16475,400.4864 -0.049,0.032 -0.163,-0.104 -0.023,-0.083 -0.058,-0.004 -0.097,-0.075 0.023,-0.097 0.222,-0.004 0.089,0.269 0.056,0.066 z m 0.614,0.226 -0.011,0.041 -0.159,-0.116 -0.305,-0.001 -0.048,-0.159 0.117,-0.026 0.387,0.056 0.088,0.138 -0.069,0.067 z m -1.885,-0.258 0.321,0.166 0.193,-0.025 0.016,0.036 -0.104,0.038 -0.026,0.031 -0.309,0.043 -0.097,-0.008 -0.02,-0.112 0.026,-0.169 z\"\n\t\t\t\tid=\"TC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 542.19575,407.4764 10e-4,1.318 0.001,1.315 10e-4,1.311 10e-4,1.308 10e-4,1.305 10e-4,1.301 0.001,1.298 10e-4,1.296 10e-4,0.428 -0.036,0.17 -0.015,0.024 -0.055,0.029 -0.667,-0.12 -0.292,-0.003 -0.41,0.092 -0.602,0.049 -0.388,-0.015 -0.27,0.222 -0.211,0.268 0.1,0.642 -0.023,0.211 -0.081,0.22 -0.183,0.189 -0.183,0.151 -0.109,0.132 -0.135,0.29 -0.101,0.135 0.009,0.182 -0.032,0.19 -0.11,0.1 -0.279,0.072 -0.181,0.085 -0.145,0.139 -0.097,0.1 0.051,0.133 0.071,0.182 0.04,0.285 0.028,0.167 0.138,0.136 0.084,0.097 0.029,0.119 -0.08,0.099 -0.342,0.206 -0.137,0.077 -0.157,0.105 -0.06,0.039 -0.25,0.196 -0.126,0.174 -0.061,0.144 0.003,0.2 0.127,0.298 0.139,0.253 0.053,0.191 0.032,0.209 -0.012,0.198 -0.072,0.173 -0.125,0.155 -0.471,0.293 -0.231,0.32 -0.186,0.39 -0.046,0.212 0.05,0.142 0.099,0.119 0.139,0.061 0.204,0.018 0.338,-0.065 0.315,-0.043 0.334,0.14 0.174,0.326 -0.067,0.238 0.126,0.432 0.112,0.521 -0.008,0.175 0.049,0.066 0.209,0.034 0.047,0.122 -0.069,0.913 0.097,0.255 0.14,0.182 0.158,0.095 0.16,0.122 0.082,0.084 0.184,0.02 0.207,0.166 0.056,0.221 -0.014,0.214 -0.12,0.462 -0.098,0.311 -0.12,-0.021 -0.244,-0.077 -0.298,-0.066 -0.366,-0.053 -0.348,0.127 -0.376,0.163 -0.118,0.121 -0.105,0.072 -0.166,-0.012 -0.152,0.021 -0.082,0.116 -0.138,0.129 -0.542,0.266 -0.114,0.097 -0.068,0.096 0,0.105 0.055,0.216 -10e-4,0.269 -0.121,0.218 -0.14,0.146 -0.161,0.056 -0.133,0.031 -0.088,0.09 -0.283,0.494 -0.122,0.091 -0.249,-0.015 -0.714,0.739 -0.071,0.218 -0.261,0.309 -0.33,0.343 -0.295,0.166 -0.024,0.064 -0.079,0.065 -0.182,0.074 -0.63,0.418 -0.757,-0.017 -0.334,0.164 -0.325,0.072 -0.476,0.081 -0.142,-0.008 -0.61,0.034 -0.715,-0.012 -0.274,0.059 -0.257,0.158 -0.191,0.139 -0.027,0.047 0.028,0.058 -0.007,0.046 0.5,0.341 0.125,0.167 -0.126,0.162 -0.06,0.024 -0.007,0.01 -0.082,0.128 -0.293,0.384 -0.446,0.454 -0.228,0.13 -0.091,0.085 -0.119,0.301 -0.076,0.042 -0.307,0.039 -0.606,0.033 -0.839,0.098 -0.503,0.033 -0.313,-0.028 -0.44,0.208 -0.157,0.053 -0.096,0.018 -0.436,0.201 -0.362,0.313 -0.129,0.059 -0.51,0.133 -0.203,0.215 -0.093,0.018 -0.327,-0.284 -0.223,-0.257 -0.109,-0.261 -0.013,-0.083 -0.062,0.015 -0.179,0.116 -0.155,0.131 -0.071,0.25 -0.527,0.168 -0.451,0.145 -0.205,0.182 -0.316,0.09 -0.403,-0.037 -0.314,-0.074 -0.307,-0.025 0.147,-0.227 0.057,-0.169 0.014,-0.207 -0.022,-0.14 -0.184,-0.07 -0.116,-0.11 -0.264,-0.653 -0.271,-0.672 -0.382,-0.662 -0.416,-0.423 -0.301,-0.258 -0.096,-0.033 -0.155,-0.081 -0.108,-0.075 -0.552,-0.45 -0.572,-0.504 -0.147,-0.23 -0.286,-0.343 -0.32,-0.354 -0.166,-0.161 -0.077,-0.291 0.22,-0.263 0.236,-0.332 0.29,-0.221 0.376,-0.015 0.619,0.091 0.668,0.032 0.662,-0.069 0.171,-0.048 0.17,0.004 0.356,0.077 0.62,-0.017 0.32,-0.134 -0.345,-0.229 -0.371,-0.363 -0.347,-0.398 -0.211,-0.361 -0.193,-0.465 -0.178,-0.575 -0.109,-0.746 0.016,-0.423 0.056,-0.301 0.186,-0.492 -0.123,-0.288 0.027,-0.233 -0.018,-0.345 -0.06,-0.176 -0.241,-0.573 -0.049,-0.063 -0.213,-0.397 -0.094,-0.664 -0.241,-0.439 -0.387,-0.212 -0.22,-0.259 -0.081,-0.456 -0.153,-0.12 -0.608,-0.159 -0.508,-0.004 -0.369,-0.515 -0.474,-0.663 -0.441,-0.616 -0.282,-1.236 -0.162,-0.708 0.183,-0.215 0.362,-0.505 0.462,-0.968 1.041,-1.499 0.533,-0.769 1.063,-1.15 1.306,-1.416 0.736,-0.8 0.119,-1.46 0.126,-1.548 0.095,-1.173 0.118,-1.395 0.1,-1.168 0.072,-0.853 0.102,-1.211 0.087,-0.233 0.513,-0.953 0.04,-0.128 -0.095,-0.16 -0.732,-0.812 -0.228,-0.181 -0.132,-0.423 0.188,-0.237 -0.88,-1.368 -0.218,-0.168 -0.096,-0.167 -0.011,-0.248 -0.016,-0.95 -0.234,-1.495 -0.308,-1.748 1.034,-0.499 0.785,-0.38 1.002,-0.485 0.928,0.497 1.345,0.718 1.345,0.716 1.344,0.716 1.345,0.715 1.344,0.713 1.345,0.711 1.344,0.711 1.345,0.71 1.344,0.708 1.345,0.707 1.344,0.706 1.345,0.705 1.344,0.704 1.345,0.703 1.344,0.701 z\"\n\t\t\t\tid=\"TD\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 620.36875,609.6544 -0.205,0.036 -0.183,-0.083 -0.104,-0.221 0.231,-0.189 0.119,0.13 0.088,0.145 0.054,0.182 z m 48.693,11.118 0.226,0.024 0.138,-0.039 0.619,-0.563 0.162,-0.014 -0.016,0.431 0.159,0.194 -0.201,0.05 -0.382,-0.021 -0.087,0.247 0.385,0.316 0.192,0.043 0.156,-0.003 0.293,-0.072 0.234,-0.114 0.363,-0.264 0.218,-0.103 0.412,-0.004 0.215,-0.25 0.1,-0.077 0.241,0.011 0.219,0.098 0.131,0.227 0.069,0.276 -0.053,0.274 -0.146,0.267 -0.267,0.163 0.061,0.195 -0.071,0.099 -0.134,0.006 -0.114,-0.045 -0.168,-0.229 -0.202,-0.122 -0.484,0.008 -0.218,0.016 -0.038,0.175 -0.115,0.135 -0.12,0.074 -0.163,-0.032 -0.03,0.074 0.087,0.184 0.212,0.232 0.366,0.162 0.215,0.033 0.029,-0.309 0.26,-0.036 0.229,0.092 0.167,0.228 -0.136,0.075 -0.119,0.121 -0.025,0.156 -0.232,0.17 -0.139,0.019 -0.438,-0.084 -0.261,-0.191 -0.062,-0.136 -0.161,-0.051 -0.181,0.175 -0.194,0.038 -0.38,-0.146 -0.351,-0.234 -0.219,-0.088 -0.341,-0.056 -0.189,0.531 -0.261,0.226 -0.338,0.021 -0.162,-0.044 -0.09,-0.209 0.023,-0.223 0.055,-0.214 0.106,-0.218 0.066,-0.238 -0.028,-0.225 -0.122,-0.164 0.064,-0.295 -0.12,-0.23 0.042,-0.169 0.195,-0.116 -0.083,-0.102 -0.104,-0.026 -0.075,-0.134 -0.058,-0.162 0.076,-0.304 0.113,-0.292 -0.014,-0.329 0.191,-0.311 0.164,-0.348 0.122,-0.138 0.154,-0.021 0.067,0.097 0.033,0.189 -0.061,0.123 0.144,0.056 0.038,0.403 -0.09,0.166 -0.014,0.16 -0.187,0.341 0.054,0.274 0.379,0.12 z m 0.274,-0.216 -0.173,0.033 -0.054,-0.139 0.006,-0.184 -0.096,-0.146 -0.055,-0.162 0.048,-0.153 0.278,-0.018 0.287,0.049 0.073,0.259 -0.207,0.354 -0.107,0.107 z\"\n\t\t\t\tid=\"TF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 477.42275,432.0834 -0.072,0.306 -0.149,0.378 -0.096,0.12 -0.068,0.918 0.047,0.076 0.034,0.023 0.466,0.31 0.611,0.407 0.432,0.287 0.036,0.097 0.007,0.602 0.005,0.517 0.089,0.295 0.019,0.287 0.109,0.216 0.398,0.417 0.095,0.246 0.011,0.788 0.007,0.597 0.051,0.813 0,0.678 0,0.856 0,1.004 0,1.045 -0.263,0.013 0.144,0.325 0.024,0.294 0.034,0.096 -0.071,0.142 0.059,0.217 0.114,0.08 0.292,0.436 0.097,0.369 -0.468,0.123 0.032,0.095 -0.875,0.196 -0.346,0.162 -0.007,-0.156 -0.127,-0.028 -0.155,-0.053 -0.097,-0.081 -0.134,-0.185 -0.048,-0.145 -0.204,-0.023 -0.252,-0.162 -0.24,-0.186 -0.084,-0.186 0.024,-0.085 -0.038,-0.089 -0.082,-0.033 -0.216,-0.42 -0.135,-0.169 -0.062,-0.136 0.022,-0.105 -0.03,-0.142 0.042,-0.115 0.117,-0.068 0.036,-0.084 0.011,-0.177 0.065,-0.364 0.043,-0.358 -0.123,-0.098 -0.15,-0.028 -0.078,-0.103 -0.03,-0.168 0.003,-0.146 0.295,-0.51 -0.061,-1.176 0.044,-0.179 0.135,-0.124 0.114,-0.143 -0.005,-0.143 -0.196,-0.351 -0.373,-0.27 -0.191,-0.218 -0.103,-0.196 -0.017,-0.105 0.226,-0.154 0.1,-0.106 0.013,-0.123 -0.092,-0.223 0.016,-0.399 0.087,-0.299 0.089,-0.387 -0.009,-0.113 -0.219,-0.232 -0.119,-0.031 -0.096,0.016 -0.229,0.152 -0.083,0.016 -0.052,-0.044 -0.023,-0.061 0.081,-0.091 -0.03,-0.113 0.068,-0.099 0.145,-0.045 0.043,-0.05 -0.196,-0.047 -0.023,-0.068 0.014,-0.065 0.057,-0.013 0.061,0.004 0.034,-0.047 0.031,-0.329 0.023,-0.115 0.025,-0.228 0.03,-0.882 0.045,-0.091 0.007,-0.066 -0.138,-0.043 -0.325,-0.237 -0.19,-0.182 -0.166,-0.186 -0.139,-0.123 -0.273,-0.189 -0.08,-0.121 -0.012,-0.12 0.083,-0.242 0.132,-0.257 0.065,-0.369 -0.04,-0.098 -0.179,-0.171 0.639,0.131 0.912,0.221 0.019,0.039 0.006,0.066 0.158,-0.002 0.263,-0.078 z\"\n\t\t\t\tid=\"TG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 755.88775,405.0434 -0.021,0.175 0.069,0.037 0.097,-0.082 0.123,-0.199 0.135,-0.112 0.146,-0.025 0.155,0.136 0.164,0.296 0.168,0.168 0.079,0.019 0.057,0.135 0.009,0.13 -0.08,0.274 -0.135,0.318 -0.193,0.394 0.063,0.331 0.263,0.27 0.313,0.159 0.332,-0.044 0.177,-0.081 0.145,-0.127 0.134,-0.06 0.17,-0.016 0.528,0.093 0.161,0.092 0.024,0.183 -0.065,0.469 0.082,0.344 0.149,0.362 0.018,0.33 -0.185,0.543 -0.154,0.514 -0.166,0.25 -0.129,0.161 -0.038,0.109 0.011,0.103 0.118,0.154 0.126,0.199 0.031,0.19 -0.014,0.233 -0.086,0.32 -0.32,0.693 -0.254,0.625 0.133,0.125 0.252,0.091 0.167,0.089 0.175,-0.057 0.371,-0.369 0.319,-0.274 0.397,-0.274 0.023,-0.024 0.348,-0.202 0.159,-0.186 0.086,-0.237 0.123,-0.091 0.159,0.053 0.202,-0.103 0.245,-0.26 0.188,-0.12 0.131,0.02 0.234,0.161 0.338,0.302 0.3,0.18 0.263,0.058 0.129,0.112 -0.007,0.167 0.059,0.106 0.123,0.045 0.055,-0.018 -0.014,-0.081 0.119,-0.119 0.252,-0.156 0.256,-0.092 0.26,-0.027 0.169,-0.124 0.111,-0.322 0.161,-0.245 0.144,-0.111 0.178,-0.056 0.047,-0.078 -0.086,-0.1 0.008,-0.102 0.103,-0.103 0.221,-0.044 0.34,0.015 0.397,0.104 0.456,0.194 0.299,0.063 0.143,-0.07 0.278,0.3 0.414,0.67 0.354,0.506 0.297,0.342 0.312,0.262 0.327,0.183 0.235,0.249 0.214,0.472 -0.16,0.651 -0.043,0.563 0.02,0.689 0.193,0.528 0.366,0.367 0.213,0.296 0.06,0.226 0.285,0.194 0.511,0.161 0.213,0.146 -0.087,0.131 -0.007,0.152 0.072,0.173 0.178,0.144 0.281,0.113 0.168,0.12 0.053,0.126 -0.006,0.205 -0.065,0.283 -0.117,0.217 -0.17,0.151 -0.021,0.12 -0.044,0.182 0,0.373 0.121,0.248 0.037,0.315 -0.066,0.257 -0.064,0.525 -0.008,0.203 -0.061,0.175 -0.148,0.168 -0.227,0.158 -0.276,0.141 -0.169,0.062 -0.04,0.029 -0.121,0.159 -0.146,0.154 -0.113,0 -0.085,-0.078 -0.06,-0.101 -0.035,-0.221 -0.255,-0.109 -0.28,-0.069 -0.57,0.109 -0.461,0.059 -0.517,-0.075 -0.486,0.094 -0.203,0.014 -0.233,-0.015 -0.226,0.002 -0.215,-0.034 -0.396,-0.135 -0.152,0.011 -0.319,0.112 -0.334,0.078 -0.32,0.054 -0.473,0.23 -0.342,0.333 -0.101,0.235 -0.17,0.237 -0.235,0.375 -0.305,0.359 -0.212,0.164 0.059,0.097 -0.053,0.116 -0.332,0.052 -0.259,0.021 -0.047,0.058 0.031,0.722 0.091,0.273 0.167,0.329 0.109,0.181 0.082,0.534 0.024,0.453 0.365,0.286 0.206,0.218 0.147,0.192 -0.051,0.122 -0.088,0.365 0.085,0.473 0.51,1.02 0.044,0.072 -0.061,0.008 -0.08,-0.196 -0.259,-0.331 -0.08,-0.353 -0.304,-0.389 -0.17,-0.154 -0.055,0.129 -0.097,0.138 -0.298,-0.2 -0.256,-0.209 -0.235,-0.405 -0.03,0.094 -0.053,0.085 -0.268,-0.318 -0.28,-0.254 -0.252,-0.091 -0.155,-0.084 -0.15,-0.135 -0.314,-0.14 -0.782,0.202 -0.995,-0.157 -0.383,0.15 -0.157,-0.093 -0.097,-0.173 0.093,-0.296 0.021,-0.62 0.119,-0.436 -0.056,-0.332 0.058,-0.156 0.044,-0.213 -0.157,-0.087 -0.703,-0.169 -0.148,-0.134 -0.188,0.154 -0.844,0.086 -0.318,0.129 -0.294,0.248 -0.076,0.314 0.17,0.207 0.109,0.359 -0.303,0.784 -0.051,0.233 0.117,0.958 -0.047,0.525 -0.165,0.352 -0.261,0.316 -0.108,0.535 -0.205,0.248 -0.275,0.566 -0.186,0.705 -0.132,0.326 -0.077,0.6 -0.567,0.909 -0.133,0.513 -0.203,0.194 0.071,0.153 0.012,0.256 -0.071,0.683 -0.023,0.566 0.086,0.303 0.271,0.601 -0.064,0.174 -0.032,0.248 0.229,0.112 0.164,0.033 0.926,-0.284 0.313,0.073 0.118,0.265 0.076,0.231 0.157,1.246 0.081,0.231 0.187,0.22 0.205,0.234 0.07,-0.042 0.013,-0.087 0.014,-0.098 0.183,0.236 0.143,0.44 0.488,2.325 0.141,0.295 0.117,0.311 -0.298,-0.151 -0.08,-0.516 -0.085,-0.217 -0.105,-0.032 -0.166,0.004 -0.011,-0.092 0.125,-0.168 -0.02,-0.202 -0.171,-0.166 -0.276,0.132 0.008,0.362 0.123,0.277 0.468,0.62 0.146,0.259 0.186,0.074 0.271,-0.041 0.324,0.264 0.255,0.245 0.633,0.375 0.383,-0.04 0.414,-0.093 0.277,0.024 0.272,0.096 0.327,0.313 0.519,0.784 0.848,0.652 -0.092,0.162 -0.037,0.247 -0.334,0.329 -0.054,0.19 -0.122,0.241 -0.232,0.129 -0.2,0.024 -0.115,-0.023 -0.08,-0.048 -0.136,-0.228 -0.069,-0.069 -0.058,-0.016 -0.427,0.157 -0.413,0.174 -0.076,0.156 -0.11,0.182 -0.12,0.072 -0.095,0.018 -0.091,-0.107 -0.158,-0.139 -0.122,-0.13 0.031,-0.21 0.232,-0.309 0.03,-0.216 -0.029,-0.372 -0.063,-0.214 -0.067,-0.007 -0.114,-0.035 -0.322,0.035 -0.161,-0.242 -0.063,-0.266 -0.11,-0.095 -0.109,-0.058 -0.241,0.092 -0.185,-0.055 -0.613,-0.231 -0.235,-0.373 -0.126,-0.011 -0.111,0.041 -0.044,0.085 -0.065,0.429 -0.053,0.131 -0.703,-0.864 -0.484,-0.356 0.068,-0.645 -0.147,-0.125 -0.184,-0.012 -0.139,-0.179 0.123,-0.384 -0.19,0.073 -0.263,-0.014 -0.216,-0.106 -0.163,-0.532 -0.104,-0.162 -0.225,-0.279 -0.297,0 -0.099,-0.134 0.024,-0.344 -0.217,-0.211 -0.285,-0.172 -0.234,-0.101 -0.239,-0.555 -0.188,-0.136 -0.16,-0.111 -0.223,0.075 -0.073,0.2 -0.148,0.193 -0.169,-0.024 -0.155,-0.11 -0.189,-0.555 -0.031,-0.34 0.042,-0.632 0.236,-0.567 0.127,-0.908 0.201,-0.571 0.141,-0.194 0.193,-0.781 0.395,-0.999 0.045,-0.214 0.08,-0.24 0.06,-0.227 0.02,-0.358 -0.051,-0.188 0,-0.106 0.083,-0.135 0.281,-0.227 0.389,-0.374 0.462,-0.526 0.474,-0.808 0.235,-0.469 0.099,-0.166 0.104,-0.052 0.162,-0.161 0.111,-0.178 0.006,-0.09 -0.257,-0.879 -0.169,-0.287 -0.085,-0.339 -0.046,-0.245 -0.062,-0.225 0.03,-0.212 -0.093,-0.132 -0.21,-0.167 -0.218,-0.249 -0.13,-0.407 0,-0.227 -0.139,-0.199 -0.047,-0.208 0.084,-0.199 0.109,-0.172 -0.013,-0.756 -0.044,-0.226 -0.054,-0.404 -0.142,-0.305 -0.201,-0.357 -0.228,-0.295 -0.596,-0.534 -0.425,-0.357 -0.21,-0.326 -0.267,-0.375 -0.191,-0.27 -0.241,-0.341 -0.123,-0.465 -0.068,-0.496 0.037,-0.164 0.115,-0.108 0.151,-0.087 0.122,-0.02 0.344,-0.228 0.239,0.02 0.056,-0.049 0.023,-0.104 -0.031,-0.452 0.011,-0.605 0.044,-0.493 0.052,-0.325 0.634,-0.378 0.133,-0.164 0.064,-0.177 0,-0.156 -0.054,-0.123 -0.095,-0.068 -0.41,0.326 -0.08,-0.072 -0.188,-0.536 -0.081,-0.164 -0.117,-0.196 -0.126,-0.274 -0.02,-0.474 -0.091,-0.235 -0.512,-0.501 -0.229,-0.27 -0.313,-0.39 -0.375,-0.468 -0.383,-0.433 -0.18,-0.277 -0.063,-0.063 -0.021,-0.107 0.116,-0.298 -0.058,-0.3 -0.19,-0.4 -0.082,-0.248 0.027,-0.095 -0.092,-0.037 -0.213,0.021 -0.204,-0.188 -0.197,-0.396 -0.019,-0.07 0.064,0.001 0.247,0.068 0.084,-0.01 0.175,-0.091 0.265,-0.096 0.157,-0.032 0.052,-0.047 0.022,-0.096 -0.135,-0.916 0.023,-0.191 0.251,-0.396 -0.028,-0.4 0.064,-0.574 0.28,-0.393 0.21,-0.181 0.066,-0.284 0.096,-0.06 0.174,0.022 0.359,0.212 0.153,0.01 0.218,-0.006 0.234,-0.016 0.109,-0.02 0.749,-0.207 0.165,-0.022 0.158,0.026 0.115,-0.01 0.115,-0.095 0.082,-0.167 0.094,-0.536 0.054,-0.095 0.097,-0.076 0.159,-0.051 0.186,0.004 0.243,0.103 0.152,0.004 0.172,-0.043 0.146,-0.074 0.097,-0.094 0.044,-0.113 -0.039,-0.217 -0.111,-0.272 0.031,-0.033 0.204,0.06 0.3,0.067 0.229,-0.015 0.149,-0.047 0.146,-0.129 0.184,-0.119 0.179,0.027 0.139,0.106 0.331,0.2 z m 6.467,24.208 0.009,0.068 -0.146,-0.052 -0.051,0.024 -0.163,-0.019 -0.08,-0.395 0.012,-0.093 0.116,0.029 0.166,0.196 0.085,0.136 0.052,0.106 z m 0.504,0.889 -0.046,0.297 -0.16,-0.122 0.038,-0.15 0.063,-0.068 0.105,0.043 z m -7.106,5.618 -0.027,0.047 -0.109,-0.09 -0.077,-0.102 -0.041,-0.13 0.168,0.005 0.083,0.12 0.003,0.15 z m -0.01,0.313 0.013,0.16 -0.061,0.192 -0.256,0.113 -0.088,-0.154 0.023,-0.237 0.039,-0.06 0.251,0.012 0.079,-0.026 z m -4.948,1.511 -0.159,0.03 0.021,-0.154 0.042,-0.097 0.077,-0.026 0.032,0.166 -0.013,0.081 z m 0.285,3.24 -0.03,0.207 -0.115,-0.003 -0.117,0.133 -0.055,0.018 -0.095,-0.422 0.109,-0.592 0.059,-0.084 0.081,0.157 0.235,0.07 -0.102,0.341 0.03,0.175 z m 0.512,-0.09 -0.033,0.047 -0.143,-0.539 0.211,0.145 -0.035,0.347 z m 1.366,0.962 0.073,0.339 -0.103,-0.069 -0.085,-0.148 10e-4,-0.217 0.021,-0.03 0.093,0.125 z m 1.64,3.006 -0.053,0.017 -0.105,-0.227 0.133,-0.329 0.133,0.403 -0.108,0.136 z\"\n\t\t\t\tid=\"TH\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 674.03775,340.0654 0.009,0.067 -0.041,0.121 -0.583,0.206 -0.265,0.174 -0.057,0.309 -0.07,0.089 -0.118,0.073 -0.117,0.017 -0.179,-0.363 -0.204,-0.075 -0.293,-0.128 -0.569,-0.248 -0.294,-0.108 -0.565,0.162 -0.66,0.222 -0.103,0.135 -0.07,0.145 0.007,0.11 0.048,0.147 -0.033,0.112 -0.124,0.036 -0.187,-0.136 -0.163,-0.079 -0.08,0.186 -0.096,0.33 -0.044,0.24 0.144,0.346 0.049,0.511 0.264,-0.027 0.201,10e-4 0.38,-0.151 0.191,-0.004 0.295,0.066 0.517,0.013 0.408,-0.027 0.099,0.011 0.097,-0.097 0.107,0.034 0.1,0.117 0.413,-0.142 0.307,-0.02 0.188,0.042 0.111,0.042 0.199,0.338 0.152,0.209 0.186,0.067 0.577,-0.062 0.169,-0.295 0.148,-0.073 0.238,-0.022 0.196,-0.057 0.156,-0.121 0.213,-0.106 0.186,-0.021 0.092,0.078 0.04,0.103 -0.032,0.133 -0.007,0.139 0.12,0.093 0.354,0.022 0.167,0.087 0.01,0.164 -0.027,0.257 0.148,0.104 0.077,0.009 0.519,-0.272 0.146,-0.004 0.116,0.15 0.177,0.18 0.232,0.192 0.056,-0.03 0.104,-0.209 0.198,-0.228 0.372,-0.075 0.205,-0.071 0.215,-0.032 0.652,0.092 0.216,0.012 0.449,-0.018 0.353,-0.046 0.284,-0.137 0.144,-0.11 0.233,-0.064 0.295,0.011 0.157,0.032 0.014,0.188 -0.037,0.357 -0.045,0.248 0.233,0.449 0.149,0.216 0.146,0.153 0.027,0.121 -0.03,0.098 -0.181,0.096 -0.065,0.102 -0.03,0.115 0.059,0.133 0.104,0.424 0.134,0.329 0.189,0.158 0.283,0.104 0.155,-0.022 0.111,-0.246 0.186,-0.188 0.157,0.013 0.253,-0.008 0.664,0.213 0.648,0.322 0.188,0.178 0.066,0.2 -0.179,0.462 0.008,0.294 0.041,0.314 0.148,0.232 0.136,0.398 0.026,0.329 0.059,0.098 0.048,0.115 -0.072,0.301 -0.051,0.303 0.061,0.101 0.198,0.149 0.312,0.279 0.06,0.23 -0.111,0.146 -0.198,0.178 -0.254,0.153 -0.075,0.064 -0.045,-0.036 -0.126,-0.155 -0.28,-0.25 -0.199,-0.132 -0.38,0.042 -0.223,-0.046 -0.269,-0.082 -0.251,0.012 -0.158,0.151 -0.102,0.151 -0.251,0.046 -0.361,0.116 -0.56,0.181 -0.27,-0.027 -0.073,-0.078 0.061,-0.104 0.191,-0.135 0.047,-0.163 -0.037,-0.151 -0.179,-0.041 -0.068,-0.024 -0.079,-0.031 -0.346,-0.09 -0.276,0.033 -0.481,0.189 -0.886,0.496 -0.389,0.333 -0.28,0.503 -0.838,0.162 -0.576,0.288 -0.594,0.468 -0.393,0.252 -0.191,0.036 -0.191,-0.045 -0.191,-0.125 -0.187,-0.392 -0.166,-0.594 -0.109,-0.394 0.062,-0.506 0.07,-0.577 0.071,-0.588 0.115,-0.681 0.096,-0.243 0.005,-0.162 -0.085,-0.082 -0.18,0.004 -0.275,0.091 -0.195,0.016 -0.116,-0.059 0.012,-0.317 0.14,-0.577 -0.215,-0.486 -0.572,-0.396 -0.486,-0.138 -0.401,0.121 -0.337,0.314 -0.272,0.507 -0.283,0.414 -0.293,0.321 -0.21,0.155 -0.067,0.06 -0.042,0.136 0.155,0.427 -0.01,0.357 -0.176,0.289 -0.193,0.137 -0.211,-0.013 -0.168,-0.067 -0.124,-0.121 -0.336,-0.033 -0.548,0.055 -0.375,0.144 -0.202,0.234 -0.059,0.308 0.085,0.381 -0.042,0.292 -0.171,0.203 -0.14,0.116 -0.109,0.03 -0.238,-0.175 -0.365,-0.38 -0.251,-0.206 -0.137,-0.031 -0.074,0.021 -0.084,0.04 -0.048,0.049 -0.041,0.113 -0.117,0.045 -0.165,-0.036 -0.151,0.034 -0.091,0.119 -0.254,0.144 -0.448,0.161 -0.245,0.172 -0.041,0.183 -0.066,0.082 -0.138,-0.03 -0.404,0.251 -0.309,-0.078 -0.347,-0.323 -0.192,-0.266 -0.02,-0.112 0.109,-0.255 0.046,-0.851 0.139,-0.295 0.413,-0.53 0.215,-0.405 0.243,-0.33 0.175,-0.11 0.162,-0.26 0.132,-0.298 0.037,-0.188 -0.012,-0.147 -0.048,-0.095 -0.229,-0.202 -0.301,-0.315 -0.16,-0.323 -0.087,-0.412 -0.023,-0.288 0.282,-0.793 -0.045,-0.133 -0.081,-0.123 -0.166,-0.078 -0.237,-0.033 -0.236,0.036 -0.301,0.003 -0.208,-0.045 -0.05,-0.05 -0.026,-0.362 -0.053,-0.079 -0.089,-0.069 -0.607,-0.167 -0.119,-0.072 -0.022,-0.092 0.215,-0.808 0.093,-0.061 0.091,-0.132 0.143,-0.141 0.495,-0.231 0.532,0.1 0.473,0.107 0.472,0.058 0.163,0.039 0.269,0.032 0.181,-0.028 0.123,-0.095 0.222,-0.262 0.068,-0.394 0.08,-0.348 0.135,-0.027 0.136,0.037 0.064,-0.07 0.027,-0.096 0.027,-0.082 0.056,-0.018 0.098,0.09 0.056,-0.024 0.046,-0.061 -0.014,-0.072 -0.11,-0.122 -0.099,-0.191 0.01,-0.066 0.033,-0.069 0.291,-0.065 0.133,-0.012 0.046,-0.068 -0.017,-0.108 -0.11,-0.061 -0.398,0.033 -0.407,-0.007 -0.049,-0.066 0.023,-0.073 0.062,-0.057 0.84,-0.146 0.445,0.051 0.331,0.077 0.13,-0.038 -0.154,-0.33 0.21,-0.031 0.027,-0.113 -0.275,-0.879 0.151,-0.078 0.151,-0.173 -0.013,-0.329 0.134,-0.16 0.159,-0.11 0.236,0.111 0.366,0.325 0.118,0.063 0.118,0.018 0.17,-0.101 0.652,-0.321 0.366,-0.181 0.438,-0.263 0.075,-0.102 0.15,-0.401 0.082,-0.027 0.111,0.043 0.384,0.415 0.222,0.266 0,0.091 -0.063,0.068 0.012,0.066 0.314,0.144 0,0.065 -0.071,0.125 -0.038,0.069 -0.039,0.029 -0.42,0.362 -0.466,0.402 -0.016,0.052 -0.021,0.1 0.005,0.102 0.075,0.084 0.201,0.059 0.179,0.076 0.091,0.21 0.104,0.194 0.141,0.048 0.691,-0.123 0.159,-0.013 z m -0.857,-2.568 -0.084,0.008 -0.151,-0.175 -0.053,-0.123 0.062,-0.037 0.13,0.085 0.087,0.151 0.009,0.091 z m 0.138,4.078 -0.252,0.14 -0.147,-0.015 -0.114,-0.136 -0.083,-0.127 -0.018,-0.072 0.042,10e-4 0.194,0.058 0.272,0.04 0.096,0.035 0.01,0.076 z\"\n\t\t\t\tid=\"TJ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 1001.1707,486.9334 -0.013,0.006 -0.013,-0.032 -0.017,-0.035 -0.013,-0.032 0,-0.004 0.027,0.027 0.018,0.032 0.01,0.038 z m 3.628,2.187 -0.01,0.008 -0.013,-0.017 -0.02,-0.022 -0.013,-0.032 0.01,-0.002 0.021,0.018 0.015,0.022 0.01,0.025 z\"\n\t\t\t\tid=\"TK\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 827.51975,485.6914 -0.188,0.484 -0.203,-0.103 0.216,-0.272 0.104,-0.081 0.071,-0.028 z m -1.623,3.871 -0.097,-0.368 -0.103,-0.158 -0.08,-0.09 -0.027,-0.112 0.004,-0.115 0.049,-0.053 0.346,-0.015 0.137,-0.189 -0.001,-0.227 -0.069,-0.077 -0.067,-0.032 -0.356,0.17 -0.103,-0.031 -0.061,-0.062 0.02,-0.251 0.294,-0.235 0.249,-0.426 0.175,-0.17 0.407,-0.159 0.165,-0.045 1.186,-0.235 0.283,-0.016 0.751,0.007 1.006,-0.051 0.248,-0.032 0.322,-0.104 0.313,-0.128 0.165,-0.101 0.174,-0.073 0.259,0.092 0.438,0.069 0.118,0.061 0.109,0.084 -0.509,0.448 -0.56,0.372 -0.345,0.112 -0.356,0.076 -0.272,0.144 -0.229,0.225 -0.293,0.126 -0.33,0.043 -0.283,0.067 -0.256,0.132 -0.355,0.227 -0.145,0.023 -0.152,-0.005 -0.295,0.087 -0.919,0.324 -0.555,0.361 -0.4,0.31 z m -2.895,-0.481 0.454,-0.241 0.691,-0.186 -0.018,0.136 -0.07,0.214 -0.104,0.101 -0.158,0.181 -0.104,0.04 -0.414,-0.04 -0.054,0.026 -0.071,-0.019 -0.105,-0.116 -0.047,-0.096 z\"\n\t\t\t\tid=\"TL\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 661.58975,350.4334 -0.142,0.013 -0.341,-0.082 -0.679,-0.164 -0.583,-0.329 -0.381,-0.215 -0.06,0.029 -0.171,0.147 -0.117,0.181 -0.093,0.35 -0.149,0.412 -0.705,0.016 -0.601,0.031 -0.388,0.156 -0.38,0.215 -0.095,0.255 -0.082,0.331 -0.222,0.749 -0.201,0.682 -0.104,0.441 -0.153,0.302 -0.43,0.397 -0.487,0.267 -0.259,0.125 -0.114,0.156 -0.025,0.147 -0.092,0.045 -0.201,-0.026 -0.212,0.025 -0.466,0.154 -0.504,0.189 -0.604,0.188 -0.345,0 -0.137,0.042 -0.061,0.095 0.061,0.179 0.059,0.133 0.053,0.172 -0.142,0.139 -0.099,0.239 -0.077,0.42 -0.214,0.125 -0.344,0.204 -0.379,0.268 -0.098,0.055 -0.218,0.076 -0.217,-0.023 -0.197,-0.039 -0.214,0.069 -0.222,0.207 -0.103,-0.063 -0.052,-0.209 -0.111,-0.136 -0.347,-0.307 -0.297,-0.219 -0.128,-0.015 -0.272,0.057 -0.341,0.041 -0.277,-0.044 -0.22,-0.088 -0.339,-0.302 -0.124,-0.163 -0.093,-0.125 -0.231,0.034 -0.065,-0.136 -0.009,-0.16 0.064,-0.193 -0.019,-0.365 -0.13,-0.262 -0.148,-0.114 0.019,-0.08 0.065,-0.183 0.083,-0.16 -0.001,-0.316 -0.104,-0.343 -0.041,-0.497 0.026,-0.485 -0.141,-0.245 -1.156,-10e-4 -1.028,0.019 -0.058,-0.056 -0.4,-0.613 -0.324,-0.466 -0.32,-0.275 -0.733,-0.339 -0.351,-0.142 -0.301,-0.259 -0.246,-0.285 -0.063,-0.39 -0.05,-0.128 -0.071,-0.104 -0.077,-0.046 -0.094,0.01 -0.852,-0.454 -0.342,-0.12 -0.322,0.096 -0.142,0.017 -0.28,-0.129 -0.322,0.175 -0.137,0.011 -0.192,-0.042 -0.159,-0.065 -0.429,-0.415 -0.36,-0.167 -0.259,-0.107 -0.499,-0.158 -0.531,-0.082 -0.273,-0.068 -0.196,-0.091 -0.051,-0.059 0.003,-0.152 -0.015,-0.2 -0.065,-0.146 -0.135,-0.175 -0.187,-0.131 -0.322,0.023 -0.483,-0.011 -0.37,-0.131 -0.294,-0.023 -0.354,0.025 -0.29,0 -0.207,0.096 -0.12,0.112 -0.076,0.342 -0.07,0.051 -0.121,0.025 -0.161,-0.018 -0.34,0.003 -0.587,-0.061 -0.737,-0.018 -0.555,0.173 -0.438,0.248 -0.418,0.279 -0.492,0.44 -0.145,0.196 -0.29,0.779 -0.129,0.112 -0.168,0.089 -0.17,0.016 -0.338,0.115 -0.446,0.19 -0.303,0.074 -0.779,-0.039 -0.046,-0.247 -0.14,-0.902 -0.068,-0.914 0.004,-0.422 0.082,-0.849 -0.007,-0.429 -0.033,-0.389 0.032,-0.382 0.063,-0.43 0.032,-0.438 -0.047,-0.306 -0.15,-0.247 -0.255,-0.306 -0.04,-0.182 -0.015,-0.202 -0.244,-0.023 -0.22,-0.209 -0.181,-0.114 -0.39,-0.127 -0.194,-0.006 -0.179,0.093 -0.131,0.187 -0.092,-0.295 0.003,-0.309 0.311,-0.639 0.195,0.187 0.237,0.075 0.302,0.011 0.297,-0.049 -0.058,-0.219 -0.138,-0.125 -0.172,-0.098 -0.061,-0.29 0.021,-0.301 0.081,-0.285 -0.093,-0.115 -0.14,-0.071 -0.325,0.008 -0.421,-0.075 -0.424,-0.033 -0.1,0.336 0.234,0.44 -0.198,-0.216 -0.188,-0.286 -0.262,-0.516 -0.169,-0.606 -0.03,-0.656 0.143,-0.543 0.184,-0.512 0.11,-0.657 0.152,-0.646 0.151,0.29 0.174,0.26 0.24,0.239 0.132,0.057 0.396,0.099 0.255,-0.037 0.271,-0.142 0.267,0.046 0.221,0.266 0.196,0.298 0.298,0.063 0.614,-0.215 0.292,-0.049 0.254,0.099 0.131,0.018 0.133,-0.017 -0.115,-0.264 -0.047,-0.257 0.154,-0.136 0.484,0.145 0.309,-0.096 0.079,-0.054 0.069,-0.067 0.037,-0.222 -0.015,-0.229 -0.04,-0.215 -0.09,-0.189 -0.223,-0.265 -0.863,-0.633 -0.291,-0.253 -0.242,-0.328 -0.154,-0.463 -0.125,-0.484 -0.116,-0.36 -0.301,-0.838 -0.117,-0.1 -0.147,-0.044 -0.357,-0.026 -0.362,0.061 -0.592,0.145 -0.339,-0.045 -0.157,0.089 -0.388,0.354 -0.182,0.302 -0.254,0.69 0.192,0.222 -0.004,0.146 -0.146,1.014 0.089,0.491 -0.032,0.036 -0.069,-0.114 -0.22,-0.5 -0.387,-0.612 -0.324,-0.939 0.569,-0.616 0.487,-0.438 0.398,-0.264 0.122,-0.064 0.545,-0.219 0.703,-0.198 0.519,-0.146 0.676,-0.125 0.222,-0.023 0.325,0.002 0.264,0.117 0.159,0.092 0.564,0.377 0.575,0.384 0.494,0.425 0.14,0.173 0.078,0.207 0.059,0.203 0.419,0.642 0.17,0.293 0.245,0.381 0.197,0.186 0.192,0.229 0.129,0.188 0.147,0.089 0.164,0.035 0.374,-0.06 0.45,-0.119 0.269,-0.05 0.12,0.007 0.742,0.042 0.668,0.038 0.824,0.047 0.245,0.044 0.294,0.041 0.146,0.006 0.13,-0.163 0.086,-0.089 0.067,-0.071 -0.014,-0.08 -0.104,-0.068 -0.164,-0.226 -0.094,-0.817 -0.059,-0.702 0.195,-0.219 0.225,-0.159 0.323,-0.479 0.174,-0.148 0.255,-0.123 0.854,-0.032 0.36,-0.094 0.116,-0.155 0.189,-0.394 0.063,-0.321 0.106,-0.147 0.127,-0.109 0.131,0.004 0.253,0.094 0.192,0.053 0.137,0.071 0.125,0.114 0.121,0.197 0.019,0.13 0.056,0.075 0.097,0.001 0.072,10e-4 0.049,-0.028 0.031,-0.066 -0.024,-0.088 -0.165,-0.252 -0.363,-0.457 -0.237,-0.187 -0.118,-0.101 -0.029,-0.096 0.154,-0.145 0.149,-0.083 0.262,0.062 0.349,0.034 0.154,-0.073 0.159,-0.368 0.396,0.39 0.412,0.436 0.151,0.081 0.295,0.046 0.245,0.016 0.103,0.047 0.11,0.113 0.218,0.476 0.218,0.125 0.271,0.09 0.875,-0.008 0.269,0.024 0.219,0.223 0.137,0.092 0.059,0.079 -0.015,0.098 -0.054,0.125 -0.007,0.24 -0.014,0.186 -0.07,0.088 -0.021,0.082 0.058,0.072 0.405,0.176 0.137,0.189 0.103,0.084 0.024,0.118 -0.068,0.078 -0.19,-0.039 -0.093,0.124 0,0.222 0.136,0.208 0.04,0.19 -0.09,0.183 -0.105,0.258 -0.003,0.182 0.062,0.104 0.311,0.188 0.715,0.474 0.165,0.02 0.677,-0.11 0.315,-0.011 0.186,0.074 0.524,0.067 0.166,0.076 0.178,0.005 0.242,-0.022 0.164,-0.212 0.084,-0.048 0.074,-0.035 0.149,-0.005 0.414,0.135 0.437,0.284 0.288,0.259 0.143,0.234 0.18,0.506 0.218,0.777 0.262,0.523 0.308,0.271 0.216,0.498 0.188,1.083 0.116,0.221 0.119,0.115 0.352,0.312 0.719,0.516 0.424,0.304 0.656,0.484 0.602,0.443 0.603,0.682 0.12,0.1 0.53,0.368 0.59,0.376 0.413,-0.085 0.622,0.578 0.253,0.214 0.107,0.073 0.451,0.228 0.718,0.476 0.906,0.68 0.6,0.393 0.162,0.046 0.162,-0.002 0.173,-0.084 0.188,-0.066 0.32,0.087 0.347,0.157 0.221,0.119 0.254,0.172 0.201,0.164 0.152,0.075 0.519,0.143 0.089,0.085 0.057,0.095 0.009,0.099 -0.292,0.518 -0.039,0.659 -0.002,0.495 0.035,0.381 z m -37.643,-5.165 -0.026,0.168 -0.152,-0.506 -0.076,-0.559 0.097,-0.158 0.109,0.009 -0.104,0.202 0.152,0.844 z\"\n\t\t\t\tid=\"TM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 507.18275,364.6964 -0.006,0.088 -0.099,0.633 -0.022,0.227 -0.015,0.385 0,0.462 0.224,0.39 0.006,0.171 -0.087,0.198 -0.413,0.226 -0.533,0.292 -0.458,0.277 -0.502,0.304 -0.154,0.196 -0.249,0.151 -0.208,0.151 -0.038,0.145 -0.146,0.273 -0.19,0.218 -0.477,0.103 -0.088,0.065 -0.221,0.328 -0.102,0.128 -0.126,0.269 0.162,0.696 0.198,0.714 0.039,0.297 -0.003,0.247 -0.111,0.266 -0.254,0.38 -0.186,0.279 -0.357,0.501 -0.105,0.124 -0.246,0.146 -0.475,0.193 -0.335,0.171 -0.17,-0.764 -0.146,-0.653 -0.12,-0.54 -0.211,-0.953 -0.18,-0.812 -0.179,-0.811 -0.163,-0.738 -0.164,-0.745 -0.07,-0.109 -0.491,-0.352 -0.452,-0.325 -0.471,-0.37 -0.51,-0.401 -0.082,-0.506 -0.262,-0.766 -0.276,-0.428 -0.104,-0.112 -0.557,-0.277 -0.321,-0.204 -0.088,-0.119 -0.062,-0.313 -0.229,-0.624 -0.261,-0.568 -0.096,-0.385 -0.013,-0.485 0.051,-0.351 0.114,-0.15 0.544,-0.438 0.252,-0.527 0.312,-0.198 0.27,-0.149 0.219,-0.174 0.194,-0.279 0.148,-0.298 0.025,-0.323 0.062,-0.513 0.099,-0.359 0.23,-0.407 -0.097,-0.328 -0.122,-0.354 0.035,-0.615 -0.031,-0.25 -0.099,-0.221 -0.101,-0.284 -0.003,-0.237 0.097,-0.623 0.074,-0.477 0.118,-0.621 -0.042,-0.174 -0.088,-0.13 -0.264,-0.137 -0.003,-0.083 0.064,-0.092 0.39,-0.304 0.209,-0.447 0.175,-0.093 0.266,-0.162 -0.01,-0.174 -0.06,-0.187 0.693,-0.211 0.66,-0.554 0.233,-0.136 1.532,-0.512 0.199,0.035 0.223,0.075 -0.064,0.191 -0.088,0.151 0.13,0.267 0.186,-0.163 -0.047,-0.109 -0.011,-0.145 0.315,-0.013 0.279,0.023 0.306,0.159 -0.021,0.603 0.408,0.589 -0.115,0.293 0.334,0.173 0.297,-0.208 0.149,-0.307 0.547,-0.178 0.52,-0.452 0.288,-0.046 0.065,0.371 0.139,0.324 -0.197,0.114 -0.25,0.344 -0.475,0.87 -0.437,0.255 -0.328,0.334 -0.106,0.237 -0.032,0.276 0.082,0.494 0.239,0.501 0.276,0.302 0.266,0.094 0.619,0.476 -0.01,0.282 0.086,0.335 0.033,0.407 0.215,0.325 -0.46,0.706 -0.252,0.509 -0.492,0.7 -0.438,0.454 -0.938,0.673 -0.23,0.223 -0.15,0.231 -0.069,0.241 0.025,0.283 0.309,0.695 0.411,0.409 0.418,0.221 0.727,-0.089 -0.025,0.267 0.052,0.319 0.295,-0.015 0.198,-0.05 0.167,-0.311 0.355,0.213 0.185,0.648 0.301,0.202 0.035,0.075 -0.106,0.05 -0.083,0.074 0.089,0.053 0.291,0.08 0.176,-0.051 0.298,0.149 z m -0.636,-5.294 -0.433,0.245 0.083,-0.213 0.286,-0.258 0.074,0.062 -0.01,0.164 z m -0.899,3.486 -0.074,0.016 -0.136,0.091 -0.072,0.01 -0.204,-0.103 -0.078,10e-4 -0.098,-0.072 0.033,-0.392 0.032,-0.111 0.496,-0.015 0.269,0.235 0.044,0.062 0.011,0.067 -0.125,0.131 -0.098,0.08 z\"\n\t\t\t\tid=\"TN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 997.03275,515.8364 -0.106,0.174 -0.051,-0.002 -0.123,-0.101 -0.045,-0.068 0.188,-0.205 0.097,-0.016 0.13,0.069 -0.006,0.058 -0.084,0.091 z m -3.392,7.508 0.04,0 0.044,-0.088 0.151,-0.032 -0.017,0.095 -0.204,0.308 -0.128,-0.12 -0.374,-0.197 -0.075,-0.152 0.124,-0.115 -0.013,0.093 0.063,0.042 0.211,0.016 0.188,0.083 -0.117,0.027 0.107,0.04 z m 0.699,0.392 -0.016,0.45 -0.137,-0.206 -0.016,-0.096 0.139,-0.139 0.03,-0.009 z\"\n\t\t\t\tid=\"TO\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 553.51775,333.6454 -0.076,0.429 0.177,0.472 0.414,0.653 0.417,0.329 1.685,0.812 0.31,0.069 -0.07,0.332 -0.102,0.294 -0.111,0.196 -0.494,0.126 -1.362,-0.361 -0.345,-0.034 -0.243,0.072 -0.45,0.262 -0.499,-0.084 -0.696,0.148 -0.194,0.493 -0.483,0.563 -0.795,0.454 -0.568,0.243 -0.854,0.868 -0.387,0.505 -0.163,0.098 -0.194,0.078 0.065,-0.243 0.096,-0.222 -0.022,-0.168 0.004,-0.244 0.284,-0.277 0.259,-0.201 0.765,-0.365 0.202,-0.304 -0.6,0.007 -0.61,0.067 -0.383,-0.043 -0.334,0.025 -0.105,-0.266 -0.081,-0.16 0.087,-0.05 0.11,-0.035 0.196,-0.284 0.175,-0.209 0.252,-0.264 0.064,-0.158 0,-0.147 -0.061,-0.102 -0.012,-0.122 -0.008,-0.171 0.014,-0.355 0.578,-0.388 0.185,-0.041 0.063,-0.178 -0.042,-0.412 -0.08,-0.333 -0.104,-0.022 -0.139,-0.097 -0.091,-0.113 -0.146,-0.123 -0.251,-0.076 -0.008,-0.105 0.026,-0.105 0.093,-0.108 0.424,-0.093 0.05,-0.076 0.057,-0.188 0.084,-0.192 0.1,-0.063 0.179,0.006 0.34,-0.044 0.237,-0.063 0.235,-0.132 0.121,-0.12 0.51,-0.069 0.143,-0.061 0.142,0.052 0.191,0.205 0.314,0.294 0.168,0.098 0.126,-0.045 0.228,-0.107 0.218,0 0.176,0.019 0.085,-0.093 0.133,-0.02 0.381,0.067 z m 37.875,1.692 0.186,0.075 0.352,0.096 0.218,0.116 0.124,0.031 0.287,-0.236 0.426,0.006 0.375,0.027 0.193,0.044 0.237,0.078 0.286,0.053 0.117,-0.113 0.167,-0.333 0.065,-0.042 0.046,-0.03 0.212,-0.026 0.201,0.025 0.095,0.057 0.095,0.267 0.239,0.095 0.422,0.425 0.258,0.17 0.063,0.071 -0.085,0.086 0.034,0.106 0.147,0.138 0.207,0.052 0.224,-0.019 0.122,0.05 0.087,0.078 0.023,0.11 -0.006,0.07 0.044,0.157 0.175,0.222 0.208,0.136 0.112,0.145 0.182,0.499 0.074,0.275 -0.028,0.265 -0.126,0.271 -0.276,0.337 0.068,0.141 0.062,0.186 -0.021,0.135 0.196,0.43 0.089,0.267 -0.074,0.062 -0.048,0.085 0.352,0.205 0.422,0.172 0.178,0.033 0.484,-0.079 0.312,-0.017 0.31,0.163 0.451,0.395 0.487,0.514 0.097,0.156 0.042,0.069 0.095,0.124 -0.099,-0.002 -0.16,-0.111 -0.387,-0.316 -0.198,0.136 -0.171,0.234 -0.187,0.887 -0.151,0.094 -0.267,-0.002 -0.327,-0.031 -0.225,0.044 -0.058,0.056 0.03,0.095 0.067,0.146 0.047,0.184 0.014,0.15 0.118,0.136 0.159,0.129 0.007,0.132 -0.024,0.187 -0.037,0.142 -0.04,0.081 0.074,0.216 0.173,0.255 0.11,0.098 -0.041,0.485 0.065,0.215 0.05,0.296 -0.02,0.492 0.021,0.121 0.059,0.041 0.158,0.019 0.154,0.045 0.054,0.081 -0.001,0.059 -0.193,0.225 -0.023,0.16 -0.067,0.225 -0.055,0.132 -0.172,0.25 -0.109,0.254 -0.05,0.209 0.033,0.099 0.318,0.03 0.172,0.15 0.459,0.299 0.081,0.121 -0.125,0.184 0.002,0.077 0.06,0.098 0.028,0.171 -0.011,0.189 0.002,0.25 0.084,0.041 0.312,0.234 0.222,0.234 0.007,0.073 -0.107,0.185 0.023,0.213 -0.004,0.049 -0.096,-0.08 -0.173,-0.029 -0.178,-0.009 -0.112,0.063 -0.196,0.167 -0.264,0.182 -0.214,0.167 -0.123,0.115 -0.102,-0.019 -0.079,-0.1 -0.044,-0.14 0.019,-0.529 -0.047,-0.166 -0.1,-0.116 -0.118,-0.066 -0.14,-0.037 -0.145,-0.004 -0.205,0.155 -0.291,0.161 -0.451,-0.013 -0.303,-0.03 -0.146,-0.03 -0.587,-0.246 -0.122,-0.006 -0.219,-0.1 -0.26,-0.079 -0.438,0.15 -0.189,-0.036 -0.265,-0.13 -0.094,0.035 -0.296,0.396 -0.504,0.423 -0.272,0.071 -0.129,-0.425 -0.125,-0.165 -0.059,-0.02 -0.126,-0.053 -0.098,0.03 -0.303,0.29 -0.486,0.174 -0.402,0.106 -0.64,0.129 -0.494,0.064 -0.21,0.005 -0.456,-0.058 -0.402,-0.081 -0.402,0.003 -0.309,0.037 -0.716,0.311 -1.218,0.639 -0.926,0.305 -0.519,0.127 -0.407,0.072 -0.696,0.004 -0.567,-0.049 -0.393,0.005 -0.218,-0.077 -0.311,-0.258 -0.376,-0.255 -0.168,-0.06 -0.219,-0.049 -0.32,-0.029 -0.8,0.374 -0.249,0.102 -0.274,0.076 -0.553,0.228 -0.245,0.122 -0.307,-0.011 -0.392,-0.032 -0.34,0.011 -0.227,-0.173 -0.123,-0.195 -0.463,-0.12 -0.331,-0.035 -0.085,0.087 -0.088,0.266 -0.141,0.679 -0.026,0.17 0.292,0.673 -0.013,0.102 -0.208,0.035 -0.239,0.012 -0.156,0.06 -0.129,0.111 -0.078,0.58 -0.277,0.106 -0.132,0.121 -0.136,0.358 -0.074,0.008 -0.448,-0.271 -0.21,-0.022 0.181,-0.281 -0.196,-0.557 -0.214,-0.522 0.202,-0.334 0.418,-0.404 0.439,-0.474 0,-0.293 -0.023,-0.224 -0.126,-0.155 -0.242,-0.206 -0.405,0.22 -0.289,0.243 -0.189,0.049 -0.205,0.138 -0.1,0.25 -0.248,0.194 -0.405,0.076 -0.609,-0.208 -0.654,-0.316 -0.37,-0.257 -0.302,-0.062 -0.287,0.113 -0.847,0.628 -0.775,0.916 -0.192,0.158 -0.73,0.393 -0.482,0.131 -0.227,-0.03 -0.961,0.172 -0.477,0.025 -0.378,0.207 -0.733,-0.224 -0.438,-0.287 -0.264,-0.292 -0.43,-0.629 -0.305,-0.299 -0.685,-0.27 -1.194,-0.656 -0.314,-0.072 -0.815,-0.094 -0.859,-0.06 -0.174,0.239 -0.066,0.945 -0.147,0.259 -0.063,0.489 -0.105,0.14 -0.165,0.092 -0.258,-0.154 -0.179,-0.068 -0.417,0.201 -0.825,0.281 -0.281,0.04 -0.956,-0.354 -0.35,-0.228 -0.226,-0.252 -0.076,-0.427 -0.142,-0.243 -0.021,-0.167 -0.056,-0.192 -0.193,-0.076 -0.207,0.146 -0.222,-0.006 -0.278,-0.089 -0.657,-0.359 -0.504,-0.029 -0.304,0.438 -0.236,0.139 -0.258,0.042 -0.015,-0.124 0.196,-0.284 -0.787,0.052 -0.415,0.216 -0.324,-0.034 -0.243,-0.097 0.036,-0.119 0.246,-0.044 0.214,-0.097 0.852,-0.079 0.199,-0.079 0.218,-0.309 0.396,-0.266 0.051,-0.114 -0.305,-0.001 -1.306,0.077 -0.896,-0.042 -0.106,0.132 -0.135,0.019 -0.037,-0.359 0.142,-0.167 0.19,0.016 0.469,-0.145 -0.042,-0.299 -0.335,-0.202 -0.068,-0.12 -0.244,-0.028 -0.197,-0.143 -0.043,-0.36 -0.157,-0.396 -0.224,-0.191 0.028,-0.105 0.411,-0.134 0.085,-0.555 -0.063,-0.341 -0.207,-0.029 -0.603,-0.27 -0.183,0.029 -0.2,-0.297 -0.35,-0.213 -0.173,0.078 -0.109,0.097 -0.162,-0.046 -0.271,-0.185 -0.267,-0.1 -0.118,-0.124 0.148,-0.331 0.204,0.008 0.037,-0.259 -0.161,-0.433 0.016,-0.223 0.178,-0.061 0.203,0.042 0.205,0.259 0.067,0.25 -0.043,0.244 0.13,0.236 0.093,0.06 0.062,-0.249 0.087,-0.047 0.12,0.108 0.257,0.054 0.666,-0.152 0.128,-0.129 -0.488,0.015 -0.178,-0.121 -0.194,-0.271 -0.119,-0.246 -0.021,-0.121 -0.067,-0.177 0.074,-0.095 0.334,-0.142 0.293,-0.399 -0.123,-0.115 -0.14,-0.055 -0.152,0.041 -0.144,-0.137 -0.019,-0.19 0.115,-0.154 0.012,-0.212 -0.377,-0.523 -0.105,-0.114 0.082,-0.171 0.288,-0.287 0.274,-0.356 -0.033,-0.117 -0.203,-0.048 -0.962,0.153 -0.374,0.132 -0.667,0.061 -0.048,-0.194 0.015,-0.174 0.15,-0.318 -0.014,-0.786 0.089,-0.427 0.371,-0.128 0.455,-0.629 0.737,-0.744 0.77,0.014 0.308,-0.206 0.457,-0.012 0.083,0.149 0.052,0.143 0.401,0.206 0.708,-0.033 0.172,-0.081 0.167,-0.113 -0.328,-0.366 0.104,-0.104 0.297,-0.012 0.322,0.086 0.015,0.084 -0.085,0.115 -0.1,0.201 0.095,0.039 0.916,-0.122 0.958,0.098 0.305,-0.053 0.753,0.004 0.135,-0.126 -0.228,-0.159 -0.223,-0.055 -0.15,-0.077 -0.15,-0.113 0.478,-0.355 0.27,-0.068 1.273,-0.219 0.947,-0.109 0.012,-0.082 -0.137,0 -1.223,-0.182 -0.295,-0.14 -0.409,-0.335 -0.089,-0.095 -0.103,-0.164 0.062,-0.349 0.076,-0.281 0.151,-0.163 0.489,-0.025 1.676,0.286 1.194,-0.171 1.305,0.416 1.249,-0.084 0.257,-0.187 0.313,-0.603 1.764,-1.004 0.617,-0.525 0.662,-0.288 1.135,-0.32 0.949,-0.424 0.271,-0.049 2.278,0.203 1.565,0.026 0.718,-0.401 0.417,0.135 -0.039,0.143 -0.076,0.123 0.023,0.247 0.244,0.363 0.249,0.247 0.73,0.354 1.015,-0.298 0.164,0.033 0.207,0.083 0.358,0.957 0.278,0.337 0.356,0.229 0.293,0.045 0.217,-0.239 0.168,-0.096 0.367,-0.041 0.601,0.328 0.208,0.338 1.023,0.261 0.939,0.131 0.405,0.286 1.322,0.286 0.494,-0.044 0.828,-0.3 1.612,-0.329 1.071,0.459 0.29,0.06 0.25,-0.04 0.36,0.126 0.384,-0.068 1.185,-0.542 0.371,-0.308 0.393,-0.079 0.348,-0.185 0.928,-0.605 0.261,-0.357 z m -43.613,5.103 -0.645,0.113 -0.2,-0.111 0.202,-0.221 0.376,-0.137 0.122,-0.016 0.165,0.22 -0.02,0.152 z\"\n\t\t\t\tid=\"TR\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 304.38375,431.5574 -0.153,0.028 0.018,-0.113 0.268,-0.195 0.41,-0.132 0.104,-0.005 -0.059,0.175 -0.588,0.242 z m -0.718,2.963 -0.455,0.159 -1.186,0.038 -0.491,-0.058 -0.377,0.045 0.687,-0.347 0.081,-0.146 0.292,-0.027 0.083,-0.044 0.097,-0.767 -0.038,-0.183 -0.058,-0.101 -0.118,-0.073 -0.265,-0.099 -0.044,-0.053 0.167,-0.085 0.356,-0.047 0.266,-0.092 0.551,-0.019 0.268,-0.082 0.451,-0.023 -0.222,0.353 -0.104,0.131 0.041,0.317 -0.051,0.215 0.059,0.272 0.135,0.179 -0.087,0.175 -0.013,0.266 -0.025,0.096 z\"\n\t\t\t\tid=\"TT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 972.47375,479.9984 -0.016,10e-4 -0.025,-0.013 -0.009,-0.029 0.009,-0.028 0.068,0.046 -0.027,0.023 z m -2.761,0.472 -0.016,0.018 -0.021,-0.009 -0.01,-0.029 0.03,-0.041 0.017,0.061 z m 6.707,3.35 -0.017,0.025 -0.02,-0.009 0,-0.037 0.037,0.021 z m 1.461,3.038 -0.025,0.02 -0.03,-0.27 0.045,0.046 0.019,0.029 0.017,0.036 0.004,0.038 -0.002,0.042 -0.01,0.028 -0.018,0.031 z\"\n\t\t\t\tid=\"TV\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 814.50575,398.1354 -0.174,0.354 -0.14,0.374 -0.056,0.353 0.003,0.363 -0.04,0.328 -0.068,0.324 -0.272,-0.093 -0.147,-0.232 -0.034,-0.381 -0.197,-0.46 -0.074,-0.132 -0.285,-0.258 -0.259,-0.128 -0.2,-0.191 0.026,0.016 -0.148,-0.257 -0.112,-0.273 -0.231,-0.778 -0.08,-0.188 -0.107,-0.172 -0.03,-0.17 0.036,-0.189 0.101,-0.283 0.061,-0.285 -0.049,-0.388 0.019,-0.384 0.075,-0.171 1.321,-2.352 0.358,-0.503 0.221,-0.247 0.185,-0.279 0.175,-0.353 0.215,-0.323 0.153,-0.1 0.759,-0.29 0.235,-0.277 0.189,-0.086 0.215,0.005 0.139,0.132 0.124,0.157 0.13,0.084 0.335,0.153 0.147,0.148 0.066,0.254 -0.204,0.242 -0.102,0.218 -0.019,0.24 0.036,0.325 0.005,0.326 -0.256,0.763 -0.273,0.475 -0.074,0.236 -0.083,0.586 -0.161,0.587 -0.137,0.743 -0.224,0.765 -0.127,0.319 -0.158,0.305 -0.378,0.576 -0.43,0.472 z m -7.301,-5.79 0.122,0.204 -0.052,0.126 -0.386,-0.067 -0.022,-0.123 0.146,0.022 0.192,-0.162 z\"\n\t\t\t\tid=\"TW\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 586.34475,485.2334 -0.152,0.037 -0.059,-0.036 -0.093,-0.118 0.162,-0.1 0.157,-0.194 0.365,-0.285 0.125,-0.188 0.045,-0.04 -0.026,0.222 -0.206,0.485 -0.176,0.032 -0.142,0.185 z m -0.603,-5.065 0.215,0.597 -0.027,0.112 -0.152,0.068 -0.079,0.006 -0.094,-0.096 -0.066,-0.201 -0.115,0.048 -0.196,-0.241 -0.194,-0.012 -0.172,-0.287 0.067,-0.25 -0.039,-0.427 0.209,-0.218 0.118,-0.368 0.136,0.251 0.031,0.392 0.183,0.46 0.153,0.142 0.022,0.024 z m 1.034,-3.553 0.017,0.141 -0.043,0.133 0.009,0.423 -0.017,0.281 -0.16,0.389 -0.131,0.139 -0.117,-0.041 -0.096,-0.064 -0.075,-0.107 0.152,-0.713 -0.078,-0.522 0.301,0.05 0.238,-0.109 z m -25.374,-10.908 0.059,0.008 0.294,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.499,0 0.307,0 0.214,0 0.202,0.105 0.225,0.125 0.599,0.332 0.598,0.332 0.598,0.332 0.598,0.332 0.598,0.332 0.599,0.332 0.598,0.332 0.599,0.332 0.598,0.332 0.598,0.332 0.598,0.332 0.598,0.332 0.599,0.332 0.598,0.332 0.598,0.332 0.598,0.332 0.286,0.159 0.043,0.069 0.049,0.303 0.031,0.189 -0.017,0.167 -0.159,0.283 -0.046,0.148 -10e-4,0.103 0.039,0.041 0.135,0.015 0.115,0.067 0.042,0.053 0.088,0.213 0.111,0.107 0.253,0.181 0.431,0.309 0.431,0.309 0.431,0.309 0.431,0.309 0.431,0.309 0.431,0.309 0.431,0.309 0.431,0.309 0.209,0.151 0.089,0.042 -0.056,0.235 -0.221,0.571 -0.013,0.238 -0.086,0.28 -0.083,0.185 -0.225,0.804 -0.188,0.301 -0.257,0.705 -0.041,0.54 0.142,0.378 0.052,0.354 0.302,0.348 0.241,0.124 0.163,0.159 0.289,0.363 0.166,0.364 0.519,0.179 0.207,0.409 -0.075,0.281 -0.241,0.233 -0.225,0.377 -0.181,0.496 -0.004,0.759 0.122,-0.115 0.275,0.186 0.035,0.559 -0.283,0.651 -0.087,0.305 -0.014,0.262 0.206,0.781 0.312,0.397 -0.029,0.122 -0.081,0.104 0.534,0.704 -0.044,0.613 0.2,0.478 0.087,0.414 0.132,0.318 0.025,0.219 -0.165,0.243 0.389,0.061 0.229,0.199 0.108,0.19 0.281,-0.008 0.152,0.13 0.22,0.108 0.485,0.32 0.131,0.161 0.047,0.093 0.031,0.061 -0.326,0.248 -0.508,0.386 -0.499,0.378 -0.481,0.26 -0.344,0.121 -0.368,0.067 -0.349,0.159 -0.33,0.25 -0.423,0.126 -0.515,0.001 -0.541,0.175 -0.537,0.331 -0.313,0.193 -0.496,-0.291 -0.389,-0.092 -0.447,0.01 -0.272,0.036 -0.098,0.063 -0.085,0.178 -0.072,0.292 -0.293,0.281 -0.514,0.269 -0.474,0.101 -0.434,-0.068 -0.293,-0.112 -0.153,-0.156 -0.225,-0.072 -0.298,0.013 -0.286,0.111 -0.273,0.21 -0.435,0.091 -0.598,-0.028 -0.321,-0.102 -0.044,-0.175 -0.262,-0.205 -0.479,-0.235 -0.354,-0.005 -0.227,0.226 -0.207,0.142 -0.187,0.058 -0.168,0.007 -0.149,-0.043 -0.093,-0.018 -0.661,-0.024 -0.626,0.009 -0.02,-0.098 -0.043,-0.229 -0.13,-0.199 -0.112,-0.119 -0.14,-0.031 -0.076,0.002 -0.061,-0.092 -0.072,-0.203 -0.106,-0.172 -0.141,-0.143 -0.085,-0.133 -0.029,-0.122 0.022,-0.134 0.131,-0.333 0.042,-0.229 -0.015,-0.234 -0.071,-0.24 -0.148,-0.285 0.017,-0.082 -0.05,-0.194 -0.005,-0.136 0.029,-0.17 -0.028,-0.223 -0.128,-0.476 0,-0.122 -0.135,-0.23 -0.416,-0.544 -0.02,-0.071 -0.652,-0.548 -0.261,-0.12 -0.094,0.103 -0.035,0.095 0.027,0.176 -0.016,0.087 -0.027,0.04 -0.155,-0.006 -0.097,-0.02 -0.247,-0.147 -0.192,-0.036 -0.478,0.026 -0.167,0.035 -0.131,-0.033 -0.253,-0.251 -0.296,-0.053 -0.266,-0.013 -0.439,-0.285 -0.103,0.013 -0.049,0.022 -0.159,-0.075 -0.299,-0.166 -0.416,-0.146 -0.34,-0.163 -0.152,-0.159 -0.319,-0.061 -0.276,-0.026 -0.256,-0.148 -0.265,-0.017 -0.26,-0.038 -0.058,-0.097 -0.009,-0.218 -0.091,-0.057 -0.191,-0.056 -0.206,0.003 -0.125,0.031 -0.074,-0.016 -0.171,-0.128 -0.159,-0.163 -0.06,-0.26 -0.24,-0.167 -0.277,-0.132 -0.77,0.014 -0.121,-0.04 -0.183,-0.132 -0.214,-0.218 -0.172,-0.249 -0.151,-0.337 -0.072,-0.204 -0.085,-0.251 -0.188,-0.376 -0.266,-0.532 -0.206,-0.436 -0.221,-0.468 -0.09,-0.343 -0.172,-0.379 -0.282,-0.466 -0.143,-0.182 -0.156,-0.163 -0.405,-0.314 -0.459,-0.312 -0.249,-0.21 -0.334,-0.625 -0.14,-0.226 -0.097,-0.397 -0.073,-0.412 0.03,-0.167 0.296,-0.531 0.03,-0.149 -0.036,-0.201 -0.146,-0.423 -0.109,-0.276 -0.076,-0.236 -0.158,-0.393 -0.217,-0.541 -0.055,-0.236 0.007,-0.177 0.117,-0.467 0.103,-0.481 -0.003,-0.132 0.883,0.018 0.145,-0.105 0.499,-0.31 0.561,-0.621 0.112,-0.258 0.229,-0.398 0.224,-0.197 0.086,-0.137 0.059,-0.215 0.07,-0.182 0.294,-0.269 0.286,-0.207 -0.021,-0.083 -0.038,-0.062 0.042,-0.053 0.156,-0.106 0.304,-0.097 0.06,-0.207 -0.001,-0.235 -0.049,-0.131 0.009,-0.151 -0.047,-0.084 -0.199,-0.021 -0.295,-0.117 -0.25,-0.049 -0.167,-0.068 -0.062,-0.052 -0.027,-0.141 0.049,-0.154 0.025,-0.044 0.064,-0.165 -0.109,-0.099 -0.028,-0.048 0.05,-0.079 0.257,-0.522 0.056,-0.073 0.112,-0.009 0.177,-0.064 0.164,-0.029 0.134,0.022 0.099,-0.025 0.087,-0.067 0.074,-0.204 0.061,-0.34 -0.034,-0.277 -0.128,-0.214 -0.035,-0.326 0.059,-0.438 -0.042,-0.364 -0.142,-0.291 -0.145,-0.173 -0.221,-0.082 -0.348,-0.444 -0.106,-0.215 0.019,-0.134 0.092,-0.043 0.028,-0.013 0.222,0.02 0.208,-0.051 0.194,-0.122 0.188,-0.035 0.038,0.006 z\"\n\t\t\t\tid=\"TZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 582.14375,313.5284 -0.102,0.046 -0.981,-0.064 -0.801,0.087 -0.571,0.647 -0.34,-0.002 -0.479,0.168 -0.325,0.209 -0.385,0.452 -0.298,-0.203 -0.365,0.006 -0.356,0.123 -0.428,0.302 -0.238,0.053 -0.476,-0.086 -0.555,0.173 -1.198,0.987 -0.403,0.719 -0.147,0.14 -0.202,0.175 -0.216,0.088 -0.114,-0.008 0.571,-0.51 0.175,-0.191 0.03,-0.141 0.003,-0.229 -0.173,-0.284 -0.467,0.703 -0.265,0.102 -0.337,0.211 -0.017,0.469 0.039,0.348 0.138,0.437 0.326,0.713 0.666,1.015 0.319,0.372 0.234,0.148 0.282,0.021 0.542,-0.313 0.231,-0.049 0.504,0.119 0.18,-0.208 0.262,-0.116 0.336,-0.015 0.384,0.094 0.416,0.158 -0.171,0.357 -0.178,0.284 -0.063,0.314 -0.099,0.349 -0.459,0.156 -0.491,-0.019 -0.518,0.101 -0.187,-0.135 -0.124,-0.124 -0.23,-0.124 -0.303,-0.068 -0.272,0.083 -0.322,0.475 -0.57,0.324 -0.188,0.37 -0.561,-0.083 -0.48,0.065 -0.693,0.337 -0.528,0.72 -0.582,0.449 -0.461,0.142 -0.433,-0.044 -0.28,-0.134 -0.576,-0.472 0.034,-0.169 0.08,-0.085 0.109,-0.244 0.23,-0.896 -0.031,-0.292 -0.129,-0.459 -0.457,-0.358 -0.367,0.068 -0.209,-0.095 -0.753,-0.61 -0.41,-0.043 -0.453,0.123 -0.167,-0.089 -0.123,-0.213 0.898,-0.755 0.882,-0.625 0.387,-0.064 0.522,-0.292 0.558,-0.438 -0.079,-0.345 -0.12,-0.256 -0.267,0.07 -0.194,0.085 -0.467,-0.274 -0.171,-0.202 -0.731,0.21 -0.407,-0.031 -0.898,0.193 -0.413,-0.188 -0.825,-0.528 -0.31,-0.106 -0.264,0.023 -0.144,-0.174 0.176,-0.087 0.205,-0.01 0.213,-0.064 0.06,-0.092 -0.013,-0.174 -0.429,-0.132 -0.399,-0.038 -0.253,-0.156 -0.193,-0.179 0.452,-0.003 0.455,0.136 0.711,0.05 0.646,0.14 0.161,-0.174 0.375,-0.302 0.071,-0.096 -0.628,0.207 -0.637,-0.132 -0.232,-0.184 -0.197,-0.271 -0.083,-0.309 0.054,-0.288 -0.069,-0.521 -0.21,-0.465 -0.074,-0.255 -0.222,-0.229 0.218,0.518 0.081,0.344 0.131,0.316 -0.031,0.836 -0.081,0.293 -0.262,0.074 -0.344,-0.044 -0.35,-0.091 0.087,-0.459 -0.187,0.159 -0.263,0.447 -0.232,0.066 -0.515,-0.049 -0.956,0.295 -0.066,0.321 -0.144,0.433 -0.139,0.252 -0.043,0.152 -0.407,0.651 -0.052,0.062 -0.769,0.899 -0.098,0.067 -0.498,0.209 -0.295,0.183 -0.226,0.082 -0.382,-0.091 -0.159,0.129 -0.075,0.16 -10e-4,0.331 0.194,0.237 0.159,0.787 -0.059,0.332 -0.151,-0.215 -0.237,-0.227 -0.46,-0.194 -0.505,0.067 -0.551,0.328 -0.374,0.122 -0.196,-0.084 -0.12,0.005 -0.042,0.094 0.009,0.077 0.06,0.06 -0.008,0.043 -0.078,0.027 -0.868,-0.231 -0.375,-0.219 -0.295,-0.411 0.147,-0.133 0.128,-0.059 0.452,-0.034 0.078,-0.042 0.008,-0.095 0.034,-0.124 -0.012,-0.181 -0.05,-0.192 0.198,-0.281 0.295,-0.232 0.173,-0.233 0.026,-0.342 0.311,-0.167 0.275,-0.287 0.068,-0.313 0.097,-0.197 -0.176,-0.453 -0.037,-0.299 -0.008,-0.251 0.086,-0.139 0.257,-0.157 0.27,-0.122 0.112,0.012 0.041,0.077 0.01,0.51 0.054,0.01 0.086,-0.063 0.141,-0.3 0.097,0.087 0.15,0.033 0.112,-0.078 0.073,0.009 0.09,0.077 0.18,0.109 0.168,0.036 0.139,-0.072 0.119,-0.13 0.127,0.044 0.241,0.354 0.112,-0.039 0.555,-0.071 0.089,-0.096 0.066,-0.087 -0.58,-0.47 0.029,-0.351 0.022,-0.403 -0.069,-0.24 -0.113,-0.19 -0.443,-0.221 -0.343,-0.229 -0.072,-0.104 -0.009,-0.134 -0.015,-0.208 -0.136,-0.179 -0.011,-0.152 0.086,-0.237 0.021,-0.252 -0.029,-0.1 -0.08,-0.082 -0.154,-0.008 -0.203,-0.146 -0.139,-0.197 -0.374,-0.284 -0.114,-0.046 -0.07,-0.141 -0.034,-0.168 0.079,-0.209 0.099,-0.323 0.069,-0.303 10e-4,-0.181 -0.045,-0.448 -0.195,-0.343 -0.091,-0.045 -0.157,0.096 -0.179,0.081 -0.141,-0.076 -0.161,-0.186 -0.258,-0.519 -0.483,-0.104 -0.2,-0.025 -0.189,0.25 -0.059,-0.076 -0.053,-0.16 -0.1,-0.063 -0.132,0.074 -0.038,-0.071 0.057,-0.217 -0.157,-0.107 -0.371,0.002 -0.198,-0.08 -0.023,-0.163 -0.117,-0.107 -0.21,-0.052 -0.205,-0.133 -0.198,-0.215 -0.297,-0.14 -0.395,-0.065 -0.032,-0.023 -0.037,-0.031 -0.255,0.146 -0.153,0.116 -0.188,-0.072 -0.304,0.258 -0.618,0.013 -0.303,-0.016 -0.15,-0.064 -0.58,0.392 -0.061,0.144 -0.13,0.048 -0.365,0.078 -0.384,0.11 -0.081,0.379 -0.114,0.205 -0.206,0.3 -0.713,0.104 -0.616,0.146 -0.631,0.091 -0.827,0.366 -0.269,0.322 -0.266,0.09 -0.241,0.027 -0.156,-0.18 -0.525,-0.482 -0.202,-0.228 -0.266,-0.067 -0.289,0.038 -0.278,0.112 -0.292,0.021 -0.331,-0.162 -0.035,0.016 -0.127,0.022 -0.822,-0.196 -0.076,-0.033 -0.036,-0.008 -0.113,-0.015 -0.619,0.024 -0.577,-0.396 -0.177,-0.012 -0.137,0.16 -0.101,0.178 -0.398,0.177 -0.102,0.071 -0.058,-0.055 -0.027,-0.153 0.03,-0.136 -0.059,-0.128 -0.151,-0.146 -0.037,-0.061 -0.19,0.011 -0.052,0.014 -0.019,-0.003 -0.264,-0.124 -0.174,-0.299 -0.271,-0.159 -0.207,-0.054 -0.094,-0.129 -0.061,-0.171 -0.064,-0.129 -0.007,-0.013 -0.044,-0.196 -0.063,-0.02 -0.011,-0.005 -0.267,0.034 0.031,-0.689 0.427,-0.497 0.105,-0.251 0.16,-0.545 0.12,-0.256 0.144,-0.212 0.115,-0.205 0.041,-0.176 0.116,-0.02 0.34,0.159 0.305,0.082 0.084,-0.078 0.035,-0.102 -0.014,-0.079 -0.244,-0.235 -0.153,-0.15 -0.01,-0.092 0.055,-0.207 0.03,-0.232 -0.035,-0.252 -0.167,-0.559 -0.031,-0.238 0.159,-0.29 0.518,-0.692 0.173,-0.261 0.236,-0.315 0.641,-0.756 0.404,-0.441 0.274,-0.245 0.401,-0.425 0.176,-0.221 0.732,-0.144 0.091,-0.207 0.134,-0.226 0.104,-0.097 0.014,-0.381 -0.136,-0.467 -0.109,-0.165 -0.081,-0.113 0.053,-0.105 0.081,-0.03 0.1,-0.015 0.124,-0.113 -0.028,-0.123 -0.309,-0.3 -0.134,-0.231 -0.209,-0.596 -0.424,-0.62 -0.134,-0.201 -0.019,-0.19 0.062,-0.19 -0.059,-0.243 -0.15,-0.31 0.024,-0.034 -0.015,-0.383 0.107,-0.083 0.169,-0.056 0.238,0.019 0.204,0.059 0.244,0.175 0.076,-0.028 0.417,-0.33 0.43,-0.498 0.123,-0.289 0.107,-0.132 0.374,-0.07 0.326,-0.029 0.207,0.005 0.509,-0.049 0.301,-0.055 0.261,-0.088 0.563,-0.033 0.878,0.059 0.577,0.004 0.392,0.047 0.959,0.265 0.357,0.048 0.166,0.141 0.319,0.052 0.58,0.141 0.503,0.076 0.34,-0.031 0.19,0.04 0.36,0.625 0.074,0.073 0.144,0.015 0.294,-0.054 0.418,0.021 0.248,0.131 -0.036,0.371 0.065,0.054 0.116,-0.021 0.133,-0.209 0.112,-0.217 0.083,-0.068 0.427,0.147 0.195,-0.024 0.18,-0.165 0.11,-0.028 0.303,0.117 0.373,0.082 0.302,0.005 0.188,0.089 0.137,0.387 0.119,0.08 0.115,0.024 0.174,-0.346 0.158,-0.134 0.219,-0.099 0.141,-0.043 0.1,-0.123 0.134,-0.119 0.116,-0.01 0.094,0.046 0.108,0.165 0.158,0.376 0.192,0.377 0.134,0.137 0.346,-0.116 0.234,-0.118 0.429,-0.022 0.569,-0.083 0.435,-0.108 0.272,0.019 0.165,0.12 0.251,0.231 0.068,0.332 0.326,0.229 0.267,0.042 0.091,-0.238 0.156,-0.166 -0.059,-0.229 -0.026,-0.292 -0.117,-0.271 -0.078,-0.292 0.143,-0.418 0.156,-0.366 0.078,-0.199 0.247,-0.368 0.253,-0.263 0.379,-0.423 0.277,-0.14 0.25,0.064 0.139,0.058 0.359,-0.251 0.639,-0.013 0.532,0.032 0.054,0.008 0.262,0.13 0.275,0.11 0.19,0.007 0.226,-0.025 0.266,-0.147 0.185,-0.142 0.225,-0.722 0.08,-0.104 0.124,-0.057 0.203,-0.006 0.386,0.135 0.452,0.121 0.262,-0.017 0.698,-0.385 0.389,-0.06 0.462,0.09 0.454,0.005 0.342,-0.056 0.235,0.133 0.29,0.294 0.262,0.436 0.274,0.803 0.799,0.903 0.013,0.176 -0.065,0.113 -0.393,0.109 -0.332,0.059 -0.016,0.154 0.088,0.167 0.152,0.244 0.023,0.314 -0.008,0.288 0.065,0.254 0.127,0.104 0.016,0.127 -0.146,0.156 -0.041,0.096 0.057,0.052 0.721,0.03 0.353,0.151 0.268,0.138 0.135,0.013 0.304,-0.088 0.342,-0.056 0.207,-0.008 0.08,0.102 0.064,0.267 0.12,0.267 0.112,0.076 0.2,-0.013 0.12,0.013 0.064,0.101 -0.072,0.152 0.016,0.165 0.088,0.202 0.104,0.467 0.096,0.139 0.064,0.176 0,0.202 -0.08,0.176 -0.056,0.138 0.056,0.314 0.216,0.351 0.16,0.087 0.128,0.313 0.232,0.1 0.344,-0.263 0.264,-0.138 0.33,0.077 0.305,0.049 0.205,0.179 0.151,0.246 0.176,0.137 0.176,-0.072 0.367,0.072 0.168,0.199 0.168,0.112 0.216,-0.162 0.176,-0.2 0.644,-0.209 0.4,-0.052 0.112,-0.041 0.235,-0.15 0.248,-0.1 0.223,0.027 0.22,0.311 0.228,0.214 0.064,0.337 0.278,0.462 0.691,0.631 0.271,0.192 0.184,-0.034 0.096,-0.05 0.045,-0.066 0.042,-0.309 0.087,-0.114 0.14,-0.003 0.541,0.384 0.283,0.042 0.269,0.007 0.362,0.298 0.397,0.259 0.307,0.027 0.245,-0.102 0.168,-0.062 0.104,0.099 0.096,0.223 0.16,0.173 0.184,0.049 0.265,0.011 0.46,0.334 0.432,0.34 0.27,0.019 0.229,-0.1 0.202,-0.026 0.141,0.086 0.04,0.147 -0.104,0.197 0,0.282 0.192,0.27 0.006,0.265 -0.055,0.239 -0.109,0.22 -0.263,0.302 -0.243,0.281 -0.365,0.117 -0.205,0.123 0.054,0.206 0.134,0.192 0.31,0.155 0.352,0.113 0.041,0.125 -0.054,0.063 -0.226,0.058 -0.312,-0.059 -0.104,0.109 -0.144,0.181 -0.096,0.326 -0.072,0.302 0.339,0.082 0.197,0.123 0.062,0.247 0.07,0.275 0.021,0.247 -0.112,0.12 -0.007,0.123 0.053,0.061 0.146,0.027 0.111,0.055 0.009,0.13 -0.213,0.292 -0.199,0.558 -0.107,0.296 0.008,0.321 -0.12,0.178 -0.221,0.023 -0.75,0.031 -0.653,-0.016 -0.282,-0.046 -0.442,-0.028 -0.219,0.076 -0.29,0.512 -0.22,0.2 -0.363,0.181 -0.399,0.052 -0.229,0.21 -0.081,0.33 -0.006,0.292 -0.037,0.146 -0.086,0.128 -0.031,0.091 0.019,0.1 0.093,0.036 0.111,0.046 0,0.072 -0.043,0.091 -0.124,0.1 -0.056,0.154 0.013,0.164 0.023,0.181 z m -17.406,3.617 0.387,0.199 -0.395,-0.053 -0.867,-0.187 -0.383,-0.177 -0.099,-0.198 -0.056,-0.27 0.214,0.283 0.15,0.124 1.049,0.279 z\"\n\t\t\t\tid=\"UA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 570.04475,465.7154 -0.307,0 -0.499,0 -0.499,0 -0.499,0 -0.499,0 -0.498,0 -0.499,0 -0.499,0 -0.499,0 -0.499,0 -0.499,0 -0.499,0 -0.499,0 -0.498,0 -0.499,0 -0.499,0 -0.499,0 -0.295,0 -0.059,-0.008 -0.041,-0.012 -0.188,0.035 -0.195,0.123 -0.207,0.05 -0.222,-0.019 -0.028,0.013 -0.112,-0.003 -0.162,-0.009 -0.146,0.032 -0.111,0.107 -0.114,0.184 -0.205,0.21 -0.16,0.187 -0.136,0.132 -0.311,0.219 -0.17,0.064 -0.084,-0.01 -0.052,-0.041 -0.098,-0.279 -0.06,-0.045 -0.605,0.144 -0.092,0.002 0.008,-0.087 -0.045,-0.656 -0.005,-0.402 0.079,-0.251 0.046,-0.29 0.005,-0.256 0.111,-0.435 -0.041,-0.261 0.143,-0.915 0.038,-0.149 0.056,-0.442 0.089,-0.136 0.08,-0.053 0.103,-0.271 0.199,-0.434 0.137,-0.223 -0.03,-0.487 0.023,-0.332 0.031,-0.073 0.293,-0.124 0.38,-0.306 0.161,-0.361 0.227,-0.23 0.44,-0.149 10e-4,-10e-4 1.304,-1.237 0.606,-0.667 0.264,-0.342 0.009,-0.123 0.051,-0.161 -0.106,-0.126 -0.126,-0.114 -0.043,-0.106 -0.108,-0.052 -0.156,0.002 -0.103,-0.077 -0.117,-0.15 -0.117,-0.094 -0.37,0.008 -0.285,-0.154 0.004,-0.209 0.111,-0.412 0.216,-0.472 0.012,-0.13 -0.031,-0.111 -0.052,-0.095 -0.097,-0.094 -0.092,-0.113 0.071,-0.34 0.136,-0.332 0.112,-0.167 0.109,-0.186 -0.031,-0.153 -0.159,-0.076 0.083,-0.149 0.171,-0.251 0.333,-0.254 0.293,-0.17 0.196,-0.001 0.38,0.136 0.344,0.159 0.188,0.008 0.23,-0.066 0.474,-0.283 0.115,0.09 0.138,0.171 0.151,0.284 0.299,0.129 0.143,0.09 0.103,0.026 0.057,-0.023 0.113,-0.223 0.137,-0.121 0.253,-0.153 0.559,-0.123 0.399,-0.037 0.169,-0.026 0.283,-0.072 0.447,-0.229 0.44,0.295 0.478,0.057 0.463,-0.002 0.141,-0.09 0.081,-0.068 0.486,-0.485 0.658,-0.657 0.438,0.925 0.151,0.055 -0.022,0.08 -0.037,0.078 0.287,0.223 0.353,0.117 0.126,0.114 0.011,0.123 -0.119,0.541 0.022,0.154 0.114,0.542 0.21,0.121 0.186,0.546 0.377,0.231 0.054,0.066 0.087,0.264 0.115,0.29 0.09,0.067 0.055,0.017 0.111,0.306 -0.064,0.173 0.087,0.524 0.141,0.468 0.038,0.559 10e-4,0.246 -0.005,0.151 -0.031,0.212 -0.067,0.123 -0.12,0.12 -0.134,0.188 -0.116,0.202 -0.073,0.099 0.057,0.302 -0.015,0.079 -0.03,0.038 -0.171,0.046 -0.218,0.081 -0.132,0.08 -0.188,0.154 -0.15,0.165 -0.199,0.487 -0.332,0.38 -0.056,0.125 -0.313,0.226 -0.138,0.279 -0.088,0.342 -0.121,0.245 -0.265,0.337 -0.06,0.532 0.008,1.061 -0.069,1.21 z\"\n\t\t\t\tid=\"UG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 25.797748,464.0314 -0.019,0 -0.043,-0.016 -0.005,-0.034 0.031,-0.016 0.046,0.001 0.023,0.028 -0.01,0.031 z\"\n\t\t\t\tid=\"UM-DQ\"\n\t\t\t/>\n\t\t\t<path d=\"m 990.00875,462.3014 -0.015,0.02 -0.017,-0.011 z\" id=\"UM-FQ\" />\n\t\t\t<path\n\t\t\t\td=\"m 989.51775,460.7044 -0.014,0.014 -0.02,-0.009 10e-4,-0.041 0.028,-0.001 z\"\n\t\t\t\tid=\"UM-HQ\"\n\t\t\t/>\n\t\t\t<path d=\"m 1009.4647,415.5964 -0.042,0.018 0,-0.016 z\" id=\"UM-JQ\" />\n\t\t\t<path\n\t\t\t\td=\"m 987.39275,380.9274 -0.014,0.007 -0.007,-0.011 0.022,-0.085 0.04,-0.023 0.036,0.004 -0.01,0.052 z\"\n\t\t\t\tid=\"UM-MQ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 942.62175,408.1084 -0.045,0.01 -0.082,-0.052 -0.014,-0.029 0.053,-0.052 0.064,0.021 0.024,0.017 0.009,0.041 z\"\n\t\t\t\tid=\"UM-WQ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 79.174748,187.7204 0,2.34 0,2.309 0,2.278 0,2.249 0,2.22 0,2.191 0,2.164 0,2.137 0,2.111 0,2.086 0,2.062 0,2.037 0,2.014 0,1.991 0,1.969 0,1.947 0,1.926 0,1.905 0,1.885 0,1.865 0,1.845 0,1.827 0,1.809 0,1.791 0,1.773 0,1.755 0,1.739 0,1.722 0,1.707 0,1.69 0,1.675 0,1.66 0.672,0.232 0.666,0.23 0.204,-0.459 0.718,0.352 0.627,0.307 0.4,-0.394 0.433,-0.427 0.584,-0.03 0.655,-0.034 0.437,-0.022 0,0.364 -0.162,0.602 -0.135,0.501 0.398,0.507 0.49,0.266 0.458,0.249 0.206,0.686 0.501,0.528 0.381,0.4 0.366,0.383 0.523,0.546 0.366,0.382 0.488,0.507 0.29,0.301 0.139,0.584 0.167,0.699 -0.103,0.412 0.231,0.066 0.452,-0.462 0.425,-0.287 0.525,-0.355 0.354,-0.24 0.658,-0.012 0.314,-0.699 10e-4,-0.985 0.333,0.017 0.196,-0.134 0.086,-0.291 -0.209,-0.398 0.63,-0.186 0.456,-0.135 0.651,-0.367 0.636,-0.359 0.303,0.278 0.3,0.268 0.589,0.645 0.04,0.155 -0.04,0.302 -0.058,0.301 0.358,0.842 0.103,0.094 0.294,0.116 0.351,0.278 0.155,0.24 0.508,0.382 0.086,0.158 0.048,0.256 0.083,0.22 0.095,0.157 0.092,0.224 0.22,0.264 0.419,0.294 0.291,0.204 0.407,0.285 0.412,0.581 0.358002,0.503 0.408,0.496 -0.06,0.395 0.413,0.608 0.435,0.771 0.334,0.681 0.237,0.38 0.285,0.548 0.348,0.669 0.396,0.759 0.303,0.485 0.395,0.677 0.195,0.403 -0.133,0.275 -0.164,0.34 0.508,0.161 0.352,0.111 -0.088,0.376 -0.116,0.496 0.398,0.195 0.27,0.133 -0.056,0.259 0.149,0.292 0.024,0.483 0.485,-0.031 0.214,-0.014 0.29,0.214 0.382,0.282 0.383,0.264 0.327,0.225 0.429,0.133 0.529,0.191 0.26,0.39 0.482,0.167 0.18,0.543 0.557,0.199 0.328,-0.133 0.118,0.221 0.093,0.254 0.025,0.32 -0.031,0.312 -0.139,0.26 -0.105,0.28 -0.07,0.301 -0.027,0.322 0.017,0.344 0.056,0.3 0.171,0.554 0.057,0.339 0.007,0.225 -0.379,0.79 -0.131,0.375 0.012,0.168 -0.276,0.39 -0.507,0.544 -0.23,0.313 -0.114,-0.104 -0.656,-0.081 -0.238,-0.695 -0.126,-0.541 -0.191,-0.472 0.005,-0.107 0.174,-0.316 0.656,-0.26 0.006,-0.104 -0.244,-0.069 -0.059,-0.113 -0.067,-0.515 0.018,-0.453 -0.017,-0.301 -0.109,-0.616 -0.164,-0.378 -0.423,-0.74 -0.036,-0.187 0.186,-0.235 0.116,-0.219 -0.715,0.381 -0.976,0.399 -0.418,0.278 -0.088,0.111 -0.03,0.094 0.076,0.262 -0.012,0.084 -0.085,0.155 -0.101,0.436 -0.212,0.461 -0.107,0.095 -0.381,-0.172 -0.102,-0.147 -0.191,-0.603 0.044,-0.161 0.139,-0.136 0.189,-0.293 0.238,-0.452 0.455,-1.153 0.297,-0.005 0.524,-0.229 -0.822,-0.115 -0.123,-0.06 -0.11,-0.158 -0.098,-0.256 -0.167,-0.285 -0.313,-0.1 -0.137,-0.105 -0.207,-0.347 -0.139,-0.156 -0.076,-0.193 -0.013,-0.23 -0.059,-0.116 -0.215,-0.042 -0.116,-0.079 -0.032,-0.596 -0.428,-0.153 -0.175,-0.132 -0.282,-0.374 -0.078,-0.182 -0.025,-0.152 0.069,-0.414 -0.029,-0.078 -0.25,0.042 -1.55,-0.643 0.082,-0.853 -0.287,-1.131 -0.308002,-0.46 0.061,-0.18 0.066,-0.095 0.138002,-0.002 0.595,0.335 0.56,0.396 0.072,-0.058 -0.895,-0.842 -0.224,-0.252 -0.056,-0.304 -0.003,-0.163 0.071,-0.085 0.839,0.076 0.05,-0.063 -0.851,-0.248 -0.174,10e-4 -0.186002,0.356 -0.088,0.084 -0.183,-0.017 -0.062,-0.055 -0.216,-0.431 -0.206,-0.301 -0.383,-0.417 -0.072,-0.298 -0.019,-0.439 0.051,-0.416 0.313,-0.954 0.127,-0.166 0.033,-0.104 -0.097,0.016 -0.092,0.091 -0.259,0.444 -0.267,0.726 -0.218,0.247 -0.137,-0.06 -0.207,-0.295 -0.432,-0.361 -0.5,-0.093 -0.316,-0.37 -0.467,-1.034 -0.063,-0.517 -0.06,-0.127 -0.253,-0.168 -0.156,-0.249 -0.24,-1.27 -0.317,-0.888 -0.079,-0.471 0.026,-0.468 -0.041,-0.052 -0.109,0.365 -0.028,0.19 -0.2,0.054 0.188,0.369 0.047,0.184 -0.094,-0.015 -0.192,0.046 0.326,0.627 0.146,0.968 0.216,0.714 0.14,0.577 0.063,0.437 0.092,0.417 0.252,0.917 0.034,0.182 -0.03,0.148 -0.083,0.176 -0.144,0.066 -0.452,-0.12 -0.17,-0.226 -0.244,-0.416 -0.342,-0.192 -0.847,0.095 -0.068,-0.032 0.003,-0.34 0.097,-0.607 -0.078,-0.246 -0.438,-0.897 0.007,-0.176 0.608,-0.414 -0.295,-0.031 -0.238,0.162 -0.092,-0.104 -0.144,-0.579 -0.093,-0.216 -0.046,-0.046 -0.026,0.551 0.101,0.289 0.015,0.167 -0.016,0.233 -0.063,0.167 -0.111,0.101 -0.111,0.025 -0.205,-0.116 -0.228,-0.219 -0.199,-0.103 -0.074,-0.087 -0.094,-0.242 -0.154,-0.184 -0.743,-0.233 -0.443,-0.276 -0.037,0.073 0.138,0.294 0.013,0.174 -0.112,0.053 -0.2,0.279 0.058,0.038 0.211,-0.092 0.236,0.011 0.39,0.169 0.354,0.222 0.128,0.124 0.053,0.184 0.044,0.065 0.346,0.214 0.017,0.112 -0.223,0.334 0.46,-0.037 0.267,0.119 0.342,0.516 0.116,0.287 0.016,0.367 -0.071,0.106 -0.136,0.074 -0.934,0.12 -0.337,0.441 -0.07,0.006 -0.257,-0.12 -0.466,-0.352 -0.581,-0.335 -1.325,-0.997 -0.036,-0.047 -0.022,-0.193 -0.091,-0.099 -0.18,-0.084 -0.25,-0.254 -0.319,-0.424 -0.197,-0.332 -0.075,-0.239 -0.186,-0.274 -0.6,-0.573 -0.314,-0.22 -0.277,-0.125 -0.241,-0.027 -0.065,-0.077 0.111,-0.126 0.017,-0.074 -0.532,-0.119 -0.505,-0.27 -1.281,-0.761 -0.662,-0.478 -0.386,-0.229 -0.165,-0.129 -0.073,-0.105 0.093,-0.11 0.258,-0.114 0.175,-0.13 0.276,-0.487 0.021,-0.157 -0.148,-0.355 -0.066,-0.324 0.003,-0.18 0.039,-0.18 0.042,-0.117 0.117,-0.113 0.082,-0.057 0.102,0.039 0.325,0.446 0.046,0.162 -0.015,0.608 0.093,0.709 0.03,-0.052 0.03,-0.234 0.019,-0.448 0.037,-0.216 0.07,-0.21 0.118,-0.111 0.367,0.064 0.169,-0.038 -0.714,-0.322 -0.449,-0.605 -0.081,-0.063 -0.246,-0.027 -0.26,0.245 -0.669,0.797 -0.188,0.14 -0.841,0.44 -0.57,0.088 -0.642,-0.069 -0.547,-0.143 -1.372,-0.696 -0.214,-0.162 0.319,-0.432 0.013,-0.135 -0.111,-0.441 -0.092,-0.126 -0.13,-0.07 -0.037,0.05 -10e-4,0.131 0.035,0.243 -0.105,0.128 -0.233,0.138 -0.393,0.14 -1.218,-0.356 -1.248,-0.295 -1.114,-0.061 -1.573,0.235 -0.839,0.236 -0.489,0.023 -0.471,-0.042 -0.039,-0.165 0.215,-0.097 -0.012,-0.12 -0.272,-0.374 -0.413,-0.227 -0.554,-0.08 -0.317,-0.11 -0.08,-0.139 -0.196,-0.132 -0.312,-0.126 -0.137,-0.227 0.109,-0.704 0.106,-0.423 0.106,-0.291 0.268,-0.483 -0.093,0.036 -0.389,0.354 -0.339,0.365 -0.314,0.474 -0.187,0.217 -0.24,0.2 -0.375,-0.047 -0.509,-0.296 -0.436,-0.153 -0.363,-0.009 -0.144,-0.051 0.248,-0.265 0.143,-0.213 0.195,-0.342 0.043,-0.167 -1.331,-0.055 -0.049,-0.181 -0.002,-0.133 -0.042,-0.11 -0.193,-0.082 -0.27,0.063 -0.437,0.214 -0.189,-0.163 0.067,-0.091 0.143,-0.067 0.291,-0.311 -0.393,-0.161 -0.201,-0.185 -0.098,-0.152 0.007,-0.549 0.104,-0.353 0.882,-0.343 -0.279,-0.134 -0.557,0.046 -0.374,0.292 -0.444,0.42 -0.298,0.157 -0.152,-0.106 -0.201,-0.037 -0.25,0.033 -0.168,0.107 -0.086,0.182 -0.1,0.123 -0.113,0.063 -0.082,-0.021 -0.12,-0.186 -0.252,-0.116 -0.124,-0.142 -0.071,0.089 -0.086,0.268 -0.091,0.136 -0.426,0.139 -0.234,-0.026 -0.28,-0.336 -0.04,-0.117 0.095,-0.292 0.615,-1.16 -0.062,0.007 -0.199,0.183 -0.397,0.464 -0.177,0.138 -0.305,0.018 -0.142,-0.05 -0.172,0.038 -0.202,0.124 -0.131,0.136 -0.062,0.147 0.042,0.025 0.304,-0.168 0.173,-0.045 0.048,0.082 -0.237,0.521 -0.144,0.497 -0.137,0.125 -0.218,-0.021 -0.239,0.049 -0.003,0.139 0.445,0.395 0.161,0.056 0.206,0.141 0.032,0.14 -0.078,0.377 -0.058,0.148 -0.094,0.077 -0.363,-0.013 -0.118,0.039 -0.244,0.236 -0.122,0.195 0.044,0.017 0.211,-0.161 0.307,-0.086 0.403,-0.012 0.3,-0.085 0.197,-0.16 0.192,0.045 0.187,0.25 0.056,0.219 -0.076,0.188 -0.154,0.134 -0.233,0.08 -0.147,0.12 -0.062,0.16 -0.035,0.237 -0.008,0.313 0.059,0.563 -0.045,0.076 -0.088,0.042 -0.13,0.007 -0.117,0.132 -0.274,0.746 -0.097,0.081 -0.115,-0.08 -0.102,0.009 -0.089,0.097 -0.195,0.074 -0.301,0.051 -0.258,-0.019 -0.453,-0.161 -0.185,-0.114 -0.144,-0.187 -0.407,0.198 -0.107,-0.086 -0.253,-0.517 -0.055,0.031 -0.049,0.557 -0.077,0.195 -0.251,0.402 -0.137,0.69 -0.042,0.021 -0.047,-0.1 -0.155,-0.617 -0.082,-0.136 -0.227,0.356 -0.025,0.129 0.06,0.459 -0.053,0.069 -0.459,-0.247 -0.113,-0.012 -0.03,0.042 0.157,0.355 -0.018,0.128 -0.65,0.684 -0.169,-0.024 -0.106,-0.068 -0.117,0.011 -0.413,0.254 -0.114,-0.011 -0.156,-0.15 -0.072,0.006 -0.039,0.157 -0.005,0.306 -0.153,0.29 -0.492,0.468 -0.13,0.215 -0.099,0.294 -0.074,0.028 -0.289,-0.189 -0.334,-0.123 -0.046,0.061 0.102,0.179 -0.021,0.11 -0.145,0.041 -0.183,-0.016 -0.222,-0.073 -0.311,0.082 -0.399,0.237 -0.333,-0.007 -0.465,-0.39 -0.128,-0.029 -0.041,-0.11 0.091,-0.316 0.132,-0.24 0.097,-0.11 0.441,-0.308 0.505,-0.113 0.317,-0.186 0.386,-0.383 0.204,-0.288 0.401,-0.745 -0.03,-0.058 -0.09,-0.041 -0.882,0.707 -0.13,0.065 -0.175,-0.005 -0.705,-0.271 -0.149,-0.116 -0.102,-0.34 0.196,-0.776 0.137,-0.376 0.344,-0.582 0.45,-0.623 0.156,-0.405 0.234,-1.088 -0.014,-0.496 -0.105,-0.606 -0.004,-0.361 0.098,-0.114 1.033,-0.564 0.489,-0.424 0.949,-0.628 0.258,0.005 0.19,0.216 0.221,0.173 0.252,0.129 0.324,-0.013 0.396,-0.157 0.628,0.06 1.29,0.413 0.274,0.023 0.011,-0.052 -0.199,-0.289 -0.889,-0.168 -0.375,-0.168 -1.053,-0.741 -0.24,-0.287 0.097,-0.134 0.258,-0.111 0.088,-0.107 0.037,-0.187 0.148,-0.255 0.259,-0.326 0.396,-0.315 0.749,-0.47 -0.293,-0.02 -0.539,0.087 -0.196,0.089 -0.36,0.336 -0.14,0.236 -0.201,0.46 -0.086,0.087 -0.374,0.066 -1.019,0.046 -0.172,-0.235 -0.095,-0.038 -0.126,0.033 -0.936,0.6 -0.335,0.305 -0.239,0.348 -0.37,0.254 -0.5,0.161 -0.374,0.199 -0.394,0.397 -0.134,0.304 -0.008,0.143 0.096,0.449 -0.098,0.084 -0.227,0.035 -0.365,0.297 -0.771,0.88 -0.101,0.318 0.004,0.109 0.125,0.248 -0.087,0.161 -0.217,0.254 -0.483,0.401 -0.317,0.152 -0.206,0.008 -0.198,-0.057 -0.352,-0.258 -0.285,-0.016 -0.018,0.036 0.388,0.276 0.395,0.354 0.246,0.294 0.097,0.233 0.004,0.24 -0.089,0.246 -0.279,0.427 -0.273,0.127 -0.699,0.128 -0.225,0.102 -0.07,0.079 0.48,0.18 0.043,0.092 -0.066,0.356 -0.127,0.116 -0.4,0.212 -0.358,0.062 -0.055,-0.041 0.067,-0.279 -0.019,-0.069 -0.135,-0.057 -0.191,0.106 -0.477,0.411 -0.051,0.067 0.172,0.11 -0.036,0.091 -0.258,0.294 -0.107,0.196 -0.173,0.199 -0.77,0.608 0.059,0.148 -0.2,0.527 -0.112,0.465 0.136,0.195 0.646,0.228 0.313,0.055 0.369,0.159 0.668,0.428 0.223,0.279 0.033,0.131 -0.021,0.143 -0.08,0.193 -0.209,0.364 -0.505,0.54 -0.228,0.153 -0.345,0.12 -0.113,0.087 -0.443,0.509 -0.12,0.274 0.019,0.239 -0.085,0.167 -0.57,0.328 0.02,0.058 0.207,0.025 -0.076,0.289 -0.034,0.4 -0.099,0.067 -0.356,-0.003 -0.453,0.155 -0.032,0.044 -0.008,0.287 -1.184,0.21 -0.259,0.542 -0.135,0.166 -0.464,0.393 -0.284,0.158 -0.325,0.096 -0.17,0.133 -0.016,0.17 -0.092,0.147 -0.281,0.243 -0.138,0.305 -0.1,0.048 -0.523,0.073 -0.104,0.097 -0.051,0.411 -0.097,0.013 -0.186,-0.096 -0.242,0.074 -0.544,0.464 -0.119,0.167 0.013,0.089 0.084,0.088 0.129,0.275 -0.008,0.185 -0.209,0.515 -0.074,0.08 -0.254,0.127 -0.104,0.284 -0.234,-0.031 -0.189,0.054 -0.124,0.189 -0.134,0.109 -0.145,0.028 -0.183,0.15 -0.219,0.27 -0.204,0.172 -0.187,0.074 -0.182,0.019 -0.177,-0.038 -0.159,0.031 -0.141,0.1 -0.138,0.156 -0.11,0.442 -0.139,0.197 -0.088,0.034 -0.18,-0.029 -0.272,-0.093 -0.276,0.033 -0.446,0.271 -0.142,0.204 0.281,0.045 0.139,0.058 -0.003,0.057 -0.146,0.055 -0.25,-0.004 -0.15,0.047 -0.182,0.116 -0.458,0.125 -0.174,0.089 -0.345,0.508 -0.042,0.115 0.044,0.025 0.194,-0.053 0.228,0.084 0.118,0.107 0.076,0.132 0.072,0.254 0.044,0.038 -0.438,0.426 -0.124,0.181 -0.08,0.067 -0.053,-0.052 -0.054,-0.474 -0.033,-0.081 -0.104,-0.008 -0.1,0.15 -0.219,0.56 -0.239,0.282 -1.795,0.72 -0.258,0.166 -0.051,0.306 -0.074,0.265 -0.119,0.21 -0.139,0.133 -0.03,-0.095 0.014,-0.745 -0.037,-0.148 -0.181,-0.095 -0.08,0.013 -0.109,0.042 -0.18,0.162 -0.11,0.04 -0.137,-0.013 -0.234,0.159 -0.556,0.509 -0.363,0.126 -0.096,0.105 -0.155,0.278 -0.103,0.102 -0.152,0.009 -0.202,-0.083 -0.162,0.059 -0.123,0.202 -0.125,0.08 -0.353,-0.149 -0.156,0.102 -0.202,0.26 -0.211,0.171 -0.22,0.083 -0.572,0.086 -0.23,-0.055 -0.047,-0.075 0.011,-0.331 0.092,-0.239 0.085,-0.113 0.114,-0.1 0.167,-0.012 0.312,0.075 -0.036,-0.08 -0.113,-0.095 -0.287,-0.165 -0.285,-0.084 -0.163,0.054 -0.229,0.126 -0.156,0.146 -0.082,0.166 -0.103,0.54 -0.06,0.146 -0.67,0.947 -0.263,0.291 -0.26,-0.022 -0.126,0.11 -0.177,0.235 -0.164,0.113 -0.15,-0.01 -0.117,-0.045 -0.083,-0.079 0.014,-0.074 0.112,-0.069 -0.04,-0.188 -0.192,-0.31 -0.131,-0.168 -0.249,-0.02 -0.039,0.141 0.084,0.718 -0.013,0.162 -0.155,0.204 -0.408,0.228 -0.127,-0.022 -0.367,-0.449 -0.348,-0.089 -0.023,0.146 0.078,0.299 -0.087,0.278 -0.251,0.259 -0.191,0.125 -0.131,-0.008 -0.007,-0.181 0.117,-0.355 0.03,-0.296 -0.057,-0.238 0.007,-0.182 0.069,-0.127 0.461,-0.354 0.194,-0.053 0.104,0.087 0.129,0.015 0.156,-0.058 0.098,-0.113 0.041,-0.169 0.199,-0.216 0.357,-0.265 0.409,-0.489 0.46,-0.716 0.539,-0.619 0.619,-0.521 0.671,-0.415 1.352,-0.571 0.104,0.035 -0.124,0.186 0.084,0.116 0.133,0.015 0.495,-0.092 0.197,-0.12 0.058,0.116 -0.069,0.146 -0.297,0.148 0.008,0.123 0.433,0.575 0.136,0.087 0.113,-0.011 0.048,-0.074 -0.036,-0.415 0.146,-0.079 0.299,-0.02 0.195,0.054 0.091,0.127 0.171,0.105 0.251,0.084 0.156,-0.026 0.061,-0.135 -0.107,-0.161 -0.481,-0.354 -0.134,-0.148 -0.032,-0.207 0.068,-0.265 0.151,-0.394 0.234,-0.523 0.212,-0.366 0.429,-0.416 0.289,-0.206 0.733,-0.632 1.409,-0.646 0.348,-0.416 0.473,-0.46 0.203,-0.113 0,0.178 0.065,0.159 0.316,0.106 0.206,0.037 0.095,-0.032 0.026,-0.169 -0.042,-0.307 -0.011,-0.29 0.021,-0.273 0.046,-0.216 0.211,-0.385 0.314,-0.439 0.429,-0.511 0.271,-0.232 0.255,-0.124 0.247,-0.224 0.425,-0.531 0.136,-0.087 0.305,-0.105 0.112,0.046 0.065,0.134 0.08,0.083 0.309,0.075 0.206,-0.118 -0.034,-0.063 -0.167,-0.041 -0.107,-0.077 -0.101,-0.317 -0.205,-0.191 -0.046,-0.217 0.037,-0.338 0.176,-0.796 0.029,-0.822 0.157,-0.473 0.315,-0.171 0.699,-0.117 -0.409,-0.214 -0.152,-10e-4 -0.266,-0.101 -0.101,-0.518 0.002,-0.377 0.176,-0.438 0.651,-0.741 0.713,-0.515 -0.097,-0.042 -0.088,-0.153 0.329,-1.036 0.321,-0.929 -0.433,0.792 -0.501,0.604 -1.47,0.699 -1,0.584 -0.474,0.139 -0.313,-0.148 -0.244,-0.56 -0.14,-0.2 -0.179,-0.366 0.076,-0.478 0.142,-0.331 0.312,-0.054 0.352,0.16 0.305,0.014 -0.393,-0.327 -0.567,-0.286 -0.257,0.093 -0.197,0.463 -0.263,0.317 -0.231,-0.113 -0.137,-0.129 0.095,0.387 -0.175,0.588 -0.066,0.406 0.25,1.068 -0.046,0.425 -0.455,0.195 -0.371,-0.349 -0.773,-1.352 -0.27,-0.387 -0.606,-0.64 -0.2,0.091 -0.255,0.316 -0.247,0.087 -0.652,-0.466 -0.304,-0.356 -0.287,-0.433 -0.44,0.239 -0.384,0.284 -0.45,0.452 -0.301,-0.004 -0.818,0.387 -0.087,0.008 -0.115,0.208 -0.113,0.093 -0.093,0.4 -1.106,0.31 -1.093,-0.173 0.382,-0.22 0.427,-0.173 0.371,-0.417 -0.158,-0.559 -0.027,-0.285 0.004,-0.361 0.405,-0.508 -0.421,0.001 -0.271,0.182 -0.253,-0.382 -0.119,-0.754 0.29,-0.448 0.134,-0.346 0.114,-0.476 0.008,-0.41 -0.224,-0.696 -0.644,-1.483 -0.293,-1.114 -0.502,-0.596 0.375,-0.98 0.418,-0.897 0.54,-0.403 -0.043,-0.06 -0.298,0.003 -0.196,0.053 -0.173,0.293 -0.183,0.223 -0.571,1.141 -0.368,0.554 -0.239,0.158 0.385,0.214 0.059,0.18 0.074,0.409 -0.099,0.495 -0.099,0.273 -0.454,-0.022 -0.408,0.397 -0.958,0.431 -1.294,0.246 -0.636,-0.029 -0.662,-0.502 0.005,-0.292 0.027,-0.253 -0.951,-0.871 -0.538,-0.872 -0.387,-0.019 -0.336,-0.233 -0.397,-0.363 0.035,-0.293 0.063,-0.207 -0.244,-0.145 -0.312,0.014 -0.363,-0.1 0.948,-1.136 0.326,-0.765 0.266,-0.109 0.345,0.118 0.476,0.302 0.401,0.133 0.145,0.142 0.148,0.267 -0.156,0.447 -0.143,0.313 0.176,-0.084 0.499,-0.485 0.372,-0.427 0.178,0.044 0.116,0.075 0.207,0.44 0.256,0.447 0.565,-0.426 0.302,-0.532 -0.255,-0.233 -0.312,-0.139 -0.796,-0.181 0.194,-0.153 0.511,0.017 0.192,-0.146 -0.202,-0.203 -0.253,-0.182 -0.689,0.605 -1.254,-0.03 -0.876,-0.354 -0.875,0.062 -0.138,-0.07 -0.17,-0.189 0.493,-0.451 0.349,-0.25 0.019,-0.145 -0.203,-0.018 -0.381,0.12 -0.17,-0.208 0.028,-0.362 -0.063,0.033 -0.151,0.198 -0.213,-0.098 -0.185,-0.17 0.096,-0.174 0.188,-0.24 -0.083,-0.036 -0.168,0.051 -0.164,0.313 0.036,0.253 -0.004,0.363 -0.28,0.066 -0.24,-0.043 -0.173,-0.365 -0.1789996,-0.784 -0.484,-0.209 -0.119,-0.398 0.306,-0.513 -0.135,-0.265 -0.326,-0.086 -0.372,0.259 -0.165,-0.23 -0.03,-0.253 -0.013,-0.364 0.104,-0.039 0.086,0.072 0.747,-0.202 0.072,-0.099 -0.592,-0.309 -0.165,-0.325 0.245,-0.185 0.442,-0.016 0.6199996,-0.193 -0.2609996,-0.346 -0.055,-0.19 -0.052,-0.312 0.103,-0.531 0.7289996,-1.223 0.71,-1.026 0.221,-0.237 0.325,-0.128 0.303,0.099 0.316,0.221 0.06,-0.095 -0.107,-0.09 -0.135,-0.422 0.439,-0.166 0.257,-0.478 0.019,-0.139 -0.279,0.199 -0.291,0.327 -0.073,-0.329 -0.075,-0.758 0.128,-0.719 0.1,-0.324 0.243,-0.308 0.7,-0.124 0.124,0.062 0.025,-0.146 -0.421,-0.456 0.173,-0.357 0.152,-0.186 0.846,-0.29 0.462,0.09 0.58,0.338 0.337,0.42 -0.049,0.215 -0.083,0.125 -0.174,0.139 -0.065,0.108 0.031,0.086 0.249,-0.25 0.407,-0.304 0.228,0.132 0.18,0.24 0.199,-0.004 0.633,-0.206 0.321,-0.218 0.393,-0.569 0.522,-0.368 0.735,-1.168 0.216,-0.481 0.251,-0.074 0.227,0.042 0.158,0.395 0.231,0.115 1.315,-0.096 0.672,-0.181 0.467,-0.383 0.486,-0.647 0.281,-0.435 0.135,-0.568 -0.174,-0.738 -0.178,-0.615 -0.234,-1.414 -0.653,-0.94 -0.464,-0.282 -0.295,0.04 0.213,-0.603 0.622,0.065 0.405,-0.118 0.328,-0.291 0.107,-0.221 0.162,-0.452 -0.056,-0.483 -0.087,-0.263 -0.226,-0.29 -0.269,-0.425 -0.188,-0.142 -0.159,0.009 -0.784,0.853 -0.471,0.016 -0.352,-0.156 -0.306,0.484 -0.853,0.424 -0.456,0.427 -0.845,1.056 -0.211,0.476 -0.27,0.021 -0.195,-0.924 -0.919,-0.886 -0.278,0.302 0.153,0.278 0.208,0.198 0.343,0.086 -0.148,0.268 -0.112,0.356 -0.344,-0.334 -0.615,-0.486 -0.637,-0.251 -1.658,0.028 -1.088,0.499 -0.1,-0.104 -0.105,-0.041 -0.182,0.119 -0.078,0.203 -0.119,0.127 -0.222,0.045 -0.448,-0.075 -0.864,-0.31 -1.9549996,-0.456 -0.512,-0.281 -0.438,-0.671 0.009,-0.457 0.195,-0.194 -0.019,-0.657 -0.38,-0.175 -0.775,-0.95 -0.285,-0.406 0.062,-0.045 0.139,0.11 0.265,0.083 0.65,-0.132 0.223,-0.619 0.482,-0.177 0.444,0.087 -0.1,-0.168 -0.113,-0.132 -1.156,-0.317 -0.157,0.097 -2.073,-0.564 -1.637,-0.984 -0.134,-0.189 -0.149,-0.422 0.221,-0.418 0.222,-0.198 0.01,0.23 0.036,0.226 0.938,-0.525 0.491,-0.691 0.929,-0.122 0.216,-0.191 0.289,-0.373 0.412,-0.639 0.583,-0.337 0.397,-0.303 0.517,-0.18 0.441,0.299 0.136,0.041 0.8,0.061 0.2629996,-0.129 0.112,-0.096 0.084,-0.152 -0.7859996,-0.542 0.08,-0.302 0.1,-0.213 0.9169996,-0.635 0.705,-0.21 0.377,0.015 1.094,-0.824 0.599,-0.236 1.129,-0.157 0.928,-0.041 0.251,0.295 -0.499,-0.062 -0.219,0.054 0.156,0.101 0.176,0.215 -0.051,0.271 -0.306,0.801 0.025,0.639 -0.199,0.207 -0.193,0.291 0.95,0.913 1.47,0.058 0.8,-0.165 0.462,0.272 0.378,0.062 1.046,-0.14 0.788,0.194 0.329,-0.074 0.729,-1.365 0.285,-0.215 0.31,0.238 0.404,0.193 0.258,-0.14 0.21,0.353 -0.099,-0.736 -0.143,-0.277 -1.19,-0.509 -0.796,0.253 -0.249,-0.287 0.083,-0.57 -0.852,-1.412 -0.355,-0.288 -0.42,-0.014 -0.214,-0.494 -0.179,-0.636 0.362,-0.261 0.328,-0.118 0.303,0.206 0.343,0.836 0.319,0.123 -0.093,0.829 0.396,0.761 0.894,0.704 0.716,-0.259 0.506,0.008 0.302,0.148 0.74,0.63 0.376,0.079 1.175,-0.33 0.012,-0.62 -0.099,-0.45 -0.276,-0.283 -0.794,0.053 -0.618,-0.466 -0.526,0.128 -0.973,0.713 -0.487,-0.28 -0.306,-0.381 -0.494,-0.388 -0.062,-0.736 0.414,-0.848 0.306,-0.405 -0.274,-0.296 -0.689,-0.208 -1.196,0.213 -0.056,-0.291 0.006,-0.314 -0.487,0.615 -0.5,-0.129 -0.674,0.066 -1.488,-0.542 -0.53,-0.671 -0.222,-0.546 -0.401,-1.506 -0.512,-0.948 -3.539,-3.261 -1.6099996,-0.829 -0.775,-0.922 -0.486,-0.228 -0.464,-0.093 -0.595,-0.299 0.4,-0.368 0.275,-0.125 -0.286,0.385 0.217,0.097 0.346,-0.222 0.187,-0.266 0.274,-1.133 0.283,-1.728 -0.076,-0.685 1.9629996,0.138 1.307,-0.116 0.433,-0.156 1.648,-0.265 0.427,-0.192 0.792,-0.591 0.933,-1.049 0.8,-1.388 0.127,-0.375 0.051,0.096 0.072,-0.06 0.085,-0.53 0.105,-1.253 0.397,-1.191 1.689,-2.745 0.784,-1.1 0.261,-0.502 0.272,-0.367 0.192,0.349 0.091,0.104 0.053,0.164 -0.161,0.076 -0.262,0.356 -0.366,0.238 -0.088,0.122 0.215,-0.027 0.643,-0.259 0.363,-0.314 1.804,-0.583 0.978,-0.967 0.038,-0.216 1.451,-1.218 0.201,0.047 0.231,0.147 -0.402,0.804 0.283,0.21 -0.251,0.955 0.526,0.015 0.118,0.438 0.029,-0.377 -0.006,-0.542 0.042,-0.534 0.078,-0.37 0.37,0.167 0.833,-0.398 -1.009,-0.05 -0.605,-0.874 -0.336,-0.007 1.125,-1.29 1.028,-0.784 0.232,0.015 0.112,0.146 0.024,0.237 -0.222,0.154 -0.218,0.278 0.1,0.245 0.149,0.035 0.494,-0.201 0.221,-0.252 1.053,0.022 0.309,-0.18 0.074,-0.179 1.364,-0.036 0.25,-0.126 0.853,-0.696 0.789,-0.847 0.363,-0.464 0.623,-1.188 0.534,-0.777 0.878,-0.779 0.21,0.097 -0.285,0.155 -0.198,0.33 0.273,0.438 1.849,0.899 0.465,0.049 0.186,0.536 -0.155,0.515 -0.477,0.57 -0.96,0.582 0.294,0.219 0.192,0.516 0.284,0.063 0.461,-0.194 0.361,-0.317 0.747,-1.037 0.235,-0.581 0.176,-0.147 0.626,0.14 0.354,0.299 0.404,0.529 -0.148,0.51 -0.165,0.287 0.523,0.396 0.58,0.083 0.553,0.318 0.777,-0.651 0.609,-0.139 0.571,0.021 0.743,-0.356 1.257,0.485 0.32,-0.126 0.504,0.084 0.536,0.292 0.189,0.311 -0.574,0.657 -0.093,0.675 0.2,0.281 0.363,0.048 0.046,0.393 0.226,0.098 1.134,-0.029 -0.087,0.187 -0.055,0.225 -0.351,0.497 2.021,0.279 0.271,-0.275 0.418,-0.109 0.888,-0.38 0.334,0.166 0.394,0.388 0.364,0.081 0.34,-0.079 0.792,-0.554 0.915,-0.027 0.375,0.181 0.396,-0.079 1.192,0.634 0.439,0.074 0.587,0.821 0.303,0.024 0.343,-0.348 0.298,0.011 0.291,0.333 0.476,0.102 0.222,0.524 0.239,0.19 1.803,0.388 0.893,-0.177 1.301,0.046 0.627,0.248 0.658,-0.032 1.075,0.899 0.57,0.14 0.111,0.207 1.623,0.218 0.568,-0.467 0.99,-0.124 0.891,-0.394 0.505,0.004 0.588,0.098 0.226,-0.047 0.163,-0.172 1.433,0.678 0.802,0.772 0.351,0.568 1.678,0.809 0.485,0.451 0.332,0.496 0.195,0.053 0.137,-0.145 0.586,0.042 0.214,0.072 z m -70.4649996,25.606 -0.108,0.039 0.006,-0.106 0.32,-0.283 0.59,-0.351 -0.022,0.076 -0.315,0.272 -0.471,0.353 z m 51.0199996,34.074 -0.355,0.047 -0.163,-0.073 -0.023,-0.079 0.067,-0.291 -0.005,-0.123 0.179,-0.046 0.206,0.138 0.06,0.143 0.034,0.284 z m -11.479,2.65 -0.135,0.021 0.181,-0.28 0.126,-0.547 0.169,0.076 0.034,0.1 -0.279,0.561 -0.096,0.069 z m 12.243,-0.503 -10e-4,0.149 -0.088,0.144 0.084,0.263 -0.146,0.451 -0.056,0.286 -0.078,0.18 -0.078,0.069 -0.079,-0.041 -0.017,-0.099 0.046,-0.158 -0.185,0.005 -0.057,-0.394 0.103,-0.125 0.037,-0.168 0.012,-0.114 0.121,-0.503 0.043,-0.035 0.014,0.12 0.039,0.035 0.064,-0.049 0.096,-0.224 0.041,-0.026 0.085,0.234 z m 3.549,0.005 0.063,0.156 0.54,-0.038 0.155,0.028 0.062,0.072 -0.073,0.105 -0.208,0.139 -0.608,0.244 -0.494,0.32 -0.064,-0.03 -0.09,-0.35 -0.091,-0.142 -0.056,-0.198 0,-0.074 0.091,-0.137 0.181,-0.2 0.128,-0.072 0.464,0.177 z m 3.579,0.638 -0.09,0.138 -0.245,-0.049 -0.131,-0.088 0.438,-0.364 0.072,0.073 -0.044,0.29 z m -58.9839996,-0.263 0.258,0.281 0.137,0.016 0.432,-0.085 0.159,0.06 0.153,0.121 0.095,0.185 0.018,0.324 -0.07,0.289 0.021,0.407 -0.015,0.175 0.2289996,0.23 0.072,0.311 0.037,0.334 -0.4979996,0.111 -0.498,0.018 -0.43,0.226 -0.088,0.167 0.069,0.247 -0.118,0.063 -0.109,-0.054 -0.208,-0.229 -0.228,-0.109 -0.799,-0.169 -1.003,-0.667 -0.432,-0.138 -0.438,-0.49 -0.396,-0.625 0.258,-0.101 0.26,-0.051 1.166,0.093 0.146,-0.449 0.15,-0.112 0.37,-0.127 0.346,-0.25 0.155,0.006 0.158,0.096 0.328,-0.149 0.174,-0.032 0.139,0.077 z m 51.6389996,3.205 -0.31,0.081 -0.073,-0.165 0.163,-0.411 0.13,-0.233 0.097,-0.055 0.356,-0.465 0.395,-0.339 0.363,-0.497 0.368,-0.711 0.068,-0.266 0.171,-0.028 0.281,0.175 0.174,0.246 -0.081,0.195 -0.931,1.008 -0.078,0.131 -0.084,0.341 -0.077,0.119 -0.123,0.054 -0.089,0.148 -0.056,0.243 -0.115,0.127 -0.174,0.011 -0.12,0.067 -0.067,0.123 -0.188,0.101 z m -0.803,-1.41 -0.147,0.172 -0.555,-0.104 0.115,-0.339 0.424,-0.214 0.464,0.333 -0.301,0.152 z m 9.7,1.382 -0.135,0.032 0.202,-0.366 0.271,-0.405 0.255,-0.254 0.332,-0.106 -0.037,0.185 -0.433,0.342 -0.455,0.572 z m -45.895,6.792 -0.206,0.086 -0.218,-0.043 -0.172,-0.533 0.132,-0.017 0.276,-0.352 0.611,-0.285 0.15,-0.032 -0.573,1.176 z m 23.667,0.494 -0.083,0.034 -0.205,-0.164 -0.135,-0.174 0.089,-0.133 0.397,-0.28 0.19,-0.005 0.078,0.044 0.031,0.087 -0.015,0.129 -0.085,0.161 -0.262,0.301 z m 0.193,0.667 0.102,0.043 0.106,-0.318 0.075,-0.01 0.332,0.269 0.204,-0.06 0.131,0.331 0.118,0.03 0.109,-0.04 0.066,0.023 -0.023,0.349 -0.243,0.353 -0.113,0.089 -0.158,-0.091 -0.059,-0.034 -0.104,-0.156 -0.079,-0.197 -0.047,-0.003 -0.185,0.232 0.004,0.115 0.077,0.172 -0.011,0.107 -0.202,0.051 -0.198,-0.027 -0.242,0.15 -0.058,-0.093 -0.037,-0.263 -0.075,0.03 -0.114,0.322 -0.125,0.204 -0.227,0.169 -0.05,0.082 -0.166,0.011 -0.246,0.106 -0.152,-0.018 -0.906,-0.349 -0.213,-0.128 0.745,-0.803 0.392,-0.312 0.227,0.017 0.227,0.097 0.12,-0.016 0.009,-0.357 -0.211,-0.267 0.008,-0.111 0.467,-0.183 0.175,0.026 0.193,0.094 0.183,0.152 0.174,0.212 z m 49.778,1.057 0.713,0.121 0.522,-0.027 0.477,0.792 0.293,0.637 0.172,0.445 0.098,0.429 0.131,0.413 -0.012,0.058 -0.275,-0.278 -0.198,-0.565 -0.101,-0.221 -0.1,-0.1 -0.105,-0.209 -0.205,-0.542 -0.007,-0.153 -0.091,-0.142 -0.105,-0.059 -0.119,0.023 -0.041,0.055 0.018,0.375 0.094,0.416 0.515,0.906 0.344,0.514 0.068,0.17 0.045,0.468 -0.148,0.211 0.182,0.43 -0.007,0.084 -0.04,0.082 -0.49,0.19 -0.449,0.793 -0.492,0.463 -0.227,0.074 -0.109,-0.077 -0.103,-0.177 -0.061,-0.237 -0.018,-0.297 0.123,-0.188 0.243,-0.978 0.007,-0.322 -0.303,-0.448 -0.183,-0.367 -0.099,-0.513 -0.166,-1.364 -0.077,-0.438 -0.108,-0.366 -0.14,-0.293 -0.105,-0.323 -0.072,-0.353 0.027,-0.137 0.243,0.184 0.292,0.506 0.149,0.335 z m 1.031,-0.357 -0.02,0.132 -0.383,-0.013 -0.386,-0.194 -0.19,-0.255 0.038,-0.115 0.359,-0.107 0.34,0.242 0.242,0.31 z m -3.978,-0.082 0.401,0.518 0.003,0.119 -0.082,0.355 -0.218,0.1 0.062,0.141 0.162,0.106 0.116,-0.088 0.423,-0.497 0.13,-0.104 0.079,-0.011 0.516,0.15 0.451,0.237 0.133,0.189 0.075,0.331 -0.12,0.714 -0.37,0.124 -0.175,-0.013 -0.187,-0.104 -0.301,0.248 0.25,0.189 0.76,0.043 0.23,0.4 0.066,0.308 -0.164,0.564 -0.431,-0.156 -0.38,-0.327 -0.779,-0.464 -0.187,-0.021 -0.125,0.082 -0.034,0.281 0.008,0.608 -0.208,0.315 -0.614,-0.139 -0.241,-0.46 -0.225,-0.73 -0.847,-0.869 -0.229,-0.174 -0.305,-0.522 0.122,-0.415 0.036,-0.24 0.163,-0.064 0.238,-0.186 0.133,-0.403 0.214,0.326 0.286,0.313 0.004,-0.294 0.135,-0.235 0.281,0.009 0.132,-0.049 0.184,-0.22 0.266,-0.114 0.163,0.129 z m -48.181,2.224 0.02,0.289 0.114,-0.035 0.432,-0.297 0.225,-0.087 0.293,-0.014 0.232,0.136 0.047,0.104 -0.021,0.124 -0.186,0.251 0.008,0.163 0.2,0.3 0.491,0.163 0.06,0.09 -0.002,0.108 -0.338,0.495 -0.124,0.115 -0.088,0.028 -0.614,-0.089 -0.562,-0.162 -0.227,-0.028 -0.081,0.053 -0.159,0.152 0.114,0.045 0.492,0.036 0.174,0.221 0.076,0.163 0.038,0.179 -0.098,0.073 -0.21,0.054 -0.252,-0.001 -0.312,0.201 -0.172,0.23 -0.625,0.058 -0.476,0.306 -0.167,0.151 -0.059,0.18 -0.18,0.13 -0.405,0.131 0.242,0.117 0.038,0.099 0.004,0.137 -0.033,0.118 -0.32,0.525 -0.604,0.431 -0.153,-0.02 -0.066,-0.054 -0.054,-0.082 -0.002,-0.083 0.779,-0.866 -0.031,-0.042 -0.212,-0.029 -0.335,-0.239 -0.237,0.154 -0.054,-0.006 0.063,-0.205 0.154,-0.244 -0.027,-0.069 -0.085,-0.061 -0.195,-0.037 -0.306,-0.012 -0.227,0.058 -0.147,0.128 -0.012,0.054 0.313,-0.015 0.085,0.065 0.084,0.121 0.051,0.14 0.019,0.159 -0.066,0.213 -0.149,0.267 -0.219,-0.047 -0.449,-0.595 -0.198,-0.874 -0.384,-0.67 -0.017,-0.161 0.109,-0.415 0.387,-0.591 0.416,-0.162 0.296,-0.249 0.287,-0.075 0.177,0.006 0.243,0.107 0.098,0.227 -0.059,0.106 0.022,0.056 0.17,0.136 0.184,0.475 0.214,0.42 0.143,0.17 0.188,0.105 -0.194,-0.32 -0.115,-0.397 -0.058,-0.794 -0.056,-0.211 0.109,-0.056 0.307,0.031 -0.008,-0.119 -0.324,-0.269 -0.199,-0.223 -0.075,-0.176 0.004,-0.153 0.177,-0.226 0.1,-0.064 0.104,-0.028 0.206,0.048 0.092,0.071 0.264,0.508 0.124,0.158 0.103,0 0.095,-0.084 0.088,-0.168 0.091,-0.101 0.093,-0.033 0.294,0.075 0.098,-0.028 0.048,-0.127 -0.002,-0.228 0.073,-0.082 0.018,-0.168 -0.16,-0.248 0.184,-0.076 0.61,0.189 0.261,0.207 -0.135,0.385 z m -0.961,-0.137 -0.079,0.146 -0.074,-0.038 -0.157,-0.171 -0.32,-0.25 -0.146,-0.171 -0.009,-0.073 0.11,-0.081 0.376,0.202 0.16,0.184 0.139,0.252 z m 51.277,2.607 0.238,0.569 0.173,0.44 0.154,0.528 0.257,1.089 0.12,0.41 0.038,0.224 0.028,0.585 -0.039,0.126 -0.077,0.115 -0.015,0.167 0.071,0.444 0.004,0.673 -0.067,0.378 -0.079,0.057 -0.192,-0.124 -0.158,-0.205 -0.116,-0.213 -0.287,-0.675 -0.085,-0.315 -0.005,-0.227 0.044,-0.166 0.094,-0.103 0.163,-0.276 -0.023,-0.044 -0.124,0.062 -0.253,0.035 -0.223,-0.218 -0.174,-0.115 0.035,-0.394 -0.046,-0.111 -0.342,0.122 -0.128,-0.11 -0.028,-0.148 0.006,-0.221 0.065,-0.194 0.324,-0.491 -0.033,-0.091 -0.158,-0.02 -0.208,-0.168 -0.095,-0.552 -0.224,-0.315 -0.132,0.029 -0.3,0.89 -0.148,0.194 -0.422,0.125 0.086,-0.247 0.04,-0.221 -0.15,-0.671 -0.004,-0.259 0.1,-0.191 0.298,-0.08 0.158,-0.113 0.123,-0.185 0.031,-0.18 0.231,-0.478 0.108,-0.093 0.288,0.006 0.605,0.529 0.184,0.078 0.269,0.339 z m -50.622,1.173 -0.357,0.166 -0.063,-0.007 -0.22,0.336 -0.168,0.145 -0.222,-0.265 0.057,-0.412 0.194,-0.274 0.982,0.092 0.076,0.077 0.002,0.065 -0.072,0.054 -0.209,0.023 z m 55.122002,0.625 0.187,0.161 0.102,-0.169 0.189,0.008 0.352,0.15 0.209,0.225 0.118,0.257 0.01,0.153 -0.036,0.347 0.026,0.355 -0.015,0.184 -0.047,0.152 -0.079,0.12 -0.086,0.015 -0.273,-0.318 -0.313,-0.575 -0.238,-0.175 -0.01,0.06 0.065,0.165 0.195,0.31 0.035,0.186 0.137,0.227 0.061,0.171 0.035,0.225 -0.001,0.196 -0.038,0.168 -0.063,0.107 -0.089,0.047 -0.478,-0.047 -0.285,0.112 -0.333002,-0.063 -0.08,-0.102 -0.05,-0.166 -0.025,-0.404 -0.084,-0.58 0.02,-0.447 -0.215,-0.405 -0.184,-0.245 -0.265,-0.219 -0.174,-0.218 0.048,-0.174 0.271,-0.13 0.444,0.031 0.957002,0.305 z m -1.749002,0.813 0.182,0.354 0.264,-0.029 0.148,0.268 0.112,0.4 -0.082,0.256 -0.117,-0.057 -0.13,0.148 -0.08,0.491 0.037,0.491 -0.04,0.488 -0.151,0.496 -0.031,0.332 -0.059,0.099 -0.065,0.034 -0.084,-0.09 -0.122,-0.07 -0.154,0.279 -0.188,0.002 -0.156,-0.635 0.139,-1.062 0.312,-0.217 -0.186,-0.29 -0.392,-0.338 0.033,-0.188 -0.298,-0.545 -0.017,-0.13 0.047,-0.456 0.278,-0.408 0.368,-0.072 0.257,0.175 0.144,0.149 0.031,0.125 z m 3.487002,1.628 -0.03,0.074 -0.357,-0.007 -0.129,-0.061 -0.048,-0.217 0.033,-0.201 0.083,-0.156 0.101,-0.301 0.079,-0.502 0.523,0.562 0.161,0.25 0.086,0.305 -0.186,0.114 -0.225,0.055 -0.091,0.085 z m -60.232002,0.055 -0.138,0.011 -0.208,-0.134 0.028,-0.161 0.296,-0.194 0.299,0.03 0.022,0.108 -0.014,0.122 -0.024,0.07 -0.095,0.073 -0.166,0.075 z m -1.331,0.401 -0.192,0.12 -0.063,-0.042 -0.009,-0.099 0.045,-0.158 0.089,-0.158 0.296,-0.3 0.298,-0.199 0.152,0.012 0.052,0.127 -0.186,0.263 -0.482,0.434 z m 63.344002,1.646 -0.058,0.833 -0.111,-0.047 -0.106,-10e-4 -0.216,0.118 -0.228,-0.052 -0.107,-0.092 -0.039,-0.107 0.041,-0.248 -0.126,-0.138 -0.426,-0.05 -0.16,-0.059 -0.088,-0.261 -0.021,-0.342 0.067,-0.128 0.215,-0.09 0.167,-0.417 0.093,-0.056 0.354,-0.828 0.178,0.058 0.311,0.504 0.39,0.726 -0.13,0.677 z m -1.873,-0.693 -0.144,0.016 -0.17,-0.077 -0.403,-0.411 -0.007,-0.121 0.058,-0.138 0.229,-0.252 0.094,-0.061 0.55,0.027 0.176,0.067 0.04,0.118 -0.009,0.12 -0.058,0.121 -0.013,0.126 0.031,0.132 -0.064,0.131 -0.31,0.202 z m -2.207,-0.464 0.532,0.108 0.487,-0.011 0.167,0.208 0.11,0.219 0.064,0.206 0.018,0.193 -0.013,0.136 -0.059,0.146 0.013,0.049 0.952,0.477 0.449,0.5 0.179,0.262 0.104,0.221 0.188,0.553 0.396,0.64 0.208,0.194 0.118,0.189 -0.066,0.007 -0.279,-0.14 -0.604,-0.428 -0.05,0.017 -0.055,0.232 -0.094,0.203 -0.139,0.146 0.111,0.043 0.487,-0.092 0.41,0.416 0.159,0.075 0.154,0.298 0.005,0.114 -0.09,0.22 -0.069,0.09 0.023,0.061 0.114,0.031 0.452,-0.062 0.081,0.108 -0.067,0.856 0.064,0.314 -10e-4,0.143 -0.052,0.189 -0.002,0.16 0.041,0.164 0.005,0.146 -0.115,0.381 -0.121,0.064 -0.195,0.003 -0.154,-0.108 -0.216,-0.328 -0.21,-0.51 -0.081,-0.073 -0.276,-0.077 -0.05,-0.061 -0.176,-0.011 -0.125,-0.21 0.015,-0.276 -0.108,-0.283 0.013,-0.126 -0.121,-0.053 -0.102,0.08 0.053,0.277 -0.06,0.214 -0.219,-0.09 -0.366,-0.686 -0.416,-0.552 -0.163,-0.131 0.043,-0.161 0.205,-0.085 0.166,0.007 0.034,-0.096 -0.347,-0.536 0.012,-0.152 0.126,-0.271 -0.158,-0.113 -0.433,0.085 -0.153,-0.057 -0.125,-0.218 -0.073,-0.189 -0.375,-0.034 -0.142,0.023 -0.245002,-0.287 -0.111,-0.181 0.044,-0.093 0.225,-0.163 0.132002,0.023 0.253,0.174 0.099,-0.006 0.251,-0.231 0.038,-0.208 0.188,-0.172 -0.03,-0.181 -0.104,-0.309 -0.23,-0.086 -0.47,0.184 -0.409002,0.283 -0.164,-0.11 -0.036,-0.173 0.438,-0.472 0.192002,-0.261 -0.037,-0.155 -0.141002,-0.201 -0.012,-0.503 0.091,-0.12 z m 7.26,4.248 -0.098,0.542 -0.193,0.553 -0.295,0.297 -0.208,-0.066 -0.153,-0.24 -0.142,0.013 -0.151,-0.049 -0.085,-0.199 0.08,-0.257 -0.071,-0.199 -0.075,0.174 -0.133,0.159 -0.335,0.208 -0.231,0.396 -0.109,0.258 -0.136,-0.281 -0.087,-0.667 -0.011,-0.284 0.243,-0.429 0.314,-0.408 0.063,-1.223 0.998,-0.618 0.093,0.032 0.324,0.461 0.345,0.643 0.089,0.289 0.002,0.503 -0.038,0.392 z m -69.003002,-1.648 -0.109,0.157 -0.213,-0.011 -0.119,-0.051 -0.04,-0.138 0.328,-0.416 0.075,-0.056 0.059,0.016 0.026,0.172 -0.007,0.327 z m 62.476002,1.378 0.062,0.139 0.004,0.088 -0.406,0.328 -0.007,0.068 -0.095,0.202 -0.085,0.074 -0.151,0.219 -0.289002,0.236 0.043,-0.709 -0.287,-0.413 0.289,-0.209 0.189002,0.06 0.314,0.024 0.306,-0.182 0.113,0.075 z m -76.842002,1.13 0.043,0.003 0.086,-0.038 0.182,-0.277 0.06,-0.012 10e-4,0.085 -0.086,0.274 0.146,0.366 0.136,0.175 -0.014,0.062 -0.341,0.126 -0.26,-0.091 -0.137,0.032 -0.125,0.127 -0.085,-0.141 -0.059,-0.675 0.02,-0.118 0.142,-0.235 0.183,-0.106 0.079,0.031 0.066,0.094 0.017,0.098 -0.054,0.22 z m 0.998,-0.113 -0.039,0.388 -0.386,-0.247 -0.103,-0.123 0.069,-0.091 0.367,-0.023 0.092,0.096 z m 77.086002,2.17 0.069,0.066 0.07,-0.046 0.114,-0.173 0.201,0.034 0.146,0.058 0.089,0.072 -0.047,0.252 -0.036,0.41 -0.083,0.145 -0.082,0.204 -0.285,-0.121 -0.231,-0.26 -0.335,-0.448 -0.187,-0.324 -0.015,-0.137 -0.118,-0.099 -0.23,-0.56 -0.13,-0.444 -0.207,-0.051 -0.261,-0.124 -0.101,-0.244 0.07,-0.214 0.372,-0.108 0.559,0.55 0.085,0.233 0.2,0.272 0.038,0.379 0.102,0.148 0.233,0.53 z m -75.805002,-1.144 -0.171,0.107 -0.054,0.136 -0.13,0.058 -0.109,0.111 -0.368,0.502 -0.161,0.092 0.178,-0.428 0.028,-0.136 0.003,-0.091 -0.055,-0.324 0.107,0.014 0.088,-0.067 0.178,-0.288 0.16,-0.025 0.172,-0.343 0.093,-0.027 0.046,0.046 -0.076,0.208 0.165,0.191 -0.042,0.185 -0.052,0.079 z m 80.078002,0.24 0.287,0.637 0.015,0.223 -0.273,0.078 -0.215,-0.032 -0.111,-0.073 -0.029,-0.104 0.07,-0.322 -0.142,-0.189 -0.164,-0.065 -0.146,0.111 -0.008,-0.318 0.11,-0.229 -0.061,-0.311 -0.002,-0.235 0.037,-0.075 0.148,0.007 0.303,0.243 0.181,0.654 z m -79.074002,-0.353 -0.015,0.39 -0.041,0.061 -0.075,-0.104 -0.158,0.116 -0.086,-0.084 0.037,-0.136 -0.012,-0.106 0.117,-0.009 0.028,-0.194 -0.021,-0.082 0.058,-0.175 0.083,-0.041 0.085,0.364 z m 0.43,0.877 -0.091,0.025 -0.075,-0.053 -0.104,-0.277 -0.009,-0.117 0.201,0.087 0.076,0.202 0.002,0.133 z m -11.546,-0.04 0.272,0.805 0.118,0.157 0.175,0.085 0.246,0.086 0.146,0.119 0.128,0.181 0.017,0.083 -0.771,-0.323 -0.485,0.472 -0.146,0.062 -1.376,0.022 -0.275,0.087 -0.178,0.153 -0.314,0.429 -0.16,0.167 -0.168,0.099 -0.357,0.11 -0.429,-0.015 -0.224,-0.056 -0.12,-0.204 -0.106,-0.402 0,-0.112 0.045,-0.193 0.382,-0.266 0.127,-0.141 0.495,-0.917 0.144,-0.126 0.152,-0.031 0.423,0.064 0.361,-0.269 0.778,-0.41 0.171,-0.049 0.56,-0.009 0.153,0.064 0.118,0.115 0.098,0.163 z m 3.306,0.651 -0.067,0.022 -0.193,-0.149 -0.07,-0.111 -0.051,-0.174 0.394,-0.25 0.082,-0.003 0.074,0.141 0.013,0.11 -0.109,0.316 -0.073,0.098 z m -0.719,2.156 -0.243,0.105 -0.258,-0.11 -0.221,-0.203 -0.025,-0.242 0.492,0.157 0.105,0.074 0.15,0.219 z m -8.439,1.269 -0.123,0.036 -0.029,-0.049 -0.015,-0.21 -0.094,-0.334 0.179,-0.121 0.112,-0.028 0.047,0.051 0.129,0.25 0.129,0.066 0.095,0.053 -0.167,0.076 -0.263,0.21 z m -0.7859996,0.315 -0.106,0.084 -0.085,0.018 -0.064,-0.047 -0.293,0.057 -0.057,-0.034 -0.129,-0.285 -0.008,-0.147 0.051,-0.116 0.13,-0.106 0.21,-0.095 0.207,0.02 0.36,0.263 0.169,0.154 0.032,0.095 -0.126,0.09 -0.291,0.049 z m -2.172,0.808 0.121,0.226 0.209,-0.143 0.154,-0.196 0.12,-0.253 0.078,-0.1 0.103,0.134 0.294,0.182 -0.248,0.28 -0.476,0.418 -0.16,0.28 -0.01,0.121 0.462,-0.092 0.129,0.013 0.082,0.096 -0.126,0.113 -0.251,0.103 -0.218,0.199 -0.506,0.344 -0.191,0.286 -0.226,0.109 -0.308,0.026 -0.542,0.186 -0.329,0.175 -0.083,0.094 -0.104,0.043 -0.124,-0.005 -0.133,0.077 -0.144,0.158 -0.12,0.074 -0.196,0.017 -0.102,0.062 -0.114,-0.002 -0.313,-0.189 -0.078,-0.11 0.277,-0.221 0.2,-0.074 0.305,-0.033 0.299,-0.205 0.616,-0.271 0.191,-0.148 0.123,-0.517 0.14,-0.088 0.075,-0.207 0.341,0.006 0.156,0.232 0.055,0.032 0.027,-0.022 0.015,-0.186 0.175,-0.13 -0.101,-0.096 -0.315,-0.12 -0.234,-0.057 -0.153,0.007 -0.124,-0.067 -0.096,-0.142 -0.043,-0.141 0.008,-0.14 0.078,-0.157 0.147,-0.174 0.168,-0.099 0.363,-0.071 0.322,-0.116 0.17,-0.018 0.129,0.049 0.036,0.448 z m 1.138,0.843 -0.04,0.014 -0.072,-0.117 -0.003,-0.107 0.046,-0.078 0.131,-0.182 0.093,-0.064 0.115,-0.033 0.031,0.049 -0.101,0.215 -0.126,0.145 -0.074,0.158 z m -4.924,1.781 -0.859,0.501 -0.279,0.366 -0.213,0.352 -0.167,0.192 -0.122,0.033 -0.136,0.093 -0.284,0.245 -0.12,0.03 -0.91199996,0.571 -0.064,0.009 0.044,-0.149 0.278,-0.211 0.182,-0.193 0.20499996,-0.318 0.113,-0.118 0.036,-0.16 0.015,-0.324 0.051,-0.123 0.196,-0.244 0.143,-0.133 0.188,-0.046 0.38,0.041 0.158,-0.125 0.049,-0.094 -0.096,-0.086 -0.022,-0.149 0.025,-0.258 0.11,-0.229 0.195,-0.2 0.266,-0.156 0.336,-0.112 0.246,-0.005 0.442,0.236 0.065,0.108 -0.109,0.236 -0.062,0.222 -0.278,0.198 z m 209.3260016,21.047 0.336,-0.052 0.289,0.015 0.291,0.023 0.155,0.034 0.448,0.186 0.292,0.152 0.419,0.282 0.232,0.125 0.112,0.293 0.13,0.375 0.186,0 0.14,-0.22 0.356,-0.04 0.468,0.154 0.412,0.438 0.592,0.39 0.362,0.194 0.368,-0.001 0.467,-0.193 0.497,-0.374 0.358,-0.065 0.212,0.037 0.121,0.291 0.148,0.111 0.386,-0.033 0.805,0.056 0.641,-0.079 0.146,0.167 0.13,0.263 0.26,0.083 0.353,-0.083 0.555,0.057 -0.076,0.042 -0.082,-0.009 -0.107,0.063 -0.133,0.134 -0.307,0.191 -0.48,0.249 -0.554,0.228 -1.123,0.411 -0.7,0.426 -0.31,0.255 -1.205,1.276 -0.727,0.677 -1.177,0.948 -0.112,0.12 -0.007,0.112 0.096,0.105 0.24,0.152 0.187,0.019 0.239,-0.031 0.945,-0.262 0.398,-0.182 0.391,-0.306 0.04,-0.01 0.163,0.056 0.051,0.027 0.508,-0.353 0.167,-0.045 0.131,0.009 0.163,0.139 0.038,0.084 -0.055,0.162 -0.146,0.239 -0.071,0.201 0.004,0.163 -0.063,0.176 -0.16,0.239 0.058,0.064 0.429,-0.172 0.063,-0.067 0.007,-0.04 -0.026,-0.048 0.049,-0.022 0.338,0.235 0.225,0.13 0.189,0.062 0.358,-0.075 0.527,-0.212 0.45,-0.258 0.372,-0.306 0.464,-0.188 0.557,-0.069 0.398,-0.108 0.24,-0.148 0.322,-0.289 0.181,-0.085 0.228,-0.026 0.171,-0.112 0.115,-0.198 0.218,-0.225 0.32,-0.252 0.183,-0.102 0.045,0.048 0.017,0.089 -0.012,0.131 0.08,0.105 0.171,0.081 0.078,0.107 -0.015,0.133 0.046,0.113 0.108,0.094 0.028,0.204 -0.05,0.313 -0.006,0.203 0.038,0.092 0.038,0.052 0.061,-0.05 0.077,-0.11 0.028,-0.068 0.02,-0.069 0.468,-0.316 0.091,-0.016 0.153,0.082 0.708,0.114 0.279,0.081 0.293,0.181 0.1,0.07 0.359,0.584 0.164,0.228 0.102,0.063 0.058,0.089 0.046,0.206 0.056,0.062 0.526,0.044 0.238,-0.037 0.145,-0.083 0.161,0.054 0.177,0.19 0.174,0.053 0.171,-0.083 0.161,0.002 0.151,0.089 0.07,0.064 0.046,-0.003 0.299,-0.29 0.36,-0.258 0.481,-0.279 0.279,-0.124 0.077,0.03 0.443,-0.093 0.399,-0.008 0.529,0.056 0.49,-0.065 0.451,-0.187 0.399,-0.104 0.347,-0.022 0.131,0.052 -0.085,0.127 -0.046,0.217 -0.006,0.308 -0.03,0.194 -0.053,0.082 -0.006,0.078 0.04,0.074 0.337,0.048 0.177,0.1 0.203,0.004 0.229,-0.091 0.175,0.035 0.122,0.159 0.177,0.029 0.172,-0.114 0.121,-0.107 0.104,-0.047 0.081,-0.01 0.086,0.054 0.058,0.091 0.146,0.25 0.072,0.169 0.044,0.251 0.031,0.083 -0.004,0.146 -0.098,0.099 -0.026,0.079 0.059,0.079 0.332,0.022 0.151,0.078 0.056,0.087 -0.038,0.096 0.021,0.103 0.081,0.108 0.266,0.164 0.065,0.078 -0.019,0.083 -0.079,0.053 -0.139,0.024 -1.016,-0.154 -0.299,-0.025 -0.044,0.057 -0.028,0.008 -0.048,-0.015 -0.087,-0.003 -0.044,-0.037 -0.037,-0.103 -0.088,-0.066 -0.141,-0.029 -0.121,0.078 -0.141,0.305 0.022,0.057 -0.023,0.195 0.036,0.053 -0.002,0.044 -0.04,0.037 -0.083,-0.005 -0.126,-0.046 -0.477,-0.461 -0.361,-0.23 -0.447,-0.169 -0.354,-0.083 -0.26,0.004 -0.214,0.119 -0.167,0.232 -0.261,0.132 -0.355,0.032 -0.192,0.063 -0.03,0.093 -0.128,0.002 -0.226,-0.088 -0.233,-0.025 -0.241,0.039 -0.176,0.091 -0.187,0.285 -0.037,0.14 -0.135,0.122 -0.359,0.19 -0.018,0.07 -0.189,0.216 -0.06,0.119 0.001,0.117 -0.063,-0.007 -0.127,-0.131 -0.005,-0.176 0.117,-0.222 0.105,-0.107 0.092,0.007 0.057,-0.099 0.022,-0.204 -0.033,-0.102 -0.179,0.04 -0.094,0.081 -0.119,0.018 -0.143,-0.046 -0.126,0.111 -0.109,0.269 -0.13,0.176 -0.151,0.083 -0.102,-0.092 -0.052,-0.267 0,-0.209 0.061,-0.253 -0.031,-0.049 -0.064,0.081 -0.096,0.211 -0.128,0.46 -0.082,0.149 -0.111,0.063 -0.176,0.278 -0.24,0.492 -0.271,0.477 -0.302,0.46 -0.182,0.247 -0.061,0.035 -0.027,0.082 -0.015,0.295 -0.054,0.2 -0.158,0.157 -0.413,0.198 -0.065,0.135 -0.009,0.111 -0.266,0.459 -0.13,0.281 -0.085,0.292 0.027,0.184 0.139,0.075 0.113,-0.029 0.086,-0.133 0.132,-0.121 0.179,-0.108 0.13,-0.159 0.181,-0.387 0.203,-0.223 0.108,-0.013 0.03,0.006 0.211,-0.101 0.17,0.033 0.103,0.152 0.105,0.104 0.023,0.098 -0.052,0.218 -0.097,0.23 -0.141,0.241 -0.128,0.361 -0.115,0.481 -0.024,0.363 0.066,0.245 -0.063,0.219 -0.192,0.192 -0.155,0.257 -0.117,0.321 -0.066,0.269 -0.016,0.218 0.017,0.163 0.072,0.22 -0.005,0.111 -0.208,0.483 -0.075,0.234 -0.013,0.185 -0.052,0.182 -0.159,0.369 -0.05,0.205 -0.009,0.188 0.036,0.308 -0.02,0.104 0.009,0.079 0.039,0.053 0,0.097 -0.041,0.141 0.016,0.109 0.072,0.078 0.046,0.149 0.021,0.219 0.055,0.183 0.089,0.146 0.016,0.213 -0.057,0.278 -0.029,0.522 -10e-4,0.765 0.042,0.49 0.086,0.217 0.096,0.16 0.106,0.103 0.122,0.316 0.138,0.53 0.127,0.35 0.118,0.17 0.106,0.094 0.084,0.055 0.062,0.008 0.035,0.083 0.158,0.05 0.289,0.021 0.266,-0.033 0.242,-0.086 0.77,-0.446 0.299,-0.243 0.166,-0.218 0.161,-0.287 0.155,-0.356 0.316,-0.534 0.154,-0.323 0.148,-0.41 0.112,-0.43 0.075,-0.451 0.036,-0.469 -0.004,-0.486 -0.076,-0.49 -0.147,-0.495 -0.079,-0.253 -0.031,-0.067 -0.266,-0.636 -0.3,-0.888 0.004,-0.076 0.28,-0.531 0.007,-0.072 -0.03,-0.432 -0.06,-0.217 -0.143,-0.292 0.005,-0.074 0.291,-0.373 0.176,-0.284 0.16,-0.345 0.104,-0.403 0.047,-0.461 -0.001,-0.308 -0.051,-0.154 0.005,-0.119 0.061,-0.083 0.312,-0.108 0.105,-0.183 0.022,-0.322 0.064,-0.16 0.106,0.003 0.098,-0.066 0.09,-0.135 0.119,-0.039 0.148,0.059 0.207,-0.2 0.266,-0.459 0.204,-0.257 0.143,-0.054 0.027,0.042 -0.088,0.137 -0.027,0.151 0.034,0.164 -0.03,0.159 -0.066,0.217 0.041,0.068 -0.114,0.349 -0.005,0.174 0.069,0.132 0.082,-0.046 0.095,-0.225 0.029,-0.12 -0.039,-0.015 0.015,-0.096 0.067,-0.176 0.06,-0.084 0.052,0.01 0.014,0.096 -0.023,0.183 -0.151,0.431 -0.03,0.131 0.034,0.037 0.182,-0.27 0.152,-0.43 0.116,-0.33 0.021,-0.18 -0.035,-0.465 0.007,-0.191 0.044,-0.132 0.158,-0.149 0.271,-0.166 0.268,-0.089 0.265,-0.011 0.185,-0.045 0.105,-0.079 -0.037,-0.064 -0.178,-0.047 -0.136,-0.104 -0.092,-0.161 -0.031,-0.185 0.031,-0.208 0.113,-0.205 0.196,-0.201 0.062,-0.147 -0.073,-0.095 0.084,-0.034 0.24,0.027 0.168,-0.026 0.095,-0.079 0.026,0.01 0.201,0.075 0.359,0.247 0.341,0.144 0.323,0.041 0.236,0.087 0.148,0.133 0.107,0.149 0.065,0.165 0.154,0.093 0.243,0.021 0.191,0.07 0.139,0.119 0.772,0.307 0.323,0.162 0.178,0.158 0.05,0.102 -0.015,0.1 0.018,0.107 0.132,0.208 0.05,0.019 0.031,0.1 0.011,0.182 0.039,0.122 0.066,0.062 -0.041,0.025 -0.238,-0.105 -0.135,0.032 -0.063,0.136 -0.01,0.129 0.043,0.121 0.304,0.364 0.079,0.332 0.015,0.401 -0.038,0.156 -0.032,0.343 -0.026,0.53 -0.006,0.181 -0.1,0.177 -0.271,0.254 -0.004,-0.048 -0.065,-0.013 -0.07,0.039 -0.098,0.217 -0.084,0.396 -0.102,0.215 -0.121,0.034 -0.073,0.057 -0.024,0.08 -0.129,0.054 -0.235,0.028 -0.161,0.12 -0.12,0.338 0.005,0.162 -0.056,0.201 0.004,0.172 0.063,0.143 0.19,0.143 0.316,0.143 0.189,0.022 0.13,-0.06 0.136,-0.234 0.132,-0.092 0.161,-0.039 0.061,-0.106 0.265,-0.469 0,-0.104 -0.097,-0.04 0.014,-0.029 0.125,-0.019 0.108,-0.063 0.092,-0.108 0.161,-0.08 0.392,-0.123 0.21,-0.14 0.133,-0.023 0.194,0.075 0.254,0.172 0.201,0.251 0.148,0.329 0.187,0.851 0.226,1.367 0.154,0.762 0.083,0.162 0.041,0.081 -0.199,1.061 -0.16,0.437 -0.28,0.253 -0.278,0.245 -0.347,0.41 -0.381,0.202 -0.195,0.119 -0.042,0.077 -0.047,-0.024 -0.104,0.222 -0.093,0.307 -0.037,0.237 0.033,0.13 -0.079,0.083 -0.143,0.156 -0.027,0.057 0.01,0.091 -0.03,0.044 -0.069,-0.002 -0.053,0.044 -0.129,0.163 -0.222,0.426 -0.042,0.089 0.037,0.066 0.254,0.041 0.173,0.078 0.135,0.117 0.487,0.229 0.149,0.142 0.148,0.078 0.147,0.014 0.101,-0.045 0.054,-0.104 0.069,-0.007 0.084,0.09 0.274,0.098 0.009,0.031 -0.76,0.17 -0.159,0.079 0.19,0.055 0.192,-0.013 0.193,-0.082 0.222,0.004 0.195,0.039 0.062,-0.033 0.025,-0.017 0.332,0.223 0.124,0.033 0.129,-0.025 0.133,-0.084 0.293,-0.109 0.452,-0.135 0.435,-0.055 0.418,0.025 0.264,-0.038 0.242,-0.14 0.534,-0.46 0.613,-0.371 1.009,-0.461 1.5,-0.555 0.232,-0.129 0.235,-0.127 0.122,-0.073 0.136,-0.066 1.044,-0.582 0.538,-0.344 0.269,-0.25 0.284,-0.208 0.298,-0.166 0.236,-0.213 0.175,-0.26 0.193,-0.194 0.211,-0.127 0.114,-0.134 0.016,-0.14 -0.04,-0.19 -0.094,-0.239 -0.013,-0.188 0.068,-0.138 0.015,-0.093 -0.038,-0.048 -0.443,-0.137 0.019,-0.66 -0.006,-0.019 0.023,-0.008 1.021,-0.293 0.651,-0.101 0.793,-0.027 0.945,0.145 0.367,0.132 0.232,0.168 0.268,0.045 0.304,-0.078 0.421,-0.026 0.539,0.026 0.288,0.04 0.038,0.053 0.037,-0.016 0.037,-0.084 0.144,-0.093 0.404,-0.139 0.054,0.029 0.083,-0.07 0.112,-0.17 0.206,-0.188 0.3,-0.206 0.271,-0.107 0.243,-0.009 0.162,-0.05 0.082,-0.093 0.025,-0.082 -0.032,-0.071 0.014,-0.079 0.014,-0.039 -0.012,-0.032 -0.029,-0.067 -0.023,-0.338 -0.047,-0.159 -0.066,-0.118 -0.084,-0.076 0.01,-0.079 0.146,-0.098 -0.011,0.091 0.038,0.028 0.068,-0.042 0.156,-0.204 0.018,-0.077 0.106,-0.079 0.079,-0.123 -0.087,-0.018 -0.207,0.037 -0.047,-0.037 0.107,-0.164 -0.02,-0.093 -0.034,-0.039 -0.068,-0.016 -0.233,0.144 -0.072,0.013 -0.01,-0.076 -0.12,-0.169 0.322,-0.3 1.138,-0.837 0.116,-0.127 0.043,-0.114 -0.031,-0.1 -0.032,-0.025 0.017,-0.025 1.097,-1.082 0.623,-0.501 0.514,-0.28 0.392,-0.133 0.265,0.019 0.15,-0.019 0.128,0 0.653,-10e-4 1.168,-0.002 1.168,-10e-4 1.168,-0.002 1.167,-0.002 1.168,-0.002 1.168,-0.002 1.167,-0.002 0.277,-0.764 0.257,-0.357 0.353,0.118 0.188,-0.01 0.209,-0.184 0.169,-0.112 0.111,0.017 0.095,0.168 0.079,0.112 0.093,-0.033 0.079,-0.159 -0.003,-0.221 0.108,-0.154 0.129,-0.023 0.119,0.005 0.06,-0.075 -0.007,-0.107 -0.042,-0.174 0.015,-0.209 0.297,-0.371 0.364,-0.251 0.127,-0.126 0.037,-0.255 0.209,-0.265 0.104,-0.153 0.025,-0.133 -0.054,-0.164 0.005,-0.313 0.072,-0.374 0.086,-0.408 0.192,-0.368 0.315,-0.402 0.082,-0.53 0.085,-0.56 0.382,-0.547 0.433,-0.623 0.247,-0.355 0.444,-0.647 0.316,-0.462 0.159,-0.212 0.166,-0.252 0.271,0.076 0.27,0.075 -0.04,0.366 0.044,0.266 0.128,0.153 0.185,0.104 0.14,0.035 0.165,-0.002 0.45,-0.207 0.528,-0.134 0.291,-0.125 0.053,-0.117 0.132,-0.041 0.211,0.035 0.39,0.293 0.455,0.442 0.359,0.349 0.011,0.604 0.007,0.638 0.007,0.67 0.005,0.477 0.009,0.654 0.007,0.518 0.009,0.675 0.005,0.36 0.049,0.104 -0.03,0.141 -0.013,0.071 0.003,0.057 0.02,0.071 -0.003,0.099 -0.046,0.089 -0.023,0.104 -0.006,0.169 0.049,0.104 0.082,0.061 0.069,0 0.089,0.061 0.115,0.108 0.175,0.094 0.181,0.033 0.125,-0.023 0.151,0.061 0.053,0.15 -0.03,0.141 -0.085,0.066 -0.092,0.051 -0.017,0.108 0.046,0.112 0.066,0.098 0.072,0.172 -0.03,0.15 -0.066,0.126 -0.029,0.13 0.056,0.112 0.148,0.149 0.092,0.144 0.145,0.079 0.069,-0.056 0.056,-0.075 0.059,-0.056 0.102,0.033 0.119,0.042 0.129,0.05 -0.016,0.121 0.079,0.203 0.061,0.39 -0.094,0.177 0.02,0.234 0.26,0.068 0.063,0.072 0.012,0.086 -0.573,0.599 -0.485,-0.083 -0.263,0.159 -0.275,0.046 -0.121,0.267 -0.151,0.057 -0.207,-0.016 -0.179,-0.075 -0.136,0.037 -0.191,0.481 -0.156,-0.042 -0.062,0.173 -0.082,0.076 -0.12,0.064 -0.104,-0.213 -0.066,-0.203 -0.098,-0.044 -0.13,-0.052 -0.133,0.002 -0.089,0.029 -0.111,0.131 -0.16,0.113 -0.121,-0.094 -0.095,-0.151 -0.081,0.243 -0.118,0.256 0.02,0.298 -0.051,0.177 -0.112,-0.047 -0.111,-0.155 -0.312,-0.124 -0.249,0.011 0.051,-0.166 0.235,-0.238 -0.073,-0.046 -0.115,0.033 -0.05,-0.033 0.083,-0.217 0.008,-0.239 -0.105,0.083 -0.132,0.252 -0.32,0.201 0.015,0.336 -0.301,0.686 -0.014,0.292 -0.193,0.232 -0.25,0.2 -0.333,-0.056 -0.254,0.173 -0.129,0.199 -0.112,0.03 -0.058,-0.253 -0.042,-0.078 -0.094,0.374 -0.095,0.023 -0.036,-0.265 -0.045,-0.175 -0.13,0.151 -0.086,0.4 -0.09,-0.034 -0.029,-0.148 -0.065,-0.045 -0.022,0.17 0.032,0.239 -0.047,0.127 -0.09,-0.068 -0.09,-0.115 -0.149,0.087 -0.137,0.035 0,-0.117 0.026,-0.144 -0.272,0.079 -0.327,0.265 -0.254,0.366 0.088,0.061 0.099,0.116 -0.441,0.563 -0.452,0.506 -0.341,0.823 -0.137,0.096 -0.118,0.15 -0.125,0.495 -0.144,0.439 0.081,0.196 0.053,0.201 0.128,0.198 0.109,0.018 0.118,-0.036 0.086,0.008 0.056,0.084 -0.024,0.101 -0.136,0.025 -0.254,0.176 -0.223,0.068 -0.111,0.212 -0.167,0.245 -0.325,0.382 0.139,0.118 0.501,0.132 0.224,0.136 0.338,0.71 -0.077,0.071 -0.031,0.13 0.301,0.182 0.096,0.508 0.247,0.173 0.368,0.106 0.451,-0.153 0.375,-0.211 -0.013,-0.173 -0.236,-0.404 -0.057,-0.189 -0.175,-0.123 -0.066,0.104 -0.113,-0.135 -0.013,-0.076 0.105,-0.037 0.123,0.015 0.143,0.071 0.368,0.441 0.102,0.576 0.022,0.365 -0.042,0.125 -0.107,-0.026 -0.204,0.025 -0.969,0.189 -0.215,0.166 -0.493,0.18 -0.031,-0.09 0.036,-0.186 -0.031,-0.382 -0.097,-0.018 -0.767,0.623 -0.296,0.039 -0.249,0.182 -0.056,-0.101 -0.044,-0.466 0.156,-0.392 -0.083,0.006 -0.26,0.235 -0.111,-0.145 -0.056,-0.159 -0.08,-0.09 -0.087,-0.034 0.075,0.347 -0.177,0.26 -0.048,0.671 -0.222,0.278 -0.692,0.179 -0.451,-0.038 -0.404,0.056 -0.537,0.128 -0.297,-0.076 -0.304,0.135 -1.032,0.037 -0.218,-0.072 -0.278,0.255 -0.445,0.151 -1.125,0.571 -0.248,0.208 -0.302,0.323 -0.203,0.174 -0.167,0.057 -0.103,0.145 -0.112,0.094 0.108,-0.322 0.117,-0.272 0.098,-0.529 -0.029,-0.428 -0.121,-0.176 -0.125,-0.118 0.146,0.423 0.024,0.518 -0.051,0.303 -0.276,0.583 -0.117,0.135 -0.137,0.12 -0.104,0.051 -0.096,0.093 -0.111,0.147 -0.105,0.292 0.064,0.266 0.538,0.097 0.145,-0.082 0.073,0.19 0.042,0.264 -0.041,0.286 -0.09,0.29 -0.068,0.36 -0.058,0.547 -0.087,0.491 -0.012,-0.149 0.055,-0.598 -0.088,0.063 -0.061,0.138 -0.164,0.77 -0.226,0.409 -0.208,0.283 -0.215,-0.047 0.048,0.225 -0.059,0.117 -0.05,0.244 -0.128,0.161 -0.12,-0.015 -0.172,0.111 -0.068,0.085 -0.005,0.163 -0.116,0.143 -0.417,0.742 -0.362,0.218 -0.086,-0.032 0.095,-0.35 0.065,-0.354 -0.22,-0.154 -0.21,-0.082 -0.241,0.011 -0.267,-0.276 -0.343,-0.2 -0.479,-0.544 0.014,-0.151 -0.012,-0.254 0.146,-0.401 0.139,-0.281 0.193,-0.146 0.56,-0.148 0.14,-0.223 0.083,-0.188 -0.277,0.323 -0.415,0.11 -0.224,0.121 -0.179,0.184 -0.106,0.231 -0.24,0.278 0.017,0.186 0.04,0.132 -0.019,0.276 0.152,0.268 0.3,0.439 0.058,0.68 0.229,0.454 0.352,0.528 0.27,0.15 0.014,0.196 -0.125,0.324 -0.165,0.148 0.214,-0.03 0.106,0.074 0.104,0.27 -0.008,0.275 -0.035,0.154 -0.065,0.062 0.002,-0.158 -0.046,-0.055 -0.076,0.068 -0.049,0.078 -0.021,0.307 -0.052,0.153 -0.184,0.045 -0.187,0.402 -0.173,0.228 -0.681,1.536 0.026,0.256 -0.125,0.082 -0.188,0.067 -0.191,0.153 -0.127,0.168 -0.118,0.452 -0.226,0.508 -0.141,-0.211 -0.036,-0.181 0.063,-0.474 0.244,-0.777 0.269,-0.484 0.205,-0.23 0.168,-0.47 -0.213,-0.07 -0.325,0.008 0.061,-0.217 0.095,-0.191 -0.169,-0.191 -0.1,-0.024 -0.103,-0.078 0.121,-0.159 0.059,-0.168 -0.036,-0.205 0.051,-0.155 -0.084,0.023 -0.136,0.164 -0.084,0.065 -0.051,-0.145 -0.059,0.033 -0.038,0.1 -0.087,0.054 -0.183,-0.136 -0.267,-0.155 -0.148,-0.268 -0.085,-0.208 0.086,-0.376 0.185,-0.067 0.24,0.061 0.314,0 -0.045,-0.083 -0.112,0.014 -0.331,-0.306 -0.107,-0.185 -0.183,-0.051 -0.083,0.178 -0.093,0.047 0.114,-0.389 0.15,-0.016 0.221,-0.108 -0.064,-0.226 -0.14,-0.099 -0.252,0.124 0.003,-0.159 0.047,-0.203 0.19,0 0.167,0.066 0.142,-0.329 0.006,-0.147 -0.235,0.214 -0.053,-0.461 0.231,-0.445 0.221,-0.195 0.276,0.006 0.28,-0.031 -0.176,-0.082 -0.181,-0.044 0.136,-0.177 0.116,-0.032 0.114,-0.154 -0.273,0.023 0.032,-0.292 -0.133,0.06 -0.159,0.027 -0.062,0.124 0.012,0.206 -0.046,0.135 -0.124,0.108 -0.209,0.084 -0.02,-0.146 -0.069,-0.066 -0.026,0.313 -0.055,0.106 -0.153,-0.293 -0.046,0.059 0.006,0.083 -0.039,0.144 -0.131,0.075 0.008,0.184 -0.051,0.101 -0.419,-0.16 -0.01,0.054 0.237,0.345 0.173,0.118 0.021,0.188 -0.149,0.156 -0.205,-0.134 -0.035,0.01 0.112,0.23 0.07,0.201 -0.072,0.168 0.011,0.208 -0.016,0.188 -0.044,0.164 0.1,0.753 0.12,0.205 0.118,0.195 0.063,0.183 -0.125,0.026 -0.2,-0.15 -0.176,-0.115 -0.209,-0.367 -0.034,-0.147 -0.051,-0.116 0.024,0.266 0.075,0.297 0.654,0.664 0.121,0.254 0.092,0.2 -0.023,0.19 -0.171,-0.135 -0.147,-0.172 -0.391,-0.195 -0.493,-0.123 -0.278,-0.454 0.001,0.189 -0.062,0.161 -0.17,-0.196 -0.107,-0.167 -0.036,-0.183 -0.212,0.012 -0.222,0.16 -0.215,-0.038 -0.025,-0.311 0.058,-0.165 0.241,-0.39 0.228,-0.2 0.1,-0.258 -0.034,-0.4 -0.042,0.407 -0.13,0.201 -0.205,0.154 -0.269,0.274 -0.065,0.253 -0.084,0.473 0.113,0.16 0.116,0.042 0.342,-0.107 0.177,0.048 0.394,0.568 0.734,0.224 0.268,0.14 0.218,0.296 0.328,0.17 0.255,0.247 0.007,0.161 -0.088,0.19 -0.035,0.257 -0.108,0.162 -0.259,0.019 -0.157,-0.042 -0.843,-0.905 -0.101,-0.083 -0.313,-0.475 -0.367,-0.255 -0.114,0.005 0.522,0.471 0.213,0.329 0.375,0.46 0.268,0.195 0.197,0.304 0.184,0.142 0.501,0.202 -0.174,0.146 0.278,0.124 0.04,0.227 -0.025,0.259 -0.386,-0.103 -0.013,0.191 0.035,0.112 -0.17,0.093 -0.237,-0.126 -0.615,-0.69 0.005,0.092 0.05,0.107 0.357,0.444 0.319,0.266 0.27,0.12 0.208,0.223 0.074,0.134 0.049,0.204 -0.154,0.138 -0.176,0.077 -0.171,-0.138 -0.126,-0.146 -0.268,-0.247 -0.081,-0.277 -0.204,0.014 -0.852,-0.351 -0.685,-0.041 0.067,0.071 0.086,0.047 0.545,0.086 0.215,0.162 0.448,0.144 0.263,0.039 0.106,0.44 0.363,0.303 0.047,0.224 0.248,0.025 0.436,-0.219 0.281,0.077 0.406,0.063 0.093,0.177 0.069,0.336 0.144,0.378 0.372,1.486 0.559,1.209 0.069,0.208 -0.13,-0.183 -0.415,-0.8 -0.229,-0.58 -0.235,-1.026 -0.068,-0.23 -0.081,-0.092 -0.053,0.075 -0.023,0.131 0.039,0.101 -0.093,0.338 0.04,0.155 0.15,0.16 0.164,0.399 0.131,0.537 -0.177,-0.218 -0.188,-0.115 -0.293,-0.088 -0.261,-0.155 0.019,0.222 -0.025,0.24 -0.201,-0.073 -0.137,-0.08 0.122,0.255 -0.263,-0.076 -0.176,0.016 -0.114,0.227 -0.153,0.137 -0.226,0.044 -0.336,-0.207 -0.108,-0.252 -0.045,-0.281 -0.018,0.332 0.06,0.345 -0.021,0.262 0.323,0.048 0.302,-0.042 0.408,0.011 0.266,-0.049 0.16,-0.083 0.384,0.072 0.027,0.316 -0.044,0.314 -0.022,0.333 0.106,-0.002 0.125,-0.107 0.063,-0.599 0.351,-0.222 0.118,0.016 0.112,0.192 0.038,0.195 0.04,0.268 -0.082,0.408 -0.539,0.476 -0.386,0.439 -0.198,0.089 -0.284,-0.051 -0.323,-0.11 -0.159,-0.022 -0.12,0.037 -0.073,-0.136 -0.047,-0.247 -0.125,-0.082 -0.095,0.009 -0.064,0.262 -0.301,0.075 -0.409,-0.109 -0.429,-0.22 0.184,0.236 1.063,0.441 0.12,0.083 0.112,0.12 -0.148,0.189 -0.117,0.213 -0.017,0.167 -0.041,0.105 -0.424,0.283 -0.229,-0.05 -0.587,-0.511 0.268,0.442 0.214,0.187 0.432,0.1 0.809,-0.165 0.266,0.18 -0.218,0.319 -0.216,0.223 -0.284,0.025 -0.25,0.061 -0.074,0.153 -0.178,0.01 -0.279,0.009 -0.431,0.014 -0.237,-0.036 -0.331,0.313 -0.125,0.043 -0.174,-0.059 -0.073,-0.252 -0.078,-0.124 -0.002,0.471 0.031,0.127 0.063,0.095 -0.387,0.255 -0.371,0.318 -0.133,0.086 -0.151,0.159 -0.309,0.459 -0.076,0.334 -0.112,0.372 -0.014,-0.167 0.019,-0.282 -0.076,-0.323 -0.049,0.592 -0.12,0.274 -1.102,-0.019 -0.482,0.149 -0.74,0.501 -0.221,0.22 -0.612,0.847 -0.156,0.541 -0.125,-0.227 0.031,-0.17 0.002,-0.14 -0.153,0.285 0.146,0.436 -0.131,0.166 -0.404,0.31 -0.221,0.05 -0.248,0.088 -0.078,0.305 -0.337,0.281 -0.196,0.124 -0.36,-0.075 0.111,0.27 -0.132,0.205 -0.228,0.157 -0.283,0.102 -0.162,-0.013 -0.138,0.054 -0.109,0.13 -0.265,0.122 -0.275,-0.068 -0.312,-0.041 -0.174,0.073 0.292,0.121 0.157,0.174 -0.032,0.235 -0.078,0.09 -0.185,0.123 -0.081,-0.018 -0.049,-0.11 -0.06,-0.23 -0.086,0.049 -0.015,0.107 -0.074,0.039 -0.262,-0.367 0.013,0.28 0.091,0.215 0.088,0.109 0.089,0.064 0.022,0.1 -0.179,0.243 -0.092,0.054 -0.164,0.039 -0.092,0.149 0.027,0.129 -0.144,0.279 -0.343,0.174 -0.104,-0.007 -0.085,0.051 0.05,0.124 0.085,0.09 -0.003,0.084 -0.09,0.114 -0.179,0.032 -0.1,0.129 0.032,0.123 0.059,0.068 -0.013,0.117 -0.203,0.118 -0.048,0.116 0.101,0.034 0.078,-0.034 0.057,0.025 -0.122,0.194 -0.109,0.118 -0.104,0.212 -0.241,0.059 0.009,0.069 0.136,0.061 0.114,0.163 -0.214,0.301 -0.134,-0.025 -0.082,-0.066 -0.052,0.237 0.02,0.126 -0.051,0.259 -0.082,0.31 -0.056,0.127 0.012,0.237 0.035,0.229 0.131,0.294 0.201,1.201 0.137,0.416 0.246,1.12 0.407,1.082 0.574,1.303 0.942,1.572 0.113,0.223 -0.123,0.189 -0.037,0.196 -0.011,0.295 0.034,0.288 0.111,0.351 0.214,0.536 -0.12,-0.106 -0.31,-0.77 -0.036,-0.452 0.044,-0.643 -0.073,0.016 -0.059,0.209 -0.033,0.245 -0.079,0.095 -0.107,-0.375 0.008,-0.169 0.114,-0.198 -0.033,-0.071 -0.185,-0.102 -0.039,-0.159 0.025,-0.158 -0.105,-0.084 -0.083,0.004 0.056,0.389 0.087,0.238 0.108,0.571 0.175,0.345 0.102,0.289 1.19,3.07 0.282,0.389 0.104,0.279 0.108,0.583 0.024,0.747 -0.194,1.361 -0.044,0.925 -0.028,-0.028 -0.019,-0.098 -0.045,-0.013 -0.168,0.423 -0.229,0.381 -0.076,0.592 -0.11,0.296 -0.331,0.313 -0.205,-0.008 -0.502,0.235 -0.353,-0.061 -0.42,0.132 -0.276,-0.015 -0.16,-0.279 0.024,-0.125 0.063,-0.125 0.108,-0.029 0.371,0.293 0.07,-0.124 -0.112,-0.146 -0.215,-0.082 -0.158,-0.09 -0.319,-0.668 -0.331,-0.459 -0.056,-0.308 -0.571,-0.188 -0.413,-0.285 -0.27,-0.506 -0.155,-0.899 -0.182,-0.101 -0.077,-0.07 0.178,-0.335 0.188,-0.281 -0.148,0.07 -0.109,0.104 -0.139,0.248 -0.102,0.038 -0.093,-0.038 -0.107,-0.476 0.031,-0.585 0.15,-0.219 -0.231,-0.006 -0.239,0.083 0.035,0.195 -0.034,0.107 -0.174,-0.028 -0.133,-0.068 -0.179,-0.204 -0.245,-0.388 -0.503,-1.072 -0.098,-0.151 -0.167,-0.159 0.079,-0.049 0.143,-0.029 0.323,-0.484 0.253,-0.293 0.084,-0.203 -0.015,-0.087 -0.112,-0.126 -0.147,0.11 -0.063,-0.031 -0.166,-0.255 -0.158,-0.072 -0.11,0.055 0.116,0.208 0.104,0.078 -0.041,0.303 -0.042,0.098 -0.098,0.087 -0.153,-0.047 -0.077,0.075 -0.091,-0.079 -0.09,-0.133 -0.101,-0.219 0.267,-1.236 0.247,-0.79 0.028,-0.904 0.019,-0.134 -0.021,-0.241 -0.331,-0.523 -1.463,-1.281 -1.133,-1.524 -0.982,-0.573 -0.745,0.126 -0.129,0.115 -0.055,0.15 0.046,0.171 -0.067,0.071 -0.2,-0.009 -0.269,0.04 -0.703,0.401 -0.248,-0.015 -0.225,0.104 -0.169,0.078 -0.44,0.042 -0.373,0.089 -0.161,-0.048 -0.105,-0.233 0,-0.241 0.085,0.185 0.132,0.145 0.061,-0.058 0.022,-0.128 -0.131,-0.251 -0.423,-0.322 -0.481,-0.471 0.147,0.016 0.037,-0.101 -0.149,-0.133 0.063,-0.153 0.105,-0.161 -0.203,0.024 -0.183,0.113 -0.006,0.139 -0.036,0.111 -0.098,-0.016 -0.182,-0.137 -0.896,-0.382 -0.784,-0.216 0.602,-0.097 0.326,0.075 -0.039,-0.116 -0.079,-0.074 -0.257,-0.093 -0.328,0.035 -0.207,-0.044 -0.211,0.093 -0.232,0.137 -0.207,0.07 -0.808,0.099 -0.655,0.107 0.105,-0.113 0.112,-0.073 0.387,-0.111 0.058,-0.23 -0.091,-0.222 -0.102,0.053 -0.107,0.173 -0.131,-0.125 -0.145,10e-4 -0.04,0.275 -0.187,0.185 -0.084,0.186 -0.547,0.146 -0.07,-0.048 0.16,-0.177 -0.013,-0.098 -0.182,0.084 -0.306,0.334 -1.077,0.109 0.059,-0.076 0.228,-0.016 0.319,-0.105 -0.065,-0.178 -0.123,-0.196 -0.114,-0.022 -0.075,-0.115 0.004,-0.362 -0.073,-0.212 -0.175,-0.218 -0.059,0.042 -0.129,0.374 -0.107,0.489 -0.053,0.158 -0.319,0.011 -0.283,-0.034 -0.96,0.059 -0.358,-0.166 -0.149,-0.032 -0.091,0.004 -0.417,0.152 -0.476,0.116 -0.112,-0.037 -0.16,-0.005 -0.345,0.395 -0.407,0.185 -1.026,-0.333 -0.255,-0.267 -0.227,-0.057 -0.279,-0.033 -0.299,0.329 -0.228,0.443 0.359,0.243 0.308,0.116 0.508,-0.097 0.281,-0.215 0.229,0.007 0.11,-0.043 0.1,-0.112 0.196,0.088 0.007,0.089 -0.139,0.125 -0.176,0.105 -0.106,0.124 0.2,0.249 0.315,0.084 0.118,-0.036 0.073,-0.28 0.194,-0.181 0.263,0.039 -0.037,0.114 0.037,0.107 0.121,0.183 -0.014,0.262 0.023,0.063 -0.283,0.115 -0.211,0.039 -0.169,0.151 0.089,0.087 -0.172,0.077 -0.116,-0.031 -0.059,0.028 -0.018,0.093 -0.089,0.085 0.129,0.259 0.265,0.168 0.187,0.212 0.752,0.278 0.182,-0.008 0.179,0.28 0.145,0.096 0.139,0.049 -0.016,0.192 -0.248,0.141 -0.067,0.168 -0.062,0.094 -0.112,-0.119 -0.114,-0.087 -0.265,0.263 -0.128,0.056 0.063,-0.284 -0.1,-0.111 -0.151,-0.285 -0.221,-0.176 -0.156,-0.059 -0.121,-0.111 -0.147,-0.045 -0.125,0.012 -0.212,-0.065 -0.014,-0.152 -0.059,-0.114 -0.166,-0.134 -0.791,-0.254 -0.005,0.105 0.055,0.079 0.114,0.053 0.136,0.102 -10e-4,0.303 -0.059,0.128 -0.025,0.182 -0.053,0.186 -0.097,0.146 -0.216,0.099 -0.095,-0.083 -0.154,-0.399 -0.218,-0.125 -0.346,-0.015 -0.235,0.09 -0.256,0.387 -0.207,0.063 -0.707,-0.2 -0.806,-0.306 0.021,-0.102 0.127,-0.033 0.244,0.042 -0.013,-0.105 -0.249,-0.342 -0.045,-0.154 0.032,-0.188 -0.081,0.004 -0.149,0.158 -0.514,-0.134 -0.142,-0.161 -0.302,-0.452 -0.426,-0.015 -0.193,-0.274 -0.349,0.115 -0.176,0.127 -0.155,0.197 0.06,0.102 0.155,0.162 -0.07,0.079 -0.497,0.115 -1.152,-0.129 -0.337,-0.121 -0.452,-0.256 -0.626,-0.208 -0.302,-0.034 -0.295,0.041 -0.86,0.021 -0.199,0.055 -0.17,0.089 -0.11,-0.098 -0.051,-0.175 0.1,-0.028 0.111,-0.103 0.1,-0.204 0.012,-0.124 -0.07,-0.08 -0.133,-0.008 -0.294,0.531 0.168,0.297 -0.011,0.107 -0.587,0.061 -1.333,0.597 -0.52,0.322 0.027,-0.108 0.628,-0.417 -0.222,-0.064 -0.357,0.104 -0.128,-0.04 0.151,-0.345 -0.049,-0.305 -0.254,-0.008 -0.162,0.243 -0.112,-0.01 -0.147,-0.104 -0.114,0.033 0.084,0.551 0.16,0.226 0.134,0.289 -0.365,0.355 -0.339,0.293 -0.037,0.283 -0.341,0.368 -0.32,0.209 -0.753,0.49 -0.215,0.104 -0.34,0.227 -0.468,0.17 -0.45,0.27 -0.151,0.041 0.287,-0.229 0.34,-0.226 -0.292,0.031 -0.45,-0.104 -0.275,-0.006 -10e-4,0.083 -0.209,0.117 -0.217,-0.171 -0.094,-0.115 -0.045,-0.1 -0.092,-0.024 -0.088,0.046 0.324,0.7 0.138,0.03 0.152,0.069 -0.19,0.163 -0.205,0.124 -0.322,0.082 -0.272,-0.255 -0.059,0.32 -0.035,0.319 -0.091,0.082 -0.146,0.117 -0.079,-0.088 -0.038,-0.124 -0.094,0.11 -0.137,0.083 -0.226,0.017 -0.169,0.044 0.004,0.132 0.039,0.133 0.3,-0.105 -0.109,0.341 -0.276,0.337 -0.225,0.079 -0.344,-0.049 -0.085,0.034 -0.076,0.07 0.401,0.525 -0.258,0.791 -0.165,0.287 -0.114,0.037 -0.126,0.009 -0.444,-0.254 -0.242,-0.197 0.214,0.535 0.582,0.156 0.03,0.203 -0.003,0.172 -0.115,0.203 -0.107,0.269 0.079,0.187 0.092,0.463 0.079,0.212 0.086,0.643 0.092,0.278 0.529,1.022 0.178,0.008 0.028,0.11 -0.017,0.212 -0.38,0.062 -0.16,0.094 -0.031,0.082 -0.023,0.044 -0.049,-0.004 -0.181,-0.059 -0.413,-0.29 -0.601,-0.18 -0.79,-0.07 -0.54,-0.145 -0.29,-0.221 -0.302,-0.132 -0.315,-0.041 -0.262,-0.12 -0.207,-0.199 -0.303,-0.127 -0.399,-0.056 -0.26,-0.149 -0.18,-0.366 -0.001,-0.005 -0.162,-0.612 -0.204,-0.384 -0.396,-0.476 -0.036,-0.063 0,0 -0.003,-0.078 0.049,-0.277 -0.042,-0.2 -0.125,-0.163 -0.029,-0.172 0.068,-0.181 0.004,-0.218 -0.059,-0.255 -0.252,-0.276 -0.446,-0.296 -0.38,-0.434 -0.313,-0.571 -0.31,-0.396 -0.307,-0.221 -0.209,-0.27 -0.113,-0.319 -0.033,-0.185 0.046,-0.051 -0.188,-0.355 -0.423,-0.659 -0.243,-0.483 -0.063,-0.306 -0.269,-0.364 -0.476,-0.423 -0.258,-0.275 -0.063,-0.191 -0.001,0 -0.742,-0.558 -0.216,-0.349 -0.168,-0.11 -0.193,0.012 -0.099,-0.034 -0.005,-0.079 -0.063,-0.004 -0.121,0.072 -0.395,0.014 -0.669,-0.042 -0.483,-0.095 -0.297,-0.147 -0.208,0.02 -0.12,0.188 -0.254,0.121 -0.389,0.054 -0.334,0.348 -0.28,0.642 -0.123,0.412 0.034,0.184 -0.074,0.133 -0.182,0.083 -0.185,0.186 -0.188,0.289 -0.22,0.14 -0.251,-0.01 -0.464,-0.222 -0.676,-0.436 -0.53,-0.27 -0.384,-0.103 -0.339,-0.202 -0.294,-0.301 -0.271,-0.201 -0.248,-0.101 -0.29,-0.334 -0.332,-0.568 -0.166,-0.439 0,-0.464 -0.434,-1.013 -0.23,-0.44 -0.171,-0.203 -0.334,-0.242 -0.499,-0.282 -0.668,-0.564 -0.838,-0.849 -0.593,-0.512 -0.348,-0.174 -0.302,-0.307 -0.256,-0.44 -0.25,-0.281 -0.026,-0.013 -0.022,-0.006 -0.617,-0.004 -0.617,-0.004 -0.617,-0.004 -0.617,-0.003 -0.617,-0.004 -0.617,-0.003 -0.617,-0.004 -0.617,-0.004 -0.002,0.369 -0.01,0.372 -0.001,0.368 -0.002,0.368 -0.992,0.002 -0.992,0.002 -0.992,0.002 -0.992,0.002 -0.992,0.002 -0.992,0.002 -0.992,0.002 -0.992,0.002 -1.331,-0.484 -1.331,-0.485 -1.331,-0.486 -1.331,-0.487 -1.331,-0.487 -1.331,-0.488 -1.331,-0.489 -1.331,-0.49 0.134,-0.187 0.178,-0.5 -0.321,0.036 -0.803,0.071 -0.803,0.071 -0.803,0.071 -0.803,0.071 -0.803,0.071 -0.803,0.071 -0.803,0.071 -0.803,0.071 -0.006,-0.021 -0.02,-0.363 -0.13,-0.128 -0.167,0.079 -0.076,-0.472 0.042,-0.223 -0.02,-0.218 -0.157,-0.537 -0.417,-0.652 -0.901,-0.813 -0.459,-0.272 -0.36,-0.344 -0.229,-0.096 -0.288,-0.026 -0.083,0.155 -0.326,-0.106 0.049,-0.385 -0.318,-0.536 -0.26,-0.06 -0.655,0.036 -0.875,-0.295 -0.258,-0.176 -0.089,-0.315 -0.41,-0.274 -0.54,-0.269 -0.301,0.063 -0.393,-0.042 -0.561,-0.194 -0.327,-0.024 -0.637,0.057 -0.238,-0.041 -0.221,-0.245 -0.238,-0.123 0.05,-0.302 -0.03,-0.273 0.036,-0.213 -0.107,-0.467 0.083,-0.434 -0.072,-0.157 -0.135,-0.121 -0.422,-0.178 -0.077,-0.223 0.069,-0.31 -0.11,-0.205 -0.346,-0.191 -0.323,-0.434 -0.41,-0.238 -0.168,-0.399 -0.252,-0.247 -0.088,-0.219 -0.56,-0.783 -0.598,-0.613 -0.092,-0.354 -0.023,-0.485 0.234,-0.296 0.126,-0.261 -0.013,-0.239 -0.036,-0.176 -0.206,-0.306 -0.796,-0.182 -0.647,-0.759 -0.038,-0.582 -0.254,-0.596 -0.003,-0.389 -0.039,-0.421 0.193,-0.092 0.172,0.034 -0.017,0.167 0.058,0.301 0.203,0.226 0.193,0.099 0.176,0.219 0.132,0.066 0.136,0.016 -0.073,-0.141 -0.078,-0.09 -0.095,-0.292 -0.18,-0.373 -0.207,-0.206 -0.105,-0.376 -0.09,-0.087 -0.056,-0.14 0.2,-0.166 0.273,-0.118 0.366,-0.032 1.038,0.056 0.221,-0.097 0.183,0.031 0.134,-0.012 -0.282,-0.1 -0.158,0.033 -0.187,-0.021 -0.371,0.02 -0.15,-0.042 -0.165,-0.118 -0.108,-0.012 -0.343,0.206 -0.153,-0.025 -0.362,-0.225 -0.158,-0.032 -0.254,0.128 -0.031,0.551 0.079,0.409 -0.152,0.042 -0.177,-0.168 -0.271,-0.1 -0.224,-0.153 -0.316,-0.285 -0.166,-0.104 -0.188,0.237 -0.007,-0.109 0.093,-0.276 -0.026,-0.463 0.283,0.37 -0.088,-0.26 -0.22,-0.287 -0.167,-0.1 -0.21,-0.514 -0.473,-0.309 -0.379,-0.5 -0.776,-0.831 -0.051,-0.732 -0.283,-0.929 0.119,-0.53 -0.016,-0.376 -0.139,-0.57 -0.145,-0.31 -0.629,-0.853 -0.605,-0.576 -0.091,-0.437 -0.042,-0.441 0.132,-0.393 0.115,-0.415 0.083,-0.11 0.033,0.046 -0.023,0.088 0.086,0.027 0.033,-0.183 0.051,-0.094 -0.09,-0.012 0.009,-0.058 0.054,-0.116 0.188,-0.546 -0.02,-0.69 0.201,-0.849 -0.01,-0.281 -0.128,-0.606 -0.128,-0.364 -0.228,-0.258 0.101,-0.378 -0.008,-0.361 -0.403,-0.521 -0.154,-0.685 -0.029,-0.29 0.04,-0.768 -0.105,-0.329 -0.269,-0.543 0.115,-0.473 0.124,-0.289 0.303,-1.263 0.073,-0.103 0.126,0.003 0.221,-0.215 -0.102,-0.05 -0.154,0.103 0.137,-0.502 0.154,-0.431 0.1,-0.155 0.051,-1.412 0.088,-1.085 0.145,-0.359 -0.051,-0.371 0.059,-0.503 -0.042,-0.51 0.311,-2.469 -0.041,-0.3 0.095,-0.403 -0.089,-1.065 0.04,-1.198 -0.079,-0.153 -0.04,-0.166 0.074,-0.025 0.144,0.175 0.668,-0.002 0.426,-0.162 0.155,0.053 0.18,0.22 0.227,0.044 0.283,-0.039 -0.086,-0.055 -0.133,-0.015 -0.298,-0.203 -0.169,-0.203 -0.521,0.014 -0.106,-0.13 -0.582,0.13 -0.18,-0.133 -0.317,0.086 0.078,-0.378 -0.014,-0.478 0.017,-0.466 0.078,0.34 0.197,0.361 0.095,-0.409 0.065,-0.516 -0.192,-0.198 -0.32,-0.147 -0.115,-0.482 0.757,-0.412 -0.402,-0.087 -0.158,-0.185 -0.195,-0.023 -0.015,0.143 -0.063,0.187 -0.068,-0.249 -0.02,-0.293 -0.08,-0.501 -0.31,-0.809 -0.188,-1.053 -0.236,-0.522 -0.452,-0.5 -0.118,-0.292 -0.108,-0.743 0.061,-0.564 -0.084,-0.398 0.217,0.023 0.571,0.313 0.711,0.245 0.215,0.178 0.345,0.132 1.912,0.205 0.125,-0.02 0.247,-0.127 0.105,0.016 0.281,0.291 0.141,0.035 0.183,-0.015 0.135,-0.055 0.231,-0.199 0.031,0.074 -0.004,0.185 0.082,0.263 0.169,0.34 0.064,0.211 -0.342,0.594 -0.065,0.013 -0.01,-0.201 -0.045,-0.04 -0.644,1.002 -0.226,0.473 -0.022,0.213 0.008,0.125 0.09,0.031 0.206,-0.049 0.305,-0.196 0.015,-0.043 -0.284,0.07 -0.136,0.006 0.019,-0.224 0.032,-0.106 0.186,-0.332 0.195,-0.199 0.277,-0.212 0.16,-0.175 0.11,-0.256 0.308,-0.306 0.057,-0.085 -0.013,-0.252 0.019,-0.048 0.149,0.034 0.062,0.434 -0.037,0.193 -0.266,0.235 -0.033,0.083 0.046,0.321 -0.041,0.031 -0.101,-0.038 -0.031,0.021 0.251,0.348 0.08,0.27 0.011,0.241 -0.068,0.461 -0.073,0.077 -0.125,-0.028 -0.166,-0.144 -0.037,0.046 -0.132,0.358 -0.043,-0.031 -0.082,-0.425 -0.045,-0.032 -0.255,0.194 -0.103,0.186 -0.088,0.296 -0.112,0.139 0.318,0.03 0.287,-0.06 0.23,0.141 0.078,0.004 0.21,-0.138 0.064,-0.093 0.174,-0.447 0.087,-0.08 0.129,-0.003 0.125,-0.067 0.186,-0.246 0.008,-0.098 -0.068,-0.551 0.02,-0.313 -0.035,-0.099 -0.083,-0.103 0.01,-0.1 0.065,-0.165 0.005,-0.149 -0.056,-0.133 0.025,-0.151 0.176,-0.326 0.033,-0.144 0.214,-0.325 -0.054,-0.131 -0.158,-0.16 -0.1,-0.141 -0.1,-0.22 -0.076,-0.074 -0.025,0.034 0.107,0.36 -0.023,0.024 -0.278,-0.194 -0.065,-0.123 -0.034,-0.167 0.024,-0.125 0.15,-0.124 0.179,-0.045 -0.015,-0.104 -0.224,-0.338 -0.149,-0.154 -0.115,-0.075 -0.155,-0.02 -0.069,-0.055 -0.018,-0.079 0.033,-0.104 0.083,-0.034 0.239,0.042 0.129,-0.074 -0.012,-0.135 -0.039,-0.075 0.006,-0.484 -0.091,-0.394 -0.047,-0.067 -0.051,-0.007 -0.054,0.053 -0.15,0.014 -0.093,-0.129 -0.103,-0.25 -0.186,-0.596 0.288,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.194,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.197,0 1.196,0 1.197,0 1.197,0 1.196,0 0.662,0.006 0.011,-0.903 0.008,-0.714 0.606,0.087 0.181,0.13 0.058,0.062 -0.017,0.197 0.05,0.597 0.11,0.496 0.254,0.595 0.001,0.001 0.021,0.232 0.083,0.145 0.153,0.135 0.58,0.163 1.007,0.191 0.571,0.219 0.135,0.247 0.269,0.099 0.403,-0.048 0.282,-0.103 0.241,-0.23 z m -82.523,-0.238 0.037,0.092 -0.113,0.09 -0.08,0.014 -0.128,-0.144 -0.056,-0.018 0.045,0.222 -0.016,0.076 -0.261,-0.136 -0.048,-0.108 0.073,-0.114 0.165,-0.118 0.057,-0.014 0.325,0.158 z m -0.648,0.727 0.074,0.139 -0.302,-0.089 -0.127,-0.08 -0.038,-0.078 -0.045,-0.255 0.021,-0.083 0.135,-0.029 0.252,0.316 0.03,0.159 z m 0.539,0.293 -0.044,0.042 -0.15,-0.055 -0.088,-0.094 -0.03,-0.117 0.056,-0.225 0.075,-0.058 0.047,0.013 0.02,0.198 0.133,0.209 -0.019,0.087 z m 0.697,1.156 0.137,0.549 0.059,-0.229 0.382,0.396 0,0.195 -0.046,0.065 -0.08,0.023 -0.073,-0.057 -0.067,-0.137 -0.086,-0.072 -0.183,-0.046 -0.095,-0.156 -0.033,-0.106 -0.009,-0.308 -0.046,-0.096 -0.097,-0.021 -0.093,-0.073 -0.144,-0.216 -0.02,-0.058 0.068,-0.176 0.156,-0.295 0.113,-0.14 0.07,0.015 0.087,0.089 0.104,0.162 -0.02,0.114 -0.42,0.223 -0.014,0.052 0.204,0.063 0.075,0.056 0.071,0.184 z m 94.347,0.965 -0.014,0.069 0.102,0.021 -0.019,0.035 -0.111,0.063 -0.314,0.128 -0.21,0.041 -0.108,-0.046 -0.011,-0.085 0.085,-0.125 0,-0.062 -0.087,0 0.021,-0.05 0.129,-0.099 1.098,-0.631 0.469,-0.23 0.25,-0.073 0.04,0.036 -0.271,0.238 -0.043,0.097 0.01,0.065 -0.089,0.125 -0.803,0.442 -0.124,0.041 z m -94.135,1.379 -0.015,0.08 -0.155,-0.095 -0.051,-0.088 0.006,-0.197 0.039,-0.128 0.029,-0.026 0.091,0.056 0.026,0.033 0.03,0.365 z m 0.289,0.826 -0.013,0.094 -0.107,0.073 -0.056,-0.019 -0.004,-0.111 -0.029,-0.017 -0.116,0.133 0.009,-0.263 0.057,-0.277 0.05,-0.005 0.074,0.182 0.135,0.21 z m 95.904,0.762 -0.052,0.133 0.01,0.08 -0.341,0.352 -0.124,0.222 -0.103,0.035 -0.083,-0.151 0,-0.122 0.084,-0.092 0.083,-0.131 0.01,-0.181 -0.032,-0.066 -0.104,0.163 0.058,0.035 0.017,0.028 -0.02,0.059 -0.392,-0.087 -0.117,-0.127 0.02,-0.177 0.131,-0.227 0.471,-0.481 0.208,-0.134 0.59,-0.212 0.325,-0.049 0.327,0 0.237,0.07 0.147,0.139 -0.139,0.092 -0.646,0.079 -0.018,0.025 0.124,0.076 0.023,0.054 -0.114,0.141 -0.58,0.454 z m -97.192,0.024 -0.027,0.081 -0.04,-0.004 -0.088,-0.165 -0.011,-0.116 0.075,-0.084 0.101,0.241 -0.01,0.047 z m 91.004,0.735 -0.092,0.064 -0.035,-0.03 0.022,-0.126 0.046,-0.073 0.071,-0.021 0.035,0.031 -0.001,0.082 -0.046,0.073 z m -0.789,0.404 -0.042,0.029 -0.107,-0.069 -0.015,-0.057 0.029,-0.057 0.05,0.013 0.07,0.083 0.015,0.058 z m 0.453,0.033 -0.094,0.023 -0.201,-0.036 0.003,-0.06 0.209,-0.083 0.093,-0.023 0.022,0.035 -0.032,0.144 z m -0.46,0.556 -0.161,0.056 -0.067,-0.01 0.027,-0.077 0.083,-0.092 0.374,-0.23 0.065,0.004 0.02,0.055 -0.181,0.113 -0.068,0.06 -0.008,0.063 -0.084,0.058 z m 18.46,1.714 0,0.087 -0.086,-0.02 -0.072,-0.059 -0.058,-0.098 -0.072,-0.245 -0.11,-0.174 0.165,-0.197 0.099,-0.023 0.106,0.044 0.015,0.115 -0.078,0.186 0.004,0.19 0.087,0.194 z m 0.034,0.471 -0.04,0.022 -0.141,-0.158 -0.03,-0.097 0.021,-0.081 0.054,-0.004 0.088,0.074 0.05,0.086 0.011,0.098 -0.013,0.06 z m 1.732,0.94 0.027,0.09 -0.068,0.132 -0.197,0.067 -0.4,-0.007 -0.259,-0.051 -0.119,-0.094 -0.026,-0.049 0.011,-0.105 0.058,-0.007 0.085,0.057 0.127,-0.024 0.169,-0.106 0.089,-0.08 0.008,-0.053 -0.054,-0.102 0.043,-0.043 0.212,0.04 0.079,0.066 0.143,0.228 0.072,0.041 z m -2.957,0.774 0.359,0.056 0.035,-0.031 0.102,0.106 0.016,0.09 -0.043,0.075 -0.063,0.042 -0.081,0.007 -0.13,-0.076 -0.212,-0.202 0.017,-0.067 z m -2.791,0.874 -0.096,0.02 -0.073,-0.047 0.012,-0.188 0.098,-0.328 0.096,-0.15 0.13,0.061 -0.026,0.04 0.026,0.35 -0.047,0.153 -0.12,0.089 z m -3.677,0.998 -0.084,0.04 -0.154,-0.014 -0.056,-0.09 0.081,-0.229 0.033,0.042 0.134,0.003 0.046,0.022 0.015,0.057 -0.015,0.169 z m -0.365,0.442 -0.052,0.051 -0.087,-0.034 -0.034,0.075 0.02,0.183 -0.029,0.084 -0.077,-0.014 -0.004,0.034 0.068,0.081 0.007,0.089 -0.053,0.097 -0.052,0.045 -0.049,-0.007 -0.077,0.11 -0.104,0.227 -0.036,0.131 0.033,0.036 -0.024,0.076 -0.259,0.344 -0.1,0.033 -0.109,-0.048 -0.077,-0.1 -0.045,-0.153 -0.013,-0.118 0.018,-0.084 0.228,-0.305 0.101,-0.199 0.058,-0.224 0.105,-0.143 0.154,-0.062 0.125,-0.139 0.095,-0.217 0.11,-0.094 0.124,0.028 0.054,0.082 -0.019,0.135 z m 2.85,0.551 -0.033,0.056 -0.078,-0.005 -0.062,-0.054 -0.061,-0.175 0.02,-0.038 0.151,0.025 0.053,0.074 0.01,0.117 z m 49.925,3.03 -0.164,0.076 -0.179,-0.033 0.004,0.206 -0.02,0.074 -0.198,-0.106 -0.073,-0.068 0.006,-0.273 0.175,-0.259 0.134,-0.103 0.172,0.071 0.132,0.29 0.011,0.125 z m -22.239,0.215 -0.088,0.032 -0.021,-0.046 0.014,-0.043 0.073,-0.054 0.123,0 -0.014,0.043 -0.087,0.068 z m 21.015,0.318 -0.106,0.077 -0.114,-0.025 -0.004,-0.192 0.035,-0.065 0.039,-0.029 0.059,0.054 0.091,0.18 z m -21.438,0.801 -0.042,0.012 0.004,-0.083 0.043,-0.054 0.082,-0.024 -0.002,0.042 -0.085,0.107 z m -7.487,3.732 -0.086,0.131 -0.083,-0.013 -0.061,-0.042 -0.021,-0.083 0.015,-0.104 0.074,-0.046 0.201,0.04 0.007,0.042 -0.046,0.075 z m 21.578,5.782 -0.139,0.102 -0.155,-0.018 0.079,-0.138 0.03,-0.203 0.077,-0.223 0.044,-0.068 0.091,-0.06 -0.027,0.608 z m -0.348,0.025 -0.078,0.069 -0.029,-0.18 0.055,-0.208 0.055,-0.004 0.028,0.11 -0.031,0.213 z m 2.4,0.406 -0.773,0.182 -0.123,-0.117 0.193,-0.055 0.243,-0.279 0.162,-0.032 0.254,0.158 0.044,0.143 z m 1.493,0.413 -0.216,0.06 -0.5,-0.137 0.411,-0.116 0.067,-0.041 0.054,-0.171 0.007,-0.086 0.156,0.368 0.021,0.123 z m -7.105,1.038 -0.199,0.239 0.18,0.024 0.155,-0.07 0.146,-0.142 0.341,-0.192 0.291,-0.084 0.091,-0.018 0.139,0.135 0.275,-0.108 0.283,-0.061 -1.223,0.617 -0.25,0.069 -0.358,0.184 -0.338,0.13 -0.243,0.047 -1.211,0.456 -0.096,0.01 -0.104,-0.044 -0.998,0.234 -0.409,0.026 -0.373,0.082 0.276,-0.189 0.006,-0.071 -0.066,-0.055 -0.147,0.016 -0.151,0.194 -0.241,0.065 -0.048,-0.211 0.081,-0.164 0.109,-0.156 0.239,-0.245 0.343,-0.155 0.174,-0.134 0.121,0.118 0.026,-0.16 0.093,-0.092 0.101,-0.05 0.242,-10e-4 0.131,-0.025 0.094,-0.053 0.097,-0.01 0.266,0.073 0.259,-0.021 0.209,-0.1 0.218,-0.034 0.575,-0.022 0.571,-0.073 0.229,-0.13 0.48,-0.366 0.276,-0.102 -0.43,0.425 -0.232,0.194 z m -4.71,1.709 -0.134,0.015 0.134,-0.353 0.246,-0.162 0.089,0.034 0.003,0.125 -0.034,0.106 -0.165,0.165 -0.139,0.07 z m 0.154,3.078 -0.329,0.549 -0.007,-0.105 0.411,-0.682 -0.075,0.238 z m -3.368,6.427 -0.128,0.058 0.428,-0.71 0.249,-0.597 0.111,-0.207 -0.108,0.418 -0.188,0.384 -0.364,0.654 z m -0.849,7.1 -0.042,0.07 -0.187,-0.381 0.192,0.123 0.034,0.103 0.003,0.085 z m 0.257,2.115 -0.376,0.093 -0.033,-0.03 0.431,-0.195 0.136,-0.688 0.019,-0.318 -0.064,-0.562 0.002,-0.116 0.07,0.181 0.062,0.524 -0.023,0.396 -0.125,0.577 -0.099,0.138 z m -0.667,0.171 -0.51,0.244 -0.058,-0.015 0.335,-0.174 0.233,-0.055 z m -2.026,1.864 -0.07,0.039 0.257,-0.424 0.507,-0.539 0.137,-0.083 -0.422,0.46 -0.409,0.547 z m -0.119,-0.04 -0.063,0.008 -0.11,-0.037 -0.152,-0.072 -0.034,-0.053 0.145,0.019 0.214,0.135 z m -121.623,1.947 0.571,0.173 0.308,-0.083 0.056,0.083 -0.036,0.073 -0.694,0.13 -0.213,-0.091 -0.019,-0.125 -0.072,-0.12 0.099,-0.04 z m -1.19,0.184 -0.149,0.009 -0.23,-0.036 0.081,-0.079 0.127,-0.057 0.041,0.043 0.13,0.12 z m 0.738,0.358 -0.197,0.047 -0.149,-0.044 -0.238,-0.322 0.505,-0.043 0.218,0.14 0.029,0.039 -0.168,0.183 z m 4.759,1.789 0.142,0.246 -0.204,-0.03 -0.213,0.014 -0.065,-0.134 -0.063,-0.187 -0.043,-0.047 -0.146,-0.017 -0.011,-0.017 -0.017,-0.091 0.041,-0.043 0.458,0.208 0.121,0.098 z m -3.06,0.563 -0.125,0.006 -0.172,-0.031 -0.088,-0.18 0.141,-0.012 0.13,0.025 0.103,0.141 0.011,0.051 z m 3.053,1.298 -0.164,0.03 -0.181,-0.068 -0.156,-0.321 -0.172,-0.251 0.093,-0.072 0.139,0.242 0.349,0.368 0.092,0.072 z m 103.647,6.106 -0.125,0.793 -0.054,-0.281 -0.005,-0.272 0.094,-0.162 0.09,-0.078 z m -18.67,2.334 -0.247,0.069 -0.366,-0.007 -0.074,-0.024 0.146,-0.046 0.434,-0.062 0.107,0.07 z m -1.365,0.118 -0.036,0.036 -0.249,-0.067 -0.151,-0.063 -0.027,-0.063 0.417,0.113 0.046,0.044 z m -1.87,0.425 0.01,0.15 -0.138,-0.075 -0.204,-0.007 0.09,-0.051 0.063,-0.05 0.032,-0.054 0.257,-0.187 -0.073,0.137 -0.037,0.137 z m 1.113,0.891 -0.079,0.103 0.078,-0.491 -0.109,-0.414 0.115,0.182 0.038,0.216 -0.043,0.404 z m -0.173,0.306 -0.152,0.168 0.007,-0.064 0.112,-0.168 0.08,-0.066 -0.047,0.13 z m 11.174,0.225 -0.282,0.116 -0.305,-0.084 0.189,-0.016 0.137,0.034 0.347,-0.166 0.182,-0.125 0.21,-0.047 -0.478,0.288 z m -19.325,0.455 -0.104,0.046 -0.464,-0.278 -0.029,-0.119 0.229,-0.108 0.14,0.01 0.221,0.142 0.081,0.039 0.038,0.057 -0.021,0.089 -0.091,0.122 z m -9.11,1.137 -0.14,0.031 0.612,-0.492 0.128,-0.164 0.164,0.007 -0.273,0.275 -0.491,0.343 z m -4.841,3.16 -0.103,0.013 0.128,-0.171 0.208,-0.086 0.456,-0.329 0.186,-0.023 0.097,-0.113 0.042,-0.017 -0.027,0.139 -0.366,0.198 -0.621,0.389 z m -0.701,0.794 -0.061,0.008 0.136,-0.259 0.025,-0.104 0.223,-0.328 0.118,-0.049 0.049,0.14 -0.229,0.23 -0.261,0.362 z m 47.226,1.963 0.046,0.231 -0.258,-0.537 -0.319,-0.843 -0.17,-0.653 0.115,0.177 0.113,0.365 0.473,1.26 z m -48.178,-0.068 -0.088,0.181 0.024,-0.269 0.228,-0.613 0.463,-0.807 0.195,-0.135 -0.534,0.885 -0.288,0.758 z m 0.513,3.565 -0.039,0.145 -0.232,-0.675 -0.378,-1.532 -0.014,-0.876 0.06,-0.302 0.097,1.238 0.418,1.565 0.088,0.437 z m 42.342,-1.224 -0.004,0.183 -0.142,-0.307 -0.094,-0.34 0.135,0.11 0.105,0.354 z m 0.13,0.308 -0.1,0.082 -0.203,-0.06 -0.11,-0.107 -0.048,-0.209 0.176,0.222 0.063,0.05 0.222,0.022 z m 4.646,4.066 -0.558,0.579 0.062,-0.145 0.218,-0.31 0.07,-0.146 0.147,-0.092 0.137,-0.167 0.01,-0.196 0.199,-0.137 0.065,-0.02 -0.35,0.634 z m -0.72,0.736 -0.075,0.015 0.111,-0.131 0.031,0.01 -0.067,0.106 z m -0.536,0.306 -0.053,0 0.026,-0.044 0.111,-0.087 0.04,0.034 -0.004,0.044 -0.12,0.053 z m -0.603,0.267 -0.128,0.073 -0.133,-0.054 0.146,-0.073 0.435,-0.078 -0.164,0.097 -0.156,0.035 z m -0.815,0.204 -0.084,0.063 -0.04,-0.02 0,-0.092 -0.12,-0.204 0.004,-0.053 0.274,0.199 0.007,0.054 -0.041,0.053 z m -0.651,0.155 -0.182,0.03 0.147,-0.121 0.047,-0.184 0.086,0.143 -0.001,0.087 -0.097,0.045 z m -0.61,0.17 -0.071,0.007 -0.006,-0.047 0.123,-0.058 0.082,0.004 -0.003,0.064 -0.125,0.03 z m -217.752002,7.934 -0.247,0.169 -0.144,-0.073 -0.272,-0.027 -0.105,-0.127 -0.285,-0.115 -0.115,-0.156 0.175,-0.296 0.414,-0.25 0.638,0.011 0.133,0.197 0.012,0.147 -0.083,0.165 -0.038,0.232 -0.083,0.123 z m -2.266,0.274 -0.057,0.133 -0.097,-0.021 -0.024,-0.118 0.063,-0.163 0.16,-0.141 0.178,-0.214 0.146,0.032 -0.079,0.141 -0.009,0.152 -0.206,0.086 -0.075,0.113 z m 6.682,1.155 0.096,0.017 0.124,-0.021 0.043,0.239 0.144,0.132 0.053,0.079 -0.156,0.083 -0.303,0.033 -0.142,-0.066 -0.147,-0.149 -0.159,0.041 -0.028,-0.12 -0.028,-0.035 -0.109,0.032 0.102,0.155 -0.276,0.012 -0.087,-0.019 -0.077,-0.175 -0.284,-0.336 10e-4,-0.131 -0.097,-0.156 0.421,-0.045 0.288,-0.275 0.163,-0.029 0.312,0.444 -0.008,0.124 0.069,0.122 0.085,0.044 z m 1.643,0.722 0.593,0.082 0.14,-0.035 0.099,0.067 0.491,0.042 0.084,0.025 -0.1,0.154 -0.314,0.141 -0.452,-0.124 -0.756,-0.044 0.031,-0.119 0.072,-0.084 0.011,-0.147 0.101,0.042 z m 2.04,0.846 0.073,0.053 0.299,-0.08 0.216,-0.029 0.362,0.197 0.126,0.135 0.238,0.144 0.081,0.104 -0.066,0.126 -0.263,0.208 -0.358,0.048 -0.211,0.089 -0.277,-0.019 -0.083,-0.038 -0.03,-0.264 -0.088,-0.283 -0.179,0.033 -0.201,-0.095 -0.208,-0.238 -0.023,-0.142 0.115,-0.226 0.201,-0.029 0.149,0.125 0.127,0.181 z m -1.018,0.478 -0.166,0.084 -0.181,-0.039 -0.042,-0.204 -0.174,-0.259 0.306,-0.053 0.172,0.075 0.09,0.081 0.109,0.139 -0.114,0.176 z m 3.56,5.223 -0.124,0.142 -0.155,-0.011 -0.563,-0.304 -0.068,-0.163 0.042,-0.759 -0.211,-0.616 -0.232,-0.472 0.169,-0.242 0.223,-0.188 0.249,-0.354 -0.204,-0.455 0.052,-0.275 0.12,-0.047 0.588,0.334 1.188,0.502 0.316,0.353 0.056,0.378 0.216,0.048 0.103,0.259 0.312,0.227 0.104,0.129 -0.129,0.208 -0.57,0.399 -0.719,0.174 -0.633,0.446 -0.13,0.287 z\"\n\t\t\t\tid=\"US\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 325.11175,563.0224 -0.138,0.125 -0.148,0.235 -0.174,0.567 -0.585,0.782 -0.119,0.443 -0.631,0.463 -0.445,0.522 -0.29,-0.013 -0.262,0.224 -1.507,0.68 -0.541,-0.128 -0.401,0.002 -0.372,-0.3 -0.849,-0.108 -0.533,0.12 -0.715,0.33 -0.216,-0.005 -0.155,-0.018 -0.387,-0.137 -0.211,-0.291 -1.101,-0.336 -0.885,-0.761 -1.046,-0.015 -0.802,0.1 -0.124,-0.101 -0.081,-0.194 -0.166,-0.282 -0.69,-0.669 -0.542,-0.662 -0.106,-0.65 0.075,-0.705 0.163,-0.833 -0.029,-0.26 0.201,-0.147 0.197,-0.03 0.191,-0.215 0.171,-0.324 0.029,-0.245 -0.132,-0.454 -0.092,-0.632 -0.109,-0.315 0.219,-0.495 0.009,-0.241 -0.126,-0.212 -0.034,-0.217 0.057,-0.223 -0.011,-0.213 -0.08,-0.205 0.06,-0.17 0.201,-0.135 0.151,-0.205 0.099,-0.277 0.051,-0.211 0.002,-0.146 -0.061,-0.137 -0.124,-0.129 0.058,-0.256 0.238,-0.384 0.155,-0.34 0.069,-0.296 -0.004,-0.24 -0.079,-0.181 0.033,-0.123 0.147,-0.065 0.066,-0.192 -0.022,-0.477 -0.152,-0.392 0.116,-0.311 0.332,-0.359 0.174,-0.289 0.014,-0.22 0.104,-0.127 0.159,0.238 0.472,0.063 0.476,0.008 0.077,-0.06 0.187,-0.389 0.246,-0.111 0.268,-0.029 0.293,0.02 0.312,0.257 0.883,0.843 0.648,0.587 0.197,0.277 0.172,0.208 0.128,0.193 -0.055,0.504 0.009,0.221 0.03,0.063 0.148,0.006 0.22,-0.037 0.185,-0.107 0.144,-0.162 0.141,-0.132 0.115,-0.07 0.041,-0.107 0.066,-0.111 0.067,-0.024 0.128,0.082 0.303,0.288 0.234,0.267 0.058,0.152 0.09,0.159 0.097,0.139 0.068,0.136 0.227,0.176 0.232,0.112 0.155,-0.115 0.393,0.368 0.865,0.307 0.159,0.186 0.15,0.265 0.302,0.401 0.419,0.362 0.337,0.153 0.324,0.087 0.181,0.08 0.124,0.139 0.197,0.149 0.125,0.056 0.042,0.134 0.128,0.293 0.134,0.371 0.145,0.345 0.315,0.332 0.356,0.258 0.369,0.146 0.207,0.182 0.09,0.188 -0.249,0.28 -0.27,0.353 -0.238,0.277 -0.246,0.194 -0.082,0.134 -0.055,0.207 0.003,1.102 -0.02,0.411 0.017,0.109 0.036,0.073 0.155,0.11 0.185,0.092 z\"\n\t\t\t\tid=\"UY\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 674.00675,332.5914 0.091,-0.067 0.16,-0.068 0.264,0.131 0.231,0.165 0.056,0.076 -0.011,0.088 -0.551,0.321 -0.342,0.15 -0.151,0.027 -0.041,0.042 -0.108,0.365 -0.212,0.065 -0.272,0.111 -0.19,0.168 -0.303,0.396 -0.77,0.575 -0.011,0.117 0.067,0.095 0.25,0.066 0.33,0.176 0.179,0.138 0.489,-0.178 0.121,0.039 0.128,0.184 0.135,0.514 0.219,0.14 0.287,0.107 0.178,0.035 0.237,0.126 0.316,0.047 0.212,-0.046 0.265,0.108 0.043,-0.047 0.035,-0.766 0.222,0.128 0.128,-0.002 0.112,-0.094 0.058,-0.127 0.038,-0.253 -0.049,-0.253 0.099,-0.116 0.077,-0.026 0.057,0.031 0.034,0.065 0.01,0.229 0.16,0.097 0.098,0.056 0.093,0.194 0.091,0.185 0.058,0.433 0.225,0.03 0.264,0.083 0.177,-0.081 0.137,0.048 0.047,0.205 -10e-4,0.191 0.02,0.152 0.071,0.043 0.23,-0.095 0.193,-0.013 0.178,0.091 0.221,0.138 0.321,0.362 0.106,0.052 0.484,0.028 0.101,0.074 0.166,0 0.18,-0.065 0.399,0.117 0.013,0.066 -0.067,0.091 -0.951,0.5 -0.07,0.154 -0.194,0.195 -0.212,0.111 -0.103,0.004 -0.465,-0.198 -0.054,0.048 -0.038,0.08 0.002,0.087 0.102,0.208 -0.047,0.131 -0.089,0.095 -0.291,-0.083 -0.054,-0.053 -0.006,-0.058 -0.112,0 -0.173,0.058 -0.333,0.359 -0.116,0.188 -0.043,0.113 -0.148,0.064 -0.161,0.024 -0.208,0.169 -0.226,0.131 -0.072,-0.096 -0.044,-0.107 -0.06,-0.034 -0.139,0.025 -0.168,0.004 -0.177,-0.121 -0.229,-0.122 -0.2,-0.043 -0.59,0.057 -0.292,0.06 -0.092,0.059 -0.164,0.016 -0.691,0.123 -0.141,-0.048 -0.104,-0.194 -0.091,-0.21 -0.179,-0.076 -0.201,-0.059 -0.075,-0.084 -0.005,-0.102 0.021,-0.1 0.016,-0.052 0.466,-0.402 0.42,-0.362 0.039,-0.029 0.038,-0.069 0.071,-0.125 0,-0.065 -0.314,-0.144 -0.012,-0.066 0.063,-0.068 0,-0.091 -0.222,-0.266 -0.384,-0.415 -0.111,-0.043 -0.082,0.027 -0.15,0.401 -0.075,0.102 -0.438,0.263 -0.366,0.181 -0.652,0.321 -0.17,0.101 -0.118,-0.018 -0.118,-0.063 -0.366,-0.325 -0.236,-0.111 -0.159,0.11 -0.134,0.16 0.013,0.329 -0.151,0.173 -0.151,0.078 0.275,0.879 -0.027,0.113 -0.21,0.031 0.154,0.33 -0.13,0.038 -0.331,-0.077 -0.445,-0.051 -0.84,0.146 -0.062,0.057 -0.023,0.073 0.049,0.066 0.407,0.007 0.398,-0.033 0.11,0.061 0.017,0.108 -0.046,0.068 -0.133,0.012 -0.291,0.065 -0.033,0.069 -0.01,0.066 0.099,0.191 0.11,0.122 0.014,0.072 -0.046,0.061 -0.056,0.024 -0.098,-0.09 -0.056,0.018 -0.027,0.082 -0.027,0.096 -0.064,0.07 -0.136,-0.037 -0.135,0.027 -0.08,0.348 -0.068,0.394 -0.222,0.262 -0.123,0.095 -0.181,0.028 -0.269,-0.032 -0.163,-0.039 -0.472,-0.058 -0.473,-0.107 -0.532,-0.1 -0.495,0.231 -0.143,0.141 -0.091,0.132 -0.093,0.061 -0.215,0.808 0.022,0.092 0.119,0.072 0.607,0.167 0.089,0.069 0.053,0.079 0.026,0.362 0.05,0.05 0.208,0.045 0.301,-0.003 0.236,-0.036 0.237,0.033 0.166,0.078 0.081,0.123 0.045,0.133 -0.282,0.793 0.023,0.288 0.087,0.412 0.16,0.323 0.301,0.315 0.229,0.202 0.048,0.095 0.012,0.147 -0.037,0.188 -0.132,0.298 -0.162,0.26 -0.175,0.11 -0.243,0.33 -0.215,0.405 -0.413,0.53 -0.139,0.295 -0.046,0.851 -0.109,0.255 -0.017,-0.097 -0.149,-0.097 -0.26,0.017 -0.171,-0.046 -0.082,-0.109 -0.212,0.031 -0.342,0.169 -0.349,-0.09 -0.355,-0.35 -0.677,-0.128 -0.857,0.08 -0.032,-0.388 0.002,-0.495 0.039,-0.659 0.292,-0.518 -0.009,-0.099 -0.057,-0.095 -0.089,-0.085 -0.519,-0.143 -0.152,-0.075 -0.201,-0.164 -0.254,-0.172 -0.221,-0.119 -0.347,-0.157 -0.32,-0.087 -0.188,0.066 -0.173,0.084 -0.162,0.002 -0.162,-0.046 -0.6,-0.393 -0.906,-0.68 -0.718,-0.476 -0.451,-0.228 -0.107,-0.073 -0.253,-0.214 -0.622,-0.578 -0.413,0.085 -0.59,-0.376 -0.53,-0.368 -0.12,-0.1 -0.603,-0.682 -0.602,-0.443 -0.656,-0.484 -0.424,-0.304 -0.719,-0.516 -0.352,-0.312 -0.119,-0.115 -0.116,-0.221 -0.188,-1.083 -0.216,-0.498 -0.308,-0.271 -0.262,-0.523 -0.218,-0.777 -0.18,-0.506 -0.143,-0.234 -0.288,-0.259 -0.437,-0.284 -0.414,-0.135 -0.149,0.005 -0.074,0.035 -0.084,0.048 -0.164,0.212 -0.242,0.022 -0.178,-0.005 -0.166,-0.076 -0.524,-0.067 -0.186,-0.074 -0.315,0.011 -0.677,0.11 -0.165,-0.02 -0.715,-0.474 -0.311,-0.188 -0.062,-0.104 0.003,-0.182 0.105,-0.258 0.09,-0.183 -0.04,-0.19 -0.136,-0.208 0,-0.222 0.093,-0.124 0.19,0.039 0.068,-0.078 -0.024,-0.118 -0.103,-0.084 -0.137,-0.189 -0.405,-0.176 -0.058,-0.072 0.021,-0.082 0.07,-0.088 0.014,-0.186 0.007,-0.24 0.054,-0.125 0.015,-0.098 -0.059,-0.079 -0.137,-0.092 -0.219,-0.223 -0.269,-0.024 -0.875,0.008 -0.271,-0.09 -0.218,-0.125 -0.218,-0.476 -0.11,-0.113 -0.103,-0.047 -0.245,-0.016 -0.295,-0.046 -0.151,-0.081 -0.412,-0.436 -0.396,-0.39 -0.159,0.368 -0.154,0.073 -0.349,-0.034 -0.262,-0.062 -0.149,0.083 -0.154,0.145 0.029,0.096 0.118,0.101 0.237,0.187 0.363,0.457 0.165,0.252 0.024,0.088 -0.031,0.066 -0.049,0.028 -0.072,-10e-4 -0.097,-0.001 -0.056,-0.075 -0.019,-0.13 -0.121,-0.197 -0.125,-0.114 -0.137,-0.071 -0.192,-0.053 -0.253,-0.094 -0.131,-0.004 -0.127,0.109 -0.106,0.147 -0.063,0.321 -0.189,0.394 -0.116,0.155 -0.36,0.094 -0.854,0.032 -0.255,0.123 -0.174,0.148 -0.323,0.479 -0.225,0.159 -0.195,0.219 0.059,0.702 0.094,0.817 0.164,0.226 0.104,0.068 0.014,0.08 -0.067,0.071 -0.086,0.089 -0.13,0.163 -0.146,-0.006 -0.294,-0.041 -0.245,-0.044 -0.824,-0.047 -0.668,-0.038 -0.742,-0.042 -10e-4,-0.856 0,-0.859 0,-0.862 -0.001,-0.865 0,-0.869 0,-0.872 -10e-4,-0.875 0,-0.878 0,-0.881 0,-0.885 -10e-4,-0.888 0,-0.892 0,-0.896 -10e-4,-0.899 0,-0.902 0,-0.906 0.35,-0.112 0.442,-0.143 0.424,-0.136 0.505,-0.163 0.569,-0.184 0.486,-0.157 0.58,-0.187 0.442,-0.143 0.415,-0.134 0.531,-0.16 0.826,-0.248 0.461,-0.139 0.466,-0.14 0.444,-0.134 0.297,-0.05 0.319,0.191 0.388,0.262 0.388,0.262 0.388,0.262 0.388,0.262 0.388,0.261 0.388,0.261 0.388,0.261 0.388,0.26 0.388,0.26 0.388,0.26 0.388,0.259 0.388,0.259 0.388,0.259 0.388,0.258 0.388,0.258 0.388,0.258 0.36,0.24 0.162,0.178 0.089,0.392 0.179,0.311 0.311,0.336 0.318,0.344 0.396,0.453 0.274,0.314 0.279,0.32 0.462,0.527 0.288,0.328 0.229,0.011 0.465,-0.078 0.622,-0.104 0.491,-0.083 0.594,-0.1 0.566,-0.095 0.446,-0.076 0.668,0.057 0.659,0.057 0.473,0.041 0.463,0.04 0.549,0.047 0.307,0.026 0.352,0.03 0.148,-0.079 0.303,-0.162 0.286,-0.152 0.297,-0.159 0.263,-0.08 0.274,0.253 0.229,0.292 0.241,0.307 0.279,0.295 0.271,0.175 0.363,0.237 0.209,0.404 0.279,0.539 0.184,0.354 0.189,0.363 0.275,-0.143 0.293,-0.153 0.266,-0.139 -0.032,0.449 -0.028,0.407 -0.045,0.615 -0.036,0.502 -0.096,0.598 -0.007,0.455 -0.006,0.399 -0.004,0.316 0.515,0.014 0.381,0.01 0.477,0.013 0.046,0.396 0.064,0.556 0.097,0.502 0.082,0.421 0.122,0.543 0.066,0.29 0.114,0.341 0.113,0.082 0.181,0.054 0.63,-0.041 0.522,-0.034 0.412,-0.026 0.438,-0.028 0.581,-0.038 0.197,0.087 0.17,-0.061 0.196,-0.061 0.156,0.247 0.079,0.125 0.111,0.13 0.15,0.121 -0.063,0.253 -0.093,0.369 -0.026,0.189 0.181,0.204 0.135,0.119 0.369,0.242 0.347,0.135 0.226,0.04 0.216,-0.052 0.079,-0.137 -0.02,-0.189 -0.104,-0.199 0.008,-0.237 0.069,-0.173 0.221,-0.315 0.209,-0.298 0.32,-0.304 0.381,-0.301 0.158,-0.22 0.061,-0.383 0.249,-0.217 0.269,-0.13 0.334,-0.113 0.092,-0.192 0.461,-0.326 0.276,-0.161 0.349,-0.094 0.482,-0.212 0.381,-0.25 0.365,-0.471 0.29,-0.309 0.244,-0.19 0.205,-0.007 0.144,0.154 0.124,0.013 0.081,-0.07 0.138,-0.198 0.148,-0.231 0.139,-0.096 0.269,-0.049 0.249,-0.153 z m -0.826,4.906 -0.01,-0.09 -0.087,-0.151 -0.13,-0.085 -0.062,0.037 0.053,0.123 0.151,0.175 0.085,-0.009 z m 1.554,3.833 -0.141,0.033 -0.258,-0.005 -0.147,-0.038 0.09,-0.296 0.003,-0.059 -0.011,-0.008 -0.074,-0.04 -0.112,-0.121 -0.039,-0.179 0.044,-0.166 0.082,-0.069 0.052,0.012 0.158,0.253 0.141,0.074 0.275,0.042 -0.139,0.25 0.103,0.267 -0.027,0.05 z m 1.609,-0.21 -0.075,0.157 -0.132,-0.038 -0.104,-0.104 0.034,-0.082 0.155,-0.045 0.081,-0.045 0.068,-0.008 -0.027,0.165 z\"\n\t\t\t\tid=\"UZ\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 509.80575,333.9114 -0.024,0.003 -0.009,-0.013 0.009,-0.017 0.021,-0.003 z\"\n\t\t\t\tid=\"VA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 303.20975,425.9094 -0.083,0.045 -0.206,-0.192 0.025,-0.224 0.125,-0.123 0.118,-0.072 0.121,-0.008 0.042,0.185 -0.029,0.261 -0.113,0.128 z m -0.145,0.468 -0.045,0.031 0.021,0 -0.021,0.021 -0.014,-0.021 -0.022,-0.013 -0.028,-0.006 -0.033,10e-4 0,-0.021 0.042,0.013 0.063,-0.013 0,-0.023 -0.019,-0.021 -0.008,-0.015 0.023,-0.022 0.078,-0.05 0.033,-0.026 0.004,0.011 10e-4,0.01 0.004,0.01 0.012,0.01 -0.04,0.039 -0.051,0.085 z m -0.304,0.857 -0.028,0.001 -0.025,-0.01 0.007,-0.009 0.032,-0.007 0.015,-0.019 -0.005,-0.025 10e-4,-0.028 0.025,-0.017 0.02,-0.001 0.009,0.011 0.005,0.026 -0.015,0.02 -0.017,0.016 -0.008,0.025 -0.016,0.017 z\"\n\t\t\t\tid=\"VC\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 306.45675,438.9994 0.521,0.686 0.008,0.076 -0.057,0.086 -0.325,0.161 -0.073,0.083 -0.117,0.305 -0.409,0.167 -0.283,0.21 -0.19,0.184 -0.095,0.074 -0.374,0.041 -0.12,0.116 -0.151,0.348 -0.11,0.146 -0.194,0.171 -0.001,0.104 0.268,0.38 0.048,0.12 -0.083,0.181 0.008,0.128 0.141,0.154 0.168,0.035 0.164,-0.064 0.204,0.006 0.133,0.041 0.055,0.045 0.009,0.118 -0.084,0.25 -0.121,0.162 -0.536,0.248 -0.238,0.144 -0.132,0.106 -0.289,-0.057 -0.147,0.004 -0.113,0.082 -0.069,0.07 -0.194,0.018 -0.274,0.042 -0.115,0.047 -0.089,0.123 -0.074,0.175 0.062,0.21 0.086,0.188 -0.004,0.172 0.066,0.479 -0.086,0.112 -0.184,0.126 -0.219,0.224 -0.246,0.311 0.039,0.089 0.588,0.652 0.598,0.663 0.595,0.659 0.084,0.029 0.112,0.076 0.104,0.23 0.085,0.245 0.002,0.126 -0.067,0.159 -0.145,0.183 -0.176,0.148 -0.257,0.126 -0.205,0.119 -0.169,0.313 -0.103,0.11 -0.094,0.044 -0.186,0.041 -0.3,-0.01 -0.198,-0.024 -0.246,0.234 -0.313,0.086 -0.21,0.32 -0.748,0.254 -0.732,0.197 -0.201,0.078 -0.723,-0.163 -0.174,0.051 -0.2,0.152 -0.185,0.117 -0.156,0.007 -0.131,0.061 -0.078,0.217 -0.069,0.747 -0.26,0.222 -0.313,-10e-4 -0.215,-0.259 -0.255,-0.195 -0.445,-0.463 -0.124,-0.061 -0.115,0.003 -0.413,0.138 -0.196,-0.06 -0.158,-0.072 -0.264,0.023 -0.47,0.005 -0.3,0.004 -0.146,-0.126 -0.136,-0.259 -0.091,-0.093 -0.107,-0.075 -0.177,-0.038 -0.757,10e-4 -0.143,0 -0.104,-0.05 -0.146,-0.222 -0.159,-0.104 -0.187,-0.004 -0.082,0.123 0.324,0.399 0.094,0.217 0.284,0.313 0.821,0.663 0.152,0.21 -0.017,0.269 -0.005,0.411 0.028,0.389 0.211,0.558 0.296,0.567 0.081,0.362 -0.055,0.267 -0.057,0.143 0.006,0.063 0.061,0.057 0.283,0.082 0.594,0.051 0.359,0 0.548,0.062 0.041,0.199 -0.054,0.329 -0.108,0.187 -0.088,0.054 -0.298,0.043 -0.314,0.202 -0.456,0.199 -0.26,0.027 -0.108,0.039 -0.092,0.06 -0.076,0.076 -0.088,0.374 -0.134,0.422 -0.253,0.25 -0.278,0.207 -0.283,0.023 -0.227,-0.017 -0.113,0.061 -0.163,0.17 -0.233,0.212 -0.18,0.113 -0.242,-0.011 -0.259,0.104 -0.327,0.171 -0.217,0.14 -0.185,0.24 -0.265,0.251 -0.272,0.177 -0.13,0.218 -0.186,0.276 -0.232,0.009 -0.019,-0.166 0.111,-0.267 -0.121,-0.23 -0.221,-0.124 -0.104,-0.037 -0.103,0.015 -0.262,0.114 -0.321,0.207 -0.198,0.149 -0.179,0.068 -0.368,0.062 -0.31,0.032 -0.128,-0.042 -0.23,-0.152 -0.533,-0.476 -0.721,-0.644 -0.055,-0.187 0.031,-0.19 -0.131,-0.278 -0.077,-0.296 -0.065,-0.102 -0.019,-0.222 -0.156,-0.399 -0.128,-0.327 -0.118,-0.166 0.05,-0.142 -0.05,-0.141 -0.095,-0.115 -0.14,-0.371 0.049,-0.16 -0.037,-0.16 -0.118,-0.11 -0.167,-0.118 -0.223,-0.246 -0.266,-0.234 -0.136,-0.092 -0.093,-0.037 -0.081,-0.222 -0.062,-0.068 -0.136,-0.018 -0.279,-0.093 -0.26,0.111 -0.006,-0.172 0.074,-0.104 0.898,-0.822 0.452,-0.378 0.049,-0.056 0.04,-0.087 0.031,-0.117 -0.103,-0.134 -0.424,-0.635 -0.147,-0.12 -0.145,-0.098 -0.166,-0.267 -0.199,-0.621 -0.143,-0.312 -0.043,-0.24 0.009,-0.271 -0.053,-0.208 -0.115,-0.145 0,-0.443 0.115,-0.742 0.028,-0.564 -0.058,-0.386 0.103,-0.294 0.263,-0.202 0.147,-0.312 0.031,-0.422 0.158,-0.347 0.284,-0.271 0.097,-0.268 -0.09,-0.265 -0.029,-0.169 -0.241,-0.172 -0.447,-0.121 -0.37,-0.014 -0.224,0.135 -0.573,0.125 -0.922,0.115 -0.743,0 -0.563,-0.116 -0.428,0.039 -0.294,0.194 -0.207,0.044 -0.12,-0.106 -0.13,-0.029 -0.197,0.067 -0.034,-0.031 -0.437,-0.523 -0.404,-0.485 -0.464,-0.578 -0.535,-0.667 -0.096,-0.044 -0.166,0.004 -0.219,0.012 -0.34,-0.069 -0.233,-0.097 -0.182,-0.094 -0.336,-0.119 -0.23,-0.021 -0.207,0.035 -0.569,0.233 -0.323,0.022 -0.25,0.004 -0.672,-0.115 -0.459,-0.019 -0.534,0.076 -0.229,0.043 -0.32,-0.119 -0.218,-0.181 -0.203,-0.43 -0.143,-0.338 -0.249,-0.068 -0.276,-0.058 -0.136,-0.112 -0.082,-0.195 -0.02,-0.25 0.028,-0.407 0.026,-0.146 0.038,-0.439 0.152,-0.23 0.096,-0.111 -0.019,-0.185 -0.073,-0.378 -0.074,-0.268 -0.306,-0.303 -0.392,-0.389 -0.169,-0.623 -0.199,-0.736 -0.156,-0.074 -0.147,0.037 -0.156,-0.037 -0.138,-0.296 -0.138,-0.056 -0.22,0.104 -0.159,0.081 -0.403,0.074 -0.083,-0.074 0.028,-0.092 0.17,-0.269 0.2,-0.344 0.233,-0.313 0.216,-0.321 0.162,-0.342 0.11,-0.681 0.076,-0.47 0.2,-0.838 0.365,-0.669 0.138,-0.308 0.331,-0.401 0.152,-0.218 0.202,-0.172 0.555,-0.233 0.663,-1.153 0.152,-0.184 0.67,-0.172 0.515,-0.134 0.381,-0.141 0.125,-0.075 0.101,-0.035 -0.083,0.134 -0.183,0.17 -0.207,0.104 -1.067,0.261 -0.109,0.055 -0.139,0.108 -0.001,0.248 0.029,0.194 0.314,0.638 0.123,0.157 0.42,0.345 -0.096,0.048 -0.155,0.006 0.113,0.452 0.258,0.31 0.012,0.195 -0.198,0.606 -0.361,0.362 -0.256,0.421 -0.199,0.167 -0.441,0.828 0.335,0.493 0.048,0.25 0.29,0.355 0.189,0.116 0.126,0.144 -0.058,0.242 0.116,0.328 0.15,0.173 0.188,0.069 0.233,0 0.669,-0.219 0.159,-0.098 0.102,-0.175 0.335,-0.355 0.021,-0.459 0.072,-0.552 -0.082,-0.36 -0.352,-0.514 -0.154,-0.365 -0.349,-0.34 -0.214,-0.583 -0.088,-0.182 -0.066,-0.251 -0.075,-0.445 0.234,-0.162 -0.024,-0.365 0.576,-0.101 1.246,-0.594 0.771,-0.15 0.878,-0.317 0.204,-0.157 0.176,-0.261 0.137,-0.03 0.458,0.245 0.226,-0.085 0.089,-0.191 -0.125,-0.372 -0.263,0 -0.791,0.135 -0.077,-0.16 0,-0.141 -0.187,-0.444 0.116,-0.334 0.119,-0.271 0.227,-0.109 0.332,-0.118 0.251,0.181 0.152,0.172 0.083,0.167 0.057,0.453 0.135,0.458 0.142,0.318 0.226,0.24 0.173,-0.016 0.124,-0.04 0.823,-0.054 0.5,0.164 0.636,0.083 0.594,0.348 0.611,0.422 0.156,0.308 0.051,0.294 0.148,0.197 -0.147,0.203 0.08,0.338 0.175,0.341 0.264,0.217 0.753,0.059 0.814,-0.146 1.258,-0.133 0.405,-0.114 2.082,-0.062 0.397,0.164 0.039,0.163 0.004,0.125 0.67,0.61 0.55,0.083 0.467,0.195 0.483,0.105 0.528,0.148 0.297,-0.019 0.223,-0.052 0.262,-0.009 1.858,-1.02 0.996,0.026 0.153,-0.066 0.132,-0.089 -0.367,-0.155 -0.829,-0.06 -0.251,0.104 -0.142,-0.263 0.27,0.007 0.922,-0.088 1.057,0.058 0.861,-0.187 0.433,-0.031 0.25,0.037 0.686,-0.121 1.291,0.143 1.018,-0.118 -0.118,0.169 -0.334,0.103 -0.541,0.032 -0.413,0.247 -0.88,-0.045 -0.618,0.089 0.198,0.069 0,0.253 0.084,0.051 0.089,0.002 0.21,0.188 0.057,0.123 0.068,0.258 -0.093,0.279 -0.128,0.125 0.251,-0.042 0.142,-0.131 -0.021,-0.132 0.021,-0.153 0.141,0.048 0.099,0.069 0.321,0.73 0.226,0.383 0.058,-0.014 0.054,-0.014 0.067,-0.073 0.1,-0.18 0.086,0.114 0.052,0.044 0.052,0.014 -0.048,-0.163 0.064,-0.209 -0.022,-0.073 0.1,-0.016 0.12,0.028 0.17,0.058 0.303,0.24 0.2,0.249 0.017,0.139 0.073,0.078 0.131,0.082 0.064,0.128 0.012,-0.202 -0.077,-0.147 -0.019,-0.168 0.394,-0.007 0.103,-0.221 0.215,0.133 0.57,0.607 0.21,0.1 0.621,0.116 0.391,0.292 0.229,0.262 -0.136,0.274 -0.365,0.137 -0.146,0.171 -0.084,0.168 -0.001,0.169 -0.111,0.196 -0.016,0.069 -0.066,0.276 -0.15,0.333 -0.2,0.353 -1.042,0.008 0.257,0.145 0.237,0.105 0.389,0.277 0.309,-0.218 0.443,-0.016 0.479,-0.242 0.181,-0.038 0.896,0.126 0.216,-0.177 0.18,-0.052 0.485,0.033 0.431,0.195 z m -10.754,-7.307 0.09,0.371 -0.027,0.07 -0.254,0.25 -0.213,0.018 -0.172,-0.009 -0.13,-0.048 -0.167,-0.163 -0.163,0.049 -0.403,-0.057 -0.112,-0.057 0.151,-0.2 0.277,-0.081 0.102,-0.017 0.081,0.123 0.202,0.106 0.237,0.011 0.059,-0.189 0.321,-0.281 0.121,0.104 z m -3.825,0.638 -0.151,0.064 -0.277,-0.064 -0.139,-0.089 0.088,-0.102 0.227,0 0.213,0.124 0.039,0.067 z m 12.324,5.006 -0.337,0.093 0.005,-0.075 0.09,-0.131 0.175,-0.037 0.066,-0.045 0.111,-0.03 0.064,0.005 0.064,0.037 -0.153,0.074 -0.085,0.109 z m -0.496,0.766 -0.174,0.057 -0.026,-0.283 0.053,-0.076 0.296,-0.228 0.082,-0.043 0.06,0.048 -0.015,0.061 0.143,0.103 -0.035,0.13 -0.154,0.142 -0.23,0.089 z\"\n\t\t\t\tid=\"VE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 294.47175,409.7094 0.04,0.099 -0.024,-0.002 -0.16,-0.068 -0.124,-0.005 -0.051,-0.018 -0.028,-0.037 0.248,-0.004 0.099,0.035 z m -0.301,0.812 -0.073,0.021 -0.047,-0.005 -0.016,-0.042 0.05,-0.117 0.285,-0.013 -0.199,0.156 z m -0.557,0.181 -0.22,0.011 -0.065,-0.037 0.124,-0.091 0.23,-0.011 0.067,0.024 -0.136,0.104 z\"\n\t\t\t\tid=\"VG\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 292.90875,410.9164 -0.21,0.026 -0.291,-0.136 0.229,-0.052 0.148,0.033 0.124,0.129 z m 0.519,-0.071 -0.186,0.078 -0.125,-0.011 -0.048,-0.028 0.099,-0.091 0.26,0.052 z m -0.296,1.643 0.235,0.129 0.285,0 -0.297,0.129 -0.569,0.013 0.013,-0.207 0.333,-0.064 z\"\n\t\t\t\tid=\"VI\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 777.91975,401.4854 -0.132,0.027 -0.327,0.005 -0.286,0.273 -0.197,0.114 -0.309,0.095 -0.328,0.154 -0.095,0.271 -0.009,0.196 -0.053,0.219 -0.532,0.318 -0.148,-0.033 -0.103,-0.118 -0.157,0.024 -0.106,0.059 -0.126,-0.008 -0.141,0.072 -0.185,-0.022 -0.17,-0.101 -0.098,-0.026 -0.117,-10e-4 -0.022,0.119 0.174,0.461 0.045,0.212 -0.569,0.622 0.063,0.4 -0.154,0.307 -0.344,0.247 -0.645,0.636 -0.291,0.014 -0.219,0.144 -0.478,1.042 -0.005,0.357 -0.075,0.261 0.016,0.25 -0.209,0.492 -0.218,0.208 -0.048,0.268 0.309,0.551 0.035,0.097 0.18,0.296 0.087,0.211 0.138,0.211 0.497,0.547 0.222,0.167 0.267,0.113 0.484,0.492 0.244,0.313 -0.111,0.213 0.055,0.451 -0.345,-0.133 0.04,0.053 0.411,0.247 0.614,0.864 0.535,0.426 0.543,0.484 0.17,0.459 0.49,0.304 0.545,0.44 -0.023,0.099 0.147,0.118 0.366,0.233 0.223,0.247 0.086,0.234 0.135,0.038 0.153,-0.058 0.152,-0.022 0.108,0.018 0.164,0.257 0.229,0.229 0.11,0.211 0.09,-0.028 0.074,0.032 0.019,0.176 0.033,0.116 0.307,0.338 0.146,0.318 0.366,0.516 0.271,0.293 0.192,0.165 0.221,0.141 0.216,0.571 0.117,0.518 0.231,0.573 0.175,0.25 0.006,0.471 0.142,0.485 0.151,0.327 0.045,0.334 0.047,0.166 0.058,0.125 0.165,0.565 -0.043,0.263 -0.115,-0.257 0.015,0.758 0.101,0.401 -0.045,0.491 0.105,0.172 0.188,0.555 0.133,0.199 -0.012,0.677 0.07,0.342 -0.178,-0.204 -0.129,-0.232 -0.173,0.123 -0.155,0.181 0.241,0.728 -0.274,-0.069 0.024,0.978 0.114,0.228 0.008,0.109 -0.033,0.13 -0.076,-0.143 -0.016,-0.147 -0.043,0.033 0.002,0.076 -0.092,0.172 -0.027,0.213 0.099,0.182 0.017,0.138 -0.071,0.171 -0.114,0.181 -0.261,0.024 -0.06,0.354 -0.089,0.375 -0.466,0.06 -0.338,0.331 -0.418,0.123 -0.373,0.327 -0.411,0.303 -0.268,0.04 -0.229,0.065 -0.263,0.502 -0.438,0.058 -0.787,0.41 -0.265,0.198 -0.241,0.077 -0.345,0.171 -0.074,-0.061 -0.115,-0.147 -0.298,-0.076 -0.146,-0.165 -0.042,-0.212 -0.039,-0.083 -0.064,0.12 -0.05,0.504 -0.053,0.114 -0.127,0.05 -0.251,-0.143 -0.239,-0.291 -0.341,0.201 0.104,0.024 0.155,-0.016 0.12,0.05 0.102,0.194 -0.004,0.105 -0.053,0.123 -0.319,0.02 -0.426,-0.043 -0.078,0.016 0.389,0.189 0.355,0.109 0.157,0.119 0,0.099 -0.199,0.159 -0.154,0.195 -0.003,0.121 -0.003,0.135 -0.173,0.116 -0.107,-0.023 -0.304,-0.203 -0.877,-0.799 0.132,0.226 0.909,0.908 0.16,0.299 0.022,0.211 -0.094,0.106 -0.154,0.125 -0.298,0.009 -0.488,-0.337 -0.781,-0.81 -0.266,-0.11 0.79,0.926 0.13,0.225 0.133,0.259 -0.038,0.154 -0.068,0.145 -1.872,0.857 -0.28,0.369 -0.222,0.455 -0.368,0.253 -0.216,0.231 -0.624,0.13 -0.341,-0.041 0.354,-0.42 -0.219,-0.156 -0.011,-1.083 0.086,-1.189 0.163,-0.594 0.235,-0.148 0.296,-0.091 0.007,-0.125 -0.029,-0.143 -0.159,-0.203 -0.174,-0.094 -0.26,-0.041 -0.2,-0.249 -0.152,0.01 -0.236,0.083 -0.143,-0.107 -0.053,-0.167 -0.219,-0.208 -0.252,-0.202 0.114,-0.032 0.132,-0.116 0.142,-0.149 0.352,-0.021 0.353,0.007 0.099,-0.039 0.143,-0.158 0.231,-0.203 0.176,-0.113 0.042,-0.091 -0.07,-0.214 -0.039,-0.22 0.065,-0.069 0.319,0.039 0.351,0.103 0.085,0.046 0.201,-0.27 0.055,-0.033 0.132,0.001 0.348,-0.05 0.34,-0.071 0.161,0.012 0.156,0.181 0.119,0.178 0.062,0.014 0.177,-0.076 0.146,0.095 0.306,0.155 0.183,0.007 -0.091,-0.361 0.102,-0.257 -0.02,-0.07 -0.172,-0.118 -0.584,-0.472 -0.1,-0.141 0.014,-0.222 -0.02,-0.326 -0.052,-0.205 0.009,-0.12 0.036,-0.096 0.107,-0.038 0.104,-0.013 0.083,-0.084 0.14,-0.215 0.272,0.019 0.382,0.122 0.282,0.076 0.167,-0.015 0.037,-0.031 -0.005,-0.116 0.02,-0.494 -0.011,-0.105 0.241,-0.048 0.368,-0.011 0.194,-0.029 0.181,-0.208 0.466,-0.072 0.337,-0.281 0.304,-0.289 0.149,-0.077 0.189,-0.05 0.142,0.007 0.178,0.167 0.147,-0.101 0.17,-0.196 0.089,-0.192 0.049,-0.309 -0.033,-0.474 -0.09,-0.371 -0.085,-0.278 -0.017,-0.278 0.196,-0.559 0.169,-0.609 -0.032,-0.24 -0.184,-0.38 -0.187,-0.463 -0.204,-0.51 -0.077,-0.076 -0.055,-0.142 -0.031,-0.166 0.081,-0.521 0.012,-0.175 0.235,-0.238 0.126,-0.272 0.118,-0.301 -0.045,-0.159 -0.016,-0.324 0.03,-0.157 -0.056,-0.127 -0.068,-0.185 0.045,-0.12 0.165,-0.103 0.097,-0.177 0.124,-0.207 0.055,-0.189 -0.089,-0.158 -0.161,-0.237 -0.294,-0.214 -0.339,-0.274 -0.166,-0.169 -0.132,-0.172 -0.121,-0.2 -0.066,-0.16 0.064,-0.105 0.482,-0.241 0.088,-0.087 0.051,-0.134 -0.038,-0.131 -0.13,-0.071 -0.151,-0.048 -0.222,-0.152 -0.414,-0.417 -0.19,-0.093 -0.2,-0.12 -0.106,-0.126 -0.116,-0.346 -0.053,-0.031 -0.115,0.105 -0.146,0.109 -0.122,-0.019 -0.111,-0.098 -0.053,-0.132 -0.123,-0.181 -0.134,-0.147 -0.035,-0.496 -0.021,-0.162 -0.066,-0.226 -0.104,-0.081 -0.11,-0.06 -0.26,-0.412 -0.18,-0.213 -0.738,-0.58 -0.092,-0.093 -0.199,-0.239 -0.346,-0.339 -0.247,-0.273 -0.18,-0.283 -0.084,-0.246 -0.025,-0.192 -0.196,-0.275 -0.169,-0.226 -0.164,-0.073 -0.187,-0.031 -0.169,-0.134 -0.309,-0.304 -0.137,-0.195 -0.081,-0.132 0.004,-0.136 0.074,-0.226 0.09,-0.129 0.003,-0.101 -0.088,-0.082 -0.343,-0.146 -0.776,-0.221 -0.29,-0.169 -0.268,-0.216 -0.202,-0.147 -0.946,-0.625 -0.287,-0.104 -0.246,-0.111 -0.075,-0.108 0.013,-0.104 0.101,-0.077 0.268,-0.161 0.1,-0.184 -0.032,-0.241 -0.106,-0.244 0.052,-0.084 0.087,-0.01 0.18,-0.007 0.373,-0.014 0.804,0.222 0.116,-0.024 0.437,-0.403 0.164,-0.241 0.038,-0.201 0.086,-0.128 0.23,-0.21 0.003,-0.192 -0.113,-0.257 -0.115,-0.099 -0.099,-0.043 -0.319,0.034 -0.062,-0.058 -0.042,-0.191 -0.015,-0.117 -0.105,-0.137 -0.345,-0.117 -0.292,-0.033 -0.068,-0.049 0.112,-0.132 0.199,-0.13 0.151,-0.076 0.119,-0.135 0.022,-0.138 -0.148,-0.123 -0.193,-0.137 -0.313,-0.261 -0.434,-0.277 -0.264,-0.095 -0.138,0.013 -0.478,0.238 -0.257,0.155 -0.214,0.276 -0.223,0.059 -0.226,-0.122 -0.256,-0.125 -0.709,-0.182 -0.299,-0.152 -0.619,-0.93 -0.091,-0.189 0.059,-0.214 0.043,-0.307 0.062,-0.199 0.109,-0.19 0.03,-0.169 -0.027,-0.166 -0.089,-0.095 -0.117,-0.028 -0.087,-0.038 -0.082,-0.218 -0.05,0.028 -0.076,0.265 -0.091,0.095 -0.121,0.047 -0.094,-0.042 -0.06,-0.106 -0.026,-0.18 -0.062,-0.242 -0.076,-0.158 -0.267,-0.161 -0.126,-0.209 -0.396,-0.455 -0.332,-0.319 -0.155,-0.287 0.136,-0.107 0.171,-0.155 0.184,-0.242 0.206,-0.304 0.086,-0.186 0.061,-0.075 0.121,-0.055 0.13,0.03 0.228,0.123 0.344,0.157 0.307,0.186 0.124,0.187 0.171,0.179 0.131,0.054 0.066,-0.014 0.197,-0.135 0.17,-0.135 0.004,-0.153 0.156,-0.138 0.204,-0.227 0.097,-0.154 0.073,-0.016 0.083,0.045 0.322,0.476 0.062,0.029 0.091,-0.071 0.127,-0.372 0.14,-0.144 0.048,0.036 0.779,0.701 0.074,-0.005 0.084,-0.031 0.055,-0.108 0.061,-0.243 0.116,-0.26 0.25,-0.145 0.195,-0.028 0.072,0.124 0.169,0.171 0.205,0.024 0.436,-0.303 0.143,-0.048 0.152,0.005 0.155,-0.012 0.148,-0.116 0.156,-0.153 0.053,-0.302 0.033,-0.271 0.107,-0.11 0.128,-0.073 0.24,-0.103 0.542,-0.263 0.14,-0.125 0.103,-0.07 0.211,0.114 0.252,0.22 0.152,0.166 0.102,0.179 0.049,0.149 0.401,0.13 0.256,0.184 0.17,0.141 0.168,-0.006 0.168,-0.038 0.108,-0.113 0.189,-0.002 0.224,0.017 0.1,0.045 0.185,0.26 0.083,0.036 0.165,-0.018 0.317,-0.092 0.255,-0.044 0.23,0.104 0.438,0.289 -0.123,0.206 -0.098,0.222 -0.192,0.156 -0.142,0.039 -0.09,0.217 -0.04,0.32 0.049,0.163 0.11,0.052 0.122,0.108 0.05,0.143 0.017,0.316 -0.007,0.356 0.017,0.118 0.095,-0.022 0.09,-0.042 0.182,0.055 0.226,0.093 0.143,0.094 0.128,-0.012 0.1,0.092 0.037,0.176 0.118,0.123 0.328,0.231 0.263,0.02 0.222,0.305 0.23,-0.1 0.106,0.132 0.477,-0.046 0.332,-0.124 0.119,0.029 0.299,0.254 0.176,0.154 z m -1.038,0.872 -0.404,0.375 -0.155,-0.006 0.138,-0.424 0.066,-0.101 0.243,0.146 0.112,0.01 z m -0.229,0.868 -0.157,0.078 -0.186,-0.009 0.223,-0.146 0.113,-0.181 0.091,-0.063 -10e-4,0.158 -0.083,0.163 z m -1.841,0.331 -0.032,0.058 -0.143,-0.141 -0.095,-0.061 0.072,-0.19 0.168,0.208 0.03,0.126 z m 0.466,0.205 -0.116,0.012 -0.223,-0.242 0.12,-0.128 0.253,0.09 0.059,0.059 -0.002,0.052 -0.061,0.115 -0.03,0.042 z m 0.382,30.014 -0.235,0.171 -0.016,-0.144 0.204,-0.093 0.072,-0.073 0.052,0.001 -0.077,0.138 z m -8.71,0.018 0.053,0.141 -0.02,0.33 -0.109,0.323 0.032,0.141 -0.084,0.09 -0.187,-0.605 -0.235,-0.262 -0.052,-0.101 0.137,0.007 0.245,-0.166 0.118,-0.004 0.102,0.106 z m 7.166,4.829 -0.079,0.006 -0.06,-0.058 0.254,-0.185 -0.025,0.123 0.009,0.062 -0.099,0.052 z\"\n\t\t\t\tid=\"VN\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 944.95075,502.0824 -0.041,0.028 -0.065,-0.022 -0.166,-0.348 0.042,-0.116 0.209,-0.111 0.186,0.193 0.018,0.107 -0.002,0.091 -0.028,0.079 -0.124,0.033 -0.029,0.066 z m 0.269,1.017 -0.117,0.146 -0.316,-0.048 -0.075,-0.039 0.021,-0.242 0.079,-0.083 0.189,-0.075 0.259,0.119 -0.04,0.222 z m -2.354,1.631 0.181,0.955 0.21,-0.002 0.107,-0.051 0.124,-0.224 0.056,-0.351 0.109,-0.05 0.138,0.038 -0.06,0.112 0.04,0.281 0.106,0.156 0.07,0.028 0.142,0.735 0.053,0.154 -0.003,0.124 -0.297,0.275 -0.441,-0.008 -0.311,0.165 -0.189,-0.011 10e-4,-0.186 -0.168,-0.148 -0.19,-0.317 0.047,-0.563 -0.339,-1.043 -0.003,-0.261 0.116,-0.34 0.113,-0.016 0.154,0.284 0.234,0.264 z m 4.051,1.449 -0.049,0.179 -0.116,-0.208 -0.074,-0.874 0.03,-0.081 0.061,-0.006 0.142,0.608 0.006,0.382 z m -0.781,0.31 -0.188,0.133 -0.348,-0.013 -0.129,-0.075 0.427,-0.404 0.494,-0.083 -0.256,0.442 z m 0.847,1.549 -0.047,0.003 -0.048,-0.133 -0.158,-0.71 0.104,-0.634 0.065,0.134 0.237,1.113 -0.032,0.182 -0.121,0.045 z m -2.79,-0.714 -0.051,0.075 -0.298,-0.188 0.068,-0.181 0.324,0.065 -0.043,0.229 z m 0.544,1.078 0.129,0.063 0.07,0 0.042,0.141 0.402,0.282 0.11,-0.008 0.093,0.154 0.173,0.078 0.047,0.157 0.123,0.16 -0.215,0.194 -0.417,-0.052 -0.238,0.22 -0.216,-0.056 -0.038,-0.116 0.03,-0.039 -0.129,-0.295 -0.058,-0.45 -0.087,-0.265 -0.095,-0.113 -0.194,0.099 -0.079,0.017 -0.188,-0.217 0.089,-0.441 0.047,-0.126 0.151,-0.024 0.23,0.116 0.218,0.521 z m 2.481,0.699 -0.321,0.03 -0.451,-0.091 -0.182,-0.126 -0.078,-0.126 0.156,-0.094 0.224,-0.044 0.279,-0.289 0.097,0.11 0.104,0.324 0.112,0.098 0.063,0.098 -0.003,0.11 z m 0.421,1.287 0.084,0.043 -0.047,0.121 -0.385,-0.138 -0.311,0.054 -0.087,-0.006 -0.092,-0.111 -0.068,-0.221 0.031,-0.154 0.13,-0.108 0.049,-0.017 0.098,0.133 0.089,0.091 0.086,0.039 0.196,0.217 0.227,0.057 z m -0.003,2.229 0.279,0.417 0.111,0.033 -0.169,0.299 -0.352,0.026 -0.415,-0.077 0.152,-0.103 -0.079,-0.116 -0.125,-0.023 -0.144,0.055 -0.066,-0.019 0.092,-0.192 0.23,-0.271 0.068,-0.021 0.062,-0.003 0.061,0.024 0.295,-0.029 z m 2.495,4.106 -0.13,0.143 -0.113,-0.016 -0.732,-0.33 0.031,-0.136 -0.03,-0.347 0.08,-0.188 0.202,-0.077 0.157,0.04 0.096,0.277 0.219,0.113 -0.153,0.095 0.267,0.209 0.106,0.217 z m 0.44,1.773 -0.148,0.322 -0.256,-0.075 -0.239,-0.233 -0.125,-0.203 0.084,-0.389 0.122,-0.068 0.128,0.022 0.065,0.38 0.369,0.244 z m 1.137,1.917 -0.099,0.164 -0.152,-0.002 -0.195,-0.116 0.037,-0.145 0.222,-0.026 0.064,0.01 0.123,0.115 z\"\n\t\t\t\tid=\"VU\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 990.83875,500.4344 -0.046,0.023 -0.052,-0.112 0.067,-0.169 0.065,-0.06 0.056,0.133 -0.09,0.185 z m -5.293,2.83 -0.159,0.019 -0.155,-0.038 -0.101,-0.162 0.046,-0.069 0.101,0.032 0.104,0.12 0.172,0.055 -0.008,0.043 z\"\n\t\t\t\tid=\"WF\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 1001.5787,500.8144 0.314,0.271 0.126,0.359 -0.136,0.343 -0.297,-0.084 -0.432,0.073 -0.144,-0.025 -0.345,-0.421 -0.24,-0.189 -0.096,-0.178 0.305,0.02 0.446,-0.118 0.499,-0.051 z m 2.469,1.668 -0.77,0.002 -0.381,-0.13 -0.135,-10e-4 -0.326,-0.272 -0.05,-0.143 0.171,-0.094 0.355,-0.049 0.714,0.207 0.108,0.184 0.164,0.02 0.128,0.08 0.033,0.129 -0.011,0.067 z\"\n\t\t\t\tid=\"WS\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 623.87975,415.8344 -1.415,0.518 -0.373,0.23 -0.339,0.284 -0.254,0.355 -0.178,0.623 0.135,0.569 -0.013,0.305 -0.365,0.202 -0.341,0.145 -0.379,0.222 -0.23,0.055 -0.188,0.176 -0.219,0.123 -0.789,0.32 -0.862,0.247 -1.37,0.296 -0.529,0.321 -0.481,0.22 -0.731,0.066 -1.004,0.305 -0.558,0.244 -0.693,0.397 -0.153,0.125 -0.122,0.292 -0.213,0.252 -0.417,0.413 -0.313,0.212 -0.209,0.011 -0.406,0.116 -0.481,0.024 -0.808,-0.145 -0.208,0.101 -0.171,0.161 -0.623,0.283 -0.633,0.565 -0.463,0.15 -0.749,0.177 -0.524,0.235 -0.352,0.094 -0.453,0.049 -0.839,-0.024 -0.795,0.085 -0.737,0.159 -0.346,0.301 -0.395,0.477 -0.645,0.197 -0.152,0.171 -0.199,0.351 -0.417,0.091 -0.378,0.059 -0.386,-0.153 -0.728,0.424 -0.275,0.07 -0.418,0.017 -0.297,0.089 -0.213,-0.025 -0.265,-0.166 -0.564,-0.201 -0.412,0.131 -0.035,-0.401 -0.683,-1.226 0.142,-1.069 0,-0.151 -0.136,-0.478 -0.407,-0.437 0.012,-0.554 -0.136,-0.396 -0.108,-0.408 0.035,-0.108 0.006,-0.098 -0.208,-0.629 -0.069,-0.127 -0.026,-0.132 0.068,-0.101 -0.002,-0.117 -0.11,-0.193 -0.117,-0.368 -0.555,-0.289 0.113,-0.271 0.108,0.095 0.146,0.081 0.03,-0.175 0.002,-0.131 -0.232,-0.819 0.344,-1.094 -0.113,-0.987 0.525,-0.399 0.132,-0.12 0.076,-0.105 0.124,-0.226 0.169,-0.073 0.06,-0.238 -0.005,-0.119 -0.109,-0.102 -0.082,-0.277 0.027,-0.352 0.027,-0.147 0.057,-0.269 0.184,-0.1 0.043,-0.08 -0.142,-0.17 0.013,-0.102 0.312,-0.285 0.123,-0.085 0.202,-0.088 0.158,10e-4 0.182,0.05 0.163,0.08 0.158,0.145 0.167,0.165 0.256,0.063 0.174,-0.016 0.142,0.073 0.12,-0.04 0.136,-0.085 0.218,0.005 0.196,-0.096 0.558,-0.046 0.538,0.029 0.562,-0.08 0.561,0.006 0.566,0.006 0.125,0.012 0.123,0.05 0.477,0.252 0.362,0.052 0.727,0.069 0.775,0.074 0.672,0.063 0.57,-0.06 0.473,-0.049 0.128,0.008 0.143,0.156 0.285,0.389 0.269,0.366 0.471,0.02 0.302,-0.138 0.332,-0.194 0.203,-0.15 0.235,-0.596 0.152,-0.386 0.349,-0.435 0.292,-0.364 0.386,-0.483 0.214,-0.267 0.422,-0.528 0.403,-0.206 0.778,-0.397 0.763,-0.391 0.497,-0.255 0.423,-0.116 0.709,-0.1 0.833,-0.118 0.833,-0.118 0.889,-0.125 0.99,-0.14 0.679,-0.096 0.865,-0.123 0.72,-0.102 0.64,-0.09 0.659,-0.093 0.124,0.294 0.124,0.294 0.125,0.294 0.124,0.294 0.124,0.294 0.124,0.294 0.124,0.293 0.125,0.293 0.124,0.293 0.124,0.293 0.124,0.293 0.125,0.293 0.124,0.292 0.124,0.292 0.124,0.292 0.124,0.292 0.122,0.285 0.2,0.095 0.119,0.27 0.17,0.385 0.171,0.384 0.17,0.384 0.168,0.385 z m -29.455,3.903 -0.088,0.064 -0.027,-0.112 0.058,-0.252 0.092,-0.073 0.062,0.187 -0.04,0.103 -0.057,0.083 z m 0.553,3.839 -0.037,0.061 -0.051,-0.013 -0.174,-0.153 0.191,-0.171 0.102,0.159 -0.031,0.117 z m -0.089,0.768 -0.186,0.088 0.127,-0.228 0.13,-0.047 0.036,0.009 -0.107,0.178 z m 30.892,3.057 0.174,0.034 0.263,-0.099 0.754,-0.013 0.909,0.318 -0.172,0.083 -0.102,0.115 -0.399,0.105 -0.398,0.245 -1.152,0.119 -0.338,-0.066 -0.278,-0.237 -0.515,-0.308 0.203,-0.197 0.044,-0.09 0.076,-0.086 0.291,-0.149 0.291,0.024 0.349,0.202 z\"\n\t\t\t\tid=\"YE\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 601.69375,499.4144 -0.177,0.024 -0.083,-0.076 -0.051,-0.18 0.052,-0.173 0.015,-0.14 -0.143,-0.243 0.14,-0.138 0.119,0.161 0.068,0.011 0.18,0.112 -0.053,0.206 0.012,0.068 -0.082,0.206 z\"\n\t\t\t\tid=\"YT\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 562.70375,527.0484 0.015,0.159 0.02,0.072 0.134,0.419 0.2,0.628 0.133,0.58 0.183,0.797 -0.006,0.445 0.045,0.172 0.164,0.215 0.201,0.37 0.068,0.209 0.067,0.157 0.212,0.298 0.165,0.452 0.14,0.599 0.12,0.288 0.045,0.142 0.054,0.258 -0.007,0.545 0.003,0.633 0.004,0.707 0.003,0.585 -0.021,0.296 0.015,0.843 -0.181,0.439 0.022,0.346 0.056,0.224 -0.074,0.035 -0.141,0.04 -0.648,-0.355 -0.632,-0.375 -0.091,-0.011 -0.133,0.039 -0.358,0.272 -0.335,0.426 -0.154,0.364 -0.247,0.376 -0.398,0.606 -0.041,0.131 -0.004,0.494 0.019,0.471 0.035,0.066 0.215,0.022 0.154,0.386 0.352,0.616 0.591,0.396 0.549,0.18 0.766,0.045 0.606,-0.013 -0.035,-0.416 0.06,-0.667 0.077,-0.448 0.085,-0.02 0.159,0.043 0.088,0.046 0.243,-0.019 0.432,0.088 0.349,-0.009 0.312,-0.009 0.527,-0.015 0.308,-0.005 -0.104,0.723 -0.402,1.135 -0.137,0.522 -0.343,1.871 -0.448,0.947 -0.251,0.392 -0.726,0.694 -0.202,0.141 -0.179,0.09 -0.318,0.08 -1.244,1.41 -0.463,0.682 -0.412,0.997 -0.409,0.549 -0.601,1.174 -0.537,0.909 -0.515,0.832 -0.891,1.148 -0.396,0.333 -0.267,0.152 -0.708,0.669 -0.997,1.08 -0.763,0.96 -1.141,1.094 -0.661,0.48 -0.992,0.947 -0.277,0.14 -1.118,0.883 -0.804,0.538 -1.301,0.625 -0.517,0.175 -1.235,-0.162 -0.515,0.086 -0.431,0.378 -0.04,0.544 -0.18,0.082 -0.272,-0.024 -0.863,-0.227 -0.468,0.043 -0.273,0.291 -0.22,0.368 -0.65,0.019 -1.158,-0.381 -1.362,-0.232 -0.315,-0.026 -0.66,0.283 -0.23,0.041 -0.961,-0.061 -0.533,-0.178 -0.51,-0.001 -0.391,0.147 -0.474,0.052 -1.281,1.025 -0.662,10e-4 -0.571,0.119 -0.283,-0.004 -0.53,-0.144 -0.197,0.01 -0.302,0.064 -0.302,0.181 -0.688,0.078 -0.267,0.155 -1.162,0.941 -0.265,-0.038 -0.214,-0.061 -0.604,-0.012 -0.683,-0.501 -0.262,0.032 0.07,-0.15 0.021,-0.266 -0.145,-0.188 -0.097,-0.084 -0.268,0.016 -0.143,-0.226 -0.41,-0.021 -0.142,0.057 -0.197,0.012 -0.017,-0.229 0.015,-0.144 -0.012,-0.221 -0.049,-0.271 -0.159,-0.086 -0.122,-0.036 -0.29,0.019 -0.2,0.029 -0.094,0.079 -0.107,0.199 -10e-4,0.604 -0.144,-0.173 -0.164,-0.362 -0.053,-0.386 0.059,-0.455 0.311,-0.173 -0.024,-0.307 -0.066,-0.266 -0.347,-0.68 -0.135,-0.311 -0.294,-0.21 -0.229,-0.506 -0.23,-0.183 -0.096,-0.354 -0.225,-0.282 -0.076,-0.446 0.124,-0.255 0.196,-0.14 0.2,0.221 0.249,-0.086 0.353,-0.322 0.209,-0.488 0.013,-0.779 -0.054,-0.485 -0.28,-1.25 -0.132,-0.287 -0.632,-0.891 -0.733,-1.189 -0.927,-1.865 -0.443,-1.116 -0.671,-2.24 -0.591,-1.261 -0.726,-1.172 -0.093,-0.076 0.111,-0.142 0.391,-0.27 0.177,-0.073 0.095,0.034 0.092,-0.074 0.089,-0.183 0.02,-0.171 0.044,-0.242 0.087,-0.145 0.096,-0.288 0.163,-0.185 0.345,-0.123 0.261,0.163 0.109,0.159 0.045,0.21 0.116,0.102 0.186,-0.007 0.131,0.129 0.076,0.266 -0.015,0.192 -0.106,0.12 0.015,0.157 0.135,0.195 0.056,0.186 0.09,0.246 0.474,0.143 0.232,0.08 0.399,0.027 0.377,0.11 0.355,0.192 0.584,0.046 0.813,-0.099 0.669,0.044 0.525,0.188 0.381,0.035 0.236,-0.119 0.103,-0.171 -0.032,-0.224 0.117,-0.141 0.265,-0.06 0.212,-0.168 0.16,-0.277 0.369,-0.225 0.579,-0.173 0.288,0.006 0,-0.447 0,-1.408 0,-1.401 0,-1.396 0,-1.391 0,-1.385 0,-1.379 0,-1.375 0,-1.293 0.135,0.093 0.889,0.686 0.24,0.361 0.119,0.229 0.382,0.833 0.284,0.749 0.231,0.566 0.018,0.259 0.033,0.253 0.033,0.125 -0.021,0.138 -0.163,0.309 -0.166,0.236 -0.2,0.323 -0.019,0.427 0.06,0.504 0.123,0.251 0.154,0.083 0.368,-0.125 0.233,0.039 0.329,0.096 1.078,-0.059 0.13,0.031 0.407,0.036 0.136,-0.042 0.122,-0.107 0.141,-0.302 0.126,-0.1 0.229,-0.051 0.271,-0.082 0.224,-0.174 0.355,-0.597 0.711,-0.529 0.218,-0.126 0.138,-0.142 0.12,-0.191 0.249,-0.664 0.188,-0.552 0.064,-0.26 0.168,-0.424 0.203,-0.271 0.199,-0.143 0.1,-0.036 0.256,-0.073 0.329,-0.068 0.346,0.076 0.371,0.164 0.419,0.276 0.429,0.342 0.197,0.174 0.213,0.078 0.379,0.027 0.248,-0.006 0.386,0.34 0.195,0.021 0.437,0.103 0.54,0.106 0.339,-0.012 0.364,-0.184 0.262,-0.008 0.339,0.015 0.373,-0.05 0.273,-0.079 0.209,-0.16 0.184,-0.175 0.212,-0.521 0.122,-0.418 0.188,-0.481 0.231,-0.651 0.083,-0.453 0.084,-0.125 0.336,-0.138 0.277,-0.095 0.748,-0.178 0.153,-0.095 0.14,-0.213 0.326,-0.361 0.402,-0.301 0.208,-0.172 0.38,-1.458 0.046,-0.18 0.276,-0.386 0.171,-0.163 0.11,-0.003 0.156,-0.102 0.203,-0.2 0.241,-0.124 0.279,-0.046 0.181,-0.133 0.083,-0.218 0.144,-0.106 0.205,0.006 0.117,-0.069 0.028,-0.145 0.124,-0.125 0.219,-0.103 0.114,-0.123 0.011,-0.141 0.261,-0.343 0.511,-0.545 0.481,-0.303 0.452,-0.062 0.429,-0.113 0.405,-0.165 0.297,-0.259 0.19,-0.352 0.327,-0.197 0.659,-0.058 0.036,-0.003 0.802,-0.14 0.671,0.114 0.809,0.322 0.757,0.114 0.706,-0.094 0.574,-0.021 0.441,0.052 0.348,0.112 0.25,0.174 z m -7.159,23.992 0.461,-0.205 0.208,-0.125 0.15,-0.103 0.194,-0.156 0.067,-0.379 0.057,-0.322 0.148,-0.159 0.152,-0.105 0.125,-0.167 0.155,-0.401 0.106,-0.392 0.011,-0.16 -0.055,-0.164 -0.099,-0.175 -0.097,-0.236 -0.117,-0.037 -0.229,-0.132 -0.337,-0.266 -0.292,-0.231 -0.274,-0.335 -0.112,-0.055 -0.265,-0.227 -0.114,-0.13 -0.08,-0.156 -0.075,-0.051 -0.119,0.04 -0.313,0.069 -0.671,0.272 -0.416,0.25 -0.35,0.298 -0.363,0.114 -0.266,0.099 -0.211,0.341 -0.197,0.318 -0.177,0.287 -0.102,0.129 -0.092,0.083 -0.093,0.184 -0.191,0.306 -0.175,0.205 -0.244,0.112 -0.315,0.145 -0.107,0.084 -0.015,0.124 0.112,0.288 0.108,0.278 0.177,0.326 0.13,0.239 0.205,0.292 0.12,0.171 -0.016,0.287 0.041,0.103 0.068,0.119 0.057,0.03 0.064,0.043 0.17,0.083 0.041,0.055 0.119,0.098 0.114,0.179 0.216,0.246 0.243,0.187 0.417,0.077 0.326,0.06 0.108,-0.037 0.111,-0.151 0.091,-0.192 0.029,-0.244 0.104,-0.13 0.391,-0.619 0.215,-0.229 0.132,-0.017 0.169,-0.044 0.216,-0.019 0.162,0.019 0.035,-0.007 0.254,-0.082 z m 25.595,60.671 -0.121,0.076 -0.567,-0.067 -0.061,-0.157 0.167,-0.242 0.099,-0.102 0.293,0.055 0.234,0.196 0.042,0.066 -0.086,0.175 z\"\n\t\t\t\tid=\"ZA\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 567.28475,489.2674 0.01,0.075 0.077,0.142 0.081,0.102 0.007,0.15 0.038,0.14 0.118,0.034 0.097,0.009 0.09,-0.1 0.122,0.002 0.134,0.064 0.048,0.161 0.105,0.216 0.169,0.148 0.114,0.143 -0.039,0.26 -0.072,0.237 0.23,0.235 0.299,0.223 0.081,0.099 0.024,0.332 0.046,0.112 0.203,0.276 0.099,0.183 -0.007,0.106 -0.545,0.547 -0.173,0.053 -0.164,0.031 -0.146,0.112 -0.088,0.117 0.032,0.062 0.058,0.187 0.127,0.296 0.115,0.207 -0.096,0.259 -0.216,0.44 -0.1,0.039 -0.018,0.333 0.066,0.122 0.108,0.096 0.044,0.226 0.003,0.312 -0.012,0.251 -0.136,0.639 0.246,0.559 0.084,0.061 0.341,0.004 0.058,0.047 -0.081,0.159 -0.148,0.164 -0.091,0.083 -0.434,0.191 -0.623,0.211 -0.13,0.202 -0.083,0.295 0.07,0.173 0.082,0.099 -0.026,0.257 -0.055,0.272 0.019,0.214 -0.028,0.189 -0.082,0.093 -0.109,0.285 -0.134,0.287 -0.106,0.131 -0.156,0.137 -0.247,0.114 0.004,0.058 0.28,0.132 0.072,0.092 0.026,0.063 -0.06,0.06 -0.057,0.085 0.129,0.088 0.158,0.074 0.149,0.191 0.133,0.267 0.038,0.094 0.031,0.037 0.048,0.004 0.093,-0.04 0.171,-0.146 0.125,-0.052 0.151,0.208 -0.603,0.206 -0.316,0.108 -0.901,0.308 -0.787,0.269 -0.205,0.051 -0.408,0.131 -0.203,0.081 -0.711,0.235 -0.297,0.117 -0.239,0.117 -0.587,0.174 -0.555,0.164 -0.606,0.17 -0.678,0.189 -0.381,0.137 -0.257,0.118 -0.601,0.24 -0.028,0.058 0.008,0.163 0.077,0.336 0.15,0.305 0.126,0.176 0.082,0.452 0.046,0.397 -0.408,10e-4 -0.718,0.002 -0.745,10e-4 -0.68,0.152 -0.559,0.231 -0.667,0.361 -0.217,0.142 -0.168,0.109 -0.106,0.141 -0.052,0.308 0,0.476 -0.068,0.342 -0.202,0.315 0,-10e-4 -1.013,0.381 -0.662,0.311 -0.65,0.369 -0.493,0.479 -0.336,0.589 -0.558,0.73 -0.568,0.633 -0.603,0.674 -0.676,0.244 -0.568,-0.055 -0.685,-0.273 -0.544,-0.052 -0.403,0.17 -0.372,-0.053 -0.342,-0.274 -0.286,-0.1 -0.232,0.074 -0.296,-0.013 -0.541,-0.15 -0.468,-0.467 -0.253,-0.192 -0.195,-0.074 -0.56,-0.075 -1.285,-0.107 -0.134,0.024 -0.534,0.092 -0.667,0.115 -0.574,0.115 -0.601,0.12 -0.559,-0.486 -0.633,-0.551 -0.657,-0.615 -0.493,-0.481 -0.244,-0.277 -0.433,-0.366 -0.312,-0.179 -0.121,-0.09 -0.31,-0.972 -0.169,-0.892 0,-0.671 -0.001,-0.929 0,-0.928 0,-0.926 -10e-4,-0.925 0,-0.924 0,-0.921 -10e-4,-0.921 0,-0.92 0,-0.447 0.647,0 0.734,0 0.767,0 0.834,0 0.834,0 0.834,0 0.582,0 0.153,-0.007 0.184,-0.028 0.013,-0.091 -0.24,-0.451 0.012,-0.16 0.064,-0.306 0.099,-0.264 0.131,-0.347 0.014,-0.204 -0.105,-0.665 0.01,-0.37 0.03,-0.385 0.03,-0.364 -0.036,-0.254 0.044,-0.138 0.079,-0.198 0.041,-0.224 0.049,-0.096 -0.016,-0.089 -0.044,-0.166 -0.044,-0.372 -0.061,-0.517 -0.061,-0.372 0.102,0.021 0.212,0.035 0.103,0.182 0.06,0.2 0.143,0.011 0.372,0.118 0.129,0.165 0.085,0.357 -0.051,0.183 -0.12,0.147 0.12,0.13 0.249,0.087 0.146,-0.026 0.42,-0.243 0.168,-0.043 0.219,-0.048 0.198,-0.062 0.559,-0.111 0.305,-0.049 0.172,-0.087 0.12,0 0.086,0.07 -0.077,0.252 -0.026,0.226 0.107,0.423 0.08,0.197 0.18,0.144 0.131,0.075 0.145,0.153 0.301,-0.026 0.662,0.216 0.201,0.1 0.279,0.1 0.198,0.037 0.683,0.076 0.252,0.051 0.468,0.068 0.374,0.012 0.265,-0.031 0.186,-0.062 0.114,-0.068 0.052,-0.059 0.077,-0.211 0.139,-0.458 0.055,-0.137 0.138,-0.063 0.179,-0.041 0.105,0.073 0.117,0.508 0.521,0.459 0.178,0.386 0.13,0.33 0.113,0.09 0.198,0.113 0.316,0.04 0.282,0.012 0.594,0.238 0.472,0.189 0.338,0.136 0.155,0.103 0.108,0.169 0.064,0.131 0.104,0.34 0.111,0.269 0.181,0.051 0.162,0.021 0.16,0.184 0.121,0.161 0.24,0.394 0.177,0.272 0.058,0.265 0.201,0.177 0.274,0.075 0.253,0.01 0.146,-0.079 0.359,-0.138 0.28,-0.157 0.204,-0.055 0.121,0.034 0.092,0.109 0.049,0.213 0.012,0.119 0.199,0.113 0.147,-0.045 0.057,-0.131 0.003,-0.065 -10e-4,-0.58 0,-0.502 -10e-4,-0.472 0,-0.575 -10e-4,-0.501 0,-0.412 -10e-4,-0.43 -0.128,0.024 -0.161,0.098 -0.371,0.012 -0.145,0.073 -0.045,0.111 0.028,0.144 0.008,0.196 -0.055,0.092 -0.162,0.037 -0.236,-0.076 -0.427,-0.098 -0.356,-0.061 -0.256,-0.26 -0.346,-0.392 -0.227,-0.197 -0.546,-0.409 -0.093,-0.082 -0.166,-0.191 -0.142,-0.324 -0.07,-0.215 -0.066,-0.16 -0.073,-0.238 0.132,-0.366 0.185,-0.696 0.134,-0.501 0.074,-0.371 0.265,-0.378 0.019,-0.338 -0.107,-0.433 0.027,-0.239 0.018,-0.607 0.015,-0.51 0.004,-0.248 -0.073,-0.431 -0.179,-0.477 -0.394,-0.664 0.002,-0.142 0.234,-0.157 0.371,-0.274 0.182,-0.163 0.218,-0.231 0.097,-0.118 0.214,-0.296 0.135,-0.241 0.047,-0.311 -0.102,-0.296 0.208,-0.058 0.683,-0.104 0.752,-0.115 0.793,-0.122 0.8,-0.122 0.775,-0.119 0.703,-0.107 0.486,-0.075 0.072,0.203 0.152,0.338 0.171,0.248 0.215,0.218 0.182,0.132 0.121,0.04 0.77,-0.014 0.276,0.132 0.241,0.168 0.06,0.26 0.158,0.163 0.171,0.128 0.074,0.016 0.126,-0.031 0.206,-0.003 0.191,0.056 0.091,0.057 0.009,0.218 0.058,0.097 0.26,0.038 0.265,0.017 0.256,0.148 0.276,0.026 0.32,0.061 0.152,0.159 0.339,0.163 0.416,0.146 0.3,0.165 z\"\n\t\t\t\tid=\"ZM\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"m 562.70375,527.0484 -0.254,-0.172 -0.347,-0.112 -0.442,-0.052 -0.573,0.021 -0.706,0.095 -0.757,-0.115 -0.809,-0.322 -0.671,-0.114 -0.802,0.14 -0.036,0.003 -0.138,-0.109 -0.22,-0.235 -0.365,-0.042 -0.099,-0.054 -0.082,-0.088 -0.054,-0.112 -0.021,-0.125 0.06,-0.386 -0.033,-0.043 -0.097,-0.047 -0.201,-0.046 -0.481,-0.175 -0.606,-0.17 -0.983,-0.186 -0.382,-0.048 -0.089,-0.057 -0.11,-0.142 -0.189,-0.443 -0.177,-0.292 -0.423,-0.451 -0.067,-0.139 0.021,-0.358 0.031,-0.288 0.045,-0.244 -0.02,-0.229 -0.006,-0.284 0.013,-0.19 -0.057,-0.082 -0.153,-0.058 -0.437,-0.026 -0.528,0.011 -0.017,-0.288 -0.051,-0.446 -0.098,-0.256 -0.122,-0.133 -0.243,-0.139 -0.491,-0.19 -0.669,-0.289 -0.572,-0.428 -0.655,-0.531 -0.205,-0.092 -0.242,-0.498 -0.368,-0.852 0.024,-0.283 -0.056,-0.139 -0.358,-0.417 -0.079,-0.217 -0.063,-0.219 -0.569,-0.61 -0.194,-0.266 -0.148,-0.342 -0.147,-0.273 -0.124,-0.11 -0.162,-0.185 -0.112,-0.212 -0.052,-0.158 0.043,-0.211 0.055,-0.145 0.541,0.15 0.296,0.013 0.232,-0.074 0.286,0.1 0.342,0.274 0.372,0.053 0.403,-0.17 0.544,0.052 0.685,0.273 0.568,0.055 0.676,-0.244 0.603,-0.674 0.568,-0.633 0.558,-0.73 0.336,-0.589 0.493,-0.479 0.65,-0.369 0.662,-0.311 1.013,-0.381 0,10e-4 0.202,-0.315 0.068,-0.342 0,-0.476 0.052,-0.308 0.106,-0.141 0.168,-0.109 0.217,-0.142 0.667,-0.361 0.559,-0.231 0.68,-0.152 0.745,-10e-4 0.718,-0.002 0.408,-10e-4 0.006,0.457 0.031,0.515 0.08,0.049 0.54,0.011 0.866,0.037 0.835,0.034 0.533,0.374 0.179,0.08 0.554,0.1 0.708,0.623 0.852,0.058 0.586,0.195 0.516,0.214 0.297,0.257 0.192,0.058 0.26,0.019 0.126,0.024 -0.027,0.185 -0.174,0.314 0.023,0.45 0.239,0.624 0.032,0.544 -0.073,0.959 0.002,0.931 0.025,0.333 0.039,0.22 0.051,0.121 -0.01,0.138 -0.142,0.392 -0.114,0.412 -0.004,0.165 -0.044,0.117 -0.085,0.103 -0.372,0.191 -0.063,0.118 10e-4,0.214 0.047,0.18 0.14,0.066 0.168,0.102 0.066,0.134 10e-4,0.142 -0.054,0.263 -0.15,0.435 0.15,0.502 0.167,0.326 0.231,0.376 0.096,0.233 -0.005,0.167 -0.035,0.163 -0.345,0.69 -0.249,0.43 -0.304,0.46 -0.402,0.289 -0.104,0.139 -0.041,0.158 0.014,0.346 -0.018,0.363 -0.344,0.557 0.213,0.48 -0.048,0.045 -0.116,0.068 -0.495,0.541 -0.501,0.549 -0.366,0.401 -0.416,0.456 -0.466,0.512 -0.399,0.439 z\"\n\t\t\t\tid=\"ZW\"\n\t\t\t/>\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\nimport { CitySearch } from \"../components/CitySearch\";\nimport { GeolocationSearch } from \"../components/GeolocationSearch\";\nimport \"./splashPage.scss\";\nimport { World } from \"../assets/icons/World\";\n\nexport const SplashPage = () => {\n\treturn (\n\t\t<div className=\"splash-page\">\n\t\t\t<div className=\"splash-page_background\">\n\t\t\t\t<World />\n\t\t\t</div>\n\t\t\t<div className=\"splash-page_context\">\n\t\t\t\t<span>Enter the name of your city</span>\n\t\t\t\t<CitySearch />\n\t\t\t\t<span>or</span>\n\t\t\t\t<span>get the weather forecast using</span>\n\t\t\t\t<GeolocationSearch />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { useState, useEffect } from \"react\";\n\nconst STORAGE_KEY = \"City\";\n\nexport const useLocalStorage = (initialValue: Array<string>) => {\n\tconst getTasks = () => {\n\t\tconst storage = localStorage.getItem(STORAGE_KEY);\n\t\tif (storage) {\n\t\t\treturn JSON.parse(storage);\n\t\t}\n\t\treturn initialValue;\n\t};\n\tconst [value, setValue] = useState(getTasks);\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(STORAGE_KEY, JSON.stringify(value));\n\t}, [value]);\n\treturn [value, setValue];\n};\n","/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}","declare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\nconst $$observable = /* #__PURE__ */(() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\nexport default $$observable;","/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nconst randomString = () => Math.random().toString(36).substring(7).split('').join('.');\nconst ActionTypes = {\n  INIT: `@@redux/INIT${/* #__PURE__ */randomString()}`,\n  REPLACE: `@@redux/REPLACE${/* #__PURE__ */randomString()}`,\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\n};\nexport default ActionTypes;","/**\n * @param obj The object to inspect.\n * @returns True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj: any): obj is object {\n  if (typeof obj !== 'object' || obj === null) return false;\n  let proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(obj) === proto || Object.getPrototypeOf(obj) === null;\n}","import { formatProdErrorMessage as _formatProdErrorMessage13 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage12 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage11 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage10 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage9 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage8 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage7 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage6 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport $$observable from './utils/symbol-observable';\nimport { Store, StoreEnhancer, Dispatch, Observer, ListenerCallback, UnknownIfNonSpecific } from './types/store';\nimport { Action } from './types/actions';\nimport { Reducer } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport { kindOf } from './utils/kindOf';\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(2) : `Expected the root reducer to be a function. Instead, received: '${kindOf(reducer)}'`);\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = (preloadedState as StoreEnhancer<Ext, StateExt>);\n    preloadedState = undefined;\n  }\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(1) : `Expected the enhancer to be a function. Instead, received: '${kindOf(enhancer)}'`);\n    }\n    return enhancer(createStore)(reducer, (preloadedState as PreloadedState | undefined));\n  }\n  let currentReducer = reducer;\n  let currentState: S | PreloadedState | undefined = (preloadedState as PreloadedState | undefined);\n  let currentListeners: Map<number, ListenerCallback> | null = new Map();\n  let nextListeners = currentListeners;\n  let listenerIdCounter = 0;\n  let isDispatching = false;\n\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = new Map();\n      currentListeners.forEach((listener, key) => {\n        nextListeners.set(key, listener);\n      });\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns The current state tree of your application.\n   */\n  function getState(): S {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n    return (currentState as S);\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param listener A callback to be invoked on every dispatch.\n   * @returns A function to remove this change listener.\n   */\n  function subscribe(listener: () => void) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(4) : `Expected the listener to be a function. Instead, received: '${kindOf(listener)}'`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n    let isSubscribed = true;\n    ensureCanMutateNextListeners();\n    const listenerId = listenerIdCounter++;\n    nextListeners.set(listenerId, listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      nextListeners.delete(listenerId);\n      currentListeners = null;\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action: A) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(7) : `Actions must be plain objects. Instead, the actual type was: '${kindOf(action)}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`);\n    }\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage9(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n    if (typeof action.type !== 'string') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage10(17) : `Action \"type\" property must be a string. Instead, the actual type was: '${kindOf(action.type)}'. Value was: '${action.type}' (stringified)`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage11(9) : 'Reducers may not dispatch actions.');\n    }\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n    const listeners = currentListeners = nextListeners;\n    listeners.forEach(listener => {\n      listener();\n    });\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param nextReducer The reducer for the store to use instead.\n   */\n  function replaceReducer(nextReducer: Reducer<S, A>): void {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage12(10) : `Expected the nextReducer to be a function. Instead, received: '${kindOf(nextReducer)}`);\n    }\n    currentReducer = ((nextReducer as unknown) as Reducer<S, A, PreloadedState>);\n\n    // This action has a similar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n    dispatch(({\n      type: ActionTypes.REPLACE\n    } as A));\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    const outerSubscribe = subscribe;\n    return {\n      /**\n       * The minimal observable subscription method.\n       * @param observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe(observer: unknown) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage13(11) : `Expected the observer to be an object. Instead, received: '${kindOf(observer)}'`);\n        }\n        function observeState() {\n          const observerAsObserver = (observer as Observer<S>);\n          if (observerAsObserver.next) {\n            observerAsObserver.next(getState());\n          }\n        }\n        observeState();\n        const unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe\n        };\n      },\n      [$$observable]() {\n        return this;\n      }\n    };\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch(({\n    type: ActionTypes.INIT\n  } as A));\n  const store = (({\n    dispatch: (dispatch as Dispatch<A>),\n    subscribe,\n    getState,\n    replaceReducer,\n    [$$observable]: observable\n  } as unknown) as Store<S, A, StateExt> & Ext);\n  return store;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  return createStore(reducer, (preloadedState as any), enhancer);\n}","import { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport { Action } from './types/actions';\nimport { ActionFromReducersMapObject, PreloadedStateShapeFromReducersMapObject, Reducer, StateFromReducersMapObject } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport warning from './utils/warning';\nimport { kindOf } from './utils/kindOf';\nfunction getUnexpectedStateShapeWarningMessage(inputState: object, reducers: {\n  [key: string]: Reducer<any, any, any>;\n}, action: Action, unexpectedKeyCache: {\n  [key: string]: true;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n  if (!isPlainObject(inputState)) {\n    return `The ${argumentName} has unexpected type of \"${kindOf(inputState)}\". Expected argument to be an object with the following ` + `keys: \"${reducerKeys.join('\", \"')}\"`;\n  }\n  const unexpectedKeys = Object.keys(inputState).filter(key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]);\n  unexpectedKeys.forEach(key => {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n  if (unexpectedKeys.length > 0) {\n    return `Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` + `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` + `Expected to find one of the known reducer keys instead: ` + `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`;\n  }\n}\nfunction assertReducerShape(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  Object.keys(reducers).forEach(key => {\n    const reducer = reducers[key];\n    const initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(12) : `The slice reducer for key \"${key}\" returned undefined during initialization. ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n    }\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(13) : `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` + `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` + `namespace. They are considered private. Instead, you must return the ` + `current state for any unknown actions, unless it is undefined, ` + `in which case you must return the initial state, regardless of the ` + `action type. The initial state may not be undefined, but can be null.`);\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @template S Combined state object type.\n *\n * @param reducers An object whose values correspond to different reducer\n *   functions that need to be combined into one. One handy way to obtain it\n *   is to use `import * as reducers` syntax. The reducers may never\n *   return undefined for any action. Instead, they should return their\n *   initial state if the state passed to them was undefined, and the current\n *   state for any unrecognized action.\n *\n * @returns A reducer function that invokes every reducer inside the passed\n *   object, and builds a state object with the same shape.\n */\nexport default function combineReducers<M>(reducers: M): M[keyof M] extends Reducer<any, any, any> | undefined ? Reducer<StateFromReducersMapObject<M>, ActionFromReducersMapObject<M>, Partial<PreloadedStateShapeFromReducersMapObject<M>>> : never;\nexport default function combineReducers(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: {\n    [key: string]: Reducer<any, any, any>;\n  } = {};\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(`No reducer provided for key \"${key}\"`);\n      }\n    }\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  // This is used to make sure we don't warn about the same\n  // keys multiple times.\n  let unexpectedKeyCache: {\n    [key: string]: true;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n  let shapeAssertionError: unknown;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n  return function combination(state: StateFromReducersMapObject<typeof reducers> = {}, action: Action) {\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n    let hasChanged = false;\n    const nextState: StateFromReducersMapObject<typeof reducers> = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        const actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(14) : `When called with an action of type ${actionType ? `\"${String(actionType)}\"` : '(unknown type)'}, the slice reducer for key \"${key}\" returned undefined. ` + `To ignore an action, you must explicitly return the previous state. ` + `If you want this reducer to hold no value, you can return null instead of undefined.`);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}","type Func<T extends any[], R> = (...a: T) => R;\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for the\n * resulting composite function.\n *\n * @param funcs The functions to compose.\n * @returns A function obtained by composing the argument functions from right\n *   to left. For example, `compose(f, g, h)` is identical to doing\n *   `(...args) => f(g(h(...args)))`.\n */\nexport default function compose(): <R>(a: R) => R;\nexport default function compose<F extends Function>(f: F): F;\n\n/* two functions */\nexport default function compose<A, T extends any[], R>(f1: (a: A) => R, f2: Func<T, A>): Func<T, R>;\n\n/* three functions */\nexport default function compose<A, B, T extends any[], R>(f1: (b: B) => R, f2: (a: A) => B, f3: Func<T, A>): Func<T, R>;\n\n/* four functions */\nexport default function compose<A, B, C, T extends any[], R>(f1: (c: C) => R, f2: (b: B) => C, f3: (a: A) => B, f4: Func<T, A>): Func<T, R>;\n\n/* rest */\nexport default function compose<R>(f1: (a: any) => R, ...funcs: Function[]): (...args: any[]) => R;\nexport default function compose<R>(...funcs: Function[]): (...args: any[]) => R;\nexport default function compose(...funcs: Function[]) {\n  if (funcs.length === 0) {\n    // infer the argument type so it is usable in inference down the line\n    return <T,>(arg: T) => arg;\n  }\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n  return funcs.reduce((a, b) => (...args: any) => a(b(...args)));\n}","import { Action } from '../types/actions';\nimport isPlainObject from './isPlainObject';\nexport default function isAction(action: unknown): action is Action<string> {\n  return isPlainObject(action) && 'type' in action && typeof (action as Record<'type', unknown>).type === 'string';\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n","export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tObject.entries(obj).forEach(([key, value]) => {\n\t\t\titer(key, value, obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: boolean) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tif (!strict && isPlainObject(base)) {\n\t\tif (!getPrototypeOf(base)) {\n\t\t\tconst obj = Object.create(null)\n\t\t\treturn Object.assign(obj, base)\n\t\t}\n\t\treturn {...base}\n\t}\n\n\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = Reflect.ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (_key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: boolean = false\n\n\tconstructor(config?: {autoFreeze?: boolean; useStrictShallowCopy?: boolean}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: boolean) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n","import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tProxyArrayState,\n\tMapState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tgetPrototypeOf,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tArchType,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING,\n\terrors\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst errorOffset = 16\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\terrors.push(\n\t\t\t'Sets cannot have \"replace\" patches.',\n\t\t\tfunction(op: string) {\n\t\t\t\treturn \"Unsupported patch operation: \" + op\n\t\t\t},\n\t\t\tfunction(path: string) {\n\t\t\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t\t\t},\n\t\t\t\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n\t\t)\n\t}\n\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ArchType.Object:\n\t\t\tcase ArchType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ArchType.Array:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ArchType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tfor (let i = copy_.length - 1; base_.length <= i; --i) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tinversePatches.push({\n\t\t\t\top: REMOVE,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === ArchType.Object || parentType === ArchType.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\")\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(errorOffset + 2, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\tdie(errorOffset)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(errorOffset + 1, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport type {\n  DevModeChecks,\n  Selector,\n  SelectorArray,\n  DevModeChecksExecutionInfo\n} from './types'\n\nexport const NOT_FOUND = 'NOT_FOUND'\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\n\n/**\n * Assert that the provided value is a function. If the assertion fails,\n * a `TypeError` is thrown with an optional custom error message.\n *\n * @param func - The value to be checked.\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\n * @throws A `TypeError` if the assertion fails.\n */\nexport function assertIsFunction<FunctionType extends Function>(\n  func: unknown,\n  errorMessage = `expected a function, instead received ${typeof func}`\n): asserts func is FunctionType {\n  if (typeof func !== 'function') {\n    throw new TypeError(errorMessage)\n  }\n}\n\n/**\n * Assert that the provided value is an object. If the assertion fails,\n * a `TypeError` is thrown with an optional custom error message.\n *\n * @param object - The value to be checked.\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\n * @throws A `TypeError` if the assertion fails.\n */\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\n  object: unknown,\n  errorMessage = `expected an object, instead received ${typeof object}`\n): asserts object is ObjectType {\n  if (typeof object !== 'object') {\n    throw new TypeError(errorMessage)\n  }\n}\n\n/**\n * Assert that the provided array is an array of functions. If the assertion fails,\n * a `TypeError` is thrown with an optional custom error message.\n *\n * @param array - The array to be checked.\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\n * @throws A `TypeError` if the assertion fails.\n */\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\n  array: unknown[],\n  errorMessage = `expected all items to be functions, instead received the following types: `\n): asserts array is FunctionType[] {\n  if (\n    !array.every((item): item is FunctionType => typeof item === 'function')\n  ) {\n    const itemTypes = array\n      .map(item =>\n        typeof item === 'function'\n          ? `function ${item.name || 'unnamed'}()`\n          : typeof item\n      )\n      .join(', ')\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\n  }\n}\n\n/**\n * Ensure that the input is an array. If it's already an array, it's returned as is.\n * If it's not an array, it will be wrapped in a new array.\n *\n * @param item - The item to be checked.\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\n */\nexport const ensureIsArray = (item: unknown) => {\n  return Array.isArray(item) ? item : [item]\n}\n\n/**\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\n *\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\n * @returns An array of \"input selectors\" / \"dependencies\".\n * @throws A `TypeError` if any of the input selectors is not function.\n */\nexport function getDependencies(createSelectorArgs: unknown[]) {\n  const dependencies = Array.isArray(createSelectorArgs[0])\n    ? createSelectorArgs[0]\n    : createSelectorArgs\n\n  assertIsArrayOfFunctions<Selector>(\n    dependencies,\n    `createSelector expects all input-selectors to be functions, but received the following types: `\n  )\n\n  return dependencies as SelectorArray\n}\n\n/**\n * Runs each input selector and returns their collective results as an array.\n *\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\n * @returns An array of input selector results.\n */\nexport function collectInputSelectorResults(\n  dependencies: SelectorArray,\n  inputSelectorArgs: unknown[] | IArguments\n) {\n  const inputSelectorResults = []\n  const { length } = dependencies\n  for (let i = 0; i < length; i++) {\n    // @ts-ignore\n    // apply arguments instead of spreading and mutate a local list of params for performance.\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\n  }\n  return inputSelectorResults\n}\n\n/**\n * Retrieves execution information for development mode checks.\n *\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\n * @param firstRun - Indicates whether it is the first time the selector has run.\n * @returns  An object containing the execution information for each development mode check.\n */\nexport const getDevModeChecksExecutionInfo = (\n  firstRun: boolean,\n  devModeChecks: Partial<DevModeChecks>\n) => {\n  const { identityFunctionCheck, inputStabilityCheck } = {\n    ...globalDevModeChecks,\n    ...devModeChecks\n  }\n  return {\n    identityFunctionCheck: {\n      shouldRun:\n        identityFunctionCheck === 'always' ||\n        (identityFunctionCheck === 'once' && firstRun),\n      run: runIdentityFunctionCheck\n    },\n    inputStabilityCheck: {\n      shouldRun:\n        inputStabilityCheck === 'always' ||\n        (inputStabilityCheck === 'once' && firstRun),\n      run: runInputStabilityCheck\n    }\n  } satisfies DevModeChecksExecutionInfo\n}\n","// Original source:\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\n\nimport type { Node, Tag } from './tracking'\nimport {\n  consumeCollection,\n  consumeTag,\n  createTag,\n  dirtyCollection,\n  dirtyTag\n} from './tracking'\n\nexport const REDUX_PROXY_LABEL = Symbol()\n\nlet nextId = 0\n\nconst proto = Object.getPrototypeOf({})\n\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\n  tag = createTag()\n  tags = {} as Record<string, Tag>\n  children = {} as Record<string, Node>\n  collectionTag = null\n  id = nextId++\n\n  constructor(public value: T) {\n    this.value = value\n    this.tag.value = value\n  }\n}\n\nconst objectProxyHandler = {\n  get(node: Node, key: string | symbol): unknown {\n    function calculateResult() {\n      const { value } = node\n\n      const childValue = Reflect.get(value, key)\n\n      if (typeof key === 'symbol') {\n        return childValue\n      }\n\n      if (key in proto) {\n        return childValue\n      }\n\n      if (typeof childValue === 'object' && childValue !== null) {\n        let childNode = node.children[key]\n\n        if (childNode === undefined) {\n          childNode = node.children[key] = createNode(childValue)\n        }\n\n        if (childNode.tag) {\n          consumeTag(childNode.tag)\n        }\n\n        return childNode.proxy\n      } else {\n        let tag = node.tags[key]\n\n        if (tag === undefined) {\n          tag = node.tags[key] = createTag()\n          tag.value = childValue\n        }\n\n        consumeTag(tag)\n\n        return childValue\n      }\n    }\n    const res = calculateResult()\n    return res\n  },\n\n  ownKeys(node: Node): ArrayLike<string | symbol> {\n    consumeCollection(node)\n    return Reflect.ownKeys(node.value)\n  },\n\n  getOwnPropertyDescriptor(\n    node: Node,\n    prop: string | symbol\n  ): PropertyDescriptor | undefined {\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\n  },\n\n  has(node: Node, prop: string | symbol): boolean {\n    return Reflect.has(node.value, prop)\n  }\n}\n\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\n  tag = createTag()\n  tags = {}\n  children = {}\n  collectionTag = null\n  id = nextId++\n\n  constructor(public value: T) {\n    this.value = value\n    this.tag.value = value\n  }\n}\n\nconst arrayProxyHandler = {\n  get([node]: [Node], key: string | symbol): unknown {\n    if (key === 'length') {\n      consumeCollection(node)\n    }\n\n    return objectProxyHandler.get(node, key)\n  },\n\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\n    return objectProxyHandler.ownKeys(node)\n  },\n\n  getOwnPropertyDescriptor(\n    [node]: [Node],\n    prop: string | symbol\n  ): PropertyDescriptor | undefined {\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\n  },\n\n  has([node]: [Node], prop: string | symbol): boolean {\n    return objectProxyHandler.has(node, prop)\n  }\n}\n\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\n  value: T\n): Node<T> {\n  if (Array.isArray(value)) {\n    return new ArrayTreeNode(value)\n  }\n\n  return new ObjectTreeNode(value) as Node<T>\n}\n\nconst keysMap = new WeakMap<\n  Array<unknown> | Record<string, unknown>,\n  Set<string>\n>()\n\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\n  node: Node<T>,\n  newValue: T\n): void {\n  const { value, tags, children } = node\n\n  node.value = newValue\n\n  if (\n    Array.isArray(value) &&\n    Array.isArray(newValue) &&\n    value.length !== newValue.length\n  ) {\n    dirtyCollection(node)\n  } else {\n    if (value !== newValue) {\n      let oldKeysSize = 0\n      let newKeysSize = 0\n      let anyKeysAdded = false\n\n      for (const _key in value) {\n        oldKeysSize++\n      }\n\n      for (const key in newValue) {\n        newKeysSize++\n        if (!(key in value)) {\n          anyKeysAdded = true\n          break\n        }\n      }\n\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\n\n      if (isDifferent) {\n        dirtyCollection(node)\n      }\n    }\n  }\n\n  for (const key in tags) {\n    const childValue = (value as Record<string, unknown>)[key]\n    const newChildValue = (newValue as Record<string, unknown>)[key]\n\n    if (childValue !== newChildValue) {\n      dirtyCollection(node)\n      dirtyTag(tags[key], newChildValue)\n    }\n\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\n      delete tags[key]\n    }\n  }\n\n  for (const key in children) {\n    const childNode = children[key]\n    const newChildValue = (newValue as Record<string, unknown>)[key]\n\n    const childValue = childNode.value\n\n    if (childValue === newChildValue) {\n      continue\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\n      updateNode(childNode, newChildValue as Record<string, unknown>)\n    } else {\n      deleteNode(childNode)\n      delete children[key]\n    }\n  }\n}\n\nfunction deleteNode(node: Node): void {\n  if (node.tag) {\n    dirtyTag(node.tag, null)\n  }\n  dirtyCollection(node)\n  for (const key in node.tags) {\n    dirtyTag(node.tags[key], null)\n  }\n  for (const key in node.children) {\n    deleteNode(node.children[key])\n  }\n}\n","// Original source:\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\n\nimport type {\n  AnyFunction,\n  DefaultMemoizeFields,\n  EqualityFn,\n  Simplify\n} from './types'\n\nclass StrongRef<T> {\n  constructor(private value: T) {}\n  deref() {\n    return this.value\n  }\n}\n\nconst Ref =\n  typeof WeakRef !== 'undefined'\n    ? WeakRef\n    : (StrongRef as unknown as typeof WeakRef)\n\nconst UNTERMINATED = 0\nconst TERMINATED = 1\n\ninterface UnterminatedCacheNode<T> {\n  /**\n   * Status, represents whether the cached computation returned a value or threw an error.\n   */\n  s: 0\n  /**\n   * Value, either the cached result or an error, depending on status.\n   */\n  v: void\n  /**\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\n   */\n  o: null | WeakMap<Function | Object, CacheNode<T>>\n  /**\n   * Primitive cache, a regular Map where primitive arguments are stored.\n   */\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\n}\n\ninterface TerminatedCacheNode<T> {\n  /**\n   * Status, represents whether the cached computation returned a value or threw an error.\n   */\n  s: 1\n  /**\n   * Value, either the cached result or an error, depending on status.\n   */\n  v: T\n  /**\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\n   */\n  o: null | WeakMap<Function | Object, CacheNode<T>>\n  /**\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\n   */\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\n}\n\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\n\nfunction createCacheNode<T>(): CacheNode<T> {\n  return {\n    s: UNTERMINATED,\n    v: undefined,\n    o: null,\n    p: null\n  }\n}\n\n/**\n * Configuration options for a memoization function utilizing `WeakMap` for\n * its caching mechanism.\n *\n * @template Result - The type of the return value of the memoized function.\n *\n * @since 5.0.0\n * @public\n */\nexport interface WeakMapMemoizeOptions<Result = any> {\n  /**\n   * If provided, used to compare a newly generated output value against previous values in the cache.\n   * If a match is found, the old value is returned. This addresses the common\n   * ```ts\n   * todos.map(todo => todo.id)\n   * ```\n   * use case, where an update to another field in the original data causes a recalculation\n   * due to changed references, but the output is still effectively the same.\n   *\n   * @since 5.0.0\n   */\n  resultEqualityCheck?: EqualityFn<Result>\n}\n\n/**\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\n * arguments it's been called with (in this case, the extracted values from your input selectors).\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\n * Cache results will be kept in memory as long as references to the arguments still exist,\n * and then cleared out as the arguments are garbage-collected.\n *\n * __Design Tradeoffs for `weakMapMemoize`:__\n * - Pros:\n *   - It has an effectively infinite cache size, but you have no control over\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\n * - Cons:\n *   - There's currently no way to alter the argument comparisons.\n *   They're based on strict reference equality.\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\n *\n * __Use Cases for `weakMapMemoize`:__\n * - This memoizer is likely best used for cases where you need to call the\n * same selector instance with many different arguments, such as a single\n * selector instance that is used in a list item component and called with\n * item IDs like:\n *   ```ts\n *   useSelector(state => selectSomeData(state, props.category))\n *   ```\n * @param func - The function to be memoized.\n * @returns A memoized function with a `.clearCache()` method attached.\n *\n * @example\n * <caption>Using `createSelector`</caption>\n * ```ts\n * import { createSelector, weakMapMemoize } from 'reselect'\n *\n * interface RootState {\n *   items: { id: number; category: string; name: string }[]\n * }\n *\n * const selectItemsByCategory = createSelector(\n *   [\n *     (state: RootState) => state.items,\n *     (state: RootState, category: string) => category\n *   ],\n *   (items, category) => items.filter(item => item.category === category),\n *   {\n *     memoize: weakMapMemoize,\n *     argsMemoize: weakMapMemoize\n *   }\n * )\n * ```\n *\n * @example\n * <caption>Using `createSelectorCreator`</caption>\n * ```ts\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\n *\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\n *\n * const selectItemsByCategory = createSelectorWeakMap(\n *   [\n *     (state: RootState) => state.items,\n *     (state: RootState, category: string) => category\n *   ],\n *   (items, category) => items.filter(item => item.category === category)\n * )\n * ```\n *\n * @template Func - The type of the function that is memoized.\n *\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\n *\n * @since 5.0.0\n * @public\n * @experimental\n */\nexport function weakMapMemoize<Func extends AnyFunction>(\n  func: Func,\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\n) {\n  let fnNode = createCacheNode()\n  const { resultEqualityCheck } = options\n\n  let lastResult: WeakRef<object> | undefined\n\n  let resultsCount = 0\n\n  function memoized() {\n    let cacheNode = fnNode\n    const { length } = arguments\n    for (let i = 0, l = length; i < l; i++) {\n      const arg = arguments[i]\n      if (\n        typeof arg === 'function' ||\n        (typeof arg === 'object' && arg !== null)\n      ) {\n        // Objects go into a WeakMap\n        let objectCache = cacheNode.o\n        if (objectCache === null) {\n          cacheNode.o = objectCache = new WeakMap()\n        }\n        const objectNode = objectCache.get(arg)\n        if (objectNode === undefined) {\n          cacheNode = createCacheNode()\n          objectCache.set(arg, cacheNode)\n        } else {\n          cacheNode = objectNode\n        }\n      } else {\n        // Primitives go into a regular Map\n        let primitiveCache = cacheNode.p\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = new Map()\n        }\n        const primitiveNode = primitiveCache.get(arg)\n        if (primitiveNode === undefined) {\n          cacheNode = createCacheNode()\n          primitiveCache.set(arg, cacheNode)\n        } else {\n          cacheNode = primitiveNode\n        }\n      }\n    }\n\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\n\n    let result\n\n    if (cacheNode.s === TERMINATED) {\n      result = cacheNode.v\n    } else {\n      // Allow errors to propagate\n      result = func.apply(null, arguments as unknown as any[])\n      resultsCount++\n    }\n\n    terminatedNode.s = TERMINATED\n\n    if (resultEqualityCheck) {\n      const lastResultValue = lastResult?.deref?.() ?? lastResult\n      if (\n        lastResultValue != null &&\n        resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\n      ) {\n        result = lastResultValue\n        resultsCount !== 0 && resultsCount--\n      }\n\n      const needsWeakRef =\n        (typeof result === 'object' && result !== null) ||\n        typeof result === 'function'\n      lastResult = needsWeakRef ? new Ref(result) : result\n    }\n    terminatedNode.v = result\n    return result\n  }\n\n  memoized.clearCache = () => {\n    fnNode = createCacheNode()\n    memoized.resetResultsCount()\n  }\n\n  memoized.resultsCount = () => resultsCount\n\n  memoized.resetResultsCount = () => {\n    resultsCount = 0\n  }\n\n  return memoized as Func & Simplify<DefaultMemoizeFields>\n}\n","import { weakMapMemoize } from './weakMapMemoize'\n\nimport type {\n  Combiner,\n  CreateSelectorOptions,\n  DropFirstParameter,\n  ExtractMemoizerFields,\n  GetParamsFromSelectors,\n  GetStateFromSelectors,\n  InterruptRecursion,\n  OutputSelector,\n  Selector,\n  SelectorArray,\n  SetRequired,\n  Simplify,\n  UnknownMemoizer\n} from './types'\n\nimport {\n  assertIsFunction,\n  collectInputSelectorResults,\n  ensureIsArray,\n  getDependencies,\n  getDevModeChecksExecutionInfo\n} from './utils'\n\n/**\n * An instance of `createSelector`, customized with a given memoize implementation.\n *\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\n *\n * @public\n */\nexport interface CreateSelectorFunction<\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\n  StateType = any\n> {\n  /**\n   * Creates a memoized selector function.\n   *\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\n   * @returns A memoized output selector.\n   *\n   * @template InputSelectors - The type of the input selectors as an array.\n   * @template Result - The return type of the `combiner` as well as the output selector.\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\n   *\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\n   */\n  <InputSelectors extends SelectorArray<StateType>, Result>(\n    ...createSelectorArgs: [\n      ...inputSelectors: InputSelectors,\n      combiner: Combiner<InputSelectors, Result>\n    ]\n  ): OutputSelector<\n    InputSelectors,\n    Result,\n    MemoizeFunction,\n    ArgsMemoizeFunction\n  > &\n    InterruptRecursion\n\n  /**\n   * Creates a memoized selector function.\n   *\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\n   * @returns A memoized output selector.\n   *\n   * @template InputSelectors - The type of the input selectors as an array.\n   * @template Result - The return type of the `combiner` as well as the output selector.\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\n   *\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\n   */\n  <\n    InputSelectors extends SelectorArray<StateType>,\n    Result,\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\n  >(\n    ...createSelectorArgs: [\n      ...inputSelectors: InputSelectors,\n      combiner: Combiner<InputSelectors, Result>,\n      createSelectorOptions: Simplify<\n        CreateSelectorOptions<\n          MemoizeFunction,\n          ArgsMemoizeFunction,\n          OverrideMemoizeFunction,\n          OverrideArgsMemoizeFunction\n        >\n      >\n    ]\n  ): OutputSelector<\n    InputSelectors,\n    Result,\n    OverrideMemoizeFunction,\n    OverrideArgsMemoizeFunction\n  > &\n    InterruptRecursion\n\n  /**\n   * Creates a memoized selector function.\n   *\n   * @param inputSelectors - An array of input selectors.\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\n   * @returns A memoized output selector.\n   *\n   * @template InputSelectors - The type of the input selectors array.\n   * @template Result - The return type of the `combiner` as well as the output selector.\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\n   *\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\n   */\n  <\n    InputSelectors extends SelectorArray<StateType>,\n    Result,\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\n  >(\n    inputSelectors: [...InputSelectors],\n    combiner: Combiner<InputSelectors, Result>,\n    createSelectorOptions?: Simplify<\n      CreateSelectorOptions<\n        MemoizeFunction,\n        ArgsMemoizeFunction,\n        OverrideMemoizeFunction,\n        OverrideArgsMemoizeFunction\n      >\n    >\n  ): OutputSelector<\n    InputSelectors,\n    Result,\n    OverrideMemoizeFunction,\n    OverrideArgsMemoizeFunction\n  > &\n    InterruptRecursion\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\n   * where the `state` type is predefined.\n   *\n   * This allows you to set the `state` type once, eliminating the need to\n   * specify it with every {@linkcode createSelector createSelector} call.\n   *\n   * @returns A pre-typed `createSelector` with the state type already defined.\n   *\n   * @example\n   * ```ts\n   * import { createSelector } from 'reselect'\n   *\n   * export interface RootState {\n   *   todos: { id: number; completed: boolean }[]\n   *   alerts: { id: number; read: boolean }[]\n   * }\n   *\n   * export const createAppSelector = createSelector.withTypes<RootState>()\n   *\n   * const selectTodoIds = createAppSelector(\n   *   [\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\n   *     state => state.todos\n   *   ],\n   *   todos => todos.map(({ id }) => id)\n   * )\n   * ```\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\n   *\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\n   *\n   * @since 5.1.0\n   */\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\n    MemoizeFunction,\n    ArgsMemoizeFunction,\n    OverrideStateType\n  >\n}\n\n/**\n * Creates a selector creator function with the specified memoization function\n * and options for customizing memoization behavior.\n *\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\n * @returns A customized `createSelector` function.\n *\n * @example\n * ```ts\n * const customCreateSelector = createSelectorCreator({\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\n * })\n *\n * const customSelector = customCreateSelector(\n *   [inputSelector1, inputSelector2],\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\n * )\n *\n * customSelector(\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\n * )\n * ```\n *\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\n *\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\n *\n * @since 5.0.0\n * @public\n */\nexport function createSelectorCreator<\n  MemoizeFunction extends UnknownMemoizer,\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\n>(\n  options: Simplify<\n    SetRequired<\n      CreateSelectorOptions<\n        typeof weakMapMemoize,\n        typeof weakMapMemoize,\n        MemoizeFunction,\n        ArgsMemoizeFunction\n      >,\n      'memoize'\n    >\n  >\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\n\n/**\n * Creates a selector creator function with the specified memoization function\n * and options for customizing memoization behavior.\n *\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\n * @returns A customized `createSelector` function.\n *\n * @example\n * ```ts\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\n *   option1, // Will be passed as second argument to `customMemoize`\n *   option2, // Will be passed as third argument to `customMemoize`\n *   option3 // Will be passed as fourth argument to `customMemoize`\n * )\n *\n * const customSelector = customCreateSelector(\n *   [inputSelector1, inputSelector2],\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\n * )\n * ```\n *\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\n *\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\n *\n * @public\n */\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\n  memoize: MemoizeFunction,\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\n): CreateSelectorFunction<MemoizeFunction>\n\n/**\n * Creates a selector creator function with the specified memoization\n * function and options for customizing memoization behavior.\n *\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\n * @returns A customized `createSelector` function.\n *\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\n */\nexport function createSelectorCreator<\n  MemoizeFunction extends UnknownMemoizer,\n  ArgsMemoizeFunction extends UnknownMemoizer,\n  MemoizeOrOptions extends\n    | MemoizeFunction\n    | SetRequired<\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\n        'memoize'\n      >\n>(\n  memoizeOrOptions: MemoizeOrOptions,\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\n    'memoize'\n  >\n    ? never\n    : DropFirstParameter<MemoizeFunction>\n) {\n  /** options initially passed into `createSelectorCreator`. */\n  const createSelectorCreatorOptions: SetRequired<\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\n    'memoize'\n  > = typeof memoizeOrOptions === 'function'\n    ? {\n        memoize: memoizeOrOptions as MemoizeFunction,\n        memoizeOptions: memoizeOptionsFromArgs\n      }\n    : memoizeOrOptions\n\n  const createSelector = <\n    InputSelectors extends SelectorArray,\n    Result,\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\n  >(\n    ...createSelectorArgs: [\n      ...inputSelectors: [...InputSelectors],\n      combiner: Combiner<InputSelectors, Result>,\n      createSelectorOptions?: CreateSelectorOptions<\n        MemoizeFunction,\n        ArgsMemoizeFunction,\n        OverrideMemoizeFunction,\n        OverrideArgsMemoizeFunction\n      >\n    ]\n  ) => {\n    let recomputations = 0\n    let dependencyRecomputations = 0\n    let lastResult: Result\n\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n    let directlyPassedOptions: CreateSelectorOptions<\n      MemoizeFunction,\n      ArgsMemoizeFunction,\n      OverrideMemoizeFunction,\n      OverrideArgsMemoizeFunction\n    > = {}\n\n    // Normally, the result func or \"combiner\" is the last arg\n    let resultFunc = createSelectorArgs.pop() as\n      | Combiner<InputSelectors, Result>\n      | CreateSelectorOptions<\n          MemoizeFunction,\n          ArgsMemoizeFunction,\n          OverrideMemoizeFunction,\n          OverrideArgsMemoizeFunction\n        >\n\n    // If the result func is actually an _object_, assume it's our options object\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc\n      // and pop the real result func off\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\n    }\n\n    assertIsFunction(\n      resultFunc,\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\n    )\n\n    // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to `createSelectorCreator`.\n    const combinedOptions = {\n      ...createSelectorCreatorOptions,\n      ...directlyPassedOptions\n    }\n\n    const {\n      memoize,\n      memoizeOptions = [],\n      argsMemoize = weakMapMemoize,\n      argsMemoizeOptions = [],\n      devModeChecks = {}\n    } = combinedOptions\n\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\n\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\n      recomputations++\n      // apply arguments instead of spreading for performance.\n      // @ts-ignore\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\n        null,\n        arguments\n      )\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\n      ExtractMemoizerFields<OverrideMemoizeFunction>\n\n    let firstRun = true\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    const selector = argsMemoize(function dependenciesChecker() {\n      dependencyRecomputations++\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\n      const inputSelectorResults = collectInputSelectorResults(\n        dependencies,\n        arguments\n      )\n\n      // apply arguments instead of spreading for performance.\n      // @ts-ignore\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { identityFunctionCheck, inputStabilityCheck } =\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\n        if (identityFunctionCheck.shouldRun) {\n          identityFunctionCheck.run(\n            resultFunc as Combiner<InputSelectors, Result>,\n            inputSelectorResults,\n            lastResult\n          )\n        }\n\n        if (inputStabilityCheck.shouldRun) {\n          // make a second copy of the params, to check if we got the same results\n          const inputSelectorResultsCopy = collectInputSelectorResults(\n            dependencies,\n            arguments\n          )\n\n          inputStabilityCheck.run(\n            { inputSelectorResults, inputSelectorResultsCopy },\n            { memoize, memoizeOptions: finalMemoizeOptions },\n            arguments\n          )\n        }\n\n        if (firstRun) firstRun = false\n      }\n\n      return lastResult\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\n      GetStateFromSelectors<InputSelectors>,\n      Result,\n      GetParamsFromSelectors<InputSelectors>\n    > &\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\n\n    return Object.assign(selector, {\n      resultFunc,\n      memoizedResultFunc,\n      dependencies,\n      dependencyRecomputations: () => dependencyRecomputations,\n      resetDependencyRecomputations: () => {\n        dependencyRecomputations = 0\n      },\n      lastResult: () => lastResult,\n      recomputations: () => recomputations,\n      resetRecomputations: () => {\n        recomputations = 0\n      },\n      memoize,\n      argsMemoize\n    }) as OutputSelector<\n      InputSelectors,\n      Result,\n      OverrideMemoizeFunction,\n      OverrideArgsMemoizeFunction\n    >\n  }\n\n  Object.assign(createSelector, {\n    withTypes: () => createSelector\n  })\n\n  return createSelector as CreateSelectorFunction<\n    MemoizeFunction,\n    ArgsMemoizeFunction\n  >\n}\n\n/**\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\n * a single \"result function\" / \"combiner\", and an optional options object, and\n * generates a memoized selector function.\n *\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\n *\n * @public\n */\nexport const createSelector =\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\n","import { createSelector } from './createSelectorCreator'\n\nimport type { CreateSelectorFunction } from './createSelectorCreator'\nimport type {\n  InterruptRecursion,\n  ObjectValuesToTuple,\n  OutputSelector,\n  Selector,\n  Simplify,\n  UnknownMemoizer\n} from './types'\nimport { assertIsObject } from './utils'\nimport type { weakMapMemoize } from './weakMapMemoize'\n\n/**\n * Represents a mapping of selectors to their return types.\n *\n * @template TObject - An object type where each property is a selector function.\n *\n * @public\n */\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\n}\n\n/**\n * Represents a mapping of selectors for each key in a given root state.\n *\n * This type is a utility that takes a root state object type and\n * generates a corresponding set of selectors. Each selector is associated\n * with a key in the root state, allowing for the selection\n * of specific parts of the state.\n *\n * @template RootState - The type of the root state object.\n *\n * @since 5.0.0\n * @public\n */\nexport type RootStateSelectors<RootState = any> = {\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\n}\n\n/**\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\n * @template RootState - The type of the root state object.\n *\n * @since 5.0.0\n * @public\n */\nexport type TypedStructuredSelectorCreator<RootState = any> =\n  /**\n   * A convenience function that simplifies returning an object\n   * made up of selector results.\n   *\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\n   * @returns A memoized structured selector.\n   *\n   * @example\n   * <caption>Modern Use Case</caption>\n   * ```ts\n   * import { createSelector, createStructuredSelector } from 'reselect'\n   *\n   * interface RootState {\n   *   todos: {\n   *     id: number\n   *     completed: boolean\n   *     title: string\n   *     description: string\n   *   }[]\n   *   alerts: { id: number; read: boolean }[]\n   * }\n   *\n   * // This:\n   * const structuredSelector = createStructuredSelector(\n   *   {\n   *     todos: (state: RootState) => state.todos,\n   *     alerts: (state: RootState) => state.alerts,\n   *     todoById: (state: RootState, id: number) => state.todos[id]\n   *   },\n   *   createSelector\n   * )\n   *\n   * // Is essentially the same as this:\n   * const selector = createSelector(\n   *   [\n   *     (state: RootState) => state.todos,\n   *     (state: RootState) => state.alerts,\n   *     (state: RootState, id: number) => state.todos[id]\n   *   ],\n   *   (todos, alerts, todoById) => {\n   *     return {\n   *       todos,\n   *       alerts,\n   *       todoById\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @example\n   * <caption>In your component:</caption>\n   * ```tsx\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\n   * import type { FC } from 'react'\n   * import { useSelector } from 'react-redux'\n   *\n   * interface Props {\n   *   id: number\n   * }\n   *\n   * const MyComponent: FC<Props> = ({ id }) => {\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\n   *     structuredSelector(state, id)\n   *   )\n   *\n   *   return (\n   *     <div>\n   *       Next to do is:\n   *       <h2>{todoById.title}</h2>\n   *       <p>Description: {todoById.description}</p>\n   *       <ul>\n   *         <h3>All other to dos:</h3>\n   *         {todos.map(todo => (\n   *           <li key={todo.id}>{todo.title}</li>\n   *         ))}\n   *       </ul>\n   *     </div>\n   *   )\n   * }\n   * ```\n   *\n   * @example\n   * <caption>Simple Use Case</caption>\n   * ```ts\n   * const selectA = state => state.a\n   * const selectB = state => state.b\n   *\n   * // The result function in the following selector\n   * // is simply building an object from the input selectors\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\n   *   a,\n   *   b\n   * }))\n   *\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\n   * ```\n   *\n   * @template InputSelectorsObject - The shape of the input selectors object.\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\n   *\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\n   */\n  <\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\n  >(\n    inputSelectorsObject: InputSelectorsObject,\n    selectorCreator?: CreateSelectorFunction<\n      MemoizeFunction,\n      ArgsMemoizeFunction\n    >\n  ) => OutputSelector<\n    ObjectValuesToTuple<InputSelectorsObject>,\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\n    MemoizeFunction,\n    ArgsMemoizeFunction\n  > &\n    InterruptRecursion\n\n/**\n * Represents an object where each property is a selector function.\n *\n * @template StateType - The type of state that all the selectors operate on.\n *\n * @public\n */\nexport type SelectorsObject<StateType = any> = Record<\n  string,\n  Selector<StateType>\n>\n\n/**\n * It provides a way to create structured selectors.\n * The structured selector can take multiple input selectors\n * and map their output to an object with specific keys.\n *\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\n *\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\n *\n * @public\n */\nexport interface StructuredSelectorCreator<StateType = any> {\n  /**\n   * A convenience function that simplifies returning an object\n   * made up of selector results.\n   *\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\n   * @returns A memoized structured selector.\n   *\n   * @example\n   * <caption>Modern Use Case</caption>\n   * ```ts\n   * import { createSelector, createStructuredSelector } from 'reselect'\n   *\n   * interface RootState {\n   *   todos: {\n   *     id: number\n   *     completed: boolean\n   *     title: string\n   *     description: string\n   *   }[]\n   *   alerts: { id: number; read: boolean }[]\n   * }\n   *\n   * // This:\n   * const structuredSelector = createStructuredSelector(\n   *   {\n   *     todos: (state: RootState) => state.todos,\n   *     alerts: (state: RootState) => state.alerts,\n   *     todoById: (state: RootState, id: number) => state.todos[id]\n   *   },\n   *   createSelector\n   * )\n   *\n   * // Is essentially the same as this:\n   * const selector = createSelector(\n   *   [\n   *     (state: RootState) => state.todos,\n   *     (state: RootState) => state.alerts,\n   *     (state: RootState, id: number) => state.todos[id]\n   *   ],\n   *   (todos, alerts, todoById) => {\n   *     return {\n   *       todos,\n   *       alerts,\n   *       todoById\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @example\n   * <caption>In your component:</caption>\n   * ```tsx\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\n   * import type { FC } from 'react'\n   * import { useSelector } from 'react-redux'\n   *\n   * interface Props {\n   *   id: number\n   * }\n   *\n   * const MyComponent: FC<Props> = ({ id }) => {\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\n   *     structuredSelector(state, id)\n   *   )\n   *\n   *   return (\n   *     <div>\n   *       Next to do is:\n   *       <h2>{todoById.title}</h2>\n   *       <p>Description: {todoById.description}</p>\n   *       <ul>\n   *         <h3>All other to dos:</h3>\n   *         {todos.map(todo => (\n   *           <li key={todo.id}>{todo.title}</li>\n   *         ))}\n   *       </ul>\n   *     </div>\n   *   )\n   * }\n   * ```\n   *\n   * @example\n   * <caption>Simple Use Case</caption>\n   * ```ts\n   * const selectA = state => state.a\n   * const selectB = state => state.b\n   *\n   * // The result function in the following selector\n   * // is simply building an object from the input selectors\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\n   *   a,\n   *   b\n   * }))\n   *\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\n   * ```\n   *\n   * @template InputSelectorsObject - The shape of the input selectors object.\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\n   *\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\n   */\n  <\n    InputSelectorsObject extends SelectorsObject<StateType>,\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\n  >(\n    inputSelectorsObject: InputSelectorsObject,\n    selectorCreator?: CreateSelectorFunction<\n      MemoizeFunction,\n      ArgsMemoizeFunction\n    >\n  ): OutputSelector<\n    ObjectValuesToTuple<InputSelectorsObject>,\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\n    MemoizeFunction,\n    ArgsMemoizeFunction\n  > &\n    InterruptRecursion\n\n  /**\n   * Creates a \"pre-typed\" version of\n   * {@linkcode createStructuredSelector createStructuredSelector}\n   * where the `state` type is predefined.\n   *\n   * This allows you to set the `state` type once, eliminating the need to\n   * specify it with every\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\n   *\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\n   *\n   * @example\n   * ```ts\n   * import { createStructuredSelector } from 'reselect'\n   *\n   * export interface RootState {\n   *   todos: { id: number; completed: boolean }[]\n   *   alerts: { id: number; read: boolean }[]\n   * }\n   *\n   * export const createStructuredAppSelector =\n   *   createStructuredSelector.withTypes<RootState>()\n   *\n   * const structuredAppSelector = createStructuredAppSelector({\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\n   *   todos: state => state.todos,\n   *   alerts: state => state.alerts,\n   *   todoById: (state, id: number) => state.todos[id]\n   * })\n   *\n   * ```\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\n   *\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\n   *\n   * @since 5.1.0\n   */\n  withTypes: <\n    OverrideStateType extends StateType\n  >() => StructuredSelectorCreator<OverrideStateType>\n}\n\n/**\n * A convenience function that simplifies returning an object\n * made up of selector results.\n *\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\n * @returns A memoized structured selector.\n *\n * @example\n * <caption>Modern Use Case</caption>\n * ```ts\n * import { createSelector, createStructuredSelector } from 'reselect'\n *\n * interface RootState {\n *   todos: {\n *     id: number\n *     completed: boolean\n *     title: string\n *     description: string\n *   }[]\n *   alerts: { id: number; read: boolean }[]\n * }\n *\n * // This:\n * const structuredSelector = createStructuredSelector(\n *   {\n *     todos: (state: RootState) => state.todos,\n *     alerts: (state: RootState) => state.alerts,\n *     todoById: (state: RootState, id: number) => state.todos[id]\n *   },\n *   createSelector\n * )\n *\n * // Is essentially the same as this:\n * const selector = createSelector(\n *   [\n *     (state: RootState) => state.todos,\n *     (state: RootState) => state.alerts,\n *     (state: RootState, id: number) => state.todos[id]\n *   ],\n *   (todos, alerts, todoById) => {\n *     return {\n *       todos,\n *       alerts,\n *       todoById\n *     }\n *   }\n * )\n * ```\n *\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\n *\n * @public\n */\nexport const createStructuredSelector: StructuredSelectorCreator =\n  Object.assign(\n    <\n      InputSelectorsObject extends SelectorsObject,\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\n    >(\n      inputSelectorsObject: InputSelectorsObject,\n      selectorCreator: CreateSelectorFunction<\n        MemoizeFunction,\n        ArgsMemoizeFunction\n      > = createSelector as CreateSelectorFunction<\n        MemoizeFunction,\n        ArgsMemoizeFunction\n      >\n    ) => {\n      assertIsObject(\n        inputSelectorsObject,\n        'createStructuredSelector expects first argument to be an object ' +\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\n      )\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\n      const dependencies = inputSelectorKeys.map(\n        key => inputSelectorsObject[key]\n      )\n      const structuredSelector = selectorCreator(\n        dependencies,\n        (...inputSelectorResults: any[]) => {\n          return inputSelectorResults.reduce((composition, value, index) => {\n            composition[inputSelectorKeys[index]] = value\n            return composition\n          }, {})\n        }\n      )\n      return structuredSelector\n    },\n    { withTypes: () => createStructuredSelector }\n  ) as StructuredSelectorCreator\n","// src/index.ts\nfunction createThunkMiddleware(extraArgument) {\n  const middleware = ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === \"function\") {\n      return action(dispatch, getState, extraArgument);\n    }\n    return next(action);\n  };\n  return middleware;\n}\nvar thunk = createThunkMiddleware();\nvar withExtraArgument = createThunkMiddleware;\nexport {\n  thunk,\n  withExtraArgument\n};\n","import type { Action, ActionCreator, StoreEnhancer } from 'redux';\nimport { compose } from 'redux';\n/**\n * @public\n */\n\nexport interface DevToolsEnhancerOptions {\n  /**\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\n   */\n  name?: string;\n  /**\n   * action creators functions to be available in the Dispatcher.\n   */\n\n  actionCreators?: ActionCreator<any>[] | {\n    [key: string]: ActionCreator<any>;\n  };\n  /**\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\n   *\n   * @default 500 ms.\n   */\n\n  latency?: number;\n  /**\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\n   *\n   * @default 50\n   */\n\n  maxAge?: number;\n  /**\n   * Customizes how actions and state are serialized and deserialized. Can be a boolean or object. If given a boolean, the behavior is the same as if you\n   * were to pass an object and specify `options` as a boolean. Giving an object allows fine-grained customization using the `replacer` and `reviver`\n   * functions.\n   */\n\n  serialize?: boolean | {\n    /**\n     * - `undefined` - will use regular `JSON.stringify` to send data (it's the fast mode).\n     * - `false` - will handle also circular references.\n     * - `true` - will handle also date, regex, undefined, error objects, symbols, maps, sets and functions.\n     * - object, which contains `date`, `regex`, `undefined`, `error`, `symbol`, `map`, `set` and `function` keys.\n     *   For each of them you can indicate if to include (by setting as `true`).\n     *   For `function` key you can also specify a custom function which handles serialization.\n     *   See [`jsan`](https://github.com/kolodny/jsan) for more details.\n     */\n    options?: undefined | boolean | {\n      date?: true;\n      regex?: true;\n      undefined?: true;\n      error?: true;\n      symbol?: true;\n      map?: true;\n      set?: true;\n      function?: true | ((fn: (...args: any[]) => any) => string);\n    };\n    /**\n     * [JSON replacer function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter) used for both actions and states stringify.\n     * In addition, you can specify a data type by adding a [`__serializedType__`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/helpers/index.js#L4)\n     * key. So you can deserialize it back while importing or persisting data.\n     * Moreover, it will also [show a nice preview showing the provided custom type](https://cloud.githubusercontent.com/assets/7957859/21814330/a17d556a-d761-11e6-85ef-159dd12f36c5.png):\n     */\n\n    replacer?: (key: string, value: unknown) => any;\n    /**\n     * [JSON `reviver` function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter)\n     * used for parsing the imported actions and states. See [`remotedev-serialize`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/immutable/serialize.js#L8-L41)\n     * as an example on how to serialize special data types and get them back.\n     */\n\n    reviver?: (key: string, value: unknown) => any;\n    /**\n     * Automatically serialize/deserialize immutablejs via [remotedev-serialize](https://github.com/zalmoxisus/remotedev-serialize).\n     * Just pass the Immutable library. It will support all ImmutableJS structures. You can even export them into a file and get them back.\n     * The only exception is `Record` class, for which you should pass this in addition the references to your classes in `refs`.\n     */\n\n    immutable?: any;\n    /**\n     * ImmutableJS `Record` classes used to make possible restore its instances back when importing, persisting...\n     */\n\n    refs?: any;\n  };\n  /**\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\n   */\n\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A;\n  /**\n   * function which takes `state` object and index as arguments, and should return `state` object back.\n   */\n\n  stateSanitizer?: <S>(state: S, index: number) => S;\n  /**\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\n   */\n\n  actionsDenylist?: string | string[];\n  /**\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\n   */\n\n  actionsAllowlist?: string | string[];\n  /**\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\n   * Use it as a more advanced version of `actionsDenylist`/`actionsAllowlist` parameters.\n   */\n\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean;\n  /**\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\n   * Available only for Redux enhancer, for others use `autoPause`.\n   *\n   * @default true\n   */\n\n  shouldRecordChanges?: boolean;\n  /**\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\n   * If not specified, will commit when paused. Available only for Redux enhancer.\n   *\n   * @default \"@@PAUSED\"\"\n   */\n\n  pauseActionType?: string;\n  /**\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\n   *\n   * @default false\n   */\n\n  autoPause?: boolean;\n  /**\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\n   * Available only for Redux enhancer.\n   *\n   * @default false\n   */\n\n  shouldStartLocked?: boolean;\n  /**\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\n   *\n   * @default true\n   */\n\n  shouldHotReload?: boolean;\n  /**\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\n   *\n   * @default false\n   */\n\n  shouldCatchErrors?: boolean;\n  /**\n   * If you want to restrict the extension, specify the features you allow.\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\n   * Otherwise, you'll get/set the data right from the monitor part.\n   */\n\n  features?: {\n    /**\n     * start/pause recording of dispatched actions\n     */\n    pause?: boolean;\n    /**\n     * lock/unlock dispatching actions and side effects\n     */\n\n    lock?: boolean;\n    /**\n     * persist states on page reloading\n     */\n\n    persist?: boolean;\n    /**\n     * export history of actions in a file\n     */\n\n    export?: boolean | 'custom';\n    /**\n     * import history of actions from a file\n     */\n\n    import?: boolean | 'custom';\n    /**\n     * jump back and forth (time travelling)\n     */\n\n    jump?: boolean;\n    /**\n     * skip (cancel) actions\n     */\n\n    skip?: boolean;\n    /**\n     * drag and drop actions in the history list\n     */\n\n    reorder?: boolean;\n    /**\n     * dispatch custom actions or action creators\n     */\n\n    dispatch?: boolean;\n    /**\n     * generate tests for the selected actions\n     */\n\n    test?: boolean;\n  };\n  /**\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\n   * Defaults to false.\n   */\n\n  trace?: boolean | (<A extends Action>(action: A) => string);\n  /**\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\n   */\n\n  traceLimit?: number;\n}\ntype Compose = typeof compose;\ninterface ComposeWithDevTools {\n  (options: DevToolsEnhancerOptions): Compose;\n  <StoreExt extends {}>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>;\n}\n/**\n * @public\n */\n\nexport const composeWithDevTools: ComposeWithDevTools = typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {\n  if (arguments.length === 0) return undefined;\n  if (typeof arguments[0] === 'object') return compose;\n  return compose.apply(null, ((arguments as any) as Function[]));\n};\n/**\n * @public\n */\n\nexport const devToolsEnhancer: {\n  (options: DevToolsEnhancerOptions): StoreEnhancer<any>;\n} = typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION__ : function () {\n  return function (noop) {\n    return noop;\n  };\n};","import { current, isDraft } from 'immer';\nimport { createSelectorCreator, weakMapMemoize } from 'reselect';\nexport const createDraftSafeSelectorCreator: typeof createSelectorCreator = (...args: unknown[]) => {\n  const createSelector = (createSelectorCreator as any)(...args);\n  const createDraftSafeSelector = Object.assign((...args: unknown[]) => {\n    const selector = createSelector(...args);\n\n    const wrappedSelector = (value: unknown, ...rest: unknown[]) => selector(isDraft(value) ? current(value) : value, ...rest);\n\n    Object.assign(wrappedSelector, selector);\n    return (wrappedSelector as any);\n  }, {\n    withTypes: () => createDraftSafeSelector\n  });\n  return createDraftSafeSelector;\n};\n/**\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\n * the selector will act on the current draft value, instead of returning a cached value\n * that might be possibly outdated if the draft has been modified since.\n * @public\n */\n\nexport const createDraftSafeSelector = createDraftSafeSelectorCreator(weakMapMemoize);","import type { Middleware, StoreEnhancer } from 'redux';\nimport type { Tuple } from './utils';\nexport function safeAssign<T extends object>(target: T, ...args: Array<Partial<NoInfer<T>>>) {\n  Object.assign(target, ...args);\n}\n/**\n * return True if T is `any`, otherwise return False\n * taken from https://github.com/joonhocho/tsdef\n *\n * @internal\n */\n\nexport type IsAny<T, True, False = never> = // test if we are going the left AND right path in the condition\ntrue | false extends (T extends never ? true : false) ? True : False;\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>;\n/**\n * return True if T is `unknown`, otherwise return False\n * taken from https://github.com/joonhocho/tsdef\n *\n * @internal\n */\n\nexport type IsUnknown<T, True, False = never> = unknown extends T ? IsAny<T, False, True> : False;\nexport type FallbackIfUnknown<T, Fallback> = IsUnknown<T, Fallback, T>;\n/**\n * @internal\n */\n\nexport type IfMaybeUndefined<P, True, False> = [undefined] extends [P] ? True : False;\n/**\n * @internal\n */\n\nexport type IfVoid<P, True, False> = [void] extends [P] ? True : False;\n/**\n * @internal\n */\n\nexport type IsEmptyObj<T, True, False = never> = T extends any ? keyof T extends never ? IsUnknown<T, False, IfMaybeUndefined<T, False, IfVoid<T, False, True>>> : False : never;\n/**\n * returns True if TS version is above 3.5, False if below.\n * uses feature detection to detect TS version >= 3.5\n * * versions below 3.5 will return `{}` for unresolvable interference\n * * versions above will return `unknown`\n *\n * @internal\n */\n\nexport type AtLeastTS35<True, False> = [True, False][IsUnknown<ReturnType<<T>() => T>, 0, 1>];\n/**\n * @internal\n */\n\nexport type IsUnknownOrNonInferrable<T, True, False> = AtLeastTS35<IsUnknown<T, True, False>, IsEmptyObj<T, True, IsUnknown<T, True, False>>>;\n/**\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\n */\n\nexport type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never; // Appears to have a convenient side effect of ignoring `never` even if that's not what you specified\n\nexport type ExcludeFromTuple<T, E, Acc extends unknown[] = []> = T extends [infer Head, ...infer Tail] ? ExcludeFromTuple<Tail, E, [...Acc, ...([Head] extends [E] ? [] : [Head])]> : Acc;\ntype ExtractDispatchFromMiddlewareTuple<MiddlewareTuple extends readonly any[], Acc extends {}> = MiddlewareTuple extends [infer Head, ...infer Tail] ? ExtractDispatchFromMiddlewareTuple<Tail, Acc & (Head extends Middleware<infer D> ? IsAny<D, {}, D> : {})> : Acc;\nexport type ExtractDispatchExtensions<M> = M extends Tuple<infer MiddlewareTuple> ? ExtractDispatchFromMiddlewareTuple<MiddlewareTuple, {}> : M extends ReadonlyArray<Middleware> ? ExtractDispatchFromMiddlewareTuple<[...M], {}> : never;\ntype ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple extends readonly any[], Acc extends {}> = EnhancerTuple extends [infer Head, ...infer Tail] ? ExtractStoreExtensionsFromEnhancerTuple<Tail, Acc & (Head extends StoreEnhancer<infer Ext> ? IsAny<Ext, {}, Ext> : {})> : Acc;\nexport type ExtractStoreExtensions<E> = E extends Tuple<infer EnhancerTuple> ? ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple, {}> : E extends ReadonlyArray<StoreEnhancer> ? UnionToIntersection<E[number] extends StoreEnhancer<infer Ext> ? Ext extends {} ? IsAny<Ext, {}, Ext> : {} : {}> : never;\ntype ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple extends readonly any[], Acc extends {}> = EnhancerTuple extends [infer Head, ...infer Tail] ? ExtractStateExtensionsFromEnhancerTuple<Tail, Acc & (Head extends StoreEnhancer<any, infer StateExt> ? IsAny<StateExt, {}, StateExt> : {})> : Acc;\nexport type ExtractStateExtensions<E> = E extends Tuple<infer EnhancerTuple> ? ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple, {}> : E extends ReadonlyArray<StoreEnhancer> ? UnionToIntersection<E[number] extends StoreEnhancer<any, infer StateExt> ? StateExt extends {} ? IsAny<StateExt, {}, StateExt> : {} : {}> : never;\n/**\n * Helper type. Passes T out again, but boxes it in a way that it cannot\n * \"widen\" the type by accident if it is a generic that should be inferred\n * from elsewhere.\n *\n * @internal\n */\n\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\nexport type NonUndefined<T> = T extends undefined ? never : T;\nexport type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;\nexport type WithOptionalProp<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\nexport interface TypeGuard<T> {\n  (value: any): value is T;\n}\nexport interface HasMatchFunction<T> {\n  match: TypeGuard<T>;\n}\nexport const hasMatchFunction = <T,>(v: Matcher<T>): v is HasMatchFunction<T> => {\n  return v && typeof (v as HasMatchFunction<T>).match === 'function';\n};\n/** @public */\n\nexport type Matcher<T> = HasMatchFunction<T> | TypeGuard<T>;\n/** @public */\n\nexport type ActionFromMatcher<M extends Matcher<any>> = M extends Matcher<infer T> ? T : never;\nexport type Id<T> = { [K in keyof T]: T[K] } & {};\nexport type Tail<T extends any[]> = T extends [any, ...infer Tail] ? Tail : never;\nexport type UnknownIfNonSpecific<T> = {} extends T ? unknown : T;\n/**\n * A Promise that will never reject.\n * @see https://github.com/reduxjs/redux-toolkit/issues/4101\n */\n\nexport type SafePromise<T> = Promise<T> & {\n  __linterBrands: 'SafePromise';\n};\n/**\n * Properly wraps a Promise as a {@link SafePromise} with .catch(fallback).\n */\n\nexport function asSafePromise<Resolved, Rejected>(promise: Promise<Resolved>, fallback: (error: unknown) => Rejected) {\n  return (promise.catch(fallback) as SafePromise<Resolved | Rejected>);\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport { isAction } from 'redux';\nimport type { IsUnknownOrNonInferrable, IfMaybeUndefined, IfVoid, IsAny } from './tsHelpers';\nimport { hasMatchFunction } from './tsHelpers';\n/**\n * An action with a string type and an associated payload. This is the\n * type of action returned by `createAction()` action creators.\n *\n * @template P The type of the action's payload.\n * @template T the type used for the action type.\n * @template M The type of the action's meta (optional)\n * @template E The type of the action's error (optional)\n *\n * @public\n */\n\nexport type PayloadAction<P = void, T extends string = string, M = never, E = never> = {\n  payload: P;\n  type: T;\n} & ([M] extends [never] ? {} : {\n  meta: M;\n}) & ([E] extends [never] ? {} : {\n  error: E;\n});\n/**\n * A \"prepare\" method to be used as the second parameter of `createAction`.\n * Takes any number of arguments and returns a Flux Standard Action without\n * type (will be added later) that *must* contain a payload (might be undefined).\n *\n * @public\n */\n\nexport type PrepareAction<P> = ((...args: any[]) => {\n  payload: P;\n}) | ((...args: any[]) => {\n  payload: P;\n  meta: any;\n}) | ((...args: any[]) => {\n  payload: P;\n  error: any;\n}) | ((...args: any[]) => {\n  payload: P;\n  meta: any;\n  error: any;\n});\n/**\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\n *\n * @internal\n */\n\nexport type _ActionCreatorWithPreparedPayload<PA extends PrepareAction<any> | void, T extends string = string> = PA extends PrepareAction<infer P> ? ActionCreatorWithPreparedPayload<Parameters<PA>, P, T, ReturnType<PA> extends {\n  error: infer E;\n} ? E : never, ReturnType<PA> extends {\n  meta: infer M;\n} ? M : never> : void;\n/**\n * Basic type for all action creators.\n *\n * @inheritdoc {redux#ActionCreator}\n */\n\nexport interface BaseActionCreator<P, T extends string, M = never, E = never> {\n  type: T;\n  match: (action: unknown) => action is PayloadAction<P, T, M, E>;\n}\n/**\n * An action creator that takes multiple arguments that are passed\n * to a `PrepareAction` method to create the final Action.\n * @typeParam Args arguments for the action creator function\n * @typeParam P `payload` type\n * @typeParam T `type` name\n * @typeParam E optional `error` type\n * @typeParam M optional `meta` type\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\n\nexport interface ActionCreatorWithPreparedPayload<Args extends unknown[], P, T extends string = string, E = never, M = never> extends BaseActionCreator<P, T, M, E> {\n  /**\n   * Calling this {@link redux#ActionCreator} with `Args` will return\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\n   */\n  (...args: Args): PayloadAction<P, T, M, E>;\n}\n/**\n * An action creator of type `T` that takes an optional payload of type `P`.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\n\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string> extends BaseActionCreator<P, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\n   */\n  (payload?: P): PayloadAction<P, T>;\n}\n/**\n * An action creator of type `T` that takes no payload.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\n\nexport interface ActionCreatorWithoutPayload<T extends string = string> extends BaseActionCreator<undefined, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} will\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\n   */\n  (noArgument: void): PayloadAction<undefined, T>;\n}\n/**\n * An action creator of type `T` that requires a payload of type P.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\n\nexport interface ActionCreatorWithPayload<P, T extends string = string> extends BaseActionCreator<P, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\n   */\n  (payload: P): PayloadAction<P, T>;\n}\n/**\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\n\nexport interface ActionCreatorWithNonInferrablePayload<T extends string = string> extends BaseActionCreator<unknown, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload\n   * of exactly the type of the argument.\n   */\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>;\n}\n/**\n * An action creator that produces actions with a `payload` attribute.\n *\n * @typeParam P the `payload` type\n * @typeParam T the `type` of the resulting action\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\n *\n * @public\n */\n\nexport type PayloadActionCreator<P = void, T extends string = string, PA extends PrepareAction<P> | void = void> = IfPrepareActionMethodProvided<PA, _ActionCreatorWithPreparedPayload<PA, T>, // else\nIsAny<P, ActionCreatorWithPayload<any, T>, IsUnknownOrNonInferrable<P, ActionCreatorWithNonInferrablePayload<T>, // else\nIfVoid<P, ActionCreatorWithoutPayload<T>, // else\nIfMaybeUndefined<P, ActionCreatorWithOptionalPayload<P, T>, // else\nActionCreatorWithPayload<P, T>>>>>>;\n/**\n * A utility function to create an action creator for the given action type\n * string. The action creator accepts a single argument, which will be included\n * in the action object as a field called payload. The action creator function\n * will also have its toString() overridden so that it returns the action type.\n *\n * @param type The action type to use for created actions.\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\n *\n * @public\n */\n\nexport function createAction<P = void, T extends string = string>(type: T): PayloadActionCreator<P, T>;\n/**\n * A utility function to create an action creator for the given action type\n * string. The action creator accepts a single argument, which will be included\n * in the action object as a field called payload. The action creator function\n * will also have its toString() overridden so that it returns the action type.\n *\n * @param type The action type to use for created actions.\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\n *\n * @public\n */\n\nexport function createAction<PA extends PrepareAction<any>, T extends string = string>(type: T, prepareAction: PA): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>;\nexport function createAction(type: string, prepareAction?: Function): any {\n  function actionCreator(...args: any[]) {\n    if (prepareAction) {\n      let prepared = prepareAction(...args);\n\n      if (!prepared) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(0) : 'prepareAction did not return an object');\n      }\n\n      return {\n        type,\n        payload: prepared.payload,\n        ...('meta' in prepared && {\n          meta: prepared.meta\n        }),\n        ...('error' in prepared && {\n          error: prepared.error\n        })\n      };\n    }\n\n    return {\n      type,\n      payload: args[0]\n    };\n  }\n\n  actionCreator.toString = () => `${type}`;\n\n  actionCreator.type = type;\n\n  actionCreator.match = (action: unknown): action is PayloadAction => isAction(action) && action.type === type;\n\n  return actionCreator;\n}\n/**\n * Returns true if value is an RTK-like action creator, with a static type property and match method.\n */\n\nexport function isActionCreator(action: unknown): action is BaseActionCreator<unknown, string> & Function {\n  return typeof action === 'function' && 'type' in action && // hasMatchFunction only wants Matchers but I don't see the point in rewriting it\n  hasMatchFunction((action as any));\n}\n/**\n * Returns true if value is an action with a string type and valid Flux Standard Action keys.\n */\n\nexport function isFSA(action: unknown): action is {\n  type: string;\n  payload?: unknown;\n  error?: unknown;\n  meta?: unknown;\n} {\n  return isAction(action) && Object.keys(action).every(isValidKey);\n}\n\nfunction isValidKey(key: string) {\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1;\n} // helper types for more readable typings\n\n\ntype IfPrepareActionMethodProvided<PA extends PrepareAction<any> | void, True, False> = PA extends (...args: any[]) => any ? True : False;","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport { produce as createNextState, isDraftable } from 'immer';\nimport type { Middleware, StoreEnhancer } from 'redux';\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\n  let elapsed = 0;\n  return {\n    measureTime<T>(fn: () => T): T {\n      const started = Date.now();\n\n      try {\n        return fn();\n      } finally {\n        const finished = Date.now();\n        elapsed += finished - started;\n      }\n    },\n\n    warnIfExceeded() {\n      if (elapsed > maxDelay) {\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.`);\n      }\n    }\n\n  };\n}\nexport function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function find<T>(iterable: Iterable<T>, comparator: (item: T) => boolean): T | undefined {\n  for (const entry of iterable) {\n    if (comparator(entry)) {\n      return entry;\n    }\n  }\n\n  return undefined;\n}\nexport class Tuple<Items extends ReadonlyArray<unknown> = []> extends Array<Items[number]> {\n  constructor(length: number);\n  constructor(...items: Items);\n\n  constructor(...items: any[]) {\n    super(...items);\n    Object.setPrototypeOf(this, Tuple.prototype);\n  }\n\n  static get [Symbol.species]() {\n    return (Tuple as any);\n  }\n\n  concat<AdditionalItems extends ReadonlyArray<unknown>>(items: Tuple<AdditionalItems>): Tuple<[...Items, ...AdditionalItems]>;\n  concat<AdditionalItems extends ReadonlyArray<unknown>>(items: AdditionalItems): Tuple<[...Items, ...AdditionalItems]>;\n  concat<AdditionalItems extends ReadonlyArray<unknown>>(...items: AdditionalItems): Tuple<[...Items, ...AdditionalItems]>;\n\n  concat(...arr: any[]) {\n    return super.concat.apply(this, arr);\n  }\n\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(items: Tuple<AdditionalItems>): Tuple<[...AdditionalItems, ...Items]>;\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(items: AdditionalItems): Tuple<[...AdditionalItems, ...Items]>;\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(...items: AdditionalItems): Tuple<[...AdditionalItems, ...Items]>;\n\n  prepend(...arr: any[]) {\n    if (arr.length === 1 && Array.isArray(arr[0])) {\n      return new Tuple(...arr[0].concat(this));\n    }\n\n    return new Tuple(...arr.concat(this));\n  }\n\n}\nexport function freezeDraftable<T>(val: T) {\n  return isDraftable(val) ? createNextState(val, () => {}) : val;\n}\ninterface WeakMapEmplaceHandler<K extends object, V> {\n  /**\n   * Will be called to get value, if no value is currently in map.\n   */\n  insert?(key: K, map: WeakMap<K, V>): V;\n  /**\n   * Will be called to update a value, if one exists already.\n   */\n\n  update?(previous: V, key: K, map: WeakMap<K, V>): V;\n}\ninterface MapEmplaceHandler<K, V> {\n  /**\n   * Will be called to get value, if no value is currently in map.\n   */\n  insert?(key: K, map: Map<K, V>): V;\n  /**\n   * Will be called to update a value, if one exists already.\n   */\n\n  update?(previous: V, key: K, map: Map<K, V>): V;\n}\nexport function emplace<K, V>(map: Map<K, V>, key: K, handler: MapEmplaceHandler<K, V>): V;\nexport function emplace<K extends object, V>(map: WeakMap<K, V>, key: K, handler: WeakMapEmplaceHandler<K, V>): V;\n/**\n * Allow inserting a new value, or updating an existing one\n * @throws if called for a key with no current value and no `insert` handler is provided\n * @returns current value in map (after insertion/updating)\n * ```ts\n * // return current value if already in map, otherwise initialise to 0 and return that\n * const num = emplace(map, key, {\n *   insert: () => 0\n * })\n *\n * // increase current value by one if already in map, otherwise initialise to 0\n * const num = emplace(map, key, {\n *   update: (n) => n + 1,\n *   insert: () => 0,\n * })\n *\n * // only update if value's already in the map - and increase it by one\n * if (map.has(key)) {\n *   const num = emplace(map, key, {\n *     update: (n) => n + 1,\n *   })\n * }\n * ```\n *\n * @remarks\n * Based on https://github.com/tc39/proposal-upsert currently in Stage 2 - maybe in a few years we'll be able to replace this with direct method calls\n */\n\nexport function emplace<K extends object, V>(map: WeakMap<K, V>, key: K, handler: WeakMapEmplaceHandler<K, V>): V {\n  if (map.has(key)) {\n    let value = (map.get(key) as V);\n\n    if (handler.update) {\n      value = handler.update(value, key, map);\n      map.set(key, value);\n    }\n\n    return value;\n  }\n\n  if (!handler.insert) throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(10) : 'No insert provided for key not already in map');\n  const inserted = handler.insert(key, map);\n  map.set(key, inserted);\n  return inserted;\n}","import type { Middleware, UnknownAction } from 'redux';\nimport type { ThunkMiddleware } from 'redux-thunk';\nimport { thunk as thunkMiddleware, withExtraArgument } from 'redux-thunk';\nimport type { ActionCreatorInvariantMiddlewareOptions } from './actionCreatorInvariantMiddleware';\nimport { createActionCreatorInvariantMiddleware } from './actionCreatorInvariantMiddleware';\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware';\n/* PROD_START_REMOVE_UMD */\n\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware';\n/* PROD_STOP_REMOVE_UMD */\n\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware';\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware';\nimport type { ExcludeFromTuple } from './tsHelpers';\nimport { Tuple } from './utils';\n\nfunction isBoolean(x: any): x is boolean {\n  return typeof x === 'boolean';\n}\n\ninterface ThunkOptions<E = any> {\n  extraArgument: E;\n}\ninterface GetDefaultMiddlewareOptions {\n  thunk?: boolean | ThunkOptions;\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions;\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions;\n  actionCreatorCheck?: boolean | ActionCreatorInvariantMiddlewareOptions;\n}\nexport type ThunkMiddlewareFor<S, O extends GetDefaultMiddlewareOptions = {}> = O extends {\n  thunk: false;\n} ? never : O extends {\n  thunk: {\n    extraArgument: infer E;\n  };\n} ? ThunkMiddleware<S, UnknownAction, E> : ThunkMiddleware<S, UnknownAction>;\nexport type GetDefaultMiddleware<S = any> = <O extends GetDefaultMiddlewareOptions = {\n  thunk: true;\n  immutableCheck: true;\n  serializableCheck: true;\n  actionCreatorCheck: true;\n}>(options?: O) => Tuple<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>;\nexport const buildGetDefaultMiddleware = <S = any,>(): GetDefaultMiddleware<S> => function getDefaultMiddleware(options) {\n  const {\n    thunk = true,\n    immutableCheck = true,\n    serializableCheck = true,\n    actionCreatorCheck = true\n  } = options ?? {};\n  let middlewareArray = new Tuple<Middleware[]>();\n\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(thunkMiddleware);\n    } else {\n      middlewareArray.push(withExtraArgument(thunk.extraArgument));\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (immutableCheck) {\n      /* PROD_START_REMOVE_UMD */\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {};\n\n      if (!isBoolean(immutableCheck)) {\n        immutableOptions = immutableCheck;\n      }\n\n      middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\n      /* PROD_STOP_REMOVE_UMD */\n    }\n\n    if (serializableCheck) {\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {};\n\n      if (!isBoolean(serializableCheck)) {\n        serializableOptions = serializableCheck;\n      }\n\n      middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\n    }\n\n    if (actionCreatorCheck) {\n      let actionCreatorOptions: ActionCreatorInvariantMiddlewareOptions = {};\n\n      if (!isBoolean(actionCreatorCheck)) {\n        actionCreatorOptions = actionCreatorCheck;\n      }\n\n      middlewareArray.unshift(createActionCreatorInvariantMiddleware(actionCreatorOptions));\n    }\n  }\n\n  return (middlewareArray as any);\n};","import type { StoreEnhancer } from 'redux';\nexport const SHOULD_AUTOBATCH = 'RTK_autoBatch';\nexport const prepareAutoBatched = <T,>() => (payload: T): {\n  payload: T;\n  meta: unknown;\n} => ({\n  payload,\n  meta: {\n    [SHOULD_AUTOBATCH]: true\n  }\n});\n\nconst createQueueWithTimer = (timeout: number) => {\n  return (notify: () => void) => {\n    setTimeout(notify, timeout);\n  };\n}; // requestAnimationFrame won't exist in SSR environments.\n// Fall back to a vague approximation just to keep from erroring.\n\n\nconst rAF = typeof window !== 'undefined' && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10);\nexport type AutoBatchOptions = {\n  type: 'tick';\n} | {\n  type: 'timer';\n  timeout: number;\n} | {\n  type: 'raf';\n} | {\n  type: 'callback';\n  queueNotification: (notify: () => void) => void;\n};\n/**\n * A Redux store enhancer that watches for \"low-priority\" actions, and delays\n * notifying subscribers until either the queued callback executes or the\n * next \"standard-priority\" action is dispatched.\n *\n * This allows dispatching multiple \"low-priority\" actions in a row with only\n * a single subscriber notification to the UI after the sequence of actions\n * is finished, thus improving UI re-render performance.\n *\n * Watches for actions with the `action.meta[SHOULD_AUTOBATCH]` attribute.\n * This can be added to `action.meta` manually, or by using the\n * `prepareAutoBatched` helper.\n *\n * By default, it will queue a notification for the end of the event loop tick.\n * However, you can pass several other options to configure the behavior:\n * - `{type: 'tick'}`: queues using `queueMicrotask`\n * - `{type: 'timer, timeout: number}`: queues using `setTimeout`\n * - `{type: 'raf'}`: queues using `requestAnimationFrame` (default)\n * - `{type: 'callback', queueNotification: (notify: () => void) => void}`: lets you provide your own callback\n *\n *\n */\n\nexport const autoBatchEnhancer = (options: AutoBatchOptions = {\n  type: 'raf'\n}): StoreEnhancer => next => (...args) => {\n  const store = next(...args);\n  let notifying = true;\n  let shouldNotifyAtEndOfTick = false;\n  let notificationQueued = false;\n  const listeners = new Set<() => void>();\n  const queueCallback = options.type === 'tick' ? queueMicrotask : options.type === 'raf' ? rAF : options.type === 'callback' ? options.queueNotification : createQueueWithTimer(options.timeout);\n\n  const notifyListeners = () => {\n    // We're running at the end of the event loop tick.\n    // Run the real listener callbacks to actually update the UI.\n    notificationQueued = false;\n\n    if (shouldNotifyAtEndOfTick) {\n      shouldNotifyAtEndOfTick = false;\n      listeners.forEach(l => l());\n    }\n  };\n\n  return Object.assign({}, store, {\n    // Override the base `store.subscribe` method to keep original listeners\n    // from running if we're delaying notifications\n    subscribe(listener: () => void) {\n      // Each wrapped listener will only call the real listener if\n      // the `notifying` flag is currently active when it's called.\n      // This lets the base store work as normal, while the actual UI\n      // update becomes controlled by this enhancer.\n      const wrappedListener: typeof listener = () => notifying && listener();\n\n      const unsubscribe = store.subscribe(wrappedListener);\n      listeners.add(listener);\n      return () => {\n        unsubscribe();\n        listeners.delete(listener);\n      };\n    },\n\n    // Override the base `store.dispatch` method so that we can check actions\n    // for the `shouldAutoBatch` flag and determine if batching is active\n    dispatch(action: any) {\n      try {\n        // If the action does _not_ have the `shouldAutoBatch` flag,\n        // we resume/continue normal notify-after-each-dispatch behavior\n        notifying = !action?.meta?.[SHOULD_AUTOBATCH]; // If a `notifyListeners` microtask was queued, you can't cancel it.\n        // Instead, we set a flag so that it's a no-op when it does run\n\n        shouldNotifyAtEndOfTick = !notifying;\n\n        if (shouldNotifyAtEndOfTick) {\n          // We've seen at least 1 action with `SHOULD_AUTOBATCH`. Try to queue\n          // a microtask to notify listeners at the end of the event loop tick.\n          // Make sure we only enqueue this _once_ per tick.\n          if (!notificationQueued) {\n            notificationQueued = true;\n            queueCallback(notifyListeners);\n          }\n        } // Go ahead and process the action as usual, including reducers.\n        // If normal notification behavior is enabled, the store will notify\n        // all of its own listeners, and the wrapper callbacks above will\n        // see `notifying` is true and pass on to the real listener callbacks.\n        // If we're \"batching\" behavior, then the wrapped callbacks will\n        // bail out, causing the base store notification behavior to be no-ops.\n\n\n        return store.dispatch(action);\n      } finally {\n        // Assume we're back to normal behavior after each action\n        notifying = true;\n      }\n    }\n\n  });\n};","import type { StoreEnhancer } from 'redux';\nimport type { AutoBatchOptions } from './autoBatchEnhancer';\nimport { autoBatchEnhancer } from './autoBatchEnhancer';\nimport { Tuple } from './utils';\nimport type { Middlewares } from './configureStore';\nimport type { ExtractDispatchExtensions } from './tsHelpers';\ntype GetDefaultEnhancersOptions = {\n  autoBatch?: boolean | AutoBatchOptions;\n};\nexport type GetDefaultEnhancers<M extends Middlewares<any>> = (options?: GetDefaultEnhancersOptions) => Tuple<[StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>]>;\nexport const buildGetDefaultEnhancers = <M extends Middlewares<any>,>(middlewareEnhancer: StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>): GetDefaultEnhancers<M> => function getDefaultEnhancers(options) {\n  const {\n    autoBatch = true\n  } = options ?? {};\n  let enhancerArray = new Tuple<StoreEnhancer[]>(middlewareEnhancer);\n\n  if (autoBatch) {\n    enhancerArray.push(autoBatchEnhancer(typeof autoBatch === 'object' ? autoBatch : undefined));\n  }\n\n  return (enhancerArray as any);\n};","import { formatProdErrorMessage as _formatProdErrorMessage6 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Action } from 'redux';\nimport type { CaseReducer, CaseReducers, ActionMatcherDescriptionCollection } from './createReducer';\nimport type { TypeGuard } from './tsHelpers';\nexport interface TypedActionCreator<Type extends string> {\n  (...args: any[]): Action<Type>;\n  type: Type;\n}\n/**\n * A builder for an action <-> reducer map.\n *\n * @public\n */\n\nexport interface ActionReducerMapBuilder<State> {\n  /**\n   * Adds a case reducer to handle a single exact action type.\n   * @remarks\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<ActionCreator extends TypedActionCreator<string>>(actionCreator: ActionCreator, reducer: CaseReducer<State, ReturnType<ActionCreator>>): ActionReducerMapBuilder<State>;\n  /**\n   * Adds a case reducer to handle a single exact action type.\n   * @remarks\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n\n  addCase<Type extends string, A extends Action<Type>>(type: Type, reducer: CaseReducer<State, A>): ActionReducerMapBuilder<State>;\n  /**\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\n   * @remarks\n   * If multiple matcher reducers match, all of them will be executed in the order\n   * they were defined in - even if a case reducer already matched.\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\n   *   function\n   * @param reducer - The actual case reducer function.\n   *\n   * @example\n  ```ts\n  import {\n  createAction,\n  createReducer,\n  AsyncThunk,\n  UnknownAction,\n  } from \"@reduxjs/toolkit\";\n  type GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\n  type PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\n  type RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\n  type FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\n  const initialState: Record<string, string> = {};\n  const resetAction = createAction(\"reset-tracked-loading-state\");\n  function isPendingAction(action: UnknownAction): action is PendingAction {\n  return typeof action.type === \"string\" && action.type.endsWith(\"/pending\");\n  }\n  const reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(resetAction, () => initialState)\n    // matcher can be defined outside as a type predicate function\n    .addMatcher(isPendingAction, (state, action) => {\n      state[action.meta.requestId] = \"pending\";\n    })\n    .addMatcher(\n      // matcher can be defined inline as a type predicate function\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\n      (state, action) => {\n        state[action.meta.requestId] = \"rejected\";\n      }\n    )\n    // matcher can just return boolean and the matcher can receive a generic argument\n    .addMatcher<FulfilledAction>(\n      (action) => action.type.endsWith(\"/fulfilled\"),\n      (state, action) => {\n        state[action.meta.requestId] = \"fulfilled\";\n      }\n    );\n  });\n  ```\n   */\n\n  addMatcher<A>(matcher: TypeGuard<A> | ((action: any) => boolean), reducer: CaseReducer<State, A extends Action ? A : A & Action>): Omit<ActionReducerMapBuilder<State>, 'addCase'>;\n  /**\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\n   * reducer was executed for this action.\n   * @param reducer - The fallback \"default case\" reducer function.\n   *\n   * @example\n  ```ts\n  import { createReducer } from '@reduxjs/toolkit'\n  const initialState = { otherActions: 0 }\n  const reducer = createReducer(initialState, builder => {\n  builder\n    // .addCase(...)\n    // .addMatcher(...)\n    .addDefaultCase((state, action) => {\n      state.otherActions++\n    })\n  })\n  ```\n   */\n\n  addDefaultCase(reducer: CaseReducer<State, Action>): {};\n}\nexport function executeReducerBuilderCallback<S>(builderCallback: (builder: ActionReducerMapBuilder<S>) => void): [CaseReducers<S, any>, ActionMatcherDescriptionCollection<S>, CaseReducer<S, Action> | undefined] {\n  const actionsMap: CaseReducers<S, any> = {};\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = [];\n  let defaultCaseReducer: CaseReducer<S, Action> | undefined;\n  const builder = {\n    addCase(typeOrActionCreator: string | TypedActionCreator<any>, reducer: CaseReducer<S>) {\n      if (process.env.NODE_ENV !== 'production') {\n        /*\n         to keep the definition by the user in line with actual behavior,\n         we enforce `addCase` to always be called before calling `addMatcher`\n         as matching cases take precedence over matchers\n         */\n        if (actionMatchers.length > 0) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(26) : '`builder.addCase` should only be called before calling `builder.addMatcher`');\n        }\n\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(27) : '`builder.addCase` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n\n      const type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n\n      if (!type) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(28) : '`builder.addCase` cannot be called with an empty action type');\n      }\n\n      if (type in actionsMap) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(29) : '`builder.addCase` cannot be called with two reducers for the same action type ' + `'${type}'`);\n      }\n\n      actionsMap[type] = reducer;\n      return builder;\n    },\n\n    addMatcher<A>(matcher: TypeGuard<A>, reducer: CaseReducer<S, A extends Action ? A : A & Action>) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(30) : '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n\n      actionMatchers.push({\n        matcher,\n        reducer\n      });\n      return builder;\n    },\n\n    addDefaultCase(reducer: CaseReducer<S, Action>) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(31) : '`builder.addDefaultCase` can only be called once');\n        }\n      }\n\n      defaultCaseReducer = reducer;\n      return builder;\n    }\n\n  };\n  builderCallback(builder);\n  return [actionsMap, actionMatchers, defaultCaseReducer];\n}","// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n/**\n *\n * @public\n */\n\nexport let nanoid = (size = 21) => {\n  let id = ''; // A compact alternative for `for (var i = 0; i < step; i++)`.\n\n  let i = size;\n\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n\n  return id;\n};","import type { ActionFromMatcher, Matcher, UnionToIntersection } from './tsHelpers';\nimport { hasMatchFunction } from './tsHelpers';\nimport type { AsyncThunk, AsyncThunkFulfilledActionCreator, AsyncThunkPendingActionCreator, AsyncThunkRejectedActionCreator } from './createAsyncThunk';\n/** @public */\n\nexport type ActionMatchingAnyOf<Matchers extends [...Matcher<any>[]]> = ActionFromMatcher<Matchers[number]>;\n/** @public */\n\nexport type ActionMatchingAllOf<Matchers extends [...Matcher<any>[]]> = UnionToIntersection<ActionMatchingAnyOf<Matchers>>;\n\nconst matches = (matcher: Matcher<any>, action: any) => {\n  if (hasMatchFunction(matcher)) {\n    return matcher.match(action);\n  } else {\n    return matcher(action);\n  }\n};\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action matches any one of the supplied type guards or action\n * creators.\n *\n * @param matchers The type guards or action creators to match against.\n *\n * @public\n */\n\n\nexport function isAnyOf<Matchers extends [...Matcher<any>[]]>(...matchers: Matchers) {\n  return (action: any): action is ActionMatchingAnyOf<Matchers> => {\n    return matchers.some(matcher => matches(matcher, action));\n  };\n}\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action matches all of the supplied type guards or action\n * creators.\n *\n * @param matchers The type guards or action creators to match against.\n *\n * @public\n */\n\nexport function isAllOf<Matchers extends [...Matcher<any>[]]>(...matchers: Matchers) {\n  return (action: any): action is ActionMatchingAllOf<Matchers> => {\n    return matchers.every(matcher => matches(matcher, action));\n  };\n}\n/**\n * @param action A redux action\n * @param validStatus An array of valid meta.requestStatus values\n *\n * @internal\n */\n\nexport function hasExpectedRequestMetadata(action: any, validStatus: readonly string[]) {\n  if (!action || !action.meta) return false;\n  const hasValidRequestId = typeof action.meta.requestId === 'string';\n  const hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;\n  return hasValidRequestId && hasValidRequestStatus;\n}\n\nfunction isAsyncThunkArray(a: [any] | AnyAsyncThunk[]): a is AnyAsyncThunk[] {\n  return typeof a[0] === 'function' && 'pending' in a[0] && 'fulfilled' in a[0] && 'rejected' in a[0];\n}\n\nexport type UnknownAsyncThunkPendingAction = ReturnType<AsyncThunkPendingActionCreator<unknown>>;\nexport type PendingActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['pending']>;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is pending.\n *\n * @public\n */\n\nexport function isPending(): (action: any) => action is UnknownAsyncThunkPendingAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is pending.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\n\nexport function isPending<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is PendingActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a pending thunk action\n * @public\n */\n\nexport function isPending(action: any): action is UnknownAsyncThunkPendingAction;\nexport function isPending<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending']);\n  }\n\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isPending()(asyncThunks[0]);\n  }\n\n  return (action: any): action is PendingActionFromAsyncThunk<AsyncThunks[number]> => {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = (asyncThunks.map(asyncThunk => asyncThunk.pending) as any);\n    const combinedMatcher = isAnyOf(...matchers);\n    return combinedMatcher(action);\n  };\n}\nexport type UnknownAsyncThunkRejectedAction = ReturnType<AsyncThunkRejectedActionCreator<unknown, unknown>>;\nexport type RejectedActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['rejected']>;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is rejected.\n *\n * @public\n */\n\nexport function isRejected(): (action: any) => action is UnknownAsyncThunkRejectedAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is rejected.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\n\nexport function isRejected<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is RejectedActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a rejected thunk action\n * @public\n */\n\nexport function isRejected(action: any): action is UnknownAsyncThunkRejectedAction;\nexport function isRejected<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['rejected']);\n  }\n\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejected()(asyncThunks[0]);\n  }\n\n  return (action: any): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = (asyncThunks.map(asyncThunk => asyncThunk.rejected) as any);\n    const combinedMatcher = isAnyOf(...matchers);\n    return combinedMatcher(action);\n  };\n}\nexport type UnknownAsyncThunkRejectedWithValueAction = ReturnType<AsyncThunkRejectedActionCreator<unknown, unknown>>;\nexport type RejectedWithValueActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['rejected']> & (T extends AsyncThunk<any, any, {\n  rejectValue: infer RejectedValue;\n}> ? {\n  payload: RejectedValue;\n} : unknown);\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is rejected with value.\n *\n * @public\n */\n\nexport function isRejectedWithValue(): (action: any) => action is UnknownAsyncThunkRejectedAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is rejected with value.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\n\nexport function isRejectedWithValue<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is RejectedWithValueActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a rejected thunk action with value\n * @public\n */\n\nexport function isRejectedWithValue(action: any): action is UnknownAsyncThunkRejectedAction;\nexport function isRejectedWithValue<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  const hasFlag = (action: any): action is any => {\n    return action && action.meta && action.meta.rejectedWithValue;\n  };\n\n  if (asyncThunks.length === 0) {\n    return (action: any) => {\n      const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag);\n      return combinedMatcher(action);\n    };\n  }\n\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejectedWithValue()(asyncThunks[0]);\n  }\n\n  return (action: any): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\n    const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag);\n    return combinedMatcher(action);\n  };\n}\nexport type UnknownAsyncThunkFulfilledAction = ReturnType<AsyncThunkFulfilledActionCreator<unknown, unknown>>;\nexport type FulfilledActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['fulfilled']>;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is fulfilled.\n *\n * @public\n */\n\nexport function isFulfilled(): (action: any) => action is UnknownAsyncThunkFulfilledAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is fulfilled.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\n\nexport function isFulfilled<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is FulfilledActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a fulfilled thunk action\n * @public\n */\n\nexport function isFulfilled(action: any): action is UnknownAsyncThunkFulfilledAction;\nexport function isFulfilled<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['fulfilled']);\n  }\n\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isFulfilled()(asyncThunks[0]);\n  }\n\n  return (action: any): action is FulfilledActionFromAsyncThunk<AsyncThunks[number]> => {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = (asyncThunks.map(asyncThunk => asyncThunk.fulfilled) as any);\n    const combinedMatcher = isAnyOf(...matchers);\n    return combinedMatcher(action);\n  };\n}\nexport type UnknownAsyncThunkAction = UnknownAsyncThunkPendingAction | UnknownAsyncThunkRejectedAction | UnknownAsyncThunkFulfilledAction;\nexport type AnyAsyncThunk = {\n  pending: {\n    match: (action: any) => action is any;\n  };\n  fulfilled: {\n    match: (action: any) => action is any;\n  };\n  rejected: {\n    match: (action: any) => action is any;\n  };\n};\nexport type ActionsFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['pending']> | ActionFromMatcher<T['fulfilled']> | ActionFromMatcher<T['rejected']>;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator.\n *\n * @public\n */\n\nexport function isAsyncThunkAction(): (action: any) => action is UnknownAsyncThunkAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\n\nexport function isAsyncThunkAction<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is ActionsFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a thunk action\n * @public\n */\n\nexport function isAsyncThunkAction(action: any): action is UnknownAsyncThunkAction;\nexport function isAsyncThunkAction<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending', 'fulfilled', 'rejected']);\n  }\n\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isAsyncThunkAction()(asyncThunks[0]);\n  }\n\n  return (action: any): action is ActionsFromAsyncThunk<AsyncThunks[number]> => {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = ([] as any);\n\n    for (const asyncThunk of asyncThunks) {\n      matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);\n    }\n\n    const combinedMatcher = isAnyOf(...matchers);\n    return combinedMatcher(action);\n  };\n}","import type { Dispatch, UnknownAction } from 'redux';\nimport type { PayloadAction, ActionCreatorWithPreparedPayload } from './createAction';\nimport { createAction } from './createAction';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport type { ActionFromMatcher, FallbackIfUnknown, Id, IsAny, IsUnknown, SafePromise, TypeGuard } from './tsHelpers';\nimport { nanoid } from './nanoid';\nimport { isAnyOf } from './matchers'; // @ts-ignore we need the import of these types due to a bundling issue.\n\ntype _Keep = PayloadAction | ActionCreatorWithPreparedPayload<any, unknown>;\nexport type BaseThunkAPI<S, E, D extends Dispatch = Dispatch, RejectedValue = unknown, RejectedMeta = unknown, FulfilledMeta = unknown> = {\n  dispatch: D;\n  getState: () => S;\n  extra: E;\n  requestId: string;\n  signal: AbortSignal;\n  abort: (reason?: string) => void;\n  rejectWithValue: IsUnknown<RejectedMeta, (value: RejectedValue) => RejectWithValue<RejectedValue, RejectedMeta>, (value: RejectedValue, meta: RejectedMeta) => RejectWithValue<RejectedValue, RejectedMeta>>;\n  fulfillWithValue: IsUnknown<FulfilledMeta, <FulfilledValue>(value: FulfilledValue) => FulfilledValue, <FulfilledValue>(value: FulfilledValue, meta: FulfilledMeta) => FulfillWithMeta<FulfilledValue, FulfilledMeta>>;\n};\n/**\n * @public\n */\n\nexport interface SerializedError {\n  name?: string;\n  message?: string;\n  stack?: string;\n  code?: string;\n}\nconst commonProperties: Array<keyof SerializedError> = ['name', 'message', 'stack', 'code'];\n\nclass RejectWithValue<Payload, RejectedMeta> {\n  /*\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\n  does not exist at runtime\n  */\n  private readonly _type!: 'RejectWithValue';\n\n  constructor(public readonly payload: Payload, public readonly meta: RejectedMeta) {}\n\n}\n\nclass FulfillWithMeta<Payload, FulfilledMeta> {\n  /*\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\n  does not exist at runtime\n  */\n  private readonly _type!: 'FulfillWithMeta';\n\n  constructor(public readonly payload: Payload, public readonly meta: FulfilledMeta) {}\n\n}\n/**\n * Serializes an error into a plain object.\n * Reworked from https://github.com/sindresorhus/serialize-error\n *\n * @public\n */\n\n\nexport const miniSerializeError = (value: any): SerializedError => {\n  if (typeof value === 'object' && value !== null) {\n    const simpleError: SerializedError = {};\n\n    for (const property of commonProperties) {\n      if (typeof value[property] === 'string') {\n        simpleError[property] = value[property];\n      }\n    }\n\n    return simpleError;\n  }\n\n  return {\n    message: String(value)\n  };\n};\nexport type AsyncThunkConfig = {\n  state?: unknown;\n  dispatch?: Dispatch;\n  extra?: unknown;\n  rejectValue?: unknown;\n  serializedErrorType?: unknown;\n  pendingMeta?: unknown;\n  fulfilledMeta?: unknown;\n  rejectedMeta?: unknown;\n};\ntype GetState<ThunkApiConfig> = ThunkApiConfig extends {\n  state: infer State;\n} ? State : unknown;\ntype GetExtra<ThunkApiConfig> = ThunkApiConfig extends {\n  extra: infer Extra;\n} ? Extra : unknown;\ntype GetDispatch<ThunkApiConfig> = ThunkApiConfig extends {\n  dispatch: infer Dispatch;\n} ? FallbackIfUnknown<Dispatch, ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, UnknownAction>> : ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, UnknownAction>;\nexport type GetThunkAPI<ThunkApiConfig> = BaseThunkAPI<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, GetDispatch<ThunkApiConfig>, GetRejectValue<ThunkApiConfig>, GetRejectedMeta<ThunkApiConfig>, GetFulfilledMeta<ThunkApiConfig>>;\ntype GetRejectValue<ThunkApiConfig> = ThunkApiConfig extends {\n  rejectValue: infer RejectValue;\n} ? RejectValue : unknown;\ntype GetPendingMeta<ThunkApiConfig> = ThunkApiConfig extends {\n  pendingMeta: infer PendingMeta;\n} ? PendingMeta : unknown;\ntype GetFulfilledMeta<ThunkApiConfig> = ThunkApiConfig extends {\n  fulfilledMeta: infer FulfilledMeta;\n} ? FulfilledMeta : unknown;\ntype GetRejectedMeta<ThunkApiConfig> = ThunkApiConfig extends {\n  rejectedMeta: infer RejectedMeta;\n} ? RejectedMeta : unknown;\ntype GetSerializedErrorType<ThunkApiConfig> = ThunkApiConfig extends {\n  serializedErrorType: infer GetSerializedErrorType;\n} ? GetSerializedErrorType : SerializedError;\ntype MaybePromise<T> = T | Promise<T> | (T extends any ? Promise<T> : never);\n/**\n * A type describing the return value of the `payloadCreator` argument to `createAsyncThunk`.\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\n *\n * @public\n */\n\nexport type AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig extends AsyncThunkConfig> = MaybePromise<IsUnknown<GetFulfilledMeta<ThunkApiConfig>, Returned, FulfillWithMeta<Returned, GetFulfilledMeta<ThunkApiConfig>>> | RejectWithValue<GetRejectValue<ThunkApiConfig>, GetRejectedMeta<ThunkApiConfig>>>;\n/**\n * A type describing the `payloadCreator` argument to `createAsyncThunk`.\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\n *\n * @public\n */\n\nexport type AsyncThunkPayloadCreator<Returned, ThunkArg = void, ThunkApiConfig extends AsyncThunkConfig = {}> = (arg: ThunkArg, thunkAPI: GetThunkAPI<ThunkApiConfig>) => AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig>;\n/**\n * A ThunkAction created by `createAsyncThunk`.\n * Dispatching it returns a Promise for either a\n * fulfilled or rejected action.\n * Also, the returned value contains an `abort()` method\n * that allows the asyncAction to be cancelled from the outside.\n *\n * @public\n */\n\nexport type AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig> = (dispatch: GetDispatch<ThunkApiConfig>, getState: () => GetState<ThunkApiConfig>, extra: GetExtra<ThunkApiConfig>) => SafePromise<ReturnType<AsyncThunkFulfilledActionCreator<Returned, ThunkArg>> | ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>>> & {\n  abort: (reason?: string) => void;\n  requestId: string;\n  arg: ThunkArg;\n  unwrap: () => Promise<Returned>;\n};\ntype AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig> = IsAny<ThunkArg, // any handling\n(arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>, // unknown handling\nunknown extends ThunkArg ? (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument not specified or specified as void or undefined\n: [ThunkArg] extends [void] | [undefined] ? () => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains void\n: [void] extends [ThunkArg] // make optional\n? (arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains undefined\n: [undefined] extends [ThunkArg] ? WithStrictNullChecks< // with strict nullChecks: make optional\n(arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>, // without strict null checks this will match everything, so don't make it optional\n(arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>> // default case: normal argument\n: (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>>;\n/**\n * Options object for `createAsyncThunk`.\n *\n * @public\n */\n\nexport type AsyncThunkOptions<ThunkArg = void, ThunkApiConfig extends AsyncThunkConfig = {}> = {\n  /**\n   * A method to control whether the asyncThunk should be executed. Has access to the\n   * `arg`, `api.getState()` and `api.extra` arguments.\n   *\n   * @returns `false` if it should be skipped\n   */\n  condition?(arg: ThunkArg, api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>): MaybePromise<boolean | undefined>;\n  /**\n   * If `condition` returns `false`, the asyncThunk will be skipped.\n   * This option allows you to control whether a `rejected` action with `meta.condition == false`\n   * will be dispatched or not.\n   *\n   * @default `false`\n   */\n\n  dispatchConditionRejection?: boolean;\n  serializeError?: (x: unknown) => GetSerializedErrorType<ThunkApiConfig>;\n  /**\n   * A function to use when generating the `requestId` for the request sequence.\n   *\n   * @default `nanoid`\n   */\n\n  idGenerator?: (arg: ThunkArg) => string;\n} & IsUnknown<GetPendingMeta<ThunkApiConfig>, {\n  /**\n   * A method to generate additional properties to be added to `meta` of the pending action.\n   *\n   * Using this optional overload will not modify the types correctly, this overload is only in place to support JavaScript users.\n   * Please use the `ThunkApiConfig` parameter `pendingMeta` to get access to a correctly typed overload\n   */\n  getPendingMeta?(base: {\n    arg: ThunkArg;\n    requestId: string;\n  }, api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>): GetPendingMeta<ThunkApiConfig>;\n}, {\n  /**\n   * A method to generate additional properties to be added to `meta` of the pending action.\n   */\n  getPendingMeta(base: {\n    arg: ThunkArg;\n    requestId: string;\n  }, api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>): GetPendingMeta<ThunkApiConfig>;\n}>;\nexport type AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig = {}> = ActionCreatorWithPreparedPayload<[string, ThunkArg, GetPendingMeta<ThunkApiConfig>?], undefined, string, never, {\n  arg: ThunkArg;\n  requestId: string;\n  requestStatus: 'pending';\n} & GetPendingMeta<ThunkApiConfig>>;\nexport type AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig = {}> = ActionCreatorWithPreparedPayload<[Error | null, string, ThunkArg, GetRejectValue<ThunkApiConfig>?, GetRejectedMeta<ThunkApiConfig>?], GetRejectValue<ThunkApiConfig> | undefined, string, GetSerializedErrorType<ThunkApiConfig>, {\n  arg: ThunkArg;\n  requestId: string;\n  requestStatus: 'rejected';\n  aborted: boolean;\n  condition: boolean;\n} & (({\n  rejectedWithValue: false;\n} & { [K in keyof GetRejectedMeta<ThunkApiConfig>]?: undefined }) | ({\n  rejectedWithValue: true;\n} & GetRejectedMeta<ThunkApiConfig>))>;\nexport type AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig = {}> = ActionCreatorWithPreparedPayload<[Returned, string, ThunkArg, GetFulfilledMeta<ThunkApiConfig>?], Returned, string, never, {\n  arg: ThunkArg;\n  requestId: string;\n  requestStatus: 'fulfilled';\n} & GetFulfilledMeta<ThunkApiConfig>>;\n/**\n * A type describing the return value of `createAsyncThunk`.\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\n *\n * @public\n */\n\nexport type AsyncThunk<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig> = AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig> & {\n  pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig>;\n  rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>;\n  fulfilled: AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig>; // matchSettled?\n\n  settled: (action: any) => action is ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> | AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig>>;\n  typePrefix: string;\n};\nexport type OverrideThunkApiConfigs<OldConfig, NewConfig> = Id<NewConfig & Omit<OldConfig, keyof NewConfig>>;\ntype CreateAsyncThunk<CurriedThunkApiConfig extends AsyncThunkConfig> = {\n  /**\n   *\n   * @param typePrefix\n   * @param payloadCreator\n   * @param options\n   *\n   * @public\n   */\n  // separate signature without `AsyncThunkConfig` for better inference\n  <Returned, ThunkArg = void>(typePrefix: string, payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, CurriedThunkApiConfig>, options?: AsyncThunkOptions<ThunkArg, CurriedThunkApiConfig>): AsyncThunk<Returned, ThunkArg, CurriedThunkApiConfig>;\n  /**\n   *\n   * @param typePrefix\n   * @param payloadCreator\n   * @param options\n   *\n   * @public\n   */\n\n  <Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig>(typePrefix: string, payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>, options?: AsyncThunkOptions<ThunkArg, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>): AsyncThunk<Returned, ThunkArg, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n  withTypes<ThunkApiConfig extends AsyncThunkConfig>(): CreateAsyncThunk<OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n};\nexport const createAsyncThunk = /* @__PURE__ */(() => {\n  function createAsyncThunk<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig>(typePrefix: string, payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>, options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> {\n    type RejectedValue = GetRejectValue<ThunkApiConfig>;\n    type PendingMeta = GetPendingMeta<ThunkApiConfig>;\n    type FulfilledMeta = GetFulfilledMeta<ThunkApiConfig>;\n    type RejectedMeta = GetRejectedMeta<ThunkApiConfig>;\n    const fulfilled: AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig> = createAction(typePrefix + '/fulfilled', (payload: Returned, requestId: string, arg: ThunkArg, meta?: FulfilledMeta) => ({\n      payload,\n      meta: { ...((meta as any) || {}),\n        arg,\n        requestId,\n        requestStatus: ('fulfilled' as const)\n      }\n    }));\n    const pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig> = createAction(typePrefix + '/pending', (requestId: string, arg: ThunkArg, meta?: PendingMeta) => ({\n      payload: undefined,\n      meta: { ...((meta as any) || {}),\n        arg,\n        requestId,\n        requestStatus: ('pending' as const)\n      }\n    }));\n    const rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> = createAction(typePrefix + '/rejected', (error: Error | null, requestId: string, arg: ThunkArg, payload?: RejectedValue, meta?: RejectedMeta) => ({\n      payload,\n      error: ((options && options.serializeError || miniSerializeError)(error || 'Rejected') as GetSerializedErrorType<ThunkApiConfig>),\n      meta: { ...((meta as any) || {}),\n        arg,\n        requestId,\n        rejectedWithValue: !!payload,\n        requestStatus: ('rejected' as const),\n        aborted: error?.name === 'AbortError',\n        condition: error?.name === 'ConditionError'\n      }\n    }));\n\n    function actionCreator(arg: ThunkArg): AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> {\n      return (dispatch, getState, extra) => {\n        const requestId = options?.idGenerator ? options.idGenerator(arg) : nanoid();\n        const abortController = new AbortController();\n        let abortHandler: (() => void) | undefined;\n        let abortReason: string | undefined;\n\n        function abort(reason?: string) {\n          abortReason = reason;\n          abortController.abort();\n        }\n\n        const promise = async function () {\n          let finalAction: ReturnType<typeof fulfilled | typeof rejected>;\n\n          try {\n            let conditionResult = options?.condition?.(arg, {\n              getState,\n              extra\n            });\n\n            if (isThenable(conditionResult)) {\n              conditionResult = await conditionResult;\n            }\n\n            if (conditionResult === false || abortController.signal.aborted) {\n              // eslint-disable-next-line no-throw-literal\n              throw {\n                name: 'ConditionError',\n                message: 'Aborted due to condition callback returning false.'\n              };\n            }\n\n            const abortedPromise = new Promise<never>((_, reject) => {\n              abortHandler = () => {\n                reject({\n                  name: 'AbortError',\n                  message: abortReason || 'Aborted'\n                });\n              };\n\n              abortController.signal.addEventListener('abort', abortHandler);\n            });\n            dispatch((pending(requestId, arg, options?.getPendingMeta?.({\n              requestId,\n              arg\n            }, {\n              getState,\n              extra\n            })) as any));\n            finalAction = await Promise.race([abortedPromise, Promise.resolve(payloadCreator(arg, {\n              dispatch,\n              getState,\n              extra,\n              requestId,\n              signal: abortController.signal,\n              abort,\n              rejectWithValue: (((value: RejectedValue, meta?: RejectedMeta) => {\n                return new RejectWithValue(value, meta);\n              }) as any),\n              fulfillWithValue: (((value: unknown, meta?: FulfilledMeta) => {\n                return new FulfillWithMeta(value, meta);\n              }) as any)\n            })).then(result => {\n              if (result instanceof RejectWithValue) {\n                throw result;\n              }\n\n              if (result instanceof FulfillWithMeta) {\n                return fulfilled(result.payload, requestId, arg, result.meta);\n              }\n\n              return fulfilled((result as any), requestId, arg);\n            })]);\n          } catch (err) {\n            finalAction = err instanceof RejectWithValue ? rejected(null, requestId, arg, err.payload, err.meta) : rejected((err as any), requestId, arg);\n          } finally {\n            if (abortHandler) {\n              abortController.signal.removeEventListener('abort', abortHandler);\n            }\n          } // We dispatch the result action _after_ the catch, to avoid having any errors\n          // here get swallowed by the try/catch block,\n          // per https://twitter.com/dan_abramov/status/770914221638942720\n          // and https://github.com/reduxjs/redux-toolkit/blob/e85eb17b39a2118d859f7b7746e0f3fee523e089/docs/tutorials/advanced-tutorial.md#async-error-handling-logic-in-thunks\n\n\n          const skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && (finalAction as any).meta.condition;\n\n          if (!skipDispatch) {\n            dispatch((finalAction as any));\n          }\n\n          return finalAction;\n        }();\n\n        return Object.assign((promise as SafePromise<any>), {\n          abort,\n          requestId,\n          arg,\n\n          unwrap() {\n            return promise.then<any>(unwrapResult);\n          }\n\n        });\n      };\n    }\n\n    return Object.assign((actionCreator as AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig>), {\n      pending,\n      rejected,\n      fulfilled,\n      settled: isAnyOf(rejected, fulfilled),\n      typePrefix\n    });\n  }\n\n  createAsyncThunk.withTypes = () => createAsyncThunk;\n\n  return (createAsyncThunk as CreateAsyncThunk<AsyncThunkConfig>);\n})();\ninterface UnwrappableAction {\n  payload: any;\n  meta?: any;\n  error?: any;\n}\ntype UnwrappedActionPayload<T extends UnwrappableAction> = Exclude<T, {\n  error: any;\n}>['payload'];\n/**\n * @public\n */\n\nexport function unwrapResult<R extends UnwrappableAction>(action: R): UnwrappedActionPayload<R> {\n  if (action.meta && action.meta.rejectedWithValue) {\n    throw action.payload;\n  }\n\n  if (action.error) {\n    throw action.error;\n  }\n\n  return action.payload;\n}\ntype WithStrictNullChecks<True, False> = undefined extends boolean ? False : True;\n\nfunction isThenable(value: any): value is PromiseLike<any> {\n  return value !== null && typeof value === 'object' && typeof value.then === 'function';\n}","import { formatProdErrorMessage as _formatProdErrorMessage8 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage7 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage6 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Action, UnknownAction, Reducer } from 'redux';\nimport type { Selector } from 'reselect';\nimport type { ActionCreatorWithoutPayload, PayloadAction, PayloadActionCreator, PrepareAction, _ActionCreatorWithPreparedPayload } from './createAction';\nimport { createAction } from './createAction';\nimport type { ActionMatcherDescriptionCollection, CaseReducer, ReducerWithInitialState } from './createReducer';\nimport { createReducer } from './createReducer';\nimport type { ActionReducerMapBuilder, TypedActionCreator } from './mapBuilders';\nimport { executeReducerBuilderCallback } from './mapBuilders';\nimport type { Id, Tail, TypeGuard } from './tsHelpers';\nimport type { InjectConfig } from './combineSlices';\nimport type { AsyncThunk, AsyncThunkConfig, AsyncThunkOptions, AsyncThunkPayloadCreator, OverrideThunkApiConfigs } from './createAsyncThunk';\nimport { createAsyncThunk as _createAsyncThunk } from './createAsyncThunk';\nimport { emplace } from './utils';\nconst asyncThunkSymbol = /* @__PURE__ */Symbol.for('rtk-slice-createasyncthunk'); // type is annotated because it's too long to infer\n\nexport const asyncThunkCreator: {\n  [asyncThunkSymbol]: typeof _createAsyncThunk;\n} = {\n  [asyncThunkSymbol]: _createAsyncThunk\n};\ninterface InjectIntoConfig<NewReducerPath extends string> extends InjectConfig {\n  reducerPath?: NewReducerPath;\n}\n/**\n * The return value of `createSlice`\n *\n * @public\n */\n\nexport interface Slice<State = any, CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> {\n  /**\n   * The slice name.\n   */\n  name: Name;\n  /**\n   *  The slice reducer path.\n   */\n\n  reducerPath: ReducerPath;\n  /**\n   * The slice's reducer.\n   */\n\n  reducer: Reducer<State>;\n  /**\n   * Action creators for the types of actions that are handled by the slice\n   * reducer.\n   */\n\n  actions: CaseReducerActions<CaseReducers, Name>;\n  /**\n   * The individual case reducer functions that were passed in the `reducers` parameter.\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\n   */\n\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>;\n  /**\n   * Provides access to the initial state value given to the slice.\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\n   */\n\n  getInitialState: () => State;\n  /**\n   * Get localised slice selectors (expects to be called with *just* the slice's state as the first parameter)\n   */\n\n  getSelectors(): Id<SliceDefinedSelectors<State, Selectors, State>>;\n  /**\n   * Get globalised slice selectors (`selectState` callback is expected to receive first parameter and return slice state)\n   */\n\n  getSelectors<RootState>(selectState: (rootState: RootState) => State): Id<SliceDefinedSelectors<State, Selectors, RootState>>;\n  /**\n   * Selectors that assume the slice's state is `rootState[slice.reducerPath]` (which is usually the case)\n   *\n   * Equivalent to `slice.getSelectors((state: RootState) => state[slice.reducerPath])`.\n   */\n\n  get selectors(): Id<SliceDefinedSelectors<State, Selectors, { [K in ReducerPath]: State }>>;\n  /**\n   * Inject slice into provided reducer (return value from `combineSlices`), and return injected slice.\n   */\n\n  injectInto<NewReducerPath extends string = ReducerPath>(this: this, injectable: {\n    inject: (slice: {\n      reducerPath: string;\n      reducer: Reducer;\n    }, config?: InjectConfig) => void;\n  }, config?: InjectIntoConfig<NewReducerPath>): InjectedSlice<State, CaseReducers, Name, NewReducerPath, Selectors>;\n  /**\n   * Select the slice state, using the slice's current reducerPath.\n   *\n   * Will throw an error if slice is not found.\n   */\n\n  selectSlice(state: { [K in ReducerPath]: State }): State;\n}\n/**\n * A slice after being called with `injectInto(reducer)`.\n *\n * Selectors can now be called with an `undefined` value, in which case they use the slice's initial state.\n */\n\ninterface InjectedSlice<State = any, CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> extends Omit<Slice<State, CaseReducers, Name, ReducerPath, Selectors>, 'getSelectors' | 'selectors'> {\n  /**\n   * Get localised slice selectors (expects to be called with *just* the slice's state as the first parameter)\n   */\n  getSelectors(): Id<SliceDefinedSelectors<State, Selectors, State | undefined>>;\n  /**\n   * Get globalised slice selectors (`selectState` callback is expected to receive first parameter and return slice state)\n   */\n\n  getSelectors<RootState>(selectState: (rootState: RootState) => State | undefined): Id<SliceDefinedSelectors<State, Selectors, RootState>>;\n  /**\n   * Selectors that assume the slice's state is `rootState[slice.name]` (which is usually the case)\n   *\n   * Equivalent to `slice.getSelectors((state: RootState) => state[slice.name])`.\n   */\n\n  get selectors(): Id<SliceDefinedSelectors<State, Selectors, { [K in ReducerPath]?: State | undefined }>>;\n  /**\n   * Select the slice state, using the slice's current reducerPath.\n   *\n   * Returns initial state if slice is not found.\n   */\n\n  selectSlice(state: { [K in ReducerPath]?: State | undefined }): State;\n}\n/**\n * Options for `createSlice()`.\n *\n * @public\n */\n\nexport interface CreateSliceOptions<State = any, CR extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> {\n  /**\n   * The slice's name. Used to namespace the generated action types.\n   */\n  name: Name;\n  /**\n   * The slice's reducer path. Used when injecting into a combined slice reducer.\n   */\n\n  reducerPath?: ReducerPath;\n  /**\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\n   */\n\n  initialState: State | (() => State);\n  /**\n   * A mapping from action types to action-type-specific *case reducer*\n   * functions. For every action type, a matching action creator will be\n   * generated using `createAction()`.\n   */\n\n  reducers: ValidateSliceCaseReducers<State, CR> | ((creators: ReducerCreators<State>) => CR);\n  /**\n   * A callback that receives a *builder* object to define\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\n   * \n   * \n   * @example\n  ```ts\n  import { createAction, createSlice, Action } from '@reduxjs/toolkit'\n  const incrementBy = createAction<number>('incrementBy')\n  const decrement = createAction('decrement')\n  interface RejectedAction extends Action {\n  error: Error\n  }\n  function isRejectedAction(action: Action): action is RejectedAction {\n  return action.type.endsWith('rejected')\n  }\n  createSlice({\n  name: 'counter',\n  initialState: 0,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(incrementBy, (state, action) => {\n        // action is inferred correctly here if using TS\n      })\n      // You can chain calls, or have separate `builder.addCase()` lines each time\n      .addCase(decrement, (state, action) => {})\n      // You can match a range of action types\n      .addMatcher(\n        isRejectedAction,\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\n        (state, action) => {}\n      )\n      // and provide a default case if no other handlers matched\n      .addDefaultCase((state, action) => {})\n    }\n  })\n  ```\n   */\n\n  extraReducers?: (builder: ActionReducerMapBuilder<State>) => void;\n  /**\n   * A map of selectors that receive the slice's state and any additional arguments, and return a result.\n   */\n\n  selectors?: Selectors;\n}\nexport enum ReducerType {\n  reducer = 'reducer',\n  reducerWithPrepare = 'reducerWithPrepare',\n  asyncThunk = 'asyncThunk',\n}\ninterface ReducerDefinition<T extends ReducerType = ReducerType> {\n  _reducerDefinitionType: T;\n}\nexport interface CaseReducerDefinition<S = any, A extends Action = UnknownAction> extends CaseReducer<S, A>, ReducerDefinition<ReducerType.reducer> {}\n/**\n * A CaseReducer with a `prepare` method.\n *\n * @public\n */\n\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\n  reducer: CaseReducer<State, Action>;\n  prepare: PrepareAction<Action['payload']>;\n};\nexport interface CaseReducerWithPrepareDefinition<State, Action extends PayloadAction> extends CaseReducerWithPrepare<State, Action>, ReducerDefinition<ReducerType.reducerWithPrepare> {}\nexport interface AsyncThunkSliceReducerConfig<State, ThunkArg extends any, Returned = unknown, ThunkApiConfig extends AsyncThunkConfig = {}> {\n  pending?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['pending']>>;\n  rejected?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['rejected']>>;\n  fulfilled?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['fulfilled']>>;\n  settled?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['rejected' | 'fulfilled']>>;\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>;\n}\nexport interface AsyncThunkSliceReducerDefinition<State, ThunkArg extends any, Returned = unknown, ThunkApiConfig extends AsyncThunkConfig = {}> extends AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, ThunkApiConfig>, ReducerDefinition<ReducerType.asyncThunk> {\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>;\n}\n/**\n * Providing these as part of the config would cause circular types, so we disallow passing them\n */\n\ntype PreventCircular<ThunkApiConfig> = { [K in keyof ThunkApiConfig]: K extends 'state' | 'dispatch' ? never : ThunkApiConfig[K] };\ninterface AsyncThunkCreator<State, CurriedThunkApiConfig extends PreventCircular<AsyncThunkConfig> = PreventCircular<AsyncThunkConfig>> {\n  <Returned, ThunkArg = void>(payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, CurriedThunkApiConfig>, config?: AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, CurriedThunkApiConfig>): AsyncThunkSliceReducerDefinition<State, ThunkArg, Returned, CurriedThunkApiConfig>;\n  <Returned, ThunkArg, ThunkApiConfig extends PreventCircular<AsyncThunkConfig> = {}>(payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>, config?: AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, ThunkApiConfig>): AsyncThunkSliceReducerDefinition<State, ThunkArg, Returned, ThunkApiConfig>;\n  withTypes<ThunkApiConfig extends PreventCircular<AsyncThunkConfig>>(): AsyncThunkCreator<State, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n}\nexport interface ReducerCreators<State> {\n  reducer(caseReducer: CaseReducer<State, PayloadAction>): CaseReducerDefinition<State, PayloadAction>;\n  reducer<Payload>(caseReducer: CaseReducer<State, PayloadAction<Payload>>): CaseReducerDefinition<State, PayloadAction<Payload>>;\n  asyncThunk: AsyncThunkCreator<State>;\n  preparedReducer<Prepare extends PrepareAction<any>>(prepare: Prepare, reducer: CaseReducer<State, ReturnType<_ActionCreatorWithPreparedPayload<Prepare>>>): {\n    _reducerDefinitionType: ReducerType.reducerWithPrepare;\n    prepare: Prepare;\n    reducer: CaseReducer<State, ReturnType<_ActionCreatorWithPreparedPayload<Prepare>>>;\n  };\n}\n/**\n * The type describing a slice's `reducers` option.\n *\n * @public\n */\n\nexport type SliceCaseReducers<State> = Record<string, CaseReducerDefinition<State, PayloadAction<any>> | CaseReducerWithPrepareDefinition<State, PayloadAction<any, string, any, any>> | AsyncThunkSliceReducerDefinition<State, any, any, any>> | Record<string, CaseReducer<State, PayloadAction<any>> | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>>;\n/**\n * The type describing a slice's `selectors` option.\n */\n\nexport type SliceSelectors<State> = {\n  [K: string]: (sliceState: State, ...args: any[]) => any;\n};\ntype SliceActionType<SliceName extends string, ActionName extends keyof any> = ActionName extends string | number ? `${SliceName}/${ActionName}` : string;\n/**\n * Derives the slice's `actions` property from the `reducers` options\n *\n * @public\n */\n\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>, SliceName extends string> = { [Type in keyof CaseReducers]: CaseReducers[Type] extends infer Definition ? Definition extends {\n  prepare: any;\n} ? ActionCreatorForCaseReducerWithPrepare<Definition, SliceActionType<SliceName, Type>> : Definition extends AsyncThunkSliceReducerDefinition<any, infer ThunkArg, infer Returned, infer ThunkApiConfig> ? AsyncThunk<Returned, ThunkArg, ThunkApiConfig> : Definition extends {\n  reducer: any;\n} ? ActionCreatorForCaseReducer<Definition['reducer'], SliceActionType<SliceName, Type>> : ActionCreatorForCaseReducer<Definition, SliceActionType<SliceName, Type>> : never };\n/**\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\n *\n * @internal\n */\n\ntype ActionCreatorForCaseReducerWithPrepare<CR extends {\n  prepare: any;\n}, Type extends string> = _ActionCreatorWithPreparedPayload<CR['prepare'], Type>;\n/**\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\n *\n * @internal\n */\n\ntype ActionCreatorForCaseReducer<CR, Type extends string> = CR extends (state: any, action: infer Action) => any ? Action extends {\n  payload: infer P;\n} ? PayloadActionCreator<P, Type> : ActionCreatorWithoutPayload<Type> : ActionCreatorWithoutPayload<Type>;\n/**\n * Extracts the CaseReducers out of a `reducers` object, even if they are\n * tested into a `CaseReducerWithPrepare`.\n *\n * @internal\n */\n\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = { [Type in keyof CaseReducers]: CaseReducers[Type] extends infer Definition ? Definition extends AsyncThunkSliceReducerDefinition<any, any, any, any> ? Id<Pick<Required<Definition>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>> : Definition extends {\n  reducer: infer Reducer;\n} ? Reducer : Definition : never };\ntype RemappedSelector<S extends Selector, NewState> = S extends Selector<any, infer R, infer P> ? Selector<NewState, R, P> & {\n  unwrapped: S;\n} : never;\n/**\n * Extracts the final selector type from the `selectors` object.\n *\n * Removes the `string` index signature from the default value.\n */\n\ntype SliceDefinedSelectors<State, Selectors extends SliceSelectors<State>, RootState> = { [K in keyof Selectors as string extends K ? never : K]: RemappedSelector<Selectors[K], RootState> };\n/**\n * Used on a SliceCaseReducers object.\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\n * the `reducer` and the `prepare` function use the same type of `payload`.\n *\n * Might do additional such checks in the future.\n *\n * This type is only ever useful if you want to write your own wrapper around\n * `createSlice`. Please don't use it otherwise!\n *\n * @public\n */\n\nexport type ValidateSliceCaseReducers<S, ACR extends SliceCaseReducers<S>> = ACR & { [T in keyof ACR]: ACR[T] extends {\n  reducer(s: S, action?: infer A): any;\n} ? {\n  prepare(...a: never[]): Omit<A, 'type'>;\n} : {} };\n\nfunction getType(slice: string, actionKey: string): string {\n  return `${slice}/${actionKey}`;\n}\n\ninterface BuildCreateSliceConfig {\n  creators?: {\n    asyncThunk?: typeof asyncThunkCreator;\n  };\n}\nexport function buildCreateSlice({\n  creators\n}: BuildCreateSliceConfig = {}) {\n  const cAT = creators?.asyncThunk?.[asyncThunkSymbol];\n  return function createSlice<State, CaseReducers extends SliceCaseReducers<State>, Name extends string, Selectors extends SliceSelectors<State>, ReducerPath extends string = Name>(options: CreateSliceOptions<State, CaseReducers, Name, ReducerPath, Selectors>): Slice<State, CaseReducers, Name, ReducerPath, Selectors> {\n    const {\n      name,\n      reducerPath = ((name as unknown) as ReducerPath)\n    } = options;\n\n    if (!name) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(11) : '`name` is a required option for createSlice');\n    }\n\n    if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n      if (options.initialState === undefined) {\n        console.error('You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`');\n      }\n    }\n\n    const reducers = (typeof options.reducers === 'function' ? options.reducers(buildReducerCreators<State>()) : options.reducers) || {};\n    const reducerNames = Object.keys(reducers);\n    const context: ReducerHandlingContext<State> = {\n      sliceCaseReducersByName: {},\n      sliceCaseReducersByType: {},\n      actionCreators: {},\n      sliceMatchers: []\n    };\n    const contextMethods: ReducerHandlingContextMethods<State> = {\n      addCase(typeOrActionCreator: string | TypedActionCreator<any>, reducer: CaseReducer<State>) {\n        const type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n\n        if (!type) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(12) : '`context.addCase` cannot be called with an empty action type');\n        }\n\n        if (type in context.sliceCaseReducersByType) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(13) : '`context.addCase` cannot be called with two reducers for the same action type: ' + type);\n        }\n\n        context.sliceCaseReducersByType[type] = reducer;\n        return contextMethods;\n      },\n\n      addMatcher(matcher, reducer) {\n        context.sliceMatchers.push({\n          matcher,\n          reducer\n        });\n        return contextMethods;\n      },\n\n      exposeAction(name, actionCreator) {\n        context.actionCreators[name] = actionCreator;\n        return contextMethods;\n      },\n\n      exposeCaseReducer(name, reducer) {\n        context.sliceCaseReducersByName[name] = reducer;\n        return contextMethods;\n      }\n\n    };\n    reducerNames.forEach(reducerName => {\n      const reducerDefinition = reducers[reducerName];\n      const reducerDetails: ReducerDetails = {\n        reducerName,\n        type: getType(name, reducerName),\n        createNotation: typeof options.reducers === 'function'\n      };\n\n      if (isAsyncThunkSliceReducerDefinition<State>(reducerDefinition)) {\n        handleThunkCaseReducerDefinition(reducerDetails, reducerDefinition, contextMethods, cAT);\n      } else {\n        handleNormalReducerDefinition<State>(reducerDetails, reducerDefinition, contextMethods);\n      }\n    });\n\n    function buildReducer() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof options.extraReducers === 'object') {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(14) : \"The object notation for `createSlice.extraReducers` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice\");\n        }\n      }\n\n      const [extraReducers = {}, actionMatchers = [], defaultCaseReducer = undefined] = typeof options.extraReducers === 'function' ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers];\n      const finalCaseReducers = { ...extraReducers,\n        ...context.sliceCaseReducersByType\n      };\n      return createReducer(options.initialState, builder => {\n        for (let key in finalCaseReducers) {\n          builder.addCase(key, (finalCaseReducers[key] as CaseReducer<any>));\n        }\n\n        for (let sM of context.sliceMatchers) {\n          builder.addMatcher(sM.matcher, sM.reducer);\n        }\n\n        for (let m of actionMatchers) {\n          builder.addMatcher(m.matcher, m.reducer);\n        }\n\n        if (defaultCaseReducer) {\n          builder.addDefaultCase(defaultCaseReducer);\n        }\n      });\n    }\n\n    const selectSelf = (state: State) => state;\n\n    const injectedSelectorCache = new Map<boolean, WeakMap<(rootState: any) => State | undefined, Record<string, (rootState: any) => any>>>();\n\n    let _reducer: ReducerWithInitialState<State>;\n\n    function reducer(state: State | undefined, action: UnknownAction) {\n      if (!_reducer) _reducer = buildReducer();\n      return _reducer(state, action);\n    }\n\n    function getInitialState() {\n      if (!_reducer) _reducer = buildReducer();\n      return _reducer.getInitialState();\n    }\n\n    function makeSelectorProps<CurrentReducerPath extends string = ReducerPath>(reducerPath: CurrentReducerPath, injected = false): Pick<Slice<State, CaseReducers, Name, CurrentReducerPath, Selectors>, 'getSelectors' | 'selectors' | 'selectSlice' | 'reducerPath'> {\n      function selectSlice(state: { [K in CurrentReducerPath]: State }) {\n        let sliceState = state[reducerPath];\n\n        if (typeof sliceState === 'undefined') {\n          if (injected) {\n            sliceState = getInitialState();\n          } else if (process.env.NODE_ENV !== 'production') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(15) : 'selectSlice returned undefined for an uninjected slice reducer');\n          }\n        }\n\n        return sliceState;\n      }\n\n      function getSelectors(selectState: (rootState: any) => State = selectSelf) {\n        const selectorCache = emplace(injectedSelectorCache, injected, {\n          insert: () => new WeakMap()\n        });\n        return (emplace(selectorCache, selectState, {\n          insert: () => {\n            const map: Record<string, Selector<any, any>> = {};\n\n            for (const [name, selector] of Object.entries(options.selectors ?? {})) {\n              map[name] = wrapSelector(selector, selectState, getInitialState, injected);\n            }\n\n            return map;\n          }\n        }) as any);\n      }\n\n      return {\n        reducerPath,\n        getSelectors,\n\n        get selectors() {\n          return getSelectors(selectSlice);\n        },\n\n        selectSlice\n      };\n    }\n\n    const slice: Slice<State, CaseReducers, Name, ReducerPath, Selectors> = {\n      name,\n      reducer,\n      actions: (context.actionCreators as any),\n      caseReducers: (context.sliceCaseReducersByName as any),\n      getInitialState,\n      ...makeSelectorProps(reducerPath),\n\n      injectInto(injectable, {\n        reducerPath: pathOpt,\n        ...config\n      } = {}) {\n        const newReducerPath = pathOpt ?? reducerPath;\n        injectable.inject({\n          reducerPath: newReducerPath,\n          reducer\n        }, config);\n        return ({ ...slice,\n          ...makeSelectorProps(newReducerPath, true)\n        } as any);\n      }\n\n    };\n    return slice;\n  };\n}\n\nfunction wrapSelector<State, NewState, S extends Selector<State>>(selector: S, selectState: Selector<NewState, State>, getInitialState: () => State, injected?: boolean) {\n  function wrapper(rootState: NewState, ...args: any[]) {\n    let sliceState = selectState(rootState);\n\n    if (typeof sliceState === 'undefined') {\n      if (injected) {\n        sliceState = getInitialState();\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(16) : 'selectState returned undefined for an uninjected slice reducer');\n      }\n    }\n\n    return selector(sliceState, ...args);\n  }\n\n  wrapper.unwrapped = selector;\n  return (wrapper as RemappedSelector<S, NewState>);\n}\n/**\n * A function that accepts an initial state, an object full of reducer\n * functions, and a \"slice name\", and automatically generates\n * action creators and action types that correspond to the\n * reducers and state.\n *\n * @public\n */\n\n\nexport const createSlice = /* @__PURE__ */buildCreateSlice();\ninterface ReducerHandlingContext<State> {\n  sliceCaseReducersByName: Record<string, CaseReducer<State, any> | Pick<AsyncThunkSliceReducerDefinition<State, any, any, any>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>>;\n  sliceCaseReducersByType: Record<string, CaseReducer<State, any>>;\n  sliceMatchers: ActionMatcherDescriptionCollection<State>;\n  actionCreators: Record<string, Function>;\n}\ninterface ReducerHandlingContextMethods<State> {\n  /**\n   * Adds a case reducer to handle a single action type.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<ActionCreator extends TypedActionCreator<string>>(actionCreator: ActionCreator, reducer: CaseReducer<State, ReturnType<ActionCreator>>): ReducerHandlingContextMethods<State>;\n  /**\n   * Adds a case reducer to handle a single action type.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n\n  addCase<Type extends string, A extends Action<Type>>(type: Type, reducer: CaseReducer<State, A>): ReducerHandlingContextMethods<State>;\n  /**\n   * Allows you to match incoming actions against your own filter function instead of only the `action.type` property.\n   * @remarks\n   * If multiple matcher reducers match, all of them will be executed in the order\n   * they were defined in - even if a case reducer already matched.\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\n   *   function\n   * @param reducer - The actual case reducer function.\n   *\n   */\n\n  addMatcher<A>(matcher: TypeGuard<A>, reducer: CaseReducer<State, A extends Action ? A : A & Action>): ReducerHandlingContextMethods<State>;\n  /**\n   * Add an action to be exposed under the final `slice.actions` key.\n   * @param name The key to be exposed as.\n   * @param actionCreator The action to expose.\n   * @example\n   * context.exposeAction(\"addPost\", createAction<Post>(\"addPost\"));\n   *\n   * export const { addPost } = slice.actions\n   *\n   * dispatch(addPost(post))\n   */\n\n  exposeAction(name: string, actionCreator: Function): ReducerHandlingContextMethods<State>;\n  /**\n   * Add a case reducer to be exposed under the final `slice.caseReducers` key.\n   * @param name The key to be exposed as.\n   * @param reducer The reducer to expose.\n   * @example\n   * context.exposeCaseReducer(\"addPost\", (state, action: PayloadAction<Post>) => {\n   *   state.push(action.payload)\n   * })\n   *\n   * slice.caseReducers.addPost([], addPost(post))\n   */\n\n  exposeCaseReducer(name: string, reducer: CaseReducer<State, any> | Pick<AsyncThunkSliceReducerDefinition<State, any, any, any>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>): ReducerHandlingContextMethods<State>;\n}\ninterface ReducerDetails {\n  /** The key the reducer was defined under */\n  reducerName: string;\n  /** The predefined action type, i.e. `${slice.name}/${reducerName}` */\n\n  type: string;\n  /** Whether create. notation was used when defining reducers */\n\n  createNotation: boolean;\n}\n\nfunction buildReducerCreators<State>(): ReducerCreators<State> {\n  function asyncThunk(payloadCreator: AsyncThunkPayloadCreator<any, any>, config: AsyncThunkSliceReducerConfig<State, any>): AsyncThunkSliceReducerDefinition<State, any> {\n    return {\n      _reducerDefinitionType: ReducerType.asyncThunk,\n      payloadCreator,\n      ...config\n    };\n  }\n\n  asyncThunk.withTypes = () => asyncThunk;\n\n  return {\n    reducer(caseReducer: CaseReducer<State, any>) {\n      return Object.assign({\n        // hack so the wrapping function has the same name as the original\n        // we need to create a wrapper so the `reducerDefinitionType` is not assigned to the original\n        [caseReducer.name](...args: Parameters<typeof caseReducer>) {\n          return caseReducer(...args);\n        }\n\n      }[caseReducer.name], ({\n        _reducerDefinitionType: ReducerType.reducer\n      } as const));\n    },\n\n    preparedReducer(prepare, reducer) {\n      return {\n        _reducerDefinitionType: ReducerType.reducerWithPrepare,\n        prepare,\n        reducer\n      };\n    },\n\n    asyncThunk: (asyncThunk as any)\n  };\n}\n\nfunction handleNormalReducerDefinition<State>({\n  type,\n  reducerName,\n  createNotation\n}: ReducerDetails, maybeReducerWithPrepare: CaseReducer<State, {\n  payload: any;\n  type: string;\n}> | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>, context: ReducerHandlingContextMethods<State>) {\n  let caseReducer: CaseReducer<State, any>;\n  let prepareCallback: PrepareAction<any> | undefined;\n\n  if ('reducer' in maybeReducerWithPrepare) {\n    if (createNotation && !isCaseReducerWithPrepareDefinition(maybeReducerWithPrepare)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(17) : 'Please use the `create.preparedReducer` notation for prepared action creators with the `create` notation.');\n    }\n\n    caseReducer = maybeReducerWithPrepare.reducer;\n    prepareCallback = maybeReducerWithPrepare.prepare;\n  } else {\n    caseReducer = maybeReducerWithPrepare;\n  }\n\n  context.addCase(type, caseReducer).exposeCaseReducer(reducerName, caseReducer).exposeAction(reducerName, prepareCallback ? createAction(type, prepareCallback) : createAction(type));\n}\n\nfunction isAsyncThunkSliceReducerDefinition<State>(reducerDefinition: any): reducerDefinition is AsyncThunkSliceReducerDefinition<State, any, any, any> {\n  return reducerDefinition._reducerDefinitionType === ReducerType.asyncThunk;\n}\n\nfunction isCaseReducerWithPrepareDefinition<State>(reducerDefinition: any): reducerDefinition is CaseReducerWithPrepareDefinition<State, any> {\n  return reducerDefinition._reducerDefinitionType === ReducerType.reducerWithPrepare;\n}\n\nfunction handleThunkCaseReducerDefinition<State>({\n  type,\n  reducerName\n}: ReducerDetails, reducerDefinition: AsyncThunkSliceReducerDefinition<State, any, any, any>, context: ReducerHandlingContextMethods<State>, cAT: typeof _createAsyncThunk | undefined) {\n  if (!cAT) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(18) : 'Cannot use `create.asyncThunk` in the built-in `createSlice`. ' + 'Use `buildCreateSlice({ creators: { asyncThunk: asyncThunkCreator } })` to create a customised version of `createSlice`.');\n  }\n\n  const {\n    payloadCreator,\n    fulfilled,\n    pending,\n    rejected,\n    settled,\n    options\n  } = reducerDefinition;\n  const thunk = cAT(type, payloadCreator, (options as any));\n  context.exposeAction(reducerName, thunk);\n\n  if (fulfilled) {\n    context.addCase(thunk.fulfilled, fulfilled);\n  }\n\n  if (pending) {\n    context.addCase(thunk.pending, pending);\n  }\n\n  if (rejected) {\n    context.addCase(thunk.rejected, rejected);\n  }\n\n  if (settled) {\n    context.addMatcher(thunk.settled, settled);\n  }\n\n  context.exposeCaseReducer(reducerName, {\n    fulfilled: fulfilled || noop,\n    pending: pending || noop,\n    rejected: rejected || noop,\n    settled: settled || noop\n  });\n}\n\nfunction noop() {}","import { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Draft } from 'immer';\nimport { produce as createNextState, isDraft, isDraftable } from 'immer';\nimport type { Action, Reducer, UnknownAction } from 'redux';\nimport type { ActionReducerMapBuilder } from './mapBuilders';\nimport { executeReducerBuilderCallback } from './mapBuilders';\nimport type { NoInfer, TypeGuard } from './tsHelpers';\nimport { freezeDraftable } from './utils';\n/**\n * Defines a mapping from action types to corresponding action object shapes.\n *\n * @deprecated This should not be used manually - it is only used for internal\n *             inference purposes and should not have any further value.\n *             It might be removed in the future.\n * @public\n */\n\nexport type Actions<T extends keyof any = string> = Record<T, Action>;\nexport type ActionMatcherDescription<S, A extends Action> = {\n  matcher: TypeGuard<A>;\n  reducer: CaseReducer<S, NoInfer<A>>;\n};\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<ActionMatcherDescription<S, any>>;\nexport type ActionMatcherDescriptionCollection<S> = Array<ActionMatcherDescription<S, any>>;\n/**\n * A *case reducer* is a reducer function for a specific action type. Case\n * reducers can be composed to full reducers using `createReducer()`.\n *\n * Unlike a normal Redux reducer, a case reducer is never called with an\n * `undefined` state to determine the initial state. Instead, the initial\n * state is explicitly specified as an argument to `createReducer()`.\n *\n * In addition, a case reducer can choose to mutate the passed-in `state`\n * value directly instead of returning a new state. This does not actually\n * cause the store state to be mutated directly; instead, thanks to\n * [immer](https://github.com/mweststrate/immer), the mutations are\n * translated to copy operations that result in a new state.\n *\n * @public\n */\n\nexport type CaseReducer<S = any, A extends Action = UnknownAction> = (state: Draft<S>, action: A) => NoInfer<S> | void | Draft<NoInfer<S>>;\n/**\n * A mapping from action types to case reducers for `createReducer()`.\n *\n * @deprecated This should not be used manually - it is only used\n *             for internal inference purposes and using it manually\n *             would lead to type erasure.\n *             It might be removed in the future.\n * @public\n */\n\nexport type CaseReducers<S, AS extends Actions> = { [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void };\nexport type NotFunction<T> = T extends Function ? never : T;\n\nfunction isStateFunction<S>(x: unknown): x is () => S {\n  return typeof x === 'function';\n}\n\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\n  getInitialState: () => S;\n};\n/**\n * A utility function that allows defining a reducer as a mapping from action\n * type to *case reducer* functions that handle these action types. The\n * reducer's initial state is passed as the first argument.\n *\n * @remarks\n * The body of every case reducer is implicitly wrapped with a call to\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\n * This means that rather than returning a new state object, you can also\n * mutate the passed-in state object directly; these mutations will then be\n * automatically and efficiently translated into copies, giving you both\n * convenience and immutability.\n *\n * @overloadSummary\n * This function accepts a callback that receives a `builder` object as its argument.\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\n * called to define what actions this reducer will handle.\n *\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\n * @example\n```ts\nimport {\n  createAction,\n  createReducer,\n  UnknownAction,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\n\nconst increment = createAction<number>(\"increment\");\nconst decrement = createAction<number>(\"decrement\");\n\nfunction isActionWithNumberPayload(\n  action: UnknownAction\n): action is PayloadAction<number> {\n  return typeof action.payload === \"number\";\n}\n\nconst reducer = createReducer(\n  {\n    counter: 0,\n    sumOfNumberPayloads: 0,\n    unhandledActions: 0,\n  },\n  (builder) => {\n    builder\n      .addCase(increment, (state, action) => {\n        // action is inferred correctly here\n        state.counter += action.payload;\n      })\n      // You can chain calls, or have separate `builder.addCase()` lines each time\n      .addCase(decrement, (state, action) => {\n        state.counter -= action.payload;\n      })\n      // You can apply a \"matcher function\" to incoming actions\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\n      // and provide a default case if no other handlers matched\n      .addDefaultCase((state, action) => {});\n  }\n);\n```\n * @public\n */\n\nexport function createReducer<S extends NotFunction<any>>(initialState: S | (() => S), mapOrBuilderCallback: (builder: ActionReducerMapBuilder<S>) => void): ReducerWithInitialState<S> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof mapOrBuilderCallback === 'object') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(8) : \"The object notation for `createReducer` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer\");\n    }\n  }\n\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] = executeReducerBuilderCallback(mapOrBuilderCallback); // Ensure the initial state gets frozen either way (if draftable)\n\n  let getInitialState: () => S;\n\n  if (isStateFunction(initialState)) {\n    getInitialState = () => freezeDraftable(initialState());\n  } else {\n    const frozenInitialState = freezeDraftable(initialState);\n\n    getInitialState = () => frozenInitialState;\n  }\n\n  function reducer(state = getInitialState(), action: any): S {\n    let caseReducers = [actionsMap[action.type], ...finalActionMatchers.filter(({\n      matcher\n    }) => matcher(action)).map(({\n      reducer\n    }) => reducer)];\n\n    if (caseReducers.filter(cr => !!cr).length === 0) {\n      caseReducers = [finalDefaultCaseReducer];\n    }\n\n    return caseReducers.reduce((previousState, caseReducer): S => {\n      if (caseReducer) {\n        if (isDraft(previousState)) {\n          // If it's already a draft, we must already be inside a `createNextState` call,\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\n          const draft = (previousState as Draft<S>); // We can assume this is already a draft\n\n          const result = caseReducer(draft, action);\n\n          if (result === undefined) {\n            return previousState;\n          }\n\n          return (result as S);\n        } else if (!isDraftable(previousState)) {\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\n          // return the caseReducer func and not wrap it with produce.\n          const result = caseReducer((previousState as any), action);\n\n          if (result === undefined) {\n            if (previousState === null) {\n              return previousState;\n            }\n\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(9) : 'A case reducer on a non-draftable value must not return undefined');\n          }\n\n          return (result as S);\n        } else {\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n          // these two types.\n          return createNextState(previousState, (draft: Draft<S>) => {\n            return caseReducer(draft, action);\n          });\n        }\n      }\n\n      return previousState;\n    }, state);\n  }\n\n  reducer.getInitialState = getInitialState;\n  return (reducer as ReducerWithInitialState<S>);\n}","import type { SerializedError } from '@reduxjs/toolkit';\nconst task = 'task';\nconst listener = 'listener';\nconst completed = 'completed';\nconst cancelled = 'cancelled';\n/* TaskAbortError error codes  */\n\nexport const taskCancelled = (`task-${cancelled}` as const);\nexport const taskCompleted = (`task-${completed}` as const);\nexport const listenerCancelled = (`${listener}-${cancelled}` as const);\nexport const listenerCompleted = (`${listener}-${completed}` as const);\nexport class TaskAbortError implements SerializedError {\n  name = 'TaskAbortError';\n  message: string;\n\n  constructor(public code: string | undefined) {\n    this.message = `${task} ${cancelled} (reason: ${code})`;\n  }\n\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { AbortSignalWithReason } from './types';\nexport const assertFunction: (func: unknown, expected: string) => asserts func is (...args: unknown[]) => unknown = (func: unknown, expected: string) => {\n  if (typeof func !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(32) : `${expected} is not a function`);\n  }\n};\nexport const noop = () => {};\nexport const catchRejection = <T,>(promise: Promise<T>, onError = noop): Promise<T> => {\n  promise.catch(onError);\n  return promise;\n};\nexport const addAbortSignalListener = (abortSignal: AbortSignal, callback: (evt: Event) => void) => {\n  abortSignal.addEventListener('abort', callback, {\n    once: true\n  });\n  return () => abortSignal.removeEventListener('abort', callback);\n};\n/**\n * Calls `abortController.abort(reason)` and patches `signal.reason`.\n * if it is not supported.\n *\n * At the time of writing `signal.reason` is available in FF chrome, edge node 17 and deno.\n * @param abortController\n * @param reason\n * @returns\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/reason\n */\n\nexport const abortControllerWithReason = <T,>(abortController: AbortController, reason: T): void => {\n  type Consumer<T> = (val: T) => void;\n  const signal = (abortController.signal as AbortSignalWithReason<T>);\n\n  if (signal.aborted) {\n    return;\n  } // Patch `reason` if necessary.\n  // - We use defineProperty here because reason is a getter of `AbortSignal.__proto__`.\n  // - We need to patch 'reason' before calling `.abort()` because listeners to the 'abort'\n  // event are are notified immediately.\n\n\n  if (!('reason' in signal)) {\n    Object.defineProperty(signal, 'reason', {\n      enumerable: true,\n      value: reason,\n      configurable: true,\n      writable: true\n    });\n  }\n\n  ;\n  (abortController.abort as Consumer<typeof reason>)(reason);\n};","import { TaskAbortError } from './exceptions';\nimport type { AbortSignalWithReason, TaskResult } from './types';\nimport { addAbortSignalListener, catchRejection, noop } from './utils';\n/**\n * Synchronously raises {@link TaskAbortError} if the task tied to the input `signal` has been cancelled.\n * @param signal\n * @param reason\n * @see {TaskAbortError}\n */\n\nexport const validateActive = (signal: AbortSignal): void => {\n  if (signal.aborted) {\n    const {\n      reason\n    } = (signal as AbortSignalWithReason<string>);\n    throw new TaskAbortError(reason);\n  }\n};\n/**\n * Generates a race between the promise(s) and the AbortSignal\n * This avoids `Promise.race()`-related memory leaks:\n * https://github.com/nodejs/node/issues/17469#issuecomment-349794909\n */\n\nexport function raceWithSignal<T>(signal: AbortSignalWithReason<string>, promise: Promise<T>): Promise<T> {\n  let cleanup = noop;\n  return new Promise<T>((resolve, reject) => {\n    const notifyRejection = () => reject(new TaskAbortError(signal.reason));\n\n    if (signal.aborted) {\n      notifyRejection();\n      return;\n    }\n\n    cleanup = addAbortSignalListener(signal, notifyRejection);\n    promise.finally(() => cleanup()).then(resolve, reject);\n  }).finally(() => {\n    // after this point, replace `cleanup` with a noop, so there is no reference to `signal` any more\n    cleanup = noop;\n  });\n}\n/**\n * Runs a task and returns promise that resolves to {@link TaskResult}.\n * Second argument is an optional `cleanUp` function that always runs after task.\n *\n * **Note:** `runTask` runs the executor in the next microtask.\n * @returns\n */\n\nexport const runTask = async <T,>(task: () => Promise<T>, cleanUp?: () => void): Promise<TaskResult<T>> => {\n  try {\n    await Promise.resolve();\n    const value = await task();\n    return {\n      status: 'ok',\n      value\n    };\n  } catch (error: any) {\n    return {\n      status: error instanceof TaskAbortError ? 'cancelled' : 'rejected',\n      error\n    };\n  } finally {\n    cleanUp?.();\n  }\n};\n/**\n * Given an input `AbortSignal` and a promise returns another promise that resolves\n * as soon the input promise is provided or rejects as soon as\n * `AbortSignal.abort` is `true`.\n * @param signal\n * @returns\n */\n\nexport const createPause = <T,>(signal: AbortSignal) => {\n  return (promise: Promise<T>): Promise<T> => {\n    return catchRejection(raceWithSignal(signal, promise).then(output => {\n      validateActive(signal);\n      return output;\n    }));\n  };\n};\n/**\n * Given an input `AbortSignal` and `timeoutMs` returns a promise that resolves\n * after `timeoutMs` or rejects as soon as `AbortSignal.abort` is `true`.\n * @param signal\n * @returns\n */\n\nexport const createDelay = (signal: AbortSignal) => {\n  const pause = createPause<void>(signal);\n  return (timeoutMs: number): Promise<void> => {\n    return pause(new Promise<void>(resolve => setTimeout(resolve, timeoutMs)));\n  };\n};","import { formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Action, Dispatch, MiddlewareAPI, UnknownAction } from 'redux';\nimport { isAction } from 'redux';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport { createAction } from '../createAction';\nimport { nanoid } from '../nanoid';\nimport { find } from '../utils';\nimport { TaskAbortError, listenerCancelled, listenerCompleted, taskCancelled, taskCompleted } from './exceptions';\nimport { createDelay, createPause, raceWithSignal, runTask, validateActive } from './task';\nimport type { AbortSignalWithReason, AddListenerOverloads, AnyListenerPredicate, CreateListenerMiddlewareOptions, FallbackAddListenerOptions, ForkOptions, ForkedTask, ForkedTaskExecutor, ListenerEntry, ListenerErrorHandler, ListenerErrorInfo, ListenerMiddleware, ListenerMiddlewareInstance, TakePattern, TaskResult, TypedAddListener, TypedCreateListenerEntry, TypedRemoveListener, UnsubscribeListener, UnsubscribeListenerOptions } from './types';\nimport { abortControllerWithReason, addAbortSignalListener, assertFunction, catchRejection, noop } from './utils';\nexport { TaskAbortError } from './exceptions';\nexport type { AsyncTaskExecutor, CreateListenerMiddlewareOptions, ForkedTask, ForkedTaskAPI, ForkedTaskExecutor, ListenerEffect, ListenerEffectAPI, ListenerErrorHandler, ListenerMiddleware, ListenerMiddlewareInstance, SyncTaskExecutor, TaskCancelled, TaskRejected, TaskResolved, TaskResult, TypedAddListener, TypedRemoveListener, TypedStartListening, TypedStopListening, UnsubscribeListener, UnsubscribeListenerOptions } from './types'; //Overly-aggressive byte-shaving\n\nconst {\n  assign\n} = Object;\n/**\n * @internal\n */\n\nconst INTERNAL_NIL_TOKEN = ({} as const);\nconst alm = ('listenerMiddleware' as const);\n\nconst createFork = (parentAbortSignal: AbortSignalWithReason<unknown>, parentBlockingPromises: Promise<any>[]) => {\n  const linkControllers = (controller: AbortController) => addAbortSignalListener(parentAbortSignal, () => abortControllerWithReason(controller, parentAbortSignal.reason));\n\n  return <T,>(taskExecutor: ForkedTaskExecutor<T>, opts?: ForkOptions): ForkedTask<T> => {\n    assertFunction(taskExecutor, 'taskExecutor');\n    const childAbortController = new AbortController();\n    linkControllers(childAbortController);\n    const result = runTask<T>(async (): Promise<T> => {\n      validateActive(parentAbortSignal);\n      validateActive(childAbortController.signal);\n      const result = (await taskExecutor({\n        pause: createPause(childAbortController.signal),\n        delay: createDelay(childAbortController.signal),\n        signal: childAbortController.signal\n      }) as T);\n      validateActive(childAbortController.signal);\n      return result;\n    }, () => abortControllerWithReason(childAbortController, taskCompleted));\n\n    if (opts?.autoJoin) {\n      parentBlockingPromises.push(result.catch(noop));\n    }\n\n    return {\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\n\n      cancel() {\n        abortControllerWithReason(childAbortController, taskCancelled);\n      }\n\n    };\n  };\n};\n\nconst createTakePattern = <S,>(startListening: AddListenerOverloads<UnsubscribeListener, S, Dispatch>, signal: AbortSignal): TakePattern<S> => {\n  /**\n   * A function that takes a ListenerPredicate and an optional timeout,\n   * and resolves when either the predicate returns `true` based on an action\n   * state combination or when the timeout expires.\n   * If the parent listener is canceled while waiting, this will throw a\n   * TaskAbortError.\n   */\n  const take = async <P extends AnyListenerPredicate<S>,>(predicate: P, timeout: number | undefined) => {\n    validateActive(signal); // Placeholder unsubscribe function until the listener is added\n\n    let unsubscribe: UnsubscribeListener = () => {};\n\n    const tuplePromise = new Promise<[Action, S, S]>((resolve, reject) => {\n      // Inside the Promise, we synchronously add the listener.\n      let stopListening = startListening({\n        predicate: (predicate as any),\n        effect: (action, listenerApi): void => {\n          // One-shot listener that cleans up as soon as the predicate passes\n          listenerApi.unsubscribe(); // Resolve the promise with the same arguments the predicate saw\n\n          resolve([action, listenerApi.getState(), listenerApi.getOriginalState()]);\n        }\n      });\n\n      unsubscribe = () => {\n        stopListening();\n        reject();\n      };\n    });\n    const promises: (Promise<null> | Promise<[Action, S, S]>)[] = [tuplePromise];\n\n    if (timeout != null) {\n      promises.push(new Promise<null>(resolve => setTimeout(resolve, timeout, null)));\n    }\n\n    try {\n      const output = await raceWithSignal(signal, Promise.race(promises));\n      validateActive(signal);\n      return output;\n    } finally {\n      // Always clean up the listener\n      unsubscribe();\n    }\n  };\n\n  return (((predicate: AnyListenerPredicate<S>, timeout: number | undefined) => catchRejection(take(predicate, timeout))) as TakePattern<S>);\n};\n\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\n  let {\n    type,\n    actionCreator,\n    matcher,\n    predicate,\n    effect\n  } = options;\n\n  if (type) {\n    predicate = createAction(type).match;\n  } else if (actionCreator) {\n    type = actionCreator!.type;\n    predicate = actionCreator.match;\n  } else if (matcher) {\n    predicate = matcher;\n  } else if (predicate) {// pass\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(21) : 'Creating or removing a listener requires one of the known fields for matching an action');\n  }\n\n  assertFunction(effect, 'options.listener');\n  return {\n    predicate,\n    type,\n    effect\n  };\n};\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\n\n\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = ((Object.assign((options: FallbackAddListenerOptions) => {\n  const {\n    type,\n    predicate,\n    effect\n  } = getListenerEntryPropsFrom(options);\n  const id = nanoid();\n  const entry: ListenerEntry<unknown> = {\n    id,\n    effect,\n    type,\n    predicate,\n    pending: new Set<AbortController>(),\n    unsubscribe: () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(22) : 'Unsubscribe not initialized');\n    }\n  };\n  return entry;\n}, {\n  withTypes: () => createListenerEntry\n}) as unknown) as TypedCreateListenerEntry<unknown>);\n\nconst cancelActiveListeners = (entry: ListenerEntry<unknown, Dispatch<UnknownAction>>) => {\n  entry.pending.forEach(controller => {\n    abortControllerWithReason(controller, listenerCancelled);\n  });\n};\n\nconst createClearListenerMiddleware = (listenerMap: Map<string, ListenerEntry>) => {\n  return () => {\n    listenerMap.forEach(cancelActiveListeners);\n    listenerMap.clear();\n  };\n};\n/**\n * Safely reports errors to the `errorHandler` provided.\n * Errors that occur inside `errorHandler` are notified in a new task.\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\n * @param errorHandler\n * @param errorToNotify\n */\n\n\nconst safelyNotifyError = (errorHandler: ListenerErrorHandler, errorToNotify: unknown, errorInfo: ListenerErrorInfo): void => {\n  try {\n    errorHandler(errorToNotify, errorInfo);\n  } catch (errorHandlerError) {\n    // We cannot let an error raised here block the listener queue.\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\n    setTimeout(() => {\n      throw errorHandlerError;\n    }, 0);\n  }\n};\n/**\n * @public\n */\n\n\nexport const addListener = ((Object.assign(createAction(`${alm}/add`), {\n  withTypes: () => addListener\n}) as unknown) as TypedAddListener<unknown>);\n/**\n * @public\n */\n\nexport const clearAllListeners = createAction(`${alm}/removeAll`);\n/**\n * @public\n */\n\nexport const removeListener = ((Object.assign(createAction(`${alm}/remove`), {\n  withTypes: () => removeListener\n}) as unknown) as TypedRemoveListener<unknown>);\n\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\n  console.error(`${alm}/error`, ...args);\n};\n/**\n * @public\n */\n\n\nexport const createListenerMiddleware = <StateType = unknown, DispatchType extends Dispatch<Action> = ThunkDispatch<StateType, unknown, UnknownAction>, ExtraArgument = unknown>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) => {\n  const listenerMap = new Map<string, ListenerEntry>();\n  const {\n    extra,\n    onError = defaultErrorHandler\n  } = middlewareOptions;\n  assertFunction(onError, 'onError');\n\n  const insertEntry = (entry: ListenerEntry) => {\n    entry.unsubscribe = () => listenerMap.delete(entry!.id);\n\n    listenerMap.set(entry.id, entry);\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\n      entry.unsubscribe();\n\n      if (cancelOptions?.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    };\n  };\n\n  const startListening = (((options: FallbackAddListenerOptions) => {\n    let entry = find(Array.from(listenerMap.values()), existingEntry => existingEntry.effect === options.effect);\n\n    if (!entry) {\n      entry = createListenerEntry((options as any));\n    }\n\n    return insertEntry(entry);\n  }) as AddListenerOverloads<any>);\n  Object.assign(startListening, {\n    withTypes: () => startListening\n  });\n\n  const stopListening = (options: FallbackAddListenerOptions & UnsubscribeListenerOptions): boolean => {\n    const {\n      type,\n      effect,\n      predicate\n    } = getListenerEntryPropsFrom(options);\n    const entry = find(Array.from(listenerMap.values()), entry => {\n      const matchPredicateOrType = typeof type === 'string' ? entry.type === type : entry.predicate === predicate;\n      return matchPredicateOrType && entry.effect === effect;\n    });\n\n    if (entry) {\n      entry.unsubscribe();\n\n      if (options.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    }\n\n    return !!entry;\n  };\n\n  Object.assign(stopListening, {\n    withTypes: () => stopListening\n  });\n\n  const notifyListener = async (entry: ListenerEntry<unknown, Dispatch<UnknownAction>>, action: unknown, api: MiddlewareAPI, getOriginalState: () => StateType) => {\n    const internalTaskController = new AbortController();\n    const take = createTakePattern((startListening as AddListenerOverloads<any>), internalTaskController.signal);\n    const autoJoinPromises: Promise<any>[] = [];\n\n    try {\n      entry.pending.add(internalTaskController);\n      await Promise.resolve(entry.effect(action, // Use assign() rather than ... to avoid extra helper functions added to bundle\n      assign({}, api, {\n        getOriginalState,\n        condition: (predicate: AnyListenerPredicate<any>, timeout?: number) => take(predicate, timeout).then(Boolean),\n        take,\n        delay: createDelay(internalTaskController.signal),\n        pause: createPause<any>(internalTaskController.signal),\n        extra,\n        signal: internalTaskController.signal,\n        fork: createFork(internalTaskController.signal, autoJoinPromises),\n        unsubscribe: entry.unsubscribe,\n        subscribe: () => {\n          listenerMap.set(entry.id, entry);\n        },\n        cancelActiveListeners: () => {\n          entry.pending.forEach((controller, _, set) => {\n            if (controller !== internalTaskController) {\n              abortControllerWithReason(controller, listenerCancelled);\n              set.delete(controller);\n            }\n          });\n        },\n        cancel: () => {\n          abortControllerWithReason(internalTaskController, listenerCancelled);\n          entry.pending.delete(internalTaskController);\n        },\n        throwIfCancelled: () => {\n          validateActive(internalTaskController.signal);\n        }\n      })));\n    } catch (listenerError) {\n      if (!(listenerError instanceof TaskAbortError)) {\n        safelyNotifyError(onError, listenerError, {\n          raisedBy: 'effect'\n        });\n      }\n    } finally {\n      await Promise.all(autoJoinPromises);\n      abortControllerWithReason(internalTaskController, listenerCompleted); // Notify that the task has completed\n\n      entry.pending.delete(internalTaskController);\n    }\n  };\n\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap);\n\n  const middleware: ListenerMiddleware<StateType, DispatchType, ExtraArgument> = api => next => action => {\n    if (!isAction(action)) {\n      // we only want to notify listeners for action objects\n      return next(action);\n    }\n\n    if (addListener.match(action)) {\n      return startListening((action.payload as any));\n    }\n\n    if (clearAllListeners.match(action)) {\n      clearListenerMiddleware();\n      return;\n    }\n\n    if (removeListener.match(action)) {\n      return stopListening(action.payload);\n    } // Need to get this state _before_ the reducer processes the action\n\n\n    let originalState: StateType | typeof INTERNAL_NIL_TOKEN = api.getState(); // `getOriginalState` can only be called synchronously.\n    // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\n\n    const getOriginalState = (): StateType => {\n      if (originalState === INTERNAL_NIL_TOKEN) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(23) : `${alm}: getOriginalState can only be called synchronously`);\n      }\n\n      return (originalState as StateType);\n    };\n\n    let result: unknown;\n\n    try {\n      // Actually forward the action to the reducer before we handle listeners\n      result = next(action);\n\n      if (listenerMap.size > 0) {\n        const currentState = api.getState(); // Work around ESBuild+TS transpilation issue\n\n        const listenerEntries = Array.from(listenerMap.values());\n\n        for (const entry of listenerEntries) {\n          let runListener = false;\n\n          try {\n            runListener = entry.predicate(action, currentState, originalState);\n          } catch (predicateError) {\n            runListener = false;\n            safelyNotifyError(onError, predicateError, {\n              raisedBy: 'predicate'\n            });\n          }\n\n          if (!runListener) {\n            continue;\n          }\n\n          notifyListener(entry, action, api, getOriginalState);\n        }\n      }\n    } finally {\n      // Remove `originalState` store from this scope.\n      originalState = INTERNAL_NIL_TOKEN;\n    }\n\n    return result;\n  };\n\n  return ({\n    middleware,\n    startListening,\n    stopListening,\n    clearListeners: clearListenerMiddleware\n  } as ListenerMiddlewareInstance<StateType, DispatchType, ExtraArgument>);\n};","import { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { UnknownAction, Reducer, StateFromReducersMapObject } from 'redux';\nimport { combineReducers } from 'redux';\nimport { nanoid } from './nanoid';\nimport type { Id, NonUndefined, Tail, UnionToIntersection, WithOptionalProp } from './tsHelpers';\nimport { emplace } from './utils';\ntype SliceLike<ReducerPath extends string, State> = {\n  reducerPath: ReducerPath;\n  reducer: Reducer<State>;\n};\ntype AnySliceLike = SliceLike<string, any>;\ntype SliceLikeReducerPath<A extends AnySliceLike> = A extends SliceLike<infer ReducerPath, any> ? ReducerPath : never;\ntype SliceLikeState<A extends AnySliceLike> = A extends SliceLike<any, infer State> ? State : never;\nexport type WithSlice<A extends AnySliceLike> = { [Path in SliceLikeReducerPath<A>]: SliceLikeState<A> };\ntype ReducerMap = Record<string, Reducer>;\ntype ExistingSliceLike<DeclaredState> = { [ReducerPath in keyof DeclaredState]: SliceLike<ReducerPath & string, NonUndefined<DeclaredState[ReducerPath]>> }[keyof DeclaredState];\nexport type InjectConfig = {\n  /**\n   * Allow replacing reducer with a different reference. Normally, an error will be thrown if a different reducer instance to the one already injected is used.\n   */\n  overrideExisting?: boolean;\n};\n/**\n * A reducer that allows for slices/reducers to be injected after initialisation.\n */\n\nexport interface CombinedSliceReducer<InitialState, DeclaredState = InitialState> extends Reducer<DeclaredState, UnknownAction, Partial<DeclaredState>> {\n  /**\n   * Provide a type for slices that will be injected lazily.\n   *\n   * One way to do this would be with interface merging:\n   * ```ts\n   *\n   * export interface LazyLoadedSlices {}\n   *\n   * export const rootReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n   *\n   * // elsewhere\n   *\n   * declare module './reducer' {\n   *   export interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n   * }\n   *\n   * const withBoolean = rootReducer.inject(booleanSlice);\n   *\n   * // elsewhere again\n   *\n   * declare module './reducer' {\n   *   export interface LazyLoadedSlices {\n   *     customName: CustomState\n   *   }\n   * }\n   *\n   * const withCustom = rootReducer.inject({ reducerPath: \"customName\", reducer: customSlice.reducer })\n   * ```\n   */\n  withLazyLoadedSlices<Lazy = {}>(): CombinedSliceReducer<InitialState, Id<DeclaredState & Partial<Lazy>>>;\n  /**\n   * Inject a slice.\n   *\n   * Accepts an individual slice, RTKQ API instance, or a \"slice-like\" { reducerPath, reducer } object.\n   *\n   * ```ts\n   * rootReducer.inject(booleanSlice)\n   * rootReducer.inject(baseApi)\n   * rootReducer.inject({ reducerPath: 'boolean' as const, reducer: newReducer }, { overrideExisting: true })\n   * ```\n   *\n   */\n\n  inject<Sl extends Id<ExistingSliceLike<DeclaredState>>>(slice: Sl, config?: InjectConfig): CombinedSliceReducer<InitialState, Id<DeclaredState & WithSlice<Sl>>>;\n  /**\n   * Inject a slice.\n   *\n   * Accepts an individual slice, RTKQ API instance, or a \"slice-like\" { reducerPath, reducer } object.\n   *\n   * ```ts\n   * rootReducer.inject(booleanSlice)\n   * rootReducer.inject(baseApi)\n   * rootReducer.inject({ reducerPath: 'boolean' as const, reducer: newReducer }, { overrideExisting: true })\n   * ```\n   *\n   */\n\n  inject<ReducerPath extends string, State>(slice: SliceLike<ReducerPath, State & (ReducerPath extends keyof DeclaredState ? never : State)>, config?: InjectConfig): CombinedSliceReducer<InitialState, Id<DeclaredState & WithSlice<SliceLike<ReducerPath, State>>>>;\n  /**\n   * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n   *\n   * ```ts\n   * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n   * //                                                                ^? boolean | undefined\n   *\n   * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n   *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n   *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n   *   return state.boolean;\n   *   //           ^? boolean\n   * })\n   * ```\n   *\n   * If the reducer is nested inside the root state, a selectState callback can be passed to retrieve the reducer's state.\n   *\n   * ```ts\n   *\n   * export interface LazyLoadedSlices {};\n   *\n   * export const innerReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n   *\n   * export const rootReducer = combineSlices({ inner: innerReducer });\n   *\n   * export type RootState = ReturnType<typeof rootReducer>;\n   *\n   * // elsewhere\n   *\n   * declare module \"./reducer.ts\" {\n   *  export interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n   * }\n   *\n   * const withBool = innerReducer.inject(booleanSlice);\n   *\n   * const selectBoolean = withBool.selector(\n   *   (state) => state.boolean,\n   *   (rootState: RootState) => state.inner\n   * );\n   * //    now expects to be passed RootState instead of innerReducer state\n   *\n   * ```\n   *\n   * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n   *\n   * ```ts\n   * const injectedReducer = rootReducer.inject(booleanSlice);\n   * const selectBoolean = injectedReducer.selector((state) => {\n   *   console.log(injectedReducer.selector.original(state).boolean) // possibly undefined\n   *   return state.boolean\n   * })\n   * ```\n   */\n\n  selector: {\n    /**\n     * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n     *\n     * ```ts\n     * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n     * //                                                                ^? boolean | undefined\n     *\n     * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n     *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n     *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n     *   return state.boolean;\n     *   //           ^? boolean\n     * })\n     * ```\n     *\n     * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n     *\n     * ```ts\n     * const injectedReducer = rootReducer.inject(booleanSlice);\n     * const selectBoolean = injectedReducer.selector((state) => {\n     *   console.log(injectedReducer.selector.original(state).boolean) // undefined\n     *   return state.boolean\n     * })\n     * ```\n     */\n    <Selector extends (state: DeclaredState, ...args: any[]) => unknown>(selectorFn: Selector): (state: WithOptionalProp<Parameters<Selector>[0], Exclude<keyof DeclaredState, keyof InitialState>>, ...args: Tail<Parameters<Selector>>) => ReturnType<Selector>;\n    /**\n     * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n     *\n     * ```ts\n     * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n     * //                                                                ^? boolean | undefined\n     *\n     * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n     *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n     *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n     *   return state.boolean;\n     *   //           ^? boolean\n     * })\n     * ```\n     *\n     * If the reducer is nested inside the root state, a selectState callback can be passed to retrieve the reducer's state.\n     *\n     * ```ts\n     *\n     * interface LazyLoadedSlices {};\n     *\n     * const innerReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n     *\n     * const rootReducer = combineSlices({ inner: innerReducer });\n     *\n     * type RootState = ReturnType<typeof rootReducer>;\n     *\n     * // elsewhere\n     *\n     * declare module \"./reducer.ts\" {\n     *  interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n     * }\n     *\n     * const withBool = innerReducer.inject(booleanSlice);\n     *\n     * const selectBoolean = withBool.selector(\n     *   (state) => state.boolean,\n     *   (rootState: RootState) => state.inner\n     * );\n     * //    now expects to be passed RootState instead of innerReducer state\n     *\n     * ```\n     *\n     * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n     *\n     * ```ts\n     * const injectedReducer = rootReducer.inject(booleanSlice);\n     * const selectBoolean = injectedReducer.selector((state) => {\n     *   console.log(injectedReducer.selector.original(state).boolean) // possibly undefined\n     *   return state.boolean\n     * })\n     * ```\n     */\n\n    <Selector extends (state: DeclaredState, ...args: any[]) => unknown, RootState>(selectorFn: Selector, selectState: (rootState: RootState, ...args: Tail<Parameters<Selector>>) => WithOptionalProp<Parameters<Selector>[0], Exclude<keyof DeclaredState, keyof InitialState>>): (state: RootState, ...args: Tail<Parameters<Selector>>) => ReturnType<Selector>;\n    /**\n     * Returns the unproxied state. Useful for debugging.\n     * @param state state Proxy, that ensures injected reducers have value\n     * @returns original, unproxied state\n     * @throws if value passed is not a state Proxy\n     */\n\n    original: (state: DeclaredState) => InitialState & Partial<DeclaredState>;\n  };\n}\ntype InitialState<Slices extends Array<AnySliceLike | ReducerMap>> = UnionToIntersection<Slices[number] extends infer Slice ? Slice extends AnySliceLike ? WithSlice<Slice> : StateFromReducersMapObject<Slice> : never>;\n\nconst isSliceLike = (maybeSliceLike: AnySliceLike | ReducerMap): maybeSliceLike is AnySliceLike => 'reducerPath' in maybeSliceLike && typeof maybeSliceLike.reducerPath === 'string';\n\nconst getReducers = (slices: Array<AnySliceLike | ReducerMap>) => slices.flatMap(sliceOrMap => isSliceLike(sliceOrMap) ? [([sliceOrMap.reducerPath, sliceOrMap.reducer] as const)] : Object.entries(sliceOrMap));\n\nconst ORIGINAL_STATE = Symbol.for('rtk-state-proxy-original');\n\nconst isStateProxy = (value: any) => !!value && !!value[ORIGINAL_STATE];\n\nconst stateProxyMap = new WeakMap<object, object>();\n\nconst createStateProxy = <State extends object,>(state: State, reducerMap: Partial<Record<string, Reducer>>) => (emplace(stateProxyMap, state, {\n  insert: () => new Proxy(state, {\n    get: (target, prop, receiver) => {\n      if (prop === ORIGINAL_STATE) return target;\n      const result = Reflect.get(target, prop, receiver);\n\n      if (typeof result === 'undefined') {\n        const reducer = reducerMap[prop.toString()];\n\n        if (reducer) {\n          // ensure action type is random, to prevent reducer treating it differently\n          const reducerResult = reducer(undefined, {\n            type: nanoid()\n          });\n\n          if (typeof reducerResult === 'undefined') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(24) : `The slice reducer for key \"${prop.toString()}\" returned undefined when called for selector(). ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n          }\n\n          return reducerResult;\n        }\n      }\n\n      return result;\n    }\n  })\n}) as State);\n\nconst original = (state: any) => {\n  if (!isStateProxy(state)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(25) : 'original must be used on state Proxy');\n  }\n\n  return state[ORIGINAL_STATE];\n};\n\nconst noopReducer: Reducer<Record<string, any>> = (state = {}) => state;\n\nexport function combineSlices<Slices extends Array<AnySliceLike | ReducerMap>>(...slices: Slices): CombinedSliceReducer<Id<InitialState<Slices>>> {\n  const reducerMap = Object.fromEntries<Reducer>(getReducers(slices));\n\n  const getReducer = () => Object.keys(reducerMap).length ? combineReducers(reducerMap) : noopReducer;\n\n  let reducer = getReducer();\n\n  function combinedReducer(state: Record<string, unknown>, action: UnknownAction) {\n    return reducer(state, action);\n  }\n\n  combinedReducer.withLazyLoadedSlices = () => combinedReducer;\n\n  const inject = (slice: AnySliceLike, config: InjectConfig = {}): typeof combinedReducer => {\n    const {\n      reducerPath,\n      reducer: reducerToInject\n    } = slice;\n    const currentReducer = reducerMap[reducerPath];\n\n    if (!config.overrideExisting && currentReducer && currentReducer !== reducerToInject) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        console.error(`called \\`inject\\` to override already-existing reducer ${reducerPath} without specifying \\`overrideExisting: true\\``);\n      }\n\n      return combinedReducer;\n    }\n\n    reducerMap[reducerPath] = reducerToInject;\n    reducer = getReducer();\n    return combinedReducer;\n  };\n\n  const selector = Object.assign(function makeSelector<State extends object, RootState, Args extends any[]>(selectorFn: (state: State, ...args: Args) => any, selectState?: (rootState: RootState, ...args: Args) => State) {\n    return function selector(state: State, ...args: Args) {\n      return selectorFn(createStateProxy(selectState ? selectState((state as any), ...args) : state, reducerMap), ...args);\n    };\n  }, {\n    original\n  });\n  return (Object.assign(combinedReducer, {\n    inject,\n    selector\n  }) as any);\n}","/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux Toolkit error #${code}; visit https://redux-toolkit.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}","import type { SerializedError } from '@reduxjs/toolkit';\nimport type { BaseQueryError } from '../baseQueryTypes';\nimport type { QueryDefinition, MutationDefinition, EndpointDefinitions, BaseEndpointDefinition, ResultTypeFrom, QueryArgFrom } from '../endpointDefinitions';\nimport type { Id, WithRequiredProp } from '../tsHelpers';\nexport type QueryCacheKey = string & {\n  _type: 'queryCacheKey';\n};\nexport type QuerySubstateIdentifier = {\n  queryCacheKey: QueryCacheKey;\n};\nexport type MutationSubstateIdentifier = {\n  requestId: string;\n  fixedCacheKey?: string;\n} | {\n  requestId?: string;\n  fixedCacheKey: string;\n};\nexport type RefetchConfigOptions = {\n  refetchOnMountOrArgChange: boolean | number;\n  refetchOnReconnect: boolean;\n  refetchOnFocus: boolean;\n};\n/**\n * Strings describing the query state at any given time.\n */\n\nexport enum QueryStatus {\n  uninitialized = 'uninitialized',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\nexport type RequestStatusFlags = {\n  status: QueryStatus.uninitialized;\n  isUninitialized: true;\n  isLoading: false;\n  isSuccess: false;\n  isError: false;\n} | {\n  status: QueryStatus.pending;\n  isUninitialized: false;\n  isLoading: true;\n  isSuccess: false;\n  isError: false;\n} | {\n  status: QueryStatus.fulfilled;\n  isUninitialized: false;\n  isLoading: false;\n  isSuccess: true;\n  isError: false;\n} | {\n  status: QueryStatus.rejected;\n  isUninitialized: false;\n  isLoading: false;\n  isSuccess: false;\n  isError: true;\n};\nexport function getRequestStatusFlags(status: QueryStatus): RequestStatusFlags {\n  return ({\n    status,\n    isUninitialized: status === QueryStatus.uninitialized,\n    isLoading: status === QueryStatus.pending,\n    isSuccess: status === QueryStatus.fulfilled,\n    isError: status === QueryStatus.rejected\n  } as any);\n}\nexport type SubscriptionOptions = {\n  /**\n   * How frequently to automatically re-fetch data (in milliseconds). Defaults to `0` (off).\n   */\n  pollingInterval?: number;\n  /**\n   *  Defaults to 'false'. This setting allows you to control whether RTK Query will continue polling if the window is not focused.\n   *\n   *  If pollingInterval is not set or set to 0, this **will not be evaluated** until pollingInterval is greater than 0.\n   *\n   *  Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n\n  skipPollingIfUnfocused?: boolean;\n  /**\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after regaining a network connection.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   *\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n\n  refetchOnReconnect?: boolean;\n  /**\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after the application window regains focus.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   *\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n\n  refetchOnFocus?: boolean;\n};\nexport type Subscribers = {\n  [requestId: string]: SubscriptionOptions;\n};\nexport type QueryKeys<Definitions extends EndpointDefinitions> = { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<any, any, any, any> ? K : never }[keyof Definitions];\nexport type MutationKeys<Definitions extends EndpointDefinitions> = { [K in keyof Definitions]: Definitions[K] extends MutationDefinition<any, any, any, any> ? K : never }[keyof Definitions];\ntype BaseQuerySubState<D extends BaseEndpointDefinition<any, any, any>> = {\n  /**\n   * The argument originally passed into the hook or `initiate` action call\n   */\n  originalArgs: QueryArgFrom<D>;\n  /**\n   * A unique ID associated with the request\n   */\n\n  requestId: string;\n  /**\n   * The received data from the query\n   */\n\n  data?: ResultTypeFrom<D>;\n  /**\n   * The received error if applicable\n   */\n\n  error?: SerializedError | (D extends QueryDefinition<any, infer BaseQuery, any, any> ? BaseQueryError<BaseQuery> : never);\n  /**\n   * The name of the endpoint associated with the query\n   */\n\n  endpointName: string;\n  /**\n   * Time that the latest query started\n   */\n\n  startedTimeStamp: number;\n  /**\n   * Time that the latest query was fulfilled\n   */\n\n  fulfilledTimeStamp?: number;\n};\nexport type QuerySubState<D extends BaseEndpointDefinition<any, any, any>> = Id<({\n  status: QueryStatus.fulfilled;\n} & WithRequiredProp<BaseQuerySubState<D>, 'data' | 'fulfilledTimeStamp'> & {\n  error: undefined;\n}) | ({\n  status: QueryStatus.pending;\n} & BaseQuerySubState<D>) | ({\n  status: QueryStatus.rejected;\n} & WithRequiredProp<BaseQuerySubState<D>, 'error'>) | {\n  status: QueryStatus.uninitialized;\n  originalArgs?: undefined;\n  data?: undefined;\n  error?: undefined;\n  requestId?: undefined;\n  endpointName?: string;\n  startedTimeStamp?: undefined;\n  fulfilledTimeStamp?: undefined;\n}>;\ntype BaseMutationSubState<D extends BaseEndpointDefinition<any, any, any>> = {\n  requestId: string;\n  data?: ResultTypeFrom<D>;\n  error?: SerializedError | (D extends MutationDefinition<any, infer BaseQuery, any, any> ? BaseQueryError<BaseQuery> : never);\n  endpointName: string;\n  startedTimeStamp: number;\n  fulfilledTimeStamp?: number;\n};\nexport type MutationSubState<D extends BaseEndpointDefinition<any, any, any>> = (({\n  status: QueryStatus.fulfilled;\n} & WithRequiredProp<BaseMutationSubState<D>, 'data' | 'fulfilledTimeStamp'>) & {\n  error: undefined;\n}) | (({\n  status: QueryStatus.pending;\n} & BaseMutationSubState<D>) & {\n  data?: undefined;\n}) | ({\n  status: QueryStatus.rejected;\n} & WithRequiredProp<BaseMutationSubState<D>, 'error'>) | {\n  requestId?: undefined;\n  status: QueryStatus.uninitialized;\n  data?: undefined;\n  error?: undefined;\n  endpointName?: string;\n  startedTimeStamp?: undefined;\n  fulfilledTimeStamp?: undefined;\n};\nexport type CombinedState<D extends EndpointDefinitions, E extends string, ReducerPath extends string> = {\n  queries: QueryState<D>;\n  mutations: MutationState<D>;\n  provided: InvalidationState<E>;\n  subscriptions: SubscriptionState;\n  config: ConfigState<ReducerPath>;\n};\nexport type InvalidationState<TagTypes extends string> = { [_ in TagTypes]: {\n  [id: string]: Array<QueryCacheKey>;\n  [id: number]: Array<QueryCacheKey>;\n} };\nexport type QueryState<D extends EndpointDefinitions> = {\n  [queryCacheKey: string]: QuerySubState<D[string]> | undefined;\n};\nexport type SubscriptionState = {\n  [queryCacheKey: string]: Subscribers | undefined;\n};\nexport type ConfigState<ReducerPath> = RefetchConfigOptions & {\n  reducerPath: ReducerPath;\n  online: boolean;\n  focused: boolean;\n  middlewareRegistered: boolean | 'conflict';\n} & ModifiableConfigState;\nexport type ModifiableConfigState = {\n  keepUnusedDataFor: number;\n  invalidationBehavior: 'delayed' | 'immediately';\n} & RefetchConfigOptions;\nexport type MutationState<D extends EndpointDefinitions> = {\n  [requestId: string]: MutationSubState<D[string]> | undefined;\n};\nexport type RootState<Definitions extends EndpointDefinitions, TagTypes extends string, ReducerPath extends string> = { [P in ReducerPath]: CombinedState<Definitions, TagTypes, P> };","import { isAbsoluteUrl } from './isAbsoluteUrl';\n\nconst withoutTrailingSlash = (url: string) => url.replace(/\\/$/, '');\n\nconst withoutLeadingSlash = (url: string) => url.replace(/^\\//, '');\n\nexport function joinUrls(base: string | undefined, url: string | undefined): string {\n  if (!base) {\n    return url!;\n  }\n\n  if (!url) {\n    return base;\n  }\n\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n\n  const delimiter = base.endsWith('/') || !url.startsWith('?') ? '/' : '';\n  base = withoutTrailingSlash(base);\n  url = withoutLeadingSlash(url);\n  return `${base}${delimiter}${url}`;\n}","/**\n * If either :// or // is present consider it to be an absolute url\n *\n * @param url string\n */\nexport function isAbsoluteUrl(url: string) {\n  return new RegExp(`(^|:)//`).test(url);\n}","/**\n * Alternative to `Array.flat(1)`\n * @param arr An array like [1,2,3,[1,2]]\n * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\n */\nexport const flatten = (arr: readonly any[]) => [].concat(...arr);","import { isPlainObject as _iPO } from '../core/rtkImports'; // remove type guard\n\nconst isPlainObject: (_: any) => boolean = _iPO;\nexport function copyWithStructuralSharing<T>(oldObj: any, newObj: T): T;\nexport function copyWithStructuralSharing(oldObj: any, newObj: any): any {\n  if (oldObj === newObj || !(isPlainObject(oldObj) && isPlainObject(newObj) || Array.isArray(oldObj) && Array.isArray(newObj))) {\n    return newObj;\n  }\n\n  const newKeys = Object.keys(newObj);\n  const oldKeys = Object.keys(oldObj);\n  let isSameObject = newKeys.length === oldKeys.length;\n  const mergeObj: any = Array.isArray(newObj) ? [] : {};\n\n  for (const key of newKeys) {\n    mergeObj[key] = copyWithStructuralSharing(oldObj[key], newObj[key]);\n    if (isSameObject) isSameObject = oldObj[key] === mergeObj[key];\n  }\n\n  return isSameObject ? oldObj : mergeObj;\n}","import { joinUrls } from './utils';\nimport { isPlainObject } from './core/rtkImports';\nimport type { BaseQueryApi, BaseQueryFn } from './baseQueryTypes';\nimport type { MaybePromise, Override } from './tsHelpers';\nexport type ResponseHandler = 'content-type' | 'json' | 'text' | ((response: Response) => Promise<any>);\ntype CustomRequestInit = Override<RequestInit, {\n  headers?: Headers | string[][] | Record<string, string | undefined> | undefined;\n}>;\nexport interface FetchArgs extends CustomRequestInit {\n  url: string;\n  params?: Record<string, any>;\n  body?: any;\n  responseHandler?: ResponseHandler;\n  validateStatus?: (response: Response, body: any) => boolean;\n  /**\n   * A number in milliseconds that represents that maximum time a request can take before timing out.\n   */\n\n  timeout?: number;\n}\n/**\n * A mini-wrapper that passes arguments straight through to\n * {@link [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)}.\n * Avoids storing `fetch` in a closure, in order to permit mocking/monkey-patching.\n */\n\nconst defaultFetchFn: typeof fetch = (...args) => fetch(...args);\n\nconst defaultValidateStatus = (response: Response) => response.status >= 200 && response.status <= 299;\n\nconst defaultIsJsonContentType = (headers: Headers) =>\n/*applicat*/\n/ion\\/(vnd\\.api\\+)?json/.test(headers.get('content-type') || '');\n\nexport type FetchBaseQueryError = {\n  /**\n   * * `number`:\n   *   HTTP status code\n   */\n  status: number;\n  data: unknown;\n} | {\n  /**\n   * * `\"FETCH_ERROR\"`:\n   *   An error that occurred during execution of `fetch` or the `fetchFn` callback option\n   **/\n  status: 'FETCH_ERROR';\n  data?: undefined;\n  error: string;\n} | {\n  /**\n   * * `\"PARSING_ERROR\"`:\n   *   An error happened during parsing.\n   *   Most likely a non-JSON-response was returned with the default `responseHandler` \"JSON\",\n   *   or an error occurred while executing a custom `responseHandler`.\n   **/\n  status: 'PARSING_ERROR';\n  originalStatus: number;\n  data: string;\n  error: string;\n} | {\n  /**\n   * * `\"TIMEOUT_ERROR\"`:\n   *   Request timed out\n   **/\n  status: 'TIMEOUT_ERROR';\n  data?: undefined;\n  error: string;\n} | {\n  /**\n   * * `\"CUSTOM_ERROR\"`:\n   *   A custom error type that you can return from your `queryFn` where another error might not make sense.\n   **/\n  status: 'CUSTOM_ERROR';\n  data?: unknown;\n  error: string;\n};\n\nfunction stripUndefined(obj: any) {\n  if (!isPlainObject(obj)) {\n    return obj;\n  }\n\n  const copy: Record<string, any> = { ...obj\n  };\n\n  for (const [k, v] of Object.entries(copy)) {\n    if (v === undefined) delete copy[k];\n  }\n\n  return copy;\n}\n\nexport type FetchBaseQueryArgs = {\n  baseUrl?: string;\n  prepareHeaders?: (headers: Headers, api: Pick<BaseQueryApi, 'getState' | 'extra' | 'endpoint' | 'type' | 'forced'>) => MaybePromise<Headers | void>;\n  fetchFn?: (input: RequestInfo, init?: RequestInit | undefined) => Promise<Response>;\n  paramsSerializer?: (params: Record<string, any>) => string;\n  /**\n   * By default, we only check for 'application/json' and 'application/vnd.api+json' as the content-types for json. If you need to support another format, you can pass\n   * in a predicate function for your given api to get the same automatic stringifying behavior\n   * @example\n   * ```ts\n   * const isJsonContentType = (headers: Headers) => [\"application/vnd.api+json\", \"application/json\", \"application/vnd.hal+json\"].includes(headers.get(\"content-type\")?.trim());\n   * ```\n   */\n\n  isJsonContentType?: (headers: Headers) => boolean;\n  /**\n   * Defaults to `application/json`;\n   */\n\n  jsonContentType?: string;\n  /**\n   * Custom replacer function used when calling `JSON.stringify()`;\n   */\n\n  jsonReplacer?: (this: any, key: string, value: any) => any;\n} & RequestInit & Pick<FetchArgs, 'responseHandler' | 'validateStatus' | 'timeout'>;\nexport type FetchBaseQueryMeta = {\n  request: Request;\n  response?: Response;\n};\n/**\n * This is a very small wrapper around fetch that aims to simplify requests.\n *\n * @example\n * ```ts\n * const baseQuery = fetchBaseQuery({\n *   baseUrl: 'https://api.your-really-great-app.com/v1/',\n *   prepareHeaders: (headers, { getState }) => {\n *     const token = (getState() as RootState).auth.token;\n *     // If we have a token set in state, let's assume that we should be passing it.\n *     if (token) {\n *       headers.set('authorization', `Bearer ${token}`);\n *     }\n *     return headers;\n *   },\n * })\n * ```\n *\n * @param {string} baseUrl\n * The base URL for an API service.\n * Typically in the format of https://example.com/\n *\n * @param {(headers: Headers, api: { getState: () => unknown; extra: unknown; endpoint: string; type: 'query' | 'mutation'; forced: boolean; }) => Headers} prepareHeaders\n * An optional function that can be used to inject headers on requests.\n * Provides a Headers object, as well as most of the `BaseQueryApi` (`dispatch` is not available).\n * Useful for setting authentication or headers that need to be set conditionally.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Headers\n *\n * @param {(input: RequestInfo, init?: RequestInit | undefined) => Promise<Response>} fetchFn\n * Accepts a custom `fetch` function if you do not want to use the default on the window.\n * Useful in SSR environments if you need to use a library such as `isomorphic-fetch` or `cross-fetch`\n *\n * @param {(params: Record<string, unknown>) => string} paramsSerializer\n * An optional function that can be used to stringify querystring parameters.\n *\n * @param {(headers: Headers) => boolean} isJsonContentType\n * An optional predicate function to determine if `JSON.stringify()` should be called on the `body` arg of `FetchArgs`\n *\n * @param {string} jsonContentType Used when automatically setting the content-type header for a request with a jsonifiable body that does not have an explicit content-type header. Defaults to `application/json`.\n *\n * @param {(this: any, key: string, value: any) => any} jsonReplacer Custom replacer function used when calling `JSON.stringify()`.\n *\n * @param {number} timeout\n * A number in milliseconds that represents the maximum time a request can take before timing out.\n */\n\nexport function fetchBaseQuery({\n  baseUrl,\n  prepareHeaders = x => x,\n  fetchFn = defaultFetchFn,\n  paramsSerializer,\n  isJsonContentType = defaultIsJsonContentType,\n  jsonContentType = 'application/json',\n  jsonReplacer,\n  timeout: defaultTimeout,\n  responseHandler: globalResponseHandler,\n  validateStatus: globalValidateStatus,\n  ...baseFetchOptions\n}: FetchBaseQueryArgs = {}): BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError, {}, FetchBaseQueryMeta> {\n  if (typeof fetch === 'undefined' && fetchFn === defaultFetchFn) {\n    console.warn('Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments.');\n  }\n\n  return async (arg, api) => {\n    const {\n      signal,\n      getState,\n      extra,\n      endpoint,\n      forced,\n      type\n    } = api;\n    let meta: FetchBaseQueryMeta | undefined;\n    let {\n      url,\n      headers = new Headers(baseFetchOptions.headers),\n      params = undefined,\n      responseHandler = globalResponseHandler ?? ('json' as const),\n      validateStatus = globalValidateStatus ?? defaultValidateStatus,\n      timeout = defaultTimeout,\n      ...rest\n    } = typeof arg == 'string' ? {\n      url: arg\n    } : arg;\n    let config: RequestInit = { ...baseFetchOptions,\n      signal,\n      ...rest\n    };\n    headers = new Headers(stripUndefined(headers));\n    config.headers = (await prepareHeaders(headers, {\n      getState,\n      extra,\n      endpoint,\n      forced,\n      type\n    })) || headers; // Only set the content-type to json if appropriate. Will not be true for FormData, ArrayBuffer, Blob, etc.\n\n    const isJsonifiable = (body: any) => typeof body === 'object' && (isPlainObject(body) || Array.isArray(body) || typeof body.toJSON === 'function');\n\n    if (!config.headers.has('content-type') && isJsonifiable(config.body)) {\n      config.headers.set('content-type', jsonContentType);\n    }\n\n    if (isJsonifiable(config.body) && isJsonContentType(config.headers)) {\n      config.body = JSON.stringify(config.body, jsonReplacer);\n    }\n\n    if (params) {\n      const divider = ~url.indexOf('?') ? '&' : '?';\n      const query = paramsSerializer ? paramsSerializer(params) : new URLSearchParams(stripUndefined(params));\n      url += divider + query;\n    }\n\n    url = joinUrls(baseUrl, url);\n    const request = new Request(url, config);\n    const requestClone = new Request(url, config);\n    meta = {\n      request: requestClone\n    };\n    let response,\n        timedOut = false,\n        timeoutId = timeout && setTimeout(() => {\n      timedOut = true;\n      api.abort();\n    }, timeout);\n\n    try {\n      response = await fetchFn(request);\n    } catch (e) {\n      return {\n        error: {\n          status: timedOut ? 'TIMEOUT_ERROR' : 'FETCH_ERROR',\n          error: String(e)\n        },\n        meta\n      };\n    } finally {\n      if (timeoutId) clearTimeout(timeoutId);\n    }\n\n    const responseClone = response.clone();\n    meta.response = responseClone;\n    let resultData: any;\n    let responseText: string = '';\n\n    try {\n      let handleResponseError;\n      await Promise.all([handleResponse(response, responseHandler).then(r => resultData = r, e => handleResponseError = e), // see https://github.com/node-fetch/node-fetch/issues/665#issuecomment-538995182\n      // we *have* to \"use up\" both streams at the same time or they will stop running in node-fetch scenarios\n      responseClone.text().then(r => responseText = r, () => {})]);\n      if (handleResponseError) throw handleResponseError;\n    } catch (e) {\n      return {\n        error: {\n          status: 'PARSING_ERROR',\n          originalStatus: response.status,\n          data: responseText,\n          error: String(e)\n        },\n        meta\n      };\n    }\n\n    return validateStatus(response, resultData) ? {\n      data: resultData,\n      meta\n    } : {\n      error: {\n        status: response.status,\n        data: resultData\n      },\n      meta\n    };\n  };\n\n  async function handleResponse(response: Response, responseHandler: ResponseHandler) {\n    if (typeof responseHandler === 'function') {\n      return responseHandler(response);\n    }\n\n    if (responseHandler === 'content-type') {\n      responseHandler = isJsonContentType(response.headers) ? 'json' : 'text';\n    }\n\n    if (responseHandler === 'json') {\n      const text = await response.text();\n      return text.length ? JSON.parse(text) : null;\n    }\n\n    return response.text();\n  }\n}","export class HandledError {\n  constructor(public readonly value: any, public readonly meta: any = undefined) {}\n\n}","import type { BaseQueryApi, BaseQueryArg, BaseQueryEnhancer, BaseQueryExtraOptions, BaseQueryFn } from './baseQueryTypes';\nimport type { FetchBaseQueryError } from './fetchBaseQuery';\nimport { HandledError } from './HandledError';\n/**\n * Exponential backoff based on the attempt number.\n *\n * @remarks\n * 1. 600ms * random(0.4, 1.4)\n * 2. 1200ms * random(0.4, 1.4)\n * 3. 2400ms * random(0.4, 1.4)\n * 4. 4800ms * random(0.4, 1.4)\n * 5. 9600ms * random(0.4, 1.4)\n *\n * @param attempt - Current attempt\n * @param maxRetries - Maximum number of retries\n */\n\nasync function defaultBackoff(attempt: number = 0, maxRetries: number = 5) {\n  const attempts = Math.min(attempt, maxRetries);\n  const timeout = ~~((Math.random() + 0.4) * (300 << attempts)); // Force a positive int in the case we make this an option\n\n  await new Promise(resolve => setTimeout((res: any) => resolve(res), timeout));\n}\n\ntype RetryConditionFunction = (error: FetchBaseQueryError, args: BaseQueryArg<BaseQueryFn>, extraArgs: {\n  attempt: number;\n  baseQueryApi: BaseQueryApi;\n  extraOptions: BaseQueryExtraOptions<BaseQueryFn> & RetryOptions;\n}) => boolean;\nexport type RetryOptions = {\n  /**\n   * Function used to determine delay between retries\n   */\n  backoff?: (attempt: number, maxRetries: number) => Promise<void>;\n} & ({\n  /**\n   * How many times the query will be retried (default: 5)\n   */\n  maxRetries?: number;\n  retryCondition?: undefined;\n} | {\n  /**\n   * Callback to determine if a retry should be attempted.\n   * Return `true` for another retry and `false` to quit trying prematurely.\n   */\n  retryCondition?: RetryConditionFunction;\n  maxRetries?: undefined;\n});\n\nfunction fail(e: any): never {\n  throw Object.assign(new HandledError({\n    error: e\n  }), {\n    throwImmediately: true\n  });\n}\n\nconst EMPTY_OPTIONS = {};\n\nconst retryWithBackoff: BaseQueryEnhancer<unknown, RetryOptions, RetryOptions | void> = (baseQuery, defaultOptions) => async (args, api, extraOptions) => {\n  // We need to figure out `maxRetries` before we define `defaultRetryCondition.\n  // This is probably goofy, but ought to work.\n  // Put our defaults in one array, filter out undefineds, grab the last value.\n  const possibleMaxRetries: number[] = [5, ((defaultOptions as any) || EMPTY_OPTIONS).maxRetries, ((extraOptions as any) || EMPTY_OPTIONS).maxRetries].filter(x => x !== undefined);\n  const [maxRetries] = possibleMaxRetries.slice(-1);\n\n  const defaultRetryCondition: RetryConditionFunction = (_, __, {\n    attempt\n  }) => attempt <= maxRetries;\n\n  const options: {\n    maxRetries: number;\n    backoff: typeof defaultBackoff;\n    retryCondition: typeof defaultRetryCondition;\n  } = {\n    maxRetries,\n    backoff: defaultBackoff,\n    retryCondition: defaultRetryCondition,\n    ...defaultOptions,\n    ...extraOptions\n  };\n  let retry = 0;\n\n  while (true) {\n    try {\n      const result = await baseQuery(args, api, extraOptions); // baseQueries _should_ return an error property, so we should check for that and throw it to continue retrying\n\n      if (result.error) {\n        throw new HandledError(result);\n      }\n\n      return result;\n    } catch (e: any) {\n      retry++;\n\n      if (e.throwImmediately) {\n        if (e instanceof HandledError) {\n          return e.value;\n        } // We don't know what this is, so we have to rethrow it\n\n\n        throw e;\n      }\n\n      if (e instanceof HandledError && !options.retryCondition((e.value.error as FetchBaseQueryError), args, {\n        attempt: retry,\n        baseQueryApi: api,\n        extraOptions\n      })) {\n        return e.value;\n      }\n\n      await options.backoff(retry, options.maxRetries);\n    }\n  }\n};\n/**\n * A utility that can wrap `baseQuery` in the API definition to provide retries with a basic exponential backoff.\n *\n * @example\n *\n * ```ts\n * // codeblock-meta title=\"Retry every request 5 times by default\"\n * import { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react'\n * interface Post {\n *   id: number\n *   name: string\n * }\n * type PostsResponse = Post[]\n *\n * // maxRetries: 5 is the default, and can be omitted. Shown for documentation purposes.\n * const staggeredBaseQuery = retry(fetchBaseQuery({ baseUrl: '/' }), { maxRetries: 5 });\n * export const api = createApi({\n *   baseQuery: staggeredBaseQuery,\n *   endpoints: (build) => ({\n *     getPosts: build.query<PostsResponse, void>({\n *       query: () => ({ url: 'posts' }),\n *     }),\n *     getPost: build.query<PostsResponse, string>({\n *       query: (id) => ({ url: `post/${id}` }),\n *       extraOptions: { maxRetries: 8 }, // You can override the retry behavior on each endpoint\n *     }),\n *   }),\n * });\n *\n * export const { useGetPostsQuery, useGetPostQuery } = api;\n * ```\n */\n\n\nexport const retry = /* @__PURE__ */Object.assign(retryWithBackoff, {\n  fail\n});","import type { ThunkDispatch, ActionCreatorWithoutPayload // Workaround for API-Extractor\n} from '@reduxjs/toolkit';\nimport { createAction } from './rtkImports';\nexport const onFocus = /* @__PURE__ */createAction('__rtkq/focused');\nexport const onFocusLost = /* @__PURE__ */createAction('__rtkq/unfocused');\nexport const onOnline = /* @__PURE__ */createAction('__rtkq/online');\nexport const onOffline = /* @__PURE__ */createAction('__rtkq/offline');\nlet initialized = false;\n/**\n * A utility used to enable `refetchOnMount` and `refetchOnReconnect` behaviors.\n * It requires the dispatch method from your store.\n * Calling `setupListeners(store.dispatch)` will configure listeners with the recommended defaults,\n * but you have the option of providing a callback for more granular control.\n *\n * @example\n * ```ts\n * setupListeners(store.dispatch)\n * ```\n *\n * @param dispatch - The dispatch method from your store\n * @param customHandler - An optional callback for more granular control over listener behavior\n * @returns Return value of the handler.\n * The default handler returns an `unsubscribe` method that can be called to remove the listeners.\n */\n\nexport function setupListeners(dispatch: ThunkDispatch<any, any, any>, customHandler?: (dispatch: ThunkDispatch<any, any, any>, actions: {\n  onFocus: typeof onFocus;\n  onFocusLost: typeof onFocusLost;\n  onOnline: typeof onOnline;\n  onOffline: typeof onOffline;\n}) => () => void) {\n  function defaultHandler() {\n    const handleFocus = () => dispatch(onFocus());\n\n    const handleFocusLost = () => dispatch(onFocusLost());\n\n    const handleOnline = () => dispatch(onOnline());\n\n    const handleOffline = () => dispatch(onOffline());\n\n    const handleVisibilityChange = () => {\n      if (window.document.visibilityState === 'visible') {\n        handleFocus();\n      } else {\n        handleFocusLost();\n      }\n    };\n\n    if (!initialized) {\n      if (typeof window !== 'undefined' && window.addEventListener) {\n        // Handle focus events\n        window.addEventListener('visibilitychange', handleVisibilityChange, false);\n        window.addEventListener('focus', handleFocus, false); // Handle connection events\n\n        window.addEventListener('online', handleOnline, false);\n        window.addEventListener('offline', handleOffline, false);\n        initialized = true;\n      }\n    }\n\n    const unsubscribe = () => {\n      window.removeEventListener('focus', handleFocus);\n      window.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      initialized = false;\n    };\n\n    return unsubscribe;\n  }\n\n  return customHandler ? customHandler(dispatch, {\n    onFocus,\n    onFocusLost,\n    onOffline,\n    onOnline\n  }) : defaultHandler();\n}","import type { SerializeQueryArgs } from './defaultSerializeQueryArgs';\nimport type { QuerySubState, RootState } from './core/apiState';\nimport type { BaseQueryExtraOptions, BaseQueryFn, BaseQueryResult, BaseQueryArg, BaseQueryApi, QueryReturnValue, BaseQueryError, BaseQueryMeta } from './baseQueryTypes';\nimport type { HasRequiredProps, MaybePromise, OmitFromUnion, CastAny, NonUndefined, UnwrapPromise } from './tsHelpers';\nimport type { NEVER } from './fakeBaseQuery';\nimport type { Api } from '@reduxjs/toolkit/query';\nconst resultType = /* @__PURE__ */Symbol();\nconst baseQuery = /* @__PURE__ */Symbol();\ninterface EndpointDefinitionWithQuery<QueryArg, BaseQuery extends BaseQueryFn, ResultType> {\n  /**\n   * `query` can be a function that returns either a `string` or an `object` which is passed to your `baseQuery`. If you are using [fetchBaseQuery](./fetchBaseQuery), this can return either a `string` or an `object` of properties in `FetchArgs`. If you use your own custom [`baseQuery`](../../rtk-query/usage/customizing-queries), you can customize this behavior to your liking.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"query example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   tagTypes: ['Post'],\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       // highlight-start\n   *       query: () => 'posts',\n   *       // highlight-end\n   *     }),\n   *     addPost: build.mutation<Post, Partial<Post>>({\n   *      // highlight-start\n   *      query: (body) => ({\n   *        url: `posts`,\n   *        method: 'POST',\n   *        body,\n   *      }),\n   *      // highlight-end\n   *      invalidatesTags: [{ type: 'Post', id: 'LIST' }],\n   *    }),\n   *   })\n   * })\n   * ```\n   */\n  query(arg: QueryArg): BaseQueryArg<BaseQuery>;\n  queryFn?: never;\n  /**\n   * A function to manipulate the data returned by a query or mutation.\n   */\n\n  transformResponse?(baseQueryReturnValue: BaseQueryResult<BaseQuery>, meta: BaseQueryMeta<BaseQuery>, arg: QueryArg): ResultType | Promise<ResultType>;\n  /**\n   * A function to manipulate the data returned by a failed query or mutation.\n   */\n\n  transformErrorResponse?(baseQueryReturnValue: BaseQueryError<BaseQuery>, meta: BaseQueryMeta<BaseQuery>, arg: QueryArg): unknown;\n  /**\n   * Defaults to `true`.\n   *\n   * Most apps should leave this setting on. The only time it can be a performance issue\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\n   * you're unable to paginate it.\n   *\n   * For details of how this works, please see the below. When it is set to `false`,\n   * every request will cause subscribed components to rerender, even when the data has not changed.\n   *\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\n   */\n\n  structuralSharing?: boolean;\n}\ninterface EndpointDefinitionWithQueryFn<QueryArg, BaseQuery extends BaseQueryFn, ResultType> {\n  /**\n   * Can be used in place of `query` as an inline function that bypasses `baseQuery` completely for the endpoint.\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Basic queryFn example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *     }),\n   *     flipCoin: build.query<'heads' | 'tails', void>({\n   *       // highlight-start\n   *       queryFn(arg, queryApi, extraOptions, baseQuery) {\n   *         const randomVal = Math.random()\n   *         if (randomVal < 0.45) {\n   *           return { data: 'heads' }\n   *         }\n   *         if (randomVal < 0.9) {\n   *           return { data: 'tails' }\n   *         }\n   *         return { error: { status: 500, statusText: 'Internal Server Error', data: \"Coin landed on it's edge!\" } }\n   *       }\n   *       // highlight-end\n   *     })\n   *   })\n   * })\n   * ```\n   */\n  queryFn(arg: QueryArg, api: BaseQueryApi, extraOptions: BaseQueryExtraOptions<BaseQuery>, baseQuery: (arg: Parameters<BaseQuery>[0]) => ReturnType<BaseQuery>): MaybePromise<QueryReturnValue<ResultType, BaseQueryError<BaseQuery>, BaseQueryMeta<BaseQuery>>>;\n  query?: never;\n  transformResponse?: never;\n  transformErrorResponse?: never;\n  /**\n   * Defaults to `true`.\n   *\n   * Most apps should leave this setting on. The only time it can be a performance issue\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\n   * you're unable to paginate it.\n   *\n   * For details of how this works, please see the below. When it is set to `false`,\n   * every request will cause subscribed components to rerender, even when the data has not changed.\n   *\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\n   */\n\n  structuralSharing?: boolean;\n}\nexport interface BaseEndpointTypes<QueryArg, BaseQuery extends BaseQueryFn, ResultType> {\n  QueryArg: QueryArg;\n  BaseQuery: BaseQuery;\n  ResultType: ResultType;\n}\nexport type BaseEndpointDefinition<QueryArg, BaseQuery extends BaseQueryFn, ResultType> = (([CastAny<BaseQueryResult<BaseQuery>, {}>] extends [NEVER] ? never : EndpointDefinitionWithQuery<QueryArg, BaseQuery, ResultType>) | EndpointDefinitionWithQueryFn<QueryArg, BaseQuery, ResultType>) & {\n  /* phantom type */\n  [resultType]?: ResultType;\n  /* phantom type */\n\n  [baseQuery]?: BaseQuery;\n} & HasRequiredProps<BaseQueryExtraOptions<BaseQuery>, {\n  extraOptions: BaseQueryExtraOptions<BaseQuery>;\n}, {\n  extraOptions?: BaseQueryExtraOptions<BaseQuery>;\n}>;\nexport enum DefinitionType {\n  query = 'query',\n  mutation = 'mutation',\n}\nexport type GetResultDescriptionFn<TagTypes extends string, ResultType, QueryArg, ErrorType, MetaType> = (result: ResultType | undefined, error: ErrorType | undefined, arg: QueryArg, meta: MetaType) => ReadonlyArray<TagDescription<TagTypes>>;\nexport type FullTagDescription<TagType> = {\n  type: TagType;\n  id?: number | string;\n};\nexport type TagDescription<TagType> = TagType | FullTagDescription<TagType>;\nexport type ResultDescription<TagTypes extends string, ResultType, QueryArg, ErrorType, MetaType> = ReadonlyArray<TagDescription<TagTypes>> | GetResultDescriptionFn<TagTypes, ResultType, QueryArg, ErrorType, MetaType>;\nexport interface QueryTypes<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> extends BaseEndpointTypes<QueryArg, BaseQuery, ResultType> {\n  /**\n   * The endpoint definition type. To be used with some internal generic types.\n   * @example\n   * ```ts\n   * const useMyWrappedHook: UseQuery<typeof api.endpoints.query.Types.QueryDefinition> = ...\n   * ```\n   */\n  QueryDefinition: QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n  TagTypes: TagTypes;\n  ReducerPath: ReducerPath;\n}\nexport interface QueryExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n  type: DefinitionType.query;\n  /**\n   * Used by `query` endpoints. Determines which 'tag' is attached to the cached data returned by the query.\n   * Expects an array of tag type strings, an array of objects of tag types with ids, or a function that returns such an array.\n   * 1.  `['Post']` - equivalent to `2`\n   * 2.  `[{ type: 'Post' }]` - equivalent to `1`\n   * 3.  `[{ type: 'Post', id: 1 }]`\n   * 4.  `(result, error, arg) => ['Post']` - equivalent to `5`\n   * 5.  `(result, error, arg) => [{ type: 'Post' }]` - equivalent to `4`\n   * 6.  `(result, error, arg) => [{ type: 'Post', id: 1 }]`\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"providesTags example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   tagTypes: ['Posts'],\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *       // highlight-start\n   *       providesTags: (result) =>\n   *         result\n   *           ? [\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\n   *               { type: 'Posts', id: 'LIST' },\n   *             ]\n   *           : [{ type: 'Posts', id: 'LIST' }],\n   *       // highlight-end\n   *     })\n   *   })\n   * })\n   * ```\n   */\n\n  providesTags?: ResultDescription<TagTypes, ResultType, QueryArg, BaseQueryError<BaseQuery>, BaseQueryMeta<BaseQuery>>;\n  /**\n   * Not to be used. A query should not invalidate tags in the cache.\n   */\n\n  invalidatesTags?: never;\n  /**\n   * Can be provided to return a custom cache key value based on the query arguments.\n   *\n   * This is primarily intended for cases where a non-serializable value is passed as part of the query arg object and should be excluded from the cache key.  It may also be used for cases where an endpoint should only have a single cache entry, such as an infinite loading / pagination implementation.\n   *\n   * Unlike the `createApi` version which can _only_ return a string, this per-endpoint option can also return an an object, number, or boolean.  If it returns a string, that value will be used as the cache key directly.  If it returns an object / number / boolean, that value will be passed to the built-in `defaultSerializeQueryArgs`.  This simplifies the use case of stripping out args you don't want included in the cache key.\n   *\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"serializeQueryArgs : exclude value\"\n   *\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * interface MyApiClient {\n   *   fetchPost: (id: string) => Promise<Post>\n   * }\n   *\n   * createApi({\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *  endpoints: (build) => ({\n   *    // Example: an endpoint with an API client passed in as an argument,\n   *    // but only the item ID should be used as the cache key\n   *    getPost: build.query<Post, { id: string; client: MyApiClient }>({\n   *      queryFn: async ({ id, client }) => {\n   *        const post = await client.fetchPost(id)\n   *        return { data: post }\n   *      },\n   *      // highlight-start\n   *      serializeQueryArgs: ({ queryArgs, endpointDefinition, endpointName }) => {\n   *        const { id } = queryArgs\n   *        // This can return a string, an object, a number, or a boolean.\n   *        // If it returns an object, number or boolean, that value\n   *        // will be serialized automatically via `defaultSerializeQueryArgs`\n   *        return { id } // omit `client` from the cache key\n   *\n   *        // Alternately, you can use `defaultSerializeQueryArgs` yourself:\n   *        // return defaultSerializeQueryArgs({\n   *        //   endpointName,\n   *        //   queryArgs: { id },\n   *        //   endpointDefinition\n   *        // })\n   *        // Or  create and return a string yourself:\n   *        // return `getPost(${id})`\n   *      },\n   *      // highlight-end\n   *    }),\n   *  }),\n   *})\n   * ```\n   */\n\n  serializeQueryArgs?: SerializeQueryArgs<QueryArg, string | number | boolean | Record<any, any>>;\n  /**\n   * Can be provided to merge an incoming response value into the current cache data.\n   * If supplied, no automatic structural sharing will be applied - it's up to\n   * you to update the cache appropriately.\n   *\n   * Since RTKQ normally replaces cache entries with the new response, you will usually\n   * need to use this with the `serializeQueryArgs` or `forceRefetch` options to keep\n   * an existing cache entry so that it can be updated.\n   *\n   * Since this is wrapped with Immer, you may either mutate the `currentCacheValue` directly,\n   * or return a new value, but _not_ both at once.\n   *\n   * Will only be called if the existing `currentCacheData` is _not_ `undefined` - on first response,\n   * the cache entry will just save the response data directly.\n   *\n   * Useful if you don't want a new request to completely override the current cache value,\n   * maybe because you have manually updated it from another source and don't want those\n   * updates to get lost.\n   *\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"merge: pagination\"\n   *\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * createApi({\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *  endpoints: (build) => ({\n   *    listItems: build.query<string[], number>({\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\n   *     // Only have one cache entry because the arg always maps to one string\n   *     serializeQueryArgs: ({ endpointName }) => {\n   *       return endpointName\n   *      },\n   *      // Always merge incoming data to the cache entry\n   *      merge: (currentCache, newItems) => {\n   *        currentCache.push(...newItems)\n   *      },\n   *      // Refetch when the page arg changes\n   *      forceRefetch({ currentArg, previousArg }) {\n   *        return currentArg !== previousArg\n   *      },\n   *    }),\n   *  }),\n   *})\n   * ```\n   */\n\n  merge?(currentCacheData: ResultType, responseData: ResultType, otherArgs: {\n    arg: QueryArg;\n    baseQueryMeta: BaseQueryMeta<BaseQuery>;\n    requestId: string;\n    fulfilledTimeStamp: number;\n  }): ResultType | void;\n  /**\n   * Check to see if the endpoint should force a refetch in cases where it normally wouldn't.\n   * This is primarily useful for \"infinite scroll\" / pagination use cases where\n   * RTKQ is keeping a single cache entry that is added to over time, in combination\n   * with `serializeQueryArgs` returning a fixed cache key and a `merge` callback\n   * set to add incoming data to the cache entry each time.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"forceRefresh: pagination\"\n   *\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * createApi({\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *  endpoints: (build) => ({\n   *    listItems: build.query<string[], number>({\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\n   *     // Only have one cache entry because the arg always maps to one string\n   *     serializeQueryArgs: ({ endpointName }) => {\n   *       return endpointName\n   *      },\n   *      // Always merge incoming data to the cache entry\n   *      merge: (currentCache, newItems) => {\n   *        currentCache.push(...newItems)\n   *      },\n   *      // Refetch when the page arg changes\n   *      forceRefetch({ currentArg, previousArg }) {\n   *        return currentArg !== previousArg\n   *      },\n   *    }),\n   *  }),\n   *})\n   * ```\n   */\n\n  forceRefetch?(params: {\n    currentArg: QueryArg | undefined;\n    previousArg: QueryArg | undefined;\n    state: RootState<any, any, string>;\n    endpointState?: QuerySubState<any>;\n  }): boolean;\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n\n  Types?: QueryTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n}\nexport type QueryDefinition<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> & QueryExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>;\nexport interface MutationTypes<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> extends BaseEndpointTypes<QueryArg, BaseQuery, ResultType> {\n  /**\n   * The endpoint definition type. To be used with some internal generic types.\n   * @example\n   * ```ts\n   * const useMyWrappedHook: UseMutation<typeof api.endpoints.query.Types.MutationDefinition> = ...\n   * ```\n   */\n  MutationDefinition: MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n  TagTypes: TagTypes;\n  ReducerPath: ReducerPath;\n}\nexport interface MutationExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n  type: DefinitionType.mutation;\n  /**\n   * Used by `mutation` endpoints. Determines which cached data should be either re-fetched or removed from the cache.\n   * Expects the same shapes as `providesTags`.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"invalidatesTags example\"\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   tagTypes: ['Posts'],\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *       providesTags: (result) =>\n   *         result\n   *           ? [\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\n   *               { type: 'Posts', id: 'LIST' },\n   *             ]\n   *           : [{ type: 'Posts', id: 'LIST' }],\n   *     }),\n   *     addPost: build.mutation<Post, Partial<Post>>({\n   *       query(body) {\n   *         return {\n   *           url: `posts`,\n   *           method: 'POST',\n   *           body,\n   *         }\n   *       },\n   *       // highlight-start\n   *       invalidatesTags: [{ type: 'Posts', id: 'LIST' }],\n   *       // highlight-end\n   *     }),\n   *   })\n   * })\n   * ```\n   */\n\n  invalidatesTags?: ResultDescription<TagTypes, ResultType, QueryArg, BaseQueryError<BaseQuery>, BaseQueryMeta<BaseQuery>>;\n  /**\n   * Not to be used. A mutation should not provide tags to the cache.\n   */\n\n  providesTags?: never;\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n\n  Types?: MutationTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n}\nexport type MutationDefinition<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> & MutationExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>;\nexport type EndpointDefinition<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath> | MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\nexport type EndpointDefinitions = Record<string, EndpointDefinition<any, any, any, any>>;\nexport function isQueryDefinition(e: EndpointDefinition<any, any, any, any>): e is QueryDefinition<any, any, any, any> {\n  return e.type === DefinitionType.query;\n}\nexport function isMutationDefinition(e: EndpointDefinition<any, any, any, any>): e is MutationDefinition<any, any, any, any> {\n  return e.type === DefinitionType.mutation;\n}\nexport type EndpointBuilder<BaseQuery extends BaseQueryFn, TagTypes extends string, ReducerPath extends string> = {\n  /**\n   * An endpoint definition that retrieves data, and may provide tags to the cache.\n   *\n   * @example\n   * ```js\n   * // codeblock-meta title=\"Example of all query endpoint options\"\n   * const api = createApi({\n   *  baseQuery,\n   *  endpoints: (build) => ({\n   *    getPost: build.query({\n   *      query: (id) => ({ url: `post/${id}` }),\n   *      // Pick out data and prevent nested properties in a hook or selector\n   *      transformResponse: (response) => response.data,\n   *      // Pick out error and prevent nested properties in a hook or selector\n   *      transformErrorResponse: (response) => response.error,\n   *      // `result` is the server response\n   *      providesTags: (result, error, id) => [{ type: 'Post', id }],\n   *      // trigger side effects or optimistic updates\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry, updateCachedData }) {},\n   *      // handle subscriptions etc\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry, updateCachedData }) {},\n   *    }),\n   *  }),\n   *});\n   *```\n   */\n  query<ResultType, QueryArg>(definition: OmitFromUnion<QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>, 'type'>): QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n  /**\n   * An endpoint definition that alters data on the server or will possibly invalidate the cache.\n   *\n   * @example\n   * ```js\n   * // codeblock-meta title=\"Example of all mutation endpoint options\"\n   * const api = createApi({\n   *   baseQuery,\n   *   endpoints: (build) => ({\n   *     updatePost: build.mutation({\n   *       query: ({ id, ...patch }) => ({ url: `post/${id}`, method: 'PATCH', body: patch }),\n   *       // Pick out data and prevent nested properties in a hook or selector\n   *       transformResponse: (response) => response.data,\n   *       // Pick out error and prevent nested properties in a hook or selector\n   *       transformErrorResponse: (response) => response.error,\n   *       // `result` is the server response\n   *       invalidatesTags: (result, error, id) => [{ type: 'Post', id }],\n   *      // trigger side effects or optimistic updates\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry }) {},\n   *      // handle subscriptions etc\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry }) {},\n   *     }),\n   *   }),\n   * });\n   * ```\n   */\n\n  mutation<ResultType, QueryArg>(definition: OmitFromUnion<MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>, 'type'>): MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n};\nexport type AssertTagTypes = <T extends FullTagDescription<string>>(t: T) => T;\nexport function calculateProvidedBy<ResultType, QueryArg, ErrorType, MetaType>(description: ResultDescription<string, ResultType, QueryArg, ErrorType, MetaType> | undefined, result: ResultType | undefined, error: ErrorType | undefined, queryArg: QueryArg, meta: MetaType | undefined, assertTagTypes: AssertTagTypes): readonly FullTagDescription<string>[] {\n  if (isFunction(description)) {\n    return description((result as ResultType), (error as undefined), queryArg, (meta as MetaType)).map(expandTagDescription).map(assertTagTypes);\n  }\n\n  if (Array.isArray(description)) {\n    return description.map(expandTagDescription).map(assertTagTypes);\n  }\n\n  return [];\n}\n\nfunction isFunction<T>(t: T): t is Extract<T, Function> {\n  return typeof t === 'function';\n}\n\nexport function expandTagDescription(description: TagDescription<string>): FullTagDescription<string> {\n  return typeof description === 'string' ? {\n    type: description\n  } : description;\n}\nexport type QueryArgFrom<D extends BaseEndpointDefinition<any, any, any>> = D extends BaseEndpointDefinition<infer QA, any, any> ? QA : unknown;\nexport type ResultTypeFrom<D extends BaseEndpointDefinition<any, any, any>> = D extends BaseEndpointDefinition<any, any, infer RT> ? RT : unknown;\nexport type ReducerPathFrom<D extends EndpointDefinition<any, any, any, any, any>> = D extends EndpointDefinition<any, any, any, any, infer RP> ? RP : unknown;\nexport type TagTypesFrom<D extends EndpointDefinition<any, any, any, any>> = D extends EndpointDefinition<any, any, infer RP, any> ? RP : unknown;\nexport type TagTypesFromApi<T> = T extends Api<any, any, any, infer TagTypes> ? TagTypes : never;\nexport type DefinitionsFromApi<T> = T extends Api<any, infer Definitions, any, any> ? Definitions : never;\nexport type TransformedResponse<NewDefinitions extends EndpointDefinitions, K, ResultType> = K extends keyof NewDefinitions ? NewDefinitions[K]['transformResponse'] extends undefined ? ResultType : UnwrapPromise<ReturnType<NonUndefined<NewDefinitions[K]['transformResponse']>>> : ResultType;\nexport type OverrideResultType<Definition, NewResultType> = Definition extends QueryDefinition<infer QueryArg, infer BaseQuery, infer TagTypes, any, infer ReducerPath> ? QueryDefinition<QueryArg, BaseQuery, TagTypes, NewResultType, ReducerPath> : Definition extends MutationDefinition<infer QueryArg, infer BaseQuery, infer TagTypes, any, infer ReducerPath> ? MutationDefinition<QueryArg, BaseQuery, TagTypes, NewResultType, ReducerPath> : never;\nexport type UpdateDefinitions<Definitions extends EndpointDefinitions, NewTagTypes extends string, NewDefinitions extends EndpointDefinitions> = { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<infer QueryArg, infer BaseQuery, any, infer ResultType, infer ReducerPath> ? QueryDefinition<QueryArg, BaseQuery, NewTagTypes, TransformedResponse<NewDefinitions, K, ResultType>, ReducerPath> : Definitions[K] extends MutationDefinition<infer QueryArg, infer BaseQuery, any, infer ResultType, infer ReducerPath> ? MutationDefinition<QueryArg, BaseQuery, NewTagTypes, TransformedResponse<NewDefinitions, K, ResultType>, ReducerPath> : never };","export function isNotNullish<T>(v: T | null | undefined): v is T {\n  return v != null;\n}","// Fast method for counting an object's keys\n// without resorting to `Object.keys(obj).length\n// Will this make a big difference in perf? Probably not\n// But we can save a few allocations.\nexport function countObjectKeys(obj: Record<any, any>) {\n  let count = 0;\n\n  for (const _key in obj) {\n    count++;\n  }\n\n  return count;\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { EndpointDefinitions, QueryDefinition, MutationDefinition, QueryArgFrom, ResultTypeFrom } from '../endpointDefinitions';\nimport { DefinitionType, isQueryDefinition } from '../endpointDefinitions';\nimport type { QueryThunk, MutationThunk, QueryThunkArg } from './buildThunks';\nimport type { UnknownAction, ThunkAction, SerializedError } from '@reduxjs/toolkit';\nimport type { SubscriptionOptions, RootState } from './apiState';\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { Api, ApiContext } from '../apiTypes';\nimport type { ApiEndpointQuery } from './module';\nimport type { BaseQueryError, QueryReturnValue } from '../baseQueryTypes';\nimport type { QueryResultSelectorResult } from './buildSelectors';\nimport type { Dispatch } from 'redux';\nimport { isNotNullish } from '../utils/isNotNullish';\nimport { countObjectKeys } from '../utils/countObjectKeys';\nimport type { SafePromise } from '../../tsHelpers';\nimport { asSafePromise } from '../../tsHelpers';\ndeclare module './module' {\n  export interface ApiEndpointQuery<Definition extends QueryDefinition<any, any, any, any, any>, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Definitions extends EndpointDefinitions> {\n    initiate: StartQueryActionCreator<Definition>;\n  }\n  export interface ApiEndpointMutation<Definition extends MutationDefinition<any, any, any, any, any>, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Definitions extends EndpointDefinitions> {\n    initiate: StartMutationActionCreator<Definition>;\n  }\n}\nexport const forceQueryFnSymbol = Symbol('forceQueryFn');\nexport const isUpsertQuery = (arg: QueryThunkArg) => typeof arg[forceQueryFnSymbol] === 'function';\nexport interface StartQueryActionCreatorOptions {\n  subscribe?: boolean;\n  forceRefetch?: boolean | number;\n  subscriptionOptions?: SubscriptionOptions;\n  [forceQueryFnSymbol]?: () => QueryReturnValue;\n}\ntype StartQueryActionCreator<D extends QueryDefinition<any, any, any, any, any>> = (arg: QueryArgFrom<D>, options?: StartQueryActionCreatorOptions) => ThunkAction<QueryActionCreatorResult<D>, any, any, UnknownAction>;\nexport type QueryActionCreatorResult<D extends QueryDefinition<any, any, any, any>> = SafePromise<QueryResultSelectorResult<D>> & {\n  arg: QueryArgFrom<D>;\n  requestId: string;\n  subscriptionOptions: SubscriptionOptions | undefined;\n  abort(): void;\n  unwrap(): Promise<ResultTypeFrom<D>>;\n  unsubscribe(): void;\n  refetch(): QueryActionCreatorResult<D>;\n  updateSubscriptionOptions(options: SubscriptionOptions): void;\n  queryCacheKey: string;\n};\ntype StartMutationActionCreator<D extends MutationDefinition<any, any, any, any>> = (arg: QueryArgFrom<D>, options?: {\n  /**\n   * If this mutation should be tracked in the store.\n   * If you just want to manually trigger this mutation using `dispatch` and don't care about the\n   * result, state & potential errors being held in store, you can set this to false.\n   * (defaults to `true`)\n   */\n  track?: boolean;\n  fixedCacheKey?: string;\n}) => ThunkAction<MutationActionCreatorResult<D>, any, any, UnknownAction>;\nexport type MutationActionCreatorResult<D extends MutationDefinition<any, any, any, any>> = SafePromise<{\n  data: ResultTypeFrom<D>;\n} | {\n  error: Exclude<BaseQueryError<D extends MutationDefinition<any, infer BaseQuery, any, any> ? BaseQuery : never>, undefined> | SerializedError;\n}> & {\n  /** @internal */\n  arg: {\n    /**\n     * The name of the given endpoint for the mutation\n     */\n    endpointName: string;\n    /**\n     * The original arguments supplied to the mutation call\n     */\n\n    originalArgs: QueryArgFrom<D>;\n    /**\n     * Whether the mutation is being tracked in the store.\n     */\n\n    track?: boolean;\n    fixedCacheKey?: string;\n  };\n  /**\n   * A unique string generated for the request sequence\n   */\n\n  requestId: string;\n  /**\n   * A method to cancel the mutation promise. Note that this is not intended to prevent the mutation\n   * that was fired off from reaching the server, but only to assist in handling the response.\n   *\n   * Calling `abort()` prior to the promise resolving will force it to reach the error state with\n   * the serialized error:\n   * `{ name: 'AbortError', message: 'Aborted' }`\n   *\n   * @example\n   * ```ts\n   * const [updateUser] = useUpdateUserMutation();\n   *\n   * useEffect(() => {\n   *   const promise = updateUser(id);\n   *   promise\n   *     .unwrap()\n   *     .catch((err) => {\n   *       if (err.name === 'AbortError') return;\n   *       // else handle the unexpected error\n   *     })\n   *\n   *   return () => {\n   *     promise.abort();\n   *   }\n   * }, [id, updateUser])\n   * ```\n   */\n\n  abort(): void;\n  /**\n   * Unwraps a mutation call to provide the raw response/error.\n   *\n   * @remarks\n   * If you need to access the error or success payload immediately after a mutation, you can chain .unwrap().\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using .unwrap\"\n   * addPost({ id: 1, name: 'Example' })\n   *   .unwrap()\n   *   .then((payload) => console.log('fulfilled', payload))\n   *   .catch((error) => console.error('rejected', error));\n   * ```\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using .unwrap with async await\"\n   * try {\n   *   const payload = await addPost({ id: 1, name: 'Example' }).unwrap();\n   *   console.log('fulfilled', payload)\n   * } catch (error) {\n   *   console.error('rejected', error);\n   * }\n   * ```\n   */\n\n  unwrap(): Promise<ResultTypeFrom<D>>;\n  /**\n   * A method to manually unsubscribe from the mutation call, meaning it will be removed from cache after the usual caching grace period.\n   The value returned by the hook will reset to `isUninitialized` afterwards.\n   */\n\n  reset(): void;\n};\nexport function buildInitiate({\n  serializeQueryArgs,\n  queryThunk,\n  mutationThunk,\n  api,\n  context\n}: {\n  serializeQueryArgs: InternalSerializeQueryArgs;\n  queryThunk: QueryThunk;\n  mutationThunk: MutationThunk;\n  api: Api<any, EndpointDefinitions, any, any>;\n  context: ApiContext<EndpointDefinitions>;\n}) {\n  const runningQueries: Map<Dispatch, Record<string, QueryActionCreatorResult<any> | undefined>> = new Map();\n  const runningMutations: Map<Dispatch, Record<string, MutationActionCreatorResult<any> | undefined>> = new Map();\n  const {\n    unsubscribeQueryResult,\n    removeMutationResult,\n    updateSubscriptionOptions\n  } = api.internalActions;\n  return {\n    buildInitiateQuery,\n    buildInitiateMutation,\n    getRunningQueryThunk,\n    getRunningMutationThunk,\n    getRunningQueriesThunk,\n    getRunningMutationsThunk\n  };\n\n  function getRunningQueryThunk(endpointName: string, queryArgs: any) {\n    return (dispatch: Dispatch) => {\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      const queryCacheKey = serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      });\n      return (runningQueries.get(dispatch)?.[queryCacheKey] as QueryActionCreatorResult<never> | undefined);\n    };\n  }\n\n  function getRunningMutationThunk(\n  /**\n   * this is only here to allow TS to infer the result type by input value\n   * we could use it to validate the result, but it's probably not necessary\n   */\n  _endpointName: string, fixedCacheKeyOrRequestId: string) {\n    return (dispatch: Dispatch) => {\n      return (runningMutations.get(dispatch)?.[fixedCacheKeyOrRequestId] as MutationActionCreatorResult<never> | undefined);\n    };\n  }\n\n  function getRunningQueriesThunk() {\n    return (dispatch: Dispatch) => Object.values(runningQueries.get(dispatch) || {}).filter(isNotNullish);\n  }\n\n  function getRunningMutationsThunk() {\n    return (dispatch: Dispatch) => Object.values(runningMutations.get(dispatch) || {}).filter(isNotNullish);\n  }\n\n  function middlewareWarning(dispatch: Dispatch) {\n    if (process.env.NODE_ENV !== 'production') {\n      if ((middlewareWarning as any).triggered) return;\n      const returnedValue = dispatch(api.internalActions.internal_getRTKQSubscriptions());\n      (middlewareWarning as any).triggered = true; // The RTKQ middleware should return the internal state object,\n      // but it should _not_ be the action object.\n\n      if (typeof returnedValue !== 'object' || typeof returnedValue?.type === 'string') {\n        // Otherwise, must not have been added\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(34) : `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\nYou must add the middleware for RTK-Query to function correctly!`);\n      }\n    }\n  }\n\n  function buildInitiateQuery(endpointName: string, endpointDefinition: QueryDefinition<any, any, any, any>) {\n    const queryAction: StartQueryActionCreator<any> = (arg, {\n      subscribe = true,\n      forceRefetch,\n      subscriptionOptions,\n      [forceQueryFnSymbol]: forceQueryFn,\n      ...rest\n    } = {}) => (dispatch, getState) => {\n      const queryCacheKey = serializeQueryArgs({\n        queryArgs: arg,\n        endpointDefinition,\n        endpointName\n      });\n      const thunk = queryThunk({ ...rest,\n        type: 'query',\n        subscribe,\n        forceRefetch: forceRefetch,\n        subscriptionOptions,\n        endpointName,\n        originalArgs: arg,\n        queryCacheKey,\n        [forceQueryFnSymbol]: forceQueryFn\n      });\n      const selector = (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).select(arg);\n      const thunkResult = dispatch(thunk);\n      const stateAfter = selector(getState());\n      middlewareWarning(dispatch);\n      const {\n        requestId,\n        abort\n      } = thunkResult;\n      const skippedSynchronously = stateAfter.requestId !== requestId;\n      const runningQuery = runningQueries.get(dispatch)?.[queryCacheKey];\n\n      const selectFromState = () => selector(getState());\n\n      const statePromise: QueryActionCreatorResult<any> = Object.assign(((forceQueryFn ? // a query has been forced (upsertQueryData)\n      // -> we want to resolve it once data has been written with the data that will be written\n      thunkResult.then(selectFromState) : skippedSynchronously && !runningQuery ? // a query has been skipped due to a condition and we do not have any currently running query\n      // -> we want to resolve it immediately with the current data\n      Promise.resolve(stateAfter) : // query just started or one is already in flight\n      // -> wait for the running query, then resolve with data from after that\n      Promise.all([runningQuery, thunkResult]).then(selectFromState)) as SafePromise<any>), {\n        arg,\n        requestId,\n        subscriptionOptions,\n        queryCacheKey,\n        abort,\n\n        async unwrap() {\n          const result = await statePromise;\n\n          if (result.isError) {\n            throw result.error;\n          }\n\n          return result.data;\n        },\n\n        refetch: () => dispatch(queryAction(arg, {\n          subscribe: false,\n          forceRefetch: true\n        })),\n\n        unsubscribe() {\n          if (subscribe) dispatch(unsubscribeQueryResult({\n            queryCacheKey,\n            requestId\n          }));\n        },\n\n        updateSubscriptionOptions(options: SubscriptionOptions) {\n          statePromise.subscriptionOptions = options;\n          dispatch(updateSubscriptionOptions({\n            endpointName,\n            requestId,\n            queryCacheKey,\n            options\n          }));\n        }\n\n      });\n\n      if (!runningQuery && !skippedSynchronously && !forceQueryFn) {\n        const running = runningQueries.get(dispatch) || {};\n        running[queryCacheKey] = statePromise;\n        runningQueries.set(dispatch, running);\n        statePromise.then(() => {\n          delete running[queryCacheKey];\n\n          if (!countObjectKeys(running)) {\n            runningQueries.delete(dispatch);\n          }\n        });\n      }\n\n      return statePromise;\n    };\n\n    return queryAction;\n  }\n\n  function buildInitiateMutation(endpointName: string): StartMutationActionCreator<any> {\n    return (arg, {\n      track = true,\n      fixedCacheKey\n    } = {}) => (dispatch, getState) => {\n      const thunk = mutationThunk({\n        type: 'mutation',\n        endpointName,\n        originalArgs: arg,\n        track,\n        fixedCacheKey\n      });\n      const thunkResult = dispatch(thunk);\n      middlewareWarning(dispatch);\n      const {\n        requestId,\n        abort,\n        unwrap\n      } = thunkResult;\n      const returnValuePromise = asSafePromise(thunkResult.unwrap().then(data => ({\n        data\n      })), error => ({\n        error\n      }));\n\n      const reset = () => {\n        dispatch(removeMutationResult({\n          requestId,\n          fixedCacheKey\n        }));\n      };\n\n      const ret = Object.assign(returnValuePromise, {\n        arg: thunkResult.arg,\n        requestId,\n        abort,\n        unwrap,\n        reset\n      });\n      const running = runningMutations.get(dispatch) || {};\n      runningMutations.set(dispatch, running);\n      running[requestId] = ret;\n      ret.then(() => {\n        delete running[requestId];\n\n        if (!countObjectKeys(running)) {\n          runningMutations.delete(dispatch);\n        }\n      });\n\n      if (fixedCacheKey) {\n        running[fixedCacheKey] = ret;\n        ret.then(() => {\n          if (running[fixedCacheKey] === ret) {\n            delete running[fixedCacheKey];\n\n            if (!countObjectKeys(running)) {\n              runningMutations.delete(dispatch);\n            }\n          }\n        });\n      }\n\n      return ret;\n    };\n  }\n}","import type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { Api, ApiContext } from '../apiTypes';\nimport type { BaseQueryFn, BaseQueryError, QueryReturnValue } from '../baseQueryTypes';\nimport type { RootState, QueryKeys, QuerySubstateIdentifier } from './apiState';\nimport { QueryStatus } from './apiState';\nimport type { StartQueryActionCreatorOptions, QueryActionCreatorResult } from './buildInitiate';\nimport { forceQueryFnSymbol, isUpsertQuery } from './buildInitiate';\nimport type { AssertTagTypes, EndpointDefinition, EndpointDefinitions, MutationDefinition, QueryArgFrom, QueryDefinition, ResultTypeFrom, FullTagDescription } from '../endpointDefinitions';\nimport { isQueryDefinition } from '../endpointDefinitions';\nimport { calculateProvidedBy } from '../endpointDefinitions';\nimport type { AsyncThunkPayloadCreator, Draft, UnknownAction } from '@reduxjs/toolkit';\nimport { isAllOf, isFulfilled, isPending, isRejected, isRejectedWithValue, createAsyncThunk, SHOULD_AUTOBATCH } from './rtkImports';\nimport type { Patch } from 'immer';\nimport { isDraftable, produceWithPatches } from 'immer';\nimport type { ThunkAction, ThunkDispatch, AsyncThunk } from '@reduxjs/toolkit';\nimport { HandledError } from '../HandledError';\nimport type { ApiEndpointQuery, PrefetchOptions } from './module';\nimport type { UnwrapPromise } from '../tsHelpers';\ndeclare module './module' {\n  export interface ApiEndpointQuery<Definition extends QueryDefinition<any, any, any, any, any>, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Definitions extends EndpointDefinitions> extends Matchers<QueryThunk, Definition> {}\n  export interface ApiEndpointMutation<Definition extends MutationDefinition<any, any, any, any, any>, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Definitions extends EndpointDefinitions> extends Matchers<MutationThunk, Definition> {}\n}\ntype EndpointThunk<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = Definition extends EndpointDefinition<infer QueryArg, infer BaseQueryFn, any, infer ResultType> ? Thunk extends AsyncThunk<unknown, infer ATArg, infer ATConfig> ? AsyncThunk<ResultType, ATArg & {\n  originalArgs: QueryArg;\n}, ATConfig & {\n  rejectValue: BaseQueryError<BaseQueryFn>;\n}> : never : never;\nexport type PendingAction<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = ReturnType<EndpointThunk<Thunk, Definition>['pending']>;\nexport type FulfilledAction<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = ReturnType<EndpointThunk<Thunk, Definition>['fulfilled']>;\nexport type RejectedAction<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = ReturnType<EndpointThunk<Thunk, Definition>['rejected']>;\nexport type Matcher<M> = (value: any) => value is M;\nexport interface Matchers<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> {\n  matchPending: Matcher<PendingAction<Thunk, Definition>>;\n  matchFulfilled: Matcher<FulfilledAction<Thunk, Definition>>;\n  matchRejected: Matcher<RejectedAction<Thunk, Definition>>;\n}\nexport interface QueryThunkArg extends QuerySubstateIdentifier, StartQueryActionCreatorOptions {\n  type: 'query';\n  originalArgs: unknown;\n  endpointName: string;\n}\nexport interface MutationThunkArg {\n  type: 'mutation';\n  originalArgs: unknown;\n  endpointName: string;\n  track?: boolean;\n  fixedCacheKey?: string;\n}\nexport type ThunkResult = unknown;\nexport type ThunkApiMetaConfig = {\n  pendingMeta: {\n    startedTimeStamp: number;\n    [SHOULD_AUTOBATCH]: true;\n  };\n  fulfilledMeta: {\n    fulfilledTimeStamp: number;\n    baseQueryMeta: unknown;\n    [SHOULD_AUTOBATCH]: true;\n  };\n  rejectedMeta: {\n    baseQueryMeta: unknown;\n    [SHOULD_AUTOBATCH]: true;\n  };\n};\nexport type QueryThunk = AsyncThunk<ThunkResult, QueryThunkArg, ThunkApiMetaConfig>;\nexport type MutationThunk = AsyncThunk<ThunkResult, MutationThunkArg, ThunkApiMetaConfig>;\n\nfunction defaultTransformResponse(baseQueryReturnValue: unknown) {\n  return baseQueryReturnValue;\n}\n\nexport type MaybeDrafted<T> = T | Draft<T>;\nexport type Recipe<T> = (data: MaybeDrafted<T>) => void | MaybeDrafted<T>;\nexport type UpsertRecipe<T> = (data: MaybeDrafted<T> | undefined) => void | MaybeDrafted<T>;\nexport type PatchQueryDataThunk<Definitions extends EndpointDefinitions, PartialState> = <EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>, patches: readonly Patch[], updateProvided?: boolean) => ThunkAction<void, PartialState, any, UnknownAction>;\nexport type UpdateQueryDataThunk<Definitions extends EndpointDefinitions, PartialState> = <EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>, updateRecipe: Recipe<ResultTypeFrom<Definitions[EndpointName]>>, updateProvided?: boolean) => ThunkAction<PatchCollection, PartialState, any, UnknownAction>;\nexport type UpsertQueryDataThunk<Definitions extends EndpointDefinitions, PartialState> = <EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>, value: ResultTypeFrom<Definitions[EndpointName]>) => ThunkAction<QueryActionCreatorResult<Definitions[EndpointName] extends QueryDefinition<any, any, any, any> ? Definitions[EndpointName] : never>, PartialState, any, UnknownAction>;\n/**\n * An object returned from dispatching a `api.util.updateQueryData` call.\n */\n\nexport type PatchCollection = {\n  /**\n   * An `immer` Patch describing the cache update.\n   */\n  patches: Patch[];\n  /**\n   * An `immer` Patch to revert the cache update.\n   */\n\n  inversePatches: Patch[];\n  /**\n   * A function that will undo the cache update.\n   */\n\n  undo: () => void;\n};\nexport function buildThunks<BaseQuery extends BaseQueryFn, ReducerPath extends string, Definitions extends EndpointDefinitions>({\n  reducerPath,\n  baseQuery,\n  context: {\n    endpointDefinitions\n  },\n  serializeQueryArgs,\n  api,\n  assertTagType\n}: {\n  baseQuery: BaseQuery;\n  reducerPath: ReducerPath;\n  context: ApiContext<Definitions>;\n  serializeQueryArgs: InternalSerializeQueryArgs;\n  api: Api<BaseQuery, Definitions, ReducerPath, any>;\n  assertTagType: AssertTagTypes;\n}) {\n  type State = RootState<any, string, ReducerPath>;\n\n  const patchQueryData: PatchQueryDataThunk<EndpointDefinitions, State> = (endpointName, args, patches, updateProvided) => (dispatch, getState) => {\n    const endpointDefinition = endpointDefinitions[endpointName];\n    const queryCacheKey = serializeQueryArgs({\n      queryArgs: args,\n      endpointDefinition,\n      endpointName\n    });\n    dispatch(api.internalActions.queryResultPatched({\n      queryCacheKey,\n      patches\n    }));\n\n    if (!updateProvided) {\n      return;\n    }\n\n    const newValue = api.endpoints[endpointName].select(args)(( // Work around TS 4.1 mismatch\n    getState() as RootState<any, any, any>));\n    const providedTags = calculateProvidedBy(endpointDefinition.providesTags, newValue.data, undefined, args, {}, assertTagType);\n    dispatch(api.internalActions.updateProvidedBy({\n      queryCacheKey,\n      providedTags\n    }));\n  };\n\n  const updateQueryData: UpdateQueryDataThunk<EndpointDefinitions, State> = (endpointName, args, updateRecipe, updateProvided = true) => (dispatch, getState) => {\n    const endpointDefinition = api.endpoints[endpointName];\n    const currentState = endpointDefinition.select(args)(( // Work around TS 4.1 mismatch\n    getState() as RootState<any, any, any>));\n    let ret: PatchCollection = {\n      patches: [],\n      inversePatches: [],\n      undo: () => dispatch(api.util.patchQueryData(endpointName, args, ret.inversePatches, updateProvided))\n    };\n\n    if (currentState.status === QueryStatus.uninitialized) {\n      return ret;\n    }\n\n    let newValue;\n\n    if ('data' in currentState) {\n      if (isDraftable(currentState.data)) {\n        const [value, patches, inversePatches] = produceWithPatches(currentState.data, updateRecipe);\n        ret.patches.push(...patches);\n        ret.inversePatches.push(...inversePatches);\n        newValue = value;\n      } else {\n        newValue = updateRecipe(currentState.data);\n        ret.patches.push({\n          op: 'replace',\n          path: [],\n          value: newValue\n        });\n        ret.inversePatches.push({\n          op: 'replace',\n          path: [],\n          value: currentState.data\n        });\n      }\n    }\n\n    dispatch(api.util.patchQueryData(endpointName, args, ret.patches, updateProvided));\n    return ret;\n  };\n\n  const upsertQueryData: UpsertQueryDataThunk<Definitions, State> = (endpointName, args, value) => dispatch => {\n    return dispatch((api.endpoints[endpointName] as ApiEndpointQuery<QueryDefinition<any, any, any, any, any>, Definitions>).initiate(args, {\n      subscribe: false,\n      forceRefetch: true,\n      [forceQueryFnSymbol]: () => ({\n        data: value\n      })\n    }));\n  };\n\n  const executeEndpoint: AsyncThunkPayloadCreator<ThunkResult, QueryThunkArg | MutationThunkArg, ThunkApiMetaConfig & {\n    state: RootState<any, string, ReducerPath>;\n  }> = async (arg, {\n    signal,\n    abort,\n    rejectWithValue,\n    fulfillWithValue,\n    dispatch,\n    getState,\n    extra\n  }) => {\n    const endpointDefinition = endpointDefinitions[arg.endpointName];\n\n    try {\n      let transformResponse: (baseQueryReturnValue: any, meta: any, arg: any) => any = defaultTransformResponse;\n      let result: QueryReturnValue;\n      const baseQueryApi = {\n        signal,\n        abort,\n        dispatch,\n        getState,\n        extra,\n        endpoint: arg.endpointName,\n        type: arg.type,\n        forced: arg.type === 'query' ? isForcedQuery(arg, getState()) : undefined\n      };\n      const forceQueryFn = arg.type === 'query' ? arg[forceQueryFnSymbol] : undefined;\n\n      if (forceQueryFn) {\n        result = forceQueryFn();\n      } else if (endpointDefinition.query) {\n        result = await baseQuery(endpointDefinition.query(arg.originalArgs), baseQueryApi, (endpointDefinition.extraOptions as any));\n\n        if (endpointDefinition.transformResponse) {\n          transformResponse = endpointDefinition.transformResponse;\n        }\n      } else {\n        result = await endpointDefinition.queryFn(arg.originalArgs, baseQueryApi, (endpointDefinition.extraOptions as any), arg => baseQuery(arg, baseQueryApi, (endpointDefinition.extraOptions as any)));\n      }\n\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        const what = endpointDefinition.query ? '`baseQuery`' : '`queryFn`';\n        let err: undefined | string;\n\n        if (!result) {\n          err = `${what} did not return anything.`;\n        } else if (typeof result !== 'object') {\n          err = `${what} did not return an object.`;\n        } else if (result.error && result.data) {\n          err = `${what} returned an object containing both \\`error\\` and \\`result\\`.`;\n        } else if (result.error === undefined && result.data === undefined) {\n          err = `${what} returned an object containing neither a valid \\`error\\` and \\`result\\`. At least one of them should not be \\`undefined\\``;\n        } else {\n          for (const key of Object.keys(result)) {\n            if (key !== 'error' && key !== 'data' && key !== 'meta') {\n              err = `The object returned by ${what} has the unknown property ${key}.`;\n              break;\n            }\n          }\n        }\n\n        if (err) {\n          console.error(`Error encountered handling the endpoint ${arg.endpointName}.\n              ${err}\n              It needs to return an object with either the shape \\`{ data: <value> }\\` or \\`{ error: <value> }\\` that may contain an optional \\`meta\\` property.\n              Object returned was:`, result);\n        }\n      }\n\n      if (result.error) throw new HandledError(result.error, result.meta);\n      return fulfillWithValue(await transformResponse(result.data, result.meta, arg.originalArgs), {\n        fulfilledTimeStamp: Date.now(),\n        baseQueryMeta: result.meta,\n        [SHOULD_AUTOBATCH]: true\n      });\n    } catch (error) {\n      let catchedError = error;\n\n      if (catchedError instanceof HandledError) {\n        let transformErrorResponse: (baseQueryReturnValue: any, meta: any, arg: any) => any = defaultTransformResponse;\n\n        if (endpointDefinition.query && endpointDefinition.transformErrorResponse) {\n          transformErrorResponse = endpointDefinition.transformErrorResponse;\n        }\n\n        try {\n          return rejectWithValue(await transformErrorResponse(catchedError.value, catchedError.meta, arg.originalArgs), {\n            baseQueryMeta: catchedError.meta,\n            [SHOULD_AUTOBATCH]: true\n          });\n        } catch (e) {\n          catchedError = e;\n        }\n      }\n\n      if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n        console.error(`An unhandled error occurred processing a request for the endpoint \"${arg.endpointName}\".\nIn the case of an unhandled error, no tags will be \"provided\" or \"invalidated\".`, catchedError);\n      } else {\n        console.error(catchedError);\n      }\n\n      throw catchedError;\n    }\n  };\n\n  function isForcedQuery(arg: QueryThunkArg, state: RootState<any, string, ReducerPath>) {\n    const requestState = state[reducerPath]?.queries?.[arg.queryCacheKey];\n    const baseFetchOnMountOrArgChange = state[reducerPath]?.config.refetchOnMountOrArgChange;\n    const fulfilledVal = requestState?.fulfilledTimeStamp;\n    const refetchVal = arg.forceRefetch ?? (arg.subscribe && baseFetchOnMountOrArgChange);\n\n    if (refetchVal) {\n      // Return if its true or compare the dates because it must be a number\n      return refetchVal === true || (Number(new Date()) - Number(fulfilledVal)) / 1000 >= refetchVal;\n    }\n\n    return false;\n  }\n\n  const queryThunk = createAsyncThunk<ThunkResult, QueryThunkArg, ThunkApiMetaConfig & {\n    state: RootState<any, string, ReducerPath>;\n  }>(`${reducerPath}/executeQuery`, executeEndpoint, {\n    getPendingMeta() {\n      return {\n        startedTimeStamp: Date.now(),\n        [SHOULD_AUTOBATCH]: true\n      };\n    },\n\n    condition(queryThunkArgs, {\n      getState\n    }) {\n      const state = getState();\n      const requestState = state[reducerPath]?.queries?.[queryThunkArgs.queryCacheKey];\n      const fulfilledVal = requestState?.fulfilledTimeStamp;\n      const currentArg = queryThunkArgs.originalArgs;\n      const previousArg = requestState?.originalArgs;\n      const endpointDefinition = endpointDefinitions[queryThunkArgs.endpointName]; // Order of these checks matters.\n      // In order for `upsertQueryData` to successfully run while an existing request is in flight,\n      /// we have to check for that first, otherwise `queryThunk` will bail out and not run at all.\n\n      if (isUpsertQuery(queryThunkArgs)) {\n        return true;\n      } // Don't retry a request that's currently in-flight\n\n\n      if (requestState?.status === 'pending') {\n        return false;\n      } // if this is forced, continue\n\n\n      if (isForcedQuery(queryThunkArgs, state)) {\n        return true;\n      }\n\n      if (isQueryDefinition(endpointDefinition) && endpointDefinition?.forceRefetch?.({\n        currentArg,\n        previousArg,\n        endpointState: requestState,\n        state\n      })) {\n        return true;\n      } // Pull from the cache unless we explicitly force refetch or qualify based on time\n\n\n      if (fulfilledVal) {\n        // Value is cached and we didn't specify to refresh, skip it.\n        return false;\n      }\n\n      return true;\n    },\n\n    dispatchConditionRejection: true\n  });\n  const mutationThunk = createAsyncThunk<ThunkResult, MutationThunkArg, ThunkApiMetaConfig & {\n    state: RootState<any, string, ReducerPath>;\n  }>(`${reducerPath}/executeMutation`, executeEndpoint, {\n    getPendingMeta() {\n      return {\n        startedTimeStamp: Date.now(),\n        [SHOULD_AUTOBATCH]: true\n      };\n    }\n\n  });\n\n  const hasTheForce = (options: any): options is {\n    force: boolean;\n  } => 'force' in options;\n\n  const hasMaxAge = (options: any): options is {\n    ifOlderThan: false | number;\n  } => 'ifOlderThan' in options;\n\n  const prefetch = <EndpointName extends QueryKeys<Definitions>,>(endpointName: EndpointName, arg: any, options: PrefetchOptions): ThunkAction<void, any, any, UnknownAction> => (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\n    const force = hasTheForce(options) && options.force;\n    const maxAge = hasMaxAge(options) && options.ifOlderThan;\n\n    const queryAction = (force: boolean = true) => {\n      const options = {\n        forceRefetch: force,\n        isPrefetch: true\n      };\n      return (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).initiate(arg, options);\n    };\n\n    const latestStateValue = (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).select(arg)(getState());\n\n    if (force) {\n      dispatch(queryAction());\n    } else if (maxAge) {\n      const lastFulfilledTs = latestStateValue?.fulfilledTimeStamp;\n\n      if (!lastFulfilledTs) {\n        dispatch(queryAction());\n        return;\n      }\n\n      const shouldRetrigger = (Number(new Date()) - Number(new Date(lastFulfilledTs))) / 1000 >= maxAge;\n\n      if (shouldRetrigger) {\n        dispatch(queryAction());\n      }\n    } else {\n      // If prefetching with no options, just let it try\n      dispatch(queryAction(false));\n    }\n  };\n\n  function matchesEndpoint(endpointName: string) {\n    return (action: any): action is UnknownAction => action?.meta?.arg?.endpointName === endpointName;\n  }\n\n  function buildMatchThunkActions<Thunk extends AsyncThunk<any, QueryThunkArg, ThunkApiMetaConfig> | AsyncThunk<any, MutationThunkArg, ThunkApiMetaConfig>>(thunk: Thunk, endpointName: string) {\n    return ({\n      matchPending: isAllOf(isPending(thunk), matchesEndpoint(endpointName)),\n      matchFulfilled: isAllOf(isFulfilled(thunk), matchesEndpoint(endpointName)),\n      matchRejected: isAllOf(isRejected(thunk), matchesEndpoint(endpointName))\n    } as Matchers<Thunk, any>);\n  }\n\n  return {\n    queryThunk,\n    mutationThunk,\n    prefetch,\n    updateQueryData,\n    upsertQueryData,\n    patchQueryData,\n    buildMatchThunkActions\n  };\n}\nexport function calculateProvidedByThunk(action: UnwrapPromise<ReturnType<ReturnType<QueryThunk>> | ReturnType<ReturnType<MutationThunk>>>, type: 'providesTags' | 'invalidatesTags', endpointDefinitions: EndpointDefinitions, assertTagType: AssertTagTypes) {\n  return calculateProvidedBy(endpointDefinitions[action.meta.arg.endpointName][type], isFulfilled(action) ? action.payload : undefined, isRejectedWithValue(action) ? action.payload : undefined, action.meta.arg.originalArgs, 'baseQueryMeta' in action.meta ? action.meta.baseQueryMeta : undefined, assertTagType);\n}","import type { Action, PayloadAction, UnknownAction } from '@reduxjs/toolkit';\nimport { combineReducers, createAction, createSlice, isAnyOf, isFulfilled, isRejectedWithValue, createNextState, prepareAutoBatched } from './rtkImports';\nimport type { QuerySubstateIdentifier, QuerySubState, MutationSubstateIdentifier, MutationSubState, MutationState, QueryState, InvalidationState, Subscribers, QueryCacheKey, SubscriptionState, ConfigState } from './apiState';\nimport { QueryStatus } from './apiState';\nimport type { MutationThunk, QueryThunk, RejectedAction } from './buildThunks';\nimport { calculateProvidedByThunk } from './buildThunks';\nimport type { AssertTagTypes, EndpointDefinitions, FullTagDescription, QueryDefinition } from '../endpointDefinitions';\nimport type { Patch } from 'immer';\nimport { isDraft } from 'immer';\nimport { applyPatches, original } from 'immer';\nimport { onFocus, onFocusLost, onOffline, onOnline } from './setupListeners';\nimport { isDocumentVisible, isOnline, copyWithStructuralSharing } from '../utils';\nimport type { ApiContext } from '../apiTypes';\nimport { isUpsertQuery } from './buildInitiate';\n\nfunction updateQuerySubstateIfExists(state: QueryState<any>, queryCacheKey: QueryCacheKey, update: (substate: QuerySubState<any>) => void) {\n  const substate = state[queryCacheKey];\n\n  if (substate) {\n    update(substate);\n  }\n}\n\nexport function getMutationCacheKey(id: MutationSubstateIdentifier | {\n  requestId: string;\n  arg: {\n    fixedCacheKey?: string | undefined;\n  };\n}): string;\nexport function getMutationCacheKey(id: {\n  fixedCacheKey?: string;\n  requestId?: string;\n}): string | undefined;\nexport function getMutationCacheKey(id: {\n  fixedCacheKey?: string;\n  requestId?: string;\n} | MutationSubstateIdentifier | {\n  requestId: string;\n  arg: {\n    fixedCacheKey?: string | undefined;\n  };\n}): string | undefined {\n  return ('arg' in id ? id.arg.fixedCacheKey : id.fixedCacheKey) ?? id.requestId;\n}\n\nfunction updateMutationSubstateIfExists(state: MutationState<any>, id: MutationSubstateIdentifier | {\n  requestId: string;\n  arg: {\n    fixedCacheKey?: string | undefined;\n  };\n}, update: (substate: MutationSubState<any>) => void) {\n  const substate = state[getMutationCacheKey(id)];\n\n  if (substate) {\n    update(substate);\n  }\n}\n\nconst initialState = ({} as any);\nexport function buildSlice({\n  reducerPath,\n  queryThunk,\n  mutationThunk,\n  context: {\n    endpointDefinitions: definitions,\n    apiUid,\n    extractRehydrationInfo,\n    hasRehydrationInfo\n  },\n  assertTagType,\n  config\n}: {\n  reducerPath: string;\n  queryThunk: QueryThunk;\n  mutationThunk: MutationThunk;\n  context: ApiContext<EndpointDefinitions>;\n  assertTagType: AssertTagTypes;\n  config: Omit<ConfigState<string>, 'online' | 'focused' | 'middlewareRegistered'>;\n}) {\n  const resetApiState = createAction(`${reducerPath}/resetApiState`);\n  const querySlice = createSlice({\n    name: `${reducerPath}/queries`,\n    initialState: (initialState as QueryState<any>),\n    reducers: {\n      removeQueryResult: {\n        reducer(draft, {\n          payload: {\n            queryCacheKey\n          }\n        }: PayloadAction<QuerySubstateIdentifier>) {\n          delete draft[queryCacheKey];\n        },\n\n        prepare: prepareAutoBatched<QuerySubstateIdentifier>()\n      },\n      queryResultPatched: {\n        reducer(draft, {\n          payload: {\n            queryCacheKey,\n            patches\n          }\n        }: PayloadAction<QuerySubstateIdentifier & {\n          patches: readonly Patch[];\n        }>) {\n          updateQuerySubstateIfExists(draft, queryCacheKey, substate => {\n            substate.data = applyPatches((substate.data as any), patches.concat());\n          });\n        },\n\n        prepare: prepareAutoBatched<QuerySubstateIdentifier & {\n          patches: readonly Patch[];\n        }>()\n      }\n    },\n\n    extraReducers(builder) {\n      builder.addCase(queryThunk.pending, (draft, {\n        meta,\n        meta: {\n          arg\n        }\n      }) => {\n        const upserting = isUpsertQuery(arg);\n        draft[arg.queryCacheKey] ??= {\n          status: QueryStatus.uninitialized,\n          endpointName: arg.endpointName\n        };\n        updateQuerySubstateIfExists(draft, arg.queryCacheKey, substate => {\n          substate.status = QueryStatus.pending;\n          substate.requestId = upserting && substate.requestId ? // for `upsertQuery` **updates**, keep the current `requestId`\n          substate.requestId : // for normal queries or `upsertQuery` **inserts** always update the `requestId`\n          meta.requestId;\n\n          if (arg.originalArgs !== undefined) {\n            substate.originalArgs = arg.originalArgs;\n          }\n\n          substate.startedTimeStamp = meta.startedTimeStamp;\n        });\n      }).addCase(queryThunk.fulfilled, (draft, {\n        meta,\n        payload\n      }) => {\n        updateQuerySubstateIfExists(draft, meta.arg.queryCacheKey, substate => {\n          if (substate.requestId !== meta.requestId && !isUpsertQuery(meta.arg)) return;\n          const {\n            merge\n          } = (definitions[meta.arg.endpointName] as QueryDefinition<any, any, any, any>);\n          substate.status = QueryStatus.fulfilled;\n\n          if (merge) {\n            if (substate.data !== undefined) {\n              const {\n                fulfilledTimeStamp,\n                arg,\n                baseQueryMeta,\n                requestId\n              } = meta; // There's existing cache data. Let the user merge it in themselves.\n              // We're already inside an Immer-powered reducer, and the user could just mutate `substate.data`\n              // themselves inside of `merge()`. But, they might also want to return a new value.\n              // Try to let Immer figure that part out, save the result, and assign it to `substate.data`.\n\n              let newData = createNextState(substate.data, draftSubstateData => {\n                // As usual with Immer, you can mutate _or_ return inside here, but not both\n                return merge(draftSubstateData, payload, {\n                  arg: arg.originalArgs,\n                  baseQueryMeta,\n                  fulfilledTimeStamp,\n                  requestId\n                });\n              });\n              substate.data = newData;\n            } else {\n              // Presumably a fresh request. Just cache the response data.\n              substate.data = payload;\n            }\n          } else {\n            // Assign or safely update the cache data.\n            substate.data = definitions[meta.arg.endpointName].structuralSharing ?? true ? copyWithStructuralSharing(isDraft(substate.data) ? original(substate.data) : substate.data, payload) : payload;\n          }\n\n          delete substate.error;\n          substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;\n        });\n      }).addCase(queryThunk.rejected, (draft, {\n        meta: {\n          condition,\n          arg,\n          requestId\n        },\n        error,\n        payload\n      }) => {\n        updateQuerySubstateIfExists(draft, arg.queryCacheKey, substate => {\n          if (condition) {// request was aborted due to condition (another query already running)\n          } else {\n            // request failed\n            if (substate.requestId !== requestId) return;\n            substate.status = QueryStatus.rejected;\n            substate.error = (payload ?? error as any);\n          }\n        });\n      }).addMatcher(hasRehydrationInfo, (draft, action) => {\n        const {\n          queries\n        } = extractRehydrationInfo(action)!;\n\n        for (const [key, entry] of Object.entries(queries)) {\n          if ( // do not rehydrate entries that were currently in flight.\n          entry?.status === QueryStatus.fulfilled || entry?.status === QueryStatus.rejected) {\n            draft[key] = entry;\n          }\n        }\n      });\n    }\n\n  });\n  const mutationSlice = createSlice({\n    name: `${reducerPath}/mutations`,\n    initialState: (initialState as MutationState<any>),\n    reducers: {\n      removeMutationResult: {\n        reducer(draft, {\n          payload\n        }: PayloadAction<MutationSubstateIdentifier>) {\n          const cacheKey = getMutationCacheKey(payload);\n\n          if (cacheKey in draft) {\n            delete draft[cacheKey];\n          }\n        },\n\n        prepare: prepareAutoBatched<MutationSubstateIdentifier>()\n      }\n    },\n\n    extraReducers(builder) {\n      builder.addCase(mutationThunk.pending, (draft, {\n        meta,\n        meta: {\n          requestId,\n          arg,\n          startedTimeStamp\n        }\n      }) => {\n        if (!arg.track) return;\n        draft[getMutationCacheKey(meta)] = {\n          requestId,\n          status: QueryStatus.pending,\n          endpointName: arg.endpointName,\n          startedTimeStamp\n        };\n      }).addCase(mutationThunk.fulfilled, (draft, {\n        payload,\n        meta\n      }) => {\n        if (!meta.arg.track) return;\n        updateMutationSubstateIfExists(draft, meta, substate => {\n          if (substate.requestId !== meta.requestId) return;\n          substate.status = QueryStatus.fulfilled;\n          substate.data = payload;\n          substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;\n        });\n      }).addCase(mutationThunk.rejected, (draft, {\n        payload,\n        error,\n        meta\n      }) => {\n        if (!meta.arg.track) return;\n        updateMutationSubstateIfExists(draft, meta, substate => {\n          if (substate.requestId !== meta.requestId) return;\n          substate.status = QueryStatus.rejected;\n          substate.error = (payload ?? error as any);\n        });\n      }).addMatcher(hasRehydrationInfo, (draft, action) => {\n        const {\n          mutations\n        } = extractRehydrationInfo(action)!;\n\n        for (const [key, entry] of Object.entries(mutations)) {\n          if ( // do not rehydrate entries that were currently in flight.\n          (entry?.status === QueryStatus.fulfilled || entry?.status === QueryStatus.rejected) && // only rehydrate endpoints that were persisted using a `fixedCacheKey`\n          key !== entry?.requestId) {\n            draft[key] = entry;\n          }\n        }\n      });\n    }\n\n  });\n  const invalidationSlice = createSlice({\n    name: `${reducerPath}/invalidation`,\n    initialState: (initialState as InvalidationState<string>),\n    reducers: {\n      updateProvidedBy: {\n        reducer(draft, action: PayloadAction<{\n          queryCacheKey: QueryCacheKey;\n          providedTags: readonly FullTagDescription<string>[];\n        }>) {\n          const {\n            queryCacheKey,\n            providedTags\n          } = action.payload;\n\n          for (const tagTypeSubscriptions of Object.values(draft)) {\n            for (const idSubscriptions of Object.values(tagTypeSubscriptions)) {\n              const foundAt = idSubscriptions.indexOf(queryCacheKey);\n\n              if (foundAt !== -1) {\n                idSubscriptions.splice(foundAt, 1);\n              }\n            }\n          }\n\n          for (const {\n            type,\n            id\n          } of providedTags) {\n            const subscribedQueries = (draft[type] ??= {})[id || '__internal_without_id'] ??= [];\n            const alreadySubscribed = subscribedQueries.includes(queryCacheKey);\n\n            if (!alreadySubscribed) {\n              subscribedQueries.push(queryCacheKey);\n            }\n          }\n        },\n\n        prepare: prepareAutoBatched<{\n          queryCacheKey: QueryCacheKey;\n          providedTags: readonly FullTagDescription<string>[];\n        }>()\n      }\n    },\n\n    extraReducers(builder) {\n      builder.addCase(querySlice.actions.removeQueryResult, (draft, {\n        payload: {\n          queryCacheKey\n        }\n      }) => {\n        for (const tagTypeSubscriptions of Object.values(draft)) {\n          for (const idSubscriptions of Object.values(tagTypeSubscriptions)) {\n            const foundAt = idSubscriptions.indexOf(queryCacheKey);\n\n            if (foundAt !== -1) {\n              idSubscriptions.splice(foundAt, 1);\n            }\n          }\n        }\n      }).addMatcher(hasRehydrationInfo, (draft, action) => {\n        const {\n          provided\n        } = extractRehydrationInfo(action)!;\n\n        for (const [type, incomingTags] of Object.entries(provided)) {\n          for (const [id, cacheKeys] of Object.entries(incomingTags)) {\n            const subscribedQueries = (draft[type] ??= {})[id || '__internal_without_id'] ??= [];\n\n            for (const queryCacheKey of cacheKeys) {\n              const alreadySubscribed = subscribedQueries.includes(queryCacheKey);\n\n              if (!alreadySubscribed) {\n                subscribedQueries.push(queryCacheKey);\n              }\n            }\n          }\n        }\n      }).addMatcher(isAnyOf(isFulfilled(queryThunk), isRejectedWithValue(queryThunk)), (draft, action) => {\n        const providedTags = calculateProvidedByThunk(action, 'providesTags', definitions, assertTagType);\n        const {\n          queryCacheKey\n        } = action.meta.arg;\n        invalidationSlice.caseReducers.updateProvidedBy(draft, invalidationSlice.actions.updateProvidedBy({\n          queryCacheKey,\n          providedTags\n        }));\n      });\n    }\n\n  }); // Dummy slice to generate actions\n\n  const subscriptionSlice = createSlice({\n    name: `${reducerPath}/subscriptions`,\n    initialState: (initialState as SubscriptionState),\n    reducers: {\n      updateSubscriptionOptions(d, a: PayloadAction<{\n        endpointName: string;\n        requestId: string;\n        options: Subscribers[number];\n      } & QuerySubstateIdentifier>) {// Dummy\n      },\n\n      unsubscribeQueryResult(d, a: PayloadAction<{\n        requestId: string;\n      } & QuerySubstateIdentifier>) {// Dummy\n      },\n\n      internal_getRTKQSubscriptions() {}\n\n    }\n  });\n  const internalSubscriptionsSlice = createSlice({\n    name: `${reducerPath}/internalSubscriptions`,\n    initialState: (initialState as SubscriptionState),\n    reducers: {\n      subscriptionsUpdated: {\n        reducer(state, action: PayloadAction<Patch[]>) {\n          return applyPatches(state, action.payload);\n        },\n\n        prepare: prepareAutoBatched<Patch[]>()\n      }\n    }\n  });\n  const configSlice = createSlice({\n    name: `${reducerPath}/config`,\n    initialState: ({\n      online: isOnline(),\n      focused: isDocumentVisible(),\n      middlewareRegistered: false,\n      ...config\n    } as ConfigState<string>),\n    reducers: {\n      middlewareRegistered(state, {\n        payload\n      }: PayloadAction<string>) {\n        state.middlewareRegistered = state.middlewareRegistered === 'conflict' || apiUid !== payload ? 'conflict' : true;\n      }\n\n    },\n    extraReducers: builder => {\n      builder.addCase(onOnline, state => {\n        state.online = true;\n      }).addCase(onOffline, state => {\n        state.online = false;\n      }).addCase(onFocus, state => {\n        state.focused = true;\n      }).addCase(onFocusLost, state => {\n        state.focused = false;\n      }) // update the state to be a new object to be picked up as a \"state change\"\n      // by redux-persist's `autoMergeLevel2`\n      .addMatcher(hasRehydrationInfo, draft => ({ ...draft\n      }));\n    }\n  });\n  const combinedReducer = combineReducers({\n    queries: querySlice.reducer,\n    mutations: mutationSlice.reducer,\n    provided: invalidationSlice.reducer,\n    subscriptions: internalSubscriptionsSlice.reducer,\n    config: configSlice.reducer\n  });\n\n  const reducer: typeof combinedReducer = (state, action) => combinedReducer(resetApiState.match(action) ? undefined : state, action);\n\n  const actions = { ...configSlice.actions,\n    ...querySlice.actions,\n    ...subscriptionSlice.actions,\n    ...internalSubscriptionsSlice.actions,\n    ...mutationSlice.actions,\n    ...invalidationSlice.actions,\n    resetApiState\n  };\n  return {\n    reducer,\n    actions\n  };\n}\nexport type SliceActions = ReturnType<typeof buildSlice>['actions'];","/**\n * Assumes a browser is online if `undefined`, otherwise makes a best effort\n * @link https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine\n */\nexport function isOnline() {\n  // We set the default config value in the store, so we'd need to check for this in a SSR env\n  return typeof navigator === 'undefined' ? true : navigator.onLine === undefined ? true : navigator.onLine;\n}","/**\n * Assumes true for a non-browser env, otherwise makes a best effort\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n */\nexport function isDocumentVisible(): boolean {\n  // `document` may not exist in non-browser envs (like RN)\n  if (typeof document === 'undefined') {\n    return true;\n  } // Match true for visible, prerender, undefined\n\n\n  return document.visibilityState !== 'hidden';\n}","import type { createSelector as _createSelector } from './rtkImports';\nimport { createNextState } from './rtkImports';\nimport type { MutationSubState, QuerySubState, RootState as _RootState, RequestStatusFlags, QueryCacheKey, QueryKeys, QueryState } from './apiState';\nimport { QueryStatus, getRequestStatusFlags } from './apiState';\nimport type { EndpointDefinitions, QueryDefinition, MutationDefinition, QueryArgFrom, TagTypesFrom, ReducerPathFrom, TagDescription } from '../endpointDefinitions';\nimport { expandTagDescription } from '../endpointDefinitions';\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport { getMutationCacheKey } from './buildSlice';\nimport { flatten } from '../utils';\nexport type SkipToken = typeof skipToken;\n/**\n * Can be passed into `useQuery`, `useQueryState` or `useQuerySubscription`\n * instead of the query argument to get the same effect as if setting\n * `skip: true` in the query options.\n *\n * Useful for scenarios where a query should be skipped when `arg` is `undefined`\n * and TypeScript complains about it because `arg` is not allowed to be passed\n * in as `undefined`, such as\n *\n * ```ts\n * // codeblock-meta title=\"will error if the query argument is not allowed to be undefined\" no-transpile\n * useSomeQuery(arg, { skip: !!arg })\n * ```\n *\n * ```ts\n * // codeblock-meta title=\"using skipToken instead\" no-transpile\n * useSomeQuery(arg ?? skipToken)\n * ```\n *\n * If passed directly into a query or mutation selector, that selector will always\n * return an uninitialized state.\n */\n\nexport const skipToken = /* @__PURE__ */Symbol.for('RTKQ/skipToken');\ndeclare module './module' {\n  export interface ApiEndpointQuery<Definition extends QueryDefinition<any, any, any, any, any>, Definitions extends EndpointDefinitions> {\n    select: QueryResultSelectorFactory<Definition, _RootState<Definitions, TagTypesFrom<Definition>, ReducerPathFrom<Definition>>>;\n  }\n  export interface ApiEndpointMutation<Definition extends MutationDefinition<any, any, any, any, any>, Definitions extends EndpointDefinitions> {\n    select: MutationResultSelectorFactory<Definition, _RootState<Definitions, TagTypesFrom<Definition>, ReducerPathFrom<Definition>>>;\n  }\n}\ntype QueryResultSelectorFactory<Definition extends QueryDefinition<any, any, any, any>, RootState> = (queryArg: QueryArgFrom<Definition> | SkipToken) => (state: RootState) => QueryResultSelectorResult<Definition>;\nexport type QueryResultSelectorResult<Definition extends QueryDefinition<any, any, any, any>> = QuerySubState<Definition> & RequestStatusFlags;\ntype MutationResultSelectorFactory<Definition extends MutationDefinition<any, any, any, any>, RootState> = (requestId: string | {\n  requestId: string | undefined;\n  fixedCacheKey: string | undefined;\n} | SkipToken) => (state: RootState) => MutationResultSelectorResult<Definition>;\nexport type MutationResultSelectorResult<Definition extends MutationDefinition<any, any, any, any>> = MutationSubState<Definition> & RequestStatusFlags;\nconst initialSubState: QuerySubState<any> = {\n  status: (QueryStatus.uninitialized as const)\n}; // abuse immer to freeze default states\n\nconst defaultQuerySubState = /* @__PURE__ */createNextState(initialSubState, () => {});\nconst defaultMutationSubState = /* @__PURE__ */createNextState((initialSubState as MutationSubState<any>), () => {});\nexport function buildSelectors<Definitions extends EndpointDefinitions, ReducerPath extends string>({\n  serializeQueryArgs,\n  reducerPath,\n  createSelector\n}: {\n  serializeQueryArgs: InternalSerializeQueryArgs;\n  reducerPath: ReducerPath;\n  createSelector: typeof _createSelector;\n}) {\n  type RootState = _RootState<Definitions, string, string>;\n\n  const selectSkippedQuery = (state: RootState) => defaultQuerySubState;\n\n  const selectSkippedMutation = (state: RootState) => defaultMutationSubState;\n\n  return {\n    buildQuerySelector,\n    buildMutationSelector,\n    selectInvalidatedBy,\n    selectCachedArgsForQuery\n  };\n\n  function withRequestFlags<T extends {\n    status: QueryStatus;\n  }>(substate: T): T & RequestStatusFlags {\n    return { ...substate,\n      ...getRequestStatusFlags(substate.status)\n    };\n  }\n\n  function selectInternalState(rootState: RootState) {\n    const state = rootState[reducerPath];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!state) {\n        if ((selectInternalState as any).triggered) return state;\n        (selectInternalState as any).triggered = true;\n        console.error(`Error: No data found at \\`state.${reducerPath}\\`. Did you forget to add the reducer to the store?`);\n      }\n    }\n\n    return state;\n  }\n\n  function buildQuerySelector(endpointName: string, endpointDefinition: QueryDefinition<any, any, any, any>) {\n    return (((queryArgs: any) => {\n      const serializedArgs = serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      });\n\n      const selectQuerySubstate = (state: RootState) => selectInternalState(state)?.queries?.[serializedArgs] ?? defaultQuerySubState;\n\n      const finalSelectQuerySubState = queryArgs === skipToken ? selectSkippedQuery : selectQuerySubstate;\n      return createSelector(finalSelectQuerySubState, withRequestFlags);\n    }) as QueryResultSelectorFactory<any, RootState>);\n  }\n\n  function buildMutationSelector() {\n    return ((id => {\n      let mutationId: string | typeof skipToken;\n\n      if (typeof id === 'object') {\n        mutationId = getMutationCacheKey(id) ?? skipToken;\n      } else {\n        mutationId = id;\n      }\n\n      const selectMutationSubstate = (state: RootState) => selectInternalState(state)?.mutations?.[(mutationId as string)] ?? defaultMutationSubState;\n\n      const finalSelectMutationSubstate = mutationId === skipToken ? selectSkippedMutation : selectMutationSubstate;\n      return createSelector(finalSelectMutationSubstate, withRequestFlags);\n    }) as MutationResultSelectorFactory<any, RootState>);\n  }\n\n  function selectInvalidatedBy(state: RootState, tags: ReadonlyArray<TagDescription<string>>): Array<{\n    endpointName: string;\n    originalArgs: any;\n    queryCacheKey: QueryCacheKey;\n  }> {\n    const apiState = state[reducerPath];\n    const toInvalidate = new Set<QueryCacheKey>();\n\n    for (const tag of tags.map(expandTagDescription)) {\n      const provided = apiState.provided[tag.type];\n\n      if (!provided) {\n        continue;\n      }\n\n      let invalidateSubscriptions = (tag.id !== undefined ? // id given: invalidate all queries that provide this type & id\n      provided[tag.id] : // no id: invalidate all queries that provide this type\n      flatten(Object.values(provided))) ?? [];\n\n      for (const invalidate of invalidateSubscriptions) {\n        toInvalidate.add(invalidate);\n      }\n    }\n\n    return flatten(Array.from(toInvalidate.values()).map(queryCacheKey => {\n      const querySubState = apiState.queries[queryCacheKey];\n      return querySubState ? [{\n        queryCacheKey,\n        endpointName: querySubState.endpointName!,\n        originalArgs: querySubState.originalArgs\n      }] : [];\n    }));\n  }\n\n  function selectCachedArgsForQuery<QueryName extends QueryKeys<Definitions>>(state: RootState, queryName: QueryName): Array<QueryArgFrom<Definitions[QueryName]>> {\n    return Object.values((state[reducerPath].queries as QueryState<any>)).filter((entry): entry is Exclude<QuerySubState<Definitions[QueryName]>, {\n      status: QueryStatus.uninitialized;\n    }> => entry?.endpointName === queryName && entry.status !== QueryStatus.uninitialized).map(entry => entry.originalArgs);\n  }\n}","import type { QueryCacheKey } from './core/apiState';\nimport type { EndpointDefinition } from './endpointDefinitions';\nimport { isPlainObject } from './core/rtkImports';\nconst cache: WeakMap<any, string> | undefined = WeakMap ? new WeakMap() : undefined;\nexport const defaultSerializeQueryArgs: SerializeQueryArgs<any> = ({\n  endpointName,\n  queryArgs\n}) => {\n  let serialized = '';\n  const cached = cache?.get(queryArgs);\n\n  if (typeof cached === 'string') {\n    serialized = cached;\n  } else {\n    const stringified = JSON.stringify(queryArgs, (key, value) => isPlainObject(value) ? Object.keys(value).sort().reduce<any>((acc, key) => {\n      acc[key] = (value as any)[key];\n      return acc;\n    }, {}) : value);\n\n    if (isPlainObject(queryArgs)) {\n      cache?.set(queryArgs, stringified);\n    }\n\n    serialized = stringified;\n  } // Sort the object keys before stringifying, to prevent useQuery({ a: 1, b: 2 }) having a different cache key than useQuery({ b: 2, a: 1 })\n\n\n  return `${endpointName}(${serialized})`;\n};\nexport type SerializeQueryArgs<QueryArgs, ReturnType = string> = (_: {\n  queryArgs: QueryArgs;\n  endpointDefinition: EndpointDefinition<any, any, any, any>;\n  endpointName: string;\n}) => ReturnType;\nexport type InternalSerializeQueryArgs = (_: {\n  queryArgs: any;\n  endpointDefinition: EndpointDefinition<any, any, any, any>;\n  endpointName: string;\n}) => QueryCacheKey;","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Api, ApiContext, Module, ModuleName } from './apiTypes';\nimport type { CombinedState } from './core/apiState';\nimport type { BaseQueryArg, BaseQueryFn } from './baseQueryTypes';\nimport type { SerializeQueryArgs } from './defaultSerializeQueryArgs';\nimport { defaultSerializeQueryArgs } from './defaultSerializeQueryArgs';\nimport type { EndpointBuilder, EndpointDefinitions } from './endpointDefinitions';\nimport { DefinitionType, isQueryDefinition } from './endpointDefinitions';\nimport { nanoid } from './core/rtkImports';\nimport type { UnknownAction } from '@reduxjs/toolkit';\nimport type { NoInfer } from './tsHelpers';\nimport { weakMapMemoize } from 'reselect';\nexport interface CreateApiOptions<BaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, ReducerPath extends string = 'api', TagTypes extends string = never> {\n  /**\n   * The base query used by each endpoint if no `queryFn` option is specified. RTK Query exports a utility called [fetchBaseQuery](./fetchBaseQuery) as a lightweight wrapper around `fetch` for common use-cases. See [Customizing Queries](../../rtk-query/usage/customizing-queries) if `fetchBaseQuery` does not handle your requirements.\n   *\n   * @example\n   *\n   * ```ts\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n   *\n   * const api = createApi({\n   *   // highlight-start\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   // highlight-end\n   *   endpoints: (build) => ({\n   *     // ...endpoints\n   *   }),\n   * })\n   * ```\n   */\n  baseQuery: BaseQuery;\n  /**\n   * An array of string tag type names. Specifying tag types is optional, but you should define them so that they can be used for caching and invalidation. When defining a tag type, you will be able to [provide](../../rtk-query/usage/automated-refetching#providing-tags) them with `providesTags` and [invalidate](../../rtk-query/usage/automated-refetching#invalidating-tags) them with `invalidatesTags` when configuring [endpoints](#endpoints).\n   *\n   * @example\n   *\n   * ```ts\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   // highlight-start\n   *   tagTypes: ['Post', 'User'],\n   *   // highlight-end\n   *   endpoints: (build) => ({\n   *     // ...endpoints\n   *   }),\n   * })\n   * ```\n   */\n\n  tagTypes?: readonly TagTypes[];\n  /**\n   * The `reducerPath` is a _unique_ key that your service will be mounted to in your store. If you call `createApi` more than once in your application, you will need to provide a unique value each time. Defaults to `'api'`.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"apis.js\"\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query';\n   *\n   * const apiOne = createApi({\n   *   // highlight-start\n   *   reducerPath: 'apiOne',\n   *   // highlight-end\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (builder) => ({\n   *     // ...endpoints\n   *   }),\n   * });\n   *\n   * const apiTwo = createApi({\n   *   // highlight-start\n   *   reducerPath: 'apiTwo',\n   *   // highlight-end\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (builder) => ({\n   *     // ...endpoints\n   *   }),\n   * });\n   * ```\n   */\n\n  reducerPath?: ReducerPath;\n  /**\n   * Accepts a custom function if you have a need to change the creation of cache keys for any reason.\n   */\n\n  serializeQueryArgs?: SerializeQueryArgs<BaseQueryArg<BaseQuery>>;\n  /**\n   * Endpoints are just a set of operations that you want to perform against your server. You define them as an object using the builder syntax. There are two basic endpoint types: [`query`](../../rtk-query/usage/queries) and [`mutation`](../../rtk-query/usage/mutations).\n   */\n\n  endpoints(build: EndpointBuilder<BaseQuery, TagTypes, ReducerPath>): Definitions;\n  /**\n   * Defaults to `60` _(this value is in seconds)_. This is how long RTK Query will keep your data cached for **after** the last component unsubscribes. For example, if you query an endpoint, then unmount the component, then mount another component that makes the same request within the given time frame, the most recent value will be served from the cache.\n   *\n   * ```ts\n   * // codeblock-meta title=\"keepUnusedDataFor example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *       // highlight-start\n   *       keepUnusedDataFor: 5\n   *       // highlight-end\n   *     })\n   *   })\n   * })\n   * ```\n   */\n\n  keepUnusedDataFor?: number;\n  /**\n   * Defaults to `false`. This setting allows you to control whether if a cached result is already available RTK Query will only serve a cached result, or if it should `refetch` when set to `true` or if an adequate amount of time has passed since the last successful query result.\n   * - `false` - Will not cause a query to be performed _unless_ it does not exist yet.\n   * - `true` - Will always refetch when a new subscriber to a query is added. Behaves the same as calling the `refetch` callback or passing `forceRefetch: true` in the action creator.\n   * - `number` - **Value is in seconds**. If a number is provided and there is an existing query in the cache, it will compare the current time vs the last fulfilled timestamp, and only refetch if enough time has elapsed.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   */\n\n  refetchOnMountOrArgChange?: boolean | number;\n  /**\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after the application window regains focus.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   *\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n\n  refetchOnFocus?: boolean;\n  /**\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after regaining a network connection.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   *\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n\n  refetchOnReconnect?: boolean;\n  /**\n   * Defaults to `'immediately'`. This setting allows you to control when tags are invalidated after a mutation.\n   *\n   * - `'immediately'`: Queries are invalidated instantly after the mutation finished, even if they are running.\n   *   If the query provides tags that were invalidated while it ran, it won't be re-fetched.\n   * - `'delayed'`: Invalidation only happens after all queries and mutations are settled.\n   *   This ensures that queries are always invalidated correctly and automatically \"batches\" invalidations of concurrent mutations.\n   *   Note that if you constantly have some queries (or mutations) running, this can delay tag invalidations indefinitely.\n   */\n\n  invalidationBehavior?: 'delayed' | 'immediately';\n  /**\n   * A function that is passed every dispatched action. If this returns something other than `undefined`,\n   * that return value will be used to rehydrate fulfilled & errored queries.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"next-redux-wrapper rehydration example\"\n   * import type { Action, PayloadAction } from '@reduxjs/toolkit'\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * import { HYDRATE } from 'next-redux-wrapper'\n   *\n   * type RootState = any; // normally inferred from state\n   *\n   * function isHydrateAction(action: Action): action is PayloadAction<RootState> {\n   *   return action.type === HYDRATE\n   * }\n   *\n   * export const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   // highlight-start\n   *   extractRehydrationInfo(action, { reducerPath }): any {\n   *     if (isHydrateAction(action)) {\n   *       return action.payload[reducerPath]\n   *     }\n   *   },\n   *   // highlight-end\n   *   endpoints: (build) => ({\n   *     // omitted\n   *   }),\n   * })\n   * ```\n   */\n\n  extractRehydrationInfo?: (action: UnknownAction, {\n    reducerPath\n  }: {\n    reducerPath: ReducerPath;\n  }) => undefined | CombinedState<NoInfer<Definitions>, NoInfer<TagTypes>, NoInfer<ReducerPath>>;\n}\nexport type CreateApi<Modules extends ModuleName> = {\n  /**\n   * Creates a service to use in your application. Contains only the basic redux logic (the core module).\n   *\n   * @link https://rtk-query-docs.netlify.app/api/createApi\n   */\n  <BaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, ReducerPath extends string = 'api', TagTypes extends string = never>(options: CreateApiOptions<BaseQuery, Definitions, ReducerPath, TagTypes>): Api<BaseQuery, Definitions, ReducerPath, TagTypes, Modules>;\n};\n/**\n * Builds a `createApi` method based on the provided `modules`.\n *\n * @link https://rtk-query-docs.netlify.app/concepts/customizing-create-api\n *\n * @example\n * ```ts\n * const MyContext = React.createContext<ReactReduxContextValue>(null as any);\n * const customCreateApi = buildCreateApi(\n *   coreModule(),\n *   reactHooksModule({\n *     hooks: {\n *       useDispatch: createDispatchHook(MyContext),\n *       useSelector: createSelectorHook(MyContext),\n *       useStore: createStoreHook(MyContext)\n *     }\n *   })\n * );\n * ```\n *\n * @param modules - A variable number of modules that customize how the `createApi` method handles endpoints\n * @returns A `createApi` method using the provided `modules`.\n */\n\nexport function buildCreateApi<Modules extends [Module<any>, ...Module<any>[]]>(...modules: Modules): CreateApi<Modules[number]['name']> {\n  return function baseCreateApi(options) {\n    const extractRehydrationInfo = weakMapMemoize((action: UnknownAction) => options.extractRehydrationInfo?.(action, {\n      reducerPath: (options.reducerPath ?? 'api' as any)\n    }));\n    const optionsWithDefaults: CreateApiOptions<any, any, any, any> = {\n      reducerPath: 'api',\n      keepUnusedDataFor: 60,\n      refetchOnMountOrArgChange: false,\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n      invalidationBehavior: 'delayed',\n      ...options,\n      extractRehydrationInfo,\n\n      serializeQueryArgs(queryArgsApi) {\n        let finalSerializeQueryArgs = defaultSerializeQueryArgs;\n\n        if ('serializeQueryArgs' in queryArgsApi.endpointDefinition) {\n          const endpointSQA = queryArgsApi.endpointDefinition.serializeQueryArgs!;\n\n          finalSerializeQueryArgs = queryArgsApi => {\n            const initialResult = endpointSQA(queryArgsApi);\n\n            if (typeof initialResult === 'string') {\n              // If the user function returned a string, use it as-is\n              return initialResult;\n            } else {\n              // Assume they returned an object (such as a subset of the original\n              // query args) or a primitive, and serialize it ourselves\n              return defaultSerializeQueryArgs({ ...queryArgsApi,\n                queryArgs: initialResult\n              });\n            }\n          };\n        } else if (options.serializeQueryArgs) {\n          finalSerializeQueryArgs = options.serializeQueryArgs;\n        }\n\n        return finalSerializeQueryArgs(queryArgsApi);\n      },\n\n      tagTypes: [...(options.tagTypes || [])]\n    };\n    const context: ApiContext<EndpointDefinitions> = {\n      endpointDefinitions: {},\n\n      batch(fn) {\n        // placeholder \"batch\" method to be overridden by plugins, for example with React.unstable_batchedUpdate\n        fn();\n      },\n\n      apiUid: nanoid(),\n      extractRehydrationInfo,\n      hasRehydrationInfo: weakMapMemoize(action => extractRehydrationInfo(action) != null)\n    };\n    const api = ({\n      injectEndpoints,\n\n      enhanceEndpoints({\n        addTagTypes,\n        endpoints\n      }) {\n        if (addTagTypes) {\n          for (const eT of addTagTypes) {\n            if (!optionsWithDefaults.tagTypes!.includes((eT as any))) {\n              ;\n              (optionsWithDefaults.tagTypes as any[]).push(eT);\n            }\n          }\n        }\n\n        if (endpoints) {\n          for (const [endpointName, partialDefinition] of Object.entries(endpoints)) {\n            if (typeof partialDefinition === 'function') {\n              partialDefinition(context.endpointDefinitions[endpointName]);\n            } else {\n              Object.assign(context.endpointDefinitions[endpointName] || {}, partialDefinition);\n            }\n          }\n        }\n\n        return api;\n      }\n\n    } as Api<BaseQueryFn, {}, string, string, Modules[number]['name']>);\n    const initializedModules = modules.map(m => m.init((api as any), (optionsWithDefaults as any), context));\n\n    function injectEndpoints(inject: Parameters<typeof api.injectEndpoints>[0]) {\n      const evaluatedEndpoints = inject.endpoints({\n        query: x => ({ ...x,\n          type: DefinitionType.query\n        } as any),\n        mutation: x => ({ ...x,\n          type: DefinitionType.mutation\n        } as any)\n      });\n\n      for (const [endpointName, definition] of Object.entries(evaluatedEndpoints)) {\n        if (inject.overrideExisting !== true && endpointName in context.endpointDefinitions) {\n          if (inject.overrideExisting === 'throw') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(39) : `called \\`injectEndpoints\\` to override already-existing endpointName ${endpointName} without specifying \\`overrideExisting: true\\``);\n          } else if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n            console.error(`called \\`injectEndpoints\\` to override already-existing endpointName ${endpointName} without specifying \\`overrideExisting: true\\``);\n          }\n\n          continue;\n        }\n\n        context.endpointDefinitions[endpointName] = definition;\n\n        for (const m of initializedModules) {\n          m.injectEndpoint(endpointName, definition);\n        }\n      }\n\n      return (api as any);\n    }\n\n    return api.injectEndpoints({\n      endpoints: (options.endpoints as any)\n    });\n  };\n}","import type { BaseQueryFn } from '../../baseQueryTypes';\nimport type { QueryDefinition } from '../../endpointDefinitions';\nimport type { ConfigState, QueryCacheKey } from '../apiState';\nimport type { QueryStateMeta, SubMiddlewareApi, TimeoutId, InternalHandlerBuilder, ApiMiddlewareInternalHandler, InternalMiddlewareState } from './types';\nexport type ReferenceCacheCollection = never;\n\nfunction isObjectEmpty(obj: Record<any, any>) {\n  // Apparently a for..in loop is faster than `Object.keys()` here:\n  // https://stackoverflow.com/a/59787784/62937\n  for (let k in obj) {\n    // If there is at least one key, it's not empty\n    return false;\n  }\n\n  return true;\n}\n\ndeclare module '../../endpointDefinitions' {\n  interface QueryExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n    /**\n     * Overrides the api-wide definition of `keepUnusedDataFor` for this endpoint only. _(This value is in seconds.)_\n     *\n     * This is how long RTK Query will keep your data cached for **after** the last component unsubscribes. For example, if you query an endpoint, then unmount the component, then mount another component that makes the same request within the given time frame, the most recent value will be served from the cache.\n     */\n    keepUnusedDataFor?: number;\n  }\n} // Per https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value , browsers store\n// `setTimeout()` timer values in a 32-bit int. If we pass a value in that's larger than that,\n// it wraps and ends up executing immediately.\n// Our `keepUnusedDataFor` values are in seconds, so adjust the numbers here accordingly.\n\nexport const THIRTY_TWO_BIT_MAX_INT = 2_147_483_647;\nexport const THIRTY_TWO_BIT_MAX_TIMER_SECONDS = 2_147_483_647 / 1_000 - 1;\nexport const buildCacheCollectionHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  api,\n  context,\n  internalState\n}) => {\n  const {\n    removeQueryResult,\n    unsubscribeQueryResult\n  } = api.internalActions;\n\n  function anySubscriptionsRemainingForKey(queryCacheKey: string) {\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey];\n    return !!subscriptions && !isObjectEmpty(subscriptions);\n  }\n\n  const currentRemovalTimeouts: QueryStateMeta<TimeoutId> = {};\n\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi, internalState) => {\n    if (unsubscribeQueryResult.match(action)) {\n      const state = mwApi.getState()[reducerPath];\n      const {\n        queryCacheKey\n      } = action.payload;\n      handleUnsubscribe(queryCacheKey, state.queries[queryCacheKey]?.endpointName, mwApi, state.config);\n    }\n\n    if (api.util.resetApiState.match(action)) {\n      for (const [key, timeout] of Object.entries(currentRemovalTimeouts)) {\n        if (timeout) clearTimeout(timeout);\n        delete currentRemovalTimeouts[key];\n      }\n    }\n\n    if (context.hasRehydrationInfo(action)) {\n      const state = mwApi.getState()[reducerPath];\n      const {\n        queries\n      } = context.extractRehydrationInfo(action)!;\n\n      for (const [queryCacheKey, queryState] of Object.entries(queries)) {\n        // Gotcha:\n        // If rehydrating before the endpoint has been injected,the global `keepUnusedDataFor`\n        // will be used instead of the endpoint-specific one.\n        handleUnsubscribe((queryCacheKey as QueryCacheKey), queryState?.endpointName, mwApi, state.config);\n      }\n    }\n  };\n\n  function handleUnsubscribe(queryCacheKey: QueryCacheKey, endpointName: string | undefined, api: SubMiddlewareApi, config: ConfigState<string>) {\n    const endpointDefinition = (context.endpointDefinitions[endpointName!] as QueryDefinition<any, any, any, any>);\n    const keepUnusedDataFor = endpointDefinition?.keepUnusedDataFor ?? config.keepUnusedDataFor;\n\n    if (keepUnusedDataFor === Infinity) {\n      // Hey, user said keep this forever!\n      return;\n    } // Prevent `setTimeout` timers from overflowing a 32-bit internal int, by\n    // clamping the max value to be at most 1000ms less than the 32-bit max.\n    // Look, a 24.8-day keepalive ought to be enough for anybody, right? :)\n    // Also avoid negative values too.\n\n\n    const finalKeepUnusedDataFor = Math.max(0, Math.min(keepUnusedDataFor, THIRTY_TWO_BIT_MAX_TIMER_SECONDS));\n\n    if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\n      const currentTimeout = currentRemovalTimeouts[queryCacheKey];\n\n      if (currentTimeout) {\n        clearTimeout(currentTimeout);\n      }\n\n      currentRemovalTimeouts[queryCacheKey] = setTimeout(() => {\n        if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\n          api.dispatch(removeQueryResult({\n            queryCacheKey\n          }));\n        }\n\n        delete currentRemovalTimeouts![queryCacheKey];\n      }, finalKeepUnusedDataFor * 1000);\n    }\n  }\n\n  return handler;\n};","import { isAnyOf, isFulfilled, isRejected, isRejectedWithValue } from '../rtkImports';\nimport type { EndpointDefinitions, FullTagDescription } from '../../endpointDefinitions';\nimport { calculateProvidedBy } from '../../endpointDefinitions';\nimport type { CombinedState, QueryCacheKey } from '../apiState';\nimport { QueryStatus } from '../apiState';\nimport { calculateProvidedByThunk } from '../buildThunks';\nimport type { SubMiddlewareApi, InternalHandlerBuilder, ApiMiddlewareInternalHandler, InternalMiddlewareState } from './types';\nimport { countObjectKeys } from '../../utils/countObjectKeys';\nexport const buildInvalidationByTagsHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  context,\n  context: {\n    endpointDefinitions\n  },\n  mutationThunk,\n  queryThunk,\n  api,\n  assertTagType,\n  refetchQuery,\n  internalState\n}) => {\n  const {\n    removeQueryResult\n  } = api.internalActions;\n  const isThunkActionWithTags = isAnyOf(isFulfilled(mutationThunk), isRejectedWithValue(mutationThunk));\n  const isQueryEnd = isAnyOf(isFulfilled(mutationThunk, queryThunk), isRejected(mutationThunk, queryThunk));\n  let pendingTagInvalidations: FullTagDescription<string>[] = [];\n\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (isThunkActionWithTags(action)) {\n      invalidateTags(calculateProvidedByThunk(action, 'invalidatesTags', endpointDefinitions, assertTagType), mwApi);\n    } else if (isQueryEnd(action)) {\n      invalidateTags([], mwApi);\n    } else if (api.util.invalidateTags.match(action)) {\n      invalidateTags(calculateProvidedBy(action.payload, undefined, undefined, undefined, undefined, assertTagType), mwApi);\n    }\n  };\n\n  function hasPendingRequests(state: CombinedState<EndpointDefinitions, string, string>) {\n    for (const key in state.queries) {\n      if (state.queries[key]?.status === QueryStatus.pending) return true;\n    }\n\n    for (const key in state.mutations) {\n      if (state.mutations[key]?.status === QueryStatus.pending) return true;\n    }\n\n    return false;\n  }\n\n  function invalidateTags(newTags: readonly FullTagDescription<string>[], mwApi: SubMiddlewareApi) {\n    const rootState = mwApi.getState();\n    const state = rootState[reducerPath];\n    pendingTagInvalidations.push(...newTags);\n\n    if (state.config.invalidationBehavior === 'delayed' && hasPendingRequests(state)) {\n      return;\n    }\n\n    const tags = pendingTagInvalidations;\n    pendingTagInvalidations = [];\n    if (tags.length === 0) return;\n    const toInvalidate = api.util.selectInvalidatedBy(rootState, tags);\n    context.batch(() => {\n      const valuesArray = Array.from(toInvalidate.values());\n\n      for (const {\n        queryCacheKey\n      } of valuesArray) {\n        const querySubState = state.queries[queryCacheKey];\n        const subscriptionSubState = internalState.currentSubscriptions[queryCacheKey] ?? {};\n\n        if (querySubState) {\n          if (countObjectKeys(subscriptionSubState) === 0) {\n            mwApi.dispatch(removeQueryResult({\n              queryCacheKey: (queryCacheKey as QueryCacheKey)\n            }));\n          } else if (querySubState.status !== QueryStatus.uninitialized) {\n            mwApi.dispatch(refetchQuery(querySubState, queryCacheKey));\n          }\n        }\n      }\n    });\n  }\n\n  return handler;\n};","import type { QuerySubstateIdentifier, Subscribers } from '../apiState';\nimport { QueryStatus } from '../apiState';\nimport type { QueryStateMeta, SubMiddlewareApi, TimeoutId, InternalHandlerBuilder, ApiMiddlewareInternalHandler, InternalMiddlewareState } from './types';\nexport const buildPollingHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  queryThunk,\n  api,\n  refetchQuery,\n  internalState\n}) => {\n  const currentPolls: QueryStateMeta<{\n    nextPollTimestamp: number;\n    timeout?: TimeoutId;\n    pollingInterval: number;\n  }> = {};\n\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (api.internalActions.updateSubscriptionOptions.match(action) || api.internalActions.unsubscribeQueryResult.match(action)) {\n      updatePollingInterval(action.payload, mwApi);\n    }\n\n    if (queryThunk.pending.match(action) || queryThunk.rejected.match(action) && action.meta.condition) {\n      updatePollingInterval(action.meta.arg, mwApi);\n    }\n\n    if (queryThunk.fulfilled.match(action) || queryThunk.rejected.match(action) && !action.meta.condition) {\n      startNextPoll(action.meta.arg, mwApi);\n    }\n\n    if (api.util.resetApiState.match(action)) {\n      clearPolls();\n    }\n  };\n\n  function startNextPoll({\n    queryCacheKey\n  }: QuerySubstateIdentifier, api: SubMiddlewareApi) {\n    const state = api.getState()[reducerPath];\n    const querySubState = state.queries[queryCacheKey];\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey];\n    if (!querySubState || querySubState.status === QueryStatus.uninitialized) return;\n    const {\n      lowestPollingInterval,\n      skipPollingIfUnfocused\n    } = findLowestPollingInterval(subscriptions);\n    if (!Number.isFinite(lowestPollingInterval)) return;\n    const currentPoll = currentPolls[queryCacheKey];\n\n    if (currentPoll?.timeout) {\n      clearTimeout(currentPoll.timeout);\n      currentPoll.timeout = undefined;\n    }\n\n    const nextPollTimestamp = Date.now() + lowestPollingInterval;\n    currentPolls[queryCacheKey] = {\n      nextPollTimestamp,\n      pollingInterval: lowestPollingInterval,\n      timeout: setTimeout(() => {\n        if (state.config.focused || !skipPollingIfUnfocused) {\n          api.dispatch(refetchQuery(querySubState, queryCacheKey));\n        }\n\n        startNextPoll({\n          queryCacheKey\n        }, api);\n      }, lowestPollingInterval)\n    };\n  }\n\n  function updatePollingInterval({\n    queryCacheKey\n  }: QuerySubstateIdentifier, api: SubMiddlewareApi) {\n    const state = api.getState()[reducerPath];\n    const querySubState = state.queries[queryCacheKey];\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey];\n\n    if (!querySubState || querySubState.status === QueryStatus.uninitialized) {\n      return;\n    }\n\n    const {\n      lowestPollingInterval\n    } = findLowestPollingInterval(subscriptions);\n\n    if (!Number.isFinite(lowestPollingInterval)) {\n      cleanupPollForKey(queryCacheKey);\n      return;\n    }\n\n    const currentPoll = currentPolls[queryCacheKey];\n    const nextPollTimestamp = Date.now() + lowestPollingInterval;\n\n    if (!currentPoll || nextPollTimestamp < currentPoll.nextPollTimestamp) {\n      startNextPoll({\n        queryCacheKey\n      }, api);\n    }\n  }\n\n  function cleanupPollForKey(key: string) {\n    const existingPoll = currentPolls[key];\n\n    if (existingPoll?.timeout) {\n      clearTimeout(existingPoll.timeout);\n    }\n\n    delete currentPolls[key];\n  }\n\n  function clearPolls() {\n    for (const key of Object.keys(currentPolls)) {\n      cleanupPollForKey(key);\n    }\n  }\n\n  function findLowestPollingInterval(subscribers: Subscribers = {}) {\n    let skipPollingIfUnfocused: boolean | undefined = false;\n    let lowestPollingInterval = Number.POSITIVE_INFINITY;\n\n    for (let key in subscribers) {\n      if (!!subscribers[key].pollingInterval) {\n        lowestPollingInterval = Math.min(subscribers[key].pollingInterval!, lowestPollingInterval);\n        skipPollingIfUnfocused = subscribers[key].skipPollingIfUnfocused || skipPollingIfUnfocused;\n      }\n    }\n\n    return {\n      lowestPollingInterval,\n      skipPollingIfUnfocused\n    };\n  }\n\n  return handler;\n};","import { isAsyncThunkAction, isFulfilled } from '../rtkImports';\nimport type { UnknownAction } from 'redux';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport type { BaseQueryFn, BaseQueryMeta } from '../../baseQueryTypes';\nimport { DefinitionType } from '../../endpointDefinitions';\nimport type { RootState } from '../apiState';\nimport type { MutationResultSelectorResult, QueryResultSelectorResult } from '../buildSelectors';\nimport { getMutationCacheKey } from '../buildSlice';\nimport type { PatchCollection, Recipe } from '../buildThunks';\nimport type { ApiMiddlewareInternalHandler, InternalHandlerBuilder, PromiseWithKnownReason, SubMiddlewareApi } from './types';\nexport type ReferenceCacheLifecycle = never;\ndeclare module '../../endpointDefinitions' {\n  export interface QueryBaseLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends LifecycleApi<ReducerPath> {\n    /**\n     * Gets the current value of this cache entry.\n     */\n    getCacheEntry(): QueryResultSelectorResult<{\n      type: DefinitionType.query;\n    } & BaseEndpointDefinition<QueryArg, BaseQuery, ResultType>>;\n    /**\n     * Updates the current cache entry value.\n     * For documentation see `api.util.updateQueryData`.\n     */\n\n    updateCachedData(updateRecipe: Recipe<ResultType>): PatchCollection;\n  }\n  export interface MutationBaseLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends LifecycleApi<ReducerPath> {\n    /**\n     * Gets the current value of this cache entry.\n     */\n    getCacheEntry(): MutationResultSelectorResult<{\n      type: DefinitionType.mutation;\n    } & BaseEndpointDefinition<QueryArg, BaseQuery, ResultType>>;\n  }\n  export interface LifecycleApi<ReducerPath extends string = string> {\n    /**\n     * The dispatch method for the store\n     */\n    dispatch: ThunkDispatch<any, any, UnknownAction>;\n    /**\n     * A method to get the current state\n     */\n\n    getState(): RootState<any, any, ReducerPath>;\n    /**\n     * `extra` as provided as `thunk.extraArgument` to the `configureStore` `getDefaultMiddleware` option.\n     */\n\n    extra: unknown;\n    /**\n     * A unique ID generated for the mutation\n     */\n\n    requestId: string;\n  }\n  export interface CacheLifecyclePromises<ResultType = unknown, MetaType = unknown> {\n    /**\n     * Promise that will resolve with the first value for this cache key.\n     * This allows you to `await` until an actual value is in cache.\n     *\n     * If the cache entry is removed from the cache before any value has ever\n     * been resolved, this Promise will reject with\n     * `new Error('Promise never resolved before cacheEntryRemoved.')`\n     * to prevent memory leaks.\n     * You can just re-throw that error (or not handle it at all) -\n     * it will be caught outside of `cacheEntryAdded`.\n     *\n     * If you don't interact with this promise, it will not throw.\n     */\n    cacheDataLoaded: PromiseWithKnownReason<{\n      /**\n       * The (transformed) query result.\n       */\n      data: ResultType;\n      /**\n       * The `meta` returned by the `baseQuery`\n       */\n\n      meta: MetaType;\n    }, typeof neverResolvedError>;\n    /**\n     * Promise that allows you to wait for the point in time when the cache entry\n     * has been removed from the cache, by not being used/subscribed to any more\n     * in the application for too long or by dispatching `api.util.resetApiState`.\n     */\n\n    cacheEntryRemoved: Promise<void>;\n  }\n  export interface QueryCacheLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends QueryBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>, CacheLifecyclePromises<ResultType, BaseQueryMeta<BaseQuery>> {}\n  export interface MutationCacheLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends MutationBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>, CacheLifecyclePromises<ResultType, BaseQueryMeta<BaseQuery>> {}\n  interface QueryExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n    onCacheEntryAdded?(arg: QueryArg, api: QueryCacheLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n  }\n  interface MutationExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n    onCacheEntryAdded?(arg: QueryArg, api: MutationCacheLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n  }\n}\nconst neverResolvedError = (new Error('Promise never resolved before cacheEntryRemoved.') as Error & {\n  message: 'Promise never resolved before cacheEntryRemoved.';\n});\nexport const buildCacheLifecycleHandler: InternalHandlerBuilder = ({\n  api,\n  reducerPath,\n  context,\n  queryThunk,\n  mutationThunk,\n  internalState\n}) => {\n  const isQueryThunk = isAsyncThunkAction(queryThunk);\n  const isMutationThunk = isAsyncThunkAction(mutationThunk);\n  const isFulfilledThunk = isFulfilled(queryThunk, mutationThunk);\n  type CacheLifecycle = {\n    valueResolved?(value: {\n      data: unknown;\n      meta: unknown;\n    }): unknown;\n    cacheEntryRemoved(): void;\n  };\n  const lifecycleMap: Record<string, CacheLifecycle> = {};\n\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi, stateBefore) => {\n    const cacheKey = getCacheKey(action);\n\n    if (queryThunk.pending.match(action)) {\n      const oldState = stateBefore[reducerPath].queries[cacheKey];\n      const state = mwApi.getState()[reducerPath].queries[cacheKey];\n\n      if (!oldState && state) {\n        handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);\n      }\n    } else if (mutationThunk.pending.match(action)) {\n      const state = mwApi.getState()[reducerPath].mutations[cacheKey];\n\n      if (state) {\n        handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);\n      }\n    } else if (isFulfilledThunk(action)) {\n      const lifecycle = lifecycleMap[cacheKey];\n\n      if (lifecycle?.valueResolved) {\n        lifecycle.valueResolved({\n          data: action.payload,\n          meta: action.meta.baseQueryMeta\n        });\n        delete lifecycle.valueResolved;\n      }\n    } else if (api.internalActions.removeQueryResult.match(action) || api.internalActions.removeMutationResult.match(action)) {\n      const lifecycle = lifecycleMap[cacheKey];\n\n      if (lifecycle) {\n        delete lifecycleMap[cacheKey];\n        lifecycle.cacheEntryRemoved();\n      }\n    } else if (api.util.resetApiState.match(action)) {\n      for (const [cacheKey, lifecycle] of Object.entries(lifecycleMap)) {\n        delete lifecycleMap[cacheKey];\n        lifecycle.cacheEntryRemoved();\n      }\n    }\n  };\n\n  function getCacheKey(action: any) {\n    if (isQueryThunk(action)) return action.meta.arg.queryCacheKey;\n\n    if (isMutationThunk(action)) {\n      return action.meta.arg.fixedCacheKey ?? action.meta.requestId;\n    }\n\n    if (api.internalActions.removeQueryResult.match(action)) return action.payload.queryCacheKey;\n    if (api.internalActions.removeMutationResult.match(action)) return getMutationCacheKey(action.payload);\n    return '';\n  }\n\n  function handleNewKey(endpointName: string, originalArgs: any, queryCacheKey: string, mwApi: SubMiddlewareApi, requestId: string) {\n    const endpointDefinition = context.endpointDefinitions[endpointName];\n    const onCacheEntryAdded = endpointDefinition?.onCacheEntryAdded;\n    if (!onCacheEntryAdded) return;\n    let lifecycle = ({} as CacheLifecycle);\n    const cacheEntryRemoved = new Promise<void>(resolve => {\n      lifecycle.cacheEntryRemoved = resolve;\n    });\n    const cacheDataLoaded: PromiseWithKnownReason<{\n      data: unknown;\n      meta: unknown;\n    }, typeof neverResolvedError> = Promise.race([new Promise<{\n      data: unknown;\n      meta: unknown;\n    }>(resolve => {\n      lifecycle.valueResolved = resolve;\n    }), cacheEntryRemoved.then(() => {\n      throw neverResolvedError;\n    })]); // prevent uncaught promise rejections from happening.\n    // if the original promise is used in any way, that will create a new promise that will throw again\n\n    cacheDataLoaded.catch(() => {});\n    lifecycleMap[queryCacheKey] = lifecycle;\n    const selector = (api.endpoints[endpointName] as any).select(endpointDefinition.type === DefinitionType.query ? originalArgs : queryCacheKey);\n    const extra = mwApi.dispatch((_, __, extra) => extra);\n    const lifecycleApi = { ...mwApi,\n      getCacheEntry: () => selector(mwApi.getState()),\n      requestId,\n      extra,\n      updateCachedData: ((endpointDefinition.type === DefinitionType.query ? (updateRecipe: Recipe<any>) => mwApi.dispatch(api.util.updateQueryData((endpointName as never), originalArgs, updateRecipe)) : undefined) as any),\n      cacheDataLoaded,\n      cacheEntryRemoved\n    };\n    const runningHandler = onCacheEntryAdded(originalArgs, lifecycleApi); // if a `neverResolvedError` was thrown, but not handled in the running handler, do not let it leak out further\n\n    Promise.resolve(runningHandler).catch(e => {\n      if (e === neverResolvedError) return;\n      throw e;\n    });\n  }\n\n  return handler;\n};","import { isPending, isRejected, isFulfilled } from '../rtkImports';\nimport type { BaseQueryError, BaseQueryFn, BaseQueryMeta } from '../../baseQueryTypes';\nimport { DefinitionType } from '../../endpointDefinitions';\nimport type { QueryFulfilledRejectionReason } from '../../endpointDefinitions';\nimport type { Recipe } from '../buildThunks';\nimport type { PromiseWithKnownReason, PromiseConstructorWithKnownReason, InternalHandlerBuilder, ApiMiddlewareInternalHandler } from './types';\nexport type ReferenceQueryLifecycle = never;\ndeclare module '../../endpointDefinitions' {\n  export interface QueryLifecyclePromises<ResultType, BaseQuery extends BaseQueryFn> {\n    /**\n     * Promise that will resolve with the (transformed) query result.\n     *\n     * If the query fails, this promise will reject with the error.\n     *\n     * This allows you to `await` for the query to finish.\n     *\n     * If you don't interact with this promise, it will not throw.\n     */\n    queryFulfilled: PromiseWithKnownReason<{\n      /**\n       * The (transformed) query result.\n       */\n      data: ResultType;\n      /**\n       * The `meta` returned by the `baseQuery`\n       */\n\n      meta: BaseQueryMeta<BaseQuery>;\n    }, QueryFulfilledRejectionReason<BaseQuery>>;\n  }\n  type QueryFulfilledRejectionReason<BaseQuery extends BaseQueryFn> = {\n    error: BaseQueryError<BaseQuery>;\n    /**\n     * If this is `false`, that means this error was returned from the `baseQuery` or `queryFn` in a controlled manner.\n     */\n\n    isUnhandledError: false;\n    /**\n     * The `meta` returned by the `baseQuery`\n     */\n\n    meta: BaseQueryMeta<BaseQuery>;\n  } | {\n    error: unknown;\n    meta?: undefined;\n    /**\n     * If this is `true`, that means that this error is the result of `baseQueryFn`, `queryFn`, `transformResponse` or `transformErrorResponse` throwing an error instead of handling it properly.\n     * There can not be made any assumption about the shape of `error`.\n     */\n\n    isUnhandledError: true;\n  };\n  interface QueryExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n    /**\n     * A function that is called when the individual query is started. The function is called with a lifecycle api object containing properties such as `queryFulfilled`, allowing code to be run when a query is started, when it succeeds, and when it fails (i.e. throughout the lifecycle of an individual query/mutation call).\n     *\n     * Can be used to perform side-effects throughout the lifecycle of the query.\n     *\n     * @example\n     * ```ts\n     * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n     * import { messageCreated } from './notificationsSlice\n     * export interface Post {\n     *   id: number\n     *   name: string\n     * }\n     *\n     * const api = createApi({\n     *   baseQuery: fetchBaseQuery({\n     *     baseUrl: '/',\n     *   }),\n     *   endpoints: (build) => ({\n     *     getPost: build.query<Post, number>({\n     *       query: (id) => `post/${id}`,\n     *       async onQueryStarted(id, { dispatch, queryFulfilled }) {\n     *         // `onStart` side-effect\n     *         dispatch(messageCreated('Fetching posts...'))\n     *         try {\n     *           const { data } = await queryFulfilled\n     *           // `onSuccess` side-effect\n     *           dispatch(messageCreated('Posts received!'))\n     *         } catch (err) {\n     *           // `onError` side-effect\n     *           dispatch(messageCreated('Error fetching posts!'))\n     *         }\n     *       }\n     *     }),\n     *   }),\n     * })\n     * ```\n     */\n    onQueryStarted?(arg: QueryArg, api: QueryLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n  }\n  interface MutationExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> {\n    /**\n     * A function that is called when the individual mutation is started. The function is called with a lifecycle api object containing properties such as `queryFulfilled`, allowing code to be run when a query is started, when it succeeds, and when it fails (i.e. throughout the lifecycle of an individual query/mutation call).\n     *\n     * Can be used for `optimistic updates`.\n     *\n     * @example\n     *\n     * ```ts\n     * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n     * export interface Post {\n     *   id: number\n     *   name: string\n     * }\n     *\n     * const api = createApi({\n     *   baseQuery: fetchBaseQuery({\n     *     baseUrl: '/',\n     *   }),\n     *   tagTypes: ['Post'],\n     *   endpoints: (build) => ({\n     *     getPost: build.query<Post, number>({\n     *       query: (id) => `post/${id}`,\n     *       providesTags: ['Post'],\n     *     }),\n     *     updatePost: build.mutation<void, Pick<Post, 'id'> & Partial<Post>>({\n     *       query: ({ id, ...patch }) => ({\n     *         url: `post/${id}`,\n     *         method: 'PATCH',\n     *         body: patch,\n     *       }),\n     *       invalidatesTags: ['Post'],\n     *       async onQueryStarted({ id, ...patch }, { dispatch, queryFulfilled }) {\n     *         const patchResult = dispatch(\n     *           api.util.updateQueryData('getPost', id, (draft) => {\n     *             Object.assign(draft, patch)\n     *           })\n     *         )\n     *         try {\n     *           await queryFulfilled\n     *         } catch {\n     *           patchResult.undo()\n     *         }\n     *       },\n     *     }),\n     *   }),\n     * })\n     * ```\n     */\n    onQueryStarted?(arg: QueryArg, api: MutationLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n  }\n  export interface QueryLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends QueryBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>, QueryLifecyclePromises<ResultType, BaseQuery> {}\n  export interface MutationLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends MutationBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>, QueryLifecyclePromises<ResultType, BaseQuery> {}\n}\nexport const buildQueryLifecycleHandler: InternalHandlerBuilder = ({\n  api,\n  context,\n  queryThunk,\n  mutationThunk\n}) => {\n  const isPendingThunk = isPending(queryThunk, mutationThunk);\n  const isRejectedThunk = isRejected(queryThunk, mutationThunk);\n  const isFullfilledThunk = isFulfilled(queryThunk, mutationThunk);\n  type CacheLifecycle = {\n    resolve(value: {\n      data: unknown;\n      meta: unknown;\n    }): unknown;\n    reject(value: QueryFulfilledRejectionReason<any>): unknown;\n  };\n  const lifecycleMap: Record<string, CacheLifecycle> = {};\n\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (isPendingThunk(action)) {\n      const {\n        requestId,\n        arg: {\n          endpointName,\n          originalArgs\n        }\n      } = action.meta;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      const onQueryStarted = endpointDefinition?.onQueryStarted;\n\n      if (onQueryStarted) {\n        const lifecycle = ({} as CacheLifecycle);\n        const queryFulfilled = new (Promise as PromiseConstructorWithKnownReason)<{\n          data: unknown;\n          meta: unknown;\n        }, QueryFulfilledRejectionReason<any>>((resolve, reject) => {\n          lifecycle.resolve = resolve;\n          lifecycle.reject = reject;\n        }); // prevent uncaught promise rejections from happening.\n        // if the original promise is used in any way, that will create a new promise that will throw again\n\n        queryFulfilled.catch(() => {});\n        lifecycleMap[requestId] = lifecycle;\n        const selector = (api.endpoints[endpointName] as any).select(endpointDefinition.type === DefinitionType.query ? originalArgs : requestId);\n        const extra = mwApi.dispatch((_, __, extra) => extra);\n        const lifecycleApi = { ...mwApi,\n          getCacheEntry: () => selector(mwApi.getState()),\n          requestId,\n          extra,\n          updateCachedData: ((endpointDefinition.type === DefinitionType.query ? (updateRecipe: Recipe<any>) => mwApi.dispatch(api.util.updateQueryData((endpointName as never), originalArgs, updateRecipe)) : undefined) as any),\n          queryFulfilled\n        };\n        onQueryStarted(originalArgs, lifecycleApi);\n      }\n    } else if (isFullfilledThunk(action)) {\n      const {\n        requestId,\n        baseQueryMeta\n      } = action.meta;\n      lifecycleMap[requestId]?.resolve({\n        data: action.payload,\n        meta: baseQueryMeta\n      });\n      delete lifecycleMap[requestId];\n    } else if (isRejectedThunk(action)) {\n      const {\n        requestId,\n        rejectedWithValue,\n        baseQueryMeta\n      } = action.meta;\n      lifecycleMap[requestId]?.reject({\n        error: action.payload ?? action.error,\n        isUnhandledError: !rejectedWithValue,\n        meta: (baseQueryMeta as any)\n      });\n      delete lifecycleMap[requestId];\n    }\n  };\n\n  return handler;\n};","import type { InternalHandlerBuilder } from './types';\nexport const buildDevCheckHandler: InternalHandlerBuilder = ({\n  api,\n  context: {\n    apiUid\n  },\n  reducerPath\n}) => {\n  return (action, mwApi) => {\n    if (api.util.resetApiState.match(action)) {\n      // dispatch after api reset\n      mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));\n    }\n\n    if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n      if (api.internalActions.middlewareRegistered.match(action) && action.payload === apiUid && mwApi.getState()[reducerPath]?.config?.middlewareRegistered === 'conflict') {\n        console.warn(`There is a mismatch between slice and middleware for the reducerPath \"${reducerPath}\".\nYou can only have one api per reducer path, this will lead to crashes in various situations!${reducerPath === 'api' ? `\nIf you have multiple apis, you *have* to specify the reducerPath option when using createApi!` : ''}`);\n      }\n    }\n  };\n};","import type { InternalHandlerBuilder, SubscriptionSelectors } from './types';\nimport type { SubscriptionState } from '../apiState';\nimport { produceWithPatches } from 'immer';\nimport type { Action } from '@reduxjs/toolkit';\nimport { countObjectKeys } from '../../utils/countObjectKeys';\nexport const buildBatchedActionsHandler: InternalHandlerBuilder<[actionShouldContinue: boolean, returnValue: SubscriptionSelectors | boolean]> = ({\n  api,\n  queryThunk,\n  internalState\n}) => {\n  const subscriptionsPrefix = `${api.reducerPath}/subscriptions`;\n  let previousSubscriptions: SubscriptionState = ((null as unknown) as SubscriptionState);\n  let updateSyncTimer: ReturnType<typeof window.setTimeout> | null = null;\n  const {\n    updateSubscriptionOptions,\n    unsubscribeQueryResult\n  } = api.internalActions; // Actually intentionally mutate the subscriptions state used in the middleware\n  // This is done to speed up perf when loading many components\n\n  const actuallyMutateSubscriptions = (mutableState: SubscriptionState, action: Action) => {\n    if (updateSubscriptionOptions.match(action)) {\n      const {\n        queryCacheKey,\n        requestId,\n        options\n      } = action.payload;\n\n      if (mutableState?.[queryCacheKey]?.[requestId]) {\n        mutableState[queryCacheKey]![requestId] = options;\n      }\n\n      return true;\n    }\n\n    if (unsubscribeQueryResult.match(action)) {\n      const {\n        queryCacheKey,\n        requestId\n      } = action.payload;\n\n      if (mutableState[queryCacheKey]) {\n        delete mutableState[queryCacheKey]![requestId];\n      }\n\n      return true;\n    }\n\n    if (api.internalActions.removeQueryResult.match(action)) {\n      delete mutableState[action.payload.queryCacheKey];\n      return true;\n    }\n\n    if (queryThunk.pending.match(action)) {\n      const {\n        meta: {\n          arg,\n          requestId\n        }\n      } = action;\n      const substate = mutableState[arg.queryCacheKey] ??= {};\n      substate[`${requestId}_running`] = {};\n\n      if (arg.subscribe) {\n        substate[requestId] = arg.subscriptionOptions ?? substate[requestId] ?? {};\n      }\n\n      return true;\n    }\n\n    let mutated = false;\n\n    if (queryThunk.fulfilled.match(action) || queryThunk.rejected.match(action)) {\n      const state = mutableState[action.meta.arg.queryCacheKey] || {};\n      const key = `${action.meta.requestId}_running`;\n      mutated ||= !!state[key];\n      delete state[key];\n    }\n\n    if (queryThunk.rejected.match(action)) {\n      const {\n        meta: {\n          condition,\n          arg,\n          requestId\n        }\n      } = action;\n\n      if (condition && arg.subscribe) {\n        const substate = mutableState[arg.queryCacheKey] ??= {};\n        substate[requestId] = arg.subscriptionOptions ?? substate[requestId] ?? {};\n        mutated = true;\n      }\n    }\n\n    return mutated;\n  };\n\n  const getSubscriptions = () => internalState.currentSubscriptions;\n\n  const getSubscriptionCount = (queryCacheKey: string) => {\n    const subscriptions = getSubscriptions();\n    const subscriptionsForQueryArg = subscriptions[queryCacheKey] ?? {};\n    return countObjectKeys(subscriptionsForQueryArg);\n  };\n\n  const isRequestSubscribed = (queryCacheKey: string, requestId: string) => {\n    const subscriptions = getSubscriptions();\n    return !!subscriptions?.[queryCacheKey]?.[requestId];\n  };\n\n  const subscriptionSelectors: SubscriptionSelectors = {\n    getSubscriptions,\n    getSubscriptionCount,\n    isRequestSubscribed\n  };\n  return (action, mwApi): [actionShouldContinue: boolean, result: SubscriptionSelectors | boolean] => {\n    if (!previousSubscriptions) {\n      // Initialize it the first time this handler runs\n      previousSubscriptions = JSON.parse(JSON.stringify(internalState.currentSubscriptions));\n    }\n\n    if (api.util.resetApiState.match(action)) {\n      previousSubscriptions = internalState.currentSubscriptions = {};\n      updateSyncTimer = null;\n      return [true, false];\n    } // Intercept requests by hooks to see if they're subscribed\n    // We return the internal state reference so that hooks\n    // can do their own checks to see if they're still active.\n    // It's stupid and hacky, but it does cut down on some dispatch calls.\n\n\n    if (api.internalActions.internal_getRTKQSubscriptions.match(action)) {\n      return [false, subscriptionSelectors];\n    } // Update subscription data based on this action\n\n\n    const didMutate = actuallyMutateSubscriptions(internalState.currentSubscriptions, action);\n    let actionShouldContinue = true;\n\n    if (didMutate) {\n      if (!updateSyncTimer) {\n        // We only use the subscription state for the Redux DevTools at this point,\n        // as the real data is kept here in the middleware.\n        // Given that, we can throttle synchronizing this state significantly to\n        // save on overall perf.\n        // In 1.9, it was updated in a microtask, but now we do it at most every 500ms.\n        updateSyncTimer = setTimeout(() => {\n          // Deep clone the current subscription data\n          const newSubscriptions: SubscriptionState = JSON.parse(JSON.stringify(internalState.currentSubscriptions)); // Figure out a smaller diff between original and current\n\n          const [, patches] = produceWithPatches(previousSubscriptions, () => newSubscriptions); // Sync the store state for visibility\n\n          mwApi.next(api.internalActions.subscriptionsUpdated(patches)); // Save the cloned state for later reference\n\n          previousSubscriptions = newSubscriptions;\n          updateSyncTimer = null;\n        }, 500);\n      }\n\n      const isSubscriptionSliceAction = typeof action.type == 'string' && !!action.type.startsWith(subscriptionsPrefix);\n      const isAdditionalSubscriptionAction = queryThunk.rejected.match(action) && action.meta.condition && !!action.meta.arg.subscribe;\n      actionShouldContinue = !isSubscriptionSliceAction && !isAdditionalSubscriptionAction;\n    }\n\n    return [actionShouldContinue, false];\n  };\n};","import type { Action, Middleware, ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport { isAction, createAction } from '../rtkImports';\nimport type { EndpointDefinitions, FullTagDescription } from '../../endpointDefinitions';\nimport type { QueryStatus, QuerySubState, RootState } from '../apiState';\nimport type { QueryThunkArg } from '../buildThunks';\nimport { buildCacheCollectionHandler } from './cacheCollection';\nimport { buildInvalidationByTagsHandler } from './invalidationByTags';\nimport { buildPollingHandler } from './polling';\nimport type { BuildMiddlewareInput, InternalHandlerBuilder, InternalMiddlewareState } from './types';\nimport { buildWindowEventHandler } from './windowEventHandling';\nimport { buildCacheLifecycleHandler } from './cacheLifecycle';\nimport { buildQueryLifecycleHandler } from './queryLifecycle';\nimport { buildDevCheckHandler } from './devMiddleware';\nimport { buildBatchedActionsHandler } from './batchActions';\nexport function buildMiddleware<Definitions extends EndpointDefinitions, ReducerPath extends string, TagTypes extends string>(input: BuildMiddlewareInput<Definitions, ReducerPath, TagTypes>) {\n  const {\n    reducerPath,\n    queryThunk,\n    api,\n    context\n  } = input;\n  const {\n    apiUid\n  } = context;\n  const actions = {\n    invalidateTags: createAction<Array<TagTypes | FullTagDescription<TagTypes>>>(`${reducerPath}/invalidateTags`)\n  };\n\n  const isThisApiSliceAction = (action: Action) => action.type.startsWith(`${reducerPath}/`);\n\n  const handlerBuilders: InternalHandlerBuilder[] = [buildDevCheckHandler, buildCacheCollectionHandler, buildInvalidationByTagsHandler, buildPollingHandler, buildCacheLifecycleHandler, buildQueryLifecycleHandler];\n\n  const middleware: Middleware<{}, RootState<Definitions, string, ReducerPath>, ThunkDispatch<any, any, UnknownAction>> = mwApi => {\n    let initialized = false;\n    let internalState: InternalMiddlewareState = {\n      currentSubscriptions: {}\n    };\n    const builderArgs = { ...((input as any) as BuildMiddlewareInput<EndpointDefinitions, string, string>),\n      internalState,\n      refetchQuery,\n      isThisApiSliceAction\n    };\n    const handlers = handlerBuilders.map(build => build(builderArgs));\n    const batchedActionsHandler = buildBatchedActionsHandler(builderArgs);\n    const windowEventsHandler = buildWindowEventHandler(builderArgs);\n    return next => {\n      return action => {\n        if (!isAction(action)) {\n          return next(action);\n        }\n\n        if (!initialized) {\n          initialized = true; // dispatch before any other action\n\n          mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));\n        }\n\n        const mwApiWithNext = { ...mwApi,\n          next\n        };\n        const stateBefore = mwApi.getState();\n        const [actionShouldContinue, internalProbeResult] = batchedActionsHandler(action, mwApiWithNext, stateBefore);\n        let res: any;\n\n        if (actionShouldContinue) {\n          res = next(action);\n        } else {\n          res = internalProbeResult;\n        }\n\n        if (!!mwApi.getState()[reducerPath]) {\n          // Only run these checks if the middleware is registered okay\n          // This looks for actions that aren't specific to the API slice\n          windowEventsHandler(action, mwApiWithNext, stateBefore);\n\n          if (isThisApiSliceAction(action) || context.hasRehydrationInfo(action)) {\n            // Only run these additional checks if the actions are part of the API slice,\n            // or the action has hydration-related data\n            for (let handler of handlers) {\n              handler(action, mwApiWithNext, stateBefore);\n            }\n          }\n        }\n\n        return res;\n      };\n    };\n  };\n\n  return {\n    middleware,\n    actions\n  };\n\n  function refetchQuery(querySubState: Exclude<QuerySubState<any>, {\n    status: QueryStatus.uninitialized;\n  }>, queryCacheKey: string, override: Partial<QueryThunkArg> = {}) {\n    return queryThunk({\n      type: 'query',\n      endpointName: querySubState.endpointName,\n      originalArgs: querySubState.originalArgs,\n      subscribe: false,\n      forceRefetch: true,\n      queryCacheKey: (queryCacheKey as any),\n      ...override\n    });\n  }\n}","import { QueryStatus } from '../apiState';\nimport type { QueryCacheKey } from '../apiState';\nimport { onFocus, onOnline } from '../setupListeners';\nimport type { ApiMiddlewareInternalHandler, InternalHandlerBuilder, SubMiddlewareApi } from './types';\nimport { countObjectKeys } from '../../utils/countObjectKeys';\nexport const buildWindowEventHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  context,\n  api,\n  refetchQuery,\n  internalState\n}) => {\n  const {\n    removeQueryResult\n  } = api.internalActions;\n\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (onFocus.match(action)) {\n      refetchValidQueries(mwApi, 'refetchOnFocus');\n    }\n\n    if (onOnline.match(action)) {\n      refetchValidQueries(mwApi, 'refetchOnReconnect');\n    }\n  };\n\n  function refetchValidQueries(api: SubMiddlewareApi, type: 'refetchOnFocus' | 'refetchOnReconnect') {\n    const state = api.getState()[reducerPath];\n    const queries = state.queries;\n    const subscriptions = internalState.currentSubscriptions;\n    context.batch(() => {\n      for (const queryCacheKey of Object.keys(subscriptions)) {\n        const querySubState = queries[queryCacheKey];\n        const subscriptionSubState = subscriptions[queryCacheKey];\n        if (!subscriptionSubState || !querySubState) continue;\n        const shouldRefetch = Object.values(subscriptionSubState).some(sub => sub[type] === true) || Object.values(subscriptionSubState).every(sub => sub[type] === undefined) && state.config[type];\n\n        if (shouldRefetch) {\n          if (countObjectKeys(subscriptionSubState) === 0) {\n            api.dispatch(removeQueryResult({\n              queryCacheKey: (queryCacheKey as QueryCacheKey)\n            }));\n          } else if (querySubState.status !== QueryStatus.uninitialized) {\n            api.dispatch(refetchQuery(querySubState, queryCacheKey));\n          }\n        }\n      }\n    });\n  }\n\n  return handler;\n};","export type Id<T> = { [K in keyof T]: T[K] } & {};\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;\nexport type Override<T1, T2> = T2 extends any ? Omit<T1, keyof T2> & T2 : never;\nexport function assertCast<T>(v: any): asserts v is T {}\nexport function safeAssign<T extends object>(target: T, ...args: Array<Partial<NoInfer<T>>>): T {\n  return Object.assign(target, ...args);\n}\n/**\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\n */\n\nexport type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never;\nexport type NonOptionalKeys<T> = { [K in keyof T]-?: undefined extends T[K] ? never : K }[keyof T];\nexport type HasRequiredProps<T, True, False> = NonOptionalKeys<T> extends never ? False : True;\nexport type OptionalIfAllPropsOptional<T> = HasRequiredProps<T, T, T | never>;\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\nexport type NonUndefined<T> = T extends undefined ? never : T;\nexport type UnwrapPromise<T> = T extends PromiseLike<infer V> ? V : T;\nexport type MaybePromise<T> = T | PromiseLike<T>;\nexport type OmitFromUnion<T, K extends keyof T> = T extends any ? Omit<T, K> : never;\nexport type IsAny<T, True, False = never> = true | false extends (T extends never ? true : false) ? True : False;\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>;","/**\n * Note: this file should import all other files for type discovery and declaration merging\n */\nimport type { PatchQueryDataThunk, UpdateQueryDataThunk, UpsertQueryDataThunk } from './buildThunks';\nimport { buildThunks } from './buildThunks';\nimport type { ActionCreatorWithPayload, Middleware, Reducer, ThunkAction, ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport type { EndpointDefinitions, QueryArgFrom, QueryDefinition, MutationDefinition, AssertTagTypes, TagDescription } from '../endpointDefinitions';\nimport { isQueryDefinition, isMutationDefinition } from '../endpointDefinitions';\nimport type { CombinedState, QueryKeys, MutationKeys, RootState } from './apiState';\nimport type { Api, Module } from '../apiTypes';\nimport { onFocus, onFocusLost, onOnline, onOffline } from './setupListeners';\nimport { buildSlice } from './buildSlice';\nimport { buildMiddleware } from './buildMiddleware';\nimport { buildSelectors } from './buildSelectors';\nimport type { MutationActionCreatorResult, QueryActionCreatorResult } from './buildInitiate';\nimport { buildInitiate } from './buildInitiate';\nimport { assertCast, safeAssign } from '../tsHelpers';\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { SliceActions } from './buildSlice';\nimport type { BaseQueryFn } from '../baseQueryTypes';\nimport type { ReferenceCacheLifecycle } from './buildMiddleware/cacheLifecycle';\nimport type { ReferenceQueryLifecycle } from './buildMiddleware/queryLifecycle';\nimport type { ReferenceCacheCollection } from './buildMiddleware/cacheCollection';\nimport { enablePatches } from 'immer';\nimport { createSelector as _createSelector } from './rtkImports';\n/**\n * `ifOlderThan` - (default: `false` | `number`) - _number is value in seconds_\n * - If specified, it will only run the query if the difference between `new Date()` and the last `fulfilledTimeStamp` is greater than the given value\n *\n * @overloadSummary\n * `force`\n * - If `force: true`, it will ignore the `ifOlderThan` value if it is set and the query will be run even if it exists in the cache.\n */\n\nexport type PrefetchOptions = {\n  ifOlderThan?: false | number;\n} | {\n  force?: boolean;\n};\nexport const coreModuleName = /* @__PURE__ */Symbol();\nexport type CoreModule = typeof coreModuleName | ReferenceCacheLifecycle | ReferenceQueryLifecycle | ReferenceCacheCollection;\nexport interface ThunkWithReturnValue<T> extends ThunkAction<T, any, any, UnknownAction> {}\ndeclare module '../apiTypes' {\n  export interface ApiModules< // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  BaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, ReducerPath extends string, TagTypes extends string> {\n    [coreModuleName]: {\n      /**\n       * This api's reducer should be mounted at `store[api.reducerPath]`.\n       *\n       * @example\n       * ```ts\n       * configureStore({\n       *   reducer: {\n       *     [api.reducerPath]: api.reducer,\n       *   },\n       *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\n       * })\n       * ```\n       */\n      reducerPath: ReducerPath;\n      /**\n       * Internal actions not part of the public API. Note: These are subject to change at any given time.\n       */\n\n      internalActions: InternalActions;\n      /**\n       *  A standard redux reducer that enables core functionality. Make sure it's included in your store.\n       *\n       * @example\n       * ```ts\n       * configureStore({\n       *   reducer: {\n       *     [api.reducerPath]: api.reducer,\n       *   },\n       *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\n       * })\n       * ```\n       */\n\n      reducer: Reducer<CombinedState<Definitions, TagTypes, ReducerPath>, UnknownAction>;\n      /**\n       * This is a standard redux middleware and is responsible for things like polling, garbage collection and a handful of other things. Make sure it's included in your store.\n       *\n       * @example\n       * ```ts\n       * configureStore({\n       *   reducer: {\n       *     [api.reducerPath]: api.reducer,\n       *   },\n       *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\n       * })\n       * ```\n       */\n\n      middleware: Middleware<{}, RootState<Definitions, string, ReducerPath>, ThunkDispatch<any, any, UnknownAction>>;\n      /**\n       * A collection of utility thunks for various situations.\n       */\n\n      util: {\n        /**\n         * A thunk that (if dispatched) will return a specific running query, identified\n         * by `endpointName` and `args`.\n         * If that query is not running, dispatching the thunk will result in `undefined`.\n         *\n         * Can be used to await a specific query triggered in any way,\n         * including via hook calls or manually dispatching `initiate` actions.\n         *\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n         */\n        getRunningQueryThunk<EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>): ThunkWithReturnValue<QueryActionCreatorResult<Definitions[EndpointName] & {\n          type: 'query';\n        }> | undefined>;\n        /**\n         * A thunk that (if dispatched) will return a specific running mutation, identified\n         * by `endpointName` and `fixedCacheKey` or `requestId`.\n         * If that mutation is not running, dispatching the thunk will result in `undefined`.\n         *\n         * Can be used to await a specific mutation triggered in any way,\n         * including via hook trigger functions or manually dispatching `initiate` actions.\n         *\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n         */\n\n        getRunningMutationThunk<EndpointName extends MutationKeys<Definitions>>(endpointName: EndpointName, fixedCacheKeyOrRequestId: string): ThunkWithReturnValue<MutationActionCreatorResult<Definitions[EndpointName] & {\n          type: 'mutation';\n        }> | undefined>;\n        /**\n         * A thunk that (if dispatched) will return all running queries.\n         *\n         * Useful for SSR scenarios to await all running queries triggered in any way,\n         * including via hook calls or manually dispatching `initiate` actions.\n         *\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n         */\n\n        getRunningQueriesThunk(): ThunkWithReturnValue<Array<QueryActionCreatorResult<any>>>;\n        /**\n         * A thunk that (if dispatched) will return all running mutations.\n         *\n         * Useful for SSR scenarios to await all running mutations triggered in any way,\n         * including via hook calls or manually dispatching `initiate` actions.\n         *\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n         */\n\n        getRunningMutationsThunk(): ThunkWithReturnValue<Array<MutationActionCreatorResult<any>>>;\n        /**\n         * A Redux thunk that can be used to manually trigger pre-fetching of data.\n         *\n         * The thunk accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and a set of options used to determine if the data actually should be re-fetched based on cache staleness.\n         *\n         * React Hooks users will most likely never need to use this directly, as the `usePrefetch` hook will dispatch this thunk internally as needed when you call the prefetching function supplied by the hook.\n         *\n         * @example\n         *\n         * ```ts no-transpile\n         * dispatch(api.util.prefetch('getPosts', undefined, { force: true }))\n         * ```\n         */\n\n        prefetch<EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, arg: QueryArgFrom<Definitions[EndpointName]>, options: PrefetchOptions): ThunkAction<void, any, any, UnknownAction>;\n        /**\n         * A Redux thunk action creator that, when dispatched, creates and applies a set of JSON diff/patch objects to the current state. This immediately updates the Redux state with those changes.\n         *\n         * The thunk action creator accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and an `updateRecipe` callback function. The callback receives an Immer-wrapped `draft` of the current state, and may modify the draft to match the expected results after the mutation completes successfully.\n         *\n         * The thunk executes _synchronously_, and returns an object containing `{patches: Patch[], inversePatches: Patch[], undo: () => void}`. The `patches` and `inversePatches` are generated using Immer's [`produceWithPatches` method](https://immerjs.github.io/immer/patches).\n         *\n         * This is typically used as the first step in implementing optimistic updates. The generated `inversePatches` can be used to revert the updates by calling `dispatch(patchQueryData(endpointName, args, inversePatches))`. Alternatively, the `undo` method can be called directly to achieve the same effect.\n         *\n         * Note that the first two arguments (`endpointName` and `args`) are used to determine which existing cache entry to update. If no existing cache entry is found, the `updateRecipe` callback will not run.\n         *\n         * @example\n         *\n         * ```ts\n         * const patchCollection = dispatch(\n         *   api.util.updateQueryData('getPosts', undefined, (draftPosts) => {\n         *     draftPosts.push({ id: 1, name: 'Teddy' })\n         *   })\n         * )\n         * ```\n         */\n\n        updateQueryData: UpdateQueryDataThunk<Definitions, RootState<Definitions, string, ReducerPath>>;\n        /**\n         * A Redux thunk action creator that, when dispatched, acts as an artificial API request to upsert a value into the cache.\n         *\n         * The thunk action creator accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and the data to upsert.\n         *\n         * If no cache entry for that cache key exists, a cache entry will be created and the data added. If a cache entry already exists, this will _overwrite_ the existing cache entry data.\n         *\n         * The thunk executes _asynchronously_, and returns a promise that resolves when the store has been updated.\n         *\n         * If dispatched while an actual request is in progress, both the upsert and request will be handled as soon as they resolve, resulting in a \"last result wins\" update behavior.\n         *\n         * @example\n         *\n         * ```ts\n         * await dispatch(\n         *   api.util.upsertQueryData('getPost', {id: 1}, {id: 1, text: \"Hello!\"})\n         * )\n         * ```\n         */\n\n        upsertQueryData: UpsertQueryDataThunk<Definitions, RootState<Definitions, string, ReducerPath>>;\n        /**\n         * A Redux thunk that applies a JSON diff/patch array to the cached data for a given query result. This immediately updates the Redux state with those changes.\n         *\n         * The thunk accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and a JSON diff/patch array as produced by Immer's `produceWithPatches`.\n         *\n         * This is typically used as the second step in implementing optimistic updates. If a request fails, the optimistically-applied changes can be reverted by dispatching `patchQueryData` with the `inversePatches` that were generated by `updateQueryData` earlier.\n         *\n         * In cases where it is desired to simply revert the previous changes, it may be preferable to call the `undo` method returned from dispatching `updateQueryData` instead.\n         *\n         * @example\n         * ```ts\n         * const patchCollection = dispatch(\n         *   api.util.updateQueryData('getPosts', undefined, (draftPosts) => {\n         *     draftPosts.push({ id: 1, name: 'Teddy' })\n         *   })\n         * )\n         *\n         * // later\n         * dispatch(\n         *   api.util.patchQueryData('getPosts', undefined, patchCollection.inversePatches)\n         * )\n         *\n         * // or\n         * patchCollection.undo()\n         * ```\n         */\n\n        patchQueryData: PatchQueryDataThunk<Definitions, RootState<Definitions, string, ReducerPath>>;\n        /**\n         * A Redux action creator that can be dispatched to manually reset the api state completely. This will immediately remove all existing cache entries, and all queries will be considered 'uninitialized'.\n         *\n         * @example\n         *\n         * ```ts\n         * dispatch(api.util.resetApiState())\n         * ```\n         */\n\n        resetApiState: SliceActions['resetApiState'];\n        /**\n         * A Redux action creator that can be used to manually invalidate cache tags for [automated re-fetching](../../usage/automated-refetching.mdx).\n         *\n         * The action creator accepts one argument: the cache tags to be invalidated. It returns an action with those tags as a payload, and the corresponding `invalidateTags` action type for the api.\n         *\n         * Dispatching the result of this action creator will [invalidate](../../usage/automated-refetching.mdx#invalidating-cache-data) the given tags, causing queries to automatically re-fetch if they are subscribed to cache data that [provides](../../usage/automated-refetching.mdx#providing-cache-data) the corresponding tags.\n         *\n         * The array of tags provided to the action creator should be in one of the following formats, where `TagType` is equal to a string provided to the [`tagTypes`](../createApi.mdx#tagtypes) property of the api:\n         *\n         * - `[TagType]`\n         * - `[{ type: TagType }]`\n         * - `[{ type: TagType, id: number | string }]`\n         *\n         * @example\n         *\n         * ```ts\n         * dispatch(api.util.invalidateTags(['Post']))\n         * dispatch(api.util.invalidateTags([{ type: 'Post', id: 1 }]))\n         * dispatch(\n         *   api.util.invalidateTags([\n         *     { type: 'Post', id: 1 },\n         *     { type: 'Post', id: 'LIST' },\n         *   ])\n         * )\n         * ```\n         */\n\n        invalidateTags: ActionCreatorWithPayload<Array<TagDescription<TagTypes>>, string>;\n        /**\n         * A function to select all `{ endpointName, originalArgs, queryCacheKey }` combinations that would be invalidated by a specific set of tags.\n         *\n         * Can be used for mutations that want to do optimistic updates instead of invalidating a set of tags, but don't know exactly what they need to update.\n         */\n\n        selectInvalidatedBy: (state: RootState<Definitions, string, ReducerPath>, tags: ReadonlyArray<TagDescription<TagTypes>>) => Array<{\n          endpointName: string;\n          originalArgs: any;\n          queryCacheKey: string;\n        }>;\n        /**\n         * A function to select all arguments currently cached for a given endpoint.\n         *\n         * Can be used for mutations that want to do optimistic updates instead of invalidating a set of tags, but don't know exactly what they need to update.\n         */\n\n        selectCachedArgsForQuery: <QueryName extends QueryKeys<Definitions>>(state: RootState<Definitions, string, ReducerPath>, queryName: QueryName) => Array<QueryArgFrom<Definitions[QueryName]>>;\n      };\n      /**\n       * Endpoints based on the input endpoints provided to `createApi`, containing `select` and `action matchers`.\n       */\n\n      endpoints: { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<any, any, any, any, any> ? ApiEndpointQuery<Definitions[K], Definitions> : Definitions[K] extends MutationDefinition<any, any, any, any, any> ? ApiEndpointMutation<Definitions[K], Definitions> : never };\n    };\n  }\n}\nexport interface ApiEndpointQuery< // eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinition extends QueryDefinition<any, any, any, any, any>, // eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinitions extends EndpointDefinitions> {\n  name: string;\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n\n  Types: NonNullable<Definition['Types']>;\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport interface ApiEndpointMutation< // eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinition extends MutationDefinition<any, any, any, any, any>, // eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinitions extends EndpointDefinitions> {\n  name: string;\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n\n  Types: NonNullable<Definition['Types']>;\n}\nexport type ListenerActions = {\n  /**\n   * Will cause the RTK Query middleware to trigger any refetchOnReconnect-related behavior\n   * @link https://rtk-query-docs.netlify.app/api/setupListeners\n   */\n  onOnline: typeof onOnline;\n  onOffline: typeof onOffline;\n  /**\n   * Will cause the RTK Query middleware to trigger any refetchOnFocus-related behavior\n   * @link https://rtk-query-docs.netlify.app/api/setupListeners\n   */\n\n  onFocus: typeof onFocus;\n  onFocusLost: typeof onFocusLost;\n};\nexport type InternalActions = SliceActions & ListenerActions;\nexport interface CoreModuleOptions {\n  /**\n   * A selector creator (usually from `reselect`, or matching the same signature)\n   */\n  createSelector?: typeof _createSelector;\n}\n/**\n * Creates a module containing the basic redux logic for use with `buildCreateApi`.\n *\n * @example\n * ```ts\n * const createBaseApi = buildCreateApi(coreModule());\n * ```\n */\n\nexport const coreModule = ({\n  createSelector = _createSelector\n}: CoreModuleOptions = {}): Module<CoreModule> => ({\n  name: coreModuleName,\n\n  init(api, {\n    baseQuery,\n    tagTypes,\n    reducerPath,\n    serializeQueryArgs,\n    keepUnusedDataFor,\n    refetchOnMountOrArgChange,\n    refetchOnFocus,\n    refetchOnReconnect,\n    invalidationBehavior\n  }, context) {\n    enablePatches();\n    assertCast<InternalSerializeQueryArgs>(serializeQueryArgs);\n\n    const assertTagType: AssertTagTypes = tag => {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        if (!tagTypes.includes((tag.type as any))) {\n          console.error(`Tag type '${tag.type}' was used, but not specified in \\`tagTypes\\`!`);\n        }\n      }\n\n      return tag;\n    };\n\n    Object.assign(api, {\n      reducerPath,\n      endpoints: {},\n      internalActions: {\n        onOnline,\n        onOffline,\n        onFocus,\n        onFocusLost\n      },\n      util: {}\n    });\n    const {\n      queryThunk,\n      mutationThunk,\n      patchQueryData,\n      updateQueryData,\n      upsertQueryData,\n      prefetch,\n      buildMatchThunkActions\n    } = buildThunks({\n      baseQuery,\n      reducerPath,\n      context,\n      api,\n      serializeQueryArgs,\n      assertTagType\n    });\n    const {\n      reducer,\n      actions: sliceActions\n    } = buildSlice({\n      context,\n      queryThunk,\n      mutationThunk,\n      reducerPath,\n      assertTagType,\n      config: {\n        refetchOnFocus,\n        refetchOnReconnect,\n        refetchOnMountOrArgChange,\n        keepUnusedDataFor,\n        reducerPath,\n        invalidationBehavior\n      }\n    });\n    safeAssign(api.util, {\n      patchQueryData,\n      updateQueryData,\n      upsertQueryData,\n      prefetch,\n      resetApiState: sliceActions.resetApiState\n    });\n    safeAssign(api.internalActions, sliceActions);\n    const {\n      middleware,\n      actions: middlewareActions\n    } = buildMiddleware({\n      reducerPath,\n      context,\n      queryThunk,\n      mutationThunk,\n      api,\n      assertTagType\n    });\n    safeAssign(api.util, middlewareActions);\n    safeAssign(api, {\n      reducer: (reducer as any),\n      middleware\n    });\n    const {\n      buildQuerySelector,\n      buildMutationSelector,\n      selectInvalidatedBy,\n      selectCachedArgsForQuery\n    } = buildSelectors({\n      serializeQueryArgs: (serializeQueryArgs as any),\n      reducerPath,\n      createSelector\n    });\n    safeAssign(api.util, {\n      selectInvalidatedBy,\n      selectCachedArgsForQuery\n    });\n    const {\n      buildInitiateQuery,\n      buildInitiateMutation,\n      getRunningMutationThunk,\n      getRunningMutationsThunk,\n      getRunningQueriesThunk,\n      getRunningQueryThunk\n    } = buildInitiate({\n      queryThunk,\n      mutationThunk,\n      api,\n      serializeQueryArgs: (serializeQueryArgs as any),\n      context\n    });\n    safeAssign(api.util, {\n      getRunningMutationThunk,\n      getRunningMutationsThunk,\n      getRunningQueryThunk,\n      getRunningQueriesThunk\n    });\n    return {\n      name: coreModuleName,\n\n      injectEndpoint(endpointName, definition) {\n        const anyApi = ((api as any) as Api<any, Record<string, any>, string, string, CoreModule>);\n        anyApi.endpoints[endpointName] ??= ({} as any);\n\n        if (isQueryDefinition(definition)) {\n          safeAssign(anyApi.endpoints[endpointName], {\n            name: endpointName,\n            select: buildQuerySelector(endpointName, definition),\n            initiate: buildInitiateQuery(endpointName, definition)\n          }, buildMatchThunkActions(queryThunk, endpointName));\n        } else if (isMutationDefinition(definition)) {\n          safeAssign(anyApi.endpoints[endpointName], {\n            name: endpointName,\n            select: buildMutationSelector(),\n            initiate: buildInitiateMutation(endpointName)\n          }, buildMatchThunkActions(mutationThunk, endpointName));\n        }\n      }\n\n    };\n  }\n\n});","import { buildCreateApi, CreateApi } from '../createApi';\nimport { coreModule, coreModuleName } from './module';\nconst createApi = /* @__PURE__ */buildCreateApi(coreModule());\nexport { createApi, coreModule, coreModuleName };","import * as ReactOriginal from 'react'\nimport type * as ReactNamespace from 'react'\n\nexport const React: typeof ReactNamespace =\n  // prettier-ignore\n  // @ts-ignore\n  'default' in ReactOriginal ? ReactOriginal['default'] : ReactOriginal as any\n","import type { Context } from 'react'\nimport { React } from '../utils/react'\nimport type { Action, Store, UnknownAction } from 'redux'\nimport type { Subscription } from '../utils/Subscription'\nimport type { ProviderProps } from './Provider'\n\nexport interface ReactReduxContextValue<\n  SS = any,\n  A extends Action<string> = UnknownAction\n> extends Pick<ProviderProps, 'stabilityCheck' | 'identityFunctionCheck'> {\n  store: Store<SS, A>\n  subscription: Subscription\n  getServerState?: () => SS\n}\n\nconst ContextKey = Symbol.for(`react-redux-context`)\nconst gT: {\n  [ContextKey]?: Map<\n    typeof React.createContext,\n    Context<ReactReduxContextValue | null>\n  >\n} = (\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */ {}\n) as any\n\nfunction getContext(): Context<ReactReduxContextValue | null> {\n  if (!React.createContext) return {} as any\n\n  const contextMap = (gT[ContextKey] ??= new Map<\n    typeof React.createContext,\n    Context<ReactReduxContextValue | null>\n  >())\n  let realContext = contextMap.get(React.createContext)\n  if (!realContext) {\n    realContext = React.createContext<ReactReduxContextValue | null>(\n      null as any,\n    )\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux'\n    }\n    contextMap.set(React.createContext, realContext)\n  }\n  return realContext\n}\n\nexport const ReactReduxContext = /*#__PURE__*/ getContext()\n\nexport type ReactReduxContextInstance = typeof ReactReduxContext\n\nexport default ReactReduxContext\n","import type { useSyncExternalStore } from 'use-sync-external-store'\nimport type { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector'\n\nexport const notInitialized = () => {\n  throw new Error('uSES not initialized!')\n}\n\nexport type uSES = typeof useSyncExternalStore\nexport type uSESWS = typeof useSyncExternalStoreWithSelector\n","import { React } from '../utils/react'\nimport { ReactReduxContext } from '../components/Context'\nimport type { ReactReduxContextValue } from '../components/Context'\n\n/**\n * Hook factory, which creates a `useReduxContext` hook bound to a given context. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useReduxContext` hook bound to the specified context.\n */\nexport function createReduxContextHook(context = ReactReduxContext) {\n  return function useReduxContext(): ReactReduxContextValue {\n    const contextValue = React.useContext(context)\n\n    if (process.env.NODE_ENV !== 'production' && !contextValue) {\n      throw new Error(\n        'could not find react-redux context value; please ensure the component is wrapped in a <Provider>',\n      )\n    }\n\n    return contextValue!\n  }\n}\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport const useReduxContext = /*#__PURE__*/ createReduxContextHook()\n","//import * as React from 'react'\nimport { React } from '../utils/react'\n\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport type { EqualityFn, NoInfer } from '../types'\nimport type { uSESWS } from '../utils/useSyncExternalStore'\nimport { notInitialized } from '../utils/useSyncExternalStore'\nimport {\n  createReduxContextHook,\n  useReduxContext as useDefaultReduxContext,\n} from './useReduxContext'\n\n/**\n * The frequency of development mode checks.\n *\n * @since 8.1.0\n * @internal\n */\nexport type DevModeCheckFrequency = 'never' | 'once' | 'always'\n\n/**\n * Represents the configuration for development mode checks.\n *\n * @since 9.0.0\n * @internal\n */\nexport interface DevModeChecks {\n  /**\n   * Overrides the global stability check for the selector.\n   * - `once` - Run only the first time the selector is called.\n   * - `always` - Run every time the selector is called.\n   * - `never` - Never run the stability check.\n   *\n   * @default 'once'\n   *\n   * @since 8.1.0\n   */\n  stabilityCheck: DevModeCheckFrequency\n\n  /**\n   * Overrides the global identity function check for the selector.\n   * - `once` - Run only the first time the selector is called.\n   * - `always` - Run every time the selector is called.\n   * - `never` - Never run the identity function check.\n   *\n   * **Note**: Previously referred to as `noopCheck`.\n   *\n   * @default 'once'\n   *\n   * @since 9.0.0\n   */\n  identityFunctionCheck: DevModeCheckFrequency\n}\n\nexport interface UseSelectorOptions<Selected = unknown> {\n  equalityFn?: EqualityFn<Selected>\n\n  /**\n   * `useSelector` performs additional checks in development mode to help\n   * identify and warn about potential issues in selector behavior. This\n   * option allows you to customize the behavior of these checks per selector.\n   *\n   * @since 9.0.0\n   */\n  devModeChecks?: Partial<DevModeChecks>\n}\n\n/**\n * Represents a custom hook that allows you to extract data from the\n * Redux store state, using a selector function. The selector function\n * takes the current state as an argument and returns a part of the state\n * or some derived data. The hook also supports an optional equality\n * function or options object to customize its behavior.\n *\n * @template StateType - The specific type of state this hook operates on.\n *\n * @public\n */\nexport interface UseSelector<StateType = unknown> {\n  /**\n   * A function that takes a selector function as its first argument.\n   * The selector function is responsible for selecting a part of\n   * the Redux store's state or computing derived data.\n   *\n   * @param selector - A function that receives the current state and returns a part of the state or some derived data.\n   * @param equalityFnOrOptions - An optional equality function or options object for customizing the behavior of the selector.\n   * @returns The selected part of the state or derived data.\n   *\n   * @template TState - The specific type of state this hook operates on.\n   * @template Selected - The type of the value that the selector function will return.\n   */\n  <TState extends StateType = StateType, Selected = unknown>(\n    selector: (state: TState) => Selected,\n    equalityFnOrOptions?: EqualityFn<Selected> | UseSelectorOptions<Selected>\n  ): Selected\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useSelector useSelector}\n   * where the `state` type is predefined.\n   *\n   * This allows you to set the `state` type once, eliminating the need to\n   * specify it with every {@linkcode useSelector useSelector} call.\n   *\n   * @returns A pre-typed `useSelector` with the state type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppSelector = useSelector.withTypes<RootState>()\n   * ```\n   *\n   * @template OverrideStateType - The specific type of state this hook operates on.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideStateType extends StateType\n  >() => UseSelector<OverrideStateType>\n}\n\nlet useSyncExternalStoreWithSelector = notInitialized as uSESWS\nexport const initializeUseSelector = (fn: uSESWS) => {\n  useSyncExternalStoreWithSelector = fn\n}\n\nconst refEquality: EqualityFn<any> = (a, b) => a === b\n\n/**\n * Hook factory, which creates a `useSelector` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useSelector` hook bound to the specified context.\n */\nexport function createSelectorHook(\n  context: React.Context<ReactReduxContextValue<\n    any,\n    any\n  > | null> = ReactReduxContext,\n): UseSelector {\n  const useReduxContext =\n    context === ReactReduxContext\n      ? useDefaultReduxContext\n      : createReduxContextHook(context)\n\n  const useSelector = <TState, Selected extends unknown>(\n    selector: (state: TState) => Selected,\n    equalityFnOrOptions:\n      | EqualityFn<NoInfer<Selected>>\n      | UseSelectorOptions<NoInfer<Selected>> = {}\n  ): Selected => {\n    const { equalityFn = refEquality, devModeChecks = {} } =\n      typeof equalityFnOrOptions === 'function'\n        ? { equalityFn: equalityFnOrOptions }\n        : equalityFnOrOptions\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`)\n      }\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`)\n      }\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\n          `You must pass a function as an equality function to useSelector`,\n        )\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState,\n      stabilityCheck,\n      identityFunctionCheck,\n    } = useReduxContext()\n\n    const firstRun = React.useRef(true)\n\n    const wrappedSelector = React.useCallback<typeof selector>(\n      {\n        [selector.name](state: TState) {\n          const selected = selector(state)\n          if (process.env.NODE_ENV !== 'production') {\n            const {\n              identityFunctionCheck: finalIdentityFunctionCheck,\n              stabilityCheck: finalStabilityCheck,\n            } = {\n              stabilityCheck,\n              identityFunctionCheck,\n              ...devModeChecks,\n            }\n            if (\n              finalStabilityCheck === 'always' ||\n              (finalStabilityCheck === 'once' && firstRun.current)\n            ) {\n              const toCompare = selector(state)\n              if (!equalityFn(selected, toCompare)) {\n                let stack: string | undefined = undefined\n                try {\n                  throw new Error()\n                } catch (e) {\n                  // eslint-disable-next-line no-extra-semi\n                  ;({ stack } = e as Error)\n                }\n                console.warn(\n                  'Selector ' +\n                    (selector.name || 'unknown') +\n                    ' returned a different result when called with the same parameters. This can lead to unnecessary rerenders.' +\n                    '\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization',\n                  {\n                    state,\n                    selected,\n                    selected2: toCompare,\n                    stack,\n                  },\n                )\n              }\n            }\n            if (\n              finalIdentityFunctionCheck === 'always' ||\n              (finalIdentityFunctionCheck === 'once' && firstRun.current)\n            ) {\n              // @ts-ignore\n              if (selected === state) {\n                let stack: string | undefined = undefined\n                try {\n                  throw new Error()\n                } catch (e) {\n                  // eslint-disable-next-line no-extra-semi\n                  ;({ stack } = e as Error)\n                }\n                console.warn(\n                  'Selector ' +\n                    (selector.name || 'unknown') +\n                    ' returned the root state when called. This can lead to unnecessary rerenders.' +\n                    '\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.',\n                  { stack },\n                )\n              }\n            }\n            if (firstRun.current) firstRun.current = false\n          }\n          return selected\n        },\n      }[selector.name],\n      [selector, stabilityCheck, devModeChecks.stabilityCheck],\n    )\n\n    const selectedState = useSyncExternalStoreWithSelector(\n      subscription.addNestedSub,\n      store.getState,\n      getServerState || store.getState,\n      wrappedSelector,\n      equalityFn,\n    )\n\n    React.useDebugValue(selectedState)\n\n    return selectedState\n  }\n\n  Object.assign(useSelector, {\n    withTypes: () => useSelector,\n  })\n\n  return useSelector as UseSelector\n}\n\n/**\n * A hook to access the redux store's state. This hook takes a selector function\n * as an argument. The selector is called with the store state.\n *\n * This hook takes an optional equality comparison function as the second parameter\n * that allows you to customize the way the selected state is compared to determine\n * whether the component needs to be re-rendered.\n *\n * @param {Function} selector the selector function\n * @param {Function=} equalityFn the function that will be used to determine equality\n *\n * @returns {any} the selected state\n *\n * @example\n *\n * import React from 'react'\n * import { useSelector } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const counter = useSelector(state => state.counter)\n *   return <div>{counter}</div>\n * }\n */\nexport const useSelector = /*#__PURE__*/ createSelectorHook()\n","import type { ElementType, MemoExoticComponent, ReactElement } from 'react'\n\n// Directly ported from:\n// https://unpkg.com/browse/react-is@18.3.0-canary-ee68446ff-20231115/cjs/react-is.production.js\n// It's very possible this could change in the future, but given that\n// we only use these in `connect`, this is a low priority.\n\nconst REACT_ELEMENT_TYPE = Symbol.for('react.element')\nconst REACT_PORTAL_TYPE = Symbol.for('react.portal')\nconst REACT_FRAGMENT_TYPE = Symbol.for('react.fragment')\nconst REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode')\nconst REACT_PROFILER_TYPE = Symbol.for('react.profiler')\nconst REACT_PROVIDER_TYPE = Symbol.for('react.provider')\nconst REACT_CONTEXT_TYPE = Symbol.for('react.context')\nconst REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context')\nconst REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref')\nconst REACT_SUSPENSE_TYPE = Symbol.for('react.suspense')\nconst REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list')\nconst REACT_MEMO_TYPE = Symbol.for('react.memo')\nconst REACT_LAZY_TYPE = Symbol.for('react.lazy')\nconst REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen')\nconst REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference')\n\nexport const ForwardRef = REACT_FORWARD_REF_TYPE\nexport const Memo = REACT_MEMO_TYPE\n\nexport function isValidElementType(type: any): type is ElementType {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n  if (\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE ||\n    type === REACT_OFFSCREEN_TYPE\n  ) {\n    return true\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (\n      type.$$typeof === REACT_LAZY_TYPE ||\n      type.$$typeof === REACT_MEMO_TYPE ||\n      type.$$typeof === REACT_PROVIDER_TYPE ||\n      type.$$typeof === REACT_CONTEXT_TYPE ||\n      type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      type.$$typeof === REACT_CLIENT_REFERENCE ||\n      type.getModuleId !== undefined\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction typeOf(object: any): symbol | undefined {\n  if (typeof object === 'object' && object !== null) {\n    const $$typeof = object.$$typeof\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE: {\n        const type = object.type\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type\n\n          default: {\n            const $$typeofType = type && type.$$typeof\n\n            switch ($$typeofType) {\n              case REACT_SERVER_CONTEXT_TYPE:\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType\n\n              default:\n                return $$typeof\n            }\n          }\n        }\n      }\n\n      case REACT_PORTAL_TYPE: {\n        return $$typeof\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function isContextConsumer(object: any): object is ReactElement {\n  return typeOf(object) === REACT_CONTEXT_TYPE\n}\n\nexport function isMemo(object: any): object is MemoExoticComponent<any> {\n  return typeOf(object) === REACT_MEMO_TYPE\n}\n","// Default to a dummy \"batch\" implementation that just runs the callback\nexport function defaultNoopBatch(callback: () => void) {\n  callback()\n}\n","import { defaultNoopBatch as batch } from './batch'\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\ntype VoidFunc = () => void\n\ntype Listener = {\n  callback: VoidFunc\n  next: Listener | null\n  prev: Listener | null\n}\n\nfunction createListenerCollection() {\n  let first: Listener | null = null\n  let last: Listener | null = null\n\n  return {\n    clear() {\n      first = null\n      last = null\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first\n        while (listener) {\n          listener.callback()\n          listener = listener.next\n        }\n      })\n    },\n\n    get() {\n      const listeners: Listener[] = []\n      let listener = first\n      while (listener) {\n        listeners.push(listener)\n        listener = listener.next\n      }\n      return listeners\n    },\n\n    subscribe(callback: () => void) {\n      let isSubscribed = true\n\n      const listener: Listener = (last = {\n        callback,\n        next: null,\n        prev: last,\n      })\n\n      if (listener.prev) {\n        listener.prev.next = listener\n      } else {\n        first = listener\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return\n        isSubscribed = false\n\n        if (listener.next) {\n          listener.next.prev = listener.prev\n        } else {\n          last = listener.prev\n        }\n        if (listener.prev) {\n          listener.prev.next = listener.next\n        } else {\n          first = listener.next\n        }\n      }\n    },\n  }\n}\n\ntype ListenerCollection = ReturnType<typeof createListenerCollection>\n\nexport interface Subscription {\n  addNestedSub: (listener: VoidFunc) => VoidFunc\n  notifyNestedSubs: VoidFunc\n  handleChangeWrapper: VoidFunc\n  isSubscribed: () => boolean\n  onStateChange?: VoidFunc | null\n  trySubscribe: VoidFunc\n  tryUnsubscribe: VoidFunc\n  getListeners: () => ListenerCollection\n}\n\nconst nullListeners = {\n  notify() {},\n  get: () => [],\n} as unknown as ListenerCollection\n\nexport function createSubscription(store: any, parentSub?: Subscription) {\n  let unsubscribe: VoidFunc | undefined\n  let listeners: ListenerCollection = nullListeners\n\n  // Reasons to keep the subscription active\n  let subscriptionsAmount = 0\n\n  // Is this specific subscription subscribed (or only nested ones?)\n  let selfSubscribed = false\n\n  function addNestedSub(listener: () => void) {\n    trySubscribe()\n\n    const cleanupListener = listeners.subscribe(listener)\n\n    // cleanup nested sub\n    let removed = false\n    return () => {\n      if (!removed) {\n        removed = true\n        cleanupListener()\n        tryUnsubscribe()\n      }\n    }\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify()\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange()\n    }\n  }\n\n  function isSubscribed() {\n    return selfSubscribed\n  }\n\n  function trySubscribe() {\n    subscriptionsAmount++\n    if (!unsubscribe) {\n      unsubscribe = parentSub\n        ? parentSub.addNestedSub(handleChangeWrapper)\n        : store.subscribe(handleChangeWrapper)\n\n      listeners = createListenerCollection()\n    }\n  }\n\n  function tryUnsubscribe() {\n    subscriptionsAmount--\n    if (unsubscribe && subscriptionsAmount === 0) {\n      unsubscribe()\n      unsubscribe = undefined\n      listeners.clear()\n      listeners = nullListeners\n    }\n  }\n\n  function trySubscribeSelf() {\n    if (!selfSubscribed) {\n      selfSubscribed = true\n      trySubscribe()\n    }\n  }\n\n  function tryUnsubscribeSelf() {\n    if (selfSubscribed) {\n      selfSubscribed = false\n      tryUnsubscribe()\n    }\n  }\n\n  const subscription: Subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe: trySubscribeSelf,\n    tryUnsubscribe: tryUnsubscribeSelf,\n    getListeners: () => listeners,\n  }\n\n  return subscription\n}\n","import { React } from '../utils/react'\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n\n// Matches logic in React's `shared/ExecutionEnvironment` file\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? React.useLayoutEffect\n  : React.useEffect\n","function is(x: unknown, y: unknown) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y\n  } else {\n    return x !== x && y !== y\n  }\n}\n\nexport default function shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) return true\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) return false\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","// Copied directly from:\n// https://github.com/mridgway/hoist-non-react-statics/blob/main/src/index.js\n// https://unpkg.com/browse/@types/hoist-non-react-statics@3.3.1/index.d.ts\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nimport type * as React from 'react'\nimport { ForwardRef, Memo, isMemo } from '../utils/react-is'\n\nconst REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true,\n} as const\n\nconst KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true,\n} as const\n\nconst FORWARD_REF_STATICS = {\n  $$typeof: true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n} as const\n\nconst MEMO_STATICS = {\n  $$typeof: true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true,\n} as const\n\nconst TYPE_STATICS = {\n  [ForwardRef]: FORWARD_REF_STATICS,\n  [Memo]: MEMO_STATICS,\n} as const\n\nfunction getStatics(component: any) {\n  // React v16.11 and below\n  if (isMemo(component)) {\n    return MEMO_STATICS\n  }\n\n  // React v16.12 and above\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS\n}\n\nexport type NonReactStatics<\n  S extends React.ComponentType<any>,\n  C extends {\n    [key: string]: true\n  } = {}\n> = {\n  [key in Exclude<\n    keyof S,\n    S extends React.MemoExoticComponent<any>\n      ? keyof typeof MEMO_STATICS | keyof C\n      : S extends React.ForwardRefExoticComponent<any>\n      ? keyof typeof FORWARD_REF_STATICS | keyof C\n      : keyof typeof REACT_STATICS | keyof typeof KNOWN_STATICS | keyof C\n  >]: S[key]\n}\n\nconst defineProperty = Object.defineProperty\nconst getOwnPropertyNames = Object.getOwnPropertyNames\nconst getOwnPropertySymbols = Object.getOwnPropertySymbols\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nconst getPrototypeOf = Object.getPrototypeOf\nconst objectPrototype = Object.prototype\n\nexport default function hoistNonReactStatics<\n  T extends React.ComponentType<any>,\n  S extends React.ComponentType<any>,\n  C extends {\n    [key: string]: true\n  } = {}\n>(targetComponent: T, sourceComponent: S): T & NonReactStatics<S, C> {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n\n    if (objectPrototype) {\n      const inheritedComponent = getPrototypeOf(sourceComponent)\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent)\n      }\n    }\n\n    let keys: (string | symbol)[] = getOwnPropertyNames(sourceComponent)\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent))\n    }\n\n    const targetStatics = getStatics(targetComponent)\n    const sourceStatics = getStatics(sourceComponent)\n\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i]\n      if (\n        !KNOWN_STATICS[key as keyof typeof KNOWN_STATICS] &&\n        !(sourceStatics && sourceStatics[key as keyof typeof sourceStatics]) &&\n        !(targetStatics && targetStatics[key as keyof typeof targetStatics])\n      ) {\n        const descriptor = getOwnPropertyDescriptor(sourceComponent, key)\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor!)\n        } catch (e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n  return targetComponent as any\n}\n","import type { Context, ReactNode } from 'react'\nimport { React } from '../utils/react'\nimport type { Action, Store, UnknownAction } from 'redux'\nimport type { DevModeCheckFrequency } from '../hooks/useSelector'\nimport { createSubscription } from '../utils/Subscription'\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect'\nimport type { ReactReduxContextValue } from './Context'\nimport { ReactReduxContext } from './Context'\n\nexport interface ProviderProps<\n  A extends Action<string> = UnknownAction,\n  S = unknown\n> {\n  /**\n   * The single Redux store in your application.\n   */\n  store: Store<S, A>\n\n  /**\n   * An optional server state snapshot. Will be used during initial hydration render if available, to ensure that the UI output is consistent with the HTML generated on the server.\n   */\n  serverState?: S\n\n  /**\n   * Optional context to be used internally in react-redux. Use React.createContext() to create a context to be used.\n   * If this is used, you'll need to customize `connect` by supplying the same context provided to the Provider.\n   * Set the initial value to null, and the hooks will error\n   * if this is not overwritten by Provider.\n   */\n  context?: Context<ReactReduxContextValue<S, A> | null>\n\n  /**\n   * Determines the frequency of stability checks for all selectors.\n   * This setting overrides the global configuration for\n   * the `useSelector` stability check, allowing you to specify how often\n   * these checks should occur in development mode.\n   *\n   * @since 8.1.0\n   */\n  stabilityCheck?: DevModeCheckFrequency\n\n  /**\n   * Determines the frequency of identity function checks for all selectors.\n   * This setting overrides the global configuration for\n   * the `useSelector` identity function check, allowing you to specify how often\n   * these checks should occur in development mode.\n   *\n   * **Note**: Previously referred to as `noopCheck`.\n   *\n   * @since 9.0.0\n   */\n  identityFunctionCheck?: DevModeCheckFrequency\n\n  children: ReactNode\n}\n\nfunction Provider<A extends Action<string> = UnknownAction, S = unknown>({\n  store,\n  context,\n  children,\n  serverState,\n  stabilityCheck = 'once',\n  identityFunctionCheck = 'once',\n}: ProviderProps<A, S>) {\n  const contextValue = React.useMemo(() => {\n    const subscription = createSubscription(store)\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined,\n      stabilityCheck,\n      identityFunctionCheck,\n    }\n  }, [store, serverState, stabilityCheck, identityFunctionCheck])\n\n  const previousState = React.useMemo(() => store.getState(), [store])\n\n  useIsomorphicLayoutEffect(() => {\n    const { subscription } = contextValue\n    subscription.onStateChange = subscription.notifyNestedSubs\n    subscription.trySubscribe()\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs()\n    }\n    return () => {\n      subscription.tryUnsubscribe()\n      subscription.onStateChange = undefined\n    }\n  }, [contextValue, previousState])\n\n  const Context = context || ReactReduxContext\n\n  // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>\n}\n\nexport default Provider\n","import type { Context } from 'react'\nimport type { Action, Store } from 'redux'\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport {\n  createReduxContextHook,\n  useReduxContext as useDefaultReduxContext,\n} from './useReduxContext'\n\n/**\n * Represents a type that extracts the action type from a given Redux store.\n *\n * @template StoreType - The specific type of the Redux store.\n *\n * @since 9.1.0\n * @internal\n */\nexport type ExtractStoreActionType<StoreType extends Store> =\n  StoreType extends Store<any, infer ActionType> ? ActionType : never\n\n/**\n * Represents a custom hook that provides access to the Redux store.\n *\n * @template StoreType - The specific type of the Redux store that gets returned.\n *\n * @since 9.1.0\n * @public\n */\nexport interface UseStore<StoreType extends Store> {\n  /**\n   * Returns the Redux store instance.\n   *\n   * @returns The Redux store instance.\n   */\n  (): StoreType\n\n  /**\n   * Returns the Redux store instance with specific state and action types.\n   *\n   * @returns The Redux store with the specified state and action types.\n   *\n   * @template StateType - The specific type of the state used in the store.\n   * @template ActionType - The specific type of the actions used in the store.\n   */\n  <\n    StateType extends ReturnType<StoreType['getState']> = ReturnType<\n      StoreType['getState']\n    >,\n    ActionType extends Action = ExtractStoreActionType<Store>\n  >(): Store<StateType, ActionType>\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useStore useStore}\n   * where the type of the Redux `store` is predefined.\n   *\n   * This allows you to set the `store` type once, eliminating the need to\n   * specify it with every {@linkcode useStore useStore} call.\n   *\n   * @returns A pre-typed `useStore` with the store type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppStore = useStore.withTypes<AppStore>()\n   * ```\n   *\n   * @template OverrideStoreType - The specific type of the Redux store that gets returned.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideStoreType extends StoreType\n  >() => UseStore<OverrideStoreType>\n}\n\n/**\n * Hook factory, which creates a `useStore` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useStore` hook bound to the specified context.\n */\nexport function createStoreHook<\n  StateType = unknown,\n  ActionType extends Action = Action\n>(\n  // @ts-ignore\n  context?: Context<ReactReduxContextValue<\n    StateType,\n    ActionType\n  > | null> = ReactReduxContext\n) {\n  const useReduxContext =\n    context === ReactReduxContext\n      ? useDefaultReduxContext\n      : // @ts-ignore\n        createReduxContextHook(context)\n  const useStore = () => {\n    const { store } = useReduxContext()\n    return store\n  }\n\n  Object.assign(useStore, {\n    withTypes: () => useStore,\n  })\n\n  return useStore as UseStore<Store<StateType, ActionType>>\n}\n\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport const useStore = /*#__PURE__*/ createStoreHook()\n","import type { Context } from 'react'\nimport type { Action, Dispatch, UnknownAction } from 'redux'\n\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport { createStoreHook, useStore as useDefaultStore } from './useStore'\n\n/**\n * Represents a custom hook that provides a dispatch function\n * from the Redux store.\n *\n * @template DispatchType - The specific type of the dispatch function.\n *\n * @since 9.1.0\n * @public\n */\nexport interface UseDispatch<\n  DispatchType extends Dispatch<UnknownAction> = Dispatch<UnknownAction>\n> {\n  /**\n   * Returns the dispatch function from the Redux store.\n   *\n   * @returns The dispatch function from the Redux store.\n   *\n   * @template AppDispatch - The specific type of the dispatch function.\n   */\n  <AppDispatch extends DispatchType = DispatchType>(): AppDispatch\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useDispatch useDispatch}\n   * where the type of the `dispatch` function is predefined.\n   *\n   * This allows you to set the `dispatch` type once, eliminating the need to\n   * specify it with every {@linkcode useDispatch useDispatch} call.\n   *\n   * @returns A pre-typed `useDispatch` with the dispatch type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppDispatch = useDispatch.withTypes<AppDispatch>()\n   * ```\n   *\n   * @template OverrideDispatchType - The specific type of the dispatch function.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideDispatchType extends DispatchType\n  >() => UseDispatch<OverrideDispatchType>\n}\n\n/**\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useDispatch` hook bound to the specified context.\n */\nexport function createDispatchHook<\n  StateType = unknown,\n  ActionType extends Action = UnknownAction\n>(\n  // @ts-ignore\n  context?: Context<ReactReduxContextValue<\n    StateType,\n    ActionType\n  > | null> = ReactReduxContext\n) {\n  const useStore =\n    context === ReactReduxContext ? useDefaultStore : createStoreHook(context)\n\n  const useDispatch = () => {\n    const store = useStore()\n    return store.dispatch\n  }\n\n  Object.assign(useDispatch, {\n    withTypes: () => useDispatch,\n  })\n\n  return useDispatch as UseDispatch<Dispatch<ActionType>>\n}\n\n/**\n * A hook to access the redux `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\nexport const useDispatch = /*#__PURE__*/ createDispatchHook()\n","import connect from './components/connect'\nexport type {\n  Connect,\n  ConnectProps,\n  ConnectedProps,\n} from './components/connect'\n\nimport shallowEqual from './utils/shallowEqual'\n\nimport Provider from './components/Provider'\nimport { defaultNoopBatch } from './utils/batch'\n\nexport { ReactReduxContext } from './components/Context'\nexport type { ReactReduxContextValue } from './components/Context'\n\nexport type { ProviderProps } from './components/Provider'\n\nexport type {\n  MapDispatchToProps,\n  MapDispatchToPropsFactory,\n  MapDispatchToPropsFunction,\n  MapDispatchToPropsNonObject,\n  MapDispatchToPropsParam,\n  MapStateToProps,\n  MapStateToPropsFactory,\n  MapStateToPropsParam,\n  MergeProps,\n  Selector,\n  SelectorFactory,\n} from './connect/selectorFactory'\n\nexport { createDispatchHook, useDispatch } from './hooks/useDispatch'\nexport type { UseDispatch } from './hooks/useDispatch'\n\nexport { createSelectorHook, useSelector } from './hooks/useSelector'\nexport type { UseSelector } from './hooks/useSelector'\n\nexport { createStoreHook, useStore } from './hooks/useStore'\nexport type { UseStore } from './hooks/useStore'\n\nexport type { Subscription } from './utils/Subscription'\n\nexport * from './types'\n\n/**\n * @deprecated As of React 18, batching is enabled by default for ReactDOM and React Native.\n * This is now a no-op that immediately runs the callback.\n */\nconst batch = defaultNoopBatch\n\nexport { Provider, batch, connect, shallowEqual }\n","export function capitalize(str: string) {\n  return str.replace(str[0], str[0].toUpperCase());\n}","// The primary entry point assumes we are working with React 18, and thus have\n// useSyncExternalStore available. We can import that directly from React itself.\n// The useSyncExternalStoreWithSelector has to be imported, but we can use the\n// non-shim version. This shaves off the byte size of the shim.\n\nimport * as React from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector.js'\n\nimport { initializeUseSelector } from './hooks/useSelector'\nimport { initializeConnect } from './components/connect'\n\ninitializeUseSelector(useSyncExternalStoreWithSelector)\ninitializeConnect(React.useSyncExternalStore)\n\nexport * from './exports'\n","/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport type { ComponentType } from 'react'\nimport { React } from '../utils/react'\nimport { isValidElementType, isContextConsumer } from '../utils/react-is'\n\nimport type { Store } from 'redux'\n\nimport type {\n  ConnectedComponent,\n  InferableComponentEnhancer,\n  InferableComponentEnhancerWithProps,\n  ResolveThunks,\n  DispatchProp,\n  ConnectPropsMaybeWithoutContext,\n} from '../types'\n\nimport type {\n  MapStateToPropsParam,\n  MapDispatchToPropsParam,\n  MergeProps,\n  MapDispatchToPropsNonObject,\n  SelectorFactoryOptions,\n} from '../connect/selectorFactory'\nimport defaultSelectorFactory from '../connect/selectorFactory'\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps'\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps'\nimport { mergePropsFactory } from '../connect/mergeProps'\n\nimport type { Subscription } from '../utils/Subscription'\nimport { createSubscription } from '../utils/Subscription'\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect'\nimport shallowEqual from '../utils/shallowEqual'\nimport hoistStatics from '../utils/hoistStatics'\nimport warning from '../utils/warning'\n\nimport type {\n  ReactReduxContextValue,\n  ReactReduxContextInstance,\n} from './Context'\nimport { ReactReduxContext } from './Context'\n\nimport type { uSES } from '../utils/useSyncExternalStore'\nimport { notInitialized } from '../utils/useSyncExternalStore'\n\nlet useSyncExternalStore = notInitialized as uSES\nexport const initializeConnect = (fn: uSES) => {\n  useSyncExternalStore = fn\n}\n\n// Define some constant arrays just to avoid re-creating these\nconst EMPTY_ARRAY: [unknown, number] = [null, 0]\nconst NO_SUBSCRIPTION_ARRAY = [null, null]\n\n// Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\nconst stringifyComponent = (Comp: unknown) => {\n  try {\n    return JSON.stringify(Comp)\n  } catch (err) {\n    return String(Comp)\n  }\n}\n\ntype EffectFunc = (...args: any[]) => void | ReturnType<React.EffectCallback>\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(\n  effectFunc: EffectFunc,\n  effectArgs: any[],\n  dependencies?: React.DependencyList,\n) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies)\n}\n\n// Effect callback, extracted: assign the latest props values to refs for later usage\nfunction captureWrapperProps(\n  lastWrapperProps: React.MutableRefObject<unknown>,\n  lastChildProps: React.MutableRefObject<unknown>,\n  renderIsScheduled: React.MutableRefObject<boolean>,\n  wrapperProps: unknown,\n  // actualChildProps: unknown,\n  childPropsFromStoreUpdate: React.MutableRefObject<unknown>,\n  notifyNestedSubs: () => void,\n) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps\n  renderIsScheduled.current = false\n\n  // If the render was from a store update, clear out that reference and cascade the subscriber update\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null\n    notifyNestedSubs()\n  }\n}\n\n// Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\nfunction subscribeUpdates(\n  shouldHandleStateChanges: boolean,\n  store: Store,\n  subscription: Subscription,\n  childPropsSelector: (state: unknown, props: unknown) => unknown,\n  lastWrapperProps: React.MutableRefObject<unknown>,\n  lastChildProps: React.MutableRefObject<unknown>,\n  renderIsScheduled: React.MutableRefObject<boolean>,\n  isMounted: React.MutableRefObject<boolean>,\n  childPropsFromStoreUpdate: React.MutableRefObject<unknown>,\n  notifyNestedSubs: () => void,\n  // forceComponentUpdateDispatch: React.Dispatch<any>,\n  additionalSubscribeListener: () => void,\n) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}\n\n  // Capture values for checking if and when this component unmounts\n  let didUnsubscribe = false\n  let lastThrownError: Error | null = null\n\n  // We'll run this callback every time a store subscription update propagates to this component\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return\n    }\n\n    // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n    const latestStoreState = store.getState()\n\n    let newChildProps, error\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(\n        latestStoreState,\n        lastWrapperProps.current,\n      )\n    } catch (e) {\n      error = e\n      lastThrownError = e as Error | null\n    }\n\n    if (!error) {\n      lastThrownError = null\n    }\n\n    // If the child props haven't changed, nothing to do here - cascade the subscription update\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs()\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps\n      childPropsFromStoreUpdate.current = newChildProps\n      renderIsScheduled.current = true\n\n      // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n      additionalSubscribeListener()\n    }\n  }\n\n  // Actually subscribe to the nearest connected ancestor (or store)\n  subscription.onStateChange = checkForUpdates\n  subscription.trySubscribe()\n\n  // Pull data from the store after first render in case the store has\n  // changed since we began.\n  checkForUpdates()\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true\n    subscription.tryUnsubscribe()\n    subscription.onStateChange = null\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError\n    }\n  }\n\n  return unsubscribeWrapper\n}\n\n// Reducer initial state creation for our update reducer\nconst initStateUpdates = () => EMPTY_ARRAY\n\nexport interface ConnectProps {\n  /** A custom Context instance that the component can use to access the store from an alternate Provider using that same Context instance */\n  context?: ReactReduxContextInstance\n  /** A Redux store instance to be used for subscriptions instead of the store from a Provider */\n  store?: Store\n}\n\ninterface InternalConnectProps extends ConnectProps {\n  reactReduxForwardedRef?: React.ForwardedRef<unknown>\n}\n\nfunction strictEqual(a: unknown, b: unknown) {\n  return a === b\n}\n\n/**\n * Infers the type of props that a connector will inject into a component.\n */\nexport type ConnectedProps<TConnector> =\n  TConnector extends InferableComponentEnhancerWithProps<\n    infer TInjectedProps,\n    any\n  >\n    ? unknown extends TInjectedProps\n      ? TConnector extends InferableComponentEnhancer<infer TInjectedProps>\n        ? TInjectedProps\n        : never\n      : TInjectedProps\n    : never\n\nexport interface ConnectOptions<\n  State = unknown,\n  TStateProps = {},\n  TOwnProps = {},\n  TMergedProps = {}\n> {\n  forwardRef?: boolean\n  context?: typeof ReactReduxContext\n  areStatesEqual?: (\n    nextState: State,\n    prevState: State,\n    nextOwnProps: TOwnProps,\n    prevOwnProps: TOwnProps\n  ) => boolean\n\n  areOwnPropsEqual?: (\n    nextOwnProps: TOwnProps,\n    prevOwnProps: TOwnProps\n  ) => boolean\n\n  areStatePropsEqual?: (\n    nextStateProps: TStateProps,\n    prevStateProps: TStateProps\n  ) => boolean\n  areMergedPropsEqual?: (\n    nextMergedProps: TMergedProps,\n    prevMergedProps: TMergedProps\n  ) => boolean\n}\n\n/**\n * Connects a React component to a Redux store.\n *\n * - Without arguments, just wraps the component, without changing the behavior / props\n *\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\n * is to override ownProps (as stated in the docs), so what remains is everything that's\n * not a state or dispatch prop\n *\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\n * should be valid component props, because it depends on mergeProps implementation.\n * As such, it is the user's responsibility to extend ownProps interface from state or\n * dispatch props or both when applicable\n *\n * @param mapStateToProps\n * @param mapDispatchToProps\n * @param mergeProps\n * @param options\n */\nexport interface Connect<DefaultState = unknown> {\n  // tslint:disable:no-unnecessary-generics\n  (): InferableComponentEnhancer<DispatchProp>\n\n  /** mapState only */\n  <TStateProps = {}, no_dispatch = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>\n  ): InferableComponentEnhancerWithProps<TStateProps & DispatchProp, TOwnProps>\n\n  /** mapDispatch only (as a function) */\n  <no_state = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<TDispatchProps, TOwnProps>\n\n  /** mapDispatch only (as an object) */\n  <no_state = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<\n    ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mapState and mapDispatch (as a function)*/\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & TDispatchProps,\n    TOwnProps\n  >\n\n  /** mapState and mapDispatch (nullish) */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: null | undefined\n  ): InferableComponentEnhancerWithProps<TStateProps, TOwnProps>\n\n  /** mapState and mapDispatch (as an object) */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mergeProps only */\n  <no_state = {}, no_dispatch = {}, TOwnProps = {}, TMergedProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: null | undefined,\n    mergeProps: MergeProps<undefined, DispatchProp, TOwnProps, TMergedProps>\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n\n  /** mapState and mergeProps */\n  <\n    TStateProps = {},\n    no_dispatch = {},\n    TOwnProps = {},\n    TMergedProps = {},\n    State = DefaultState\n  >(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: null | undefined,\n    mergeProps: MergeProps<TStateProps, DispatchProp, TOwnProps, TMergedProps>\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n\n  /** mapDispatch (as a object) and mergeProps */\n  <no_state = {}, TDispatchProps = {}, TOwnProps = {}, TMergedProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: MergeProps<undefined, TDispatchProps, TOwnProps, TMergedProps>\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n\n  /** mapState and options */\n  <TStateProps = {}, no_dispatch = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: null | undefined,\n    mergeProps: null | undefined,\n    options: ConnectOptions<State, TStateProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<DispatchProp & TStateProps, TOwnProps>\n\n  /** mapDispatch (as a function) and options */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<{}, TStateProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<TDispatchProps, TOwnProps>\n\n  /** mapDispatch (as an object) and options*/\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<{}, TStateProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<\n    ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mapState,  mapDispatch (as a function), and options */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<State, TStateProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & TDispatchProps,\n    TOwnProps\n  >\n\n  /** mapState,  mapDispatch (as an object), and options */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<State, TStateProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mapState, mapDispatch, mergeProps, and options */\n  <\n    TStateProps = {},\n    TDispatchProps = {},\n    TOwnProps = {},\n    TMergedProps = {},\n    State = DefaultState\n  >(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: MergeProps<\n      TStateProps,\n      TDispatchProps,\n      TOwnProps,\n      TMergedProps\n    >,\n    options?: ConnectOptions<State, TStateProps, TOwnProps, TMergedProps>\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n  // tslint:enable:no-unnecessary-generics\n}\n\nlet hasWarnedAboutDeprecatedPureOption = false\n\n/**\n * Connects a React component to a Redux store.\n *\n * - Without arguments, just wraps the component, without changing the behavior / props\n *\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\n * is to override ownProps (as stated in the docs), so what remains is everything that's\n * not a state or dispatch prop\n *\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\n * should be valid component props, because it depends on mergeProps implementation.\n * As such, it is the user's responsibility to extend ownProps interface from state or\n * dispatch props or both when applicable\n *\n * @param mapStateToProps A function that extracts values from state\n * @param mapDispatchToProps Setup for dispatching actions\n * @param mergeProps Optional callback to merge state and dispatch props together\n * @param options Options for configuring the connection\n *\n */\nfunction connect<\n  TStateProps = {},\n  TDispatchProps = {},\n  TOwnProps = {},\n  TMergedProps = {},\n  State = unknown\n>(\n  mapStateToProps?: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n  mapDispatchToProps?: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  mergeProps?: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>,\n  {\n    // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n    // @ts-ignore\n    pure,\n    areStatesEqual = strictEqual,\n    areOwnPropsEqual = shallowEqual,\n    areStatePropsEqual = shallowEqual,\n    areMergedPropsEqual = shallowEqual,\n\n    // use React's forwardRef to expose a ref of the wrapped component\n    forwardRef = false,\n\n    // the context consumer to use\n    context = ReactReduxContext,\n  }: ConnectOptions<unknown, unknown, unknown, unknown> = {},\n): unknown {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true\n      warning(\n        'The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component',\n      )\n    }\n  }\n\n  const Context = context\n\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps)\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps)\n  const initMergeProps = mergePropsFactory(mergeProps)\n\n  const shouldHandleStateChanges = Boolean(mapStateToProps)\n\n  const wrapWithConnect = <TProps,>(\n    WrappedComponent: ComponentType<TProps>,\n  ) => {\n    type WrappedComponentProps = TProps &\n      ConnectPropsMaybeWithoutContext<TProps>\n\n    if (process.env.NODE_ENV !== 'production') {\n      const isValid = /*#__PURE__*/ isValidElementType(WrappedComponent)\n      if (!isValid)\n        throw new Error(\n          `You must pass a component to the function returned by connect. Instead received ${stringifyComponent(\n            WrappedComponent,\n          )}`,\n        )\n    }\n\n    const wrappedComponentName =\n      WrappedComponent.displayName || WrappedComponent.name || 'Component'\n\n    const displayName = `Connect(${wrappedComponentName})`\n\n    const selectorFactoryOptions: SelectorFactoryOptions<\n      any,\n      any,\n      any,\n      any,\n      State\n    > = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual,\n    }\n\n    function ConnectFunction<TOwnProps>(\n      props: InternalConnectProps & TOwnProps,\n    ) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] =\n        React.useMemo(() => {\n          // Distinguish between actual \"data\" props that were passed to the wrapper component,\n          // and values needed to control behavior (forwarded refs, alternate context instances).\n          // To maintain the wrapperProps object reference, memoize this destructuring.\n          const { reactReduxForwardedRef, ...wrapperProps } = props\n          return [props.context, reactReduxForwardedRef, wrapperProps]\n        }, [props])\n\n      const ContextToUse: ReactReduxContextInstance = React.useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        let ResultContext = Context\n        if (propsContext?.Consumer) {\n          if (process.env.NODE_ENV !== 'production') {\n            const isValid = /*#__PURE__*/ isContextConsumer(\n              // @ts-ignore\n              <propsContext.Consumer />,\n            )\n            if (!isValid) {\n              throw new Error(\n                'You must pass a valid React context consumer as `props.context`',\n              )\n            }\n            ResultContext = propsContext\n          }\n        }\n        return ResultContext\n      }, [propsContext, Context])\n\n      // Retrieve the store and ancestor subscription via context, if available\n      const contextValue = React.useContext(ContextToUse)\n\n      // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n      const didStoreComeFromProps =\n        Boolean(props.store) &&\n        Boolean(props.store!.getState) &&\n        Boolean(props.store!.dispatch)\n      const didStoreComeFromContext =\n        Boolean(contextValue) && Boolean(contextValue!.store)\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !didStoreComeFromProps &&\n        !didStoreComeFromContext\n      ) {\n        throw new Error(\n          `Could not find \"store\" in the context of ` +\n            `\"${displayName}\". Either wrap the root component in a <Provider>, ` +\n            `or pass a custom React context provider to <Provider> and the corresponding ` +\n            `React context consumer to ${displayName} in connect options.`,\n        )\n      }\n\n      // Based on the previous check, one of these must be true\n      const store: Store = didStoreComeFromProps\n        ? props.store!\n        : contextValue!.store\n\n      const getServerState = didStoreComeFromContext\n        ? contextValue!.getServerState\n        : store.getState\n\n      const childPropsSelector = React.useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions)\n      }, [store])\n\n      const [subscription, notifyNestedSubs] = React.useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY\n\n        // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n        const subscription = createSubscription(\n          store,\n          didStoreComeFromProps ? undefined : contextValue!.subscription,\n        )\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n        const notifyNestedSubs =\n          subscription.notifyNestedSubs.bind(subscription)\n\n        return [subscription, notifyNestedSubs]\n      }, [store, didStoreComeFromProps, contextValue])\n\n      // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n      const overriddenContextValue = React.useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue!\n        }\n\n        // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n        return {\n          ...contextValue,\n          subscription,\n        } as ReactReduxContextValue\n      }, [didStoreComeFromProps, contextValue, subscription])\n\n      // Set up refs to coordinate values between the subscription effect and the render logic\n      const lastChildProps = React.useRef<unknown>()\n      const lastWrapperProps = React.useRef(wrapperProps)\n      const childPropsFromStoreUpdate = React.useRef<unknown>()\n      const renderIsScheduled = React.useRef(false)\n      const isProcessingDispatch = React.useRef(false)\n      const isMounted = React.useRef(false)\n\n      const latestSubscriptionCallbackError = React.useRef<Error>()\n\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true\n        return () => {\n          isMounted.current = false\n        }\n      }, [])\n\n      const actualChildPropsSelector = React.useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (\n            childPropsFromStoreUpdate.current &&\n            wrapperProps === lastWrapperProps.current\n          ) {\n            return childPropsFromStoreUpdate.current\n          }\n\n          // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n          return childPropsSelector(store.getState(), wrapperProps)\n        }\n        return selector\n      }, [store, wrapperProps])\n\n      // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = React.useMemo(() => {\n        const subscribe = (reactListener: () => void) => {\n          if (!subscription) {\n            return () => {}\n          }\n\n          return subscribeUpdates(\n            shouldHandleStateChanges,\n            store,\n            subscription,\n            // @ts-ignore\n            childPropsSelector,\n            lastWrapperProps,\n            lastChildProps,\n            renderIsScheduled,\n            isMounted,\n            childPropsFromStoreUpdate,\n            notifyNestedSubs,\n            reactListener,\n          )\n        }\n\n        return subscribe\n      }, [subscription])\n\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [\n        lastWrapperProps,\n        lastChildProps,\n        renderIsScheduled,\n        wrapperProps,\n        childPropsFromStoreUpdate,\n        notifyNestedSubs,\n      ])\n\n      let actualChildProps: Record<string, unknown>\n\n      try {\n        actualChildProps = useSyncExternalStore(\n          // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n          subscribeForReact,\n          // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n          // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n          actualChildPropsSelector,\n          getServerState\n            ? () => childPropsSelector(getServerState(), wrapperProps)\n            : actualChildPropsSelector,\n        )\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          // eslint-disable-next-line no-extra-semi\n          ;(\n            err as Error\n          ).message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n        }\n\n        throw err\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined\n        childPropsFromStoreUpdate.current = undefined\n        lastChildProps.current = actualChildProps\n      })\n\n      // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n      const renderedWrappedComponent = React.useMemo(() => {\n        return (\n          // @ts-ignore\n          <WrappedComponent\n            {...actualChildProps}\n            ref={reactReduxForwardedRef}\n          />\n        )\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps])\n\n      // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n      const renderedChild = React.useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return (\n            <ContextToUse.Provider value={overriddenContextValue}>\n              {renderedWrappedComponent}\n            </ContextToUse.Provider>\n          )\n        }\n\n        return renderedWrappedComponent\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue])\n\n      return renderedChild\n    }\n\n    const _Connect = React.memo(ConnectFunction)\n\n    type ConnectedWrapperComponent = typeof _Connect & {\n      WrappedComponent: typeof WrappedComponent\n    }\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect as unknown as ConnectedComponent<\n      typeof WrappedComponent,\n      WrappedComponentProps\n    >\n    Connect.WrappedComponent = WrappedComponent\n    Connect.displayName = ConnectFunction.displayName = displayName\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(function forwardConnectRef(\n        props,\n        ref,\n      ) {\n        // @ts-ignore\n        return <Connect {...props} reactReduxForwardedRef={ref} />\n      })\n\n      const forwarded = _forwarded as ConnectedWrapperComponent\n      forwarded.displayName = displayName\n      forwarded.WrappedComponent = WrappedComponent\n      return /*#__PURE__*/ hoistStatics(forwarded, WrappedComponent)\n    }\n\n    return /*#__PURE__*/ hoistStatics(Connect, WrappedComponent)\n  }\n\n  return wrapWithConnect\n}\n\nexport default connect as Connect\n","export const UNINITIALIZED_VALUE = Symbol();\nexport type UninitializedValue = typeof UNINITIALIZED_VALUE;","import { useEffect, useRef, useMemo } from 'react';\nimport type { SerializeQueryArgs } from '@reduxjs/toolkit/query';\nimport type { EndpointDefinition } from '@reduxjs/toolkit/query';\nexport function useStableQueryArgs<T>(queryArgs: T, serialize: SerializeQueryArgs<any>, endpointDefinition: EndpointDefinition<any, any, any, any>, endpointName: string) {\n  const incoming = useMemo(() => ({\n    queryArgs,\n    serialized: typeof queryArgs == 'object' ? serialize({\n      queryArgs,\n      endpointDefinition,\n      endpointName\n    }) : queryArgs\n  }), [queryArgs, serialize, endpointDefinition, endpointName]);\n  const cache = useRef(incoming);\n  useEffect(() => {\n    if (cache.current.serialized !== incoming.serialized) {\n      cache.current = incoming;\n    }\n  }, [incoming]);\n  return cache.current.serialized === incoming.serialized ? cache.current.queryArgs : queryArgs;\n}","import { useEffect, useRef } from 'react';\nimport { shallowEqual } from 'react-redux';\nexport function useShallowStableValue<T>(value: T) {\n  const cache = useRef(value);\n  useEffect(() => {\n    if (!shallowEqual(cache.current, value)) {\n      cache.current = value;\n    }\n  }, [value]);\n  return shallowEqual(cache.current, value) ? cache.current : value;\n}","import { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Selector, ThunkAction, ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport type { Api, ApiContext, ApiEndpointMutation, ApiEndpointQuery, CoreModule, EndpointDefinitions, MutationActionCreatorResult, MutationDefinition, MutationResultSelectorResult, PrefetchOptions, QueryActionCreatorResult, QueryArgFrom, QueryDefinition, QueryKeys, QueryResultSelectorResult, QuerySubState, ResultTypeFrom, RootState, SerializeQueryArgs, SkipToken, SubscriptionOptions, TSHelpersId, TSHelpersNoInfer, TSHelpersOverride } from '@reduxjs/toolkit/query';\nimport { QueryStatus, skipToken } from '@reduxjs/toolkit/query';\nimport type { DependencyList } from 'react';\nimport { useCallback, useDebugValue, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport type { BaseQueryFn } from '../baseQueryTypes';\nimport type { SubscriptionSelectors } from '../core/buildMiddleware/types';\nimport { defaultSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { UninitializedValue } from './constants';\nimport { UNINITIALIZED_VALUE } from './constants';\nimport type { ReactHooksModuleOptions } from './module';\nimport { useStableQueryArgs } from './useSerializedStableValue';\nimport { useShallowStableValue } from './useShallowStableValue'; // Copy-pasted from React-Redux\n\nexport const useIsomorphicLayoutEffect = typeof window !== 'undefined' && !!window.document && !!window.document.createElement ? useLayoutEffect : useEffect;\nexport interface QueryHooks<Definition extends QueryDefinition<any, any, any, any, any>> {\n  useQuery: UseQuery<Definition>;\n  useLazyQuery: UseLazyQuery<Definition>;\n  useQuerySubscription: UseQuerySubscription<Definition>;\n  useLazyQuerySubscription: UseLazyQuerySubscription<Definition>;\n  useQueryState: UseQueryState<Definition>;\n}\nexport interface MutationHooks<Definition extends MutationDefinition<any, any, any, any, any>> {\n  useMutation: UseMutation<Definition>;\n}\n/**\n * A React hook that automatically triggers fetches of data from an endpoint, 'subscribes' the component to the cached data, and reads the request status and cached data from the Redux store. The component will re-render as the loading status changes and the data becomes available.\n *\n * The query arg is used as a cache key. Changing the query arg will tell the hook to re-fetch the data if it does not exist in the cache already, and the hook will return the data for that query arg once it's available.\n *\n * This hook combines the functionality of both [`useQueryState`](#usequerystate) and [`useQuerySubscription`](#usequerysubscription) together, and is intended to be used in the majority of situations.\n *\n * #### Features\n *\n * - Automatically triggers requests to retrieve data based on the hook argument and whether cached data exists by default\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met\n * - Returns the latest request status and cached data from the Redux store\n * - Re-renders as the request status changes and data becomes available\n */\n\nexport type UseQuery<D extends QueryDefinition<any, any, any, any>> = <R extends Record<string, any> = UseQueryStateDefaultResult<D>>(arg: QueryArgFrom<D> | SkipToken, options?: UseQuerySubscriptionOptions & UseQueryStateOptions<D, R>) => UseQueryHookResult<D, R>;\nexport type TypedUseQuery<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseQuery<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type UseQueryHookResult<D extends QueryDefinition<any, any, any, any>, R = UseQueryStateDefaultResult<D>> = UseQueryStateResult<D, R> & UseQuerySubscriptionResult<D>;\n/**\n * Helper type to manually type the result\n * of the `useQuery` hook in userland code.\n */\n\nexport type TypedUseQueryHookResult<ResultType, QueryArg, BaseQuery extends BaseQueryFn, R = UseQueryStateDefaultResult<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>> = TypedUseQueryStateResult<ResultType, QueryArg, BaseQuery, R> & TypedUseQuerySubscriptionResult<ResultType, QueryArg, BaseQuery>;\ninterface UseQuerySubscriptionOptions extends SubscriptionOptions {\n  /**\n   * Prevents a query from automatically running.\n   *\n   * @remarks\n   * When `skip` is true (or `skipToken` is passed in as `arg`):\n   *\n   * - **If the query has cached data:**\n   *   * The cached data **will not be used** on the initial load, and will ignore updates from any identical query until the `skip` condition is removed\n   *   * The query will have a status of `uninitialized`\n   *   * If `skip: false` is set after the initial load, the cached result will be used\n   * - **If the query does not have cached data:**\n   *   * The query will have a status of `uninitialized`\n   *   * The query will not exist in the state when viewed with the dev tools\n   *   * The query will not automatically fetch on mount\n   *   * The query will not automatically run when additional components with the same query are added that do run\n   *\n   * @example\n   * ```tsx\n   * // codeblock-meta no-transpile title=\"Skip example\"\n   * const Pokemon = ({ name, skip }: { name: string; skip: boolean }) => {\n   *   const { data, error, status } = useGetPokemonByNameQuery(name, {\n   *     skip,\n   *   });\n   *\n   *   return (\n   *     <div>\n   *       {name} - {status}\n   *     </div>\n   *   );\n   * };\n   * ```\n   */\n  skip?: boolean;\n  /**\n   * Defaults to `false`. This setting allows you to control whether if a cached result is already available, RTK Query will only serve a cached result, or if it should `refetch` when set to `true` or if an adequate amount of time has passed since the last successful query result.\n   * - `false` - Will not cause a query to be performed _unless_ it does not exist yet.\n   * - `true` - Will always refetch when a new subscriber to a query is added. Behaves the same as calling the `refetch` callback or passing `forceRefetch: true` in the action creator.\n   * - `number` - **Value is in seconds**. If a number is provided and there is an existing query in the cache, it will compare the current time vs the last fulfilled timestamp, and only refetch if enough time has elapsed.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   */\n\n  refetchOnMountOrArgChange?: boolean | number;\n}\n/**\n * A React hook that automatically triggers fetches of data from an endpoint, and 'subscribes' the component to the cached data.\n *\n * The query arg is used as a cache key. Changing the query arg will tell the hook to re-fetch the data if it does not exist in the cache already.\n *\n * Note that this hook does not return a request status or cached data. For that use-case, see [`useQuery`](#usequery) or [`useQueryState`](#usequerystate).\n *\n * #### Features\n *\n * - Automatically triggers requests to retrieve data based on the hook argument and whether cached data exists by default\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met\n */\n\nexport type UseQuerySubscription<D extends QueryDefinition<any, any, any, any>> = (arg: QueryArgFrom<D> | SkipToken, options?: UseQuerySubscriptionOptions) => UseQuerySubscriptionResult<D>;\nexport type TypedUseQuerySubscription<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseQuerySubscription<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type UseQuerySubscriptionResult<D extends QueryDefinition<any, any, any, any>> = Pick<QueryActionCreatorResult<D>, 'refetch'>;\n/**\n * Helper type to manually type the result\n * of the `useQuerySubscription` hook in userland code.\n */\n\nexport type TypedUseQuerySubscriptionResult<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseQuerySubscriptionResult<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type UseLazyQueryLastPromiseInfo<D extends QueryDefinition<any, any, any, any>> = {\n  lastArg: QueryArgFrom<D>;\n};\n/**\n * A React hook similar to [`useQuery`](#usequery), but with manual control over when the data fetching occurs.\n *\n * This hook includes the functionality of [`useLazyQuerySubscription`](#uselazyquerysubscription).\n *\n * #### Features\n *\n * - Manual control over firing a request to retrieve data\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\n * - Returns the latest request status and cached data from the Redux store\n * - Re-renders as the request status changes and data becomes available\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met and the fetch has been manually called at least once\n *\n * #### Note\n *\n * When the trigger function returned from a LazyQuery is called, it always initiates a new request to the server even if there is cached data. Set `preferCacheValue`(the second argument to the function) as `true` if you want it to immediately return a cached value if one exists.\n */\n\nexport type UseLazyQuery<D extends QueryDefinition<any, any, any, any>> = <R extends Record<string, any> = UseQueryStateDefaultResult<D>>(options?: SubscriptionOptions & Omit<UseQueryStateOptions<D, R>, 'skip'>) => [LazyQueryTrigger<D>, UseQueryStateResult<D, R>, UseLazyQueryLastPromiseInfo<D>];\nexport type TypedUseLazyQuery<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseLazyQuery<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type LazyQueryTrigger<D extends QueryDefinition<any, any, any, any>> = {\n  /**\n   * Triggers a lazy query.\n   *\n   * By default, this will start a new request even if there is already a value in the cache.\n   * If you want to use the cache value and only start a request if there is no cache value, set the second argument to `true`.\n   *\n   * @remarks\n   * If you need to access the error or success payload immediately after a lazy query, you can chain .unwrap().\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using .unwrap with async await\"\n   * try {\n   *   const payload = await getUserById(1).unwrap();\n   *   console.log('fulfilled', payload)\n   * } catch (error) {\n   *   console.error('rejected', error);\n   * }\n   * ```\n   */\n  (arg: QueryArgFrom<D>, preferCacheValue?: boolean): QueryActionCreatorResult<D>;\n};\nexport type TypedLazyQueryTrigger<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = LazyQueryTrigger<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\n/**\n * A React hook similar to [`useQuerySubscription`](#usequerysubscription), but with manual control over when the data fetching occurs.\n *\n * Note that this hook does not return a request status or cached data. For that use-case, see [`useLazyQuery`](#uselazyquery).\n *\n * #### Features\n *\n * - Manual control over firing a request to retrieve data\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met and the fetch has been manually called at least once\n */\n\nexport type UseLazyQuerySubscription<D extends QueryDefinition<any, any, any, any>> = (options?: SubscriptionOptions) => readonly [LazyQueryTrigger<D>, QueryArgFrom<D> | UninitializedValue];\nexport type TypedUseLazyQuerySubscription<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseLazyQuerySubscription<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type QueryStateSelector<R extends Record<string, any>, D extends QueryDefinition<any, any, any, any>> = (state: UseQueryStateDefaultResult<D>) => R;\n/**\n * A React hook that reads the request status and cached data from the Redux store. The component will re-render as the loading status changes and the data becomes available.\n *\n * Note that this hook does not trigger fetching new data. For that use-case, see [`useQuery`](#usequery) or [`useQuerySubscription`](#usequerysubscription).\n *\n * #### Features\n *\n * - Returns the latest request status and cached data from the Redux store\n * - Re-renders as the request status changes and data becomes available\n */\n\nexport type UseQueryState<D extends QueryDefinition<any, any, any, any>> = <R extends Record<string, any> = UseQueryStateDefaultResult<D>>(arg: QueryArgFrom<D> | SkipToken, options?: UseQueryStateOptions<D, R>) => UseQueryStateResult<D, R>;\nexport type TypedUseQueryState<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseQueryState<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type UseQueryStateOptions<D extends QueryDefinition<any, any, any, any>, R extends Record<string, any>> = {\n  /**\n   * Prevents a query from automatically running.\n   *\n   * @remarks\n   * When skip is true:\n   *\n   * - **If the query has cached data:**\n   *   * The cached data **will not be used** on the initial load, and will ignore updates from any identical query until the `skip` condition is removed\n   *   * The query will have a status of `uninitialized`\n   *   * If `skip: false` is set after skipping the initial load, the cached result will be used\n   * - **If the query does not have cached data:**\n   *   * The query will have a status of `uninitialized`\n   *   * The query will not exist in the state when viewed with the dev tools\n   *   * The query will not automatically fetch on mount\n   *   * The query will not automatically run when additional components with the same query are added that do run\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Skip example\"\n   * const Pokemon = ({ name, skip }: { name: string; skip: boolean }) => {\n   *   const { data, error, status } = useGetPokemonByNameQuery(name, {\n   *     skip,\n   *   });\n   *\n   *   return (\n   *     <div>\n   *       {name} - {status}\n   *     </div>\n   *   );\n   * };\n   * ```\n   */\n  skip?: boolean;\n  /**\n   * `selectFromResult` allows you to get a specific segment from a query result in a performant manner.\n   * When using this feature, the component will not rerender unless the underlying data of the selected item has changed.\n   * If the selected item is one element in a larger collection, it will disregard changes to elements in the same collection.\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using selectFromResult to extract a single result\"\n   * function PostsList() {\n   *   const { data: posts } = api.useGetPostsQuery();\n   *\n   *   return (\n   *     <ul>\n   *       {posts?.data?.map((post) => (\n   *         <PostById key={post.id} id={post.id} />\n   *       ))}\n   *     </ul>\n   *   );\n   * }\n   *\n   * function PostById({ id }: { id: number }) {\n   *   // Will select the post with the given id, and will only rerender if the given posts data changes\n   *   const { post } = api.useGetPostsQuery(undefined, {\n   *     selectFromResult: ({ data }) => ({ post: data?.find((post) => post.id === id) }),\n   *   });\n   *\n   *   return <li>{post?.name}</li>;\n   * }\n   * ```\n   */\n\n  selectFromResult?: QueryStateSelector<R, D>;\n};\nexport type UseQueryStateResult<_ extends QueryDefinition<any, any, any, any>, R> = TSHelpersNoInfer<R>;\n/**\n * Helper type to manually type the result\n * of the `useQueryState` hook in userland code.\n */\n\nexport type TypedUseQueryStateResult<ResultType, QueryArg, BaseQuery extends BaseQueryFn, R = UseQueryStateDefaultResult<QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>>> = TSHelpersNoInfer<R>;\ntype UseQueryStateBaseResult<D extends QueryDefinition<any, any, any, any>> = QuerySubState<D> & {\n  /**\n   * Where `data` tries to hold data as much as possible, also re-using\n   * data from the last arguments passed into the hook, this property\n   * will always contain the received data from the query, for the current query arguments.\n   */\n  currentData?: ResultTypeFrom<D>;\n  /**\n   * Query has not started yet.\n   */\n\n  isUninitialized: false;\n  /**\n   * Query is currently loading for the first time. No data yet.\n   */\n\n  isLoading: false;\n  /**\n   * Query is currently fetching, but might have data from an earlier request.\n   */\n\n  isFetching: false;\n  /**\n   * Query has data from a successful load.\n   */\n\n  isSuccess: false;\n  /**\n   * Query is currently in \"error\" state.\n   */\n\n  isError: false;\n};\ntype UseQueryStateDefaultResult<D extends QueryDefinition<any, any, any, any>> = TSHelpersId<TSHelpersOverride<Extract<UseQueryStateBaseResult<D>, {\n  status: QueryStatus.uninitialized;\n}>, {\n  isUninitialized: true;\n}> | TSHelpersOverride<UseQueryStateBaseResult<D>, {\n  isLoading: true;\n  isFetching: boolean;\n  data: undefined;\n} | ({\n  isSuccess: true;\n  isFetching: true;\n  error: undefined;\n} & Required<Pick<UseQueryStateBaseResult<D>, 'data' | 'fulfilledTimeStamp'>>) | ({\n  isSuccess: true;\n  isFetching: false;\n  error: undefined;\n} & Required<Pick<UseQueryStateBaseResult<D>, 'data' | 'fulfilledTimeStamp' | 'currentData'>>) | ({\n  isError: true;\n} & Required<Pick<UseQueryStateBaseResult<D>, 'error'>>)>> & {\n  /**\n   * @deprecated Included for completeness, but discouraged.\n   * Please use the `isLoading`, `isFetching`, `isSuccess`, `isError`\n   * and `isUninitialized` flags instead\n   */\n  status: QueryStatus;\n};\nexport type MutationStateSelector<R extends Record<string, any>, D extends MutationDefinition<any, any, any, any>> = (state: MutationResultSelectorResult<D>) => R;\nexport type UseMutationStateOptions<D extends MutationDefinition<any, any, any, any>, R extends Record<string, any>> = {\n  selectFromResult?: MutationStateSelector<R, D>;\n  fixedCacheKey?: string;\n};\nexport type UseMutationStateResult<D extends MutationDefinition<any, any, any, any>, R> = TSHelpersNoInfer<R> & {\n  originalArgs?: QueryArgFrom<D>;\n  /**\n   * Resets the hook state to it's initial `uninitialized` state.\n   * This will also remove the last result from the cache.\n   */\n\n  reset: () => void;\n};\n/**\n * Helper type to manually type the result\n * of the `useMutation` hook in userland code.\n */\n\nexport type TypedUseMutationResult<ResultType, QueryArg, BaseQuery extends BaseQueryFn, R = MutationResultSelectorResult<MutationDefinition<QueryArg, BaseQuery, string, ResultType, string>>> = UseMutationStateResult<MutationDefinition<QueryArg, BaseQuery, string, ResultType, string>, R>;\n/**\n * A React hook that lets you trigger an update request for a given endpoint, and subscribes the component to read the request status from the Redux store. The component will re-render as the loading status changes.\n *\n * #### Features\n *\n * - Manual control over firing a request to alter data on the server or possibly invalidate the cache\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\n * - Returns the latest request status and cached data from the Redux store\n * - Re-renders as the request status changes and data becomes available\n */\n\nexport type UseMutation<D extends MutationDefinition<any, any, any, any>> = <R extends Record<string, any> = MutationResultSelectorResult<D>>(options?: UseMutationStateOptions<D, R>) => readonly [MutationTrigger<D>, UseMutationStateResult<D, R>];\nexport type TypedUseMutation<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = UseMutation<MutationDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\nexport type MutationTrigger<D extends MutationDefinition<any, any, any, any>> = {\n  /**\n   * Triggers the mutation and returns a Promise.\n   * @remarks\n   * If you need to access the error or success payload immediately after a mutation, you can chain .unwrap().\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using .unwrap with async await\"\n   * try {\n   *   const payload = await addPost({ id: 1, name: 'Example' }).unwrap();\n   *   console.log('fulfilled', payload)\n   * } catch (error) {\n   *   console.error('rejected', error);\n   * }\n   * ```\n   */\n  (arg: QueryArgFrom<D>): MutationActionCreatorResult<D>;\n};\nexport type TypedUseMutationTrigger<ResultType, QueryArg, BaseQuery extends BaseQueryFn> = MutationTrigger<MutationDefinition<QueryArg, BaseQuery, string, ResultType, string>>;\n/**\n * Wrapper around `defaultQueryStateSelector` to be used in `useQuery`.\n * We want the initial render to already come back with\n * `{ isUninitialized: false, isFetching: true, isLoading: true }`\n * to prevent that the library user has to do an additional check for `isUninitialized`/\n */\n\nconst noPendingQueryStateSelector: QueryStateSelector<any, any> = selected => {\n  if (selected.isUninitialized) {\n    return ({ ...selected,\n      isUninitialized: false,\n      isFetching: true,\n      isLoading: selected.data !== undefined ? false : true,\n      status: QueryStatus.pending\n    } as any);\n  }\n\n  return selected;\n};\n\ntype GenericPrefetchThunk = (endpointName: any, arg: any, options: PrefetchOptions) => ThunkAction<void, any, any, UnknownAction>;\n/**\n *\n * @param opts.api - An API with defined endpoints to create hooks for\n * @param opts.moduleOptions.batch - The version of the `batchedUpdates` function to be used\n * @param opts.moduleOptions.useDispatch - The version of the `useDispatch` hook to be used\n * @param opts.moduleOptions.useSelector - The version of the `useSelector` hook to be used\n * @returns An object containing functions to generate hooks based on an endpoint\n */\n\nexport function buildHooks<Definitions extends EndpointDefinitions>({\n  api,\n  moduleOptions: {\n    batch,\n    hooks: {\n      useDispatch,\n      useSelector,\n      useStore\n    },\n    unstable__sideEffectsInRender,\n    createSelector\n  },\n  serializeQueryArgs,\n  context\n}: {\n  api: Api<any, Definitions, any, any, CoreModule>;\n  moduleOptions: Required<ReactHooksModuleOptions>;\n  serializeQueryArgs: SerializeQueryArgs<any>;\n  context: ApiContext<Definitions>;\n}) {\n  const usePossiblyImmediateEffect: (effect: () => void | undefined, deps?: DependencyList) => void = unstable__sideEffectsInRender ? cb => cb() : useEffect;\n  return {\n    buildQueryHooks,\n    buildMutationHook,\n    usePrefetch\n  };\n\n  function queryStatePreSelector(currentState: QueryResultSelectorResult<any>, lastResult: UseQueryStateDefaultResult<any> | undefined, queryArgs: any): UseQueryStateDefaultResult<any> {\n    // if we had a last result and the current result is uninitialized,\n    // we might have called `api.util.resetApiState`\n    // in this case, reset the hook\n    if (lastResult?.endpointName && currentState.isUninitialized) {\n      const {\n        endpointName\n      } = lastResult;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      if (serializeQueryArgs({\n        queryArgs: lastResult.originalArgs,\n        endpointDefinition,\n        endpointName\n      }) === serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      })) lastResult = undefined;\n    } // data is the last known good request result we have tracked - or if none has been tracked yet the last good result for the current args\n\n\n    let data = currentState.isSuccess ? currentState.data : lastResult?.data;\n    if (data === undefined) data = currentState.data;\n    const hasData = data !== undefined; // isFetching = true any time a request is in flight\n\n    const isFetching = currentState.isLoading; // isLoading = true only when loading while no data is present yet (initial load with no data in the cache)\n\n    const isLoading = !hasData && isFetching; // isSuccess = true when data is present\n\n    const isSuccess = currentState.isSuccess || isFetching && hasData;\n    return ({ ...currentState,\n      data,\n      currentData: currentState.data,\n      isFetching,\n      isLoading,\n      isSuccess\n    } as UseQueryStateDefaultResult<any>);\n  }\n\n  function usePrefetch<EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, defaultOptions?: PrefetchOptions) {\n    const dispatch = useDispatch<ThunkDispatch<any, any, UnknownAction>>();\n    const stableDefaultOptions = useShallowStableValue(defaultOptions);\n    return useCallback((arg: any, options?: PrefetchOptions) => dispatch((api.util.prefetch as GenericPrefetchThunk)(endpointName, arg, { ...stableDefaultOptions,\n      ...options\n    })), [endpointName, dispatch, stableDefaultOptions]);\n  }\n\n  function buildQueryHooks(name: string): QueryHooks<any> {\n    const useQuerySubscription: UseQuerySubscription<any> = (arg: any, {\n      refetchOnReconnect,\n      refetchOnFocus,\n      refetchOnMountOrArgChange,\n      skip = false,\n      pollingInterval = 0,\n      skipPollingIfUnfocused = false\n    } = {}) => {\n      const {\n        initiate\n      } = (api.endpoints[name] as ApiEndpointQuery<QueryDefinition<any, any, any, any, any>, Definitions>);\n      const dispatch = useDispatch<ThunkDispatch<any, any, UnknownAction>>();\n      const subscriptionSelectorsRef = useRef<SubscriptionSelectors>();\n\n      if (!subscriptionSelectorsRef.current) {\n        const returnedValue = dispatch(api.internalActions.internal_getRTKQSubscriptions());\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (typeof returnedValue !== 'object' || typeof returnedValue?.type === 'string') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(37) : `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\n    You must add the middleware for RTK-Query to function correctly!`);\n          }\n        }\n\n        subscriptionSelectorsRef.current = ((returnedValue as unknown) as SubscriptionSelectors);\n      }\n\n      const stableArg = useStableQueryArgs(skip ? skipToken : arg, // Even if the user provided a per-endpoint `serializeQueryArgs` with\n      // a consistent return value, _here_ we want to use the default behavior\n      // so we can tell if _anything_ actually changed. Otherwise, we can end up\n      // with a case where the query args did change but the serialization doesn't,\n      // and then we never try to initiate a refetch.\n      defaultSerializeQueryArgs, context.endpointDefinitions[name], name);\n      const stableSubscriptionOptions = useShallowStableValue({\n        refetchOnReconnect,\n        refetchOnFocus,\n        pollingInterval,\n        skipPollingIfUnfocused\n      });\n      const lastRenderHadSubscription = useRef(false);\n      const promiseRef = useRef<QueryActionCreatorResult<any>>();\n      let {\n        queryCacheKey,\n        requestId\n      } = promiseRef.current || {}; // HACK We've saved the middleware subscription lookup callbacks into a ref,\n      // so we can directly check here if the subscription exists for this query.\n\n      let currentRenderHasSubscription = false;\n\n      if (queryCacheKey && requestId) {\n        currentRenderHasSubscription = subscriptionSelectorsRef.current.isRequestSubscribed(queryCacheKey, requestId);\n      }\n\n      const subscriptionRemoved = !currentRenderHasSubscription && lastRenderHadSubscription.current;\n      usePossiblyImmediateEffect(() => {\n        lastRenderHadSubscription.current = currentRenderHasSubscription;\n      });\n      usePossiblyImmediateEffect((): void | undefined => {\n        if (subscriptionRemoved) {\n          promiseRef.current = undefined;\n        }\n      }, [subscriptionRemoved]);\n      usePossiblyImmediateEffect((): void | undefined => {\n        const lastPromise = promiseRef.current;\n\n        if (typeof process !== 'undefined' && process.env.NODE_ENV === 'removeMeOnCompilation') {\n          // this is only present to enforce the rule of hooks to keep `isSubscribed` in the dependency array\n          console.log(subscriptionRemoved);\n        }\n\n        if (stableArg === skipToken) {\n          lastPromise?.unsubscribe();\n          promiseRef.current = undefined;\n          return;\n        }\n\n        const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions;\n\n        if (!lastPromise || lastPromise.arg !== stableArg) {\n          lastPromise?.unsubscribe();\n          const promise = dispatch(initiate(stableArg, {\n            subscriptionOptions: stableSubscriptionOptions,\n            forceRefetch: refetchOnMountOrArgChange\n          }));\n          promiseRef.current = promise;\n        } else if (stableSubscriptionOptions !== lastSubscriptionOptions) {\n          lastPromise.updateSubscriptionOptions(stableSubscriptionOptions);\n        }\n      }, [dispatch, initiate, refetchOnMountOrArgChange, stableArg, stableSubscriptionOptions, subscriptionRemoved]);\n      useEffect(() => {\n        return () => {\n          promiseRef.current?.unsubscribe();\n          promiseRef.current = undefined;\n        };\n      }, []);\n      return useMemo(() => ({\n        /**\n         * A method to manually refetch data for the query\n         */\n        refetch: () => {\n          if (!promiseRef.current) throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(38) : 'Cannot refetch a query that has not been started yet.');\n          return promiseRef.current?.refetch();\n        }\n      }), []);\n    };\n\n    const useLazyQuerySubscription: UseLazyQuerySubscription<any> = ({\n      refetchOnReconnect,\n      refetchOnFocus,\n      pollingInterval = 0,\n      skipPollingIfUnfocused = false\n    } = {}) => {\n      const {\n        initiate\n      } = (api.endpoints[name] as ApiEndpointQuery<QueryDefinition<any, any, any, any, any>, Definitions>);\n      const dispatch = useDispatch<ThunkDispatch<any, any, UnknownAction>>();\n      const [arg, setArg] = useState<any>(UNINITIALIZED_VALUE);\n      const promiseRef = useRef<QueryActionCreatorResult<any> | undefined>();\n      const stableSubscriptionOptions = useShallowStableValue({\n        refetchOnReconnect,\n        refetchOnFocus,\n        pollingInterval,\n        skipPollingIfUnfocused\n      });\n      usePossiblyImmediateEffect(() => {\n        const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions;\n\n        if (stableSubscriptionOptions !== lastSubscriptionOptions) {\n          promiseRef.current?.updateSubscriptionOptions(stableSubscriptionOptions);\n        }\n      }, [stableSubscriptionOptions]);\n      const subscriptionOptionsRef = useRef(stableSubscriptionOptions);\n      usePossiblyImmediateEffect(() => {\n        subscriptionOptionsRef.current = stableSubscriptionOptions;\n      }, [stableSubscriptionOptions]);\n      const trigger = useCallback(function (arg: any, preferCacheValue = false) {\n        let promise: QueryActionCreatorResult<any>;\n        batch(() => {\n          promiseRef.current?.unsubscribe();\n          promiseRef.current = promise = dispatch(initiate(arg, {\n            subscriptionOptions: subscriptionOptionsRef.current,\n            forceRefetch: !preferCacheValue\n          }));\n          setArg(arg);\n        });\n        return promise!;\n      }, [dispatch, initiate]);\n      /* cleanup on unmount */\n\n      useEffect(() => {\n        return () => {\n          promiseRef?.current?.unsubscribe();\n        };\n      }, []);\n      /* if \"cleanup on unmount\" was triggered from a fast refresh, we want to reinstate the query */\n\n      useEffect(() => {\n        if (arg !== UNINITIALIZED_VALUE && !promiseRef.current) {\n          trigger(arg, true);\n        }\n      }, [arg, trigger]);\n      return useMemo(() => ([trigger, arg] as const), [trigger, arg]);\n    };\n\n    const useQueryState: UseQueryState<any> = (arg: any, {\n      skip = false,\n      selectFromResult\n    } = {}) => {\n      const {\n        select\n      } = (api.endpoints[name] as ApiEndpointQuery<QueryDefinition<any, any, any, any, any>, Definitions>);\n      const stableArg = useStableQueryArgs(skip ? skipToken : arg, serializeQueryArgs, context.endpointDefinitions[name], name);\n      type ApiRootState = Parameters<ReturnType<typeof select>>[0];\n      const lastValue = useRef<any>();\n      const selectDefaultResult: Selector<ApiRootState, any, [any]> = useMemo(() => createSelector([select(stableArg), (_: ApiRootState, lastResult: any) => lastResult, (_: ApiRootState) => stableArg], queryStatePreSelector, {\n        memoizeOptions: {\n          resultEqualityCheck: shallowEqual\n        }\n      }), [select, stableArg]);\n      const querySelector: Selector<ApiRootState, any, [any]> = useMemo(() => selectFromResult ? createSelector([selectDefaultResult], selectFromResult, {\n        devModeChecks: {\n          identityFunctionCheck: 'never'\n        }\n      }) : selectDefaultResult, [selectDefaultResult, selectFromResult]);\n      const currentState = useSelector((state: RootState<Definitions, any, any>) => querySelector(state, lastValue.current), shallowEqual);\n      const store = useStore<RootState<Definitions, any, any>>();\n      const newLastValue = selectDefaultResult(store.getState(), lastValue.current);\n      useIsomorphicLayoutEffect(() => {\n        lastValue.current = newLastValue;\n      }, [newLastValue]);\n      return currentState;\n    };\n\n    return {\n      useQueryState,\n      useQuerySubscription,\n      useLazyQuerySubscription,\n\n      useLazyQuery(options) {\n        const [trigger, arg] = useLazyQuerySubscription(options);\n        const queryStateResults = useQueryState(arg, { ...options,\n          skip: arg === UNINITIALIZED_VALUE\n        });\n        const info = useMemo(() => ({\n          lastArg: arg\n        }), [arg]);\n        return useMemo(() => [trigger, queryStateResults, info], [trigger, queryStateResults, info]);\n      },\n\n      useQuery(arg, options) {\n        const querySubscriptionResults = useQuerySubscription(arg, options);\n        const queryStateResults = useQueryState(arg, {\n          selectFromResult: arg === skipToken || options?.skip ? undefined : noPendingQueryStateSelector,\n          ...options\n        });\n        const {\n          data,\n          status,\n          isLoading,\n          isSuccess,\n          isError,\n          error\n        } = queryStateResults;\n        useDebugValue({\n          data,\n          status,\n          isLoading,\n          isSuccess,\n          isError,\n          error\n        });\n        return useMemo(() => ({ ...queryStateResults,\n          ...querySubscriptionResults\n        }), [queryStateResults, querySubscriptionResults]);\n      }\n\n    };\n  }\n\n  function buildMutationHook(name: string): UseMutation<any> {\n    return ({\n      selectFromResult,\n      fixedCacheKey\n    } = {}) => {\n      const {\n        select,\n        initiate\n      } = (api.endpoints[name] as ApiEndpointMutation<MutationDefinition<any, any, any, any, any>, Definitions>);\n      const dispatch = useDispatch<ThunkDispatch<any, any, UnknownAction>>();\n      const [promise, setPromise] = useState<MutationActionCreatorResult<any>>();\n      useEffect(() => () => {\n        if (!promise?.arg.fixedCacheKey) {\n          promise?.reset();\n        }\n      }, [promise]);\n      const triggerMutation = useCallback(function (arg: Parameters<typeof initiate>['0']) {\n        const promise = dispatch(initiate(arg, {\n          fixedCacheKey\n        }));\n        setPromise(promise);\n        return promise;\n      }, [dispatch, initiate, fixedCacheKey]);\n      const {\n        requestId\n      } = promise || {};\n      const selectDefaultResult = useMemo(() => select({\n        fixedCacheKey,\n        requestId: promise?.requestId\n      }), [fixedCacheKey, promise, select]);\n      const mutationSelector = useMemo((): Selector<RootState<Definitions, any, any>, any> => selectFromResult ? createSelector([selectDefaultResult], selectFromResult) : selectDefaultResult, [selectFromResult, selectDefaultResult]);\n      const currentState = useSelector(mutationSelector, shallowEqual);\n      const originalArgs = fixedCacheKey == null ? promise?.arg.originalArgs : undefined;\n      const reset = useCallback(() => {\n        batch(() => {\n          if (promise) {\n            setPromise(undefined);\n          }\n\n          if (fixedCacheKey) {\n            dispatch(api.internalActions.removeMutationResult({\n              requestId,\n              fixedCacheKey\n            }));\n          }\n        });\n      }, [dispatch, fixedCacheKey, promise, requestId]);\n      const {\n        endpointName,\n        data,\n        status,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n      } = currentState;\n      useDebugValue({\n        endpointName,\n        data,\n        status,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n      });\n      const finalState = useMemo(() => ({ ...currentState,\n        originalArgs,\n        reset\n      }), [currentState, originalArgs, reset]);\n      return useMemo(() => ([triggerMutation, finalState] as const), [triggerMutation, finalState]);\n    };\n  }\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Api, BaseQueryFn, EndpointDefinitions, Module, MutationDefinition, QueryArgFrom, QueryDefinition } from '@reduxjs/toolkit/query';\nimport { isMutationDefinition, isQueryDefinition } from '../endpointDefinitions';\nimport { safeAssign } from '../tsHelpers';\nimport { capitalize } from '../utils';\nimport type { MutationHooks, QueryHooks } from './buildHooks';\nimport { buildHooks } from './buildHooks';\nimport type { HooksWithUniqueNames } from './namedHooks';\nimport { batch as rrBatch, useDispatch as rrUseDispatch, useSelector as rrUseSelector, useStore as rrUseStore } from 'react-redux';\nimport { createSelector as _createSelector } from 'reselect';\nimport type { QueryKeys } from '../core/apiState';\nimport type { PrefetchOptions } from '../core/module';\nimport { countObjectKeys } from '../utils/countObjectKeys';\nexport const reactHooksModuleName = /* @__PURE__ */Symbol();\nexport type ReactHooksModule = typeof reactHooksModuleName;\ndeclare module '@reduxjs/toolkit/query' {\n  export interface ApiModules< // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  BaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ReducerPath extends string, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  TagTypes extends string> {\n    [reactHooksModuleName]: {\n      /**\n       *  Endpoints based on the input endpoints provided to `createApi`, containing `select`, `hooks` and `action matchers`.\n       */\n      endpoints: { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<any, any, any, any, any> ? QueryHooks<Definitions[K]> : Definitions[K] extends MutationDefinition<any, any, any, any, any> ? MutationHooks<Definitions[K]> : never };\n      /**\n       * A hook that accepts a string endpoint name, and provides a callback that when called, pre-fetches the data for that endpoint.\n       */\n\n      usePrefetch<EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, options?: PrefetchOptions): (arg: QueryArgFrom<Definitions[EndpointName]>, options?: PrefetchOptions) => void;\n    } & HooksWithUniqueNames<Definitions>;\n  }\n}\ntype RR = typeof import('react-redux');\nexport interface ReactHooksModuleOptions {\n  /**\n   * The hooks from React Redux to be used\n   */\n  hooks?: {\n    /**\n     * The version of the `useDispatch` hook to be used\n     */\n    useDispatch: RR['useDispatch'];\n    /**\n     * The version of the `useSelector` hook to be used\n     */\n\n    useSelector: RR['useSelector'];\n    /**\n     * The version of the `useStore` hook to be used\n     */\n\n    useStore: RR['useStore'];\n  };\n  /**\n   * The version of the `batchedUpdates` function to be used\n   */\n\n  batch?: RR['batch'];\n  /**\n   * Enables performing asynchronous tasks immediately within a render.\n   *\n   * @example\n   *\n   * ```ts\n   * import {\n   *   buildCreateApi,\n   *   coreModule,\n   *   reactHooksModule\n   * } from '@reduxjs/toolkit/query/react'\n   *\n   * const createApi = buildCreateApi(\n   *   coreModule(),\n   *   reactHooksModule({ unstable__sideEffectsInRender: true })\n   * )\n   * ```\n   */\n\n  unstable__sideEffectsInRender?: boolean;\n  /**\n   * A selector creator (usually from `reselect`, or matching the same signature)\n   */\n\n  createSelector?: typeof _createSelector;\n}\n/**\n * Creates a module that generates react hooks from endpoints, for use with `buildCreateApi`.\n *\n *  @example\n * ```ts\n * const MyContext = React.createContext<ReactReduxContextValue>(null as any);\n * const customCreateApi = buildCreateApi(\n *   coreModule(),\n *   reactHooksModule({\n *     hooks: {\n *       useDispatch: createDispatchHook(MyContext),\n *       useSelector: createSelectorHook(MyContext),\n *       useStore: createStoreHook(MyContext)\n *     }\n *   })\n * );\n * ```\n *\n * @returns A module for use with `buildCreateApi`\n */\n\nexport const reactHooksModule = ({\n  batch = rrBatch,\n  hooks = {\n    useDispatch: rrUseDispatch,\n    useSelector: rrUseSelector,\n    useStore: rrUseStore\n  },\n  createSelector = _createSelector,\n  unstable__sideEffectsInRender = false,\n  ...rest\n}: ReactHooksModuleOptions = {}): Module<ReactHooksModule> => {\n  if (process.env.NODE_ENV !== 'production') {\n    const hookNames = (['useDispatch', 'useSelector', 'useStore'] as const);\n    let warned = false;\n\n    for (const hookName of hookNames) {\n      // warn for old hook options\n      if (countObjectKeys(rest) > 0) {\n        if ((rest as Partial<typeof hooks>)[hookName]) {\n          if (!warned) {\n            console.warn('As of RTK 2.0, the hooks now need to be specified as one object, provided under a `hooks` key:' + '\\n`reactHooksModule({ hooks: { useDispatch, useSelector, useStore } })`');\n            warned = true;\n          }\n        } // migrate\n        // @ts-ignore\n\n\n        hooks[hookName] = rest[hookName];\n      } // then make sure we have them all\n\n\n      if (typeof hooks[hookName] !== 'function') {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(36) : `When using custom hooks for context, all ${hookNames.length} hooks need to be provided: ${hookNames.join(', ')}.\\nHook ${hookName} was either not provided or not a function.`);\n      }\n    }\n  }\n\n  return {\n    name: reactHooksModuleName,\n\n    init(api, {\n      serializeQueryArgs\n    }, context) {\n      const anyApi = ((api as any) as Api<any, Record<string, any>, any, any, ReactHooksModule>);\n      const {\n        buildQueryHooks,\n        buildMutationHook,\n        usePrefetch\n      } = buildHooks({\n        api,\n        moduleOptions: {\n          batch,\n          hooks,\n          unstable__sideEffectsInRender,\n          createSelector\n        },\n        serializeQueryArgs,\n        context\n      });\n      safeAssign(anyApi, {\n        usePrefetch\n      });\n      safeAssign(context, {\n        batch\n      });\n      return {\n        injectEndpoint(endpointName, definition) {\n          if (isQueryDefinition(definition)) {\n            const {\n              useQuery,\n              useLazyQuery,\n              useLazyQuerySubscription,\n              useQueryState,\n              useQuerySubscription\n            } = buildQueryHooks(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useQuery,\n              useLazyQuery,\n              useLazyQuerySubscription,\n              useQueryState,\n              useQuerySubscription\n            });\n            (api as any)[`use${capitalize(endpointName)}Query`] = useQuery;\n            (api as any)[`useLazy${capitalize(endpointName)}Query`] = useLazyQuery;\n          } else if (isMutationDefinition(definition)) {\n            const useMutation = buildMutationHook(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useMutation\n            });\n            (api as any)[`use${capitalize(endpointName)}Mutation`] = useMutation;\n          }\n        }\n\n      };\n    }\n\n  };\n};","// This must remain here so that the `mangleErrors.cjs` build script\n// does not have to import this into each source file it rewrites.\nimport { formatProdErrorMessage } from '@reduxjs/toolkit';\nimport { buildCreateApi, coreModule } from '@reduxjs/toolkit/query';\nimport { reactHooksModule, reactHooksModuleName } from './module';\nexport * from '@reduxjs/toolkit/query';\nexport { ApiProvider } from './ApiProvider';\nconst createApi = /* @__PURE__ */buildCreateApi(coreModule(), reactHooksModule());\nexport type { TypedUseMutationResult, TypedUseQueryHookResult, TypedUseQueryStateResult, TypedUseQuerySubscriptionResult, TypedLazyQueryTrigger, TypedUseLazyQuery, TypedUseMutation, TypedUseMutationTrigger, TypedUseQueryState, TypedUseQuery, TypedUseQuerySubscription, TypedUseLazyQuerySubscription } from './buildHooks';\nexport { createApi, reactHooksModule, reactHooksModuleName };","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { IWeather } from \"../interfaces/weather_interface\";\n\nconst BASE_URL =\n\t\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\";\nexport const weatherApi = createApi({\n\treducerPath: \"weatherApi\",\n\tbaseQuery: fetchBaseQuery({\n\t\tbaseUrl: BASE_URL,\n\t}),\n\tendpoints: (builder) => ({\n\t\tgetForecastByCity: builder.query<IWeather, string>({\n\t\t\tquery: (city) => `${city}/next7days?unitGroup=uk&key=` + process.env.REACT_APP_API_KEY,\n\t\t}),\n\t}),\n});\nexport const { useGetForecastByCityQuery } = weatherApi;\n","export const addressHandler = (address: string) => {\n\tconst addressArray = address.split(\",\");\n\tconst cityName = addressArray[0];\n\tconst country = addressArray.length > 1 ? addressArray[addressArray.length - 1] : undefined;\n\treturn { cityName, country };\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport const Clock = () => {\n\tconst [time, setTime] = useState({\n\t\tminutes: new Date().getMinutes(),\n\t\thours: new Date().getHours(),\n\t});\n\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tconst date = new Date();\n\t\t\tsetTime({\n\t\t\t\tminutes: date.getMinutes(),\n\t\t\t\thours: date.getHours(),\n\t\t\t});\n\t\t}, 60000);\n\n\t\treturn () => clearInterval(intervalId);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"city-date_date_clock\">\n\t\t\t{time.hours}\n\t\t\t<span>:</span>\n\t\t\t{time.minutes < 10 ? \"0\" + time.minutes : time.minutes}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { getCurrentDate } from \"../../../../utils/getCurrentDate\";\nimport { addressHandler } from \"../../../../utils/addressHandler\";\nimport \"./cityDate.scss\";\nimport { Clock } from \"./Clock\";\n\nexport const CityDate = ({ adress }: { adress: string }) => {\n\tconst currentDate = getCurrentDate();\n\tconst { cityName, country } = addressHandler(adress);\n\treturn (\n\t\t<div className=\"city-date forecast-element\">\n\t\t\t<div className=\"city-date_location\">\n\t\t\t\t<span className=\"city-date_location_city\">{cityName}</span>\n\n\t\t\t\t{country && <span className=\"city-date_location_country\">{country}</span>}\n\t\t\t</div>\n\t\t\t<span className=\"line\"></span>\n\t\t\t<div className=\"city-date_date\">\n\t\t\t\t<span className=\"city-date_date_current\">{currentDate}</span>\n\t\t\t\t<Clock />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","export const getCurrentDate = () => {\n\tconst date = new Date();\n\tconst day = date.getDate();\n\tconst month = date.getMonth() + 1;\n\tconst year = date.getFullYear();\n\tconst separator = \"/\";\n\tconst todayDate = `${day}${separator}${month < 10 ? `0${month}` : month}${separator}${year}`;\n\treturn todayDate;\n};\n","import React from \"react\";\n\nexport const ClearDay = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M440-760v-160h80v160h-80Zm266 110-55-55 112-115 56 57-113 113Zm54 210v-80h160v80H760ZM440-40v-160h80v160h-80ZM254-652 140-763l57-56 113 113-56 54Zm508 512L651-255l54-54 114 110-57 59ZM40-440v-80h160v80H40Zm157 300-56-57 112-112 29 27 29 28-114 114Zm283-100q-100 0-170-70t-70-170q0-100 70-170t170-70q100 0 170 70t70 170q0 100-70 170t-170 70Zm0-80q66 0 113-47t47-113q0-66-47-113t-113-47q-66 0-113 47t-47 113q0 66 47 113t113 47Zm0-160Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const ClearNight = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M524-40q-84 0-157.5-32t-128-86.5Q184-213 152-286.5T120-444q0-146 93-257.5T450-840q-18 99 11 193.5T561-481q71 71 165.5 100T920-370q-26 144-138 237T524-40Zm0-80q88 0 163-44t118-121q-86-8-163-43.5T504-425q-61-61-97-138t-43-163q-77 43-120.5 118.5T200-444q0 135 94.5 229.5T524-120Zm-20-305Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const Cloudy = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M260-160q-91 0-155.5-63T40-377q0-78 47-139t123-78q25-92 100-149t170-57q117 0 198.5 81.5T760-520q69 8 114.5 59.5T920-340q0 75-52.5 127.5T740-160H260Zm0-80h480q42 0 71-29t29-71q0-42-29-71t-71-29h-60v-80q0-83-58.5-141.5T480-720q-83 0-141.5 58.5T280-520h-20q-58 0-99 41t-41 99q0 58 41 99t99 41Zm220-240Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const Fog = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M720-200q-17 0-28.5-11.5T680-240q0-17 11.5-28.5T720-280q17 0 28.5 11.5T760-240q0 17-11.5 28.5T720-200ZM280-80q-17 0-28.5-11.5T240-120q0-17 11.5-28.5T280-160q17 0 28.5 11.5T320-120q0 17-11.5 28.5T280-80Zm-40-120q-17 0-28.5-11.5T200-240q0-17 11.5-28.5T240-280h360q17 0 28.5 11.5T640-240q0 17-11.5 28.5T600-200H240ZM400-80q-17 0-28.5-11.5T360-120q0-17 11.5-28.5T400-160h280q17 0 28.5 11.5T720-120q0 17-11.5 28.5T680-80H400ZM300-320q-91 0-155.5-64.5T80-540q0-83 55-145t136-73q32-57 87.5-89.5T480-880q90 0 156.5 57.5T717-679q69 6 116 57t47 122q0 75-52.5 127.5T700-320H300Zm0-80h400q42 0 71-29t29-71q0-42-29-71t-71-29h-60v-40q0-66-47-113t-113-47q-48 0-87.5 26T333-704l-10 24h-25q-57 2-97.5 42.5T160-540q0 58 41 99t99 41Zm180-200Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const CloudyDay = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M440-760v-160h80v160h-80Zm266 110-56-56 113-114 56 57-113 113Zm54 210v-80h160v80H760Zm3 299L650-254l56-56 114 112-57 57ZM254-650 141-763l57-57 112 114-56 56Zm-14 450h180q25 0 42.5-17.5T480-260q0-25-17-42.5T421-320h-51l-20-48q-14-33-44-52.5T240-440q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T40-320q0-83 58.5-141.5T240-520q60 0 109.5 32.5T423-400q58 0 97.5 43T560-254q-2 57-42.5 95.5T420-120H240Zm320-134q-5-20-10-39t-10-39q45-19 72.5-59t27.5-89q0-66-47-113t-113-47q-60 0-105 39t-53 99q-20-5-41-9t-41-9q14-88 82.5-144T480-720q100 0 170 70t70 170q0 77-44 138.5T560-254Zm-79-226Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const CloudyNight = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M504-425Zm20 385H420l20-12.5q20-12.5 43.5-28t43.5-28l20-12.5q81-6 149.5-49T805-285q-86-8-163-43.5T504-425q-61-61-97-138t-43-163q-77 43-120.5 118.5T200-444v12l-12 5.5q-12 5.5-26.5 11.5T135-403.5l-12 5.5q-2-11-2.5-23t-.5-23q0-146 93-257.5T450-840q-18 99 11 193.5T561-481q71 71 165.5 100T920-370q-26 144-138 237T524-40Zm-284-80h180q25 0 42.5-17.5T480-180q0-25-17-42.5T422-240h-52l-20-48q-14-33-44-52.5T240-360q-50 0-85 34.5T120-240q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T40-240q0-83 58.5-141.5T240-440q60 0 109.5 32.5T423-320q57 2 97 42.5t40 97.5q0 58-41 99t-99 41H240Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const Rain = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M558-84q-15 8-30.5 2.5T504-102l-60-120q-8-15-2.5-30.5T462-276q15-8 30.5-2.5T516-258l60 120q8 15 2.5 30.5T558-84Zm240 0q-15 8-30.5 2.5T744-102l-60-120q-8-15-2.5-30.5T702-276q15-8 30.5-2.5T756-258l60 120q8 15 2.5 30.5T798-84Zm-480 0q-15 8-30.5 2.5T264-102l-60-120q-8-15-2.5-30.5T222-276q15-8 30.5-2.5T276-258l60 120q8 15 2.5 30.5T318-84Zm-18-236q-91 0-155.5-64.5T80-540q0-83 55-145t136-73q32-57 87.5-89.5T480-880q90 0 156.5 57.5T717-679q69 6 116 57t47 122q0 75-52.5 127.5T700-320H300Zm0-80h400q42 0 71-29t29-71q0-42-29-71t-71-29h-60v-40q0-66-47-113t-113-47q-48 0-87.5 26T333-704l-10 24h-25q-57 2-97.5 42.5T160-540q0 58 41 99t99 41Zm180-200Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const Snow = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M260-200q-21 0-35.5-14.5T210-250q0-21 14.5-35.5T260-300q21 0 35.5 14.5T310-250q0 21-14.5 35.5T260-200ZM380-80q-21 0-35.5-14.5T330-130q0-21 14.5-35.5T380-180q21 0 35.5 14.5T430-130q0 21-14.5 35.5T380-80Zm120-120q-21 0-35.5-14.5T450-250q0-21 14.5-35.5T500-300q21 0 35.5 14.5T550-250q0 21-14.5 35.5T500-200Zm240 0q-21 0-35.5-14.5T690-250q0-21 14.5-35.5T740-300q21 0 35.5 14.5T790-250q0 21-14.5 35.5T740-200ZM620-80q-21 0-35.5-14.5T570-130q0-21 14.5-35.5T620-180q21 0 35.5 14.5T670-130q0 21-14.5 35.5T620-80ZM300-360q-91 0-155.5-64.5T80-580q0-83 55-145t136-73q32-57 87.5-89.5T480-920q90 0 156.5 57.5T717-719q69 6 116 57t47 122q0 75-52.5 127.5T700-360H300Zm0-80h400q42 0 71-29t29-71q0-42-29-71t-71-29h-60v-40q0-66-47-113t-113-47q-48 0-87.5 26T333-744l-10 24h-25q-57 2-97.5 42.5T160-580q0 58 41 99t99 41Zm180-100Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const Windy = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"24\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M460-160q-50 0-85-35t-35-85h80q0 17 11.5 28.5T460-240q17 0 28.5-11.5T500-280q0-17-11.5-28.5T460-320H80v-80h380q50 0 85 35t35 85q0 50-35 85t-85 35ZM80-560v-80h540q26 0 43-17t17-43q0-26-17-43t-43-17q-26 0-43 17t-17 43h-80q0-59 40.5-99.5T620-840q59 0 99.5 40.5T760-700q0 59-40.5 99.5T620-560H80Zm660 320v-80q26 0 43-17t17-43q0-26-17-43t-43-17H80v-80h660q59 0 99.5 40.5T880-380q0 59-40.5 99.5T740-240Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\nimport { ClearDay } from \"../../../assets/icons/forecast_icons/ClearDay\";\nimport { IIconType } from \"../../../interfaces/weather_interface\";\nimport { ClearNight } from \"../../../assets/icons/forecast_icons/ClearNight\";\nimport { Cloudy } from \"../../../assets/icons/forecast_icons/Cloudy\";\nimport { Fog } from \"../../../assets/icons/forecast_icons/Fog\";\nimport { CloudyDay } from \"../../../assets/icons/forecast_icons/CloudyDay\";\nimport { CloudyNight } from \"../../../assets/icons/forecast_icons/CloudyNight\";\nimport { Rain } from \"../../../assets/icons/forecast_icons/Rain\";\nimport { Snow } from \"../../../assets/icons/forecast_icons/Snow\";\nimport { Windy } from \"../../../assets/icons/forecast_icons/Windy\";\n\nexport const WeatherIcon = ({ condition }: { condition: IIconType }): JSX.Element => {\n\tswitch (condition) {\n\t\tcase \"clear-day\":\n\t\t\treturn <ClearDay />;\n\t\tcase \"clear-night\":\n\t\t\treturn <ClearNight />;\n\t\tcase \"cloudy\":\n\t\t\treturn <Cloudy />;\n\t\tcase \"fog\":\n\t\t\treturn <Fog />;\n\t\tcase \"partly-cloudy-day\":\n\t\t\treturn <CloudyDay />;\n\t\tcase \"partly-cloudy-night\":\n\t\t\treturn <CloudyNight />;\n\t\tcase \"rain\":\n\t\t\treturn <Rain />;\n\t\tcase \"snow\":\n\t\t\treturn <Snow />;\n\t\tcase \"wind\":\n\t\t\treturn <Windy />;\n\t}\n};\n","import { IIconType } from \"../interfaces/weather_interface\";\n\nexport const conditionHandler = (condition: IIconType) => {\n\treturn condition\n\t\t.split(\"-\")\n\t\t.map((el) => el.charAt(0).toUpperCase() + el.slice(1))\n\t\t.join(\" \");\n};\n","import React, { useEffect, useState } from \"react\";\nimport { IIconType } from \"../../../../interfaces/weather_interface\";\nimport { WeatherIcon } from \"../WeatherIcon\";\nimport \"./currentConditionIcon.scss\";\nimport { conditionHandler } from \"../../../../utils/conditionHandler\";\n\nexport const CurrentConditionIcon = ({ condition }: { condition: IIconType }) => {\n\tconst [currentCondition, setCurrentCondition] = useState<string>(\"\");\n\tuseEffect(() => {\n\t\tsetCurrentCondition(conditionHandler(condition));\n\t}, [condition]);\n\treturn (\n\t\t<div className=\"condition forecast-element\">\n\t\t\t<WeatherIcon condition={condition} />\n\t\t\t<span className=\"condition_text\">{currentCondition}</span>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nexport const Compass = () => {\n\treturn (\n\t\t<svg\n\t\t\tversion=\"1.2\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tviewBox=\"0 0 1122 1122\"\n\t\t\twidth=\"100\"\n\t\t\theight=\"100\"\n\t\t>\n\t\t\t<g id=\"_Artboards_\"></g>\n\t\t\t<g id=\"BG\">\n\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s0\" d=\"m1122 1122h-1122v-1122h1122z\" />\n\t\t\t</g>\n\t\t\t<g id=\"Object\">\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m571 678.5c-68.1 0-123.6-55.3-123.6-123.2 0-68 55.5-123.2 123.6-123.2 68.1 0 123.5 55.2 123.5 123.2 0 67.9-55.4 123.2-123.5 123.2zm0-244.7c-67.1 0-121.8 54.5-121.8 121.5 0 66.9 54.7 121.4 121.8 121.4 67.1 0 121.7-54.5 121.7-121.4 0-67-54.6-121.5-121.7-121.5z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m571 699.5c-79.7 0-144.6-64.7-144.6-144.2 0-79.5 64.9-144.2 144.6-144.2 79.7 0 144.5 64.7 144.5 144.2 0 79.5-64.8 144.2-144.5 144.2zm0-280c-75.1 0-136.1 60.9-136.1 135.8 0 74.8 61 135.8 136.1 135.8 75 0 136.1-61 136.1-135.8 0-74.9-61.1-135.8-136.1-135.8z\"\n\t\t\t\t/>\n\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\t\td=\"m571 893.8c-89.5 0-173.5-34.7-236.8-97.8-63.2-63.1-98-147-98-236.2 0-89.2 34.8-173.1 98-236.2 63.3-63.1 147.3-97.8 236.8-97.8 89.4 0 173.5 34.7 236.7 97.8 63.2 63.1 98.1 147 98.1 236.2 0 89.2-34.9 173.1-98.1 236.2-63.2 63.1-147.3 97.8-236.7 97.8zm0-662c-87.9 0-170.4 34.1-232.5 96.1-62.1 61.9-96.3 144.3-96.3 231.9 0 87.6 34.2 170 96.3 231.9 62.1 62 144.6 96.1 232.5 96.1 87.8 0 170.4-34.1 232.5-96.1 62.1-61.9 96.3-144.3 96.3-231.9 0-87.6-34.2-170-96.3-231.9-62.1-62-144.7-96.1-232.5-96.1z\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m573.5 228.8h-5.1v-39.6h5.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m573.5 930.4h-5.1v-39.6h5.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m511.4 234.2l-4.2-23.7 3.9-0.7 4.2 23.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m630.8 909.8l-4.2-23.7 4-0.7 4.1 23.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m455.6 249.4l-8.2-22.5 3.7-1.4 8.3 22.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m690.8 894.1l-8.2-22.6 3.7-1.3 8.3 22.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m403.3 274.1l-12-20.8 3.5-2 12 20.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m747.2 868.3l-12.1-20.8 3.5-2 12 20.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m356.2 307.5l-15.5-18.4 3.1-2.6 15.4 18.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m798.2 833.1l-15.5-18.5 3.1-2.5 15.4 18.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m315.5 348.6l-18.4-15.5 2.5-3 18.5 15.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m842.3 789.5l-18.5-15.4 2.6-3.1 18.5 15.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m282.6 396l-20.8-12 2-3.4 20.8 12z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m878.2 739l-20.9-12 2-3.4 20.9 12z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m258.5 448.5l-22.6-8.3 1.3-3.7 22.7 8.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m904.7 683.1l-22.6-8.2 1.3-3.8 22.7 8.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m243.9 504.3l-23.7-4.2 0.7-3.9 23.7 4.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m921.1 623.4l-23.7-4.2 0.7-3.9 23.7 4.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m199.5 562.4v-5.2h39.7v5.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m942.4 562.4h-39.6v-5.2h39.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m220.9 623.4l-0.7-3.9 23.7-4.2 0.7 3.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m898.1 504.3l-0.7-4 23.7-4.1 0.7 3.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m237.2 683.1l-1.3-3.8 22.6-8.2 1.4 3.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m883.4 448.5l-1.3-3.8 22.6-8.2 1.4 3.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m263.8 739l-2-3.4 20.8-12 2 3.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m859.3 396l-2-3.4 20.9-12.1 2 3.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m299.6 789.5l-2.5-3 18.4-15.5 2.6 3.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m826.4 348.6l-2.6-3.1 18.5-15.4 2.6 3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m343.8 833l-3.1-2.5 15.5-18.4 3 2.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m785.8 307.5l-3.1-2.6 15.5-18.4 3.1 2.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m394.8 868.3l-3.5-2 12-20.8 3.5 1.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m738.6 274.1l-3.5-2 12.1-20.8 3.4 2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m451.1 894.1l-3.7-1.4 8.2-22.5 3.8 1.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m686.3 249.4l-3.7-1.3 8.2-22.6 3.8 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m511.1 909.8l-3.9-0.7 4.2-23.7 3.9 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m630.6 234.2l-4-0.7 4.2-23.7 3.9 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m558.5 226.9l-0.5-11.8 1.8-0.1 0.4 11.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m582.2 904.6l-0.4-11.9h1.7l0.4 11.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m546.8 227.6l-0.8-11.9 1.7-0.1 0.8 11.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m594.2 904l-0.8-11.9 1.7-0.1 0.8 11.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m535.2 228.6l-1.2-11.8 1.7-0.2 1.2 11.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m606.3 903l-1.3-11.8 1.7-0.2 1.3 11.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m523.7 230.1l-1.7-11.8 1.7-0.2 1.6 11.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m618.2 901.5l-1.6-11.7 1.7-0.3 1.6 11.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m500.7 234.2l-2.5-11.7 1.7-0.3 2.5 11.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m642 897.4l-2.5-11.6 1.7-0.4 2.5 11.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m489.4 236.8l-2.9-11.5 1.6-0.4 2.9 11.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m653.8 894.7l-2.9-11.5 1.7-0.4 2.8 11.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m478.1 239.8l-3.3-11.4 1.7-0.4 3.3 11.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m665.5 891.6l-3.3-11.4 1.6-0.4 3.3 11.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m467 243.3l-3.7-11.3 1.6-0.5 3.7 11.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m677 888.1l-3.7-11.2 1.7-0.6 3.6 11.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m445.1 251.3l-4.5-11 1.6-0.7 4.5 11z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m699.7 880l-4.5-11 1.6-0.7 4.5 11z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m434.4 255.8l-4.9-10.8 1.6-0.7 4.8 10.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m710.8 875.3l-4.8-10.9 1.6-0.7 4.8 10.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m423.8 260.8l-5.2-10.7 1.6-0.7 5.2 10.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m721.8 870.2l-5.2-10.6 1.5-0.8 5.2 10.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m413.5 266.1l-5.6-10.5 1.5-0.8 5.6 10.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m732.5 864.8l-5.5-10.5 1.5-0.8 5.6 10.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m393.3 277.8l-6.3-10.1 1.5-0.9 6.3 10.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m753.5 852.8l-6.3-10.1 1.4-0.9 6.3 10.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m383.6 284.1l-6.7-9.8 1.4-1 6.7 9.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m763.6 846.3l-6.6-9.9 1.4-0.9 6.6 9.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m374 290.8l-7-9.6 1.4-1 7 9.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m773.5 839.4l-7-9.6 1.4-1 7 9.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m364.7 297.8l-7.3-9.3 1.4-1.1 7.3 9.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m783.2 832.2l-7.3-9.4 1.3-1 7.3 9.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m346.9 312.8l-7.9-8.8 1.2-1.1 8 8.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m801.7 816.7l-8-8.8 1.3-1.1 8 8.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m338.4 320.8l-8.2-8.6 1.2-1.1 8.3 8.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m810.6 808.5l-8.3-8.5 1.2-1.2 8.3 8.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m330.2 329l-8.6-8.2 1.2-1.3 8.6 8.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m819.1 800l-8.6-8.2 1.2-1.2 8.6 8.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m322.3 337.5l-8.9-7.9 1.2-1.3 8.8 8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m827.4 791.3l-8.9-8 1.2-1.3 8.8 8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m307.3 355.4l-9.3-7.3 1-1.4 9.4 7.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m842.9 772.9l-9.4-7.4 1.1-1.3 9.4 7.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m300.4 364.7l-9.7-7 1-1.4 9.7 7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m850.2 763.3l-9.6-7 1-1.4 9.6 7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m293.7 374.2l-9.9-6.6 1-1.4 9.8 6.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m857.2 753.4l-9.9-6.6 0.9-1.4 9.9 6.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m287.4 384l-10.1-6.3 0.9-1.4 10.1 6.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m863.8 743.3l-10.1-6.3 0.9-1.4 10.1 6.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m275.8 404.2l-10.5-5.6 0.8-1.5 10.5 5.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m875.9 722.5l-10.5-5.6 0.8-1.5 10.5 5.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m270.5 414.5l-10.7-5.2 0.8-1.5 10.7 5.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m881.4 711.8l-10.7-5.2 0.7-1.6 10.7 5.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m265.6 425.1l-10.9-4.8 0.7-1.6 10.9 4.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m886.5 700.9l-10.9-4.8 0.7-1.6 10.9 4.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m261.1 435.8l-11-4.4 0.6-1.6 11 4.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m891.3 689.8l-11.1-4.4 0.7-1.6 11 4.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m253.2 457.7l-11.3-3.7 0.5-1.6 11.3 3.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m899.6 667.2l-11.4-3.7 0.6-1.6 11.3 3.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m249.8 468.8l-11.4-3.3 0.4-1.6 11.5 3.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m903.1 655.7l-11.4-3.3 0.5-1.6 11.4 3.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m246.8 480l-11.5-2.8 0.4-1.7 11.5 2.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m906.3 644.1l-11.6-2.9 0.4-1.6 11.6 2.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m244.2 491.4l-11.6-2.5 0.3-1.7 11.7 2.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m909 632.4l-11.6-2.5 0.3-1.7 11.7 2.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m240.2 514.3l-11.8-1.7 0.3-1.7 11.8 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m913.3 608.7l-11.8-1.7 0.2-1.7 11.8 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m238.8 525.8l-11.8-1.2 0.2-1.7 11.8 1.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m914.8 596.7l-11.9-1.2 0.2-1.7 11.8 1.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m237.8 537.4l-11.8-0.8 0.1-1.7 11.9 0.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m915.8 584.7l-11.8-0.8 0.1-1.7 11.9 0.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m237.3 549l-11.9-0.4v-1.7l11.9 0.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m916.5 572.7l-11.9-0.4 0.1-1.7 11.9 0.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m225.4 572.7v-1.7l11.9-0.4v1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m904.7 549l-0.1-1.7 11.9-0.4 0.1 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m226.1 584.7l-0.1-1.7 11.8-0.8 0.2 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m904.1 537.4l-0.1-1.7 11.8-0.8 0.2 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m227.2 596.7l-0.2-1.7 11.8-1.2 0.2 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m903.1 525.8l-0.2-1.7 11.9-1.2 0.1 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m228.7 608.7l-0.3-1.7 11.8-1.7 0.3 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m901.7 514.3l-0.2-1.7 11.8-1.7 0.2 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m232.9 632.4l-0.3-1.7 11.6-2.5 0.4 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m897.7 491.4l-0.3-1.7 11.6-2.5 0.4 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m235.7 644.1l-0.4-1.7 11.5-2.9 0.4 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m895.1 480l-0.4-1.6 11.6-2.9 0.4 1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m238.8 655.7l-0.4-1.6 11.4-3.3 0.5 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m892.2 468.8l-0.5-1.6 11.4-3.3 0.5 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m242.4 667.2l-0.5-1.6 11.3-3.7 0.5 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m888.8 457.7l-0.6-1.7 11.4-3.6 0.5 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m250.7 689.8l-0.6-1.6 11-4.4 0.6 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m880.9 435.8l-0.7-1.6 11.1-4.4 0.6 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m255.4 700.9l-0.7-1.6 10.9-4.8 0.7 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m876.3 425.1l-0.7-1.6 10.9-4.8 0.7 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m260.6 711.8l-0.8-1.6 10.7-5.2 0.8 1.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m871.4 414.5l-0.7-1.5 10.7-5.2 0.7 1.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m266.1 722.5l-0.8-1.5 10.5-5.6 0.8 1.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m866.2 404.2l-0.8-1.5 10.5-5.6 0.8 1.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m278.2 743.3l-0.9-1.4 10.1-6.3 0.9 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m854.6 384l-0.9-1.4 10.1-6.3 0.9 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m284.8 753.4l-1-1.4 9.9-6.6 1 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m848.2 374.2l-0.9-1.4 9.9-6.6 0.9 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m291.7 763.3l-1-1.4 9.7-7 1 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m841.6 364.7l-1-1.4 9.6-7 1 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m299 772.8l-1-1.3 9.3-7.3 1.1 1.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m834.6 355.4l-1.1-1.4 9.4-7.3 1.1 1.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m314.6 791.3l-1.2-1.3 8.9-8 1.1 1.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m819.7 337.5l-1.2-1.2 8.9-8 1.1 1.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m322.8 800l-1.2-1.2 8.6-8.2 1.2 1.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m811.7 329l-1.2-1.2 8.6-8.3 1.2 1.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m331.4 808.5l-1.2-1.2 8.2-8.5 1.3 1.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m803.5 320.8l-1.2-1.2 8.3-8.5 1.2 1.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m340.2 816.7l-1.2-1.1 7.9-8.8 1.3 1.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m795 312.8l-1.3-1.1 8-8.8 1.3 1.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m358.8 832.2l-1.4-1.1 7.3-9.4 1.4 1.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m777.2 297.8l-1.3-1 7.3-9.4 1.3 1.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m368.4 839.4l-1.4-1 7-9.6 1.4 1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m767.9 290.8l-1.4-1 7-9.6 1.4 1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m378.3 846.3l-1.4-1 6.7-9.8 1.4 0.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m758.4 284.1l-1.4-0.9 6.6-9.9 1.4 1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m388.5 852.8l-1.5-0.9 6.3-10.1 1.5 0.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m748.6 277.8l-1.4-0.9 6.3-10.1 1.4 0.9z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m409.4 864.8l-1.5-0.8 5.6-10.5 1.5 0.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m728.5 266.1l-1.5-0.8 5.5-10.5 1.6 0.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m420.2 870.2l-1.6-0.7 5.2-10.7 1.6 0.8z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m718.1 260.8l-1.5-0.8 5.2-10.6 1.5 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m431.1 875.3l-1.6-0.7 4.9-10.9 1.6 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m707.6 255.8l-1.6-0.7 4.8-10.8 1.6 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m442.2 880l-1.6-0.7 4.5-11 1.6 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m696.8 251.3l-1.6-0.7 4.5-11 1.6 0.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m464.9 888.1l-1.6-0.5 3.7-11.3 1.6 0.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m675 243.3l-1.7-0.6 3.7-11.3 1.6 0.6z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m476.5 891.6l-1.7-0.4 3.3-11.5 1.7 0.5z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m663.8 239.8l-1.6-0.4 3.3-11.4 1.6 0.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m488.2 894.7l-1.7-0.4 2.9-11.5 1.6 0.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m652.6 236.8l-1.7-0.4 2.9-11.5 1.7 0.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m499.9 897.4l-1.7-0.4 2.5-11.6 1.7 0.4z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m641.2 234.2l-1.7-0.4 2.5-11.6 1.7 0.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m523.7 901.5l-1.7-0.2 1.7-11.8 1.7 0.3z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m618.3 230.1l-1.7-0.3 1.6-11.7 1.7 0.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m535.7 903l-1.7-0.2 1.2-11.8 1.7 0.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m606.7 228.6l-1.7-0.2 1.3-11.8 1.7 0.2z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m547.7 904l-1.7-0.1 0.8-11.9 1.7 0.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m595.1 227.6l-1.7-0.2 0.8-11.8 1.7 0.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m559.8 904.6l-1.8-0.1 0.5-11.8h1.7z\" />\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"&lt;Group&gt;\">\n\t\t\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m583.5 226.9h-1.7l0.4-11.9 1.7 0.1z\" />\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m571 932.4c-50.4 0-99.4-9.9-145.4-29.3-44.5-18.8-84.4-45.6-118.7-79.8-34.3-34.3-61.2-74.1-80.1-118.5-19.4-45.9-29.3-94.7-29.3-145 0-50.3 9.9-99.1 29.3-145 18.9-44.4 45.8-84.3 80.1-118.5 34.3-34.2 74.2-61.1 118.7-79.8 46-19.5 95-29.3 145.4-29.3 50.4 0 99.3 9.8 145.3 29.3 44.5 18.7 84.5 45.6 118.8 79.8 34.3 34.2 61.2 74.1 80 118.5 19.5 45.9 29.3 94.7 29.3 145 0 50.3-9.8 99.1-29.3 145-18.8 44.4-45.7 84.2-80 118.5-34.3 34.2-74.3 61-118.8 79.8-46 19.4-94.9 29.3-145.3 29.3zm0-741.2c-49.9 0-98.3 9.7-143.8 29-44 18.5-83.6 45.1-117.5 79-33.9 33.8-60.6 73.2-79.2 117.1-19.2 45.5-29 93.7-29 143.5 0 49.8 9.8 98 29 143.5 18.6 43.9 45.3 83.3 79.2 117.1 33.9 33.9 73.5 60.5 117.5 79 45.5 19.3 93.9 29 143.8 29 49.9 0 98.2-9.7 143.8-29 44-18.5 83.5-45.1 117.4-79 34-33.8 60.6-73.2 79.2-117.1 19.3-45.5 29-93.7 29-143.5 0-49.8-9.7-98-29-143.5-18.6-43.9-45.2-83.3-79.2-117.1-33.9-33.9-73.4-60.5-117.4-79-45.6-19.3-93.9-29-143.8-29z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m571.1 787.1h-0.1q-3.3 0-6.5 0c-1.5-0.1-2.7-1.3-2.7-2.8 0.1-1.6 1.3-2.7 2.8-2.7q3.2 0.1 6.4 0.1h0.1c1.5 0 2.8 1.2 2.8 2.7 0 1.5-1.3 2.7-2.8 2.7zm13.1-0.3c-1.4 0-2.6-1.2-2.7-2.6-0.1-1.5 1-2.8 2.5-2.9q3.3-0.2 6.5-0.5c1.5-0.1 2.8 1 3 2.5 0.1 1.5-1 2.9-2.5 3q-3.3 0.3-6.6 0.5-0.1 0-0.2 0zm-32.7-0.5q-0.1 0-0.2 0c-2.2-0.2-4.5-0.4-6.6-0.6-1.5-0.2-2.6-1.6-2.4-3.1 0.1-1.5 1.5-2.5 3-2.4q3.2 0.4 6.4 0.7c1.5 0.1 2.7 1.4 2.5 2.9-0.1 1.4-1.3 2.5-2.7 2.5zm52.2-1.5c-1.3 0-2.5-1-2.7-2.3-0.2-1.5 0.8-2.9 2.3-3.1q3.2-0.5 6.4-1.1c1.5-0.2 2.9 0.8 3.2 2.2 0.3 1.5-0.7 2.9-2.2 3.2q-3.3 0.6-6.6 1.1-0.2 0-0.4 0zm-71.7-1q-0.2 0-0.4 0-3.3-0.6-6.6-1.3c-1.4-0.3-2.4-1.7-2.1-3.2 0.3-1.5 1.8-2.4 3.2-2.1q3.2 0.6 6.4 1.2c1.5 0.2 2.5 1.7 2.2 3.1-0.2 1.4-1.4 2.3-2.7 2.3zm91-2.7c-1.2 0-2.3-0.8-2.6-2.1-0.4-1.5 0.5-2.9 2-3.3q3.2-0.7 6.3-1.6c1.4-0.3 2.9 0.5 3.3 2 0.4 1.4-0.5 2.9-1.9 3.3q-3.2 0.9-6.4 1.6-0.4 0.1-0.7 0.1zm-110.2-1.5q-0.3 0-0.7-0.1-3.1-0.8-6.3-1.8c-1.5-0.4-2.3-1.9-1.9-3.4 0.4-1.4 2-2.3 3.4-1.8q3.1 0.9 6.2 1.7c1.5 0.4 2.4 1.9 2 3.4-0.3 1.2-1.4 2-2.7 2zm129.1-3.8c-1.1 0-2.2-0.8-2.6-1.9-0.5-1.4 0.3-3 1.8-3.5q3-1 6.1-2.1c1.4-0.5 3 0.2 3.5 1.7 0.5 1.4-0.2 2.9-1.7 3.5q-3.1 1.1-6.2 2.1-0.5 0.2-0.9 0.2zm-147.8-2.1q-0.5 0-0.9-0.1-3.2-1.2-6.2-2.4c-1.4-0.6-2.1-2.1-1.6-3.5 0.6-1.4 2.2-2.1 3.6-1.6q3 1.2 6 2.3c1.5 0.5 2.2 2.1 1.7 3.5-0.4 1.1-1.5 1.8-2.6 1.8zm166.1-4.9c-1 0-2-0.6-2.5-1.6-0.6-1.4 0.1-3 1.5-3.6q2.9-1.3 5.8-2.7c1.4-0.6 3 0 3.7 1.3 0.6 1.4 0 3-1.3 3.7q-3 1.4-6.1 2.7-0.5 0.2-1.1 0.2zm-184.3-2.6q-0.6 0-1.1-0.2-3-1.4-6-2.9c-1.4-0.7-1.9-2.3-1.2-3.7 0.7-1.3 2.3-1.9 3.7-1.2q2.8 1.4 5.8 2.8c1.4 0.6 2 2.3 1.3 3.6-0.5 1-1.4 1.6-2.5 1.6zm202-5.9c-1 0-1.9-0.6-2.4-1.5-0.8-1.3-0.3-3 1.1-3.7q2.8-1.5 5.6-3.1c1.3-0.8 3-0.3 3.7 1 0.8 1.3 0.4 3-1 3.7q-2.8 1.7-5.7 3.2-0.7 0.4-1.3 0.4zm-219.4-3.1q-0.7 0-1.4-0.4-2.9-1.7-5.7-3.4c-1.3-0.8-1.7-2.5-0.9-3.8 0.8-1.3 2.5-1.7 3.8-0.9q2.7 1.7 5.6 3.4c1.3 0.7 1.7 2.4 1 3.7-0.6 0.9-1.5 1.4-2.4 1.4zm236.2-7c-0.9 0-1.8-0.4-2.3-1.2-0.8-1.3-0.5-3 0.8-3.8q2.7-1.8 5.3-3.6c1.3-0.9 3-0.6 3.9 0.6 0.8 1.3 0.5 3-0.7 3.9q-2.7 1.9-5.5 3.7c-0.5 0.3-1 0.4-1.5 0.4zm-252.8-3.6c-0.5 0-1.1-0.2-1.6-0.5q-2.7-1.9-5.3-3.9c-1.2-0.9-1.5-2.6-0.6-3.8 0.9-1.2 2.6-1.4 3.8-0.5q2.6 1.9 5.3 3.7c1.2 0.9 1.5 2.6 0.7 3.8-0.6 0.8-1.4 1.2-2.3 1.2zm268.7-7.9c-0.8 0-1.6-0.3-2.1-1-1-1.2-0.8-2.9 0.4-3.8q2.5-2 5-4.1c1.2-1 2.9-0.8 3.9 0.3 0.9 1.2 0.8 2.9-0.4 3.9q-2.5 2.1-5.1 4.2c-0.5 0.4-1.1 0.5-1.7 0.5zm-284.3-4c-0.6 0-1.2-0.2-1.7-0.7q-2.6-2.1-5.1-4.3c-1.1-1-1.2-2.7-0.2-3.9 1-1.1 2.8-1.2 3.9-0.2q2.4 2.2 4.9 4.2c1.1 1 1.3 2.7 0.3 3.9-0.5 0.6-1.3 1-2.1 1zm299.2-8.8c-0.8 0-1.5-0.3-2-0.8-1.1-1.1-1-2.8 0.1-3.9q2.3-2.2 4.6-4.5c1.1-1 2.8-1 3.9 0 1.1 1.1 1.1 2.8 0 3.9q-2.4 2.3-4.8 4.6c-0.5 0.5-1.2 0.7-1.8 0.7zm-313.7-4.5c-0.7 0-1.4-0.2-1.9-0.8q-2.3-2.3-4.6-4.7c-1.1-1.1-1-2.8 0.1-3.9 1.1-1 2.8-1 3.9 0.1q2.2 2.4 4.5 4.7c1 1 1 2.8 0 3.8-0.6 0.6-1.3 0.8-2 0.8zm327.3-9.5c-0.6 0-1.3-0.2-1.8-0.7-1.1-1-1.2-2.7-0.2-3.9q2.1-2.4 4.2-4.8c1-1.2 2.7-1.4 3.9-0.4 1.1 1 1.3 2.7 0.3 3.9q-2.1 2.5-4.3 5c-0.6 0.6-1.3 0.9-2.1 0.9zm-340.5-4.9c-0.8 0-1.6-0.3-2.1-1q-2.2-2.5-4.2-5.1c-1-1.2-0.8-2.9 0.4-3.8 1.2-1 2.9-0.8 3.9 0.4q2 2.5 4.1 5c0.9 1.2 0.8 2.9-0.4 3.9-0.5 0.4-1.1 0.6-1.7 0.6zm353-10.3c-0.6 0-1.2-0.2-1.7-0.5-1.2-0.9-1.4-2.7-0.5-3.9q1.9-2.6 3.8-5.2c0.8-1.2 2.5-1.5 3.8-0.7 1.2 0.9 1.5 2.6 0.6 3.8q-1.9 2.7-3.8 5.4c-0.6 0.7-1.4 1.1-2.2 1.1zm-365-5.2c-0.9 0-1.7-0.4-2.2-1.2q-1.9-2.7-3.8-5.4c-0.8-1.3-0.5-3 0.8-3.8 1.3-0.9 3-0.5 3.8 0.8q1.8 2.6 3.6 5.3c0.9 1.2 0.6 2.9-0.6 3.8-0.5 0.3-1.1 0.5-1.6 0.5zm376-11q-0.7 0-1.4-0.4c-1.3-0.8-1.7-2.5-0.9-3.8q1.7-2.7 3.3-5.5c0.8-1.3 2.4-1.8 3.8-1 1.3 0.7 1.7 2.4 1 3.7q-1.7 2.9-3.5 5.7c-0.5 0.8-1.4 1.3-2.3 1.3zm-386.6-5.5c-0.9 0-1.8-0.5-2.3-1.4q-1.7-2.8-3.3-5.7c-0.7-1.4-0.2-3 1.1-3.7 1.4-0.7 3-0.3 3.7 1.1q1.6 2.8 3.2 5.6c0.8 1.3 0.3 3-1 3.7q-0.7 0.4-1.4 0.4zm396.2-11.6q-0.6 0-1.2-0.3c-1.4-0.7-1.9-2.3-1.2-3.7q1.4-2.9 2.8-5.8c0.6-1.4 2.3-2 3.6-1.3 1.4 0.6 2 2.2 1.4 3.6q-1.5 3-2.9 6c-0.5 0.9-1.5 1.5-2.5 1.5zm-405.2-5.7c-1.1 0-2.1-0.6-2.5-1.6q-1.4-3-2.7-6c-0.6-1.4 0-3 1.4-3.6 1.4-0.6 3 0 3.6 1.4q1.3 3 2.6 5.9c0.7 1.3 0.1 3-1.3 3.6q-0.6 0.3-1.1 0.3zm413.3-12.2q-0.5 0-1-0.2c-1.4-0.6-2.1-2.2-1.6-3.6q1.2-3 2.3-6c0.6-1.4 2.1-2.2 3.5-1.7 1.5 0.6 2.2 2.1 1.7 3.5q-1.2 3.2-2.4 6.2c-0.4 1.1-1.4 1.8-2.5 1.8zm-420.9-5.9c-1.1 0-2.1-0.7-2.5-1.8q-1.2-3.1-2.2-6.2c-0.5-1.5 0.3-3 1.7-3.5 1.4-0.5 3 0.3 3.5 1.7q1 3.1 2.1 6.1c0.5 1.5-0.2 3-1.6 3.5q-0.5 0.2-1 0.2zm427.3-12.7q-0.4 0-0.8-0.1c-1.4-0.4-2.2-1.9-1.8-3.4q0.9-3.1 1.8-6.2c0.4-1.4 1.9-2.3 3.3-1.9 1.5 0.4 2.3 1.9 2 3.3q-0.9 3.2-1.8 6.4c-0.4 1.2-1.5 1.9-2.7 1.9zm-433.2-6c-1.2 0-2.3-0.8-2.6-2q-0.9-3.2-1.7-6.4c-0.3-1.5 0.6-2.9 2.1-3.3 1.4-0.3 2.9 0.6 3.3 2q0.7 3.2 1.6 6.3c0.3 1.4-0.5 2.9-2 3.3q-0.3 0.1-0.7 0.1zm438-13q-0.3 0-0.5 0c-1.5-0.3-2.5-1.8-2.2-3.2q0.7-3.2 1.2-6.4c0.3-1.5 1.7-2.5 3.2-2.2 1.5 0.3 2.5 1.7 2.2 3.2q-0.5 3.2-1.2 6.5c-0.3 1.3-1.4 2.1-2.7 2.1zm-442.3-6.1c-1.3 0-2.4-0.9-2.6-2.3q-0.6-3.2-1.1-6.5c-0.2-1.5 0.8-2.9 2.3-3.1 1.5-0.2 2.9 0.8 3.1 2.3q0.5 3.2 1 6.4c0.3 1.5-0.7 2.9-2.2 3.2q-0.2 0-0.5 0zm445.4-13.2q-0.1 0-0.3 0c-1.5-0.2-2.6-1.5-2.4-3q0.4-3.2 0.6-6.5c0.2-1.5 1.5-2.6 3-2.5 1.5 0.2 2.6 1.5 2.5 3q-0.3 3.3-0.7 6.6c-0.1 1.4-1.3 2.4-2.7 2.4zm-447.9-6.2c-1.4 0-2.6-1.1-2.7-2.5q-0.3-3.3-0.5-6.6c-0.1-1.5 1-2.8 2.6-2.9 1.5-0.1 2.8 1.1 2.8 2.6q0.2 3.2 0.5 6.4c0.1 1.5-1 2.8-2.5 3q-0.1 0-0.2 0zm449.3-13.3q0 0-0.1 0c-1.5-0.1-2.7-1.3-2.6-2.9q0.1-3.2 0.1-6.4v-0.6c0-1.5 1.2-2.7 2.7-2.7 1.5 0 2.8 1.2 2.8 2.7v0.6q0 3.3-0.1 6.6c-0.1 1.5-1.3 2.7-2.8 2.7zm-450.2-6.3c-1.5 0-2.7-1.2-2.7-2.7v-0.3q0-3.2 0.1-6.3c0-1.5 1.3-2.7 2.8-2.7 1.5 0.1 2.7 1.3 2.6 2.8q0 3.1 0 6.2v0.3c0 1.5-1.3 2.7-2.8 2.7zm449.9-13.9c-1.4 0-2.6-1.1-2.7-2.6q-0.2-3.2-0.5-6.4c-0.1-1.5 1-2.8 2.5-3 1.5-0.1 2.8 1 3 2.5q0.2 3.3 0.4 6.6c0.1 1.5-1 2.8-2.5 2.9q-0.1 0-0.2 0zm-449.1-5.7q-0.1 0-0.2 0c-1.5-0.1-2.6-1.4-2.5-2.9q0.3-3.3 0.7-6.6c0.1-1.5 1.5-2.6 3-2.4 1.5 0.2 2.6 1.5 2.4 3q-0.4 3.2-0.6 6.4c-0.2 1.5-1.3 2.5-2.8 2.5zm447.1-13.8c-1.3 0-2.5-0.9-2.7-2.3q-0.5-3.2-1.1-6.4c-0.2-1.5 0.8-2.9 2.3-3.1 1.5-0.3 2.9 0.7 3.1 2.2q0.6 3.2 1.1 6.5c0.2 1.5-0.8 2.9-2.3 3.1q-0.2 0-0.4 0zm-444.5-5.6q-0.3 0-0.5 0c-1.5-0.3-2.5-1.7-2.2-3.2 0.3-2.1 0.7-4.3 1.2-6.5 0.3-1.5 1.7-2.4 3.2-2.1 1.5 0.3 2.5 1.7 2.2 3.2q-0.7 3.2-1.2 6.3c-0.3 1.4-1.4 2.3-2.7 2.3zm440.8-13.6c-1.3 0-2.4-0.9-2.7-2.1q-0.7-3.1-1.6-6.3c-0.4-1.4 0.5-2.9 2-3.3 1.4-0.4 2.9 0.5 3.3 1.9q0.9 3.2 1.6 6.4c0.4 1.5-0.5 3-2 3.3q-0.3 0.1-0.6 0.1zm-436.6-5.5q-0.4 0-0.7-0.1c-1.5-0.4-2.4-1.9-2-3.4q0.9-3.1 1.8-6.3c0.4-1.5 2-2.3 3.4-1.9 1.5 0.5 2.3 2 1.9 3.4q-1 3.1-1.8 6.2c-0.3 1.3-1.4 2.1-2.6 2.1zm431.2-13.3c-1.2 0-2.2-0.8-2.6-1.9q-1-3.1-2.2-6.1c-0.5-1.4 0.3-3 1.7-3.5 1.4-0.5 3 0.2 3.5 1.6q1.1 3.1 2.2 6.3c0.5 1.4-0.3 2.9-1.7 3.4q-0.5 0.2-0.9 0.2zm-425.4-5.4q-0.4 0-0.9-0.2c-1.4-0.5-2.2-2.1-1.6-3.5q1.1-3.1 2.3-6.2c0.6-1.4 2.2-2.1 3.6-1.5 1.4 0.5 2.1 2.1 1.5 3.5q-1.2 3-2.3 6.1c-0.4 1.1-1.4 1.8-2.6 1.8zm418.4-12.9c-1.1 0-2.1-0.6-2.5-1.7q-1.3-2.9-2.7-5.8c-0.6-1.4-0.1-3 1.3-3.7 1.4-0.6 3 0 3.7 1.4q1.4 2.9 2.7 6c0.6 1.3-0.1 3-1.4 3.6q-0.6 0.2-1.1 0.2zm-410.9-5.3q-0.5 0-1.1-0.2c-1.4-0.7-2-2.3-1.3-3.6q1.4-3.1 2.9-6c0.6-1.4 2.3-1.9 3.6-1.2 1.4 0.6 1.9 2.3 1.3 3.6q-1.5 2.9-2.9 5.9c-0.4 1-1.4 1.5-2.5 1.5zm402.3-12.3c-1 0-1.9-0.5-2.4-1.4q-1.6-2.9-3.2-5.6c-0.8-1.3-0.3-3 1-3.8 1.3-0.7 3-0.3 3.7 1q1.7 2.9 3.3 5.8c0.7 1.3 0.2 3-1.1 3.7q-0.7 0.3-1.3 0.3zm-393.2-5.1q-0.7 0-1.3-0.3c-1.4-0.8-1.8-2.5-1.1-3.8q1.7-2.8 3.5-5.7c0.7-1.2 2.4-1.6 3.7-0.8 1.3 0.7 1.7 2.4 0.9 3.7q-1.7 2.8-3.3 5.6c-0.5 0.8-1.4 1.3-2.4 1.3zm383.1-11.7c-0.9 0-1.8-0.4-2.3-1.2q-1.8-2.7-3.7-5.3c-0.8-1.2-0.5-2.9 0.7-3.8 1.2-0.9 3-0.6 3.8 0.6q1.9 2.7 3.8 5.5c0.8 1.3 0.4 3-0.8 3.8-0.5 0.3-1 0.4-1.5 0.4zm-372.5-4.8c-0.6 0-1.1-0.2-1.6-0.5-1.2-0.9-1.5-2.6-0.7-3.8q1.9-2.7 3.9-5.4c0.9-1.2 2.6-1.4 3.9-0.5 1.2 0.9 1.4 2.6 0.5 3.8q-1.9 2.6-3.8 5.2c-0.5 0.8-1.4 1.2-2.2 1.2zm360.9-11c-0.8 0-1.6-0.4-2.1-1q-2-2.6-4.1-5c-1-1.2-0.8-2.9 0.3-3.9 1.2-0.9 2.9-0.8 3.9 0.4q2.1 2.5 4.2 5.1c0.9 1.1 0.7 2.9-0.5 3.8-0.5 0.4-1.1 0.6-1.7 0.6zm-349-4.6c-0.6 0-1.2-0.2-1.7-0.6-1.2-1-1.3-2.7-0.4-3.9q2.2-2.5 4.4-5c1-1.1 2.7-1.2 3.8-0.2 1.2 1 1.3 2.7 0.3 3.9q-2.2 2.4-4.3 4.9c-0.5 0.6-1.3 0.9-2.1 0.9zm336.2-10.2c-0.8 0-1.5-0.3-2-0.8q-2.2-2.4-4.5-4.7c-1.1-1-1.1-2.8 0-3.8 1-1.1 2.8-1.1 3.8 0q2.4 2.3 4.7 4.7c1 1.1 1 2.8-0.1 3.9-0.6 0.5-1.2 0.7-1.9 0.7zm-322.9-4.2c-0.7 0-1.4-0.3-1.9-0.8-1.1-1.1-1.1-2.8 0-3.9q2.3-2.3 4.7-4.6c1.1-1 2.8-1 3.9 0.1 1 1.1 1 2.8-0.1 3.9q-2.4 2.2-4.7 4.5c-0.5 0.5-1.2 0.8-1.9 0.8zm308.8-9.4c-0.7 0-1.3-0.3-1.9-0.7q-2.4-2.2-4.9-4.2c-1.1-1-1.3-2.7-0.3-3.9 1-1.1 2.7-1.3 3.9-0.3q2.5 2.1 5 4.3c1.1 1 1.2 2.7 0.2 3.9-0.5 0.6-1.3 0.9-2 0.9zm-294.3-3.9c-0.8 0-1.6-0.3-2.1-1-1-1.1-0.9-2.8 0.3-3.8q2.5-2.1 5.1-4.2c1.2-0.9 2.9-0.7 3.9 0.5 0.9 1.1 0.7 2.9-0.5 3.8q-2.5 2-5 4.1c-0.5 0.4-1.1 0.6-1.7 0.6zm279-8.5c-0.5 0-1.1-0.2-1.6-0.5q-2.6-1.9-5.3-3.8c-1.2-0.9-1.5-2.6-0.6-3.8 0.8-1.2 2.5-1.5 3.8-0.7q2.7 1.9 5.4 3.9c1.2 0.9 1.4 2.6 0.5 3.8-0.5 0.7-1.3 1.1-2.2 1.1zm-263.5-3.4c-0.9 0-1.7-0.4-2.2-1.2-0.9-1.2-0.6-2.9 0.6-3.8 1.8-1.3 3.7-2.5 5.5-3.7 1.3-0.8 3-0.5 3.8 0.8 0.8 1.2 0.5 2.9-0.8 3.7q-2.7 1.8-5.3 3.7c-0.5 0.3-1.1 0.5-1.6 0.5zm247.2-7.6q-0.7 0-1.4-0.4-2.8-1.7-5.6-3.3c-1.3-0.8-1.7-2.4-1-3.7 0.8-1.3 2.5-1.8 3.8-1q2.8 1.6 5.7 3.4c1.3 0.7 1.7 2.4 0.9 3.7-0.5 0.9-1.4 1.3-2.4 1.3zm-230.7-3c-0.9 0-1.8-0.5-2.3-1.3-0.8-1.3-0.4-3 0.9-3.8q2.9-1.6 5.8-3.2c1.3-0.7 3-0.2 3.7 1.1 0.7 1.3 0.3 3-1.1 3.7q-2.8 1.5-5.6 3.1-0.7 0.4-1.4 0.4zm213.6-6.5q-0.7 0-1.3-0.3-2.9-1.5-5.8-2.8c-1.4-0.7-2-2.3-1.3-3.7 0.6-1.3 2.2-1.9 3.6-1.3q3 1.4 6 2.9c1.3 0.7 1.9 2.3 1.2 3.7-0.5 0.9-1.4 1.5-2.4 1.5zm-196.2-2.6c-1 0-2-0.5-2.5-1.5-0.6-1.4 0-3 1.3-3.7q3-1.4 6.1-2.7c1.3-0.6 3 0.1 3.6 1.4 0.6 1.4-0.1 3-1.5 3.6q-2.9 1.3-5.8 2.7-0.6 0.2-1.2 0.2zm178.2-5.4q-0.5 0-1-0.2-3-1.2-6.1-2.3c-1.4-0.5-2.1-2.1-1.6-3.5 0.5-1.4 2.1-2.2 3.5-1.7q3.1 1.2 6.2 2.4c1.4 0.5 2.1 2.1 1.6 3.5-0.5 1.1-1.5 1.8-2.6 1.8zm-160.1-2.1c-1.1 0-2.2-0.7-2.6-1.8-0.5-1.4 0.2-2.9 1.6-3.5q3.1-1.1 6.3-2.1c1.4-0.5 3 0.2 3.5 1.7 0.4 1.4-0.3 3-1.8 3.4q-3 1.1-6.1 2.2-0.4 0.1-0.9 0.1zm141.5-4.3q-0.4 0-0.7-0.2-3.1-0.9-6.3-1.7c-1.4-0.4-2.3-1.9-1.9-3.3 0.4-1.5 1.9-2.4 3.3-2q3.2 0.9 6.4 1.8c1.5 0.4 2.3 2 1.9 3.4-0.4 1.2-1.5 2-2.7 2zm-122.8-1.6c-1.2 0-2.3-0.8-2.6-2-0.4-1.5 0.4-3 1.9-3.4q3.2-0.8 6.4-1.6c1.5-0.3 3 0.6 3.3 2 0.4 1.5-0.6 3-2 3.3q-3.2 0.8-6.3 1.6-0.3 0.1-0.7 0.1zm103.8-3.2q-0.3 0-0.6 0-3.1-0.7-6.3-1.2c-1.5-0.3-2.5-1.7-2.3-3.2 0.3-1.5 1.7-2.5 3.2-2.2q3.3 0.5 6.5 1.2c1.5 0.3 2.5 1.8 2.2 3.2-0.3 1.3-1.4 2.2-2.7 2.2zm-84.6-1c-1.3 0-2.5-1-2.7-2.3-0.3-1.5 0.7-2.9 2.2-3.2q3.2-0.5 6.5-1c1.5-0.2 2.9 0.8 3.1 2.3 0.3 1.5-0.8 2.9-2.3 3.1q-3.2 0.5-6.4 1-0.2 0.1-0.4 0.1zm65.2-2q-0.2 0-0.3-0.1-3.2-0.3-6.5-0.6c-1.5-0.1-2.6-1.4-2.5-2.9 0.2-1.6 1.5-2.7 3-2.5q3.3 0.2 6.6 0.6c1.5 0.2 2.6 1.5 2.4 3-0.2 1.4-1.3 2.5-2.7 2.5zm-45.8-0.6c-1.4 0-2.6-1.1-2.7-2.5-0.1-1.5 1-2.8 2.5-3q3.3-0.3 6.6-0.5c1.5 0 2.8 1.1 2.9 2.6 0.1 1.5-1.1 2.8-2.6 2.9q-3.2 0.2-6.4 0.5-0.2 0-0.3 0zm26.2-0.8q0 0-0.1 0-3-0.1-6-0.1h-0.4q0 0 0 0c-1.6 0-2.8-1.2-2.8-2.7 0-1.5 1.2-2.8 2.7-2.8h0.5c2 0 4.1 0.1 6.2 0.1 1.5 0.1 2.7 1.3 2.6 2.8 0 1.5-1.2 2.7-2.7 2.7z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m975 558.1h-14.5v13.4h16.2v4.1h-21v-37.3h20.2v4h-15.4v11.8h14.5z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m977.7 576.6h-23v-39.3h22.2v6h-15.4v9.8h14.5v6h-14.5v11.4h16.2zm-21-2h19v-2h-16.2v-15.5h14.5v-1.9h-14.5v-13.8h15.4v-2.1h-18.2z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m558.3 174.3v-37.3h5.3l11.9 18.9c2.8 4.3 5 8.3 6.7 12.1l0.2-0.1c-0.5-5-0.6-9.5-0.6-15.3v-15.6h4.5v37.3h-4.8l-11.9-18.9c-2.6-4.2-5.1-8.4-7-12.5l-0.2 0.1c0.3 4.7 0.4 9.2 0.4 15.3v16z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m587.3 175.3h-6.4l-12.1-19.4c-2.1-3.3-3.8-6.1-5.1-8.7 0.1 3.3 0.1 6.8 0.1 11.1v17h-6.5v-39.3h6.8l12.3 19.3c1.7 2.8 3.3 5.4 4.6 8-0.2-3.5-0.2-6.9-0.2-10.7v-16.6h6.5zm-5.3-2h3.3v-35.3h-2.5v14.6c0 5.5 0.1 10.1 0.5 15.3l0.1 0.6-1.6 0.8-0.5-0.9c-1.7-3.8-3.9-7.7-6.6-12l-11.7-18.4h-3.7v35.3h2.5v-14.9c0-6.3-0.1-10.7-0.4-15.3v-0.8l1.7-0.6 0.4 0.8c1.6 3.5 3.8 7.4 6.9 12.4z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m562.2 978.6c2.2 1.3 5.3 2.4 8.6 2.4 5 0 7.9-2.6 7.9-6.3 0-3.5-2-5.5-7.1-7.5-6.1-2.1-9.8-5.3-9.8-10.5 0-5.8 4.8-10.1 12-10.1 3.9 0 6.6 0.8 8.3 1.8l-1.3 3.9c-1.3-0.7-3.7-1.8-7.1-1.8-5.1 0-7.1 3.1-7.1 5.6 0 3.5 2.3 5.2 7.5 7.2 6.3 2.5 9.5 5.5 9.5 11 0 5.7-4.3 10.7-13.1 10.7-3.6 0-7.5-1-9.5-2.4z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m570.5 986c-3.7 0-7.8-1-10.1-2.5l-0.6-0.5 1.8-5.9 1.1 0.6c2.4 1.5 5.4 2.3 8.1 2.3 4.3 0 6.9-2 6.9-5.3 0-2.6-1.1-4.5-6.4-6.5-7.1-2.5-10.5-6.3-10.5-11.5 0-6.6 5.3-11.1 13-11.1 4.6 0 7.5 1.2 8.8 1.9l0.7 0.4-2 5.9-1-0.6c-1.4-0.8-3.7-1.7-6.6-1.7-4.5 0-6.1 2.5-6.1 4.6 0 2.8 1.7 4.3 6.8 6.3 7.2 2.7 10.2 6.3 10.2 11.9 0 5.4-3.7 11.7-14.1 11.7zm-8.3-3.8c2 1.1 5.4 1.8 8.3 1.8 7.4 0 12.1-3.8 12.1-9.7 0-4.8-2.5-7.6-8.9-10-5.1-2-8.1-4-8.1-8.2 0-3.1 2.5-6.6 8.1-6.6 2.7 0 4.9 0.7 6.5 1.4l0.7-2c-1.4-0.6-3.6-1.3-7.1-1.3-6.5 0-11 3.7-11 9.1 0 4.3 2.9 7.4 9.2 9.6 4.6 1.8 7.7 3.9 7.7 8.4 0 4.4-3.5 7.3-8.9 7.3-2.7 0-5.6-0.7-8-1.9z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m150.3 548.8l3.5 13.6c0.8 3 1.5 5.7 2 8.5h0.2c0.6-2.7 1.5-5.6 2.4-8.5l4.4-13.6h4.1l4.1 13.4c1 3.2 1.8 6 2.4 8.7h0.2c0.4-2.7 1.1-5.5 2-8.7l3.9-13.4h4.8l-8.7 26.8h-4.4l-4.1-12.8c-1-3-1.7-5.7-2.4-8.8h-0.1c-0.7 3.2-1.5 6-2.4 8.8l-4.4 12.8h-4.4l-8.1-26.8z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m176.4 576.6h-5.9l-4.4-13.5c-0.5-1.8-1-3.4-1.4-5.1-0.5 1.9-1.1 3.6-1.6 5.1l-4.6 13.5h-5.8l-8.7-28.8h7.1l3.7 14.3q0.7 2.5 1.2 4.8c0.5-1.6 0.9-3.2 1.4-4.7l4.6-14.4h5.6l4.4 14.1q0.8 2.6 1.4 4.8c0.4-1.6 0.8-3.2 1.3-4.7l4-14.2h7zm-4.5-2h3l8-24.8h-2.7l-3.6 12.7c-0.8 2.8-1.6 5.7-2 8.6l-0.2 0.8h-1.8l-0.2-0.7c-0.6-2.7-1.3-5.4-2.3-8.7l-4-12.7h-2.6l-4.2 13c-0.8 2.8-1.7 5.7-2.3 8.4l-0.2 0.7h-1.8l-0.2-0.8c-0.4-2.7-1.2-5.5-1.9-8.4l-3.4-12.9h-2.9l7.5 24.8h3l4.1-12.1c0.8-2.5 1.7-5.4 2.4-8.7l0.2-0.8h1.7l0.2 0.8c0.6 3.1 1.4 5.7 2.3 8.7z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m864.7 249.7l14.7-14.6 2.4 2.4-1.9 12.9c-0.4 3-1 5.6-1.7 7.9h0.1c1.8-2.1 3.5-4 5.8-6.2l6.1-6.1 2.1 2.1-14.7 14.6-2.2-2.3 2-12.9c0.4-2.8 0.9-5.6 1.7-8.1h-0.1c-1.8 1.9-3.5 3.7-5.9 6.2l-6.3 6.2z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m897.3 268.6l-6.7-6.7-5.3 5.3 7.5 7.5-1.6 1.5-9.7-9.7 14.7-14.6 9.3 9.4-1.6 1.5-7.1-7.1-4.6 4.7 6.7 6.7z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m257.3 274.3l-14.6-14.7 2.4-2.4 13 1.9c3 0.5 5.5 1 7.8 1.7l0.1-0.1c-2.2-1.7-4-3.5-6.3-5.7l-6.1-6.2 2.1-2.1 14.6 14.7-2.2 2.2-13-1.9c-2.8-0.5-5.6-1-8.1-1.7v0.1c1.9 1.7 3.7 3.4 6.2 5.8l6.2 6.3z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m277 254.7l-19-10.3 2.4-2.3 9.4 5.4c2.4 1.3 4.7 2.6 6.4 3.8v-0.1c-1.2-1.7-2.3-4-3.6-6.5l-5.1-9.7 2.3-2.3 9.5 5.4c2.3 1.2 4.5 2.5 6.3 3.8v-0.1c-1.2-1.9-2.4-4.1-3.7-6.4l-5.1-9.7 2.3-2.3 9.8 19.6-2.4 2.3-9.8-5.5c-2.4-1.3-4.2-2.4-5.9-3.6 1.1 1.8 2.2 3.6 3.4 6.1l5.2 10.1z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m292.4 865.4c-0.4-1.6-1.5-3.4-3-5-2.3-2.3-4.6-2.6-6.1-1.1-1.4 1.4-1.2 3.1 0.3 6.2 2 3.6 2.5 6.6 0.4 8.6-2.3 2.3-6.2 1.8-9.6-1.6-1.7-1.7-2.7-3.4-3.1-4.5l2.2-0.9c0.3 0.8 1 2.4 2.6 3.9 2.3 2.4 4.4 2.1 5.4 1.1 1.4-1.4 1-3.1-0.6-6.2-1.9-3.9-2.2-6.6 0-8.7 2.2-2.3 6.2-2.3 10.2 1.8 1.7 1.7 3.1 3.9 3.5 5.3z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m279 847.3l-10.3 19-2.4-2.4 5.4-9.4c1.4-2.3 2.7-4.6 3.8-6.3v-0.1c-1.7 1.2-4 2.4-6.5 3.7l-9.7 5.1-2.4-2.4 5.4-9.5c1.3-2.2 2.6-4.4 3.8-6.2-2 1.2-4.1 2.3-6.5 3.6l-9.7 5.1-2.2-2.3 19.6-9.7 2.3 2.4-5.5 9.7c-1.3 2.4-2.4 4.2-3.7 5.9l0.1 0.1c1.7-1.2 3.6-2.2 6.1-3.5l10.1-5.1z\"\n\t\t\t\t/>\n\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m862 275.5l-23.3 23.3 2.8 2.8 23.4-23.3z\" />\n\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m313.1 823.1l-23.3 23.3 2.9 2.8 23.3-23.3z\" />\n\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m836.5 818l-2.9 2.9 23.4 23.2 2.8-2.8z\" />\n\t\t\t\t<path id=\"&lt;Path&gt;\" className=\"s1\" d=\"m284.7 273.3l23.4 23.2 2.8-2.8-23.3-23.3z\" />\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m887.2 840.1c-1.5 0.5-3.4 1.5-4.9 3-2.3 2.3-2.6 4.6-1.2 6.1 1.4 1.4 3.1 1.3 6.2-0.3 3.7-2 6.7-2.4 8.7-0.4 2.3 2.3 1.8 6.2-1.6 9.6-1.8 1.7-3.4 2.6-4.5 3l-1-2.1c0.9-0.3 2.4-1 4-2.6 2.4-2.3 2.1-4.4 1.1-5.4-1.4-1.4-3.1-1-6.3 0.6-3.9 1.9-6.5 2.2-8.7 0-2.3-2.2-2.2-6.1 1.8-10.2 1.7-1.7 4-3 5.4-3.4z\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tid=\"&lt;Compound Path&gt;\"\n\t\t\t\t\tclassName=\"s1\"\n\t\t\t\t\td=\"m869.9 866.4l6.7-6.6-5.3-5.3-7.5 7.4-1.6-1.6 9.8-9.6 14.6 14.6-9.3 9.3-1.6-1.6 7.1-7-4.7-4.7-6.7 6.7z\"\n\t\t\t\t/>\n\t\t\t</g>\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const CompassArrow = ({ deg }: { deg: number }) => {\n\treturn (\n\t\t<svg\n\t\t\tclassName=\"compass-arrow\"\n\t\t\twidth=\"323\"\n\t\t\theight=\"323\"\n\t\t\tviewBox=\"0 0 323 323\"\n\t\t\tfill=\"none\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tstyle={{ transform: `rotate(${deg}deg)` }}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M164.5 229V142.868V60H159.5V142.868V229L150 225.736L162 264L174 225.736L164.5 229Z\"\n\t\t\t\tfill=\"url(#paint0_linear_208_11096)\"\n\t\t\t/>\n\t\t\t<defs>\n\t\t\t\t<linearGradient\n\t\t\t\t\tid=\"paint0_linear_208_11096\"\n\t\t\t\t\tx1=\"162\"\n\t\t\t\t\ty1=\"60\"\n\t\t\t\t\tx2=\"162\"\n\t\t\t\t\ty2=\"264\"\n\t\t\t\t\tgradientUnits=\"userSpaceOnUse\"\n\t\t\t\t>\n\t\t\t\t\t<stop stopColor=\"white\" stopOpacity=\"0\" />\n\t\t\t\t\t<stop offset=\"0.105\" stopColor=\"white\" />\n\t\t\t\t</linearGradient>\n\t\t\t</defs>\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\nimport { Compass } from \"../../../../assets/icons/Compass\";\nimport \"./windInfo.scss\";\nimport { CompassArrow } from \"../../../../assets/icons/CompassArrow\";\nimport { Windy } from \"../../../../assets/icons/forecast_icons/Windy\";\n\nexport const WindInfo = ({\n\tdeg,\n\twindspeed,\n\twindgust,\n}: {\n\tdeg: number;\n\twindspeed: number;\n\twindgust: number;\n}) => {\n\treturn (\n\t\t<div className=\"wind forecast-element\">\n\t\t\t<div className=\"wind_title\">\n\t\t\t\t<Windy />\n\t\t\t\t<span>wind</span>\n\t\t\t</div>\n\t\t\t<div className=\"wind_description\">\n\t\t\t\t<div className=\"wind_info\">\n\t\t\t\t\t<div className=\"wind_info_speed\">\n\t\t\t\t\t\t<span className=\"wind_info_speed_value\">{windspeed}</span>\n\t\t\t\t\t\t<div className=\"wind_info_speed_des\">\n\t\t\t\t\t\t\t<span>m/s</span>\n\t\t\t\t\t\t\t<span>speed</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span className=\"wind_info_line\"></span>\n\t\t\t\t\t<div className=\"wind_info_speed\">\n\t\t\t\t\t\t<span className=\"wind_info_speed_value\">{windgust ? windgust : \"-\"}</span>\n\t\t\t\t\t\t<div className=\"wind_info_speed_des\">\n\t\t\t\t\t\t\t<span>m/s</span>\n\t\t\t\t\t\t\t<span>max</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wind_compass\">\n\t\t\t\t\t<CompassArrow deg={deg} />\n\t\t\t\t\t<Compass />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\n\nexport const CloseIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\n\t\t\t<path d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\" />\n\t\t</svg>\n\t);\n};\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport \"./hourlyForecast.scss\";\nimport { Hour, IIconType } from \"../../../interfaces/weather_interface\";\nimport { WeatherIcon } from \"./WeatherIcon\";\nimport { CloseIcon } from \"../../../assets/icons/CloseIcon\";\n\nexport const HourlyForecast = ({\n\thourly,\n\tisPopup,\n\tdate,\n\tsetIsPopup,\n}: {\n\thourly: Array<Hour>;\n\tisPopup?: boolean;\n\tdate?: string;\n\tsetIsPopup?: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n\tconst [dataTime, setDataTime] = useState<Array<string>>([]);\n\tconst [isHoverColumnIndex, setIsHoverColumnIndex] = useState(99);\n\tconst [isCurrentTimeIndex, setIsCurrentTimeIndex] = useState(99);\n\tconst currentTime = new Date().getHours();\n\tconst currentHourlyDate = date?.split(\"-\").reverse().join(\"/\");\n\tconst mouseOn = (index: number) => {\n\t\tsetIsHoverColumnIndex(index);\n\t};\n\tconst mouseLeave = () => {\n\t\tsetIsHoverColumnIndex(99);\n\t};\n\n\tuseLayoutEffect(() => {\n\t\tconst newTime: Array<string> = [];\n\t\thourly.forEach((el, index) => {\n\t\t\tconst time = el.datetime.split(\":\");\n\t\t\tif (+time[0] === currentTime && !isPopup) {\n\t\t\t\tsetIsCurrentTimeIndex(index);\n\t\t\t}\n\t\t\tnewTime.push(time.splice(0, 2).join(\":\"));\n\t\t});\n\t\tsetDataTime(newTime);\n\t}, []);\n\n\treturn (\n\t\t<div className={`hourly forecast-element ${isPopup ? \"popup\" : \"\"}`}>\n\t\t\t{isPopup && (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"popup_close-btn\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetIsPopup && setIsPopup(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CloseIcon />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<table className=\"hourly_forecast\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"hourly_forecast_description\">\n\t\t\t\t\t\t\t{currentHourlyDate && currentHourlyDate}\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t{dataTime.map((time, index) => (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tkey={time}\n\t\t\t\t\t\t\t\tclassName={`hourly_forecast_time bb ${\n\t\t\t\t\t\t\t\t\tisCurrentTimeIndex === index ? \"currentTime\" : \"\"\n\t\t\t\t\t\t\t\t} ${isHoverColumnIndex === index ? \"isHover\" : \"\"}`}\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouseOn(index)}\n\t\t\t\t\t\t\t\tonMouseLeave={mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{time}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t{hourly.map((hour, index) => (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName={`bb ${isCurrentTimeIndex === index ? \"currentTime\" : \"\"} ${\n\t\t\t\t\t\t\t\t\tisHoverColumnIndex === index ? \"isHover\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouseOn(index)}\n\t\t\t\t\t\t\t\tonMouseLeave={mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<WeatherIcon condition={hour.icon as IIconType} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"hourly_forecast_description\">Temperature</th>\n\t\t\t\t\t\t{hourly.map((hour, index) => (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName={`bb ${isCurrentTimeIndex === index ? \"currentTime\" : \"\"} ${\n\t\t\t\t\t\t\t\t\tisHoverColumnIndex === index ? \"isHover\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouseOn(index)}\n\t\t\t\t\t\t\t\tonMouseLeave={mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"temp\">\n\t\t\t\t\t\t\t\t\t{Math.floor(hour.temp)}\n\t\t\t\t\t\t\t\t\t<span>°C</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"hourly_forecast_description\">Feels like</th>\n\t\t\t\t\t\t{hourly.map((hour, index) => (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName={`bb ${isCurrentTimeIndex === index ? \"currentTime\" : \"\"} ${\n\t\t\t\t\t\t\t\t\tisHoverColumnIndex === index ? \"isHover\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouseOn(index)}\n\t\t\t\t\t\t\t\tonMouseLeave={mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"temp\">\n\t\t\t\t\t\t\t\t\t{Math.floor(hour.feelslike)}\n\t\t\t\t\t\t\t\t\t<span>°C</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"hourly_forecast_description\">Precipitation</th>\n\n\t\t\t\t\t\t{hourly.map((hour, index) => (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName={`bb ${isCurrentTimeIndex === index ? \"currentTime\" : \"\"} ${\n\t\t\t\t\t\t\t\t\tisHoverColumnIndex === index ? \"isHover\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouseOn(index)}\n\t\t\t\t\t\t\t\tonMouseLeave={mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{Math.floor(hour.precip)}\n\t\t\t\t\t\t\t\t<span>mm</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"hourly_forecast_description\">Precipitation chance</th>\n\t\t\t\t\t\t{hourly.map((hour, index) => (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName={`${isCurrentTimeIndex === index ? \"currentTime\" : \"\"} ${\n\t\t\t\t\t\t\t\t\tisHoverColumnIndex === index ? \"isHover\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouseOn(index)}\n\t\t\t\t\t\t\t\tonMouseLeave={mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{Math.floor(hour.precipprob)}\n\t\t\t\t\t\t\t\t<span>%</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Day, IIconType } from \"../../../../interfaces/weather_interface\";\nimport { conditionHandler } from \"../../../../utils/conditionHandler\";\nimport { WeatherIcon } from \"../WeatherIcon\";\n\nexport const DayForecast = ({\n\tforecast,\n\tindex,\n\tsetPopupForecastIndex,\n\tsetIsHourslyForecastForDate,\n}: {\n\tforecast: Day;\n\tindex: number;\n\tsetPopupForecastIndex: React.Dispatch<React.SetStateAction<number>>;\n\tsetIsHourslyForecastForDate: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n\tconst date = forecast.datetime.split(\"-\").splice(1, 2).reverse().join(\"/\");\n\treturn (\n\t\t<div\n\t\t\tclassName=\"weekly_day\"\n\t\t\tonClick={() => {\n\t\t\t\tsetPopupForecastIndex(index);\n\t\t\t\tsetIsHourslyForecastForDate(true);\n\t\t\t}}\n\t\t>\n\t\t\t<span className=\"index\">{date}</span>\n\t\t\t<div className=\"weekly_day_description index\">\n\t\t\t\t<WeatherIcon condition={forecast.icon as IIconType} />\n\t\t\t\t<span>{conditionHandler(forecast.icon as IIconType)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"index\">\n\t\t\t\t{Math.floor(forecast.temp)}\n\t\t\t\t<span>°C</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport \"./weeklyForecast.scss\";\nimport { Day } from \"../../../../interfaces/weather_interface\";\nimport { DayForecast } from \"./DayForecast\";\nimport { HourlyForecast } from \"../HourlyForecast\";\n\nexport const WeeklyForecast = ({ weekly }: { weekly: Array<Day> }) => {\n\tconst [isHourlyForecastForDate, setIsHourslyForecastForDate] = useState<boolean>(false);\n\tconst [popupForecastIndex, setPopupForecastIndex] = useState(99);\n\treturn (\n\t\t<div className=\"weekly forecast-element\">\n\t\t\t{weekly.map(\n\t\t\t\t(dayForecast, index) =>\n\t\t\t\t\tindex > 0 && (\n\t\t\t\t\t\t<DayForecast\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tforecast={dayForecast}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tsetPopupForecastIndex={setPopupForecastIndex}\n\t\t\t\t\t\t\tsetIsHourslyForecastForDate={setIsHourslyForecastForDate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t)}\n\t\t\t{isHourlyForecastForDate && (\n\t\t\t\t<HourlyForecast\n\t\t\t\t\thourly={weekly[popupForecastIndex].hours}\n\t\t\t\t\tisPopup={isHourlyForecastForDate}\n\t\t\t\t\tdate={weekly[popupForecastIndex].datetime}\n\t\t\t\t\tsetIsPopup={setIsHourslyForecastForDate}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport { IWeather } from \"../interfaces/weather_interface\";\n\nconst initialState: Array<IWeather> = [];\n\nexport const forecasts = createSlice({\n\tname: \"forecasts\",\n\tinitialState,\n\treducers: {\n\t\taddForecast: (state, action: PayloadAction<IWeather>) => {\n\t\t\tstate.push(action.payload);\n\t\t},\n\t},\n});\nexport const forecastsReducer = forecasts.reducer;\nexport const { addForecast } = forecasts.actions;\n","import React, { useContext, useEffect, useLayoutEffect } from \"react\";\nimport { useGetForecastByCityQuery } from \"../../redux/api\";\nimport { locationsContext } from \"../../App\";\nimport { ISerializedError } from \"../../interfaces/api_interface\";\nimport { CityDate } from \"./components/city_date/CityDate\";\nimport \"./forecastPage.scss\";\nimport { CurrentConditionIcon } from \"./components/current_condition_icon/CurrentConditionIcon\";\nimport { IIconType } from \"../../interfaces/weather_interface\";\nimport { WindInfo } from \"./components/wind_info/WindInfo\";\nimport { HourlyForecast } from \"./components/HourlyForecast\";\nimport { WeeklyForecast } from \"./components/weekly_forecast/WeeklyForecast\";\nimport { useDispatch } from \"react-redux\";\nimport { addForecast } from \"../../redux/forecastsSlice\";\n\nexport const ForecastPage = ({ city }: { city: string }) => {\n\tconst { data, error, isError, isLoading, isFetching } = useGetForecastByCityQuery(city);\n\tconst { locations, setLocations } = useContext(locationsContext);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdata && dispatch(addForecast(data));\n\t}, [data]);\n\t//Deleting a city from the array if error.status === 400\n\tuseLayoutEffect(() => {\n\t\tif (isError) {\n\t\t\tif ((error as ISerializedError).originalStatus === \"400\") {\n\t\t\t\tconst newLocations = locations.filter((el) => el !== city);\n\t\t\t\tsetLocations(newLocations);\n\t\t\t}\n\t\t}\n\t}, [isError]);\n\n\treturn data ? (\n\t\t<div className=\"forecast\">\n\t\t\t<CityDate adress={data.resolvedAddress} />\n\t\t\t<div className=\"forecast_temp forecast-element\">\n\t\t\t\t<div className=\"forecast_temp_block\">\n\t\t\t\t\t{Math.floor(data.currentConditions.temp)}\n\t\t\t\t\t<span className=\"forecast_temp_deg\">°c</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CurrentConditionIcon condition={data.currentConditions.icon as IIconType} />\n\t\t\t<WindInfo\n\t\t\t\tdeg={data.currentConditions.winddir}\n\t\t\t\twindspeed={data.currentConditions.windspeed}\n\t\t\t\twindgust={data.currentConditions.windgust}\n\t\t\t/>\n\t\t\t<WeeklyForecast weekly={data.days} />\n\t\t\t<HourlyForecast hourly={data.days[0].hours} />\n\t\t</div>\n\t) : (\n\t\t<>Loading...</>\n\t);\n};\n","import React from \"react\";\r\n\r\nexport const WorldMapIcon = () => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tfill=\"white\"\r\n\t\t\tversion=\"1.1\"\r\n\t\t\tid=\"Capa_1\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\twidth=\"40px\"\r\n\t\t\theight=\"40px\"\r\n\t\t\tviewBox=\"0 0 125.762 125.762\"\r\n\t\t>\r\n\t\t\t<g>\r\n\t\t\t\t<g>\r\n\t\t\t\t\t<g>\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"52.688,20.209 52.762,20.738 51.982,20.898 51.867,22.017 52.822,22.017 54.081,21.9 54.732,21.127 \r\n\t\t\t\t54.035,20.856 53.653,20.423 53.08,19.513 52.822,18.202 51.748,18.421 51.449,18.882 51.449,19.393 51.962,19.756 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon points=\"51.787,20.641 51.838,19.937 51.221,19.67 50.34,19.868 49.689,20.908 49.689,21.589 50.45,21.589 \t\t\t\" />\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td=\"M33.574,24.122h-0.929v0.485h0.223c0,0,0.016,0.1,0.03,0.234l0.578-0.052l0.343-0.214l0.104-0.452l0.457-0.035\r\n\t\t\t\tl0.184-0.382l-0.428-0.092l-0.362,0.01L33.574,24.122z\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon points=\"31.327,24.971 32.012,24.914 32.068,24.441 31.66,24.122 31.366,24.504 \t\t\t\" />\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"102.764,47.568 100.77,47.628 100.691,46.543 101.014,46.683 101.795,46.592 101.715,45.598 99.548,45.624 \r\n\t\t\t\t98.961,44.842 98.988,44.424 96.205,41.918 95.508,42.46 99.502,47.33 100.064,47.518 100.064,47.781 99.312,47.781 \r\n\t\t\t\t99.502,48.388 104.391,48.602 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"106.244,42.136 105.906,41.998 105.748,41.161 105.256,41.161 104.943,42.002 104.57,42.336 101.74,43.877 \r\n\t\t\t\t101.74,45.395 102.681,46.643 105.062,46.643 105.371,45.867 105.906,45.379 105.906,45.022 106.244,44.808 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"108.006,44.808 106.574,45.36 106.604,45.678 106.244,45.678 106.244,47.657 106.967,47.657 106.867,46.395 \r\n\t\t\t\t107.43,46.604 107.43,47.488 108.025,47.448 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"120.057,56.79 119.664,55.192 118.208,53.943 118.092,51.562 117.138,49.916 116.273,49.87 115.915,52.859 \r\n\t\t\t\t114.273,52.74 113.796,52.457 113.751,51.278 114.615,51.458 115.357,50.736 113.781,49.786 111.941,49.786 110.613,51.676 \r\n\t\t\t\t110.08,51.676 110.08,51.08 108.479,51.193 105.966,54.053 104.63,54.083 103.143,55.097 103.048,59.544 102.143,60.409 \r\n\t\t\t\t102.143,61.19 106.48,59.703 109.98,59.563 111.279,62.423 115.264,62.558 119.104,58.947 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon points=\"111.806,64.626 113.214,64.772 114.348,64.149 114.378,63.289 113.129,63.155 \t\t\t\" />\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"125.359,60.722 124.773,60.837 124.756,59.514 123.677,59.583 123.533,61.653 122.589,62.299 120.833,62.538 \r\n\t\t\t\t118.018,64.542 117.546,64.935 117.546,65.601 119.007,65.382 122.585,63.194 123.588,62.528 124.667,62.05 125.762,61.434 \t\t\t\r\n\t\t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"114.293,45.946 113.383,45.976 113.458,45.026 112.588,44.514 111.363,45.748 112.189,46.762 113.975,47.021 \r\n\t\t\t\t114.969,47.543 114.999,48.03 114.343,48.03 114.378,49.034 116.535,48.896 117.32,48.055 118.172,47.976 118.172,49.518 \r\n\t\t\t\t119.629,49.518 119.629,48.896 118.887,48.896 118.764,47.021 115.264,45.433 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon points=\"88.322,41.456 88.665,42.376 89.895,41.918 90.018,40.646 89.038,40.457 \t\t\t\" />\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"73.869,52.173 72.193,51.955 72.193,53.257 72.795,53.953 72.337,54.659 71.656,55.441 71.656,56.878 \r\n\t\t\t\t72.586,57.773 73.422,56.425 75.068,54.013 75.854,50.223 74.854,50.223 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon points=\"108.363,48.174 107.807,48.174 107.807,48.468 108.234,48.602 \t\t\t\" />\r\n\t\t\t\t\t\t<rect x=\"105.256\" y=\"48.602\" width=\"0.657\" height=\"0.358\" />\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"106.843,48.96 107.246,48.96 107.246,48.646 107.545,48.602 107.545,48.294 106.896,48.294 106.629,48.602 \r\n\t\t\t\t106.244,48.96 106.244,49.273 106.843,49.218 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tpoints=\"108.509,49.25 109.16,49.25 109.16,48.911 109.609,48.96 109.549,48.388 108.812,48.503 108.742,48.872 \r\n\t\t\t\t107.918,48.96 107.877,48.96 107.877,49.527 108.509,49.527 \t\t\t\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td=\"M96.701,41.202l3.854,3.7l0.204-0.657l-3.133-4.456l0.329-1.303l1.651,1.875l0.92,0.094l1.213-0.806l-0.199-1.214\r\n\t\t\t\tl-2.01-1.608l-0.078-1.462l0.57-0.769l1.006,0.321l-0.075,0.687l0.577,0.892l0.513-0.368l-0.284-1.054l2.84-1.018l1.244-1.039\r\n\t\t\t\tl-0.193-1.88l-2.467-2.596l-0.046-2.114h1.095l3.412,2.596l0.965-0.253l-0.646-0.836l-1.824-1.111l0.114-1.654l2.164,0.005\r\n\t\t\t\tl0.175-2.047l-0.826-1.079l0.492-0.532l1.049,1.059l0.344-0.448l-1.367-1.541l-3.344-0.403l-0.447-0.895l0.97-1.383l0.767,0.576\r\n\t\t\t\tl2.316,0.2l2.915-1.947l0.487,0.606l-0.651,1.019v1.007l2.681,2.191l0.85-0.443l-0.317-1.462l-1.91-1.783l2.517-0.169v-0.726\r\n\t\t\t\tl1.209-0.246l-0.926-0.642l0.035-0.493L118,16.004l0.488-0.411l-3.457-1.457l-12.572-0.646l-1.17-0.597l-1.875-0.286\r\n\t\t\t\tl-1.396-0.045l-1.277,1.289l-0.533-0.041l-1.696-1.258h-4.993l-2.312-1.384l-4.635,0.291l-3.513,1.584l0.021,1.822l-1.088,0.327\r\n\t\t\t\tl-0.244-1.829l-0.409-0.631l-1.209-0.302l-0.283,1.095l0.354,0.898l-4.328-0.286l-2.059,0.952l-0.313-0.902l-0.522,0.134\r\n\t\t\t\tl-0.378,1.002l-1.079,0.846l-2.636-0.072l-0.124-0.584l2.766-0.117l0.562-0.485l-3.327-1.547l-4.054,0.122l-2.269,1.161\r\n\t\t\t\tl-0.856,1.524l-1.512,0.586l-0.631,0.692l0.145,0.8l0.78,0.107l0.472,1.171l1.323-0.54l0.234,1.562h-0.418l-1.088-0.162\r\n\t\t\t\tl-1.214,0.204l-1.174,1.659l-1.691,0.271l-0.238,1.438l0.717,0.167l-0.205,0.928L51.4,24.723l-1.531,0.331l-0.32,0.855\r\n\t\t\t\tl0.26,1.793l0.909,0.422l1.502-0.005l1.025-0.097l0.314-0.815l1.59-2.062l1.05,0.213l1.03-0.933l0.193,0.729l2.538,1.716\r\n\t\t\t\tl-0.314,0.417l-1.144-0.067l0.433,0.626l0.711,0.155l0.825-0.343l-0.014-0.997l0.373-0.185l-0.304-0.315l-1.696-0.943\r\n\t\t\t\tl-0.437-1.261h1.402l0.448,0.443l1.219,1.05l0.043,1.268l1.263,1.338l0.468-1.833l0.871-0.48l0.162,1.502l0.852,0.937\r\n\t\t\t\tl2.564-0.039l0.762,0.564v1.346l-0.936,0.85H64.91l-1.581-1.182l-1.661,0.167v1.014h-0.533l-0.566-0.408l-2.88-0.734v-1.863\r\n\t\t\t\tl-3.66,0.284l-1.135,0.607h-1.442l-0.715-0.071l-1.76,0.979v1.837l-3.601,2.604l0.303,1.104h0.726l-0.184,1.055l-0.512,0.194\r\n\t\t\t\tl-0.03,2.76l3.104,3.541h1.353l0.094-0.218h2.426l0.708-0.646h1.377l0.761,0.76l2.055,0.209l-0.269,2.741l2.282,4.033\r\n\t\t\t\tl-1.204,2.298l0.085,1.079l0.955,0.945v2.606l1.238,1.671v2.168h3.68l2.765-2.835l0.866-1.546l1.109-0.244V54.52l0.729-0.866\r\n\t\t\t\tl1.538-2.119l-0.32-3.213l-0.676-1.193l3.035-2.904l3.337-4.78l-0.638-0.303l-3.477,0.731l-0.9-0.443l-3.649-6.883l0.253-0.299\r\n\t\t\t\tl3.626,4.395l0.089,1.359l0.826,0.841l1.721-0.109l3.545-2.576l1.125-0.727l-0.019-0.898l-1.188-0.146\r\n\t\t\t\tc0,0-4.174-1.968-4.174-2.055c0-0.09,0.025-1.686,0.025-1.686h0.925l0.134,1.164l1.93,1.114l2.213,0.106l4.781,0.784l1.127,0.709\r\n\t\t\t\tv1.094l-0.145,1.494l2.463,4.034l0.78,0.184l0.796-1.149l0.434-3.267l0.82-1.759l1.316-0.494l2.322,0.224l2.93,2.599v3.72H96.701\r\n\t\t\t\tz M63.031,15.514l-1.6,0.987v0.646l0.904,0.423l0.07,0.878l-1.294,1.914l-2.238-0.022l-0.139-0.458l1.398-0.714l0.015-2.648\r\n\t\t\t\tl2.368-1.66h0.518v0.654H63.031z M68,26.799v-0.005l-2.107-0.091l-0.628,0.091v-1.435l0.474-0.534l0.506-0.16l1.125-0.127\r\n\t\t\t\tl0.238-0.383l0.461,0.227l0.061,1.313l1.229,0.505l0.104,0.6L68,26.799L68,26.799z M76.092,27.824h-0.005l-0.373,0.35\r\n\t\t\t\tl-0.853-0.064l-0.162-0.256l-1.338-0.103l0.094-0.427l0.717-0.61v-0.515l-1.363-0.985l-0.06-1.261l0.278-0.617l1.099-0.102\r\n\t\t\t\tl0.931,0.391l0.045,0.651l-1.332-0.074l-0.064,0.601l1.66,1.104v0.815l0.726,0.522L76.092,27.824L76.092,27.824z\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td=\"M40.224,45.842l-2.869-0.025l-2.274-0.865l-0.109-1.621l-0.76-1.329l-2.044-0.024l-1.194-1.871L29.919,39.6l-0.054,0.558\r\n\t\t\t\tl-1.92,0.119l-0.706-0.979L25.23,38.89l-1.652,1.905l-2.59-0.438l-0.189-2.929l-1.9-0.326l0.762-1.43l-0.22-0.826l-2.481,1.667\r\n\t\t\t\tl-1.567-0.189l-0.567-1.229l0.349-1.268l0.865-1.587l1.984-1.01h3.845l-0.01,1.171l1.383,0.637l-0.114-2.002l0.995-0.997\r\n\t\t\t\tl2.009-1.32l0.128-0.926l2.011-2.084l2.133-1.176l-0.191-0.151l1.437-1.361l0.533,0.137l0.244,0.306l0.546-0.611l0.125-0.063\r\n\t\t\t\tl-0.591-0.08L31.9,22.507v-0.593l0.318-0.263h0.716l0.329,0.142l0.278,0.564l0.343-0.05v-0.034l0.104,0.029l0.995-0.159\r\n\t\t\t\tl0.138-0.487l0.557,0.142v0.525l-0.521,0.368l0.079,0.584l1.811,0.555c0,0,0.005,0.01,0.005,0.02l0.413-0.035l0.03-0.779\r\n\t\t\t\tl-1.432-0.651l-0.085-0.383l1.189-0.408l0.049-1.131l-1.239-0.759l-0.08-1.914l-1.715,0.836h-0.621l0.163-1.46l-2.308-0.552\r\n\t\t\t\tl-0.964,0.723v2.221l-1.727,0.54l-0.696,1.447l-0.746,0.117v-1.845l-1.622-0.229l-0.81-0.524l-0.329-1.191l2.903-1.701\r\n\t\t\t\tl1.418-0.433l0.139,0.953l0.796-0.04l0.064-0.48l0.826-0.117l0.009-0.162l-0.348-0.154l-0.085-0.504l1.015-0.088l0.612-0.641\r\n\t\t\t\tl0.044-0.045v0.005l0.184-0.194l2.149-0.269l0.939,0.803l-2.486,1.321l3.158,0.743l0.404-1.06h1.387l0.481-0.917l-0.968-0.245\r\n\t\t\t\tv-1.161l-3.059-1.355L32,12.376l-1.199,0.622l0.09,1.518l-1.24-0.194l-0.189-0.835l1.18-1.084l-2.154-0.107l-0.628,0.182\r\n\t\t\t\tl-0.274,0.733l0.817,0.14l-0.165,0.813l-1.377,0.083l-0.214,0.534l-2.014,0.057c0,0-0.045-1.136-0.125-1.136\r\n\t\t\t\tc-0.085,0,1.567-0.024,1.567-0.024l1.193-1.167l-0.651-0.329l-0.865,0.845l-1.438-0.079l-0.86-1.193h-1.841l-1.923,1.437h1.76\r\n\t\t\t\tl0.163,0.514l-0.462,0.433l1.95,0.058l0.298,0.701l-2.193-0.088l-0.109-0.539L19.72,13.97l-0.731-0.4L15.74,13.6l-0.999,0.972\r\n\t\t\t\tl-0.681-0.058l-0.757-0.438l-2.243-0.672H6.947l-2.378,1.619l-1.597,0.247l-0.73,0.569l1.134,0.167v0.455H0.949L0,17.137\r\n\t\t\t\tl1.212,1.03l3.327,0.029l0.463-0.495h2.78l1.004,0.893l-0.06,1.385l0.847,0.783l-0.706,0.505l0.159,1.822l-2.511,3.057v2.867\r\n\t\t\t\tl1.347,0.652v2.573l1.31,2.213l1.043,0.159l0.135-0.758l-1.233-1.915l-0.244-1.865h0.731l0.313,1.92l1.8,2.623l-0.482,0.846\r\n\t\t\t\tl1.153,1.751l2.846,0.704v-0.458l1.133,0.156l-0.104,0.816l0.89,0.154l1.383,0.388l1.95,2.218l2.486,0.185l0.244,2.034\r\n\t\t\t\tl-1.705,1.188l-0.085,1.805l-0.238,1.115l2.461,3.083l0.189,1.049c0,0,0.896,0.244,0.995,0.244c0.109,0,2.009,1.438,2.009,1.438\r\n\t\t\t\tv5.565l0.676,0.199l-0.472,2.566l1.139,1.512l-0.205,2.545l1.498,2.646l1.929,1.682l1.931,0.035l0.193-0.617l-1.417-1.198\r\n\t\t\t\tl0.084-0.598l0.26-0.735l0.054-0.736l-0.97-0.029l-0.497-0.607l0.81-0.775l0.109-0.577l-0.895-0.253l0.049-0.543l1.274-0.188\r\n\t\t\t\tl1.934-0.925l0.652-1.194l2.028-2.606l-0.461-2.024l0.622-1.084l1.864,0.055l1.253-0.985l0.408-3.924l1.394-1.775l0.248-1.134\r\n\t\t\t\tl-1.274-0.408L40.224,45.842z M25.046,26.306h-1.035l0.166-0.704l0.487-0.052l0.109-0.239l0.741-0.102v0.632h0.004L25.046,26.306\r\n\t\t\t\tz M25.761,24.563l-0.488,0.316l-0.611,0.106c0,0,0-0.967,0-1.069h1.099V24.563z M26.686,23.815l0.502,0.306l-0.402,0.331\r\n\t\t\t\tl-0.383-0.331L26.686,23.815z M26.03,24.625h0.08l1.243,0.36v0.638h-1.044l-0.278-0.409L26.03,24.625L26.03,24.625z\r\n\t\t\t\t M25.219,22.877l0.672,0.612l-0.672,0.164V22.877z M22.375,22.979l0.934-0.386h1.284v0.386h0.278v0.674h-1.954l-0.722-0.199\r\n\t\t\t\tL22.375,22.979z M22.195,24.729l0.741-0.811h1.074l-1.377,1.925l-0.572-0.306L22.195,24.729z M21.201,20.145l0.766,0.177\r\n\t\t\t\tl-0.265,1.04l-0.831,0.267l-0.522-1.082L21.201,20.145z M17.346,15.234v-0.061h0.712l0.064-0.246h1.165v0.51l-0.344,0.442h-1.597\r\n\t\t\t\tV15.234z M18.476,16.817c0,0,0.716-0.126,0.771-0.126c0.055,0,0,0.713,0,0.713l-1.603,0.102l-0.302-0.363L18.476,16.817z\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\nimport { WorldMapIcon } from \"../../../../assets/icons/WorldMapIcon\";\nimport \"./mapBtn.scss\";\nexport const MapBtn = ({\n\tsetIsMap,\n}: {\n\tsetIsMap: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n\tconst [isActive, setIsActive] = useState<boolean>(false);\n\treturn (\n\t\t<button\n\t\t\tclassName={`map-button button ${isActive && \"active-btn\"}`}\n\t\t\tonClick={() => {\n\t\t\t\tsetIsActive((prev) => !prev);\n\t\t\t\tsetIsMap((prev) => !prev);\n\t\t\t}}\n\t\t>\n\t\t\t<span>map</span>\n\t\t\t<WorldMapIcon />\n\t\t</button>\n\t);\n};\n","import React from \"react\";\n\nexport const ArrowForwardIcon = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"40\"\n\t\t\tviewBox=\"0 -960 960 960\"\n\t\t\twidth=\"40\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nexport const ArrowBackIcon = () => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\theight=\"40\"\n\t\t\tviewBox=\"0 -960 480 960\"\n\t\t\twidth=\"40\"\n\t\t\tfill=\"white\"\n\t\t>\n\t\t\t<path d=\"M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z\" />\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\nimport { ArrowForwardIcon } from \"../../../../assets/icons/ArrowForwardIcon\";\nimport \"./arrowBtn.scss\";\nimport { ArrowBackIcon } from \"../../../../assets/icons/ArrowBackIcon\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../../../redux/store\";\n\ntype Direction = \"left\" | \"right\";\nconst BUTTONS_WIDTH = 110;\n\nexport const ArrowBtn = ({\n\tdirection,\n\tsetTranslate,\n\tcounter,\n\tsetCounter,\n}: {\n\tdirection: Direction;\n\tsetTranslate: React.Dispatch<React.SetStateAction<number>>;\n\tcounter: number;\n\tsetCounter: React.Dispatch<React.SetStateAction<number>>;\n}) => {\n\tconst forecasts = useSelector((state: RootStore) => state.forecastsReducer);\n\tconst windowWidth = window.innerWidth;\n\tconst onClick = () => {\n\t\tif (counter < forecasts.length - 1 && direction === \"right\") {\n\t\t\tsetTranslate((prev) => prev - windowWidth + BUTTONS_WIDTH);\n\t\t\tsetCounter((prev) => prev + 1);\n\t\t} else if (counter > 0 && direction === \"left\") {\n\t\t\tsetTranslate((prev) => prev + windowWidth - BUTTONS_WIDTH);\n\t\t\tsetCounter((prev) => prev - 1);\n\t\t}\n\t};\n\treturn (\n\t\t<button className={`arrow-btn ${direction}`} onClick={() => onClick()}>\n\t\t\t{direction === \"right\" ? <ArrowForwardIcon /> : <ArrowBackIcon />}\n\t\t</button>\n\t);\n};\n","import React from \"react\";\n\nexport const WorldMap = () => {\n\treturn (\n\t\t<>\n\t\t\t<svg version=\"1.0\" id=\"svg2982\" viewBox=\"0 0 800 400\">\n\t\t\t\t<g id=\"Europe\">\n\t\t\t\t\t<g id=\"Ex-Yougoslavie\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Montenegro\"\n\t\t\t\t\t\t\td=\"m 443.617,107.095 c -0.58587,-0.0573 -0.64537,-0.70964 -1.18553,-0.88527 -0.40767,-0.1106 -0.84987,-0.23605 -0.83348,-0.69273 0.54261,-0.16672 -0.12092,-0.55567 0.056,-0.938 0.49928,-0.0583 0.29395,-0.53816 0.71919,-0.73283 0.27056,-0.0869 0.85727,0.36849 0.44182,-0.22817 -0.20019,-0.45857 0.57497,-0.17693 0.77658,-0.0187 0.40889,0.19956 0.61912,0.65527 1.11912,0.69779 0.3716,0.0111 0.5794,0.4168 1.01531,0.44892 0.30886,0.39423 -0.61106,0.22431 -0.72432,0.44225 0.57417,0.21297 -0.10209,0.6859 -0.49925,0.41687 -0.54008,-0.28334 -0.93321,0.36982 -0.98902,0.80271 0.0919,0.22658 0.13151,0.44312 0.10358,0.68717 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Slovenie\"\n\t\t\t\t\t\t\td=\"m 430.73001,96.731003 c 0.54911,-0.02377 1.05287,0.140292 1.57435,0.166769 0.56964,0.304281 0.8558,-0.192912 1.36423,-0.384781 0.50476,-0.229559 1.11475,0.225166 1.53942,-0.189993 0.75256,0.241685 0.78992,0.0026 1.06794,-0.335892 0.64834,-0.362947 0.59014,0.623356 1.10106,0.82489 -0.55377,-0.456112 -0.54604,0.314582 -0.931,0.162003 -0.26069,0.433928 -0.95132,0.218255 -1.18402,0.613998 0.39367,0.210445 0.28419,0.800842 -0.20652,0.67538 -0.57056,0.09962 -0.35009,0.287367 -0.43833,0.583296 0.15602,0.453946 -0.5126,0.237579 -0.73915,0.139327 -0.27976,0.114837 -0.64734,0.01808 -0.83298,-0.296997 -0.20167,-0.0043 -0.49172,0.520502 -0.92202,0.323997 -0.3968,-0.06533 -0.53916,0.04864 -0.91307,0.06566 -0.93053,0.02794 0.0489,0.04944 0.0881,-0.471654 -0.67527,-0.158697 -0.51631,-0.654234 -0.78282,-0.812497 0.88443,-0.386104 -0.89204,-0.43472 0.0335,-0.725786 0.21296,-0.118495 0.39701,-0.09963 0.1813,-0.337716 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Croatie\"\n\t\t\t\t\t\t\td=\"m 439.573,104.709 c -0.45164,-0.28499 -0.93768,-0.57959 -1.32328,-0.91061 -0.60325,0.0407 -1.0528,-0.57943 -1.64575,-0.31723 -0.55736,0.24114 -0.68085,-0.69654 -1.28413,-0.74727 -0.39551,-0.13602 -1.00568,-0.73663 -0.98801,-0.95364 0.71909,0.0398 0.91887,0.0406 0.14079,-0.25176 -0.47095,-0.2448 -0.95551,-0.70276 -0.68362,-1.27649 -0.32461,-0.424511 -0.80242,-0.729536 -1.31299,-0.879998 -0.19803,0.50232 -0.38141,0.820488 -0.74776,1.101958 -0.35119,0.39825 -0.76243,-0.44936 -0.83225,-0.782958 -0.40696,-0.638043 -0.14557,-0.587227 0.42199,-0.633003 0.34166,-0.01598 0.51291,-0.05515 0.914,-0.063 0.4567,0.339173 0.64859,-0.600514 0.887,-0.216004 0.2137,0.394821 0.59848,0.187127 0.91185,0.243004 0.28094,0.232733 0.81261,0.106411 0.55317,-0.289001 0.0565,-0.228247 0.10707,-0.442448 0.64616,-0.493275 0.62791,0.0186 -0.0275,-0.600377 0.11382,-0.778728 0.34862,-0.172215 0.84703,-0.12706 1.103,-0.477997 0.37819,0.15102 0.37227,-0.621538 0.931,-0.162003 0.70713,0.554644 1.6688,0.701688 2.38847,1.266829 0.74073,0.489415 1.74195,0.314619 2.53954,0.05946 0.60398,-0.06916 0.14232,0.739782 0.4735,0.751431 0.38098,0.07288 -0.28073,0.456185 0.38249,0.599281 0.51583,-0.03645 0.73964,0.350636 0.113,0.143997 -0.29109,0.09867 -0.24515,0.654667 -0.359,0.769007 -0.55926,0.20462 -0.54245,-0.28392 -0.82987,-0.457011 -0.39922,0.01492 -0.84017,-0.173806 -1.26333,-0.05228 -0.38476,-0.08779 -0.73375,0.113001 -1.16578,-0.06172 -0.4769,-0.100738 -0.81125,-0.02397 -1.24363,-0.209011 -0.37466,-0.03707 -0.81747,-0.01601 -1.20417,0.06273 -0.23299,0.544032 -0.76716,0.393522 -1.02321,-0.06571 -0.71929,-0.2753 -0.41398,0.618272 -0.61401,0.847002 0.2393,0.31769 0.74383,0.40463 0.883,0.87 0.13049,0.39263 0.15525,0.52022 0.535,0.87 0.59534,0.0301 0.65409,0.67284 1.14437,0.84584 0.3512,0.36458 0.8711,0.40361 0.95848,0.9043 0.17306,0.16874 1.26037,0.63824 0.48016,0.74386 z m 0.21899,0.124 c 0.38018,-0.33435 0.66503,0.39113 1.1056,0.32849 0.28796,0.33898 0.75702,0.16408 0.82113,0.68125 -0.19531,0.1396 -0.8035,-0.47049 -1.13773,-0.63074 -0.26271,-0.12651 -0.52778,-0.25155 -0.789,-0.379 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Serbie\"\n\t\t\t\t\t\t\td=\"m 451.009,101.725 c -0.28117,0.41826 -1.0109,0.71046 -0.83499,1.293 0.426,0.41442 1.00548,0.74421 1.33832,1.20999 -0.0919,0.6869 -1.40433,0.48756 -1.29849,1.31453 0.20012,0.60312 -0.45994,0.49376 -0.81485,0.53948 -0.36555,0.0207 -0.71828,0.20122 -1.13611,0.13914 -0.35618,0.37917 -0.39295,0.25841 -0.81287,0.15786 -0.64375,-0.0484 -0.61353,0.56023 -0.98272,0.688 -0.45243,-0.35657 -0.79643,-1.07665 -1.34128,-1.397 0.23349,-0.4404 -0.41341,-0.65974 0.37698,-0.587 0.55763,-0.12643 0.16806,-0.47618 -0.24698,-0.468 -0.25996,-0.41653 -0.7226,-0.277 -1.10631,-0.54661 -0.0655,-0.39521 -1.1174,-0.48591 -0.70194,-0.75872 0.32266,-0.0404 0.77419,-0.15767 0.30931,-0.59134 -0.72945,-0.58051 -0.1232,-0.1865 0.34913,-0.39665 0.0744,-0.17367 -0.58018,-0.39127 -0.67793,-0.60508 -0.53687,0.0599 -0.40196,-0.60119 -0.0976,-0.79925 0.47964,-0.3732 0.14849,-0.86125 -0.36075,-0.53735 -0.0501,0.0222 0.0973,-0.572448 0.2481,-0.751002 0.62088,0.238524 0.53885,-0.142032 -0.0238,-0.132996 -0.59992,-0.135217 -0.19881,-0.456613 -0.35713,-0.612999 -0.3472,0.06784 -0.0926,-0.745069 -0.36299,-0.795955 0.97198,-0.381297 1.99216,-0.710406 3.04884,-0.524682 0.26203,0.257885 0.70133,0.485549 1.09861,0.754224 0.0775,0.331914 0.0935,0.799801 0.67835,0.975571 0.27976,0.207733 1.43891,0.227347 0.80166,0.674562 0.37168,0.293997 0.0981,0.120477 -0.0415,0.550277 0.49571,0.0897 0.75384,0.24618 1.28698,0.423 0.48379,0.60286 0.65018,-0.3135 1.11161,-0.25923 0.93411,0.30399 0.36539,0.23282 0.0214,0.61548 0.0402,0.3015 0.30836,0.33136 0.52905,0.42875 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Macedoine\"\n\t\t\t\t\t\t\td=\"m 451.51199,108.463 c -0.56702,0.13335 -1.05493,0.54828 -1.66098,0.351 -0.58029,-0.24 -0.86034,0.42456 -1.29375,0.58862 -0.51905,0.0761 -1.20065,0.40201 -1.58207,-0.10577 -0.62753,-0.43167 -0.91116,-1.35093 -0.62219,-2.05985 0.1482,-0.14221 0.3771,-0.46509 0.68309,-0.72736 0.31612,-0.38182 0.9011,0.16272 0.8929,-0.0846 0.3173,-0.39786 0.83105,-0.0322 1.15254,-0.32791 0.33101,-0.0299 0.73518,-0.03 1.11647,-0.0981 0.0455,0.56171 0.88541,0.4343 1.09636,0.93954 0.42274,0.42299 0.2212,1.00764 0.21047,1.4994 l 0.006,0.0261 10e-4,-0.001 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Bosnie Herzegovine\"\n\t\t\t\t\t\t\td=\"m 439.79199,104.833 c -0.21085,-0.14202 0.21276,-0.46273 -0.45858,-0.71283 -0.46293,-0.20863 -0.34505,-0.76171 -0.94941,-0.82317 -0.42162,-0.34626 -0.73339,-0.57948 -1.05999,-1.003 -0.44338,-0.0846 -0.82423,-0.48343 -0.76341,-0.76551 -0.1992,-0.34146 -0.42429,-0.74482 -0.8326,-0.88549 -0.14925,-0.1619 -0.18896,-0.852139 0.14599,-1.047999 0.43825,-0.11985 0.81621,0.897199 1.14902,0.290001 0.25569,-0.500782 0.84168,-0.07302 1.18318,-0.324105 0.44526,0.229456 0.75497,0.152483 1.19101,0.260342 0.44192,-0.04859 0.85929,0.273501 1.24164,-0.0022 0.37565,0.111869 0.83525,0.03363 1.20483,0.09725 0.52322,-0.08359 0.34383,0.535761 0.80532,0.528751 0.31523,-0.0555 1.15925,-0.39499 0.86902,0.222 -0.23022,0.31679 -0.58749,0.60669 -0.40236,0.97306 0.44438,-0.006 0.54901,0.45478 0.98335,0.55394 0.25925,0.46544 -0.98392,-0.0452 -0.67099,0.268 0.34033,0.0422 0.82412,0.90563 0.27899,0.749 -0.19123,0.26188 -1.04991,0.0132 -0.92192,0.37938 0.45556,0.58413 -0.1061,0.22238 -0.40508,0.25862 -0.43135,0.15999 -0.18981,0.68527 -0.69166,0.70074 -0.2814,0.35741 0.49265,0.80268 -0.0953,0.96426 -0.41881,-0.10666 -0.69951,-0.40109 -1.15598,-0.499 -0.20421,-0.12078 -0.39345,-0.50911 -0.64502,-0.182 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Albanie\"\n\t\t\t\t\t\td=\"m 445.29401,112.196 c -0.12794,-0.54627 -0.50115,-0.97238 -1.01809,-1.20965 -0.84913,-0.34707 -0.38942,-0.3571 -0.49268,-0.81986 -0.58576,-0.37369 0.4855,-0.79646 0.0329,-1.19776 0.37922,-0.45754 -0.46752,-1.0437 0.34654,-1.2321 0.26188,-0.66574 -0.78417,-0.39005 -0.57011,-1.06846 -0.24839,-0.40446 0.19374,-1.11835 0.62112,-1.10358 0.48541,0.11826 1.05985,-0.0294 1.35232,0.47841 0.36864,0.47205 1.06236,0.9553 0.65399,1.622 -0.001,0.73992 0.33991,1.44062 0.98366,1.82408 0.062,0.2484 -0.38077,0.92201 -0.68502,1.21007 -0.51582,0.42273 -0.8841,0.92722 -1.22463,1.49685 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<g id=\"Ex-URSS\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Lituanie\"\n\t\t\t\t\t\t\td=\"m 451.01999,79.165001 c -0.4204,-0.493677 0.64572,-0.881781 0.0442,-1.149497 -0.38868,-0.265963 -0.78492,-0.312131 -1.30748,-0.259507 -0.42452,0.01011 -0.94578,-0.163795 -1.39259,-0.308998 -0.24979,-0.328251 -1.00317,0.135948 -0.64217,-0.348 -0.4041,-0.422505 -0.52178,-0.942168 -0.48898,-1.513 0.032,-0.05933 0.64559,-0.430708 1.06857,-0.535967 0.68204,-0.159698 1.35972,-0.43691 2.0591,-0.256026 0.46576,0.138933 1.02301,-0.227739 1.37465,0.122038 0.4837,-0.198734 0.98916,0.116905 1.48148,-0.03753 0.5369,-0.06766 0.99339,0.294803 1.51089,0.117486 0.42221,0.208563 1.01338,-0.560296 1.23171,-0.104488 0.42741,0.685846 1.42761,0.162816 1.94761,0.705486 0.49877,0.145615 0.88292,0.477148 1.28642,0.727946 0.83441,-0.148572 0.18269,0.601699 0.22299,0.787816 0.77554,-0.05587 0.51068,0.285474 0.11657,0.504235 -0.53555,-0.360425 -0.72313,0.421751 -1.25668,0.341003 -0.62794,-0.08485 -0.5076,0.669638 -0.66798,0.938122 -0.68275,0.482066 0.29116,0.3842 0.13974,0.86647 -0.5153,0.346308 -0.46961,-0.630155 -0.92007,-0.195591 -0.40254,0.0252 -0.74293,0.275814 -1.21399,0.292 0.21923,0.482496 -0.75102,0.300462 -1.05172,0.496002 -0.35562,-0.267206 -0.88166,-0.0064 -1.33379,-0.07263 -0.52877,0.151248 -0.55481,-0.563723 -0.83506,-0.860886 -0.425,-0.231371 -0.89484,-0.345274 -1.37345,-0.256489 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Estonie\"\n\t\t\t\t\t\t\td=\"m 462.82901,67.958 c 0.71388,0.315139 -0.11586,0.373402 -0.34198,0.526239 -0.13047,0.54565 -0.78354,0.539015 -1.02704,0.952757 0.19149,0.499419 0.23203,0.927702 0.14036,1.323051 0.23503,0.231959 0.7982,0.679796 0.52965,0.802957 -0.49092,0.0033 -0.79226,0.4978 -0.86513,0.705421 -0.46695,0.0013 -0.87799,-0.310853 -1.30488,-0.152428 -0.37906,0.233547 -0.94513,0.08934 -1.194,-0.262001 -0.39036,-0.260816 -0.80212,-0.350943 -1.26747,-0.445998 -0.43599,-0.270672 -0.789,-0.206175 -1.09981,-0.338093 -0.54744,0.208354 -1.21217,0.157662 -1.7207,0.436092 0.29841,-0.347109 0.42115,-1.254037 -0.24809,-0.832926 -0.31614,0.45941 -1.07253,-9.03e-4 -1.24182,-0.185584 0.24396,-0.962262 -0.24417,-0.409289 -0.64065,-0.921753 0.0262,-0.390921 -0.0635,-0.673599 0.24195,-0.873273 0.5435,-0.05789 1.08849,-0.03786 1.44933,-0.286849 0.44819,-0.211662 0.78574,-0.224917 1.25926,-0.207614 0.20226,-0.54714 1.03728,0.273291 1.40956,-0.168692 0.33,-0.122032 0.84539,-0.0041 1.36142,-0.06013 0.83893,-0.03419 1.68398,0.139001 2.48421,0.291356 0.68568,-0.154692 1.58487,0.358597 2.07583,-0.302532 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Lettonie\"\n\t\t\t\t\t\t\td=\"m 461.353,72.250999 c 0.45692,-0.07038 0.48856,0.455031 1.04891,0.510597 -0.13382,0.424159 -0.22578,0.464362 -0.37516,0.890114 0.0721,0.08782 0.60731,0.133641 0.71226,0.50029 0.2231,0.343811 0.50296,0.507657 0.43598,1.017998 -0.2367,0.336147 -0.87991,0.259053 -1.17398,0.647003 -0.12109,0.611081 -0.79399,0.187179 -1.21785,0.240998 -0.46105,-0.05421 -0.73311,0.413246 -1.19963,0.31679 -0.56814,0.104401 -0.76402,-0.487094 -1.25959,-0.59316 -0.4733,-0.194006 -0.85205,-0.559122 -1.40101,-0.476601 -0.5631,0.135417 -0.8678,-0.480911 -1.20693,-0.567029 -0.46136,0.291235 -1.02211,0.255117 -1.52174,0.311344 -0.6414,-0.347819 -1.34406,0.0042 -2.00627,-0.226345 -0.47843,0.244248 -0.74964,-0.253235 -1.25,-0.018 -0.66545,0.02989 -1.31142,-0.204848 -1.953,0.069 -0.42001,0.20392 -1.17276,0.07155 -1.33698,0.582 -0.80708,0.281565 -0.54051,-0.547948 -0.49755,-1.046519 0.0638,-0.552594 1.05812,-0.436619 0.83457,-1.11523 0.0219,-0.415732 0.58206,-0.773634 0.94098,-0.926797 0.60821,-0.05143 1.196,-0.276461 1.79298,-0.321457 0.0793,0.531782 0.85323,0.546006 1.16685,0.866905 0.19551,0.848887 1.25298,0.903828 1.93584,0.677875 0.47595,-0.04596 1.03946,-0.373435 0.80631,-0.927776 -0.12995,-0.470283 -0.35435,-1.086055 0.25302,-1.269005 0.49476,-0.165003 1.03309,-0.151309 1.51499,-0.334999 0.32511,0.155097 0.65297,0.04732 1.09273,0.338501 0.44629,0.08772 0.85865,0.168273 1.22821,0.418234 0.25747,0.350169 0.80954,0.519686 1.19629,0.305976 0.44062,-0.143601 0.83854,0.0812 1.31376,0.14429 -0.0233,0.08339 0.1327,-0.07588 0.12601,-0.015 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Ukraine\"\n\t\t\t\t\t\t\td=\"m 452.99799,85.535004 c 0.21085,-0.465245 0.89711,0.183015 1.23806,-0.287414 0.3838,-0.291352 0.68214,-0.680256 1.28569,-0.484771 0.52041,-0.0026 1.02644,-0.131887 1.54879,-0.03882 0.51317,-0.06728 1.05795,-0.06641 1.5382,0.05532 0.43961,0.208105 0.98683,0.130022 1.48504,0.260891 0.48907,0.07829 0.93411,-0.0539 1.03923,0.349642 0.27576,0.03183 1.05488,-0.183344 1.00799,0.322146 0.18279,-0.53428 0.66302,0.02196 1.04602,-0.353996 0.37973,0.350037 0.8185,0.07394 1.177,0.43 0.27621,-0.306457 1.00067,-0.626518 1.15477,-0.06157 0.22633,0.482319 0.85871,-0.265707 1.1749,0.07493 0.45031,-0.0817 1.0805,-0.272003 1.34932,0.248638 0.97416,0.29622 0.009,-0.534386 0.43385,-0.806735 0.3519,-0.334808 0.67143,-0.766422 1.13515,-0.873265 0.48811,0.16405 0.91716,-0.221553 1.47023,-0.08973 0.51075,0.141828 1.24579,0.243531 1.43251,-0.414747 0.2314,-0.366996 0.8882,0.337092 1.33486,-0.02065 0.54571,-0.338096 1.1477,0.103151 1.70741,-0.188886 0.39156,0.343464 0.72948,0.721526 1.11811,1.080749 0.93407,0.431024 -0.32826,0.336217 -0.21679,0.710663 0.0885,0.547407 0.48314,0.941761 1.06162,0.776589 0.28596,0.323277 1.21277,-0.311047 1.07505,0.378998 0.49251,-0.13748 0.62012,0.672325 0.63589,1.030122 0.17297,0.494444 0.62484,0.687104 1.08099,0.406267 0.51032,-0.151371 0.82692,0.47125 1.32049,0.283287 0.37032,0.332197 0.89985,-0.171058 1.36003,-0.110774 0.43102,-0.197782 0.97722,-0.185623 1.09961,0.311104 0.29135,0.327132 0.76029,0.577353 1.1893,0.573462 0.33601,-0.584415 0.74497,0.17046 1.28554,0.09281 0.4577,0.216501 0.90093,0.04497 1.29208,0.34669 0.59197,-0.117014 0.74416,0.517053 1.32461,0.43903 0.64732,-0.351906 0.25901,0.211964 0.58346,0.514 0.0349,0.507387 -1.16113,0.458094 -0.95164,0.756659 0.54016,0.226057 0.86704,0.431067 0.0389,0.403345 -0.44837,0.40242 0.36316,0.508216 0.33931,1.012182 0.0943,0.368165 -0.1423,1.076997 -0.5586,1.175807 -0.59486,-0.181772 -1.20295,-0.138463 -1.81501,-0.109994 -0.07,0.564882 -0.81979,0.416388 -1.206,0.603005 -0.13323,0.469579 0.0832,1.190799 -0.65142,1.046546 -0.61275,0.09851 -1.30406,-0.05927 -1.73258,0.498452 -1.13425,0.393777 -2.48085,0.06647 -3.48501,0.830002 -0.53961,0.293757 -0.98755,-0.66628 -1.18832,0.201283 -0.43744,0.698431 -1.36868,0.213904 -2.03212,0.360682 -0.9055,0.01005 -0.65851,0.3142 0.0505,0.536146 0.59019,0.351165 1.32324,0.582517 1.82506,1.007793 -0.24268,0.5586 0.50125,0.659276 0.91715,0.495378 0.78118,-0.229037 1.62959,-0.309079 2.41868,-0.08328 -0.26489,0.433065 -0.58221,0.7837 -1.147,0.764 -0.58374,0.07278 -1.25855,-0.383967 -1.73986,0.16799 -0.57393,0.52636 -1.54692,0.005 -2.08471,0.65112 -0.46634,0.66058 -1.33821,0.34194 -1.97441,0.16689 0.27304,-0.44162 0.56415,-1.04606 0.0274,-1.423563 -0.56889,-0.266259 -1.22351,-0.432913 -1.85039,-0.26644 -0.31044,-0.389627 0.73179,-0.606455 1.05637,-0.825481 0.32532,-0.290205 1.47313,-0.107573 1.18191,-0.666562 -0.27387,-0.525629 -1.03636,-0.193323 -1.5318,-0.244082 -0.75316,0.04435 -1.6894,0.14727 -2.1485,-0.595876 0.7425,-0.170611 0.47696,-0.844694 -0.008,-0.948629 -0.35298,0.514215 -1.03766,0.204301 -1.5581,0.403221 -0.54901,0.02994 -1.04568,0.209518 -1.3552,0.686859 -0.59582,0.564089 -1.17484,1.231126 -2.04562,1.296754 -0.7784,0.191667 0.16665,1.084827 -0.60261,0.70075 -0.48243,-0.156592 -0.88689,0.364788 -1.39121,0.211052 -0.0944,0.394599 -1.07538,0.135831 -1.159,-0.273003 -0.38158,-0.141061 0.88478,0.123034 0.4792,-0.45775 0.46697,-0.08163 0.43695,-0.620035 0.84844,-0.631972 0.29946,-0.189299 0.26721,-0.64389 0.0573,-0.982659 0.3448,-0.410227 0.6891,-0.214765 0.84003,0.05038 0.0811,-0.462417 0.58543,0.199969 0.8184,-0.02323 0.31437,-0.178257 0.36103,0.272532 0.88461,0.06323 0.19456,-0.197979 -0.63386,-0.271222 -0.22602,-0.655999 0.0585,-0.522806 -0.89278,-0.392342 -0.819,-0.781997 -0.31103,-0.107608 0.14889,-0.504072 -0.15183,-0.706002 -0.27017,0.17809 -0.94008,-0.272934 -0.82528,-0.546871 0.16935,-0.415013 0.25662,-0.563529 -0.0309,-0.865131 -0.51233,0.348275 -0.59926,-0.408961 -1.06878,-0.402912 -0.49211,0.0574 -0.70125,0.146634 -0.72207,-0.175083 -0.42025,0.128273 -0.71996,-0.20172 -1.07723,-0.357873 -0.36364,-0.188824 -0.73754,-0.06875 -1.13091,-0.08313 -0.2922,0.419658 -1.05286,-0.159078 -1.17462,0.24035 -0.26418,0.106813 -0.9681,0.04099 -1.1348,0.447427 -0.46953,0.483621 -1.28424,0.247421 -1.90458,0.401865 -0.48056,-0.123405 -0.84837,0.732988 -1.28136,0.295494 -0.42101,-0.216878 -0.61984,-0.342392 -1.23312,-0.298389 -0.66581,0.0653 -1.33483,-0.330231 -1.95834,-0.13925 -0.57207,-0.107505 -1.04173,0.0072 -1.5132,-0.409495 -0.41597,-0.14928 -1.14372,-0.426025 -1.33648,-0.558386 0.33183,-0.466205 0.66365,-0.93241 0.99548,-1.398615 1.01363,0.178287 0.23838,-0.193957 0.26871,-0.807846 -0.0186,-0.661544 0.79955,-0.870997 1.1795,-1.308031 0.53097,-0.359223 1.03077,-0.964035 1.7168,-0.917128 0.82158,-0.312008 -0.54877,-0.990714 0.28415,-1.031382 -0.32714,-0.205112 -0.75591,-0.689523 -1.09714,-1.033613 0.0904,-0.191113 0.0861,-0.291021 -0.094,-0.418998 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Bielorussie\"\n\t\t\t\t\t\t\td=\"m 452.867,80.273003 c 0.48568,0.09668 1.0343,-0.07858 1.51401,-0.016 0.34053,0.259863 0.93977,-0.145213 1.29429,-0.179028 -0.22068,-0.562239 0.76701,-0.03755 0.86169,-0.539974 0.55613,-0.158071 0.62813,0.06424 1.01369,0.267493 0.77625,-0.263239 -0.55923,-0.36984 -0.10668,-0.750347 0.4728,-0.225201 0.0474,-0.795994 0.56965,-1.080805 0.59798,0.21933 0.77082,-0.510181 1.27935,-0.387345 0.28229,0.156336 1.03096,-0.482502 0.39013,-0.441696 -0.62462,0.161657 2.8e-4,-0.714788 0.16152,-0.792831 0.44887,-0.04833 0.77512,-0.464446 1.29145,-0.259739 0.57833,0.244215 0.79398,-0.105063 1.119,-0.486502 0.43329,-0.288836 0.88665,-0.22265 1.31089,-0.106427 0.50029,-0.37261 0.75343,0.443512 1.19703,0.178559 0.29588,-0.08948 1.24213,-0.07372 1.08392,0.229554 -0.3028,0.565931 0.51088,0.402754 0.80116,0.235822 0.45452,-0.176334 0.88723,-0.155563 1.37955,-0.05997 0.41171,0.131289 0.82888,0.497769 1.19818,0.550978 -0.37512,0.504102 0.10957,0.763179 0.11316,1.201254 -0.57907,0.239706 -0.31794,0.564568 0.1186,0.828345 0.50488,-0.04725 0.0274,0.410151 0.57342,0.651658 0.17544,0.587151 1.06227,0.334858 1.29699,0.837997 -0.47147,0.64831 0.40612,0.300798 0.75601,0.444001 0.82489,0.02527 0.25627,0.386931 0.83899,0.625 0.79087,0.230572 -0.29924,0.429827 -0.55657,0.681773 -0.52199,0.273166 -1.11867,0.175606 -1.62904,-0.01416 -0.57388,-0.210401 -0.89962,0.582728 -0.28266,0.773448 0.3014,0.285051 0.19871,0.58416 0.30851,1.069834 0.19409,0.394572 0.64386,0.652002 -0.21959,0.562583 -0.44741,0.220905 -0.98301,-0.06382 -1.33064,0.289519 -0.30791,0.276799 -0.96444,0.631006 -0.86611,1.047287 0.61096,0.568156 -0.41235,0.58857 -0.65336,0.132644 -0.43639,-0.21468 -0.95352,0.205139 -1.32778,-0.05072 -0.50652,0.331677 -0.8671,0.156311 -1.12088,-0.305478 -0.41462,-0.124179 -0.9133,0.672023 -1.14887,0.202271 -0.52935,0.02538 -0.77778,-0.313412 -1.3093,-0.08935 -0.38827,-0.406461 -0.74394,0.57203 -0.68872,-0.07965 -0.43702,-0.213672 -1.03688,0.187887 -1.15047,-0.219535 -0.1655,-0.310784 -0.88796,-0.04798 -1.29882,-0.23517 -0.52101,-0.04294 -0.9731,-0.181142 -1.46417,-0.250881 -0.60132,-0.137274 -1.221,0.08482 -1.82829,-0.04457 -0.53912,0.190574 -1.14728,-0.04525 -1.65687,0.139033 -0.25022,0.372306 -0.7792,0.745962 -1.21307,0.557122 -0.63081,0.09647 -0.70459,0.129577 -0.38001,-0.553652 0.2872,-0.51856 -0.45459,-0.899475 -0.90383,-0.903718 -0.22751,-0.296742 0.54915,-0.857098 0.96718,-0.874672 0.75222,0.114374 0.70132,-0.687995 0.39796,-1.134375 -0.23198,-0.548147 -0.4416,-1.125301 -0.7006,-1.64958 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Moldavie\"\n\t\t\t\t\t\t\td=\"m 459.71701,92.835999 c 0.37158,-0.214197 0.53601,-0.311718 1.07989,-0.228772 0.39384,0.05947 0.73119,-0.305143 1.1412,-0.128949 0.3881,-0.05594 0.78814,0.244858 1.10473,0.443552 0.53253,-0.05532 0.46282,0.07044 0.61916,0.264167 0.29237,-0.164528 0.97846,-0.20038 1.07,0.339005 0.40703,-0.0602 0.84924,0.05514 0.70948,0.36673 -0.01,0.341115 -0.40564,0.808734 0.27353,0.919265 0.26579,0.265055 0.72701,-0.04135 0.492,0.541 -0.0682,0.124004 0.10503,0.527366 0.55301,0.631005 0.59841,0.0581 0.0976,0.702835 0.36929,0.809043 0.64437,0.266489 -0.14194,0.264795 -0.41931,0.288956 0.034,-0.508995 -0.58939,0.346304 -0.69498,-0.264 -0.47652,0.09249 -0.44072,0.289246 -0.67901,-0.152 -0.76765,0.0643 -0.33064,0.551021 -0.44388,0.940607 0.15356,0.448141 -0.58393,0.241582 -0.57812,0.710394 -0.5983,0.01962 -0.20506,0.756934 -0.75627,0.644844 -0.47158,0.156744 -0.60172,-0.232084 -0.47862,-0.589572 -0.36476,-0.799622 0.60586,-1.581145 0.0765,-2.354962 -0.0568,-0.638902 -0.81979,-0.560614 -1.08959,-1.057147 -0.6058,-0.570071 -1.06218,-1.256992 -1.49906,-1.959165 -0.28234,-0.05872 -0.56074,-0.246559 -0.84998,-0.164001 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Italie\"\n\t\t\t\t\t\td=\"m 420.177,113.472 c -0.5271,-0.0514 -1.22426,-0.58768 -0.87271,-1.16349 0.19398,-0.72004 0.31313,-1.6351 -0.13103,-2.2595 -0.57533,-0.24805 -0.53397,-0.94783 0.17258,-0.76612 0.74796,0.16578 1.32082,-0.35148 1.91216,-0.71589 0.45659,0.45371 1.07021,0.96972 1.07,1.65 -0.50616,0.4841 -0.25308,1.16051 -0.21823,1.74996 -0.0971,0.38531 -0.28318,1.37409 -0.78806,0.97695 -0.59896,-0.2364 -0.76079,0.23858 -1.14471,0.52809 z m 13.60599,4.974 c -0.64367,0.0548 -1.11919,-0.3441 -1.61398,-0.691 -1.21572,-0.26895 -2.2487,-1.10528 -3.50901,-1.182 -0.75998,-0.22807 -0.155,-1.21295 0.41347,-1.17442 0.54622,0.40015 0.96503,-0.51197 1.4121,-0.0565 0.88925,0.70258 2.07063,0.23166 3.07928,0.13275 0.38995,0.001 1.35586,-0.57389 1.3394,-0.009 -0.34998,0.53527 -1.00944,1.24875 -0.62162,1.90061 0.5825,0.34725 -0.1231,0.79639 -0.39821,1.07282 -0.0112,-0.11514 -0.0716,0.0255 -0.10143,0.007 z m -2.539,-19.616998 c -0.33611,-0.647571 -0.81317,-0.02631 -1.3114,-0.338088 -0.2172,0.34769 -0.80305,0.362995 -1.27509,0.568629 -0.43427,0.153037 -0.7285,-0.07463 -1.01759,0.515023 0.24117,0.185698 0.76095,0.619334 0.6631,0.986434 -0.64146,0.11106 -0.46131,0.83839 -0.16682,1.20807 0.42792,0.59027 1.04653,0.9082 1.71596,1.15352 0.57111,0.24003 1.33032,0.46264 1.34558,1.21037 0.23656,0.83493 0.86084,1.44226 1.51408,1.96836 0.47458,0.24413 0.64503,0.66748 1.2018,0.75352 0.7362,0.24969 1.49119,0.21302 2.25039,0.11216 0.89671,0.20105 -0.0603,0.54266 -0.311,0.894 0.63681,0.47113 1.50533,0.50674 2.22174,0.8499 0.87786,0.34513 1.72166,0.77193 2.58026,1.1621 0.19102,0.47989 0.9187,0.52494 1.06836,1.08943 -0.12379,0.41371 -0.30397,1.10388 -0.78635,0.51957 -0.5346,-0.1413 -0.30869,-0.99762 -1.03893,-0.89047 -0.55301,0.0655 -1.07266,-0.21853 -1.17385,-0.52571 -0.65706,-0.17566 -0.76632,0.69851 -1.24324,0.93418 0.046,0.44934 -0.47447,0.99824 0.32516,1.09077 0.52177,0.2167 1.05356,0.32045 0.81031,0.97414 0.41258,0.66524 -0.46951,0.46899 -0.86219,0.60581 -0.78605,0.11482 -0.039,0.98043 -0.65466,1.13317 -0.55268,0.21273 -0.57993,1.16722 -1.2864,1.02983 -0.57397,0.14447 -0.75599,-0.84929 -0.14121,-0.84772 0.55048,-0.42606 -0.20929,-0.96419 0.61609,-0.93932 0.72263,0.009 -0.11262,-0.71162 -0.0648,-1.08628 -0.0287,-0.61714 -0.62123,-0.98182 -0.62636,-1.6134 -0.22402,-0.74823 -0.84506,0.1907 -1.26654,-0.42345 -0.75362,-0.20121 -0.42487,-0.35147 -0.52444,-0.94955 -0.31219,-0.60976 -1.09773,-0.0396 -1.34354,-0.17782 0.7252,-0.24626 -0.22518,-0.74706 -0.56025,-0.3447 -0.32934,-0.0954 -0.42118,-0.92106 -0.91072,-0.99454 -0.71888,-0.27097 -1.55286,-0.13614 -2.21315,-0.60969 -0.9012,-0.65893 -1.8564,-1.2632 -2.72767,-1.96406 -1.28075,-0.39895 -2.13564,-1.53963 -2.53715,-2.77652 -0.44905,-0.93789 -1.44351,-1.39084 -2.41833,-1.57783 -0.62552,-0.25745 -1.32941,-0.25002 -1.85164,0.22094 -0.59063,0.35332 -1.10375,0.84766 -1.83845,0.85067 0.24023,-0.49358 0.01,-0.9609 -0.66348,-0.68604 -0.4278,-0.0598 -1.14913,-0.38283 -1.03012,-0.88914 0.5992,-0.33848 0.37085,-0.75856 -0.29654,-0.82846 -0.74475,-0.487708 0.12417,-0.462699 0.46928,-0.585467 0.79095,-0.356547 0.18063,-0.492308 0.0618,-0.96334 -0.87356,-0.246086 -0.20918,-0.685768 0.35712,-0.61756 0.54082,0.09688 1.03141,-0.346201 1.56176,-0.009 0.63659,-0.108269 0.446,-0.813963 0.86443,-0.960439 0.64073,-0.575382 0.34666,0.42161 1.01168,0.537949 0.26989,-0.0065 0.62108,1.004723 0.88897,0.236404 0.03,-0.469273 0.42999,-0.924887 0.67845,-1.131258 0.23095,0.305714 0.58295,0.631228 1.03564,0.291599 0.42075,0.334247 0.82584,0.13276 0.45721,-0.319922 0.0443,-0.668686 1.11629,0.373553 0.78473,-0.414942 -0.0254,-0.70207 0.82719,-0.0069 1.26023,-0.162572 0.30094,-0.464812 0.78133,-0.479455 1.28778,-0.50559 0.3919,0.292151 1.25708,-0.446185 1.27384,0.117296 0.34305,0.23404 0.69614,0.736917 1.25534,0.699137 0.68153,0.226007 1.51094,0.0576 2.11655,0.402605 -0.12012,0.346123 -0.88889,0.507478 -0.0214,0.703213 -0.31912,0.298911 -0.14952,0.594424 0.1576,0.872922 0.19372,0.07486 0.50681,0.202607 0.32807,0.441111 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Pologne\"\n\t\t\t\t\t\td=\"m 450.73401,91.050003 c -0.41822,-0.283327 -1.10875,-0.223422 -1.35901,-0.647003 -0.51592,-0.05773 -0.87264,-0.446679 -1.39301,-0.239998 -0.55934,-0.225112 -0.89769,0.590539 -1.414,0.022 -0.48811,0.05804 -1.09502,-0.0765 -1.37883,0.430655 -0.55189,0.196687 -0.58644,-0.218041 -0.87237,-0.415272 -0.28904,-0.245963 -0.6912,-0.58972 -1.04453,-0.136081 -0.45624,0.366245 -0.75663,-0.165978 -1.01144,-0.474956 -0.60657,-0.09881 -0.4161,-0.787232 -1.16518,-0.646777 -0.30979,-0.458028 -1.04419,0.306067 -1.08563,-0.27057 -0.28073,-0.314462 -0.0652,-0.500015 -0.85602,-0.446999 -0.24935,-0.129736 -1.31361,-0.62333 -0.93472,-0.06312 0.32779,0.229718 -0.80273,0.750112 -0.95107,0.196852 -0.47458,-0.357008 -0.8806,-0.480906 -0.1512,-0.772727 -0.32762,-0.437378 -0.94495,0.113445 -1.15414,-0.218558 -0.32421,-0.282217 -0.91537,-0.127487 -1.32708,-0.39202 -0.006,-0.430854 -0.92524,-0.553345 -0.72877,-0.04242 -0.9032,0.143057 0.47601,-0.654535 -0.11817,-1.005508 -0.49828,-0.327652 -0.47535,-0.536057 -0.77859,-0.982284 0.3397,-0.274285 0.44215,-0.907813 -0.0862,-1.070207 0.0651,-0.496033 0.0872,-0.775694 -0.56,-1.003998 -0.92324,-0.174603 0.17771,-0.527742 0.22342,-0.986422 0.0762,-0.392319 -0.63505,-1.282191 0.2237,-0.817728 0.3404,-0.098 -0.40867,-0.901581 0.2695,-0.844913 0.95063,-0.126338 1.86544,-0.397211 2.83038,-0.426941 0.7519,-0.207012 1.33088,-0.795903 2.13545,-0.866024 1.0825,-0.23977 2.22106,-0.542173 3.32104,-0.393291 0.6364,0.245368 1.19557,0.462795 0.22719,0.12755 -0.46216,-0.2025 0.12955,0.823294 0.4585,0.842098 0.84882,0.227644 1.65475,-0.190172 2.4328,-0.445333 -0.25441,0.172096 -1.47882,0.452742 -0.99456,0.659768 0.73804,-0.182179 1.39971,-0.713557 2.19334,-0.576703 1.99157,0.164533 3.98473,0.07188 5.97822,-0.0061 0.53453,0.09133 0.91284,0.38123 1.0865,0.900849 0.42461,0.836281 0.83305,1.719515 1.05989,2.62158 -0.13801,0.58725 -0.99752,0.256814 -1.34735,0.696035 -0.66399,0.556246 -0.0668,0.543001 0.40739,0.77935 0.6733,0.282077 10e-4,0.912716 0.0677,1.321586 0.2421,0.412906 0.34454,0.843268 0.83594,1.187585 0.83846,0.384582 -0.29863,0.342847 0.39271,0.810922 0.1299,0.711497 -0.72323,0.433531 -1.05181,0.798265 -0.7235,0.489113 -1.46343,1.041659 -2.057,1.652648 -0.4219,0.450046 0.57464,1.222298 0.0676,1.147832 -0.12695,0.0034 -0.27095,-0.01977 -0.39053,-0.0036 z M 431.84399,80.269997 c 0.44648,-0.04676 0.34748,0.543072 0,0 z m 0.89502,0.091 c -0.43674,0.465549 -0.77539,-0.383947 9.8e-4,0 l -9.8e-4,0 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Slovaquie\"\n\t\t\t\t\t\td=\"m 438.22,91.952003 c 0.11836,-0.321635 0.49542,-0.748894 0.87,-0.478004 0.43363,0.0028 0.92952,0.0085 1.276,-0.277 0.21839,-0.224433 0.64832,-0.27265 0.66334,-0.735982 0.47049,0.0203 0.719,-0.636415 1.22066,-0.424014 0.45058,-0.369171 0.70246,0.607267 1.10862,-0.08495 0.47006,-0.380352 0.64045,0.240394 1.07017,0.240878 0.04,0.429228 0.41838,0.569294 0.82621,0.364072 0.28042,-0.463886 0.94072,-0.353944 1.39077,-0.328055 0.51523,0.485664 0.84661,-0.320517 1.42427,-0.07687 0.46579,-0.126439 0.94436,0.153054 1.3435,0.331979 0.23766,0.345372 1.15799,0.289297 1.26895,0.639336 -0.37523,0.446208 -0.64662,1.067122 -1.08369,1.409273 -0.55762,0.182574 -1.08505,-0.09238 -1.51179,-0.43666 -0.62934,0.08118 -1.35188,-0.08386 -1.92176,0.187813 -0.50889,0.39928 -1.04738,0.903613 -1.74923,0.662373 -0.56078,0.0013 -1.22,0.112348 -1.70904,0.254402 -0.14825,0.700095 -0.82782,0.447434 -1.35492,0.468168 -0.69168,0.01997 -1.39234,-0.06075 -2.01505,-0.381754 -0.40465,0.309576 -0.92081,-0.340746 -1.16102,-0.661004 -0.002,-0.218136 0.16219,-0.478399 0.044,-0.673996 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Rep Tcheque\"\n\t\t\t\t\t\td=\"m 431.57001,91.964996 c -0.24824,-0.459451 -0.65865,-0.856256 -1.09798,-0.830546 -0.41022,-0.216359 -0.84022,-0.600655 -1.21,-0.78767 -0.45332,0.03706 -0.80287,-0.435131 -1.02204,-0.715783 0.38583,-0.724499 -0.0456,-0.604266 -0.42844,-1.12091 0.10717,-0.458928 0.79145,-0.319385 1.15251,-0.574119 0.50078,-0.0052 0.81962,-0.232365 1.19512,-0.461817 0.43352,-0.01813 0.77199,-0.218047 1.25838,-0.271779 0.16489,-0.236439 1.44959,-0.103978 0.92256,-0.489402 0.26761,-0.426498 0.69932,0.280167 1.04788,0.344029 0.58098,-0.04022 0.35593,-0.4592 0.90299,-0.441002 0.30648,0.320842 0.67542,0.635897 1.22181,0.572639 0.49994,0.07382 0.64273,0.493836 1.1455,0.202118 1.01325,0.07179 -0.26202,0.444678 0.0878,0.633043 0.48406,0.04364 0.74052,0.98881 1.22187,0.4392 0.75049,0.02099 -0.31418,-0.88146 0.66625,-0.448496 0.28328,0.375913 1.39451,-0.0077 1.08314,0.439045 0.35593,-0.182151 0.23599,0.86722 0.92222,0.319007 0.27244,0.32335 1.22642,0.01626 1.13539,0.543449 0.26355,0.20536 1.06201,0.607415 0.36802,0.702995 -0.44964,-0.126267 -0.65011,0.4811 -1.10401,0.427002 -0.0301,0.458346 -0.42578,0.531222 -0.66742,0.740482 -0.26427,0.215443 -0.70542,0.350625 -1.05758,0.261517 -0.34669,-0.03961 -0.83773,-0.135123 -0.98444,0.312347 -0.16119,0.355436 -0.80609,-0.360711 -1.2368,-0.03157 -1.08648,0.278427 -2.13749,-0.270409 -3.19676,-0.458781 -0.42379,0.458674 -0.89641,1.090861 -1.60512,0.882484 -0.25335,-0.01678 -0.47,-0.185186 -0.72087,-0.187485 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Hongrie\"\n\t\t\t\t\t\td=\"m 442.39099,98.111 c -0.75501,0.279546 -1.66904,0.41002 -2.42228,0.09143 -0.75094,-0.536892 -1.63342,-0.835892 -2.44123,-1.251455 -0.3038,-0.280824 -0.95898,-0.794103 -0.68304,-1.176164 0.70076,-0.246843 -0.17879,-0.888614 0.37724,-1.066448 1.03356,-0.24419 -0.56097,-0.47487 0.0253,-0.697364 0.38609,0.0016 1.28639,0.425686 1.20836,-0.274921 0.45066,-0.181632 0.88919,-0.636057 1.36628,-0.253481 0.83385,0.287419 1.73132,0.147226 2.59635,0.209401 0.15431,-0.664995 0.74208,-0.591091 1.28901,-0.692263 0.67464,-0.188999 1.4807,0.252304 2.00527,-0.380179 0.37974,-0.40105 0.86222,-0.529479 1.40151,-0.491489 0.54327,-0.03342 1.10011,-0.114132 1.50721,0.326932 0.55101,0.326642 1.19912,-0.16757 1.71803,0.271004 0.48918,0.187643 0.97475,0.375975 1.41396,0.668991 -0.55703,0.613488 -1.52189,0.346563 -2.08397,0.962417 -0.8871,1.059681 -1.43585,2.637695 -2.87267,3.074344 -0.60929,0.01422 -1.16863,0.234447 -1.7842,0.08988 -0.92823,-0.09373 -1.76894,0.307707 -2.62116,0.58936 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Roumanie\"\n\t\t\t\t\t\td=\"m 445.72198,97.572998 c 0.59805,-0.172364 1.32908,-0.01342 1.80894,-0.521781 1.00229,-0.665366 1.40053,-1.913399 2.21249,-2.746341 0.58496,-0.566971 1.53397,-0.327297 2.08593,-0.957964 0.53899,0.08204 1.07121,-0.04277 1.61125,0.08137 0.62565,0.121741 1.27904,0.184823 1.91341,0.108723 0.10831,0.324813 0.71899,0.584154 1.12201,0.274993 0.3336,-0.444511 1.0238,-0.198352 1.51263,-0.342201 0.64344,0.154553 0.92571,-0.42004 1.35882,-0.586165 0.56222,-0.135742 1.28999,-0.05599 1.5118,0.5622 0.4455,0.719309 1.00563,1.411756 1.67235,1.919217 0.55482,0.118281 0.72458,0.758876 0.78454,1.243255 -0.0281,0.605369 -0.5116,1.151265 -0.23415,1.765699 -0.17373,0.490586 0.17206,0.51867 0.44,0.905998 0.55567,0.359382 0.94352,0.09708 1.39541,0.024 0.48498,-0.155644 0.94963,-0.3588 1.46544,-0.131326 0.5047,0.267162 -0.14083,0.928465 -0.43326,1.110245 -0.63169,-0.0464 -1.18749,0.25802 -1.51012,0.80055 -0.40935,0.50379 -0.3945,1.18532 -0.50847,1.79453 -1.10313,-0.19407 -2.21479,-0.46094 -3.21526,-0.93806 -0.86494,-0.52937 -1.77685,0.24771 -2.61469,0.48993 -0.57148,0.29633 -1.20574,0.47987 -1.82018,0.18898 -0.56312,-0.22098 -1.15356,-0.24454 -1.68587,0.0722 -0.79573,0.0942 -1.52866,-0.65056 -2.34218,-0.28139 -0.79065,0.38907 -0.63661,-0.16288 -0.67596,-0.43084 -0.40031,-0.2129 -1.01943,-0.26894 -1.13786,-0.77477 0.72178,-0.26037 0.6866,-0.29832 -0.068,-0.567 -0.4054,0.23633 -0.63792,0.79323 -1.10121,0.24025 -0.53052,-0.14266 -0.80974,-0.27222 -1.24151,-0.45599 0.37201,-0.31278 0.36916,-0.19691 0.0592,-0.454985 0.64389,-0.422605 -0.44397,-0.494546 -0.74761,-0.655294 -0.55801,-0.200909 -0.68267,-0.613045 -0.69638,-1.000572 -0.24502,-0.354029 -0.97228,-0.252204 -0.92154,-0.737411 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Bulgarie\"\n\t\t\t\t\t\td=\"m 450.198,105.998 c -0.0552,-0.52412 0.0659,-1.09877 0.67407,-1.2009 0.57756,-0.10568 0.90053,-0.73934 0.22198,-1.00145 -0.28586,-0.36995 -1.06254,-0.58791 -0.92957,-1.12497 0.28999,-0.28194 0.64704,-1.08297 1.08197,-0.82263 0.91001,-0.0433 -0.10609,0.74213 0.58756,0.67095 0.70159,-0.2698 1.44536,-0.23253 2.11736,0.1014 0.66942,0.366 1.30348,-0.46764 1.9852,-0.0853 0.6325,0.18857 1.31043,0.40563 1.91455,0.004 0.85615,-0.25925 1.66352,-0.90071 2.58989,-0.74891 0.99704,0.56673 2.13618,0.8274 3.2633,1.05121 0.52603,0.0593 0.0105,1.01155 -0.4833,0.69279 -0.51969,0.0973 -0.65059,0.75952 -0.68962,1.21361 0.0751,0.59536 -0.97162,0.43435 -0.84938,1.11839 0.45951,-0.0686 0.8259,0.5602 0.94098,0.94 -0.68433,0.0249 -1.36828,-0.0161 -2.03696,-0.1 -0.62957,-0.0207 -1.04355,0.6141 -1.53564,0.84162 -0.79896,-0.22647 -0.33554,0.67709 -0.77987,0.82312 -0.67253,0.19458 -1.38412,0.406 -2.03557,0.0264 -0.77562,-0.26014 -1.58891,-0.70171 -2.39524,-0.27824 -0.74232,0.26373 -1.55838,0.18144 -2.3217,0.34705 -0.0309,-0.48112 0.22073,-1.02611 -0.16202,-1.467 -0.22075,-0.53376 -1.05641,-0.42417 -1.15215,-0.98065 l 10e-4,-0.0173 -0.007,-0.003 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Grece\"\n\t\t\t\t\t\td=\"m 455.452,122.442 c 0.16092,-0.55727 -0.79005,-0.55197 -1.17539,-0.59609 -0.4993,-0.0732 -1.05868,-0.0435 -1.51257,-0.20745 -0.11183,-0.43145 0.46002,-0.91487 0.55496,-0.72146 0.14583,0.53421 0.8859,-0.18473 0.89817,0.22256 -0.22512,0.0785 0.50578,0.48826 0.82064,0.3044 0.52246,-0.13204 1.00063,-0.0964 1.40654,0.10634 0.35201,0.24567 1.2834,-0.20602 1.21993,0.20376 -0.0243,0.57468 0.69308,-0.1095 0.99162,0.0412 0.54336,-0.56744 0.19705,0.79712 -0.3002,0.43377 -0.95557,0.0536 -1.9452,0.12847 -2.9037,0.213 z m -10.15799,-10.246 c 0.36855,-0.72242 0.98126,-1.24504 1.52279,-1.8204 0.20229,-0.52284 0.47976,-0.9759 1.11641,-0.85077 0.53097,0.007 0.94463,-0.24792 1.27224,-0.62831 0.54708,-0.3032 1.23144,0.21274 1.75075,-0.25151 1.05142,-0.44315 2.25492,-0.18496 3.2988,-0.66701 0.89841,-0.18283 1.70655,0.41748 2.56184,0.61627 0.54426,0.10765 1.08386,-0.18071 1.61916,-0.26927 -0.0128,-0.5136 0.12988,-0.94445 0.78484,-0.774 0.76662,0.12216 0.48986,0.67876 -0.0152,0.96879 -0.32157,0.25413 -0.63162,1.06595 -0.81902,1.10237 -0.007,-0.62594 -0.93972,-0.2534 -1.3749,-0.40453 -0.5759,0.0469 -0.8837,-0.4606 -1.37733,-0.0551 -0.5554,0.401 -0.72932,-0.56503 -1.18334,0.13408 -0.38,0.51743 -1.07394,-0.0244 -1.35673,0.27325 0.16951,0.54902 0.65804,0.61455 1.07377,0.94455 0.73974,0.52471 -0.0564,0.25469 -0.32341,-0.051 -0.46966,-0.32718 -1.12286,0.14839 -0.39094,0.38276 0.69125,0.33318 -0.2574,0.53217 -0.44275,-0.0741 -0.41519,-0.31419 -1.04603,-0.18944 -0.44246,0.24599 0.72941,0.24778 0.4047,0.40482 -0.22554,0.25666 0.003,-0.45727 -0.51953,-0.74753 -0.95312,-0.94092 -0.35933,-0.11984 0.28127,-0.93796 -0.45096,-0.38828 -0.47629,0.0959 -0.20339,0.60158 -0.37187,1.04909 0.23822,0.4371 0.66665,0.65575 0.77682,1.13771 0.27144,0.21004 1.18493,0.7574 0.61017,1.0048 -0.0223,0.0227 -0.4133,-0.90384 -0.89003,-0.35605 0.51698,0.37313 0.27279,0.93398 -0.37906,0.88468 -0.12828,0.11677 0.8658,0.23672 1.05481,0.49018 0.40254,0.0724 0.88378,0.38248 1.15814,0.65413 0.25293,-0.0133 1.24902,0.22669 0.77557,0.5635 0.12159,0.25625 0.33264,1.33342 -0.21941,0.81627 -0.33471,-0.28157 -0.63716,-0.91006 -1.17807,-0.60222 -0.70023,0.15314 -0.84004,0.14099 -0.48685,0.64628 0.0473,0.50911 0.87803,0.1252 0.7384,0.60285 -0.47598,0.16052 -0.86158,0.40247 -0.94783,-0.11425 -0.59004,-0.19056 -0.9165,-0.13913 -0.50469,0.49958 0.31584,0.34701 0.45337,0.86657 0.54944,1.4044 -0.15604,0.12315 -1.03213,-0.5843 -1.19805,0.14765 -0.301,0.19503 -0.50598,-0.8511 -1.00041,-0.95705 -0.29783,0.6261 -0.85527,0.34034 -1.00698,-0.21 0.4637,-0.48839 -0.001,-0.99535 -0.43449,-1.28342 -0.55218,-0.28152 0.0353,-1.05855 0.40891,-1.05335 0.55275,0.22327 0.93195,-0.50993 1.47341,-0.0221 0.59115,0.14215 1.25553,0.7992 1.80695,0.24105 0.61794,-0.33468 -0.609,-0.25715 -0.84335,-0.53781 -0.96306,-0.46805 -2.11271,-0.37361 -3.11944,-0.11147 -0.39147,-0.14358 -0.64087,-0.76738 -0.98001,-1.08786 0.45905,0.0399 1.25421,-0.39011 0.44307,-0.54422 -0.65689,0.29252 -1.16035,-0.39456 -1.68605,-0.68778 -0.0604,-0.10377 -0.14675,-0.22991 -0.194,-0.324 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Royaume Uni\"\n\t\t\t\t\t\td=\"m 400.125,81.146004 c 0.4532,0.185426 1.10798,0.497443 1.01099,1.074997 -0.66916,0.411371 -0.46611,0.804126 0.23888,0.684121 0.62362,-0.593331 1.60996,-0.365324 2.33293,-0.117449 0.44911,0.229814 0.75743,0.896462 0.49965,1.343458 -0.434,0.665101 -1.3782,0.646857 -1.90915,1.236493 -0.17672,0.290145 -1.63957,0.329949 -0.80118,0.42646 0.6015,0.08175 1.22963,0.215317 1.81097,0.08344 0.72999,0.189706 -0.007,0.898848 -0.52511,0.843495 -0.26847,0.402129 -0.79409,0.06872 -1.28147,0.425268 -0.6784,0.474498 -1.46309,-0.197818 -2.18937,0.113493 -0.53492,0.296057 -1.0057,-0.212053 -1.53146,-0.03336 -0.60485,0.106356 -1.22245,0.120212 -1.83268,0.187572 0.38683,0.679986 -0.77892,-0.18766 -1.034,0.294999 -0.51179,-0.250278 -0.98041,-0.372081 -1.51028,-0.168141 -0.80046,-0.203441 -0.56212,0.527099 -0.99998,0.875232 -0.45576,0.368724 -0.76318,-0.323513 -1.24975,-0.309089 -0.3964,0.238707 -1.03469,0.02862 -1.50273,0.361339 -0.44558,0.187556 -0.76166,0.85528 -1.22155,0.341098 -1.0032,-0.06156 -0.39884,-0.274106 0.22181,-0.488185 0.49242,-0.171473 0.75217,-0.698857 1.29789,-0.743959 0.53671,-0.353126 0.39342,-0.893241 1.0677,-0.930445 -0.0215,-0.536174 0.821,-0.345016 1.23944,-0.385361 0.4768,0.05783 1.16234,0.215366 1.53021,0.01167 0.0275,-0.244635 1.1354,-1.140192 0.35553,-0.811646 -0.76541,0.489309 -1.65844,0.222272 -2.43362,-0.08805 -0.85274,-0.372593 -1.92518,0.142691 -2.6963,-0.431463 -0.0791,-0.468136 0.86813,-0.513149 1.28147,-0.612235 0.5364,-0.119746 1.26631,-0.389756 1.1605,-1.0686 0.25192,-0.747717 -0.52637,-0.521894 -0.97755,-0.552969 -0.31308,-0.205509 0.57623,-0.694896 0.93488,-0.732843 0.86618,-0.260557 1.80212,-0.113736 2.69432,-0.25735 -0.42645,-0.424683 -0.28974,-0.995729 -0.0158,-1.464675 0.48369,-0.794164 -0.52613,-0.361828 -0.90584,-0.571037 -0.62117,-0.178172 -0.58443,-0.832155 -0.0779,-1.124364 0.85446,-0.366629 0.0269,-0.48016 -0.47144,-0.522922 -0.59233,0.310785 -1.26633,0.483677 -1.89278,0.160002 -0.22344,0.449626 -0.8349,0.367452 -1.30946,0.190545 -0.53667,-0.230588 0.35454,-0.787013 0.52903,-1.100116 0.75311,-0.450865 -0.46742,-0.536342 -0.2548,-1.132435 0.66505,0.07581 0.74963,-0.948845 0.104,-0.722 -0.40418,0.466577 -0.98229,0.408414 -1.46797,0.696782 -0.56042,-0.03266 0.002,-0.941446 0.29996,-1.223465 0.6464,-0.398845 -0.42308,-1.039703 -0.59201,-0.418163 -0.34128,0.477085 -1.23389,0.161481 -0.65104,-0.367119 0.36386,-0.38373 0.93469,-0.695844 0.45806,-1.268037 0.8309,-0.061 0.43259,-0.54809 -0.081,-0.804001 0.35784,-0.602449 0.93514,-0.0987 1.44331,-0.261647 0.30945,-0.181275 -1.09256,-0.950999 -0.0796,-0.865218 1.12399,0.06511 -0.31603,-0.512627 0.34206,-0.835516 0.40184,-0.34809 0.92771,0.433812 1.43138,0.183523 0.88929,-0.09953 1.83302,-0.376838 2.70337,-0.16741 0.56974,0.408417 -0.57561,0.659217 -0.89423,0.826833 -0.5683,0.282803 -1.39189,0.3752 -1.5813,1.08344 0.5096,0.409843 1.2715,0.127468 1.88299,0.132995 0.92766,0.02585 1.84738,0.101235 2.77802,0.01 0.74654,0.305776 0.1517,0.682737 -0.11701,1.126 0.12603,0.4519 -0.67492,0.770946 -0.91083,1.163806 -0.12804,0.398672 -1.31911,0.369469 -1.0349,0.522944 0.54138,0.171777 1.09312,0.337108 0.22968,0.505345 -0.55107,0.06682 -1.00124,0.350697 -1.59629,0.216296 -0.92635,-0.09903 0.15923,0.315026 0.51926,0.264121 0.69824,0.255774 1.33685,-0.51413 2.01225,-0.06057 0.59769,0.03341 0.99567,0.439569 1.44057,0.778169 0.7015,0.0908 0.3924,0.729578 0.69724,1.171351 0.18894,0.636382 0.76059,1.017662 1.41724,1.006542 0.54793,0.17687 0.89068,0.782831 1.38248,1.099064 0.52033,0.337707 -0.23225,1.05743 0.2863,1.204929 l -0.004,-0.006 z m -12.20999,-4.016007 c -0.48029,-0.504781 0.60289,-1.153031 0.47018,-0.310174 -0.0114,0.140054 -0.30267,0.370588 -0.47018,0.310174 z m -1.129,3.054001 c -0.0653,-0.656439 -1.37171,0.178505 -1.022,-0.456001 -0.44511,-0.103041 -0.93437,-0.902125 -1.21201,-0.149994 -0.61012,0.33659 -1.36181,0.265827 -1.89408,-0.188111 -0.62783,-0.542639 1.19089,-0.398244 0.48778,-0.706099 -0.61196,-0.3227 0.85335,0.0057 0.84585,-0.586457 0.0189,-0.565392 0.74589,-0.465986 1.21331,-0.628772 0.60349,-0.18225 1.1875,0.135141 1.77915,0.04244 0.34126,0.3081 0.82836,0.796034 0.73739,1.290473 0.2002,0.409479 0.39037,0.912064 -0.22562,1.181369 -0.20175,0.133095 -0.4775,0.189549 -0.70977,0.201154 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Irlande\"\n\t\t\t\t\t\td=\"m 386.78601,80.183998 c -0.90397,-0.05067 -0.0859,0.546371 0.0154,1.023731 0.12622,0.522242 0.41032,1.081219 0.28561,1.621273 -0.4686,0.27332 -0.57609,0.891374 -0.83244,1.248555 -0.52814,-0.103147 -0.99354,0.03586 -1.41485,0.220695 -0.91168,-0.03396 -1.76665,0.230145 -2.55032,0.677561 -0.44269,0.3144 -0.92364,0.472594 -1.45997,0.474413 -0.65694,0.294308 -1.36897,0.299822 -2.07443,0.339775 0.20694,-0.615407 -0.1089,-1.020177 -0.74191,-0.735758 -0.89402,-0.272957 0.51523,-0.793407 0.24323,-0.727388 -0.43398,0.108112 -1.5407,-0.145245 -0.591,-0.243399 0.46391,-0.02172 1.23165,0.225396 1.22566,-0.47443 0.22921,-0.532697 1.19995,0.0075 1.36794,-0.548936 -0.21378,-0.134751 -1.51743,0.335223 -0.7574,-0.27267 -0.17538,-0.33501 0.36497,-0.896791 0.91951,-0.73987 0.73413,-0.284292 -0.17523,-0.319621 -0.50703,-0.356548 -0.50473,0.0011 -0.99276,-0.232993 -1.47691,-0.08863 -0.66129,0.0025 -0.13807,-0.584479 -0.24278,-0.60147 0.59078,0.08989 0.67959,-0.566527 0.67333,-0.705135 -0.45997,-0.186054 -1.30905,0.112721 -0.72242,-0.606177 0.36847,-0.473546 0.88575,-0.237131 1.37779,-0.138583 0.64469,-0.16545 1.3123,0.0543 1.965,0.086 -0.60692,-0.631045 0.67017,-0.338338 0.78391,-0.863863 -0.0191,-0.265874 -1.20563,0.0559 -1.25127,-0.156133 0.58329,-0.08966 0.75477,-0.411302 0.99715,-0.940603 0.40179,-0.163677 0.98604,-0.410251 1.37552,-0.301586 0.27054,0.435474 1.1073,0.344496 0.43013,0.930848 -0.31394,0.327979 -1.40298,0.107849 -0.44244,0.500336 -0.50706,0.07676 -1.24993,0.377437 -0.46693,0.758484 0.48814,0.272404 1.05995,0.320938 1.55942,0.03738 0.33736,-0.695942 0.77577,-0.0861 1.25509,0.108541 -0.32284,0.641735 0.90498,-0.148748 1.02537,0.421626 l 0.032,0.04897 0,0.003 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Islande\"\n\t\t\t\t\t\td=\"m 346.758,54.457001 c 0.49998,-0.620369 1.38745,-0.168585 2.05648,-0.415493 -0.15446,-0.158972 -1.11967,-0.693892 -0.29463,-0.917507 0.67384,0.06453 1.36208,0.755143 2.04837,0.340741 0.1589,-0.421162 -1.29005,-0.597069 -0.38423,-0.913743 0.9117,0.32416 1.97547,0.11469 2.79592,0.650062 0.66621,0.388321 0.16964,1.01476 -0.10302,1.237417 0.42454,0.288179 0.8137,1.058711 1.30335,0.458965 0.46929,-0.372139 1.33544,-0.124151 1.62632,-0.661086 -0.2339,-0.481517 -0.10803,-1.25055 0.51612,-0.943031 0.43184,0.371338 0.97434,0.942926 1.57201,0.81559 -0.10226,-0.406107 -0.10015,-0.822042 0.62266,-0.781375 0.55105,-0.300583 0.93287,0.185984 1.40062,0.399583 0.3276,0.258809 1.3584,0.379632 0.76838,-0.241493 -0.39366,-0.511303 0.78894,0.02007 1.11181,-0.08002 0.79817,0.03579 1.68119,0.1877 2.38684,-0.279612 -0.2428,-0.770889 0.24006,-0.787149 0.86541,-0.655232 0.55211,-0.008 0.84856,0.640214 1.42774,0.638195 0.46325,0.294481 1.10035,0.0054 1.48795,0.367254 -0.1869,0.513877 -0.0951,0.804215 0.60791,0.907783 0.56769,0.09445 1.21463,0.03407 1.73252,0.225834 0.45403,0.608056 0.0706,1.758156 -0.7832,1.658091 -0.70078,-0.182702 -0.83334,0.254798 -1.07055,0.719276 -0.43742,0.523195 -1.22568,0.542565 -1.80379,0.254801 -0.85083,0.631349 -1.91994,0.78424 -2.90406,1.113669 -0.91269,0.249788 -2.03125,-0.169641 -2.75979,0.57209 -0.68215,0.524328 -1.6421,0.405917 -2.45852,0.411947 -1.14056,-0.07322 -2.25336,-0.329835 -3.29463,-0.805707 -1.16914,-0.150116 -2.34225,0.05536 -3.5171,-0.108928 -0.31213,0.04062 -1.6116,-0.129746 -0.83061,-0.407223 0.65773,-0.2364 1.37767,-0.341966 1.84751,-0.914758 -0.0174,-0.20198 -1.00016,0.04066 -1.30384,-0.276594 -0.31339,-0.511105 -0.83434,-0.409481 -1.32838,-0.325436 -0.63114,-0.01964 -1.32846,0.232638 -1.91875,0.03021 -0.53885,-0.39493 0.65654,-0.514123 0.98019,-0.549275 0.88846,0.0018 1.78088,-0.152802 2.65095,-0.269738 0.63687,-0.127844 0.5051,-0.925603 -0.11575,-0.913388 -0.82828,-0.129767 -1.67892,-0.301558 -2.52588,-0.118779 -0.6384,0.25082 -1.33862,0.333075 -1.98901,0.05575 -0.2114,-0.02285 -0.33401,-0.095 -0.42332,-0.278847 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Espagne\"\n\t\t\t\t\t\td=\"m 381.009,107 c -0.45752,-0.50613 0.61047,-0.98228 0.19869,-1.39021 -0.26463,-0.51661 -0.63824,-0.75796 -1.1787,-0.85679 -0.20972,-0.71322 0.76848,-1.00524 1.32762,-0.96864 0.57335,0.10129 0.9708,-0.12131 1.03354,-0.66374 0.93257,-0.64699 1.92954,0.2798 2.9162,0.2362 0.83715,0.11607 1.60683,-0.48374 2.41957,-0.35515 1.63458,0.81281 3.52726,0.30332 5.25907,0.69633 0.5596,-0.13612 1.10735,-0.64237 1.67676,-0.23564 0.44365,0.36754 0.96471,0.34487 1.49998,0.36198 0.27231,0.33936 1.45327,0.0493 0.9874,0.56839 0.19678,0.23424 0.90803,0.11284 1.3421,0.38216 0.47248,-0.008 0.74726,0.52421 1.25855,0.26266 0.37935,0.3316 0.94334,0.15622 1.26322,0.36645 0.71224,0.0761 0.78415,-0.25303 1.21701,-0.365 0.42716,0.22216 1.25743,0.0294 1.35367,0.6052 0.0338,0.62556 0.93285,-0.13595 1.14679,0.34825 0.42942,0.022 0.9377,-0.0234 1.45377,0.12153 0.24153,-0.13747 1.15641,-0.51368 1.25157,-0.001 0.0167,0.42518 0.40025,1.00951 -0.30812,1.1497 -0.61096,0.41072 -1.4885,0.42982 -1.92768,1.05045 -0.92813,0.22793 -1.98255,0.22519 -2.79508,0.74123 -0.56284,0.3512 0.41699,0.75647 -0.51109,0.78341 -0.50939,0.1599 -0.64056,0.85863 -1.12097,1.12238 -0.55799,0.34498 -0.77569,0.94602 -1.07487,1.49498 0.22439,0.55107 0.39714,1.20895 1.07505,1.32569 0.46727,0.37566 -0.63332,0.53637 -0.89046,0.77146 -0.42612,0.27176 -0.71402,0.68524 -0.98359,1.09654 -0.448,0.39661 0.17584,1.08067 -0.63123,0.96246 -0.80062,-0.0526 -1.81412,0.28918 -1.94345,1.18966 -0.23332,0.45984 -0.74136,0.77881 -1.16082,0.46348 -0.55483,0.0126 -0.90137,0.47977 -1.45603,0.18012 -1.02274,0.0482 -2.09363,-0.0436 -3.08624,0.0923 -0.43368,0.47553 -1.03034,0.57325 -1.64024,0.64026 -0.36198,0.54734 -0.50147,0.62226 -0.59699,0.765 -0.58734,0.30782 -1.19569,-0.23632 -1.64293,-0.55864 -0.027,-0.57324 -0.73433,-0.66655 -0.49813,-1.12182 -0.4453,-0.6114 -1.26976,-0.85523 -1.99291,-0.88084 -0.63999,0.17329 0.001,-0.78902 0.0892,-1.09641 0.0766,-0.45557 1.31865,-0.66798 0.8165,-1.02554 -0.31759,-0.36795 -1.36374,0.002 -0.83778,-0.72675 0.1441,-0.43376 1.02049,-0.82468 0.69001,-1.224 -0.14867,-0.38821 -1.04203,-0.86657 -0.78082,-1.11764 0.39846,-0.12239 1.2248,-0.0785 1.09804,-0.70673 -0.14899,-0.76895 0.1714,-1.52826 0.024,-2.2879 -0.0869,-0.62739 0.73413,-0.57126 1.1113,-0.83023 0.71047,-0.11692 0.55026,-0.73032 -0.0626,-0.87471 -0.42897,-0.20342 -0.72687,-0.99227 -1.30224,-0.58657 -0.64598,0.30188 -1.41566,0.0367 -2.11461,0.0958 -0.37915,-0.57443 -0.88987,-0.34602 -1.42308,-0.15463 -0.18297,0.0515 -0.36594,0.10309 -0.54891,0.15463 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Portugal\"\n\t\t\t\t\t\td=\"m 383.92999,117.402 c -0.51569,0.23059 -1.05246,0.64791 -1.6275,0.30676 -0.50109,-0.0235 -1.02335,-0.20826 -1.47942,0.0868 -0.61405,0.18999 0.0616,-0.78401 0.10592,-1.09759 0.14773,-0.6082 -0.36347,-0.96293 0.0159,-1.45711 0.13308,-0.61844 -0.0211,-0.82654 -0.67901,-0.56967 -0.73936,-0.17699 0.0513,-0.49824 0.43776,-0.67535 -0.17951,-0.87472 -0.48548,0.32732 -1.01882,0.14475 -0.70831,-0.024 0.0932,-0.81468 0.006,-1.22352 -0.14243,-0.47597 0.6201,-0.58393 0.69144,-1.09353 0.30709,-0.52438 0.29814,-0.96566 0.40682,-1.46875 0.12404,-0.62094 0.6884,-1.2488 0.27895,-1.86136 -0.10711,-0.44638 -0.41961,-1.06845 -0.1315,-1.41758 0.44697,-0.26234 1.02968,-0.29441 1.51335,-0.51588 0.373,0.50098 0.94209,0.47835 1.50799,0.4642 0.56106,0.14136 1.05076,-0.1302 1.55137,-0.20941 0.49205,0.17422 0.72172,0.74471 1.27098,0.90046 0.59516,0.4408 -0.47767,0.69471 -0.81321,0.85112 -0.58929,0.0429 -0.73509,0.5756 -0.57371,1.06768 -0.0439,0.67142 -0.17128,1.34637 -0.0584,2.02595 -0.11799,0.56177 -0.88586,0.34048 -1.27099,0.602 0.40596,0.38063 0.75607,0.81179 1.10601,1.243 -0.39982,0.44663 -0.86388,0.88489 -1.02301,1.481 0.346,0.011 1.49515,0.19931 1.00445,0.58979 -0.60319,0.31886 -1.0149,0.85482 -1.12687,1.53326 -0.032,0.0965 -0.0615,0.19857 -0.0946,0.29295 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Danemark\"\n\t\t\t\t\t\td=\"m 418.763,73.869003 c 0.27417,-0.373886 0.63384,-0.909282 1.15145,-0.688273 0.74967,-0.08847 1.62042,0.0055 2.1267,-0.677466 0.38678,-0.479526 1.05282,-0.553753 1.62786,-0.550261 0.72132,-0.579739 -0.16689,0.332121 0.14359,0.627436 -0.0211,0.431913 -0.44818,0.956988 -0.97424,0.8495 -0.60442,0.07188 -1.19613,0.0079 -1.7842,-0.03968 -0.60105,-0.169327 -0.90316,0.190313 -1.16972,0.654327 -0.49729,0.353477 -0.67021,0.185021 -1.12144,-0.17558 z m 2.91699,4.132996 c -0.65139,0.02967 -1.30494,0.123657 -1.95498,0.112999 0.15446,-0.562764 -0.0619,-1.079944 -0.57566,-1.251347 -0.43612,0.261917 -1.01067,-0.208419 -0.29443,-0.560796 0.65725,-0.359077 -0.59282,-0.767481 -0.17571,-1.293706 0.0437,-0.828741 0.86406,-0.04365 1.23105,-0.233258 0.25696,-0.618635 0.76468,-0.683992 1.05997,-0.16727 0.661,0.125184 -0.003,-1.181949 0.78713,-0.932475 0.48235,0.0182 1.19142,-0.08427 1.52955,0.166566 -0.14457,0.680642 0.4469,0.883011 1.01069,0.796988 0.78075,-0.167255 0.3339,0.92615 -0.17228,0.873927 -0.18081,-0.08464 -1.11927,-0.427343 -0.81233,0.239371 -0.2147,0.486092 -0.56231,0.780543 -1.09729,0.764344 0.17187,0.246423 -0.58043,0.400211 -0.48743,0.9425 0.0957,0.227544 -0.44895,0.460626 -0.0483,0.542157 z m 5.49701,-0.035 c -0.2788,-0.549799 -0.76738,-0.487513 -1.29849,-0.501264 -0.2991,0.0088 -0.86565,-1.083494 -0.36968,-1.063559 0.53971,-0.297958 0.84993,-0.689589 1.21521,0.02069 0.72656,0.544265 0.52378,-0.621776 0.89098,-0.731182 0.67501,-0.257822 0.81458,0.452984 0.54801,0.926398 -0.93891,0.336395 -0.0335,0.545333 -0.11758,0.791352 -0.31031,0.15597 -0.52104,0.475238 -0.86845,0.557568 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Groenland (Danemark)\"\n\t\t\t\t\t\td=\"m 341.04999,41.069 c 0.70571,0.130611 1.48446,0.117312 2.14531,0.336322 0.68794,0.501977 -0.59969,0.352322 -0.93051,0.559115 -1.24824,0.256707 -2.58512,-0.0128 -3.79891,0.395397 -0.41793,0.214539 -0.72828,0.960452 -0.88158,1.185102 1.48103,0.697368 3.15322,0.559421 4.74372,0.57806 1.90473,-0.304492 3.90256,-0.464825 5.75409,0.195463 1.07629,0.02251 2.17534,-0.01927 3.2559,0.08754 -1.48774,0.861866 -3.20336,1.134962 -4.836,1.606003 -0.58575,0.08824 -1.23926,-0.366655 -1.68659,0.175332 -1.25019,0.888705 -2.76657,1.342802 -4.24723,1.672837 -0.94539,0.03595 -1.90403,-0.0143 -2.82587,0.186185 -0.90144,-0.05395 -1.78192,0.535108 -2.66216,0.348547 -0.42541,-0.185928 -1.09691,-0.624573 -1.37244,-0.0084 -0.26208,0.576259 -0.75494,0.752333 -1.35755,0.738083 -0.78897,0.01568 -1.56209,-0.226011 -2.15151,-0.755573 -0.48998,-0.243251 -0.98305,-0.535454 -1.53066,-0.605043 -0.0159,0.501936 0.68221,0.873508 0.66074,1.313363 -0.34446,0.306705 -0.95011,0.300017 -1.40229,0.520391 -1.45973,0.357942 -2.25479,1.79998 -3.43591,2.619449 -0.66908,0.62943 -1.71378,0.780323 -2.58275,0.600536 -0.73141,-0.439842 -0.70877,0.16858 -1.04458,0.652885 -0.37528,0.578341 -1.18076,0.602866 -1.8002,0.488145 -0.70606,-0.103578 -1.34622,0.242873 -1.992,0.470232 0.314,-0.574333 0.628,-1.148667 0.94199,-1.723 -0.66268,0.06706 -1.32039,-0.05892 -1.97101,-0.175003 0.39155,0.391466 0.31897,0.995442 -0.15198,1.285004 -1.25315,0.788321 -2.78499,0.454696 -4.182,0.639 0.36663,0.247497 0.94573,0.834957 0.50291,1.215027 -0.93697,0.123325 -1.91907,-0.04755 -2.87593,-0.11203 0.50703,0.411101 1.33568,0.582621 1.57304,1.221764 -0.16232,0.550118 -0.97075,0.239453 -1.4206,0.344032 -0.43537,0.07491 -1.56561,0.05012 -0.61458,0.364521 0.55948,0.289249 1.24218,0.344411 1.67216,0.859684 -0.36931,0.365592 -0.82119,0.726529 -1.36567,0.489354 -1.04523,-0.12347 0.13794,0.514083 -0.4002,0.87671 -0.24624,0.609902 -1.07649,-0.126993 -1.33271,0.186606 0.36371,0.413409 0.30442,1.134245 -0.38633,0.836917 -0.84079,-0.152081 -1.68864,0.138129 -2.54109,0.05841 0.58504,0.596161 1.44794,0.645284 2.121,1.081997 0.006,0.695034 -0.13926,1.354467 -0.45901,1.973004 -0.30198,0.286039 -1.59933,-0.258817 -1.01544,0.306813 0.33861,0.379721 0.3496,0.926936 0.3387,1.397821 -0.48252,0.158491 -1.06605,0.0035 -1.58626,0.134366 0.49565,0.206132 1.07239,0.524207 1.1665,1.074952 -0.0121,0.72276 -0.83307,0.215241 -1.23952,0.161353 -0.47658,-0.05377 -0.94336,-0.719945 -1.39052,-0.401797 -0.48769,0.166983 -0.6221,1.177065 -1.08125,0.394683 -0.4405,-0.339935 0.1897,-1.113056 -0.73925,-1.050253 -0.47336,-0.08534 -1.19718,-0.115361 -1.41937,-0.536827 0.51837,-0.410471 0.22743,-0.865686 -0.35058,-1.033109 -0.43804,0.277861 -0.9276,0.448678 -1.42077,0.497684 -0.62682,-0.0032 -1.31929,-0.05291 -1.90089,0.175987 -0.45354,0.228419 -0.89955,0.695588 -1.23635,0.05033 -0.17088,-0.958033 -1.4062,-0.783789 -2.05273,-1.238906 -0.46382,-0.191537 -0.89281,-0.735343 -0.86707,-1.235451 0.29368,-0.674208 -0.55334,-0.799777 -1.03011,-0.676225 -0.40535,-0.163399 -1.21245,-0.09849 -1.21507,-0.678373 -0.10102,-0.45643 1.10141,-0.907545 0.38599,-1.098047 -0.51288,-0.04898 -1.46338,0.05186 -1.40344,-0.699914 0.0399,-0.688822 -0.93449,-0.17153 -1.22728,-0.479662 -0.56739,-0.268591 -0.54623,-0.881472 0.0653,-1.072894 0.6207,-0.413463 1.46109,-0.336459 2.02321,-0.849604 0.73226,0.07742 0.40574,-1.062599 -0.18395,-0.703527 -0.7562,0.09926 -1.58275,0.04971 -2.17383,0.620599 -0.51851,-0.06753 -1.05576,0.71317 -1.42721,0.189863 -0.13787,-0.428042 0.007,-1.004281 -0.15579,-1.481863 -0.30505,-0.368365 -0.0536,-1.332266 -0.78481,-1.071927 -0.66434,0.08723 -1.19572,-0.472945 -1.68419,-0.847071 -0.14363,-0.521144 0.61892,-0.797498 1.00622,-0.882293 -0.11626,-0.190888 -1.00299,-0.19496 -1.44386,-0.125052 -0.58935,-0.34918 0.50113,-0.559672 0.84963,-0.483656 0.50119,-0.05933 1.18445,0.03826 1.27236,-0.619748 0.13702,-0.411127 -0.93285,-0.14923 -1.29338,-0.222776 -0.36328,0.105888 -1.32879,0.01538 -1.05227,-0.49648 0.18496,-0.337284 1.37383,-0.280468 0.5623,-0.551995 -0.52572,0.403605 -1.13358,-0.510255 -0.38302,-0.494999 0.68266,-0.263675 1.38051,-0.427413 2.1112,-0.284149 0.67678,0.116319 1.3679,0.17798 2.04071,0.269336 0.69905,0.20992 1.4405,0.239139 2.1641,0.315812 -0.14275,-0.520741 0.62704,-1.096204 -0.28811,-1.156552 -1.63164,-0.478291 -3.33285,-0.662304 -4.9669,-1.11845 0.39079,-0.625744 1.22649,-0.306206 1.81387,-0.179713 0.76295,0.199525 1.62579,0.368826 2.38315,0.105716 -0.003,-0.578189 0.16729,-1.144216 0.85778,-0.915936 0.60581,0.413448 0.95347,-0.450931 0.27879,-0.598631 -0.67722,-0.03126 -0.91031,-0.550138 -0.29236,-0.926432 0.6346,-0.469249 -0.49854,-0.626205 -0.87935,-0.630475 -0.84654,-0.07946 -1.7047,0.0157 -2.51996,-0.295072 -1.13355,-0.346694 -2.27285,-0.705768 -3.47392,-0.675454 -0.55042,-0.220456 -1.06807,-0.504446 -1.57098,-0.817002 0.67326,-0.304867 1.46066,-0.219658 2.18348,-0.132837 1.23226,0.233539 2.49834,0.19894 3.69197,0.620324 0.66574,0.207397 1.32425,0.441286 2.01053,0.573514 0.21499,-0.732367 -0.79778,-0.927108 -1.14696,-1.361898 -0.14099,-0.576969 -0.76367,-0.866464 -1.31178,-0.889789 -0.88112,-0.0697 -0.38924,-0.54439 0.19808,-0.597675 0.63856,-0.186199 -0.61238,-0.430792 -0.88053,-0.374692 -0.83049,0.05344 -1.6311,-0.173966 -2.4138,-0.421946 -0.5041,0.39243 -1.10031,0.674033 -1.56361,1.081774 -0.77812,0.30191 -1.64812,0.240216 -2.44431,0.06908 -0.40359,-0.175314 -1.15519,-0.206787 -1.11107,-0.794859 0.62571,-0.293055 0.83195,-1.033761 0.64579,-1.663668 -0.35378,-0.721068 0.48103,-0.674884 0.94322,-0.488401 0.4827,0.297314 1.11942,-0.422818 0.46606,-0.693148 -0.47522,-0.378832 -1.06384,-0.588752 -1.58404,-0.86119 -1.19254,-0.872308 -2.03448,-2.108839 -3.0823,-3.124038 -0.62337,-0.551749 -1.58033,-0.383452 -2.32671,-0.699009 -0.5811,-0.102288 -0.95538,-0.486532 -0.84403,-1.094546 -1.2306,-0.733183 -2.72575,-0.433834 -4.06235,-0.813884 -2.63724,-0.645481 -5.3635,-0.914022 -8.07204,-0.875318 -0.89191,0.254103 -1.82995,0.226961 -2.7243,0.471129 -1.32043,0.283583 -2.63663,-0.06792 -3.93031,-0.328926 0.32333,0.506511 0.45275,1.06307 -0.35386,0.829941 -1.65331,-0.07614 -3.26357,-0.525535 -4.89114,-0.801941 0.66725,-0.225852 1.31002,-0.531669 2.00099,-0.680001 -0.26596,-0.622555 -1.12417,-0.33218 -1.67084,-0.412603 -1.24283,-0.01192 -2.50683,0.01934 -3.72985,-0.165185 -0.63519,-0.233787 -1.27491,-0.452155 -1.94029,-0.583213 0.77125,-0.53061 1.75999,-0.298242 2.6427,-0.308326 2.68641,0.105399 5.39991,0.321089 8.07072,-0.06769 0.36797,-0.05068 1.42013,-0.189778 0.89099,-0.656942 -0.722,-0.409038 -1.5453,-0.47971 -2.34295,-0.287483 -1.21125,0.338427 -2.47543,0.358687 -3.71747,0.180442 -1.28292,0.173196 -2.70402,0.346795 -3.83299,-0.435 -0.7722,-0.264517 -1.58404,-0.23709 -2.37958,-0.216455 -0.59782,-0.0857 -1.14914,-0.360374 -1.72643,-0.529545 -0.18607,-0.614719 0.49292,-0.940898 1.01924,-0.903317 2.0974,-0.205322 4.21291,-0.34611 6.30479,-0.531837 1.65965,-0.867801 3.56192,-0.687016 5.36745,-0.714963 1.03308,-0.186898 2.09993,0.01972 3.12246,-0.114952 0.3562,-0.326609 1.10672,-0.204676 1.23128,-0.694742 -0.0444,-0.48296 0.91348,-1.116318 0.0854,-1.115438 -0.86365,-0.211549 -1.78843,-0.154269 -2.6695,-0.112599 -1.04319,0.316084 -2.10094,-0.02643 -3.09413,-0.358152 0.32043,-0.43066 0.58504,-0.946897 1.19967,-0.926476 1.73807,-0.406372 3.53731,-0.473662 5.29176,-0.804083 1.70697,-0.220083 3.43061,-0.45587 5.14997,-0.300678 0.83096,-0.09712 1.71391,-5.3e-5 2.51194,-0.212319 0.54049,-0.277815 -0.24395,-0.850776 -0.18034,-1.285445 0.86018,-0.246032 1.78718,-0.176473 2.67217,-0.15451 1.87473,0.215609 3.73735,0.691477 5.58508,0.958353 0.90114,-0.179066 0.64543,-0.349083 -0.10827,-0.515204 -0.56929,-0.122998 -1.06922,-0.382942 -1.50698,-0.765638 1.64154,-0.156436 3.30573,-0.210602 4.94503,-0.453508 1.49288,-0.131427 2.99611,-0.360213 4.4869,-0.09083 0.56886,0.01947 0.25322,0.945016 0.4454,1.350355 -0.10808,0.711416 0.82839,0.278713 1.19747,0.11828 0.5528,-0.1401 0.44258,-0.961621 0.83102,-1.183441 2.14298,5.54e-4 4.19246,0.739605 6.30518,1.00614 0.53911,-0.512648 -0.651,-0.513828 -0.88434,-0.893063 -0.23794,-0.355975 -1.33368,-0.417168 -1.13731,-0.767846 0.39039,-0.349275 1.03443,-0.04384 1.53156,-0.134016 1.42188,-0.05872 2.79762,0.370145 4.20907,0.48727 1.61048,0.250926 3.20366,0.608102 4.82543,0.801447 1.09502,0.135168 2.21188,0.374383 3.3065,0.343292 0.6469,0.02004 0.85009,-0.529668 1.09924,-1.020365 0.50506,-0.498587 0.24551,-0.89514 -0.41126,-0.928908 -0.72307,-0.127929 -1.37853,-0.447424 -2.03791,-0.755811 1.14623,-0.508226 2.43581,-0.09064 3.64185,-0.310674 1.95656,-0.215924 3.95599,-0.563219 5.89562,-0.04285 1.69171,0.458687 3.44525,0.544646 5.18555,0.663527 0.48415,-0.4058 -0.009,-1.134251 0.17716,-1.246791 2.67718,-0.264011 5.37135,-0.347032 8.05354,-0.10566 1.61828,0.173707 3.23038,-0.205292 4.84753,-0.275839 1.47362,-0.120308 2.94948,-0.01333 4.41057,0.178614 1.25289,-0.06666 2.51965,-0.0615 3.75756,0.102475 1.11615,-0.185898 2.2554,0.143359 3.38562,0.08653 1.21254,0.04783 2.45271,5.41e-4 3.59041,0.486306 1.27105,0.448286 2.61311,0.753483 3.96361,0.555366 1.22762,0.215434 2.47327,0.281473 3.71198,0.405 0.81501,0.417772 -0.0116,0.643448 -0.52802,0.735357 -1.88814,0.170078 -3.78277,0.252116 -5.67117,0.404443 -2.40421,-0.01403 -4.81549,-0.156027 -7.21923,-0.155463 -2.74638,0.39934 -5.57305,-0.08904 -8.28717,0.583329 -0.44015,0.0111 -1.24237,0.169295 -1.13422,0.634771 0.87919,0.429111 1.8508,0.006 2.77837,-0.01091 2.63727,-0.268449 5.29371,0.06024 7.93345,-0.201525 1.50396,0.06375 3.02916,-0.152644 4.51687,0.100476 1.03164,0.244935 2.08791,0.642597 3.14547,0.295685 1.73503,-0.18022 3.43387,-0.608955 5.18351,-0.648598 0.60969,0.147288 0.84645,0.622752 0.15199,0.915275 -1.5126,0.475934 -3.14367,0.723312 -4.47021,1.660755 -0.33941,0.549088 0.71416,0.587443 1.10907,0.441551 1.13423,-0.129128 2.17127,-0.703721 3.28437,-0.959017 1.54278,-0.515293 3.15427,-0.770641 4.73519,-1.113144 1.49256,-0.27207 2.99572,0.04875 4.49287,0.02156 0.75588,-0.138874 1.51486,-0.26768 2.19986,-0.624574 1.82367,-0.450068 3.71887,-0.127882 5.57223,-0.07948 1.29443,0.01483 2.53726,0.421582 3.82579,0.491514 0.75301,0.436865 -0.32645,0.662532 -0.74633,0.635735 -1.19561,0.226879 -2.46993,0.07679 -3.57072,0.670492 -0.76698,0.45287 -1.64709,0.561559 -2.49883,0.774051 -1.0087,0.411413 -2.07042,0.711952 -3.17044,0.579296 -1.42473,0.03361 -2.85472,0.0064 -4.27785,0.01782 -0.88798,0.160572 -2.0019,0.05801 -2.54085,0.926609 0.16163,0.640755 0.93709,0.0724 1.39494,0.129684 1.37207,-0.245751 2.77386,-0.135516 4.15706,-0.05769 0.18135,0.653321 -0.73598,0.629331 -1.18364,0.684038 -0.81696,0.112582 -1.72502,-0.07581 -2.47226,0.301617 -0.31277,0.410327 -0.3401,1.0075 -0.74614,1.399693 -0.77924,0.43303 -1.77419,-0.07493 -2.56945,0.230714 -0.62033,0.756203 -1.45681,1.377181 -1.90451,2.248162 0.31333,0.355714 0.9343,0.601464 1.26449,0.09001 0.83446,-0.763709 2.00035,-0.549131 3.02047,-0.41703 0.57483,0.138837 1.35263,-0.05761 1.72406,0.509802 -0.19255,0.463274 -1.01696,0.02518 -1.47063,0.132248 -0.37231,-0.07199 -1.54319,0.02666 -0.89033,0.524301 0.78566,0.160807 1.6454,0.165984 2.43854,0.349716 0.75567,0.03398 1.65298,-0.374994 2.28848,0.151804 0.4659,0.483346 -0.12061,1.043876 -0.67045,0.76417 -1.38789,-0.156336 -2.79077,-0.205843 -4.18205,-0.23353 -0.82173,-0.07975 -1.55284,0.363562 -2.32132,0.512428 -0.74215,-0.10244 -1.44258,-0.365843 -2.2019,-0.229282 -0.7946,0.39213 0.20545,0.610687 0.61313,0.801324 1.52543,0.609972 3.2236,0.453817 4.82424,0.655262 0.72726,0.08363 1.38436,0.824881 1.27227,1.57256 -0.36561,0.572659 -1.03334,0.499515 -1.6099,0.368059 -0.56315,-0.02381 -1.14797,-0.298618 -1.6921,-0.06806 -0.13129,0.573563 0.25384,1.007581 0.83084,0.985993 0.90748,0.216709 1.82412,0.389264 2.74317,0.568008 0.77391,0.40772 -0.0867,0.714484 -0.5677,0.715779 -1.71346,0.370223 -3.47542,-0.0067 -5.20889,-0.02996 -0.50251,0.0093 -1.12603,0.607223 -0.24542,0.632174 1.06906,0.03197 2.1694,0.03854 3.172,0.457 0.23184,0.554019 0.0767,1.104462 -0.60964,0.841051 -0.8076,-0.0095 -1.67764,-0.05982 -2.40235,0.350951 -1.67606,0.09282 -3.42465,-0.142997 -4.88999,-1.001 -0.90295,-0.171766 -1.75107,0.440864 -2.6231,0.584703 -0.81748,-0.01705 -1.5641,0.366206 -2.38418,0.233094 -0.95184,-0.03542 -1.92502,-0.199201 -2.83973,0.168203 -0.41817,0.414257 0.13772,1.045378 0.60595,1.095912 0.81908,0.228242 1.70834,0.06748 2.5373,0.315398 0.94675,0.267645 1.98604,-0.229426 2.85909,0.34087 1.21162,0.477554 2.4413,0.878671 3.69881,1.225253 0.66104,0.07508 1.10989,0.552005 1.32662,1.153803 0.25236,0.440346 0.96903,-0.158005 1.35301,-0.112158 0.84004,0.325367 0.69409,1.380738 0.88521,2.103919 -0.51536,0.689803 -1.38207,-0.04058 -2.07123,0.105972 -0.95207,0.04232 -1.89635,0.04763 -2.82509,-0.200911 -0.61351,-0.116523 -0.96624,-0.661404 -1.29894,-1.129442 -1.22317,-0.849516 -2.73008,-1.333201 -4.22255,-1.27556 -0.44995,0.155426 -0.9342,0.165255 -1.39719,0.218943 z m 10.315,-1.042999 c -1.08331,-0.45131 -2.23227,-0.690769 -3.358,-0.987 -0.72654,-0.637136 0.39661,-0.378407 0.84066,-0.448587 1.06367,0.0138 2.11248,0.314862 3.10435,0.686586 0.34417,0.5901 -0.029,0.767977 -0.58701,0.749001 z m -69.79098,6.108997 c -0.74498,-0.146231 -1.40502,-0.547877 -2.15509,-0.674535 -0.48759,-0.182252 -0.57188,-0.974036 -0.27598,-1.326149 0.41228,-0.398844 1.05789,0.09946 1.57259,0.006 1.3073,-0.0023 2.50971,0.555558 3.77133,0.799192 0.35629,0.05341 1.3674,0.498701 0.60769,0.676816 -1.1393,0.01953 -2.23421,0.313825 -3.35607,0.486255 -0.056,-0.0012 -0.10854,0.03284 -0.16447,0.03243 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Allemagne\"\n\t\t\t\t\t\td=\"m 417.259,94.301003 c -0.26832,-0.416769 0.1528,-0.884584 0.065,-1.305001 0.48629,-0.302191 0.21727,-0.99219 0.76833,-1.229701 0.60191,-0.349469 0.7235,-0.687309 -0.0792,-0.709704 -0.56199,0.199506 -0.87789,-0.373699 -1.33467,-0.215634 -0.54964,0.02318 -0.93313,0.05914 -1.37752,-0.312963 -0.62878,-0.2593 -0.47017,-0.687655 -0.21373,-1.079491 -0.33788,-0.03548 -1.21767,-0.413359 -0.80157,-0.851725 0.60151,-0.314235 0.15196,-1.139042 -0.37468,-1.267782 0.28939,-0.485083 -0.45984,-0.637311 0.38721,-0.892871 -0.29049,-0.215538 0.34515,-0.80573 -0.2072,-1.141843 -0.73572,-0.234484 0.37185,-0.669457 0.66798,-0.361289 0.59345,-0.02471 1.00776,-0.31875 1.27078,-0.758781 0.67053,-0.341612 -0.0704,-0.713944 -0.51677,-0.693643 -0.11262,-0.687373 0.93317,0.0023 0.782,-0.734573 0.47745,-0.276494 0.35855,-1.051226 -0.15064,-1.115547 -0.16892,-0.530009 0.539,-0.73908 0.99378,-0.676187 0.45529,0.06933 1.13639,-0.315578 1.34565,0.244968 -0.0674,0.704799 0.55583,0.133059 0.4687,-0.05801 0.84783,0.502593 0.0798,-0.39735 0.69016,-0.593805 0.3381,0.155992 1.71643,0.05922 0.78612,-0.114275 -0.35814,-0.281094 0.0471,-0.397756 -0.26274,-0.676716 0.49991,-0.271904 -1.27056,-0.05494 -0.23179,-0.345179 0.86341,-0.04783 0.24584,-0.552356 -0.11486,-0.86548 -0.48937,-0.590799 0.55041,-0.404548 0.90692,-0.47394 0.56467,-0.07391 1.13722,-0.126109 1.58704,0.292732 0.8531,0.165389 -0.0814,1.030863 0.53683,0.771756 0.31819,0.228961 0.77096,0.135005 1.20092,0.347366 0.37516,0.119933 1.38956,-0.382765 1.02303,0.347157 -0.633,0.15355 -0.81943,0.644861 -0.0213,0.45927 0.4128,-0.03734 0.92942,0.379484 1.22018,-0.278108 0.85498,-0.01731 1.62758,-0.34945 2.418,-0.636002 0.53453,0.02891 0.78844,0.04191 1.23719,0.431833 0.33967,0.478024 1.10706,-0.219258 1.20517,0.391253 -0.11833,0.639074 0.69823,0.549958 0.96333,0.683772 0.34123,0.131731 0.653,0.845174 0.39137,1.230681 -0.41734,0.333991 -0.78272,0.701507 0.0184,0.863979 0.86121,0.131281 0.0535,0.721235 0.57046,0.984795 0.49698,0.334965 -0.0713,0.800098 -0.01,1.140461 0.16594,0.481323 0.49584,0.530719 0.83338,1.043616 -0.006,0.321867 -0.36954,1.12509 -0.86273,0.84161 0.0323,-0.637333 -1.05908,-0.355915 -0.57733,-0.08111 -0.48468,0.152574 -0.94182,0.239762 -1.36806,0.378808 -0.47,0.09082 -0.84454,0.08882 -1.1839,0.384932 -0.40742,0.200524 -0.82988,0.22785 -1.33077,0.4494 -0.45056,-0.103582 -1.11013,0.365041 -0.52949,0.748893 0.78905,-0.04195 -0.11018,0.651524 0.35812,0.937885 0.14914,0.509371 0.82472,0.454536 1.13067,0.689368 0.34723,0.271557 0.812,0.716854 1.20877,0.623825 0.27185,0.183336 1.18594,0.840825 0.48692,0.975596 -0.48524,0.266399 -1.0027,-0.295088 -1.07976,0.475762 -0.37384,0.239231 -1.21305,0.233077 -1.31123,0.629308 0.56381,0.479576 0.27698,0.731577 0.64566,1.058766 -0.17747,0.749731 -0.59024,-0.195965 -0.87022,-0.128017 -0.53136,-0.01975 -0.92815,-0.118966 -1.3738,0.125042 -0.54362,-0.05785 -0.97627,0.08739 -1.42756,0.212542 -0.26991,0.354683 -1.05468,0.361308 -1.24945,-0.05279 -0.59962,-0.140697 -0.87146,-0.07267 -1.08489,0.375912 -0.51984,0.456029 -0.42128,-0.188773 -0.8734,-0.335902 -0.39377,-0.288109 -0.85523,0.142137 -1.34072,-0.222738 -0.45834,-0.199595 -0.99636,-0.0424 -1.45056,-0.180486 -0.4817,-0.400886 -0.5539,0.35828 -0.901,0.267998 -0.45036,-0.139586 -0.94817,0.0094 -1.38797,0.069 -0.0862,-0.02892 -0.1898,-0.06126 -0.26902,-0.089 z M 432.01199,80.473 c -0.38658,0.08132 -1.17649,-0.252664 -0.65201,-0.413214 0.2366,0.116387 0.51658,0.161566 0.65201,0.413214 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Suisse\"\n\t\t\t\t\t\td=\"m 421.68301,94.397003 c 0.28738,0.39436 -0.16163,0.798471 0.13941,1.09881 0.56583,-0.166876 0.77716,0.671439 1.32281,0.306598 0.72903,-0.540072 0.42026,0.386885 0.48528,0.783909 -0.29488,-0.22974 -1.23852,-0.129089 -0.62367,0.294768 -0.14207,0.846833 -0.52366,-0.282916 -0.97652,0.213698 -0.47774,0.381761 -0.61856,-0.858937 -0.98126,-0.251084 -0.1555,0.407988 -0.43573,0.859386 -0.58609,1.246492 -0.5638,-0.0022 -0.38441,-0.580082 -1.01989,-0.69699 -0.32598,-0.54805 -0.37729,-0.615726 -1.03308,-0.174202 0.23028,0.433599 -0.52108,1.01423 -0.95019,0.689365 -0.4535,-0.116845 -1.07488,0.389895 -1.44659,0.0022 -0.18002,-0.416728 -0.17817,-1.404871 -0.82534,-1.040497 -0.53693,0.06011 -0.82801,0.954267 -1.40687,0.600882 0.52577,-0.300178 -0.12142,-1.068524 0.6439,-1.20251 0.38067,-0.312963 0.45093,-0.641283 0.94798,-0.886194 0.6405,-0.465262 0.38652,-0.4326 0.58811,-0.887294 0.45726,-0.03253 0.86323,0.341908 1.26046,-0.168065 0.44049,-0.0054 0.89528,0.06126 1.36607,-0.10604 0.78882,0.296988 0.31767,-0.203728 1.01973,-0.268953 0.3228,0.03381 0.83234,0.27122 1.36035,0.177622 0.24186,0.05142 0.49024,0.178364 0.7154,0.267436 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Autriche\"\n\t\t\t\t\t\td=\"m 421.68301,94.397003 c 0.45463,-0.03856 0.90727,-0.137984 1.16907,0.267645 0.0765,0.396627 0.74255,0.369743 0.82331,-0.209142 0.1524,-0.136924 1.06249,-0.230978 1.13262,0.266494 0.54632,0.06429 0.98488,-0.16864 1.38444,-0.340726 0.3389,-0.334003 1.14114,0.136271 1.40414,-0.29214 0.4388,-0.02454 0.93509,0.0081 1.34842,0.137863 -0.0434,0.743457 1.0552,-0.04791 0.33845,-0.220439 0.24549,-0.177301 -0.7941,-0.861881 -0.19589,-1.060626 0.42527,-0.25314 1.30279,-0.140614 1.23143,-0.842935 0.4828,0.199847 0.914,-0.03788 1.396,-0.121994 0.63388,0.337537 1.46395,0.260871 1.86689,-0.38253 0.30864,-0.60615 0.94361,-0.07723 1.43514,-0.04725 0.73793,0.211152 1.48287,0.367272 2.24041,0.158187 0.43195,-0.134158 1.24197,0.104219 0.95803,0.689137 -0.24226,0.566811 0.82651,0.780534 0.79672,1.074422 -0.68323,0.0902 -0.42264,0.862466 -1.19431,0.668807 -0.46496,-0.323841 -1.1115,0.116386 -0.29023,0.205224 0.19768,0.408462 -1.03575,0.432259 -0.31665,0.954007 -0.11139,0.606419 -0.90214,0.60377 -1.17485,0.836975 0.23706,0.69872 -0.85797,-0.141771 -1.12309,0.385318 -0.70095,-0.124555 -1.47849,-0.124657 -1.97915,0.462766 -0.40956,-0.03936 -0.96318,-0.11242 -1.42794,-0.201687 -1.15894,-0.09836 -2.31243,-0.261969 -3.45696,-0.489377 -0.46823,-0.275112 -0.53604,-0.936648 -1.00453,-0.7589 -0.48108,0.135545 -0.97544,0.110572 -1.44148,0.0599 -0.54643,0.08504 -0.73112,0.769894 -1.37775,0.44976 -0.60593,-0.06053 -0.66149,-0.708888 -1.2708,-0.126379 -0.42443,-0.146313 -0.88905,-0.420724 -1.18175,-0.505824 -0.37356,-0.533063 0.33792,-0.518576 -0.0897,-1.016555 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"France\"\n\t\t\t\t\t\td=\"m 421.39401,104.558 c 0.22832,0.47858 0.0629,0.92377 0.25553,1.38144 0.0688,0.58425 -0.34276,0.99622 -0.3643,1.55971 -0.0471,0.58765 -0.52083,0.88033 -0.85397,0.42746 -0.85757,-0.0365 0.22087,-0.60026 -0.68527,-0.57661 0.57999,-0.57449 -0.54603,-0.20201 0.0465,-0.7347 -0.48488,-0.24759 -0.0326,-0.46909 -0.2115,-0.79679 0.30911,-0.38638 0.88095,-0.4234 1.21183,-0.6264 0.73049,0.35712 0.11079,-0.59911 0.6012,-0.63411 z M 396.323,103.853 c 0.5917,-0.0901 0.92142,-0.61352 0.9511,-1.17836 0.12796,-0.53588 0.25593,-1.07176 0.38389,-1.60764 0.87875,-0.41022 -0.36537,0.0129 0.009,-0.56362 0.0463,-0.44523 0.12833,-1.2991 0.35315,-1.457356 0.39538,0.141743 0.82508,0.858685 0.90537,0.916985 -0.13031,-0.638519 -0.69393,-0.970739 -1.11875,-1.40601 0.17799,-0.51292 0.56709,-0.909959 -0.019,-1.375 -0.40463,-0.401354 -1.10504,-0.114238 -1.36803,-0.711863 -0.73329,-0.321042 -0.21843,-0.754631 -0.52897,-1.105138 -0.38884,-0.190743 -1.40461,-0.240343 -0.79408,-0.817292 -0.39727,-0.394661 -0.90353,0.257934 -1.30997,-0.240608 -0.59921,-0.193692 -1.26211,-0.402029 -1.83987,-0.492459 -0.34584,-0.446216 -1.09817,0.318505 -1.28677,-0.341441 -0.90547,-0.129597 -0.19345,-0.276983 0.33369,-0.278198 -0.45448,-0.547896 -0.67928,-0.107248 -0.083,-0.641999 -0.45703,0.0906 -1.39333,0.04846 -0.73745,-0.351968 0.48636,-0.149955 1.02096,-0.228666 1.51843,-0.403036 0.33939,0.26827 0.85843,0.03197 1.15467,-0.213663 0.50479,-0.11787 1.01274,-0.168967 1.31989,0.327702 0.38207,0.636773 1.00003,-0.162475 1.44027,0.1352 0.53489,-0.180513 0.77701,-0.121087 1.19646,-0.01709 0.90607,0.03049 0.003,-0.428961 0.29307,-1.001666 0.0229,-0.483116 -0.73852,-0.668162 -0.79189,-1.257795 0.0967,-0.330248 0.99881,0.1587 1.41184,-0.114551 -0.0328,0.343982 0.15558,1.016959 0.76476,0.670704 0.58742,-0.0016 1.16951,0.157856 1.73143,0.205663 0.27884,-0.02316 1.55105,-0.356288 0.75334,-0.42789 -0.52687,-0.256772 0.49923,-0.645563 0.78618,-0.744608 0.7835,-0.241623 1.71067,-0.211555 2.27399,-0.895005 -0.0279,-0.526587 -0.21204,-1.365993 0.48252,-1.509183 0.50777,-0.330383 1.15319,-0.161583 1.67349,-0.40581 0.15556,0.46128 0.64213,1.195151 1.1637,0.717405 0.49998,-0.237646 0.40073,0.995695 1.07658,0.665362 0.30781,0.382427 0.89882,0.223771 1.39997,0.442205 0.10962,0.187776 -0.18458,1.017623 0.53885,0.746606 0.46583,0.275327 1.05043,-0.82428 0.94687,-0.192645 -0.1039,0.647998 0.48517,0.477841 0.93903,0.767063 0.39146,0.494354 0.83271,0.267222 1.271,0.372002 0.61516,0.118599 1.32837,-0.09368 1.78298,0.456001 0.45407,0.363404 0.83841,0.338295 1.39645,0.311259 0.44797,-0.122876 0.80462,0.413708 1.3696,0.215763 0.8888,0.05341 0.46706,0.416062 -0.0387,0.765375 -0.49972,0.236525 -0.21616,0.905083 -0.7043,1.175598 0.0792,0.422349 -0.32513,0.886713 -0.065,1.305 -0.40436,0.526217 -0.82668,0.18364 -1.29723,0.203015 -0.24068,0.46041 0.0791,0.420969 -0.58093,0.87891 -0.4974,0.241437 -0.5968,0.547303 -0.92998,0.878891 -0.76139,0.123562 -0.19258,0.852584 -0.62615,1.175725 0.2869,0.404888 0.82933,-0.295793 1.17828,-0.514539 0.65987,-0.412148 0.79896,0.216377 0.94879,0.745389 0.26318,0.599604 -1.07843,0.576935 -0.0205,0.976318 0.10315,0.470556 0.78172,0.58515 -0.0319,0.956505 -0.32265,0.172983 -1.24817,0.06327 -0.51135,0.591787 0.60225,0.051 1.0034,0.50786 0.34597,0.80292 -0.21491,0.5022 0.54509,0.82503 0.95059,0.92578 0.60175,-0.21176 1.06046,0.0562 0.67643,0.6873 -0.72428,0.58312 -1.568,0.9939 -2.289,1.592 -0.90151,0.13418 -1.91076,0.56092 -2.72555,-0.0748 -0.44054,-0.3559 -0.99777,-0.49222 -1.53275,-0.31292 -0.66864,-0.002 -1.26769,-0.61797 -1.9374,-0.23947 -0.67566,0.29577 -1.50378,0.78435 -1.61248,1.5594 0.26539,0.75444 0.14396,0.81611 -0.59783,0.79458 -0.41569,0.26344 -0.87485,0.17148 -1.34581,0.0158 -0.52933,0.38584 -0.81666,-0.37075 -1.41237,-0.0425 -0.48089,-8.6e-4 -0.31489,-0.85852 -1.03019,-0.70183 -0.64236,-0.30837 -0.94177,-0.0548 -1.25206,0.15438 -0.5466,0.0634 -0.8393,-0.12233 -1.41654,-0.0386 -0.29315,-0.5439 -0.89757,-0.011 -1.20227,-0.34581 -0.39168,-0.33508 -0.97371,-0.22806 -1.46599,-0.48308 -0.72307,0.31998 0.12937,-0.71384 -0.74674,-0.38611 -0.15656,-0.0809 -0.31755,-0.16288 -0.47101,-0.243 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<g id=\"Benelux\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Pays-Bas\"\n\t\t\t\t\t\t\td=\"m 416.48801,81.945 c 0.32194,0.432469 -0.23699,1.015222 -0.45536,1.188817 -0.73275,-0.238447 -0.56723,0.726911 0.0734,0.419335 0.60687,0.454399 -0.38239,0.58052 -0.36403,1.074846 -0.47018,0.334955 -1.05184,0.221201 -1.51929,0.251683 -0.86788,0.139962 0.0698,0.404925 0.11134,0.873946 -0.15361,0.471483 0.0524,0.734007 -0.50406,0.944371 0.30517,0.216786 0.16978,0.856501 -0.54153,0.651199 -0.15948,-0.345239 0.61912,-0.966794 -0.24677,-1.093595 -0.5041,-0.163943 -0.91423,0.02368 -1.27536,-0.44953 -0.42516,-0.01324 -0.75323,-0.03656 -1.2939,0.03898 -0.20154,0.269341 -0.91467,0.190663 -1.37955,0.07242 -0.50707,-0.295925 -0.91475,-0.543477 -0.0837,-0.815358 0.69437,-0.414018 1.37867,-0.912912 1.62365,-1.724313 0.0932,-0.549171 0.65387,-0.821983 1.1445,-0.700652 0.84518,0.396987 -0.0685,0.581078 -0.0432,0.880061 -0.36329,0.595392 0.49144,0.384507 0.97385,0.575176 0.28866,-0.169122 1.26174,-0.736027 0.43901,-0.777445 -0.45571,-0.317934 0.23995,-0.655652 -0.71032,-0.576498 -0.0723,-0.453516 0.0826,-0.955199 0.68628,-0.976448 0.70618,-0.368571 1.49395,-0.129193 2.24307,-0.330029 0.39577,-0.027 0.72225,0.517723 1.12195,0.473027 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Belgique\"\n\t\t\t\t\t\t\td=\"m 406.18301,86.551003 c 0.66006,-0.312405 1.35278,-0.754972 2.10999,-0.496003 0.53481,-0.04833 0.95252,-0.190655 1.50452,-0.02852 0.56136,-0.03502 0.73253,-0.167799 1.3093,-0.273568 0.35266,0.114453 0.8787,-0.06698 1.12618,0.475087 0.40846,-0.212514 1.23599,0.01891 1.24427,0.437983 -0.45731,0.55575 -0.13974,0.772694 0.51473,0.702673 0.52761,0.156783 0.86161,0.989461 0.25331,1.264876 -0.37399,-0.01011 -1.02473,0.276375 -0.90149,0.823661 0.57256,0.4194 0.11711,0.626361 -0.41892,0.628453 -0.3877,-0.0062 -0.7459,-0.668106 -1.28136,-0.603732 -0.60075,0.131416 -0.008,-1.283651 -0.5898,-0.581654 -0.20488,0.260535 -1.09021,0.380125 -1.20638,0.06625 0.16787,-0.517021 -0.0712,-0.775588 -0.70807,-0.735399 -0.46776,-0.120797 -0.85702,-0.260547 -1.29914,-0.502403 -0.10603,-0.86882 -0.66762,-0.166826 -1.11069,-0.382551 -0.26979,-0.205573 -0.42306,-0.485406 -0.54645,-0.79515 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Luxembourg\"\n\t\t\t\t\t\t\td=\"m 413.51901,90.070999 c 0.35402,-0.449771 -0.6117,-0.710353 0.022,-1.200996 0.56948,-0.558826 0.6249,0.238867 1.08401,0.458 0.90044,0.01345 0.0348,0.459369 0.24799,0.880997 -0.42252,-0.134019 -0.91505,-0.04257 -1.35398,-0.138001 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Scandinavie\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Suede\"\n\t\t\t\t\t\t\td=\"m 453.79501,53.873001 c -0.60941,-0.05692 -1.2361,0.312424 -1.81531,0.187936 -0.53188,-0.132293 -1.05303,-0.738887 -1.57819,-0.291384 -0.69463,0.22515 -0.94117,1.218461 -1.7826,1.041596 -0.62314,0.05407 -0.91969,0.443784 -0.28792,0.793851 -0.27122,0.372879 -1.09896,0.4549 -1.19446,0.731735 0.19758,0.283839 1.40899,0.575415 0.64534,0.830638 -0.77559,0.21799 -0.96031,1.205914 -1.77618,1.342703 -0.59743,0.203445 -1.19856,0.599259 -1.79773,0.677492 -0.53926,-0.45539 -0.92986,0.213362 -1.32569,0.469764 -0.6543,0.06909 -1.20548,0.430106 -1.63026,0.898668 -0.48957,0.06974 -1.2596,-0.192951 -0.81601,0.536999 -0.34661,0.569861 -0.90239,0.36224 -1.436,0.237003 0.18853,0.541362 0.63567,0.881681 0.28305,1.471664 -0.0286,0.500446 -1.15059,0.20866 -0.67544,0.964349 0.0181,0.501485 0.17184,1.073503 0.37753,1.360239 -0.44634,0.280573 0.8354,0.07811 1.02752,0.383341 0.62519,-0.252208 0.90772,0.570161 1.42152,0.789185 0.56028,0.09692 0.99097,0.2409 1.29082,0.69102 0.5814,0.486311 -0.53331,0.392331 -0.81189,0.755436 -0.65141,0.177882 -1.38021,0.670491 -2.02408,0.293201 -0.70083,-0.01003 -1.40656,-0.418749 -2.08181,-0.290715 -0.58512,-0.208569 -1.06098,0.424176 -0.14948,0.183066 0.4547,0.117233 0.98737,0.256764 1.412,0.420776 0.45648,0.224736 0.84855,0.05024 1.33976,-0.01506 0.42422,-0.195322 1.02985,-0.06785 1.3105,-0.250506 0.5625,0.434353 -0.94368,0.03914 -0.40225,0.570191 -0.59013,-0.03906 -0.82038,0.712099 -1.32352,0.540949 0.0525,-0.890807 -0.28924,-0.148316 -0.57022,0.165403 -0.51602,0.308256 -0.84501,0.205268 -1.24729,0.401226 -0.47342,0.0071 -1.44725,-0.11151 -0.82735,0.524153 0.57686,0.03342 0.68328,1.035115 0.21578,1.188816 -0.88487,-0.137919 0.0352,0.445179 -0.21215,0.733262 0.54981,0.358079 -0.56354,0.741493 -0.36646,1.31284 -0.0473,0.613818 -0.64373,1.034711 -0.95617,1.543585 -0.27875,0.804881 -0.76277,0.164143 -1.27266,0.285507 -0.5151,0.224591 -1.08146,0.01336 -1.62172,0.02407 -0.0849,0.495021 -0.99319,0.165903 -1.09615,0.877845 0.30115,0.330896 0.19757,1.046347 -0.52386,0.725862 -0.66499,-0.104848 -1.31782,0.381802 -2.00055,0.153651 -0.74087,0.07907 -0.37803,-0.405775 -0.0834,-0.749354 -0.48837,-0.360914 -0.90583,-0.797042 -1.271,-1.281006 0.66183,-0.143097 0.45033,-0.369032 1.00512,-0.579558 -0.31953,-0.261199 -0.66702,-0.497257 -1.08488,-0.751878 -0.54676,-0.137614 -0.49228,-1.162125 -1.11525,-1.073563 0.2707,-0.57039 -0.63084,-0.823112 -0.5192,-1.231643 0.45838,-0.491225 0.27978,-1.005086 -0.40945,-0.730558 -0.21902,-0.333246 -0.76321,-0.240622 -0.6453,-1.012691 -0.25825,-0.403416 -0.23643,-1.171288 0.35265,-0.688736 0.25347,0.681943 0.79249,-0.05748 0.84829,-0.489372 -0.34267,-0.640496 -0.10132,-0.886223 0.33338,-1.226267 0.11993,-0.455063 1.04539,-0.244213 1.25746,-0.73745 0.0463,-0.568675 0.44053,-0.970274 -0.15036,-1.426778 -0.71718,-0.576296 -0.0627,-0.619052 0.53352,-0.684502 0.49432,-0.449395 0.44882,-0.999615 -0.29493,-1.024846 -0.53826,-0.112514 -1.09686,-0.486716 -0.696,-1.062113 0.45099,-0.599885 -0.31148,-0.925931 -0.45904,-1.38668 0.22672,-0.561199 0.32544,-1.174623 0.45408,-1.742056 0.66347,-1.024698 1.94511,-1.416552 3.1139,-1.245307 0.4293,-0.02156 1.21565,0.02105 1.30796,-0.470643 0.004,-0.540384 -0.7399,-0.758864 -0.87722,-0.965127 0.68308,-0.805018 1.85131,-1.458715 1.75062,-2.665989 -0.15606,-0.769405 0.62653,-0.601797 1.11976,-0.615157 0.90267,-0.570259 1.79418,-1.213661 2.6734,-1.785102 0.39303,-0.402883 -0.45963,-1.031002 0.27267,-1.262896 0.66142,-0.489596 1.31128,-1.301154 2.23312,-1.01355 0.56592,0.0418 1.40049,0.274136 1.61368,-0.445535 -0.16292,-0.679066 0.26523,-1.025328 0.88249,-0.690156 0.98869,0.234012 1.99579,0.406228 3.00252,0.521157 0.53748,-0.408467 0.49356,-1.177706 0.716,-1.764999 0.71537,-0.05787 1.508,-0.12891 2.03217,0.462681 1.10413,0.744478 2.40244,1.104976 3.72323,1.200604 0.6412,0.02451 1.13044,0.481437 1.6276,0.832713 -0.14928,0.557402 -0.0931,1.114283 0.37664,1.495133 0.31204,0.441185 0.76294,1.055662 0.2619,1.534586 -0.44779,0.389493 -0.13059,0.977439 0.27046,1.265279 0.0423,0.0677 0.0723,0.184217 0.12301,0.231003 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Norvege\"\n\t\t\t\t\t\t\td=\"m 449.401,22.792 c -2.06853,-0.02253 -4.14402,-0.0623 -6.20574,0.07994 -0.62809,-0.100647 -1.25617,-0.201294 -1.88426,-0.301941 0.51395,-0.37706 1.11338,-0.53089 1.71364,-0.674618 0.57356,-0.382783 1.19502,-0.680485 1.80736,-0.994383 0.71699,0.358708 1.3994,0.83397 2.23762,0.783968 0.95175,-0.03116 1.99405,-0.233262 2.83437,0.349033 0.56552,-0.145568 1.04564,-0.43753 1.47882,-0.806541 0.70648,-0.370195 0.91579,-0.254217 0.50151,0.471556 -0.12369,0.637213 0.87201,0.430423 1.22662,0.235175 0.78018,-0.416214 1.75361,-0.788307 2.60496,-0.411869 0.49613,0.669206 1.36927,0.408113 2.08322,0.406616 0.91244,-0.09533 1.85676,-0.03838 2.73628,0.177144 0.86838,0.336148 0.0211,0.516625 -0.45367,0.658606 -1.47452,0.480671 -2.97682,0.927821 -4.53558,0.970161 -1.02549,0.07267 -1.96733,0.627562 -3.01336,0.453036 -1.76459,-0.02729 -3.52919,-0.05459 -5.29378,-0.08188 -0.2262,-0.67635 0.79882,-0.390713 1.1924,-0.590546 0.43305,-0.0027 0.64454,-0.497431 0.96959,-0.723455 z m -19.37399,-0.04 c -0.12118,0.655844 0.32421,0.952491 0.93933,0.87267 0.49151,-0.01365 1.21945,0.361309 1.32204,-0.363511 0.0711,-0.562169 0.93501,-0.543644 1.3584,-0.435357 0.97986,0.378928 1.72321,1.222018 2.78022,1.403197 0.84461,-0.08066 0.36371,-0.594246 -0.11401,-0.870001 -0.56851,-0.488898 -0.28702,-0.898819 0.36298,-1.023484 0.59796,-0.197438 1.2532,0.107242 1.84372,0.204988 0.56985,0.01533 1.15203,-0.04808 1.6863,0.194498 -0.16804,0.516231 -0.38836,1.038393 0.404,0.993999 0.51841,-0.21799 1.15034,-0.688965 1.6405,-0.164331 1.09887,0.783367 2.51186,0.567206 3.73431,1.017392 0.33398,0.06352 1.54865,0.412557 0.61665,0.468179 -1.15953,0.369342 -2.45146,0.131905 -3.54746,0.69576 -0.45911,0.753935 -0.96283,1.566921 -1.70446,2.037326 -0.6208,0.05822 -1.27904,0.01447 -1.73726,0.515667 -0.50157,0.219929 -0.54511,0.906735 -0.83899,1.14067 -1.11521,0.41739 -2.26326,-0.160804 -3.36383,-0.371364 -0.91664,-0.204281 -1.7926,-0.527836 -2.64746,-0.913298 0.73044,-0.607081 1.70394,-0.296657 2.57036,-0.432152 0.822,-0.0408 1.64519,-0.07654 2.37764,-0.49585 -0.8788,-0.468195 -1.88372,-0.0675 -2.82839,-0.08329 -0.96607,0.0936 -1.93581,0.113878 -2.90559,0.133295 -0.74395,-0.529564 -0.30663,-0.601259 0.38475,-0.574479 1.72025,-0.294294 3.4832,-0.394962 5.13924,-0.983521 -1.13862,-0.218891 -2.31927,-0.265664 -3.40601,-0.697001 -0.89605,0.09556 -1.48408,0.922583 -2.39619,0.995378 -0.91943,0.270291 -1.91859,0.06318 -2.76919,-0.322923 -0.74386,-0.301004 -1.56636,-0.396186 -2.2196,-0.893453 0.566,-0.132 1.132,-0.264 1.698,-0.396 -0.44127,-0.314274 -0.8575,-0.758937 -1.4225,-0.428875 -0.55466,0.187446 -1.22787,0.288363 -1.63419,-0.237356 -0.83967,-0.378646 -0.17549,-0.639261 0.39046,-0.778382 0.89944,-0.07557 1.79373,-0.164298 2.69594,-0.120071 0.52641,-0.07132 1.06504,-0.0525 1.59029,-0.08832 z m -4.607,46.068 c -0.26713,-0.450116 -1.0561,0.260819 -1.26159,-0.486796 0.11483,-0.434432 -0.29709,-0.939926 -0.51541,-0.171201 0.17568,0.351232 -0.44483,0.84961 -0.80741,0.91321 -0.52537,-0.08766 -1.00975,-0.07682 -1.4866,0.245786 -0.04,0.394993 -0.82386,0.541132 -1.18232,0.800351 -0.46175,0.276279 -1.07423,0.427315 -1.44254,0.78124 -0.30301,0.290873 -0.94063,0.09559 -1.36788,0.228195 -0.49003,-0.06144 -1.18944,0.372733 -1.50326,-0.105783 -0.45714,-0.0961 -1.06758,0.154839 -0.57916,-0.230744 -0.77899,-0.08625 -1.42859,-0.614329 -2.21683,-0.607262 -0.61552,-0.349106 -0.27546,-0.88856 -0.22443,-1.149223 0.38583,0.387775 0.66631,0.03983 1.28167,0.385963 -0.74908,-0.394374 1.02739,-0.484894 -0.0549,-0.40766 -0.59464,0.287917 -0.80196,-0.44357 -0.0754,-0.485078 1.1673,-0.328891 -0.76491,0.04184 -0.10921,-0.377183 0.78714,-0.805672 -0.5007,0.48787 -0.40779,-0.136817 -0.39562,-0.375787 -0.11351,0.635432 -0.86954,0.369004 -0.11082,-0.424478 -0.527,0.289957 -0.71447,-0.540001 0.49001,-0.68954 0.79781,0.02637 0.7939,-0.273621 0.65967,0.203814 0.38236,-0.158336 1.02457,-0.158437 0.83981,-0.290095 0.49378,-0.228078 -0.16518,-0.108943 -0.90347,0.0024 -0.40701,-0.289586 0.014,-0.601062 0.35635,-0.571219 -0.78295,-0.263428 -1.13108,-0.245565 -0.85293,-0.174163 -0.14512,-0.46256 0.30521,-0.713992 0.46505,-0.489429 -0.69544,-0.09847 -0.92635,-0.369079 -0.47085,-0.439943 0.66566,-0.826415 0.67194,-0.934486 -0.71309,-0.135819 -0.71382,-0.591121 -0.50023,-1.040154 -0.30343,-0.718799 0.6111,-0.521954 1.03723,-0.624661 0.94852,0.142036 0.14811,-0.28989 -0.28544,-0.424212 -0.18202,-0.547778 0.84338,-0.270669 1.09272,-0.640045 0.35975,-0.342272 1.22703,0.284389 1.36422,-0.402208 0.10282,-0.593158 0.93701,-0.09657 1.36816,-0.121829 0.68809,0.06755 1.01545,-0.36365 0.11065,-0.372363 -0.77657,-0.08803 -0.46959,-0.757447 0.20574,-0.520862 0.67737,0.09551 1.39168,-0.252162 2.00696,0.14652 -0.12753,-0.622671 0.59936,-0.622085 0.83401,-1.076 0.51205,-0.332576 1.08923,0.08242 1.48469,-0.02953 0.28137,-0.500417 1.07212,-0.466335 1.27444,-0.94086 0.21253,-0.789891 1.22188,-0.919202 1.8427,-1.31831 0.44766,-0.43624 0.94365,-0.199727 1.45869,-0.135099 0.61392,-0.163804 -0.0791,-0.693567 0.78796,-0.797595 0.4761,-0.119043 0.69724,-0.881267 1.18652,-0.725612 0.70601,0.320637 0.95042,-0.639667 0.26323,-0.711221 -0.1106,-0.198961 0.65842,-0.704664 0.81975,-1.082777 0.742,0.274875 0.81742,-0.172787 1.16041,-0.52745 0.7843,0.08271 0.86542,-0.323187 0.12607,-0.527348 -0.6038,-0.216252 0.29735,-0.874714 0.67653,-0.610203 0.68025,0.01305 1.14433,-0.05162 0.37559,-0.559602 0.3473,-0.1547 1.00134,-0.214621 1.44869,-0.418389 0.6352,-0.04991 0.97662,-0.201841 0.34873,-0.516009 0.53973,-0.193767 1.03208,-0.614156 1.63316,-0.350211 0.24419,-0.0339 1.28619,-0.197122 0.87653,-0.528529 -0.57808,-0.243563 0.53809,-0.586459 0.75973,-0.712331 0.38853,0.360883 0.94682,0.51831 1.32927,0.01623 -0.37044,-0.667591 -0.1843,-0.709366 0.53347,-0.63659 1.18716,-0.0233 -0.33152,-0.463795 0.18086,-0.645124 0.45387,-0.23594 1.00596,-0.224096 1.22858,-0.710446 0.40004,-0.305979 0.90381,-0.06697 1.29839,-0.273999 0.28133,-0.657225 0.62304,-0.656564 1.18849,-0.44797 0.5339,-0.168914 1.04509,-0.08953 1.5489,0.116864 0.76875,0.269582 1.2196,-0.56216 1.68404,-1.026827 0.61644,-0.629204 0.60048,0.176305 0.29302,0.617249 0.01,0.264407 0.92776,-0.349278 1.04759,-0.727108 0.3797,-0.317916 1.06701,-0.08411 1.43926,-0.555761 0.42968,-0.330629 0.95333,0.398541 1.32448,0.29891 0.3754,-0.393551 0.71781,-1.051648 1.35653,-0.794023 0.57167,-0.07973 1.04493,0.50714 1.53503,0.497394 0.47884,-0.498586 0.99036,-1.244376 1.7741,-1.167693 0.56511,0.209614 0.82244,-0.543548 1.36252,-0.604929 0.84754,-0.26832 1.74767,-0.34043 2.63303,-0.295107 -0.51222,0.381548 -1.29933,0.519392 -1.59152,1.115655 -0.38249,0.741089 0.48486,0.766825 0.80425,0.242891 0.78057,-0.548383 1.58279,-1.120908 2.50827,-1.395545 0.16023,0.403171 -0.29535,1.459162 0.45557,1.056559 0.74143,-0.07733 1.09091,-0.854498 1.65376,-1.189139 0.54579,0.0012 1.20083,-0.286435 1.67269,0.05858 -0.60772,0.240954 -0.6314,0.654417 -0.91681,1.103619 0.26193,0.192313 1.06949,0.311647 1.16784,-0.317615 0.44891,-0.319692 0.91463,-0.832118 1.5038,-0.497671 0.97988,0.340168 1.97394,0.719857 3.03115,0.626668 0.6466,0.05908 1.03355,0.656331 0.15722,0.700264 -1.21723,0.43524 -2.5476,0.151355 -3.81529,0.194732 -0.35193,-0.0078 0.73273,0.467161 1.01715,0.499177 0.57457,-0.01937 0.88904,0.613711 1.45504,0.439174 0.83606,-0.107379 1.71861,-0.245188 2.50289,0.159653 -0.69898,0.722807 -1.7362,0.377453 -2.59212,0.67238 -0.95492,0.346606 -1.69387,1.079417 -2.64488,1.426619 -0.1239,-0.722269 0.76276,-1.026149 0.9546,-1.577673 -0.1682,-0.436647 -0.90867,-0.484541 -1.3476,-0.60263 -0.75687,-0.167536 -1.45918,-0.669133 -2.26761,-0.423223 -1.0849,0.144494 -2.28413,-0.108306 -3.21393,0.600618 -0.61014,0.278986 -0.71116,0.930014 -0.85726,1.503403 -0.16392,0.523109 -0.92432,0.450584 -1.341,0.7213 -0.43203,0.482404 -0.89251,0.275434 -1.39321,0.03098 -0.50417,-0.266373 -1.02896,-0.35423 -1.58237,-0.194176 -0.94713,0.131669 -1.97627,0.217555 -2.88473,-0.105105 -0.73585,-0.435237 -1.39132,-1.136876 -2.26787,-1.238489 -0.55353,0.05459 -0.95511,0.66479 -1.44478,0.716028 -0.42163,0.0105 -1.26463,-0.264934 -1.37918,0.244714 -0.19775,0.497367 -0.15275,1.315598 -0.73681,1.503135 -1.21282,-0.149433 -2.41729,-0.385764 -3.60726,-0.672877 -0.36663,0.36548 0.021,1.086611 -0.59,1.343998 -0.89229,0.124106 -1.95023,-0.448428 -2.65817,0.336917 -0.31016,0.376815 -1.08388,0.592216 -1.09521,1.073084 0.33669,0.482035 0.0611,1.000688 -0.47222,1.153396 -0.7679,0.44576 -1.45032,1.091307 -2.25123,1.447507 -0.48689,-0.02061 -1.18616,-0.09597 -1.03508,0.617818 0.0955,1.239761 -1.12306,1.888815 -1.81008,2.727281 0.50424,0.108964 0.85508,0.486188 0.97201,0.980999 -0.85297,0.793831 -2.16045,0.04843 -3.13882,0.57906 -0.72559,0.305195 -1.52409,0.913832 -1.4502,1.78894 -0.10572,0.51986 -0.6067,1.12378 0.006,1.490898 0.55861,0.369954 0.0126,0.992453 -0.0398,1.502102 0.39543,0.410886 0.98297,0.417172 1.43452,0.688526 0.31678,0.363859 -0.40491,1.004173 -0.88565,0.904727 -0.70998,0.0341 0.36198,0.703127 0.42796,1.094295 -0.1338,0.379209 -0.0718,1.131871 -0.67975,1.239609 -0.68336,0.04219 -0.69253,0.504311 -1.2293,0.761676 -0.15791,0.367251 0.33268,1.014827 -0.13008,1.444528 -0.39062,0.651145 -0.53801,-0.276432 -0.93969,-0.292361 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Finlande\"\n\t\t\t\t\t\t\td=\"m 464.349,47.431 c -0.0129,0.440095 -0.57287,1.06106 3.1e-4,1.339621 0.72013,0.259797 1.49462,0.334282 2.13407,0.797612 0.62851,0.239248 0.72953,0.623961 0.068,0.898777 -0.49405,0.325639 -1.06211,0.551021 -1.47839,0.981991 0.79319,0.769119 1.60857,1.520265 2.1252,2.51345 0.0338,0.482391 -0.62563,0.79945 -0.73679,1.288936 -0.26555,0.68263 0.56367,1.123971 0.90582,1.612878 0.2543,0.401 0.94907,0.707851 0.77776,1.248734 -0.3175,0.351511 -1.2878,0.588405 -0.44286,0.926326 0.82775,0.401459 1.85464,0.475274 2.50887,1.165677 0.45995,0.714604 -0.44585,1.319992 -0.9005,1.768506 -1.81262,1.009537 -3.58053,2.113825 -5.37849,3.156489 -0.24141,0.525445 -0.97605,0.384892 -1.46009,0.546236 -0.5938,-0.05769 -0.98097,0.491852 -1.48286,0.10366 -0.50104,0.104735 -0.81414,0.414405 -1.3516,0.159719 -0.15362,-0.857811 -0.0417,0.171954 -0.65606,0.221966 -0.60609,-0.191365 -0.88907,0.464658 -1.28334,0.165316 -0.40915,-0.210644 -0.87679,0.27911 -1.40148,0.267527 -0.31631,0.06614 -0.99771,-0.0371 -1.35303,0.323796 -0.36029,0.09655 -0.9974,-0.0169 -1.37691,0.06957 -0.4959,0.167203 -1.09772,0.226127 -1.59133,0.08829 -0.90423,-0.119018 0.0519,-0.99174 -0.72345,-0.776152 -0.63249,0.06988 -0.91629,0.215664 -1.02902,-0.167077 -0.50618,0.0844 -0.98418,-0.293283 -1.47912,-0.372277 -0.66589,-0.279298 -0.64958,-1.166356 -0.38759,-1.723842 0.25263,-0.564227 -0.0864,-1.020823 -0.55227,-1.35633 -0.19552,-0.320889 0.60396,-1.023116 -0.0374,-1.281591 -0.74095,-0.01364 -0.34163,-0.757323 0.14687,-0.887667 0.78084,-0.04242 0.17609,-1.008646 0.98101,-0.804714 0.47804,0.150702 1.08822,0.235877 1.36991,-0.285804 0.25011,-0.432754 0.31631,-1.260526 0.8496,-0.622623 0.59012,-0.109302 1.04808,-0.656642 1.58758,-0.933708 0.81202,-0.478844 1.61557,-0.984753 2.4141,-1.474979 0.54758,-0.281176 1.12228,-0.403594 1.73449,-0.306313 0.23468,-0.573464 -0.79219,-0.527188 -0.2453,-1.145261 0.20032,-0.630168 -0.80669,-0.514961 -1.21966,-0.575973 -0.54929,-0.109178 -0.98233,-0.619937 -1.59504,-0.488765 -0.17937,-0.404299 -0.88345,-0.818617 -0.50674,-1.302032 0.39799,-0.411238 0.47293,-0.991606 0.0594,-1.424859 -0.23348,-0.473489 -0.81662,-0.789298 -0.63671,-1.38911 0.24849,-0.592237 -0.56046,-0.813329 -0.951,-1.080542 -0.89221,-0.3185 -1.89527,-0.225629 -2.79174,-0.580444 -0.75876,-0.290137 -1.46846,-0.72905 -2.1299,-1.178599 0.21279,-0.21395 0.82967,-0.666509 1.29398,-0.76845 1.01549,0.07434 1.68506,1.052722 2.6137,1.347859 1.10687,0.218382 2.24019,0.05165 3.34497,-0.115823 0.55626,0.168774 1.14603,0.518026 1.67309,0.592515 0.51991,-0.396003 1.16101,-0.548924 1.7569,-0.792516 0.2767,-0.587997 0.19606,-1.385371 0.88338,-1.703243 0.97741,-0.796074 2.27641,-0.486189 3.43224,-0.670229 0.91165,-0.226392 1.66087,0.497079 2.55538,0.516473 0.40239,0.136873 1.34143,0.396135 0.67966,0.874058 -0.32241,0.374084 -0.81933,0.674023 -0.71765,1.232941 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<path\n\t\t\t\t\tid=\"Russie\"\n\t\t\t\t\td=\"m 444.97198,79.144997 c 0.67057,-0.248413 0.93646,-0.426959 0.064,-0.273995 -0.4283,0.182925 -0.52234,-0.408563 -0.0512,-0.670054 0.85415,-0.02506 1.72499,0.171884 2.56617,0.0081 0.20627,-0.491534 -0.17323,-0.765694 0.39895,-0.929265 0.29002,0.123567 0.79078,0.352046 1.25132,0.393226 0.43508,0.174887 0.93395,0.06425 1.43793,0.07153 0.23392,0.25087 1.01624,0.43479 0.40392,0.797781 0.0189,0.687685 -0.23036,0.696747 -0.9071,0.655026 -1.72613,0.140577 -3.43931,-0.02905 -5.16403,-0.0523 z M 717.633,81.109001 c 0.6568,0.627364 1.37179,1.599147 0.91318,2.520364 -0.5398,0.998615 -0.37878,2.26938 0.38236,3.112665 0.57253,0.979353 0.94968,2.070787 1.57046,3.031503 0.38601,0.68239 0.85688,1.313086 1.27902,1.973469 -0.95917,-0.456163 -1.85871,-1.218336 -2.97912,-1.11718 -0.50605,0.012 -0.92095,0.352665 -1.01839,0.855016 -0.29972,0.72481 -0.56767,1.54551 -0.51028,2.327184 0.0854,0.780615 0.64527,1.317571 1.07077,1.93498 0.49934,0.08991 1.06386,0.592151 0.93787,1.107467 -0.13323,0.533335 -0.22679,1.397286 -0.53916,0.437506 -0.17181,-0.561533 -0.54771,-0.88554 -1.129,-0.9705 -0.7477,-0.137688 -0.96398,0.817203 -1.36904,1.262421 -0.23175,0.803256 -0.78823,0.142306 -0.8279,-0.376085 -0.31955,-0.651416 0.26753,-1.163212 0.51824,-1.726808 -0.22702,-0.479178 -0.58584,-1.025702 -0.10929,-1.476977 0.48236,-0.341296 0.41,-0.899873 0.17815,-1.371602 -0.19583,-0.442402 -0.75401,-1.059743 -0.0429,-1.305421 0.58268,-1.377168 0.21911,-2.893046 0.51397,-4.327003 0.0284,-0.747661 -0.35356,-1.381311 -0.92371,-1.836685 -0.33158,-0.322163 -0.39867,-0.989223 -0.15569,-1.382874 0.31866,-0.535751 0.62464,-1.32737 0.0686,-1.809942 0.15809,-0.564938 0.99672,-0.102665 1.38209,-0.448844 0.26317,-0.137653 0.52686,-0.274448 0.78971,-0.412654 z m -246.47501,3.171997 c -0.16777,-0.28459 -0.63564,-0.545822 -0.36398,-0.997001 -0.30633,-0.359074 -0.0919,-0.627605 -0.689,-0.936997 -0.0675,-0.590435 0.76934,-0.581712 1.09998,-0.295997 0.60337,0.08006 1.2205,-0.07986 1.67602,-0.478005 0.85581,-0.08708 -0.17998,-0.395163 -0.34601,-0.689995 0.37907,-0.210091 -0.71395,-0.384315 -0.99679,-0.330046 -0.71109,0.216671 0.14688,-0.732079 -0.60369,-0.707057 -0.55578,-0.03477 -0.85855,-0.47828 -1.1491,-0.810936 -0.0976,-0.332084 -0.13278,-0.343934 -0.59238,-0.647457 -0.74759,-0.152693 0.55629,-0.575376 0.0953,-0.907138 -0.61587,-0.201265 0.39999,-1.048493 -0.40231,-0.938369 -0.4205,-0.286934 -0.89998,-0.63914 -1.44599,-0.494003 -0.39624,-0.109244 -0.93036,0.05041 -1.26501,0.297004 -0.80035,0.05302 0.0973,-0.750391 -0.56556,-0.664115 -0.41058,-0.273782 -1.02035,0.249242 -1.28842,-0.07689 -0.32357,-0.492706 -0.90209,0.181275 -1.216,-0.278999 0.19327,-0.362044 0.0618,-0.909968 -0.33067,-1.016754 -0.22676,-0.319399 -0.21742,-0.770938 -0.81533,-0.537239 0.33638,-0.415362 0.10574,-0.560278 0.45954,-0.887201 -0.16554,-0.249131 -0.73264,-0.455257 -0.86723,-0.638883 -0.55333,0.002 0.10594,-0.602935 0.40437,-0.652307 0.62246,0.01949 -0.0535,-0.535357 -0.28706,-0.74066 -0.18466,-0.381172 0.16187,-0.771783 -0.17962,-1.253953 -0.0921,-0.580533 0.82987,-0.468675 0.94336,-1.01135 0.0224,-0.397797 1.06815,-0.0963 0.54163,-0.574649 -0.7539,-0.240518 -0.0782,-0.767366 0.35932,-0.299868 0.25102,-0.37079 0.61667,-0.275022 1.19856,-0.220779 0.31013,-0.400377 0.75836,-0.661021 1.27395,-0.443317 0.56161,0.126159 1.15994,0.518353 1.71718,0.139967 -0.45902,-0.62981 -1.23954,-0.876842 -1.98959,-0.710771 -0.60793,0.04761 -1.37891,0.09859 -1.76941,-0.46923 0.58424,-0.561616 -0.36754,-0.651445 0.39773,-1.011171 1.72063,-1.000044 3.4141,-2.056832 5.15008,-3.02252 0.45741,-0.449686 1.35432,-1.051065 0.89918,-1.767311 -0.77391,-0.83709 -2.10085,-0.729321 -2.935,-1.486 0.36458,-0.254906 1.2207,-0.577098 0.77499,-1.112999 -0.53504,-0.664652 -1.30711,-1.222808 -1.64905,-1.99258 -0.0806,-0.683866 0.78545,-1.063364 0.79686,-1.650051 -0.51584,-0.9943 -1.33247,-1.744899 -2.1258,-2.514371 0.59581,-0.598521 1.46253,-0.827218 2.052,-1.437 -0.72017,-0.568122 -1.55489,-0.978718 -2.46215,-1.12331 -0.63071,-0.03077 -0.73002,-0.778025 -0.33784,-1.17469 -0.0146,-0.567388 0.85505,-0.473111 1.15722,-0.880694 0.91297,-0.681129 2.01003,-1.09894 3.16115,-1.008678 0.56343,-0.121355 0.94175,-0.646018 1.55962,-0.543627 0.55632,-0.137896 1.11535,-0.267073 1.64499,-0.491001 0.18943,0.918009 1.28827,1.094893 2.08502,1.103 0.84903,-0.271996 0.40916,1.047704 1.08374,0.516685 0.57735,-0.260264 1.25818,0.02472 1.8841,-0.03516 1.22007,0.065 2.45687,-0.06241 3.63968,0.307638 1.58272,0.330192 3.26427,0.436359 4.64972,1.356678 1.49559,1.002847 3.40052,0.709201 5.0276,1.35646 0.46192,0.207258 1.20991,0.187638 1.40202,0.701971 -0.27397,0.620309 0.5462,0.746171 0.63614,1.238731 -0.62429,0.864952 -1.72048,1.255506 -2.69877,1.59229 -1.86584,0.524888 -3.83819,0.644348 -5.74745,0.292479 -1.79347,-0.163417 -3.60694,-0.2489 -5.34138,-0.771793 -1.18276,-0.275075 -2.37045,-0.518621 -3.58541,-0.588977 -0.68635,-0.710005 -1.71249,-0.877404 -2.64474,-0.6566 0.22405,0.142438 0.83335,0.563991 1.20978,0.799357 0.99639,0.333334 1.85879,1.057131 2.95062,1.119342 0.60503,0.08055 1.46769,0.413464 1.34533,1.153901 -0.16177,0.524198 -1.30274,0.216795 -0.77677,0.847184 0.19002,0.653673 0.99013,0.986279 0.97477,1.719817 0.52503,0.658263 1.50646,0.305871 2.23577,0.522039 0.65421,-0.111975 0.6983,0.816086 1.33225,0.775962 0.74204,0.02917 1.48117,0.0784 2.199,0.281997 0.45561,-0.280145 1.29498,0.03474 1.42972,-0.615849 0.008,-0.63229 -0.81012,-0.831737 -1.31372,-0.609149 -0.82304,0.06315 -1.41635,-0.535901 -1.988,-1.032002 0.3718,-0.362669 0.77301,-0.921429 1.34829,-0.604912 1.42999,0.686552 3.03873,0.83651 4.57226,1.176167 0.60012,0.12479 1.19656,-1.13e-4 1.78381,-0.05446 0.48249,0.364045 1.23862,-0.07451 0.8291,-0.618168 -0.46767,-0.442169 -1.09618,-0.728587 -1.30147,-1.390623 0.43071,-0.584389 1.2799,-0.514317 1.90701,-0.794998 1.06171,-0.216881 2.13076,-0.480929 2.99494,-1.173147 0.56082,-0.423047 1.28935,0.03784 1.91909,0.03511 0.89816,5.3e-5 1.65136,0.632291 2.52695,0.655031 0.10697,-0.547602 0.57263,-0.948506 0.78051,-1.423609 0.0799,-0.557573 -0.28196,-1.111592 -0.882,-1.073134 -0.87048,-0.04591 -0.46698,-0.576503 0.0427,-0.879099 0.4902,-0.272812 0.71948,-0.757817 0.37088,-1.252067 -0.33462,-0.175828 -1.21395,-0.730313 -0.44029,-0.871203 0.89535,0.09879 1.79065,0.303068 2.70021,0.148785 0.68841,-0.06663 1.51072,-0.137679 1.96066,0.501462 0.40716,0.381395 0.91747,0.638566 1.25532,1.095866 -1.1573,0.128534 -2.41418,-0.06521 -3.48769,0.414942 -0.78138,0.462693 -0.04,0.769069 0.52496,0.861279 0.53744,0.200673 0.89319,0.763774 1.52432,0.758661 1.15973,0.308582 2.34352,-0.09038 3.52041,-0.07188 0.67278,-0.29299 0.62699,-1.307039 1.22072,-1.672239 1.25031,-0.105652 2.3805,-0.684475 3.61382,-0.880665 1.8218,-0.558621 3.75433,-0.648857 5.55248,-1.287096 0.0654,0.662032 0.76939,0.603854 1.20997,0.344818 0.51473,-0.182747 0.41949,-0.944711 1.127,-0.862077 0.34242,-0.05407 1.45475,-0.255441 1.2054,0.222226 -0.004,0.678228 -0.30314,0.902056 -0.9864,0.837032 -0.5755,0.434032 0.52083,0.638739 0.86177,0.503576 0.59394,-0.0346 1.26916,-0.316101 1.81732,-0.124633 0.41184,0.463547 0.96427,-0.228354 1.16692,-0.601942 1.04205,-0.390125 2.21791,-0.408907 3.31579,-0.299825 0.90701,0.277157 1.92376,0.295204 2.73573,-0.257109 1.03021,-0.474917 2.2867,-0.643358 3.32452,-0.107068 -0.67484,0.22678 -0.73881,0.847629 0.063,0.85313 0.48982,0.152197 1.27893,0.09421 1.225,-0.58913 0.70101,-0.199335 1.5603,0.213121 2.12451,-0.425007 0.58812,-0.504456 -0.25527,-0.844502 -0.61882,-1.152894 -0.86581,-0.386129 -0.15353,-0.53558 0.35134,-0.819794 0.81356,-0.363912 1.75955,-0.06253 2.62798,-0.120068 1.30074,0.04321 2.58636,0.30534 3.87558,0.47717 1.27083,0.214098 2.49487,0.675628 3.79077,0.725478 1.45535,0.344824 2.92621,0.645086 4.27831,1.308715 0.79894,0.270822 1.5305,0.777131 2.36733,0.901401 0.6136,-0.360232 1.14216,-0.906789 1.60998,-1.447003 -0.7961,0.06712 -1.79677,0.114503 -2.25598,-0.678997 0.25534,-0.662474 -0.32006,-0.888496 -0.87722,-0.948111 -0.60658,-0.09325 -1.31719,-0.0023 -1.86118,-0.206371 -0.38173,-0.503933 0.51699,-0.794173 0.89747,-0.911978 0.52534,-0.166873 0.3399,-0.879277 0.23044,-1.243677 -0.38698,-0.477824 -1.26784,0.09852 -1.55351,-0.532865 0.20377,-0.488606 0.6138,-0.860371 1.16355,-0.832011 1.28079,-0.332488 2.66612,-0.70001 3.50653,-1.806878 0.4176,-0.537082 0.41583,-1.401602 1.1528,-1.657024 0.49879,-0.113196 1.09942,0.108625 1.64152,0.10497 1.49754,0.07415 3.00447,-0.285853 4.5031,-0.11521 0.58281,-0.01827 1.49807,-0.200424 1.7667,0.443872 -0.0982,0.827881 -0.71956,1.500713 -1.46245,1.850822 -0.36485,0.184502 -1.31195,0.766226 -0.47435,0.938369 0.68987,0.379553 1.59547,0.804295 1.68816,1.683448 0.38841,0.626424 -0.8618,0.621624 -0.6154,1.159215 0.27976,0.748038 0.12712,1.544294 0.17639,2.304417 0.17105,0.765177 0.93879,1.014547 1.62304,1.126339 0.71302,0.31811 -0.40049,0.721908 -0.41578,1.197234 -0.43086,1.047769 -1.68001,1.301372 -2.56582,1.846436 -0.34579,0.18424 -1.46446,0.243249 -0.99381,0.763727 0.27701,0.461591 -0.83341,0.338341 -1.16705,0.519967 -0.91869,0.06904 -1.81786,-0.465001 -2.76173,-0.391467 -0.36217,0.07674 -1.54804,-0.121327 -1.25146,0.368393 0.95208,0.694039 2.24817,0.662544 3.38626,0.809282 0.83343,0.06739 1.66341,-0.03648 2.49079,0.1421 0.53783,0.0063 1.10288,0.02545 1.45144,-0.459823 0.42665,-0.603442 1.32984,-0.385269 1.92501,-0.75634 0.58805,-0.187778 1.14462,-0.479002 1.39297,-1.08147 0.32089,-0.408385 0.99625,-0.357011 1.34929,-0.782144 0.57773,-0.195397 0.56642,-0.797766 0.27131,-1.236225 -0.51002,-0.261626 -0.81571,-0.842187 -0.20127,-1.162078 1.31241,-0.344517 2.71613,-0.410886 4.05687,-0.283971 0.50341,0.146362 1.08935,0.363062 1.42933,0.728274 0.24632,0.591633 -0.006,1.151011 -0.20595,1.713778 0.6492,0.633758 1.67885,0.463719 2.52001,0.537998 0.46586,0.05763 1.48296,-0.393296 0.57371,-0.591835 -0.62026,-0.276779 -1.2851,-0.117326 -1.91971,-0.277165 -0.0824,-0.665116 0.86355,-0.458588 1.12046,-0.846966 -0.10418,-0.391086 -0.53682,-0.869442 -0.74161,-1.334362 -0.59953,-0.553028 -1.52069,-0.346232 -2.25712,-0.618389 -1.06798,-0.13581 -2.16355,-0.491763 -3.22275,-0.14228 -0.93927,0.243835 -1.87734,-0.213426 -2.83099,-0.061 0.0681,-0.637436 -0.8808,-1.138491 -0.39193,-1.740946 0.23925,-0.569079 0.91544,-0.814075 1.13595,-1.411055 -0.56641,-0.752357 -1.30629,-1.390284 -2.17499,-1.777 -0.20211,-0.373518 0.67818,-0.762913 1.06706,-0.77394 0.93295,-0.07114 1.98231,-0.213355 2.70852,-0.826465 0.35396,-0.372933 0.0882,-1.139246 0.18849,-1.366069 0.39822,0.201079 1.23381,-0.126385 1.31049,0.440276 0.18615,0.639763 -0.49388,1.00779 -0.79923,1.444267 -0.30154,0.51187 -0.004,1.088416 0.52637,1.27834 0.69323,0.396167 1.56425,0.222959 2.33269,0.386988 0.90479,0.169294 1.86699,0.05019 2.74658,0.264998 0.52453,0.397353 1.15817,0.373825 1.77999,0.310605 -0.29363,-0.564384 -0.6574,-1.257584 -1.40287,-1.182749 -1.03427,-0.116143 -2.1409,0.03735 -3.11669,-0.354903 -0.76835,-0.23726 -0.41592,-0.896358 0.27026,-0.745284 0.54498,-0.110066 1.03406,0.05838 1.55115,0.158437 0.54892,0.0715 1.09325,0.07436 1.62619,-0.0925 -0.29005,-0.679744 0.11569,-0.903292 0.75881,-0.871105 1.46605,-0.23539 2.93857,0.115821 4.31667,0.594521 1.27706,0.725823 2.76742,0.972217 4.22308,0.895505 0.44404,0.180141 1.1757,-0.516406 1.26541,0.174079 -0.47885,0.244492 -0.96626,0.46899 -1.47699,0.639 -0.2242,0.558803 -0.31737,1.147126 -0.37702,1.743 0.54357,0.393834 0.71947,-0.565246 1.15486,-0.756027 0.37329,-0.4608 0.96752,0.161755 1.12378,0.48227 -0.32669,0.825802 0.2821,0.626446 0.83033,0.389633 0.79297,-0.09555 0.37774,-0.566815 0.13407,-0.989877 -0.24914,-0.38877 -1.08108,-0.776735 -0.44084,-1.175832 0.58964,-0.443064 0.61833,-0.794505 -0.13024,-1.018995 -0.57554,-0.305856 -1.30125,-0.339696 -1.8515,-0.62889 -0.21451,-0.567483 -0.93637,-0.227174 -1.37997,-0.487207 -0.61606,-0.239882 -1.38087,-0.105822 -1.92937,-0.444414 -0.39428,-0.329574 0.15504,-1.114291 -0.48758,-1.361405 -0.67398,-0.257491 -0.57016,-0.917163 0.15461,-0.937126 2.83473,-0.270299 5.70806,-0.03168 8.5359,-0.458132 0.4226,0.445759 1.0212,0.408083 1.53469,0.154612 0.92443,-0.285818 1.93305,-0.53977 2.88846,-0.364223 0.7718,0.213662 -0.64789,0.258131 -0.81904,0.627179 -0.59465,0.457324 0.74657,0.01808 1.06775,0.05125 0.7545,-0.112919 1.62383,-0.244928 2.16213,-0.820813 -0.34425,-0.842757 -1.41693,-0.586722 -1.95001,-1.190003 -0.0303,-0.569457 0.47322,-0.927369 0.99547,-0.998353 1.50131,-0.414469 3.00665,-0.828478 4.49653,-1.292647 2.40587,-0.335199 4.84487,-0.298512 7.25315,-0.631395 1.44456,-0.134633 2.873,-0.365872 4.25472,-0.818765 0.98997,-0.308691 2.0533,-0.02885 3.07577,-0.113341 1.09175,-0.168832 -0.0452,0.71791 0.65182,0.618956 1.69586,0.26296 3.36772,-0.184658 5.03983,-0.380387 1.02394,-0.171599 2.0609,0.483514 3.04569,0.0049 0.0204,-0.484838 0.16109,-0.886248 0.80722,-0.867952 0.80186,-0.102369 1.62208,0.108258 2.37707,-0.269929 0.96115,-0.121789 -0.62273,-0.466133 -0.10329,-0.965118 1.71477,-0.701722 3.56362,-1.02681 5.39241,-1.254779 1.11352,-0.07516 2.23932,0.02359 3.34954,0.02994 0.47463,-0.0013 1.2788,0.531554 0.39036,0.617601 -0.60794,0.153308 -1.22441,0.284471 -1.75829,0.630234 1.00089,0.34435 2.08175,-0.132181 3.11419,0.107205 0.96017,0.172056 1.96456,-0.06263 2.90571,0.04261 0.0752,0.357367 -0.82986,0.515539 -1.186,0.696659 -0.84688,0.306097 -0.3461,0.520625 0.31857,0.402729 0.73673,0.02434 1.53655,-0.06022 2.22842,0.02993 0.53233,-0.286937 1.05035,-0.632373 1.68391,-0.505171 1.08219,0.03853 2.17136,-0.202727 3.23489,0.02928 1.65672,-0.02957 3.35664,0.05733 4.94408,0.556811 0.53805,0.09401 0.95152,0.459992 1.37206,0.72083 0.50706,0.07362 1.09668,-0.139096 1.54847,-0.009 0.74074,0.478319 -0.13925,0.696079 -0.54371,0.990288 -0.87452,0.306239 0.13118,0.514508 0.53598,0.703491 0.17623,0.205325 -0.92419,0.389267 -1.26168,0.585987 -1.03496,0.478527 -2.17409,0.582345 -3.28256,0.734212 -2.44351,0.739715 -4.87335,1.55362 -7.30863,2.299473 -1.56368,0.222248 -3.13777,0.498379 -4.63073,1.004721 -0.63633,0.346977 -1.27266,0.693953 -1.90899,1.04093 0.95606,0.09546 1.89613,-0.218131 2.71802,-0.688 1.57902,-0.204922 3.17428,-0.131559 4.74481,-0.417089 1.33742,-0.241596 2.71433,-0.287725 4.0122,-0.70891 0.0282,-0.567221 -1.09373,-0.516757 -0.17224,-0.89342 0.63227,-0.310093 1.36298,0.06715 1.8902,0.447417 0.78361,0.01261 1.50666,0.423565 2.30571,0.274132 0.73817,0.07799 1.53306,-0.534887 2.2002,-0.155297 0.21276,0.404751 0.13629,1.099477 0.75307,1.098521 0.66752,-0.314447 1.26521,-0.895008 2.05478,-0.744345 1.41398,-0.0021 2.81488,-0.244154 4.23223,-0.146441 1.51907,0.03591 3.03149,0.237386 4.55405,0.225432 -0.34259,0.474389 -0.27694,1.174562 0.4374,1.099712 1.93163,0.06409 3.8409,0.583063 5.77745,0.332481 1.14175,-0.07576 2.30203,-0.180048 3.39929,0.218888 0.5218,0.07815 0.92381,-0.530453 1.3965,-0.733898 0.45381,-0.231362 -0.44081,-1.058549 0.50255,-0.969114 0.90141,-0.294555 1.85228,-0.501951 2.78582,-0.213421 0.94233,0.188302 1.81971,0.672461 2.80413,0.552627 1.49633,0.08238 3.06661,-0.336183 4.48562,0.303977 0.45919,-0.03583 1.21137,0.685703 0.42581,0.727046 -1.64683,0.266708 -3.29556,0.685758 -4.84421,1.269699 -0.3361,0.404547 0.87561,0.209946 1.20546,0.302488 1.36958,-0.164591 2.50212,0.733318 3.78317,1.030512 1.16063,0.728666 2.29839,1.495097 3.59428,1.967896 0.73156,0.240939 1.5426,0.526235 2.31236,0.366651 1.212,-0.444156 1.90357,-1.639274 2.96309,-2.296196 0.63009,-0.563701 0.66215,0.455007 1.22789,0.488277 1.38711,0.449467 2.91875,0.775922 4.34997,0.317327 1.21521,-0.378482 2.5083,-0.491691 3.74369,-0.132844 0.80757,0.147452 1.5429,0.628428 2.3334,0.78442 0.3528,-0.03765 1.22499,-0.396006 0.98832,-0.673528 0.10844,-0.442085 0.90581,-0.575103 1.32701,-0.478384 0.68321,0.464578 1.50932,0.43096 2.29799,0.436384 0.34841,-0.514471 -0.17414,-0.983521 0.16824,-1.503938 0.22988,-0.691161 -0.84261,-0.06396 -1.24693,-0.186788 -0.8793,0.164103 -0.51124,-0.420467 0.11568,-0.486276 1.25831,-0.160725 2.59545,0.03978 3.74207,-0.623679 0.79653,-0.525958 1.72438,-0.09527 2.58945,-0.0453 2.04542,0.173163 4.09016,0.398798 6.1348,0.530498 0.35988,0.04838 1.54488,-0.03627 1.34062,0.103051 -0.52164,0.189143 -1.04329,0.378286 -1.56493,0.567429 0.65167,0.106462 1.31926,-0.03187 1.95813,-0.0042 0.6189,0.263677 -0.48917,0.682863 -0.83512,0.647506 -0.33543,0.03032 -1.56025,0.444834 -0.89976,0.596887 0.69914,0.01009 1.40415,-0.17683 2.08631,-0.327446 0.89875,-0.19643 1.65,-0.843317 2.52316,-1.043014 1.74431,0.0071 3.50226,-0.05936 5.21489,0.326636 0.57236,0.02734 1.14777,0.498657 0.24286,0.512543 -0.54848,0.144016 -1.09697,0.288033 -1.64545,0.432049 1.58136,0.440837 3.23363,0.456169 4.84124,0.72165 0.67961,0.10832 1.33168,0.417059 1.75482,0.959871 0.87141,0.732635 2.0569,0.384705 3.09002,0.376743 2.64416,-0.219136 5.27344,-0.803345 7.9394,-0.574276 1.71122,0.108524 3.4997,0.01803 5.09351,0.749014 0.59342,0.100997 1.31522,0.418542 1.51942,0.983183 -0.0509,0.518948 -0.71618,1.041273 0.12157,1.175817 0.74514,0.101041 1.50084,0.02836 2.24201,0.162999 -0.15156,0.489191 0.14746,1.285941 0.74717,1.016466 0.5634,-0.08647 0.87936,-0.67061 1.47825,-0.707789 0.92457,-0.419728 1.93592,-0.143279 2.91574,-0.234534 0.8198,-0.04641 1.71713,-0.517258 2.4968,-0.151617 0.77519,0.70606 1.91763,0.359431 2.87066,0.463535 1.27305,0.03294 2.60445,0.200657 3.78523,-0.396774 0.61612,-0.405132 1.15838,0.29804 1.71407,0.517692 0.75993,0.533365 1.86594,0.380584 2.5508,1.005016 0.43901,0.653516 1.36903,0.290176 2.03041,0.2927 0.66852,-0.100252 1.42235,-0.171968 2.01778,-0.421534 0.22739,-0.465735 -0.58055,-0.824232 -0.81507,-1.210959 -0.31057,-0.336503 -1.41332,-0.05901 -0.55887,-0.581203 0.2753,-0.588881 0.78596,-0.636994 1.3663,-0.524991 1.52582,0.100557 3.06027,0.125281 4.57272,0.364991 0.23882,0.605733 0.97141,0.123656 1.45847,0.182484 2.02878,-0.04559 4.09237,-0.222449 6.0979,0.154936 1.42751,0.443591 2.95415,0.263275 4.37121,0.744301 0.98303,0.301943 2.05968,0.21509 2.96708,0.769978 0.70009,0.07921 0.31871,0.863426 0.41333,1.337341 0,2.552986 0,5.105973 0,7.65896 -0.58481,0.239633 -1.19667,0.396932 -1.81108,0.445213 -0.6639,0.503471 -1.56102,0.430705 -2.34535,0.417193 -0.4122,-0.188779 -1.17824,0.192053 -1.22755,-0.435404 -0.61071,-0.252444 -0.60185,-0.298048 -0.78294,-0.281975 -0.61522,0.259915 -1.3795,0.419349 -1.95675,0.03149 -0.89533,-0.270628 0.6094,0.62614 -0.44127,0.67855 0.0234,0.147208 0.98679,0.413805 1.32249,0.268194 0.30029,-0.315324 1.24092,-0.432889 1.20949,0.114291 0.003,0.497281 0.78023,0.654399 1.18171,0.64805 0.69776,-0.203666 0.97738,-0.190387 0.5307,0.103717 0.65355,-0.435306 0.75202,0.08739 1.09063,0.563637 0.59532,0.417663 -1.06373,0.866061 -0.32405,0.808444 0.74027,-0.222989 0.95357,0.794364 1.65095,0.796605 0.11979,0.612407 -0.0607,0.843653 0.77494,0.596013 -0.0593,0.536272 -0.26041,0.969344 -0.87262,1.043062 -0.82622,0.290726 -1.64758,-0.236567 -2.49136,-0.213163 -0.47376,-0.08686 -0.98489,-0.0018 -1.42091,-0.239911 0.35347,-0.505293 -0.8718,-0.382876 -0.99068,0.03056 -0.46047,0.619356 -1.34243,0.565606 -2.01412,0.856496 -0.91883,0.317509 -1.88053,0.525093 -2.83757,0.616872 -0.5738,0.35678 -1.20263,0.661928 -1.90923,0.593768 -0.79635,-0.140151 -1.17064,0.879319 -1.97461,0.742691 -0.7005,-0.10559 -1.23627,0.460892 -1.6848,0.921612 -0.57865,0.22243 -1.29901,0.218163 -1.78685,0.585853 -0.41507,0.657631 -1.42348,0.307281 -1.95087,0.784125 -0.0309,0.507555 -0.41943,0.892045 -0.97932,0.81402 -0.58787,-0.106225 -0.73949,-0.694155 -1.09944,-1.012226 -0.84278,-0.452512 -1.86082,-0.236281 -2.77928,-0.203687 -1.16336,0.220512 -2.43219,0.160246 -3.42553,0.901564 -0.4525,0.154906 -0.95005,0.754461 -1.39289,0.575719 -0.0695,-0.350098 0.72721,-1.231792 0.35804,-1.29444 -0.54284,0.04197 -1.01303,-0.05696 -1.43587,0.40508 -0.43007,0.319513 -1.34243,0.136505 -1.31066,0.86737 -0.34936,0.325787 -1.10244,0.268089 -1.19716,-0.33612 -0.35356,-0.571885 -0.88321,-0.189439 -1.28692,0.112499 -0.30617,0.291224 0.0482,-0.238328 -0.73423,0.08018 -0.31631,0.225751 -1.08775,0.582697 -0.75703,1.049061 0.79108,0.207558 -0.4506,0.445072 -0.64798,0.738566 0.20009,0.334202 0.0295,0.45789 -0.57772,0.746619 -0.58715,0.395521 -1.34428,0.750405 -1.65495,1.397654 -0.18011,0.784186 0.84819,0.917874 1.42245,0.830659 0.50206,0.0019 1.1868,-0.150982 1.52118,0.303507 -0.3692,0.497607 -1.09501,0.590784 -1.36895,1.151001 0.21411,0.419018 0.34734,1.120743 0.95741,1.013978 0.60888,-0.0797 0.66344,0.93773 0.31031,1.23764 -0.24435,0.387424 -1.33669,0.259275 -1.13704,-0.260171 0.69986,-0.573157 -0.16952,-0.581096 -0.56269,-0.227447 -0.71355,0.59589 -1.55409,1.172493 -1.81104,2.116997 0.1147,0.577945 0.56943,0.803646 1.01643,1.057505 0.24462,0.473677 -0.59108,0.764187 -0.96521,0.865373 -0.94047,0.12807 -1.96505,-0.324753 -2.80314,0.295814 -0.55023,0.309659 -1.19793,0.660255 -1.40408,1.294309 0.0183,0.426215 1.07868,0.754424 0.41733,1.091775 -0.59903,0.284447 -1.27972,0.123805 -1.87673,0.439551 -0.40821,0.219688 -1.35105,0.206161 -1.16721,0.853489 0.0729,0.754299 -0.35338,1.417571 -0.93731,1.869391 -0.82048,0.719926 -1.81389,1.242526 -2.75859,1.784991 -0.48766,0.110322 -0.51713,-0.851219 -0.6631,-1.232179 -0.23269,-0.54387 -0.31875,-1.118357 -0.38305,-1.694489 -0.20561,-0.626993 -0.75299,-1.056976 -0.7802,-1.744649 -0.18073,-0.759069 -0.66024,-1.444977 -0.59754,-2.246581 -0.11118,-0.657419 -0.35422,-1.257534 -0.5175,-1.903101 -0.0697,-1.003611 0.16441,-2.024511 0.41674,-2.978659 0.59596,-0.650674 1.46313,-1.018309 2.12788,-1.575935 0.27857,-0.359906 0.88842,-0.829295 0.37327,-1.268608 1.70386,-0.314781 3.36845,-0.837671 4.86799,-1.720038 0.58293,-0.325051 1.28846,-0.657374 1.51702,-1.330957 1.53389,-0.797491 3.15445,-1.473904 4.55902,-2.487999 0.23087,-0.666391 1.04347,-0.630158 1.59834,-0.88907 0.67323,-0.210142 1.46063,-0.266211 2.06492,-0.569382 0.15125,-0.562359 0.91718,-0.588647 1.07075,-1.118551 -0.93366,-0.0987 -0.20068,-0.600274 0.14543,-1.008333 0.11658,-0.438801 0.0401,-1.152815 0.75212,-1.157794 0.76784,-0.115272 1.56386,-0.04842 2.33542,-0.176872 -0.66219,-0.581978 -1.61921,-0.35424 -2.42916,-0.530422 -0.89702,0.05295 -1.79602,0.224801 -2.66984,0.44542 0.25409,0.565652 -0.74152,0.917922 -0.5285,1.402109 -0.0709,0.441048 -0.95056,0.194894 -1.31081,0.485383 -1.24959,0.502631 -2.39109,1.247829 -3.62849,1.760349 -0.33487,0.0792 -1.42826,0.567692 -1.0062,-0.119842 0.75764,-0.656268 -0.22387,-0.39644 -0.62716,-0.616909 -0.27488,-0.482833 0.47455,-0.849038 0.67501,-1.255359 0.35298,-0.6845 -0.73556,-0.301427 -1.03837,-0.113972 -0.52308,0.347601 -0.96865,0.137754 -1.33719,-0.218035 -0.88418,-0.249421 -1.82337,0.08262 -2.73254,0.0832 -1.0504,0.05596 -2.1107,0.150774 -3.05974,0.647079 0.0439,0.631371 -0.22498,0.791665 -0.83017,0.966026 -0.57374,0.131111 -0.96159,0.477007 -0.78746,0.937601 -1.43073,0.384515 -3.04901,0.851318 -3.89537,2.167373 -0.15733,0.640048 0.72426,0.605747 1.15259,0.617063 0.38307,-0.218936 1.43219,0.441439 0.63459,0.461514 -0.92386,0.02895 -1.78198,0.503011 -2.71424,0.308337 -0.65331,-0.137286 -1.37104,-0.254739 -1.93787,0.207791 -0.46937,0.490279 -0.9336,-0.475263 -1.44707,-0.02203 -0.69843,0.242675 -1.515,0.575441 -2.20997,0.150328 0.13113,-0.56592 0.94017,-0.315652 1.38369,-0.489385 0.91318,0.05779 0.0273,-0.537135 -0.32301,-0.755783 -0.898,-0.325887 -1.86083,-0.154315 -2.77122,-0.03196 -0.61942,-0.08791 -1.08127,-0.677811 -1.75497,-0.527125 -0.55335,-0.02704 -1.09598,0.05908 -1.60249,0.287255 0.23708,0.554682 -0.60042,0.984322 -1.03049,0.724704 -1.18465,-0.570212 -2.49521,0.123093 -3.72602,-0.207104 -0.44187,-0.05637 -1.27557,-0.297543 -1.33247,0.358982 -0.0925,0.432556 -1.24969,0.33161 -1.09124,-0.254233 -0.242,-0.553538 -0.97164,-0.121301 -1.44616,-0.193396 -1.48088,-0.145663 -2.96496,0.07501 -4.44564,0.02405 -1.22873,0.271956 -2.44543,0.789026 -3.32501,1.713997 -0.85098,0.29007 -1.84886,0.43416 -2.36096,1.262678 -0.36396,0.56823 -0.93778,0.841667 -1.5565,1.05201 -1.81505,0.655749 -3.31241,1.885104 -4.84812,3.010316 -1.6508,1.189585 -3.6565,1.715225 -5.37639,2.776993 -0.49076,0.401891 -0.0244,1.01348 0.50849,0.959545 0.95479,0.161196 1.88966,-0.19232 2.83947,-0.07454 -0.10757,0.558315 -0.38736,1.097897 -0.31299,1.676003 0.52919,0.239937 1.10273,-0.03736 1.534,-0.358002 0.74785,-0.01331 0.86819,0.248821 0.17804,0.611 -0.22008,0.515929 0.87991,0.206962 1.23827,0.284306 0.66959,0.09928 1.53474,-0.204204 1.62845,-0.941945 -0.21155,-0.764528 0.69336,-0.3501 1.13064,-0.44691 1.13533,-0.05972 2.46674,0.190813 3.11263,1.223552 0.54362,0.449602 1.20067,0.685437 1.77899,1.074997 -0.60228,0.494304 -0.64224,0.443331 -0.0946,0.969687 -0.3134,0.647666 -0.28956,0.811813 0.36154,1.099963 -0.20056,0.822783 -1.1947,1.289317 -1.46918,2.137184 -0.34939,0.619076 -0.78505,1.368486 -0.37082,2.063462 0.20299,0.625208 -0.20876,1.286086 -0.18991,1.938704 -0.22005,0.64249 -0.31746,1.365545 -0.61847,1.956408 -0.74022,0.675165 -1.70114,1.160055 -2.25769,2.00187 -0.0833,0.773168 -0.92197,0.984918 -1.40593,1.478056 -0.60029,0.671413 -0.87499,1.612895 -1.64985,2.147893 -1.02986,0.906984 -2.1863,1.701479 -3.09263,2.729825 -0.36315,1.02702 -1.7177,1.00836 -2.2309,1.92566 -0.91347,1.2102 -2.30118,1.9917 -3.78787,2.24076 -0.46678,-0.004 -1.10584,0.54218 -1.4426,0.23661 -0.24154,-0.65059 -1.18894,-0.0316 -1.42641,-0.72785 -0.23558,-0.60333 -0.8479,0.156 -1.31763,0.0828 0.63791,-0.58278 0.23382,-0.71428 -0.32818,-0.28992 -0.73729,0.73535 -1.59563,1.33143 -2.42488,1.95592 -0.2243,-0.52014 -0.736,-0.99448 0.14613,-1.07455 0.56667,-0.17339 1.20773,-0.43183 1.41888,-1.03645 -0.16251,-0.45852 0.12159,-0.98768 0.008,-1.51345 0.061,-0.71564 -0.54265,-1.30614 -0.33765,-2.02155 0.58821,-0.30557 1.14435,-0.758047 1.75238,-0.972851 0.78035,0.04837 1.52189,0.644421 2.29011,0.542071 1.17528,-0.915509 1.82915,-2.334745 2.46988,-3.647056 0.25805,-0.664423 0.29644,-1.574338 1.077,-1.833373 0.52969,-0.230955 0.89832,-0.660875 0.59842,-1.241221 0.0195,-0.667072 -0.70984,-0.490543 -1.14891,-0.476449 -1.46374,0.18178 -2.89969,0.577383 -4.28668,1.052664 -0.96568,0.03562 -1.9322,0.0487 -2.89722,0.10021 -0.52881,-0.798765 -0.61577,-1.834784 -1.07069,-2.646062 -0.97761,-0.401316 -2.02569,-0.708629 -3.05425,-0.975613 -1.06252,-0.192603 -2.21229,-0.311147 -3.14664,-0.868615 -0.68561,-0.627878 -0.85126,-1.639192 -1.36621,-2.403078 -0.80139,-1.19063 -1.30888,-2.538721 -1.94582,-3.812703 -0.47115,-0.662902 -1.08435,-1.457275 -1.98939,-1.374922 -0.83817,0.09961 -1.71558,0.22744 -2.47203,-0.249935 -1.54761,-0.851894 -3.34782,-0.361716 -5.00375,-0.207572 -1.18057,0.0796 -2.46899,0.08375 -3.40985,0.912759 -0.23354,0.165666 -1.212,0.71002 -0.76846,0.812956 0.61455,-0.07643 1.51842,-0.207926 1.77506,0.519786 9e-4,0.615666 -0.28999,0.995219 -0.89797,1.118177 -1.26811,0.440332 -1.89383,1.755046 -2.77796,2.658922 -0.22235,0.43147 0.84049,0.825964 0.1945,1.235359 -1.14688,0.499952 -2.36521,0.837467 -3.57551,1.144547 -0.74477,0.03296 -1.32578,-0.624282 -2.04982,-0.780271 -0.94891,-0.478773 -1.93305,0.46204 -2.89568,0.04221 -0.7231,-0.116592 -1.17679,-0.835093 -1.94904,-0.813563 -1.12085,-0.07498 -2.1795,0.455719 -3.0398,1.142123 -1.0838,0.969071 -2.65544,0.741027 -3.98967,1.020504 -1.77688,0.105824 -3.60777,0.365827 -5.33529,-0.205816 -0.74363,-0.105476 -1.46176,-0.285187 -2.12834,-0.633864 -1.17939,-0.175437 -2.11163,-0.958932 -3.17268,-1.421039 -1.02154,-0.354384 -2.13214,-0.12242 -3.19371,-0.237282 -1.17316,0.03208 -2.29752,0.524607 -3.45125,0.585573 -0.77831,-0.145776 -1.5785,-0.375413 -2.2801,-0.724807 -0.55908,-0.377602 -0.98921,-0.994244 -0.87564,-1.695765 -0.32785,-0.435353 -1.0392,-0.256973 -1.50426,-0.536834 -1.66185,-0.593522 -3.43601,-0.77797 -5.16995,-1.031197 -0.5844,-0.344693 -0.98495,0.188625 -1.43109,0.504282 -0.4998,0.440023 -1.17819,0.815998 -1.42168,1.448744 0.18104,0.534675 0.49899,0.950457 0.89281,1.318484 0.0385,0.694717 -0.73664,1.051599 -1.27214,1.340416 -0.67268,0.385985 -1.44805,0.298007 -2.12171,-0.0329 -1.3017,-0.06503 -2.59706,-0.170818 -3.90198,-0.139 -0.59793,0.03469 -0.9871,-0.341539 -1.33254,-0.780653 -0.28602,-0.536594 -0.82748,-0.569159 -1.37312,-0.582213 -1.2528,-0.007 -2.48439,-0.293338 -3.72521,-0.350513 -1.23729,0.274891 -2.45827,0.668912 -3.64598,1.098664 -1.12388,0.530146 -2.04612,1.639569 -3.39939,1.541417 -0.85434,-0.0731 -1.61105,0.320029 -2.33819,0.705709 -0.50578,0.192018 -1.03358,0.09234 -1.44015,-0.03441 -0.4828,0.05834 -0.72706,-0.671957 -1.03829,-0.895763 0.0813,-0.573737 -0.86008,0.203738 -1.13777,0.301162 -0.60689,-0.08326 -1.28642,-0.01939 -1.84749,-0.204903 -0.55332,-0.489383 -0.96636,-1.326102 -1.80363,-1.281017 -0.61007,-0.0038 -0.57063,-0.883989 -1.16703,-1.05433 -0.47848,-0.3446 -0.96151,-0.804727 -1.59672,-0.62899 -1.01507,0.07772 -1.97909,0.59901 -3.024,0.455842 -0.58465,0.208957 -0.86843,-0.30905 -1.31221,-0.440994 -0.47092,0.0968 -0.29415,-0.950092 -1.02267,-0.699005 -0.65016,-0.230868 -0.76091,0.465865 -1.21232,0.732936 -0.5374,0.572574 -0.84315,-0.03246 -1.16149,-0.478358 -0.77222,-1.017722 -1.72164,-1.883508 -2.45733,-2.934372 -0.93845,-1.285302 -2.20965,-2.364121 -3.74846,-2.835206 -0.31413,-0.317832 -1.33191,-0.341896 -1.00224,-0.928511 0.73129,0.02169 0.65851,-0.851517 -0.0961,-0.521835 -0.54427,0.147561 -1.09959,0.346027 -1.63309,0.542626 -0.58991,0.428718 -1.30282,0.534627 -1.97972,0.731791 -0.50954,0.09929 -0.82223,0.85075 -1.32599,0.578544 -0.62715,-0.252235 -1.33586,0.02793 -1.94552,0.03121 -0.63227,-0.298788 0.44702,-0.656353 0.59773,-0.924983 -0.0484,-0.447026 -0.83759,0.343526 -1.21905,-0.02384 -0.35892,-0.463695 -0.9681,-0.324946 -1.2901,-0.08284 -0.41811,-0.181321 -0.72428,-0.990586 -1.21093,-0.432163 -0.4813,-0.03211 -0.96114,-0.02325 -1.41356,0.08189 -0.85366,0.01347 -0.51475,-0.249388 -0.46144,-0.670882 0.61511,-0.624908 -0.26279,-0.622848 -0.39511,-1.117307 0.0977,-0.646963 -0.65841,-0.726361 -1.1398,-0.613183 -0.51227,0.15594 -0.99905,0.08079 -1.48005,-0.143511 -0.71361,-0.150257 -1.43654,-0.319243 -2.169,-0.220001 -0.12491,0.623078 -1.27493,0.121176 -1.21399,0.708549 -0.41546,0.698026 -1.36923,0.399745 -2.05739,0.510907 -1.35769,-0.02182 -2.64255,0.575065 -4.00865,0.473545 -0.57826,0.141039 -0.73885,0.825646 -1.35335,0.610889 -1.26985,0.104514 -2.5388,0.253102 -3.80596,0.332865 -0.63082,0.148266 -1.25002,0.405354 -1.85641,0.564241 -0.76106,0.05641 -1.51839,-0.07572 -2.26495,-0.136559 -0.47388,0.04786 -0.58886,0.964183 -0.14128,1.170718 -0.40874,0.208803 -0.0843,0.666055 0.58235,0.547997 0.34682,0.11877 1.37306,0.09437 1.12071,0.566894 -0.82159,0.24599 -1.80504,-0.369876 -2.53147,0.285622 -0.71863,0.257263 -0.24286,0.744891 0.13537,1.086332 -0.43321,0.471081 -1.14586,0.420959 -1.654,0.808998 -0.992,0.06441 0.11983,0.383865 0.28016,0.560559 0.12505,0.432342 1.03479,0.03519 1.22907,0.559981 0.41889,0.242889 1.28919,-0.04445 1.42528,0.540562 -0.019,0.603109 -0.28377,1.098131 -0.94532,1.087157 -0.60928,0.193176 -1.31199,0.33813 -1.91102,0.134916 -0.44595,-0.708746 -0.71736,0.230409 -1.24139,0.318736 -0.43407,-0.03424 -0.95867,-0.228933 -1.43435,-0.311162 -0.69483,0.02972 -0.80711,-0.685017 -1.29555,-0.83683 -0.51461,-0.125296 -1.03414,0.0012 -1.55188,0.03608 -0.0426,0.690156 -0.92181,0.514768 -1.27987,0.14798 -0.48978,-0.185414 -1.07312,-0.08778 -1.59812,-0.181976 -0.63827,0.336443 -0.99167,1.112194 -1.76846,1.144423 -0.42377,-0.268366 -1.07794,-0.195069 -1.4383,-0.600047 -0.17808,-0.370984 -1.37203,-0.634855 -0.93945,0.03104 0.41315,0.714724 -0.6749,0.66957 -0.43954,-0.07592 -0.45254,-0.463559 -1.18089,-0.634187 -1.78828,-0.876492 0.10321,-0.608264 -0.88865,-0.460609 -1.31315,-0.474502 -0.55286,0.05625 -1.18767,0.11323 -1.44025,-0.491245 -0.6894,-0.328767 -1.35902,0.557859 -2.04104,0.357798 -0.35077,-0.361315 -0.99742,-0.213898 -1.44874,-0.238338 -0.77988,0.479715 -1.56021,1.026797 -2.49242,1.107382 -0.5913,0.07093 -0.71941,0.798482 -1.31057,0.886952 -0.41657,0.223985 -1.15282,0.300452 -0.78267,0.919986 0.3193,0.424818 0.0326,1.070847 -0.51985,1.014967 -0.94795,0.19854 -1.19006,-1.160213 -2.06892,-1.184289 -0.59719,-0.06273 -0.4107,0.992879 -1.0323,0.955055 -0.75359,-0.124983 -0.60944,0.639834 -0.72578,1.146465 -0.12454,0.413106 1.03078,0.666774 0.1523,0.993784 -0.5164,0.255404 -0.62317,0.903609 -0.94459,1.345981 0.46108,0.2268 1.26703,0.07027 1.46161,0.593307 -0.18728,0.344483 0.54131,1.340732 0.59461,0.609311 0.46266,0.299553 1.03536,0.07819 1.50801,0.26148 0.35147,0.451853 1.01148,0.46618 1.22268,1.036323 0.25146,0.42479 0.88691,0.864177 0.93589,1.254726 -0.30041,0.121388 -1.29282,-0.482043 -1.10633,0.207132 0.41621,0.286942 0.97766,0.462327 1.48353,0.614725 -0.17267,0.521686 -1.05892,0.390856 -1.06601,0.828847 -0.16575,0.25645 -0.80836,-0.07158 -1.15219,0.453695 -0.47162,0.06323 -0.97999,0.351924 -1.42679,0.05745 -0.10108,0.369089 -0.23856,0.761733 -0.57199,1.192149 -0.28564,0.457987 -0.58836,0.871867 -1.08577,1.100567 -0.6219,0.43111 0.11659,0.85746 0.52247,0.92248 0.29618,0.32149 0.88601,0.64813 0.86557,1.19834 -0.2119,0.92839 0.0303,0.13997 0.33588,-0.20655 0.17685,0.29608 -0.62313,0.9287 -0.10818,1.29002 -0.60717,0.54981 0.29104,0.71604 0.35894,1.19972 0.12409,0.406 0.72328,0.52093 0.89906,1.02028 0.38005,0.36048 0.64909,0.78138 1.02502,0.985 -0.22556,0.702 -1.09466,0.63831 -1.43341,1.22824 -0.39264,0.45218 -1.0265,-0.0922 -1.5296,-0.0462 0.0816,-0.57894 -0.59915,-0.67641 -0.95304,-0.98442 -0.36018,-0.34502 -0.6977,-0.11538 -1.02005,-0.51318 -0.57573,0.008 -1.15445,-0.18125 -1.56891,-0.6134 0.47016,-0.57743 -0.0481,-0.77108 -0.61401,-0.662 -0.34084,-0.24288 -0.82158,-0.51994 -1.20599,-0.425 -0.2488,0.30136 -0.90098,-0.37748 -1.25199,0.119 -0.26215,0.24598 -1.02279,0.4015 -1.14953,0.0127 0.33189,-0.33536 -0.70235,-0.4175 -1.00143,-0.52069 -0.51324,-0.009 -0.71759,-0.76525 -1.27604,-0.53301 -0.48249,-0.0858 -0.97794,-0.29071 -1.48088,-0.0887 -0.55875,0.0827 -1.14903,-0.0994 -1.60998,-0.36135 -0.70376,0.13257 -1.2278,-0.52715 -1.93687,-0.40608 -0.54223,-0.31428 -0.95434,0.19649 -1.18403,0.26 -1.1202,-0.71588 -2.10216,-1.70421 -3.36929,-2.14785 -0.57839,0.0134 -1.06418,-0.28707 -1.41397,-0.72907 -0.49427,0.036 -1.05036,0.23648 -1.25,-0.455 -0.41666,-0.357433 -1.17026,-0.782675 -0.20194,-0.861382 0.47631,0.0073 1.16927,0.09602 1.06595,-0.59362 0.39973,-0.319431 0.42471,-1.132221 1.06852,-0.978298 0.90394,0.08505 0.37178,-0.655627 -0.1615,-0.804609 -0.54411,-0.133169 -1.10155,-0.716195 -0.2028,-0.64105 0.95472,-0.0178 1.72927,-0.624798 2.63782,-0.848085 0.38754,-0.442789 -0.53355,-0.584852 -0.91705,-0.398955 -0.37599,-0.06892 -1.33964,0.439111 -1.27899,-0.063 -0.11798,-0.627886 0.26234,-0.911557 0.83857,-0.908095 0.46015,-0.223843 0.55773,-0.587363 1.16985,-0.460018 0.48624,-0.114567 0.98317,0.311787 1.43259,0.0051 0.1111,-0.478517 0.44874,-0.909678 0.11266,-1.378334 -0.39036,-0.175152 -0.54087,-0.835423 0.13202,-0.677665 0.8146,-0.143366 -0.93051,-0.321927 -0.33774,-0.559817 0.33933,-0.133116 1.22555,-0.365594 0.73574,-0.83476 0.18114,-0.634828 -0.35573,-0.19272 -0.7721,-0.315004 -0.35542,-0.395239 -0.8409,-0.276254 -1.27929,-0.573594 -0.41904,0.02032 -0.87996,-0.168374 -1.33784,-0.245498 -0.53647,-0.462293 -0.75572,-0.03068 -1.25739,-0.0288 -0.43276,-0.245906 -0.79302,-0.353667 -1.01685,-0.801232 -0.30413,-0.483254 -0.85257,0.02684 -1.30193,-0.0353 -0.49354,0.247343 -0.89389,0.0944 -1.35487,0.102202 -0.4197,-0.299043 -1.06048,-0.522898 -1.50741,-0.101195 -0.58072,-0.280811 -0.41672,-0.72025 -0.67298,-1.164352 -0.11716,-0.543693 -0.43899,-0.583596 -0.77812,-0.81606 -0.51,0.111327 -0.91268,-0.110631 -1.43092,-0.05159 -0.27285,-0.263262 -0.80461,-1.096022 -0.11337,-1.065748 0.70482,-0.144672 -0.44018,-0.46996 -0.52122,-0.836867 -0.35954,-0.412222 -0.74812,-0.785447 -1.3081,-0.545578 -0.71837,-0.319661 -1.4457,0.459519 -2.1333,-0.001 -0.42893,-0.195551 -0.52444,0.932146 -1.194,0.600588 -0.15789,0.0052 -0.32802,-0.06616 -0.46701,-0.09535 z m 55.99802,-47.209999 c -1.28763,-0.342819 -2.61182,-0.584586 -3.94469,-0.414447 -0.64381,-0.01017 -1.30613,0.341034 -1.89163,-0.09524 -0.86241,-0.238488 -0.61087,-0.462803 0.11806,-0.659004 0.92388,-0.426252 1.92554,-0.560165 2.93531,-0.490801 0.83775,0.08706 0.39471,-0.661781 -0.19636,-0.694259 0.60029,-0.629267 1.5429,-0.319187 2.29528,-0.615248 -0.5862,-0.288143 -1.00601,-0.446459 -0.16155,-0.751329 0.56662,-0.321926 1.16001,-0.810022 1.84124,-0.590286 0.64611,0.157074 1.16103,-0.221706 1.69531,-0.521388 1.73255,-0.751338 3.66134,-0.904902 5.52409,-0.821696 0.59167,-0.0048 1.00574,-0.394594 1.43691,-0.747302 0.65028,0.01958 1.29068,-0.212038 1.93556,0.01255 1.43379,0.403608 2.84546,-0.32527 4.29143,-0.248547 1.34545,-0.165489 2.69331,-0.303433 4.04804,-0.363001 0.53086,-0.445412 1.12812,-0.848937 1.85671,-0.754722 1.30942,-0.04105 2.63725,-0.209231 3.93747,-0.129662 0.41469,0.01224 1.29439,0.591823 0.58823,0.843419 -1.24834,0.725704 -2.75197,0.794693 -4.14445,1.070907 -3.77361,0.537139 -7.58523,0.823487 -11.33598,1.528061 -1.03233,0.158366 -2.13527,0.138772 -3.10735,0.506238 -0.5599,0.387184 1.03522,0.381443 -0.0846,0.677524 -1.06075,0.588889 -2.28353,0.280836 -3.43399,0.298236 -1.03212,0.201436 0.0319,0.584096 -0.0753,0.764287 -0.4423,0.256362 -0.98817,0.479011 -1.47546,0.549122 -0.54899,-0.213547 -1.17607,-0.288907 -1.66225,0.10459 0.42855,0.06086 1.39584,0.42085 0.62434,0.784975 -0.50445,0.339055 -1.02576,0.59996 -1.61433,0.757025 z m -9.66498,1.372002 c 0.74201,-0.174998 1.37866,-0.620135 2.06979,-0.882309 0.92811,0.04908 1.83666,-0.09399 2.742,-0.270492 1.24806,0.01493 2.5157,-0.275045 3.72711,0.158759 0.23107,0.245541 -0.48833,0.913263 -0.88274,0.908051 -0.63267,-0.05553 -1.36595,0.40103 -1.19295,1.110223 -0.0183,0.545986 0.27016,1.10799 0.58226,1.528873 0.76814,0.822157 1.79496,1.278072 2.86017,1.580491 0.90345,0.261457 -0.01,0.566862 -0.51164,0.388237 -1.17143,-0.01587 -2.40313,-0.228815 -3.493,0.320166 -0.59997,0.315428 -0.936,-0.314155 -1.44903,-0.423754 -0.65749,-0.03771 -1.31872,0.160509 -1.969,-0.03225 -0.21108,-0.648385 0.79557,-0.44377 1.17026,-0.681835 0.60659,-0.36432 -0.5325,-0.423356 -0.82724,-0.569165 -0.98286,-0.306031 -2.0197,-0.581624 -3.04133,-0.543027 -0.69454,0.334249 -1.7116,0.387879 -2.20322,-0.274646 -0.30313,-0.633289 0.69338,-1.084526 1.19053,-0.782325 0.92231,0.183349 1.67102,-0.500208 2.33967,-1.016986 0.46832,-0.47626 -0.75458,-0.265517 -1.07832,-0.512001 l -0.0324,-0.008 -9.7e-4,0.002 z M -0.125,56.089001 c 0,-3.050334 0,-6.100668 0,-9.151001 1.8081242,0.325984 3.3849974,0.584965 4.8600001,1.208 1.7133605,0.346394 3.4104259,0.800256 5.0849876,1.295204 0.5696933,0.116963 0.9524533,0.426462 1.2598733,0.880459 0.314388,0.376566 0.790549,0.934771 0.386139,1.399338 0.570556,0.464807 1.128893,0.954364 1.892897,1.027404 0.37381,-0.106987 0.502391,-0.653161 -0.180809,-0.816992 -0.266028,-0.346718 -0.104612,-1.142571 0.509724,-0.998019 0.815269,-0.229727 1.580213,0.366764 2.412354,0.316159 0.888728,0.06735 1.836008,-0.261714 2.672076,0.195166 1.281154,0.630759 2.584479,1.231792 3.960522,1.619422 0.91631,0.357595 -0.177794,0.378201 -0.610466,0.268642 -0.583858,-0.198865 -0.963478,0.236302 -1.314457,0.628551 -0.403299,0.360344 -1.035142,-0.20528 -1.535932,-0.239929 -0.418902,-0.0087 0.682504,0.465824 0.862092,0.674595 -0.753181,-0.121386 -1.519485,-0.08663 -2.269575,-0.08823 -0.599201,-0.192799 -1.189951,-0.42284 -1.825426,-0.455769 0.36504,0.535781 1.274248,0.445311 1.348047,1.210054 0.303762,0.706396 -0.54114,0.548882 -0.990169,0.600246 -0.698831,-0.120093 -0.988666,0.312418 -0.461165,0.827082 0.463436,0.681442 -0.543721,0.49721 -0.945316,0.448521 -0.553686,0.112616 -1.208585,0.0254 -1.708706,-0.168983 -0.369767,-0.549687 -1.179516,-0.459091 -1.749087,-0.718014 -0.451441,0.04035 -0.808779,0.266037 -1.336526,-0.124895 C 9.7322106,55.83558 9.1561157,55.353515 9.4290473,54.977408 8.9099413,54.239044 7.8532666,54.184052 7.0169135,54.257682 5.9039063,54.600493 4.7174181,54.626089 3.5699999,54.443001 3.7929609,53.904212 3.1733536,53.471977 2.767986,53.318153 c -0.570475,0.0028 -1.1535689,0.183693 -1.3854299,0.756031 -0.2979346,0.54447 -0.62365749,1.078509 -0.69555612,1.707817 -0.18733333,0.102334 -0.37466665,0.204667 -0.81199998,0.307 z\"\n\t\t\t\t/>\n\t\t\t\t<g id=\"Asie\">\n\t\t\t\t\t<g id=\"Proche orient\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Turquie\"\n\t\t\t\t\t\t\td=\"m 500.121,117.572 c -0.57887,-0.27001 -0.78021,0.75765 -1.32199,0.393 0.0387,-0.47937 -0.48436,-1.02364 -0.90439,-0.57651 -0.49308,0.14676 -1.04506,-0.23034 -1.56961,-0.0945 -0.3771,-0.50419 -1.08113,0.3942 -1.28193,-0.0519 -0.34216,-0.20559 -0.74168,0.54534 -1.24638,0.51642 -0.83965,0.2304 -1.70786,0.25017 -2.5557,0.0455 -1.0271,0.15562 -1.87236,0.92145 -2.94271,0.94594 -1.04144,0.33303 -2.00415,-0.51509 -3.03129,-0.46094 -0.92853,0.50195 -2.02385,0.55813 -3.02701,0.257 -0.66577,-0.20638 -0.38238,0.72909 -0.13997,1.04517 -0.19727,0.11187 -0.73471,0.48615 -1.00341,0.76412 -0.42543,0.15145 -1.0459,0.008 -1.21462,-0.531 -0.0448,-0.47152 0.88496,-0.52191 0.92801,-0.98829 -0.23843,-0.75907 -0.74195,-0.21004 -1.19101,-0.058 -0.0396,0.23153 -0.58916,0.61993 -0.99257,0.29484 -0.55954,-0.34198 -1.32632,-0.65666 -1.8613,-0.0937 -0.5018,0.21427 -0.71711,0.65594 -1.00011,0.9469 -0.38777,-0.34668 -0.97979,0.22644 -1.46949,0.22133 -0.94016,0.0633 -1.90247,-0.19677 -2.53834,-0.92495 -0.72263,-0.5702 -1.68303,-0.81654 -2.58954,-0.89518 -0.68747,-0.1461 -0.81403,0.4684 -0.83101,1.01492 0.0329,0.83952 -0.7304,0.18114 -1.15777,0.41807 -0.62708,0.22101 -1.53694,0.25942 -1.75776,-0.52496 -0.23362,-0.88057 -0.54082,-0.37008 -1.04364,-0.47673 -0.41936,-0.39944 -1.03044,-0.38535 -1.4154,0.0567 -0.79358,0.13003 0.2797,-0.80971 -0.34473,-0.75433 -0.43083,-0.1131 -1.18093,0.19991 -1.41158,-0.19174 0.41055,-0.16061 0.77204,-0.69211 -0.0832,-0.77873 -0.5907,-0.10236 0.014,-0.85711 -0.23556,-1.20538 -0.50931,-0.0343 -0.87506,-0.65726 -1.39398,-0.393 -0.60194,-0.0333 -0.0947,-1.29272 0.33088,-0.58718 0.57331,0.21915 0.86343,-0.24462 0.37212,-0.56082 -0.93507,-0.31972 0.86004,-0.29339 0.31248,-0.71518 -0.66379,-0.0844 -0.0871,-0.40868 -0.58948,-0.76782 -0.65506,0.009 1.1179,-0.68033 0.29844,-0.69559 -0.57194,0.0267 -1.14735,0.30265 -1.72044,0.23959 0.24731,-0.36019 -0.003,-0.97794 0.35977,-1.20044 0.36993,-0.16332 0.65095,-0.62047 1.15977,-0.82013 0.43571,0.14503 1.01622,-0.49173 1.29345,0.0206 0.26642,0.21758 1.50245,0.23178 0.88576,-0.18284 -0.0892,-0.31149 0.90282,-0.0337 0.48744,0.18407 0.81681,-0.0936 1.64472,-0.1184 2.4548,0.0468 0.51553,-0.43343 -1.25544,-0.24828 -0.24767,-0.64462 0.69392,-0.12328 1.41959,-0.0641 2.09166,-0.27038 -0.4987,-0.10751 -1.14772,0.2303 -1.46766,-0.2292 -0.76723,-0.10067 -0.25221,-1.05282 0.30392,-0.74939 0.68267,0.092 1.43405,0.18523 2.07994,0.0298 0.72116,0.24661 1.57082,0.47094 2.2817,0.12988 0.13216,-0.43035 0.58504,-0.5678 1.08871,-0.77332 1.5143,-0.81597 3.25635,-1.39121 4.98739,-1.03474 0.70872,0.11583 1.45797,0.23085 2.06793,-0.23619 0.15494,0.37138 0.50263,0.89357 1.0349,0.90813 0.48873,0.18035 1.1804,-0.46253 1.35713,0.24594 0.20193,0.52575 0.80438,0.74286 1.28704,0.44411 0.73591,0.0141 1.2004,0.84243 1.98064,0.65766 1.06368,-0.0192 2.13389,0.47619 3.17579,0.0434 1.00258,-0.3646 2.00721,0.24978 3.03423,0.0815 0.78779,-0.16517 1.58001,-0.45725 2.28779,-0.82872 0.4039,-0.44202 1.06163,-0.0866 1.58457,-0.13064 0.71176,0.29789 1.36982,-0.79709 2.01141,-0.17287 0.66079,0.53873 1.45373,1.02146 1.9521,1.69378 -0.0106,0.46617 -0.73964,1.02607 -0.23088,1.44188 0.59115,0.35103 1.50539,-0.0857 1.94733,0.58524 0.32628,0.51146 -0.98153,0.0774 -0.62198,0.85278 -0.65777,0.082 -0.74076,0.6273 -0.39498,1.11564 -0.11538,0.34864 -0.0101,1.14425 0.4066,1.02155 0.61039,0.32457 -0.24019,0.81251 -0.29933,1.25526 0.57817,0.23942 0.46919,0.4311 0.63507,1.02363 0.18434,0.40297 0.76703,0.17225 0.64965,0.65892 z m -37.504,-10.768 c 0.38038,0.28176 0.15057,0.9699 0.79517,1.08219 0.53515,0.3547 1.26295,0.29448 1.78784,0.64381 -0.13835,0.60088 -0.73187,0.74452 -1.24793,0.51901 -0.54444,-0.27496 -1.05877,-0.12809 -1.56962,0.0179 -0.54094,-0.11432 -1.0837,0.0562 -1.21846,0.64814 -0.64531,0.24372 -1.3359,0.45243 -1.82624,0.93484 -0.54253,0.4185 -0.6565,0.61848 -0.54681,-0.11844 0.409,-0.13268 1.16737,-0.62746 0.316,-0.63358 -0.70695,0.10835 -0.79562,-0.37068 -0.32832,-0.80783 0.1876,-0.48689 0.841,-0.7865 0.97098,-1.19353 -0.55397,-0.3535 -0.72298,-0.42148 -0.0412,-0.83687 0.46891,-0.42578 1.09173,-0.41116 1.66549,-0.26226 0.41334,0.003 0.83521,5.6e-4 1.24315,0.007 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Chypre\"\n\t\t\t\t\t\t\td=\"m 475.7152,122.2173 c -0.12123,-0.18425 -0.41801,-0.2762 -0.36469,-0.51307 0.0456,-0.19412 0.22204,-0.18687 0.36806,-0.21556 0.0787,-0.22185 0.34629,-0.26092 0.52702,-0.36357 0.18879,-0.0976 0.30057,-0.28565 0.52209,-0.32559 0.12471,-0.0212 0.12729,-0.2206 -0.0238,-0.0938 -0.2514,0.0667 -0.4506,0.20293 -0.69808,0.279 -0.17262,0.0135 -0.31452,0.21062 -0.51047,0.24207 -0.17948,0.0823 -0.37858,0.0632 -0.55985,0.1169 -0.21951,0.12035 -0.47888,0.13165 -0.7248,0.14197 -0.21584,-0.014 -0.43088,-0.0377 -0.6419,-0.0669 -0.14584,0.10666 -0.36474,-0.13678 -0.44216,-0.0392 0.0913,0.1846 0.0298,0.51748 -0.22014,0.52589 -0.18074,-0.0722 -0.38087,-0.16281 -0.56772,-0.0566 -0.14045,0.064 -0.23984,0.3801 -0.47424,0.26809 -0.0736,-0.0873 -0.25181,-0.16729 -0.17022,0.0233 0.13672,0.12785 0.0109,0.3672 0.22481,0.42708 0.0149,0.27965 0.3002,0.29365 0.50272,0.37594 0.20759,0.16707 0.459,-0.0657 0.66554,0.0613 0.0961,0.0802 0.0492,0.23926 0.22191,0.1685 0.14971,0.0608 -0.10308,-0.18508 0.088,-0.21861 0.14191,-0.11472 0.32884,-0.0858 0.49649,-0.0731 0.16599,-0.0499 0.35602,-0.11927 0.52834,-0.185 0.14353,-0.0721 0.34903,-0.0777 0.31423,-0.30643 0.12714,-0.2892 0.45687,0.0662 0.62307,-0.10561 0.11249,-0.11397 0.48532,0.16247 0.31579,-0.067 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Georgie\"\n\t\t\t\t\t\t\td=\"m 489.685,103.693 c 0.0896,-0.69424 0.76822,-0.35176 1.21672,-0.35346 0.66423,-0.0551 1.16517,0.57063 1.84828,0.39646 0.68149,0.58801 1.61348,0.28535 2.41199,0.284 0.40422,0.3409 1.03641,-0.0921 1.32202,0.427 0.47553,0.41057 1.17701,0.29685 1.70199,0.639 -0.48718,0.45034 0.53028,0.40636 0.81056,0.307 0.28246,-0.40551 0.92947,-0.4595 1.29244,-0.119 0.28865,-0.49489 0.84169,0.0207 1.20509,0.14762 0.25518,0.2609 1.30057,-0.0839 0.84303,0.54932 -0.18196,0.45164 0.60898,0.71273 0.98718,0.79707 0.65193,-0.11986 0.85565,0.35949 0.22453,0.63918 0.041,0.52435 0.61553,0.64853 0.98922,0.82853 0.2621,0.66591 -0.63749,0.68003 -0.98324,0.33749 -0.50667,0.0911 -1.00795,-0.10602 -1.36513,-0.45532 -0.46089,-0.2663 -1.01025,-0.11852 -1.38824,0.21042 -0.62854,0.20293 -1.30098,0.16835 -1.93791,0.21185 -0.55338,0.1296 -1.14907,0.16329 -1.67954,0.24184 -0.5845,-0.33827 -1.02212,-1.04727 -1.73599,-1.059 -0.51854,0.28903 -1.05714,0.53622 -1.65529,0.352 -0.49268,-0.0824 -1.37089,0.13454 -0.73749,-0.52418 0.34634,-0.71119 -0.0919,-1.52864 -0.29599,-2.22977 -0.34459,-0.77544 -1.23251,-1.0532 -2.02125,-1.10928 -0.3662,-0.13078 -0.77782,-0.2636 -1.05298,-0.51877 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Syrie\"\n\t\t\t\t\t\t\td=\"m 479.91599,127.377 c 0.13053,-0.38292 -0.82601,-0.83162 -0.12533,-1.02924 0.50529,-0.35006 0.58689,-0.5488 0.52442,-0.90386 0.55228,-0.35799 0.74553,-0.04 0.86263,-0.62227 0.48232,-0.23235 0.59668,-0.55769 0.27385,-0.93513 -0.58694,-0.11377 0.0392,-0.68461 -0.74596,-0.43961 -0.64442,0.19943 -0.76801,-0.65599 -0.57129,-1.0968 0.41808,-0.53249 -0.644,-0.83208 -0.2703,-1.21409 0.12926,-0.2864 0.22816,-0.94069 0.7246,-0.76788 0.60835,0.34183 0.7502,-0.45371 1.20764,-0.58404 0.77284,0.0223 -0.21764,-0.68435 0.0509,-1.12419 0.2488,-0.33698 0.98356,0.1406 1.43211,0.0677 0.76958,0.12106 1.4516,-0.26278 2.16037,-0.45365 0.96829,0.0924 1.89811,0.78874 2.89126,0.47417 1.05602,-0.0306 1.89053,-0.78816 2.90607,-0.9401 1.12897,0.26181 2.40465,0.18741 3.39241,-0.43464 0.4351,-0.67003 0.73706,0.5309 0.12427,0.6488 -0.49649,0.46444 -0.97133,1.03202 -1.70854,1.02986 -0.63739,0.0997 -0.90779,0.85243 -0.53113,1.36598 0.0363,1.07439 -0.40151,2.10997 -0.565,3.168 -3.16496,1.67411 -6.40397,3.20947 -9.517,4.979 -0.76945,-0.0373 -1.39764,-0.6632 -2.10115,-0.95729 -0.13408,-0.0766 -0.29521,-0.15327 -0.41487,-0.23071 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Jordanie\"\n\t\t\t\t\t\t\td=\"m 478.51599,135.173 c 0.012,-0.53484 -0.25036,-0.75327 0.10135,-1.33575 0.22471,-0.55846 -0.0738,-1.20375 0.35519,-1.70619 0.29763,-0.59872 0.55946,-1.24774 0.58427,-1.90848 0.26813,-0.71137 0.10178,-1.51809 0.28619,-2.25058 -0.31359,-0.8447 0.4641,-0.4589 0.8546,-0.16864 0.57967,0.23653 1.09601,0.77536 1.73942,0.76064 1.38542,-0.81868 2.82723,-1.53782 4.25998,-2.268 0.44313,0.77193 0.81794,1.6202 1.25712,2.36782 -0.48808,0.76642 -1.53668,0.81196 -2.3612,1.0474 -0.84859,0.2228 -1.72233,0.3608 -2.54091,0.68478 0.62955,0.72268 1.26605,1.4396 1.844,2.205 -0.60192,0.57222 -1.17618,1.25572 -2.06207,1.32577 -0.62523,-0.009 -0.86929,0.50941 -1.24855,0.89341 -0.42934,0.29113 -0.7797,0.87147 -1.36405,0.59493 -0.56791,-0.0798 -1.13969,-0.16784 -1.70534,-0.24211 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Liban\"\n\t\t\t\t\t\t\td=\"m 480.24799,123.437 c 0.34114,0.0818 1.30666,-0.23617 0.81701,0.285 0.43221,0.0236 0.83013,0.65327 0.42079,0.87042 -0.68278,0.2025 -0.13015,0.82924 -0.78402,0.65903 -0.87875,0.13781 0.0461,0.63491 -0.68467,0.88018 -0.2694,0.35156 -0.81211,0.34312 -0.86028,0.77856 -0.37122,-0.052 -1.16378,0.12657 -0.57776,-0.394 0.094,-0.49848 0.62215,-0.87999 0.55394,-1.41519 0.6078,-0.0159 0.17756,-0.95205 0.71479,-1.15425 0.13082,-0.18828 0.59538,-0.16787 0.4002,-0.50975 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Israel\"\n\t\t\t\t\t\t\td=\"m 478.21201,134.714 c -0.65717,-1.29424 -1.20542,-2.63645 -1.754,-3.979 0.9628,-0.80172 1.31042,-2.06417 1.54898,-3.25 0.39228,-0.029 0.22057,-1.02413 0.8613,-0.55046 0.48926,0.19551 0.46664,-0.94271 0.79071,-0.0755 0.49805,0.29454 -0.0299,0.65757 0.18301,1.111 -0.18356,0.79092 -0.0269,1.66052 -0.32314,2.41984 0.0331,0.89609 -0.65351,1.64251 -0.81062,2.47882 0.0584,0.62896 -0.0991,1.35222 -0.49624,1.84534 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Peninsule Arabe\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Koweit\"\n\t\t\t\t\t\t\td=\"m 507.047,133.66499 c 0.25141,0.68085 0.18756,0.86261 -0.39831,1.11131 -0.6191,0.51133 0.45453,0.41829 0.7546,0.26187 0.38713,0.25045 0.41559,0.98427 0.66445,1.42106 0.49705,0.67291 -0.53031,0.42358 -0.9255,0.45103 -0.61456,0.16012 -0.90464,-0.31828 -1.10657,-0.81562 -0.61978,-0.23245 -1.41633,-0.23635 -2.10366,-0.38463 0.5339,-0.55338 1.03763,-1.14904 1.32699,-1.87001 0.57705,-0.20418 1.19231,-0.13018 1.788,-0.17501 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Arabie Saoudite\"\n\t\t\t\t\t\t\td=\"m 495.75101,163.817 c -0.16438,-1.26507 -1.06405,-2.28645 -1.88685,-3.20215 -0.85868,-0.51396 -1.28097,-1.42971 -1.64082,-2.32392 -0.39859,-0.83637 -0.68397,-1.81094 -1.36411,-2.45456 -0.79392,-0.62168 -1.89687,-0.82944 -2.44224,-1.73436 -0.37078,-0.59613 -0.95321,-1.11691 -0.85974,-1.87828 -0.16924,-0.95839 0.12303,-2.00437 -0.45307,-2.86148 -0.66584,-1.16178 -1.22475,-2.56385 -2.56518,-3.08926 -0.6099,-0.0246 -0.9322,-0.56931 -1.29001,-0.98599 0.2849,-0.64541 0.0299,-1.28698 -0.36292,-1.82087 -0.89209,-1.45414 -2.19398,-2.61331 -2.98757,-4.13587 -0.33688,-0.62585 -0.82008,-1.24172 -1.38184,-1.6387 -0.84956,0.1168 -0.62697,-0.3282 -0.35227,-0.88495 0.12688,-0.544 0.27035,-1.08456 0.35362,-1.6376 0.76223,0.0532 1.57233,0.31307 2.30231,0.2604 0.50573,-0.397 1.0332,-0.77284 1.36767,-1.33641 0.79513,-0.21334 1.66687,-0.31856 2.20313,-1.01829 0.72566,-0.36057 0.31655,-0.80362 -0.0983,-1.24709 -0.40226,-0.48804 -0.82751,-0.95704 -1.23878,-1.43762 1.4067,-0.53948 2.96131,-0.64878 4.34996,-1.20943 0.37318,-0.45694 0.72673,-0.59864 1.23821,-0.22233 1.05205,0.36488 2.08835,0.7586 3.08619,1.26245 1.3515,0.6078 2.76751,1.11825 4.04991,1.85355 0.26183,0.48347 0.5841,0.9273 1.20694,0.70712 0.77419,-0.1489 0.27841,0.7667 0.39429,1.18816 -0.14226,0.63922 0.47824,0.77408 0.9515,0.90447 0.79512,0.32819 1.54531,0.85112 2.44503,0.72597 1.67139,0.0546 3.34838,0.044 4.99313,0.38536 0.55231,0.005 0.42827,1.09472 1.10585,0.90526 0.43557,0.13612 1.10814,-0.14893 1.40201,0.11043 0.18535,0.65754 0.75562,1.10619 0.81997,1.80499 0.40961,0.18356 1.04988,0.005 0.83897,0.57033 0.30571,0.35918 0.64564,0.72648 1.15451,0.76544 0.42312,-0.099 1.22781,0.6561 0.62679,0.82841 -0.38881,0.34725 0.45367,0.74682 -0.0423,1.23282 -0.18327,0.23243 0.24769,1.22087 0.49402,1.015 0.58822,0.20766 0.31075,0.90088 0.70731,1.27787 0.30539,0.40754 0.0725,1.09334 0.71622,1.25404 0.6374,-0.0847 0.78975,0.5161 1.00747,0.99307 0.48581,1.12062 1.15682,2.17094 1.43301,3.37102 2.5352,0.26135 5.06167,0.59402 7.58795,0.929 0.42217,-0.49071 0.89622,-0.67038 1.11733,0.0739 0.38267,0.49662 0.22286,1.18286 0.35472,1.76714 -3.24126,1.77452 -6.4161,3.70773 -9.81124,5.17192 -2.94018,0.92632 -5.86147,1.92491 -8.7684,2.94607 -0.49681,0.21593 -0.7533,0.77067 -1.14734,1.1533 -1.25113,1.43261 -2.39878,2.94822 -3.54905,4.46171 -0.82525,-1.72372 -1.66042,-3.44261 -2.513,-5.153 -0.66645,-0.009 -1.32253,0.0863 -1.95971,-0.16802 -0.70241,-0.30479 -0.92015,0.63639 -0.79747,1.15046 0.10993,0.5874 -0.24008,1.0204 -0.71909,1.30422 0.0252,0.0669 -0.0655,0.0315 -0.0767,0.0663 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Emirats Arabes Unis\"\n\t\t\t\t\t\t\td=\"m 514.177,145.868 c 0.48507,-0.2005 0.4913,0.69063 1.05493,0.44952 -0.241,0.57345 0.53525,0.4543 0.95619,0.53364 0.56963,-0.0654 0.7629,-0.43185 1.36855,-0.25519 0.55307,0.20161 0.96998,-0.0899 1.49447,0.051 0.523,0.12672 1.04477,0.16109 1.56385,-0.004 -0.20162,-0.54585 0.75493,0.25329 0.89345,-0.44634 0.45034,-0.2648 0.6012,-0.77867 0.9159,-1.19125 0.51275,-0.41976 0.94745,-0.91838 1.39164,-1.40741 0.43504,0.19078 0.80685,-0.56169 1.21125,-0.75539 0.41534,-0.75039 0.56927,-0.2083 0.18591,0.28969 -0.31318,0.68076 0.9245,0.0442 0.71306,0.80253 0.15261,0.61526 -0.0991,1.0163 -0.75319,0.75713 -0.45285,0.13311 -0.1409,0.99898 -0.18838,1.43161 0.14074,0.69691 -0.93524,0.93344 -0.71922,1.64166 0.042,0.9166 -0.0616,1.86081 0.0886,2.75975 -0.46198,0.29771 -0.8419,0.69947 -1.441,0.43525 -2.29029,-0.3126 -4.58408,-0.59635 -6.88297,-0.83825 -0.38896,-1.50003 -1.24419,-2.83682 -1.85303,-4.25399 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Qatar\"\n\t\t\t\t\t\t\td=\"m 514.55103,145.841 c -0.75731,0.2414 -0.71662,-0.3842 -0.80611,-0.92257 -0.14979,-0.53464 -0.32717,-1.34019 0.2021,-1.69342 -0.14568,-0.43281 0.21115,-1.2605 0.75995,-0.98001 0.10778,0.42177 0.72553,0.6943 0.42108,1.27758 -0.15152,0.54324 0.33576,1.09277 -0.076,1.56398 -0.17867,0.24374 -0.33935,0.50025 -0.50105,0.75444 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Yemen\"\n\t\t\t\t\t\t\td=\"m 518.40198,163.07899 c -0.92235,0.31898 -1.9247,1.02221 -1.96013,2.08941 -0.4928,0.56694 -1.32736,0.77485 -2.00788,1.08489 -1.43885,0.42563 -2.92717,0.76228 -4.29519,1.37364 -0.54263,0.42388 -0.83151,1.2166 -1.63018,1.22871 -0.66268,-0.10753 -1.3369,-0.0166 -1.89347,0.39323 -1.07804,0.70198 -2.33355,1.20565 -3.64113,1.06014 -0.75859,-0.20985 -1.222,0.47033 -1.73605,0.87586 -0.40372,0.34869 -0.95962,0.45964 -1.4404,0.45626 -0.48254,0.51766 -1.35334,0.52112 -1.94303,0.20082 -0.56662,-0.34494 -1.31005,-0.96416 -0.9194,-1.69818 0.23161,-0.75633 -0.45623,-1.30978 -0.54085,-2.02822 -0.22328,-0.97809 -0.70759,-1.93567 -0.75477,-2.92863 0.41588,-0.44824 -0.0177,-1.09783 0.25035,-1.48406 0.48927,-0.25697 0.74721,-0.72967 0.65106,-1.28192 -0.1281,-0.52164 0.12878,-1.43541 0.82181,-1.11391 0.62886,0.25784 1.27927,0.14683 1.93727,0.16297 0.85256,1.7104 1.68772,3.42929 2.513,5.153 1.38638,-1.82373 2.77308,-3.65424 4.332,-5.33501 0.38126,-0.46516 1.15242,-0.50114 1.70302,-0.75546 2.61182,-0.8937 5.23663,-1.76823 7.85402,-2.63254 0.0679,1.53145 1.31005,2.60258 1.98199,3.88501 -0.0716,0.49813 0.48468,0.89152 0.71796,1.29399 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Oman\"\n\t\t\t\t\t\t\td=\"m 525.37,142.384 c 0.39721,-0.76348 0.57326,-0.50885 0.55102,0.234 -0.15839,0.22686 -0.61525,1.29254 -0.75702,0.647 -0.0146,-0.31714 0.55995,-0.65866 0.206,-0.881 z m 0.55297,2.32801 c 0.15349,0.89288 0.95293,1.54428 1.646,2.08099 0.92277,0.46595 1.82727,1.27171 2.93005,1.05299 0.67037,0.16523 0.98678,0.90504 1.45892,1.36261 0.37222,0.56635 0.93191,0.94161 1.56605,1.1574 0.0204,0.50235 -0.478,0.90171 -0.70262,1.3396 -0.53216,0.79618 -1.49398,1.22971 -1.80004,2.1746 -0.23206,0.39818 -0.38431,1.17755 -1.00994,0.91687 -0.54573,-0.31048 -1.01929,0.16611 -0.99018,0.73106 -0.0336,0.75406 -0.13372,1.52577 0.0878,2.26087 -0.7421,0.30687 -1.65801,0.0349 -2.28707,0.64777 -0.62736,0.41033 -0.35209,1.44725 -1.16616,1.67047 -0.65626,0.34951 -1.5529,-0.22487 -2.04167,0.47516 -0.50531,0.45438 0.006,1.40291 -0.75638,1.63375 -0.60297,0.49953 -1.31689,-0.21555 -1.99468,0.043 -0.84957,0.16883 -1.63669,0.55699 -2.46003,0.81984 -0.29902,-0.43238 -0.76208,-0.82854 -0.75789,-1.3704 -0.6832,-1.24209 -1.87413,-2.30749 -1.94213,-3.80559 3.22091,-1.49331 6.28469,-3.29069 9.38703,-5.00999 -0.0969,-0.74347 -0.0276,-1.545 -0.584,-2.12785 -0.43412,-0.63604 -0.13227,-1.47527 -0.23555,-2.19902 0.0512,-0.57012 -0.21514,-1.26499 0.34997,-1.64051 0.73133,-0.57034 0.0874,-1.52938 0.41257,-2.26163 0.29673,0.0933 0.58848,0.0856 0.88995,0.048 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Moyen orient\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Irak\"\n\t\t\t\t\t\t\td=\"m 486.69601,126.295 c 1.75233,-0.90367 3.50466,-1.80733 5.25699,-2.711 0.16271,-1.0581 0.60257,-2.0935 0.56501,-3.168 -0.35393,-0.49026 -0.1423,-1.19174 0.4491,-1.3495 0.95984,-0.004 1.51417,-0.8446 2.17989,-1.4105 -0.12728,-0.3681 0.7891,-0.63766 1.10987,-0.39586 0.52054,-0.0257 1.05203,0.16178 1.58612,0.17986 0.37686,-0.50295 1.03651,-0.014 0.94852,0.50722 0.50968,0.41748 0.72948,-0.61357 1.2776,-0.37526 0.48698,0.77464 0.88917,1.72498 1.3326,2.56946 0.33466,0.34809 1.01527,0.3178 1.50555,0.3925 0.88193,-0.0532 -0.53453,0.61524 -0.0351,1.04148 0.5678,0.54025 0.0768,0.89041 -0.40587,1.24207 -0.69404,0.45925 -0.67247,1.41728 -0.76631,2.16553 0.37478,0.51877 1.02205,0.87343 1.32853,1.39378 -0.15261,0.69905 0.0289,0.97983 0.72246,0.78587 0.68008,0.17312 1.13065,0.90097 1.82059,1.12537 0.51888,0.43592 1.41445,0.81762 1.19742,1.64698 -0.17985,0.48597 -0.30396,1.00682 -0.21802,1.526 0.5695,-0.14588 1.03415,0.10539 0.93473,0.74151 -0.19878,0.55326 0.57954,0.75962 0.92386,1.07768 0.0906,0.35315 -0.87388,0.19135 -1.18609,0.23113 -0.51009,0.36519 -1.28309,0.0345 -1.87837,0.30582 -0.33353,0.33603 -0.47452,0.92748 -0.8603,1.28069 -0.30921,0.52049 -0.76111,0.7273 -1.35304,0.58511 -1.10729,-0.059 -2.23546,-0.0275 -3.32988,-0.14225 -0.75491,-0.33218 -1.49391,-0.70481 -2.28789,-0.93769 -0.25587,-0.47488 -0.1356,-1.06543 -0.0777,-1.55036 -0.0885,-0.67707 -1.07303,0.12525 -1.31303,-0.45497 -0.39476,-0.90207 -1.49382,-0.99545 -2.26293,-1.44608 -1.39787,-0.58519 -2.76775,-1.2474 -4.16908,-1.81561 -0.62502,-0.17953 -1.24162,-0.4156 -1.81622,-0.71798 -0.334,-0.80288 -0.78551,-1.55347 -1.17899,-2.323 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Iran\"\n\t\t\t\t\t\t\td=\"m 500.121,117.572 c 0.054,-0.49332 -0.87801,-0.41632 -0.79936,-1.06295 0.43282,-0.54491 -0.9908,-0.34885 -0.28163,-1.01223 0.48426,-0.40605 0.31138,-0.9364 -0.17502,-0.92482 -0.38692,-0.46226 0.053,-0.96946 -0.33,-1.44564 -0.25587,-0.61113 0.89397,-0.39624 0.59602,-1.06136 0.49848,-0.12597 0.82335,-0.50415 1.11618,0.0868 0.18411,0.56824 0.76852,0.62857 1.10215,1.01732 0.40986,0.63762 1.26767,0.51713 1.89932,0.55119 0.52323,0.36377 0.84263,-0.33441 1.22662,-0.54731 0.62113,0.008 0.78425,-0.6549 1.33354,-0.79535 0.48074,-0.0955 0.95636,-0.74169 1.41719,-0.37268 0.17599,0.30278 1.33266,0.52837 0.63091,0.79465 -1.07491,0.0748 0.31504,0.3906 -0.17315,0.71956 -0.83116,0.22561 -0.16124,0.65692 0.2205,0.90368 0.23147,0.3831 0.99687,0.19415 1.18346,0.62374 0.0669,0.58535 -0.42841,1.26793 0.0974,1.71974 0.78147,0.48894 1.72736,0.40438 2.59087,0.59563 0.35541,0.86507 1.22339,1.30959 2.10463,1.45051 1.0314,0.3964 2.14432,0.35179 3.19689,0.0658 1.02775,-0.23395 2.10677,-0.20701 3.13305,-0.34666 0.67662,-0.19306 0.48331,-0.9285 0.38641,-1.44467 0.87377,0.17501 1.59801,-0.41771 2.10505,-1.059 0.70599,-0.70872 1.72714,-0.42592 2.61096,-0.496 0.43923,-0.38536 0.98306,-0.56987 1.55582,-0.40007 0.61525,-0.0637 1.02768,0.2214 1.44766,0.58544 0.76437,0.2739 1.49305,0.64667 2.32718,0.61171 1.46485,0.0755 2.4479,1.30348 3.59427,2.06286 0.48357,0.58059 1.27663,0.29731 1.92706,0.27806 0.42311,0.47091 0.0959,1.21983 0.27067,1.79767 0.25911,0.539 0.008,0.89575 -0.1423,1.46629 -0.27256,0.70031 -0.39629,1.53582 -0.92901,2.08416 -0.61481,0.15461 -0.63398,0.7993 -0.32235,1.23788 0.64731,0.0506 1.00641,0.44156 0.40501,0.92585 -0.58497,0.47601 -0.14308,1.15762 -0.0705,1.75525 0.16333,0.71124 0.0407,1.57071 0.47789,2.16707 0.5965,0.20588 1.37154,0.17195 1.85219,0.57852 0.3376,0.52363 0.0225,1.04097 -0.39751,1.39446 -0.5999,0.49911 -1.09021,1.10138 -1.57606,1.70785 0.70561,0.84164 1.21258,1.85212 1.94249,2.65856 0.65072,0.51655 1.60876,0.49655 2.20647,1.0407 0.3372,0.62792 0.0273,1.42384 0.42807,2.03274 0.65035,-0.14287 0.99364,0.3529 0.81503,0.95552 0.13594,0.69018 -0.62696,0.7467 -1.1187,0.73405 -0.77369,0.11045 -1.61461,0.4738 -2.0673,1.13343 -0.33395,0.65776 -0.39481,1.38771 -0.54102,2.1 -0.56581,0.0224 -1.22377,0.0301 -1.71741,-0.23887 -0.97458,-0.67847 -2.21787,-0.26026 -3.32061,-0.43013 -0.60558,0.31224 -0.90964,-0.35201 -1.41761,-0.43952 -0.57438,-0.0744 -1.23283,0.0678 -1.75733,-0.0719 -0.35188,-0.33218 -0.95591,-0.2519 -1.37603,-0.49454 0.0271,-0.57047 -0.42437,-0.79541 -0.59005,-1.34643 -0.26206,-0.35945 0.008,-1.09274 -0.5317,-1.27208 -0.2558,-0.25416 -0.85122,-0.35306 -1.33111,-0.30951 -0.54526,-0.12326 -0.81461,0.36481 -1.36097,0.29229 -0.36251,0.28793 -0.8286,0.45174 -1.21164,0.80758 -0.30908,0.4981 -0.8826,0.62329 -1.32032,0.2075 -0.5068,-0.36228 -1.08848,-0.48166 -1.70121,-0.50035 -0.47641,-0.44506 -1.17385,-0.4567 -1.70638,-0.74468 -0.40087,-0.37837 -0.73127,-0.86858 -1.17444,-1.17752 -0.50895,-0.25888 -1.03741,-0.4485 -1.61222,-0.4758 -0.88147,-0.54985 -1.1386,-1.62923 -1.70396,-2.44927 -0.48495,-0.37893 -0.0959,-1.04577 -0.62636,-1.36162 -0.43819,-0.29017 -0.65507,-0.91485 -1.04547,-1.15347 -0.49761,0.0624 -1.08636,0.26684 -1.51044,-0.0554 -0.68691,0.0163 -0.0897,-1.23149 -0.85731,-0.77544 -0.45565,0.20802 -0.36212,1.15422 -1.05043,0.97623 -0.14923,-0.42682 -1.0613,-0.56528 -0.99965,-1.06011 0.0911,-0.50303 -0.11016,-1.12519 -0.72876,-0.91296 -0.47435,-0.0705 -0.12857,-0.96003 -0.0405,-1.32644 0.26814,-0.587 -0.0854,-1.15427 -0.60549,-1.44391 -0.66585,-0.51662 -1.42762,-0.88268 -2.06979,-1.44271 -0.3865,-0.32813 -1.24158,0.33862 -1.01656,-0.48998 0.19944,-0.64133 -0.56214,-0.88844 -0.88977,-1.31357 -0.52598,-0.29968 -0.44581,-0.83994 -0.31871,-1.34205 0.07,-0.60872 0.33199,-1.13517 0.86801,-1.45601 0.73996,-0.31721 0.34978,-0.78458 0.1177,-1.30899 0.24745,-0.55858 0.73058,-0.91086 -0.23077,-0.83219 -0.46413,-0.0871 -1.152,-0.0449 -1.26754,-0.59984 -0.40658,-0.76746 -0.7876,-1.5478 -1.17222,-2.32624 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Armenie\"\n\t\t\t\t\t\t\td=\"m 504.13599,113.458 c -0.34562,0.60141 -0.92773,0.32762 -1.04739,-0.26433 0.06,-0.48743 -0.6379,-0.58503 -0.49746,-1.01467 -0.47461,-0.0188 -1.12119,0.28082 -1.40002,-0.25839 -0.30773,-0.43383 -0.88337,0.0324 -1.34729,-0.18154 -0.32592,-0.47968 -0.84467,-0.51974 -1.37812,-0.52625 -0.60943,0.1395 -1.12728,-0.46537 -0.68129,-0.98342 0.4909,-0.48959 0.0957,-0.93138 -0.36038,-1.23401 -0.488,-0.41318 0.70406,-0.21854 0.96641,-0.37297 0.52726,-0.14768 1.05539,-0.0672 1.59243,-0.14082 0.54691,-0.0909 0.89803,-0.23561 1.28012,0.1274 -0.38126,0.50635 0.82749,0.15023 0.86,0.70267 -0.45665,0.11779 -0.51291,0.77865 0.10071,0.99588 0.35429,0.21502 1.10679,0.49738 0.46344,0.83045 -0.86076,-0.16673 0.0312,0.45944 0.31263,0.60798 0.18633,0.4625 1.21287,0.18436 1.11341,0.56579 -0.45895,0.26583 0.5372,0.66075 -0.097,0.74648 0.20833,0.0376 0.2101,0.28608 0.1198,0.39975 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Kazakhstan\"\n\t\t\t\t\t\t\td=\"m 578.94299,106.217 c -0.35195,-0.50973 -0.98422,-0.49679 -1.539,-0.473 -0.40526,-0.31271 -0.534,-0.95374 -1.14407,-0.71486 -0.58269,-0.15076 -1.16069,-0.30902 -1.76477,-0.17072 -0.88963,2.3e-4 -1.7973,7.9e-4 -2.63516,-0.34142 -0.80626,0.25071 -1.67678,0.0628 -2.47977,0.2174 -0.52178,0.45007 -1.21313,-0.0344 -1.8132,-0.0704 -0.94674,-0.27329 -2.0573,-0.95574 -2.9822,-0.30181 -0.50779,0.23362 -0.41738,1.11002 -0.56149,1.35089 -0.88032,-0.20319 -1.77399,-0.37813 -2.64131,-0.65708 -0.75878,-0.23804 -1.52304,-0.0631 -2.28204,0.074 -0.39869,0.30709 -0.62781,0.90809 -0.84388,1.10003 -0.38131,0.44805 -0.80216,0.16755 -1.23141,0.49672 -0.39372,0.3743 -0.79129,0.72765 -1.36319,0.75786 -0.56695,0.24522 -1.35693,0.34181 -1.51148,1.05339 -0.41403,0.17317 -1.19667,0.50749 -0.78601,1.037 -0.24507,0.41602 -1.11533,0.18151 -1.20602,-0.24479 0.21455,-0.60972 -0.57816,-0.94062 -1.07035,-0.76841 -0.64282,0.0519 -1.29367,0.15833 -1.93462,0.0382 -0.20606,-0.62361 -0.40825,-1.24836 -0.56702,-1.886 -0.54691,0.004 -1.25613,0.17801 -1.03154,-0.62142 0.17661,-0.47692 0.23317,-0.99144 0.21172,-1.51848 -0.40408,0.23005 -0.89949,0.28322 -1.09684,-0.4157 -0.20292,-0.5483 -0.92776,-0.41574 -1.19554,-0.9341 -0.33333,-0.63874 -0.93539,-0.0431 -1.42941,0.0562 -1.3681,-0.0444 -2.74745,-0.31719 -4.10527,-0.004 -0.53883,-0.0182 -1.20673,0.41403 -1.59928,-0.11461 -0.89762,-0.74597 -1.75472,-1.55296 -2.85139,-1.99925 -1.51348,-0.78981 -3.02697,-1.579614 -4.54045,-2.369421 -1.88601,0.429667 -3.77202,0.859335 -5.65802,1.289001 -0.0187,2.72467 -0.0373,5.44933 -0.056,8.174 -0.50407,0.0592 -1.10009,0.2989 -1.49471,-0.18579 -0.43245,-0.33787 -0.62343,-0.8824 -0.98525,-1.24193 -0.73892,-0.39965 -1.46808,-1.10024 -2.36721,-0.84479 -1.11385,0.10683 -2.21047,0.50274 -3.01385,1.30651 0.17906,-0.50151 -0.24299,-0.86749 0.28763,-1.2404 0.12378,-0.44565 0.56998,-0.9913 -0.16461,-1.1106 -0.47992,-0.0241 -0.91918,-0.0217 -1.3408,-0.14721 -0.27572,-0.42845 -0.65518,-0.82296 -1.21334,-0.64596 -0.137,-0.22168 0.0534,-0.90716 -0.50876,-1.04209 -0.33905,-0.34779 -0.4339,-0.94974 -0.70901,-1.26936 -0.39764,-0.22919 -1.29874,0.0894 -1.30402,-0.5189 -0.0248,-0.65424 0.87953,-0.40002 1.29618,-0.37655 0.49889,0.14619 0.95907,0.39519 1.45965,0.13798 -0.2113,-0.3162 -1.02866,-0.3424 -0.99388,-0.79494 0.38024,-0.312437 0.60493,-0.549517 0.86796,-1.026973 0.50758,9.46e-4 0.89456,-0.146087 1.40678,-0.02317 0.85107,-0.116518 1.68173,0.09462 2.52822,0.123176 -0.28095,-0.330435 -1.21965,-0.216459 -0.93615,-0.762837 0.37114,-0.304241 0.75544,-0.631674 0.75615,-1.157168 0.17232,-0.440851 -0.35281,-0.850405 0.11744,-1.143095 -0.15006,-0.658812 -0.97595,-0.454643 -1.49076,-0.60739 -0.49423,0.337175 -1.31223,0.458488 -1.76266,-0.06951 -0.72266,-0.217966 -1.51647,-0.258693 -2.159,0.199005 -0.71399,-0.03705 -1.185,0.66136 -1.88146,0.77762 -0.49345,0.1452 -1.05869,-0.08155 -1.39128,0.417077 -0.48271,0.08809 -1.02626,-0.320325 -1.50654,-0.482464 -0.36726,-0.63655 0.64154,-0.340324 0.97307,-0.227059 0.24802,-0.317247 -0.57771,-0.800038 -0.76973,-1.183983 -0.21563,-0.575606 -0.79628,-0.668421 -1.19822,-1.057652 -0.41748,-0.38874 -1.06983,0.0099 -1.53848,-0.332146 -0.0585,0.572136 -0.85106,-0.06264 -0.62938,-0.508393 -0.0763,-0.639759 -0.88976,-0.460143 -1.34464,-0.679105 -0.26159,-0.204712 0.3657,-0.926115 0.56235,-1.252405 0.63131,-0.184546 0.70024,-0.710937 0.0273,-0.878495 0.19654,-0.442543 -0.0957,-1.369507 0.55559,-1.361357 0.63028,0.11119 0.71483,-0.654505 1.00603,-0.95035 0.88789,-0.24727 1.19955,0.927796 1.92023,1.144707 0.47248,0.08276 1.12553,-0.09013 1.04116,-0.685997 -0.27205,-0.463525 -0.37298,-1.044233 0.32067,-1.099219 0.50217,-0.178529 0.92342,-0.429986 1.23363,-0.865088 0.56953,-0.329894 1.29213,-0.22518 1.84203,-0.641792 0.57333,-0.296986 1.08227,-0.874909 1.78067,-0.614902 0.56531,-0.107057 0.86079,0.486955 1.43903,0.137001 0.48919,-0.265355 1.25956,-0.652396 1.5784,0.03896 0.36323,0.373917 1.04853,0.139978 1.53854,0.133036 0.72691,-0.03477 0.88404,0.335344 1.29505,0.632579 0.4881,0.224029 1.15301,0.353438 1.45726,0.792669 -0.22676,0.758109 0.88161,0.691773 0.43115,0.03092 -0.40524,-0.637911 0.76594,-0.404804 0.944,-0.02064 0.36472,0.393006 1.01226,0.350735 1.44178,0.598975 0.80694,-0.01058 1.14907,-0.930608 1.85335,-1.136195 0.68684,0.09754 1.44464,-0.05853 1.98545,0.47514 0.72418,0.27553 0.65781,-0.643644 1.3346,-0.499915 0.4495,-0.01279 1.18982,-0.190436 1.40457,0.289873 0.20032,0.544985 0.94271,0.521537 1.43049,0.682122 0.52903,0.132255 0.98356,0.361197 1.44415,-0.08686 0.28589,-0.794477 0.69747,0.240892 1.22015,0.03807 0.72142,0.08756 1.39517,-0.257578 2.09205,-0.392741 0.20091,-0.420148 0.51194,-1.273185 -0.22875,-1.273711 -0.58921,0.04736 -0.97905,-0.291381 -1.44031,-0.468381 -0.68454,0.09608 -0.61177,-0.446131 -1.16082,-0.485905 -0.76845,-0.310993 0.4343,-0.333131 0.709,-0.61945 0.34789,-0.170792 1.44443,-0.296671 0.85688,-0.791766 -0.63844,-0.397471 -0.0361,-0.798149 0.40191,-1.011433 0.72262,-0.359265 1.4859,0.130126 2.23007,-0.08735 0.28158,-0.488923 -0.76886,-0.453332 -1.11115,-0.57838 -0.6434,0.118545 -1.04162,-0.314359 -0.57688,-0.541007 -0.43857,-0.18952 -0.35202,-1.050213 0.0614,-1.162492 0.77647,0.0043 1.56743,0.185045 2.35956,0.11188 0.89851,-0.267567 1.82318,-0.693763 2.80199,-0.620926 1.05291,-0.127064 2.13178,-0.245437 3.18258,-0.259802 0.3822,-0.112192 0.77601,-0.763206 1.3587,-0.63844 1.38336,0.0278 2.69363,-0.573639 4.08572,-0.479199 0.56314,-0.06201 1.41328,0.116601 1.62503,-0.555486 0.0343,-0.472104 1.09691,-0.04081 1.21399,-0.636149 1.03352,-0.139242 2.05495,0.223108 3.02855,0.461604 0.49033,-0.04739 1.133,-0.278785 1.53912,-2.41e-4 0.36738,0.354015 0.15298,0.995962 0.87337,1.044641 -0.11023,0.576618 -0.46096,0.919454 -0.35886,1.17272 0.4593,0.182002 0.93595,-0.03066 1.40688,0.01136 0.46715,0.08994 0.95117,-0.441857 1.3061,0.02057 0.34477,0.692224 0.73075,0.139444 1.23618,0.183776 0.42885,0.180954 0.93693,0.643149 1.40385,0.214536 0.89196,-0.113979 -0.12215,0.418771 -0.33616,0.669221 -0.42684,0.571548 0.63386,0.313503 0.9548,0.268319 0.51748,-0.221484 1.12902,0.272921 1.53588,0.05585 0.56067,-0.586308 1.3811,-0.701928 2.12157,-0.908492 0.68607,-0.462748 1.49591,-0.636908 2.25324,-0.921957 0.65176,-0.365833 1.1043,0.416903 0.28604,0.467901 -0.55573,0.489028 0.50104,0.666855 0.8289,0.928169 1.1998,0.400064 2.29178,1.092836 3.13945,2.036606 0.92986,1.113476 1.79366,2.287438 2.80569,3.32963 0.34998,0.352279 0.62826,1.016501 1.02091,1.18312 0.49109,-0.182384 0.87624,-0.537578 1.13351,-0.989326 0.46574,-0.0057 1.24592,-0.127831 1.28699,0.508699 0.14542,0.230237 0.77906,0.377228 1.09774,0.6313 1.08125,0.0818 2.14335,-0.09385 3.16727,-0.442001 0.53926,-0.02413 1.10323,-0.139984 1.51877,0.295197 0.52172,0.346921 1.06861,0.697673 1.27524,1.321799 0.56879,0.05226 1.12673,0.126802 1.47422,0.633491 0.38843,0.346306 0.65684,0.923047 1.26305,0.808482 0.6012,-0.02635 1.32355,0.339773 1.76614,-0.222162 0.77827,-0.485022 0.48222,0.09235 1.03396,0.424217 -0.059,0.644417 1.21023,0.405759 0.78429,0.644917 -0.49752,0.0075 -1.32008,0.131099 -1.21213,0.796668 0.0987,0.784202 -0.90321,0.672782 -1.42076,0.730226 -0.76722,-0.0611 -1.36427,0.800729 -1.08998,1.505965 0.10755,0.477666 0.425,1.072223 -0.12661,1.406618 -0.7128,0.596449 -1.76095,0.30645 -2.62108,0.310606 -0.86025,-0.148563 -1.71808,-0.347249 -2.57107,-0.545024 -0.69822,0.730523 -0.91028,1.766359 -1.45296,2.60565 -0.33428,0.504914 -0.45225,1.04015 0.20083,1.31513 0.54639,0.482986 -0.38827,0.98709 -0.84174,0.756425 -0.68309,-0.04608 -1.30408,-0.518263 -1.98397,-0.257117 -0.98755,0.27899 -2.07709,0.172674 -3.01219,0.598915 -0.55493,0.48498 -0.0364,0.79268 0.48558,0.6918 0.61614,0.0892 0.20249,0.96859 0.34188,1.42361 0.17549,0.55851 0.80982,1.03473 0.70492,1.63631 -0.36547,0.61451 -1.45988,0.88524 -1.18903,1.7777 0.038,0.22681 0.0719,0.46214 0.11264,0.68358 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Ouzbekistan\"\n\t\t\t\t\t\t\td=\"m 551.198,117.997 c -0.22771,-0.54512 -0.74845,-0.70529 -1.29717,-0.63518 -0.35454,-0.15513 -1.3458,0.26387 -1.2157,-0.31229 0.10429,-0.50507 -0.0854,-0.98855 0.21489,-1.43553 -0.73227,-0.0278 -1.31345,-0.75538 -2.07403,-0.503 -0.94221,-0.67735 -2.08591,-0.97455 -3.01801,-1.665 -0.51278,0.13248 -1.03767,-0.29269 -1.43562,-0.57495 -0.51545,-0.64334 -1.44315,-0.7367 -2.03644,-1.31141 -0.45578,-0.2903 -0.88556,-0.52636 -0.90765,-1.09374 -0.24229,-0.40993 -0.78118,-0.69528 -0.83219,-1.24008 -0.008,-0.6546 -0.6064,-0.82585 -1.14258,-0.92627 -0.53673,0.46044 -1.26279,-0.10117 -1.88952,0.16742 -0.35447,0.0157 -1.32559,-0.2422 -1.15199,-0.64597 -0.0209,-0.37994 0.32207,-0.84066 -0.25098,-1.036 0.15515,-0.75483 -0.74541,-0.74279 -1.25713,-0.81442 -0.42359,-0.25522 -0.86343,-0.425 -1.35135,-0.70031 -0.35098,-0.25946 -1.1413,-0.0753 -1.25771,0.13056 0.67826,0.7411 0.0966,0.36754 -0.48739,0.28217 -0.27384,0.3979 -0.63118,0.74098 -1.17854,0.598 -0.41608,0.12225 -1.01063,0.39375 -1.11936,0.83684 -0.2855,0.45803 0.71624,1.1358 -0.12299,1.18033 -0.71635,0.0314 -1.432,0.0264 -2.14655,-0.0372 0.0187,-2.72467 0.0373,-5.44933 0.056,-8.174 1.88599,-0.429669 3.77197,-0.859336 5.65796,-1.289003 1.94607,1.043495 3.9473,2.003963 5.85891,3.099333 0.62503,0.51755 1.25007,1.03511 1.8751,1.55267 1.30033,-0.15302 2.59542,-0.46593 3.90767,-0.25566 0.74289,0.0357 1.50842,0.22749 2.18687,-0.18102 0.5542,-0.39672 0.74988,0.55502 1.2412,0.65413 0.60915,0.079 0.74376,0.7551 1.09028,1.16455 0.68847,-0.53992 0.73901,-0.10248 0.63345,0.57409 -0.0932,0.36362 -0.4299,1.19412 0.0162,1.31291 0.65395,-0.14543 1.02123,0.0837 1.03709,0.7719 0.22979,0.42994 0.12166,1.277 0.79901,1.16931 0.72229,0.0579 1.48256,-0.20876 2.17754,-0.0666 0.67949,0.16532 0.12265,0.91043 0.71689,1.10299 0.54419,0.29587 1.04953,-0.057 0.78571,-0.58404 0.32666,-0.44146 1.00021,-0.43273 1.09707,-1.04156 0.61846,-0.47305 1.45803,-0.52627 2.11325,-0.87154 0.37406,-0.2461 0.74586,-0.93243 1.24973,-0.57346 0.27471,-0.38068 0.86921,-0.62798 1.28081,-0.40414 0.49569,0.30687 -0.80835,0.30676 -0.82183,0.70414 -0.55477,0.0398 -0.91349,0.54107 -1.39794,0.761 0.14263,0.29446 0.89957,0.32962 1.16499,0.30322 0.19633,0.53362 0.75284,0.73333 1.27981,0.63078 0.36005,-0.13538 0.62578,-0.34998 0.79415,-0.785 0.5291,0.14652 0.50064,0.97804 1.15301,0.711 0.0594,0.53158 0.82004,0.33728 1.18091,0.68722 0.4649,0.0105 1.42581,0.13812 0.49214,0.41496 -0.2234,0.5177 -1.135,0.0552 -1.10804,0.39382 -0.18187,0.20585 -0.85013,0.27097 -1.14243,0.60381 -0.41801,0.3416 -0.77538,0.0124 -1.26254,-0.11381 -0.54677,0.0834 -0.8918,0.0968 -1.43779,0.13814 -0.39733,-0.18691 -0.99736,-0.54112 -0.25374,-0.82129 0.66777,-0.31396 0.11806,-0.70664 -0.26294,-0.99218 -0.33381,0.27812 -0.79212,0.69645 -1.32675,0.73038 -0.37284,0.50345 -0.81019,-0.54707 -1.11739,-0.10707 -0.42482,0.34316 0.15224,0.93642 -0.25655,1.21449 -0.40378,-0.15427 -1.24578,0.0397 -1.37334,0.15114 0.53066,0.15634 1.07744,-0.0215 0.38427,0.36286 -0.23858,0.28396 -0.49598,0.65457 -0.8078,1.01153 -0.59165,-0.003 -1.21491,-0.176 -1.7742,-0.17431 -0.53983,0.12323 -0.69665,0.89335 -0.11367,1.07615 0.27799,0.49667 1.22394,0.0165 1.21469,0.58927 -0.26411,0.49095 -0.0666,1.15026 0.48416,1.33789 0.39718,0.57561 -0.62719,0.65424 -0.70825,1.15875 -0.44175,0.3807 -0.43409,0.76707 -0.56718,1.27197 -0.0812,0.1673 -0.14955,0.36539 -0.23855,0.51628 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Azerbaidjan\"\n\t\t\t\t\t\t\td=\"m 509.077,114.955 c -0.45193,-0.3313 -1.07321,-0.15243 -1.32656,-0.71279 -0.73041,-0.10295 -0.47154,-0.66739 0.0455,-0.84089 -0.25191,-0.29788 -0.63819,-0.60994 0.23305,-0.63332 0.21168,-0.44474 -0.72668,-0.50087 -0.96119,-0.84373 -0.48424,-0.0924 -0.9905,0.42703 -1.492,0.56484 -0.38266,0.33389 -0.73387,0.65996 -1.2505,0.77584 -0.16153,0.44232 -0.58446,-0.51534 0.0317,-0.37895 -0.88931,-0.24047 0.20937,-0.78168 -0.53765,-0.78501 -0.51189,-0.0584 -0.96354,-0.33409 -1.25834,-0.72599 -0.86609,-0.40727 0.58767,0.0132 0.378,-0.6497 -0.36443,-0.20951 -0.96404,-0.4579 -1.228,-0.9093 0.22792,-0.39029 0.68113,-0.73335 -0.14491,-0.87182 -0.42119,-0.0694 -0.64045,-0.42655 -0.53302,-0.74659 0.41691,-0.37937 1.18786,-0.24335 1.50392,0.22341 0.44643,0.29193 0.99948,-0.0156 1.39675,0.34049 0.55963,0.38783 1.01003,-0.73005 0.22217,-0.69424 -0.40617,-0.0412 -0.86698,-0.7112 -0.3163,-0.90446 0.4109,-0.25595 0.74761,-0.0572 1.14373,0.23868 0.41896,0.21822 0.8359,0.51792 0.90439,0.91649 0.52194,-0.001 1.2253,0.52888 1.5568,-0.10301 0.32689,-0.46166 1.07071,-0.41375 1.26867,-1.01637 0.41455,-0.11312 0.62832,0.6437 1.0108,0.82142 0.47123,0.32859 0.24381,1.04703 0.80402,1.323 0.34721,0.33629 0.69774,0.69159 1.29331,0.5364 0.35834,-0.0853 1.2207,0.68176 0.74067,0.6746 -0.45343,-0.21136 -0.96487,-0.12881 -1.381,0.0729 -0.70744,-0.008 -0.36255,0.79786 -0.66117,1.18651 -0.42236,0.4471 0.42318,1.01024 -0.29785,0.98058 -0.01,1.02006 -0.36965,0.0518 -0.67543,0.39582 -0.0239,0.49386 -0.12915,0.75689 -0.26915,1.27081 -0.0665,0.16275 -0.13294,0.34214 -0.2004,0.49437 z m -9.23301,-3.217 c 0.46081,0.23353 1.04215,-0.27188 1.34702,0.179 0.24861,0.51643 0.88276,0.27153 1.3254,0.261 -0.0197,0.29627 0.57322,0.53042 0.53851,0.95179 0.40725,0.66022 0.44909,0.65967 -0.29992,0.59121 -0.61063,0.0318 -1.27639,-0.18059 -1.56201,-0.763 -0.75538,-0.10333 -0.78872,-0.8574 -1.349,-1.22 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Turkmenistan\"\n\t\t\t\t\t\t\td=\"m 536.625,121.017 c -0.40551,-0.6013 -0.11307,-1.52401 -0.33457,-2.19981 -0.38483,-0.3194 -1.0402,0.0584 -1.5353,-0.0781 -1.10026,-0.65293 -2.02838,-1.68398 -3.21529,-2.22686 -0.88283,-0.29518 -1.86174,-0.10272 -2.68382,-0.6002 -0.60134,-0.0153 -0.86397,-0.62841 -1.37524,-0.7149 -0.68791,-0.0423 -1.46577,-0.32291 -2.02198,0.24051 -0.79821,0.33698 -1.85742,-0.21523 -2.57445,0.46704 -0.59761,0.49732 -1.11932,1.2962 -2.00976,1.20029 -0.53923,-0.0273 -0.29383,-0.92411 -0.51911,-1.3313 0.0428,-0.46447 0.0904,-0.99282 0.12665,-1.47833 0.33352,-0.45523 0.28083,-0.97735 -0.31581,-1.12223 -0.27282,-0.37776 -0.66732,-0.6361 -1.13097,-0.5431 -0.45917,0.14912 0.0691,-0.73497 0.53063,-0.40198 0.93606,0.25793 0.33514,-0.20044 -0.0301,-0.42588 0.27039,-0.50848 0.39434,-0.73294 -0.37285,-0.51012 -0.53791,-0.10474 -0.95946,0.23058 -1.11923,-0.42939 -0.20506,-0.53115 0.13136,-0.90379 0.23376,-1.40483 0.14559,-0.91779 0.31605,-0.20326 0.73738,0.029 0.56165,0.14404 0.79228,-0.26975 1.05755,-0.12863 -0.0214,0.71117 0.71908,0.27753 1.08801,0.26334 0.75424,0.52238 -0.059,-0.83332 0.5325,-0.30646 0.50926,0.28631 1.02211,-0.31656 0.47882,-0.68937 -0.35775,-0.36818 -1.06235,-0.44388 -1.25924,-0.88995 -0.12184,-0.44282 -0.23699,-0.89832 -0.4578,-1.21788 -0.65063,-0.0854 -1.32345,0.0208 -1.95477,0.1792 -0.45761,0.41871 -0.0328,0.88917 -0.2858,1.39064 0.16698,0.99335 -0.0154,0.13033 -0.44952,-0.19896 -0.1418,-0.49745 -0.56831,-0.67754 0.13931,-1.04068 0.92804,-0.66565 2.07722,-0.84638 3.19299,-0.915 0.64015,0.30187 1.32455,0.62145 1.8498,1.07943 0.28507,0.57982 0.7528,1.2116 1.38971,1.38179 0.56733,-0.10133 1.11633,-0.17303 1.69768,-0.0784 0.5376,0.0297 1.07662,-0.0159 1.61482,-0.0178 0.2826,-0.45852 -0.50847,-0.90866 -0.057,-1.40706 0.42344,-0.40522 0.96199,-0.71559 1.56607,-0.60394 0.44457,-0.11954 0.59051,-0.94322 1.15284,-0.48382 0.92358,0.481 -0.6359,-0.717 0.34519,-0.57812 0.65678,-0.36132 1.14427,0.42315 1.77193,0.40294 0.2815,0.7134 1.42606,0.10252 1.7098,0.81092 0.13768,0.56705 0.41688,0.59502 0.35467,1.11517 -0.31908,0.48609 0.12086,0.6881 0.67149,0.88639 0.50443,0.13303 1.09211,-0.19626 1.61595,0.0737 0.53204,-0.14645 0.95174,-0.24033 1.49757,0.0272 0.38415,0.47014 0.31667,1.2067 0.85453,1.59672 0.53627,0.25145 0.19755,1.01442 0.83281,1.16885 0.66218,0.55994 1.47016,0.89994 2.20001,1.33246 0.31694,0.46709 0.90993,0.70828 1.41229,0.85805 0.55935,-0.0866 0.9449,0.58582 1.50109,0.68043 0.63988,0.23495 1.22918,0.68245 1.8319,0.92727 0.72696,-0.20783 1.27942,0.5021 1.98591,0.51478 -0.31934,0.46293 -0.0991,0.9785 -0.22329,1.50296 -0.14493,0.4314 -0.9992,-0.0901 -1.42668,-0.0382 -0.50149,-0.45222 -0.8437,-0.14345 -1.30234,0.16854 -0.48903,0.30628 -1.3457,-0.009 -1.52093,0.6816 -0.40815,0.44101 -0.17122,1.20093 -0.60893,1.57447 -0.95829,0.43606 -1.97297,0.75 -2.98082,1.05266 -0.11494,0.49447 -0.18587,0.98402 -0.82218,1.09143 -1.09098,0.37122 -2.11439,-0.44034 -3.1968,-0.51943 -0.0557,-0.0386 -0.14974,-0.0759 -0.18903,-0.117 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Tadjikistan\"\n\t\t\t\t\t\t\td=\"m 566.651,117.4 c -0.49447,-0.1065 -1.04132,-0.29296 -1.48986,-0.29165 -0.46447,0.1836 -1.02498,0.34273 -1.51014,0.24865 0.26115,-0.45209 -0.88453,-0.23351 -1.15568,-0.0488 -0.55603,0.16933 -0.86103,0.80608 -1.51131,0.69081 -0.4451,0.34359 -1.03304,0.74741 -1.59198,0.415 -0.20253,-0.48807 -0.49636,-0.9685 -0.16678,-1.46213 0.0874,-0.46093 0.2924,-1.39732 -0.48952,-1.04504 0.20196,-0.41987 -0.057,-0.93264 -0.62074,-1.09383 -0.66503,-0.16068 -0.71223,0.54996 -1.12068,0.85257 -0.2599,0.41154 -0.0432,1.15584 -0.78763,1.17396 -0.3692,-0.0122 -1.18785,-0.42672 -1.10468,0.26413 -0.0887,0.5642 -0.85113,0.75054 -1.30381,0.43392 -0.89183,-0.38094 -1.53422,0.86095 -2.43021,0.65242 -0.43302,-0.3886 0.44971,-0.89474 0.14743,-1.38954 0.43291,-0.37037 0.58455,-1.01467 1.1586,-1.25246 0.50263,-0.52482 -0.5994,-0.63479 -0.54466,-1.15663 -0.0199,-0.51357 0.32058,-1.1693 -0.51355,-0.99426 -0.36729,-0.0877 -1.14265,-0.40582 -0.94843,-0.90474 0.1296,-0.57169 0.80368,-0.50091 1.24615,-0.36259 0.44342,-0.006 1.27319,0.32773 1.30308,-0.36522 0.38209,-0.2679 0.42038,-0.66138 0.93239,-0.77456 -0.36767,-0.0943 -1.37856,-0.13939 -0.40796,-0.282 0.42859,-0.26231 1.25994,0.31855 1.13098,-0.472 -0.33756,-0.33116 0.12161,-1.15102 0.55363,-0.74477 0.33529,0.49011 0.76272,-0.0705 1.23934,-0.0712 0.45371,-0.34803 0.78003,-0.82432 1.19399,-0.1573 0.43999,0.31867 -0.38776,0.705 -0.65896,0.8803 0.34719,0.40706 0.73727,0.61415 1.31897,0.508 -0.52392,-0.0199 -0.78921,0.86018 -1.06201,0.417 -0.55273,-0.24227 -1.13717,-0.44925 -1.72796,-0.20374 -0.62752,-0.24229 -0.38458,1.00317 -0.75001,0.37574 -0.48869,0.25071 -0.24942,1.15846 0.33008,0.94153 0.61728,-0.0271 1.2662,-0.008 1.85215,-0.0116 0.5765,-0.36129 0.79853,0.36009 1.257,0.38682 0.40339,-0.0845 0.5801,-0.4619 1.18811,-0.42417 0.44233,0.0575 0.64798,0.68098 0.9801,0.5266 0.51593,-0.36466 0.60889,0.61993 1.07745,0.08 0.63052,-0.29281 1.28814,-0.10318 1.95012,-0.12524 0.40345,-0.30787 1.10745,-0.40788 0.8829,0.31713 0.17026,0.54511 -0.48051,0.96349 0.10925,1.38903 0.4109,0.31988 0.87236,-0.25839 1.36568,-0.007 0.66783,-0.0893 0.97784,0.64172 0.92416,1.197 0.20734,0.21392 0.25469,0.7987 0.16803,1.16 0.39384,0.12351 -0.14633,0.73171 -0.41303,0.73 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Kirghizistan\"\n\t\t\t\t\t\t\td=\"m 558.52002,110.652 c 0.33648,-0.11146 0.94815,-0.1625 1.37577,0.0533 0.39515,0.31589 0.79611,-0.16887 1.17652,-0.36244 0.63075,-0.0607 0.5276,-0.48092 0.96443,-0.42148 0.43565,0.12935 1.1003,-0.40119 1.237,-0.54703 -0.44115,-0.18794 -1.03958,1.8e-4 -1.40741,-0.4025 -0.63292,0.0112 -0.58136,-0.52984 -1.21936,-0.42882 -0.1597,-0.52558 -0.64337,-0.9601 -0.83294,-0.27 -0.27573,0.15463 -0.5503,0.52026 -1.19612,0.344 -0.53144,-0.0578 -0.55753,-0.99881 -1.11193,-0.565 -0.39833,-0.24149 -1.0917,-0.25523 -0.31744,-0.61519 0.39775,-0.34458 0.91044,-0.48416 1.25094,-0.74927 0.60929,-0.10236 1.00943,-0.60832 0.17536,-0.5392 -0.60335,0.0203 0.27521,-0.73936 0.4576,-0.98548 0.88206,-0.26517 1.84936,-0.31009 2.73765,0.0129 0.74714,0.27396 1.54509,0.33468 2.2969,0.56822 -0.11644,-0.72558 0.29979,-1.62433 1.12433,-1.62419 1.08794,-0.13826 2.04336,0.62128 3.11733,0.71392 0.55262,0.31281 0.93573,-0.15983 1.4626,-0.15466 0.71615,0.012 1.43983,-0.0385 2.13359,-0.13473 1.10603,0.44353 2.32888,0.2751 3.47349,0.28588 0.4384,0.28398 1.15768,0.0145 1.4425,0.31719 0.26462,0.41222 0.66771,0.7235 1.20619,0.59759 0.40671,-0.0155 1.17549,0.45452 0.77895,0.86832 -0.96692,0.43385 -2.10368,0.46104 -3.07231,0.90868 -0.65003,0.46908 -1.08241,1.29362 -1.96523,1.36816 -0.7124,0.22987 -1.47388,-0.34906 -2.13795,-0.097 -0.6427,0.39859 -0.67657,1.54319 -1.57489,1.50138 -0.44908,-0.0442 -1.2165,0.53686 -1.37844,-0.0972 -0.0416,-0.71219 -0.80779,-0.22112 -1.17487,-0.0777 -0.95509,0.43019 -2.00022,0.78582 -2.82432,1.42334 -0.20509,0.5223 -0.084,0.97777 -0.76197,0.90099 -0.65341,0.4333 -1.46183,-0.11186 -2.14721,0.25731 -0.54234,0.49197 -0.62278,-0.18521 -1.14075,-0.0863 -0.41713,0.33803 -0.51177,-0.36652 -0.93103,-0.467 -0.57435,-0.0748 -0.93552,0.23207 -1.24494,0.41268 -0.50764,0.0918 -0.61771,-0.69315 -1.18326,-0.43462 -0.49344,0.12186 -1.03019,-0.0114 -1.55922,0.0469 -0.46833,0.0649 -1.15337,0.0835 -1.03429,-0.57338 0.23547,-0.6158 0.59105,0.16174 0.60472,-0.67762 0.60319,-0.0654 1.21111,-0.33194 1.78513,0.0141 0.57549,0.42226 0.56221,0.204 1.07481,-0.12151 0.11464,-0.0512 0.2259,-0.11149 0.34007,-0.16259 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Afghanistan\"\n\t\t\t\t\t\t\td=\"m 535.73401,133.791 c 0.54786,-0.79076 1.30241,-1.39033 1.92255,-2.11079 0.42175,-0.3892 0.137,-1.2485 -0.46917,-1.26109 -0.49005,-0.19484 -1.15633,-0.0854 -1.51136,-0.50613 -0.2173,-1.0438 -0.26075,-2.11631 -0.56403,-3.14299 0.0318,-0.46295 0.89144,-0.90745 0.58435,-1.29996 -0.61225,-0.0336 -0.93286,-0.46062 -0.85833,-1.05732 0.36962,-0.30927 0.90245,-0.58125 0.98366,-1.14827 0.34716,-0.71997 0.45992,-1.53582 0.80533,-2.24445 0.67846,0.2812 1.44942,0.33355 2.12897,0.653 0.685,0.17518 1.45276,0.0716 1.96301,-0.448 -0.20913,-0.6754 0.45434,-0.77865 0.9398,-0.9114 0.77025,-0.33339 1.69399,-0.43542 2.3442,-0.9726 0.11436,-0.63314 0.24422,-1.39084 0.72244,-1.81579 0.6869,-0.10209 1.41367,-0.20461 1.90958,-0.74521 0.7602,0.45728 1.6933,0.49723 2.55917,0.56156 0.65255,0.10119 1.5804,-0.22043 1.91705,0.53804 0.3562,0.72979 1.17542,0.0916 1.6475,-0.16784 0.44386,-0.36249 0.98699,-0.25871 1.4563,-0.0108 0.5743,0.0964 0.95302,-0.43073 0.94919,-0.9333 0.4798,-0.21486 1.08427,0.34318 1.52164,-0.13634 0.22959,-0.44378 0.14668,-1.02566 0.65691,-1.35371 0.13034,-0.66238 1.02861,-0.52439 1.3463,-0.0734 0.14468,0.59806 -0.0211,0.65494 0.65395,0.8128 -0.0201,0.53165 -0.17097,1.07648 -0.28129,1.557 0.17615,0.44049 0.27524,1.13219 0.91577,0.94943 0.57173,-0.0203 0.91331,-0.69246 1.53746,-0.57502 0.61838,-0.48367 1.43217,-1.05541 2.26605,-0.76041 -0.26239,0.45471 0.84768,0.0838 1.14684,0.0217 0.47432,-0.2726 0.97607,0.10427 1.50217,0.13723 0.67232,0.26087 -1.18267,0.0791 -0.35655,0.42413 0.2056,0.29766 -0.72918,0.26565 -0.94331,0.53264 -0.49765,0.19168 -0.95952,0.0956 -1.49472,0.0337 -1.06246,0.0186 -2.25554,-0.0707 -3.10101,0.69489 -0.42402,0.38702 -0.96499,0.32823 -1.32226,0.8301 -0.37845,0.45641 0.40688,0.78513 0.51337,1.20278 -0.2663,0.4948 0.34713,1.01464 -0.22626,1.39715 -0.39085,0.32034 -1.3363,0.68388 -0.90504,1.30277 0.39788,0.61815 -0.55132,1.01098 -1.05107,0.9161 -0.56753,0.039 -1.16155,-0.2863 -1.69515,-0.0122 0.41604,0.39929 1.03381,0.90715 0.87734,1.53104 -0.40887,0.58274 -1.45432,0.0727 -1.76338,0.83108 -0.4298,0.73024 -0.48517,1.57941 -0.58899,2.39887 -0.29961,0.64601 -0.91396,0.39772 -1.409,0.15733 -0.75997,-0.29179 -1.71786,0.1904 -1.91337,0.99003 -0.31273,0.45074 -0.98204,-0.002 -1.45042,0.0951 -0.58101,0.14985 -1.11783,0.61605 -1.4442,1.11385 -0.31334,0.64735 -0.27857,1.39182 -0.45898,2.06974 -1.08898,0.54282 -2.37004,0.54113 -3.54845,0.8036 -0.80932,0.16441 -1.60922,0.0428 -2.41713,-0.0221 -1.12104,0.24472 -2.30839,0.3299 -3.40643,-0.0795 -0.88498,-0.18074 -1.75292,-0.43182 -2.591,-0.767 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"(Ex-Inde)\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Pakistan\"\n\t\t\t\t\t\t\td=\"m 551.79303,147.278 c -0.79851,-0.001 -1.7502,-0.4293 -1.76169,-1.33774 0.0391,-0.59098 -0.48577,-0.85445 -1.00613,-0.83153 -0.71962,-0.001 0.005,-0.81768 -0.35469,-1.16231 -0.21242,-0.52667 -0.80424,-0.63473 -1.26286,-0.33783 -0.88226,0.405 -1.8799,0.23079 -2.80527,0.47324 -0.58208,0.0516 -1.36117,0.21292 -1.67136,-0.43983 -0.53211,0.0596 -1.06162,0.12558 -1.45703,0.52501 -1.11911,0.0296 -2.2415,-0.0654 -3.33745,0.21672 -0.70499,0.24607 -0.85022,-0.0879 -0.58771,-0.7242 0.0987,-0.83105 0.43406,-1.7499 1.2878,-2.05959 0.61976,-0.44351 1.39393,-0.34089 2.08835,-0.51493 0.29824,-0.39931 0.32324,-1.10046 0.038,-1.51001 -0.66179,0.1558 -0.93719,-0.39226 -0.88103,-0.97827 -0.0145,-0.56718 -0.0358,-1.31057 -0.72813,-1.44126 -0.89959,-0.26761 -1.88192,-0.59191 -2.30463,-1.51044 -0.40576,-0.64126 -0.8618,-1.24723 -1.31521,-1.85504 1.22453,0.46834 2.5102,0.79725 3.79448,1.02257 1.07043,0.19593 2.10491,-0.39168 3.16896,-0.0879 1.32358,0.0643 2.6379,-0.29913 3.93973,-0.51099 0.50114,-0.11937 1.27802,-0.19295 1.16254,-0.90092 0.0737,-0.8674 0.26476,-1.84751 1.10669,-2.2931 0.52102,-0.6271 1.34591,-0.17879 1.9939,-0.29061 0.31166,-0.31807 0.37974,-0.94698 0.93166,-1.06386 0.6337,-0.40398 1.33929,0.006 1.95905,0.22786 0.92647,-0.28218 0.51329,-1.41734 0.85299,-2.10294 0.14336,-0.63434 0.53319,-1.32923 1.28135,-1.27579 0.54511,0.0931 1.0783,-0.37962 0.72458,-0.90803 -0.003,-0.41762 -1.12058,-0.86301 -0.5564,-1.03329 0.85473,-0.0661 1.93262,0.45429 2.60147,-0.34696 -0.0923,-0.51114 -0.45736,-1.05781 0.21204,-1.35919 0.34238,-0.2804 1.14938,-0.62664 0.77372,-1.16205 0.0207,-0.50654 -0.0267,-0.93947 -0.40732,-1.2855 -0.57898,-0.34799 0.27713,-0.92346 0.61201,-1.06299 0.67994,-0.14055 1.17786,-0.95625 1.95893,-0.92058 0.89168,-0.11521 1.82268,-0.2027 2.69962,0.0383 0.47824,-0.15462 0.90446,-0.38548 1.39153,-0.47398 0.44017,-0.16968 0.74474,0.11692 1.23444,-0.054 0.79219,-0.13205 0.30119,0.83429 1.01771,0.44244 0.49088,-0.1325 1.05179,0.34911 1.03705,0.83008 -0.17573,0.62296 -0.37554,0.73692 0.24956,1.10463 0.29875,0.47515 0.93563,-0.3432 1.21431,0.29804 0.37318,0.40063 0.84353,0.53926 1.38163,0.50782 0.34597,-0.0555 1.42996,0.22205 0.62824,0.44715 -0.48148,0.2717 -1.14678,0.4513 -1.12352,1.12362 -0.0201,0.77764 -0.64635,-0.0221 -1.11004,0.16386 -0.49825,0.27656 -0.76516,0.31556 -1.2871,0.47921 -0.79472,0.12894 -1.62705,-0.27869 -2.43737,-0.36233 -0.57206,-0.16274 -1.13852,-0.21375 -1.68913,0.0517 -0.44377,0.22276 -0.67685,0.93134 -0.0682,0.90261 -0.46685,0.74795 0.47988,0.33153 0.52934,0.82367 -0.64648,0.1757 -0.41864,0.64907 -0.1763,0.99717 -0.47251,0.55179 -0.0381,0.75898 0.40532,1.07314 -0.32781,0.86655 1.11133,0.0172 0.74049,0.87015 0.29813,0.50369 1.0418,-0.0232 1.43165,0.5037 0.44789,0.42879 -0.45683,0.73245 -0.82058,0.81502 -0.44121,0.11929 -1.20477,0.31048 -0.79377,0.89129 0.16278,0.44581 -0.0144,1.11592 -0.38032,1.44554 -0.41999,0.41748 -0.83998,0.83496 -1.25997,1.25244 0.61013,0.48033 -0.27655,0.7647 -0.70461,0.79371 -0.70607,0.71544 -0.64955,2.08768 -1.75162,2.40084 -0.56541,0.13524 -0.94762,0.44586 -1.13714,0.99744 -0.27577,0.40467 -0.69899,0.76293 -0.82207,1.19347 -0.60904,0.37709 -1.33261,0.0692 -1.94744,0.42345 -0.66048,0.41435 -0.67291,-0.37356 -1.0341,-0.6359 -0.52478,0.0442 -0.99442,0.4725 -1.083,0.992 -0.49989,0.47245 -1.13601,0.86217 -1.2151,1.60649 -0.14162,0.65364 0.69137,0.62522 1.13209,0.72651 0.77316,-0.16587 0.19198,0.79549 0.20166,1.22476 -0.0937,0.52097 0.68105,0.86864 1.13421,0.64269 0.26631,0.20877 0.31212,0.89202 0.58464,1.24861 0.27499,0.48362 0.52245,0.9673 0.34752,1.32056 0.32474,0.39652 -0.44818,0.67071 -0.85806,0.70238 -0.0661,-0.64417 -0.84146,-0.30225 -1.15392,-0.10596 -0.22039,0.5435 -0.90257,0.0348 -1.29569,0.002 -0.58257,-0.0452 -1.17693,0.0349 -1.75138,-0.0775 0.2231,0.7351 -0.21578,0.83435 -0.85101,0.745 -0.1845,0.28919 -0.28572,0.51559 -0.66095,0.47 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Inde\"\n\t\t\t\t\t\t\td=\"m 606.15503,150.953 c -0.0883,-1.19997 -0.6386,-2.32122 -0.72803,-3.52301 -0.66622,-0.10908 -0.84088,0.47848 -0.96762,1.00001 -0.10007,0.80184 -0.60283,0.63186 -0.98256,0.094 -0.474,-0.32045 -0.38708,-0.91599 -0.33049,-1.40168 0.31561,-0.6352 1.22917,-0.48942 1.65535,-1.02581 0.5151,-0.28657 0.80678,-0.79879 0.69376,-1.39144 0.0216,-0.66772 -0.89369,-0.3458 -1.31678,-0.4853 -1.01825,-0.14634 -2.04319,-0.0755 -3.06195,-0.0665 -0.50511,-0.009 -1.117,-0.1042 -0.97192,-0.76521 -0.0323,-0.4696 -0.0393,-1.20857 -0.70795,-1.03527 -0.65493,0.22604 -0.97011,-0.65831 -1.62997,-0.60822 -0.53697,-0.26791 -1.01377,-0.12794 -1.35516,0.35975 -0.6592,0.46697 0.11287,0.747 0.49686,0.99579 0.3162,0.3621 1.07628,0.57364 1.09141,1.04287 -0.68459,0.10124 -1.30544,0.40317 -1.69963,0.99267 -0.2816,0.44661 0.70199,0.62724 1.02768,0.80993 0.69834,0.1495 0.29688,0.82669 -0.007,1.16359 -0.35661,0.49604 0.49927,0.84278 0.39844,1.39525 0.2595,1.06359 0.45985,2.14183 0.75414,3.19655 0.0253,0.52184 -0.65634,0.86396 -0.82966,0.25912 0.0112,-0.84944 -0.61015,-0.34145 -0.71533,0.17889 -0.49993,0.29052 -0.46954,-1.21973 -0.88124,-0.59153 -0.58186,0.87939 -1.82814,0.81567 -2.58073,1.45952 -0.23702,0.4796 0.50312,1.00341 0.0394,1.39505 -0.41584,0.38401 -0.42447,0.90791 -0.9502,1.16544 -0.4872,0.49999 -1.12219,0.7383 -1.8011,0.81946 -1.00721,0.12193 -1.46429,1.08213 -2.14677,1.69744 -0.60397,0.7059 -1.15309,1.57494 -2.10728,1.82061 -0.52308,0.83445 -1.35514,1.35362 -2.23584,1.74761 -0.63226,0.21744 -0.97484,0.79223 -0.98719,1.44439 -0.39329,0.62167 -1.22837,0.90063 -1.92401,0.668 -0.48696,0.34005 -0.37707,1.08823 -0.901,1.386 -0.56659,-0.48396 -1.46848,-0.1141 -1.68346,0.56321 -0.6537,1.13747 0.15793,2.47544 -0.14838,3.66961 -0.43424,0.54576 0.61568,0.85154 0.39239,1.43343 -0.24524,1.36367 -1.1895,2.54134 -1.33709,3.92937 -0.0105,0.85596 0.3229,1.7312 0.16955,2.56438 -0.48614,0.0732 -1.3072,-0.26205 -1.37865,0.46569 -0.0127,0.49202 -0.64199,0.98264 -0.444,1.39794 0.86035,0.32711 -0.22223,0.60088 -0.65055,0.64042 -0.54345,0.11487 -1.17964,0.39143 -1.15614,1.04762 0.005,0.84058 -0.96953,0.96406 -1.49566,1.38834 -0.59438,-0.0377 -0.86145,-0.74792 -1.3122,-1.07307 -0.49454,-0.34448 -0.52579,-0.94931 -0.81282,-1.43727 -0.40339,-1.91236 -1.22117,-3.72129 -2.18988,-5.40828 -0.52185,-0.7023 -0.92219,-1.46232 -1.11803,-2.31951 -0.39812,-1.28217 -0.69378,-2.59711 -1.3377,-3.78769 -0.80982,-1.46752 -1.7348,-2.89508 -2.16173,-4.53716 -0.71991,-2.65574 -1.28487,-5.36304 -1.55357,-8.10284 0.0232,-0.67413 0.79163,-1.10692 0.77096,-1.77618 -0.5917,-0.29612 -0.91346,-0.87707 -0.90481,-1.5295 -0.23184,-0.38976 0.17596,-1.26798 -0.19978,-1.35614 -0.5435,-0.12632 -1.0113,0.20328 -1.08006,0.74836 0.34396,0.3183 0.49531,0.86984 0.0803,1.26217 -0.64816,0.7789 -1.73276,0.91466 -2.62447,1.25463 -1.19255,0.0334 -2.02818,-0.93562 -2.80489,-1.70938 -0.64294,-0.61153 -1.37751,-1.14077 -1.84132,-1.91316 0.757,-0.0881 1.54755,0.25066 2.28241,-0.11248 0.47707,-0.15126 0.7817,-0.55328 1.08655,-0.9245 -0.14611,-0.45768 -0.97062,0.1495 -1.43165,-0.0741 -1.39322,-0.0633 -2.78267,-0.65841 -3.61839,-1.8056 -0.49824,-0.4142 0.43349,-0.54033 0.64073,-0.83681 0.87394,0.34585 0.51091,-0.60569 0.84757,-0.70653 0.68388,0.10514 1.45536,-0.12375 2.07179,0.20788 0.65332,0.33264 0.76263,-0.35405 1.36087,-0.38551 0.56077,-0.29454 0.5264,0.65042 1.14409,0.24066 0.57688,-0.32468 0.19594,-0.60076 0.41888,-1.00578 -0.3276,-0.72677 -0.77836,-1.4123 -0.94286,-2.20122 -0.47682,0.22147 -1.13138,-0.008 -1.25479,-0.50097 -0.0295,-0.40508 0.53952,-1.33806 -0.0166,-1.34582 -0.46531,-0.0971 -1.28059,-2.3e-4 -1.3196,-0.63323 0.1002,-0.56457 0.37634,-1.02875 0.8558,-1.35088 0.49931,-0.29789 0.45414,-0.94748 1.00248,-1.20712 0.68474,-0.53431 0.62418,0.50112 1.09168,0.57819 0.53402,-0.0341 1.04458,-0.42004 1.61991,-0.27786 0.60595,-0.004 0.86,-0.36862 1.07893,-0.83319 0.43506,-0.33257 0.5904,-0.91403 0.91823,-1.29324 0.70108,-0.25608 1.49659,-0.54397 1.7262,-1.33672 0.26782,-0.58625 0.4479,-1.47953 1.2456,-1.46891 0.83354,-0.15434 -0.14847,-0.70644 0.50024,-0.99345 0.50988,-0.59584 1.33219,-1.01561 1.36452,-1.88058 0.20275,-0.43405 -0.55666,-1.10638 0.24995,-1.22135 0.46758,-0.27547 1.42642,-0.19618 1.45336,-0.88428 -0.35601,-0.43809 -0.97582,-0.36594 -1.42558,-0.4314 0.0632,-0.76904 -0.60663,-0.4523 -0.8763,-0.7819 0.23434,-0.59086 -1.17678,-0.58853 -0.45708,-1.11865 0.30343,-0.46886 -0.78523,-0.84356 0.10316,-1.10419 0.70314,-0.54317 -1.06226,-0.19725 -0.36913,-0.71046 -0.19722,-0.42913 -0.72204,-0.46671 -0.0976,-1.08358 0.54488,-0.23068 1.11153,-0.32984 1.68415,-0.12295 0.83403,0.10796 1.67018,0.44206 2.49866,0.42436 0.54056,-0.20643 0.84905,-0.19246 1.35007,-0.51138 0.46153,-0.22135 1.05822,0.61264 1.1168,-0.12811 -0.0247,-0.58115 0.44572,-0.84357 0.91092,-1.04567 0.36218,-0.16532 1.28587,-0.7914 1.08397,0.007 0.165,0.55002 0.44999,1.0755 0.66205,1.61575 0.55445,10e-4 1.05233,0.16603 1.36658,0.64995 -0.0585,0.29219 -0.63889,0.7044 -0.32473,1.29435 -0.12409,0.6198 0.60325,0.65826 1.03713,0.6917 0.17762,0.51425 1.07216,0.10842 0.75351,0.85155 0.56732,0.57516 0.046,0.82946 -0.46604,1.13902 -0.45554,0.48895 -0.92553,-0.174 -0.9866,-0.43584 -0.68059,-0.0297 -0.83357,0.41075 -0.47993,0.93395 0.64389,0.30029 0.2898,0.84518 0.62579,1.26203 -0.27617,0.29605 -0.0242,1.16231 0.51234,0.54603 0.4763,-0.0826 0.79733,0.60672 1.14901,0.89902 0.42918,0.0176 0.96401,0.19192 1.4142,0.51074 -0.0729,0.46907 0.48508,0.69727 1.00573,0.67115 0.55949,0.31182 1.03409,0.6278 0.2443,1.00555 -0.41462,0.37198 -0.86306,0.52476 -0.91512,1.06526 -0.0337,0.48857 -0.33938,0.88499 -0.59419,1.35154 0.068,0.54914 0.78826,0.64048 1.2071,0.59693 0.35301,0.4144 0.92334,0.44855 1.3413,0.65304 0.23174,0.65216 0.98237,0.77318 1.50262,1.13002 0.4263,-0.41305 0.87639,0.43286 1.34619,0.41819 0.61967,-0.24844 0.62773,0.63228 1.32893,0.48042 0.52597,0.50012 0.68444,-0.29071 1.25974,-0.0128 0.46618,0.58372 0.91361,-0.48011 1.3665,0.10466 0.44956,0.0927 1.16722,0.12738 0.80052,0.79882 0.53542,0.0106 0.87068,0.43577 1.35439,0.6178 0.33453,0.23716 1.23396,-0.63215 1.07273,0.20592 0.38586,0.46414 0.88113,-0.2075 1.41198,0.16499 0.49021,0.2583 0.97987,0.49449 1.45301,0.067 0.21896,0.64623 0.83024,0.32969 1.27885,0.42606 0.49086,-0.19776 1.18069,0.14061 1.25713,-0.56354 0.23439,-0.49734 -0.56432,-0.91828 -0.30058,-1.47735 0.0512,-0.45719 0.1583,-1.17067 0.56523,-1.3095 0.45892,-0.27973 1.15331,-0.0792 0.90958,0.55777 -0.0354,0.54938 0.13481,1.04724 0.24769,1.51339 0.27679,0.44182 0.98887,0.31169 1.45066,0.47567 0.61959,0.23267 1.32922,0.26676 1.85645,-0.19449 1.13718,0.35785 2.35959,0.22909 3.534,0.12101 0.29131,-0.43909 0.32553,-1.17016 -0.37104,-1.16901 -0.68974,-0.33674 -0.20404,-1.01621 0.42362,-0.81242 1.17494,0.0279 1.81611,-1.0538 2.63223,-1.70364 0.56599,-0.45589 1.35653,-0.4454 1.89346,-0.96704 0.51111,-0.27617 1.13032,-0.94134 1.70814,-0.47827 0.56318,0.22189 1.22525,0.47344 1.72264,-0.0302 0.45346,-0.21228 0.94336,-0.86956 1.3258,-0.21443 0.31506,0.36823 1.14794,0.82145 0.64925,1.34925 -0.62203,0.50696 -0.0311,0.70269 0.51479,0.67816 0.52734,0.0734 1.03394,0.25958 1.57008,0.28664 0.12341,0.59252 -0.33024,0.97704 -0.72602,1.33 -0.23562,0.39833 0.47139,1.26629 -0.355,1.01443 -0.63765,-0.17625 -1.39499,-0.46022 -1.91282,0.12825 -0.57909,0.49508 -1.39332,0.73274 -1.88956,1.2926 -0.2587,0.47155 0.16189,1.14891 -0.35949,1.54711 -0.25673,0.45925 -1.09674,0.87902 -0.66178,1.4622 0.16012,0.66597 -0.4829,1.22453 -0.68617,1.83499 -0.24181,0.38234 -0.36629,1.16969 -0.98566,0.91636 -0.42893,0.006 -1.20812,-0.7679 -1.24139,-0.0345 -0.0343,0.61645 0.3366,1.31574 -0.0531,1.85952 -0.73566,0.0487 -0.64085,0.67508 -0.48568,1.20585 0.0625,0.47417 -0.003,1.05736 -0.52933,1.22815 -0.24659,-0.18682 -0.5873,-0.19954 -0.84497,-0.302 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Sri Lanka\"\n\t\t\t\t\t\t\td=\"m 579.60602,186.90601 c -0.98559,0.0287 -1.14827,-1.12528 -1.38581,-1.85176 -0.49083,-1.17602 0.0719,-2.51439 -0.47821,-3.67025 0.5495,-0.40563 -0.49899,-1.01638 0.13545,-1.13335 0.61769,0.0719 0.54621,-0.7362 0.83317,-1.08674 -0.21956,-0.87423 0.0618,-0.3698 0.57349,-0.038 0.70574,0.24004 0.92522,1.00817 1.3681,1.5443 0.0741,0.53516 0.10665,0.88675 0.6801,1.14734 0.19736,0.95001 1.08846,1.64389 1.14714,2.61143 -0.23505,1.35836 -1.44709,2.54562 -2.87343,2.47707 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Nepal\"\n\t\t\t\t\t\t\td=\"m 580.625,132.873 c 0.13424,0.72947 0.91599,0.45392 0.9048,-0.17786 0.25099,-0.29456 0.8739,-0.27489 1.37893,-0.124 0.39233,0.20319 0.27473,0.94712 1.01721,0.85691 0.52682,0.14678 0.89636,0.8882 1.45174,0.80826 0.45713,-0.0938 0.79746,0.57658 1.10374,0.89221 0.24675,0.11049 0.99991,-0.46585 1.28527,0.0739 0.0245,0.58606 0.35016,0.82843 0.90366,1.0928 0.38588,0.61457 0.98288,0.0193 1.24174,0.23102 -0.50418,0.70139 0.41713,0.65191 0.89733,0.62991 0.48524,-0.14031 0.88593,0.47591 0.95859,0.90881 0.26577,-0.65987 0.45918,-0.18127 1.08189,-0.13504 0.15231,-0.56224 0.77537,-0.3442 1.21809,-0.081 0.26595,0.64831 0.94302,0.13648 1.42038,0.38384 0.21227,-0.21837 1.27754,-0.37987 1.01683,0.17609 -0.31977,0.63356 -0.4157,1.4329 0.0421,2.02202 0.2068,0.51827 -0.25258,1.04686 -0.80703,0.89034 -0.506,0.0106 -0.96328,0.17175 -1.45223,0.0147 -0.24205,-0.7874 -0.82608,0.26389 -1.28217,-0.24241 -0.47926,-0.18291 -1.10017,-0.53055 -1.53887,-0.10558 -0.3723,-0.37511 -0.39396,-0.9297 -1.07138,-0.41387 -0.52847,0.12107 -0.84723,-0.54788 -1.35435,-0.57406 -0.57529,0.028 0.0731,-1.02351 -0.79915,-0.79344 -0.50404,-0.2822 -0.89179,-0.28465 -1.35493,-0.0144 -0.47389,-0.5105 -0.94013,0.0173 -1.29308,-0.0382 -0.45634,-0.22639 -1.07997,-0.17434 -1.26028,-0.65319 -0.57175,0.20906 -0.98993,-0.3335 -1.47682,-0.53982 -0.43409,0.37403 -0.93682,-0.36285 -1.4008,-0.47257 -0.21244,-0.5736 -0.72461,-0.61929 -1.22538,-0.82129 -0.36746,-0.55493 -0.94466,-0.12549 -1.36719,-0.52159 -0.62156,-0.24043 -0.009,-0.90805 0.23837,-1.22555 -10e-4,-0.45653 0.069,-1.01897 0.52175,-1.19852 0.33259,-0.28115 0.67432,-0.57575 1.00126,-0.84848 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Bhoutan\"\n\t\t\t\t\t\t\td=\"m 597.91699,139.685 c 0.74591,-0.86281 1.37992,-1.95231 2.44578,-2.42941 0.544,-0.0825 0.85946,0.65894 1.47149,0.49947 0.66265,0.11594 1.54213,-0.20445 2.02843,0.3654 0.39704,0.41545 0.0373,1.15053 0.75884,1.26879 0.6162,0.0572 0.45193,1.05613 0.0206,1.14776 -1.11803,0.10597 -2.2761,0.19582 -3.35712,-0.13801 -0.58251,0.52197 -1.355,0.38007 -2.02899,0.15199 -0.54025,-0.10567 -1.30928,-0.0581 -1.42536,-0.74222 -0.0347,-0.0489 0.0833,-0.0821 0.0864,-0.12377 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Bangladesh\"\n\t\t\t\t\t\t\td=\"m 605.297,153.429 c -0.55892,-0.80832 -0.43155,-1.83609 -0.90061,-2.67919 -0.20357,-0.37186 -0.39022,-1.30969 -0.92523,-1.0365 -0.40658,0.29435 -0.9572,0.37363 -1.20494,-0.13345 -0.17257,-0.67147 -0.77099,-0.62368 -0.61223,0.10614 0.17292,0.4071 0.68867,1.11292 0.13773,1.3995 -0.54741,-0.19287 -0.5831,1.17714 -0.99808,0.47629 -0.28,-0.61009 -0.65244,-0.82852 -0.66766,0.0102 -0.48672,0.87194 -0.66271,-0.65891 -0.97225,0.0365 -0.24891,0.69788 -0.79908,0.008 -0.78276,-0.44146 -0.27018,-1.07938 -0.44688,-2.20379 -0.78173,-3.25399 -0.58192,-0.41024 -0.1776,-0.95582 0.15226,-1.37551 0.21081,-0.61259 -0.68557,-0.64622 -1.05161,-0.87607 -0.75162,-0.22653 -0.25394,-0.72187 0.14128,-1.04363 0.2413,-0.45122 1.28032,-0.20759 1.19343,-0.69085 -0.57676,-0.47267 -1.2007,-0.93677 -1.81954,-1.30628 -0.009,-0.44383 0.57708,-0.9009 0.95832,-1.03478 0.6532,0.13832 1.30904,0.25809 1.79373,0.75483 0.41649,0.0873 1.20838,-0.19157 1.13744,0.55389 0.12304,0.4285 -0.12478,1.23374 0.55575,1.19107 1.0814,0.19199 2.18529,-0.0949 3.27351,0.1114 0.49717,0.13176 1.20548,-0.0994 1.55758,0.29197 0.0884,0.5665 0.0217,1.232 -0.56308,1.5134 -0.43869,0.55956 -1.25399,0.49353 -1.71162,0.99616 -0.12755,0.42706 -0.22073,1.05033 0.14634,1.38637 0.31817,0.30793 0.8587,1.07605 1.03061,0.27691 0.21981,-0.4755 0.19614,-1.29886 0.91231,-1.21905 0.30618,0.19337 0.19529,1.00525 0.41691,1.42451 0.3805,1.2008 0.50244,2.4447 0.64017,3.69064 -0.37253,0.27125 -0.82806,0.44672 -1.05603,0.871 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Indochine\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Cambodge\"\n\t\t\t\t\t\t\td=\"m 634.03601,168.444 c 0.64359,0.39744 1.4572,0.32866 2.07898,0.778 0.90742,-0.12508 -0.47176,-0.88917 0.16158,-1.14374 0.43436,-0.43256 1.07608,-0.30549 1.41994,0.1712 0.50984,0.0319 1.04328,-0.3691 1.53347,-0.56846 -0.25744,0.76009 -0.32476,1.60123 0.1414,2.29755 0.2596,0.49292 -0.12903,1.06669 0.0284,1.60787 0.17813,0.68628 -0.28961,1.38653 -0.99884,1.46697 -0.90578,0.40189 -1.88338,0.771 -2.66078,1.37544 -0.45509,0.48513 0.21386,0.94444 0.59284,1.20417 0.12371,0.76704 -0.67851,0.21657 -1.09449,0.26711 -0.88832,0.0284 -1.53115,0.80571 -2.3905,0.98089 -0.40253,0.71662 -0.69134,-0.46046 -1.23733,-0.17804 -0.34546,0.17513 -1.32679,0.1974 -0.78195,-0.38115 0.37341,-0.38175 -0.31033,-1.13542 -0.69775,-0.61832 -0.62788,0.54979 -0.69133,-0.31319 -0.73497,-0.79598 -0.18249,-0.53377 -0.4476,-1.04316 -0.66201,-1.56751 0.34835,-0.44115 -0.29392,-0.96593 -0.50104,-1.372 -0.39114,-0.80744 -0.3292,-1.82154 0.34898,-2.46048 0.43994,-0.65462 1.00856,-1.4051 1.89496,-1.31091 0.75568,-0.11016 1.51065,0.056 2.26239,-0.0526 0.43999,0.0347 0.92767,0.051 1.29671,0.29997 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Birmanie\"\n\t\t\t\t\t\t\td=\"m 606.15503,150.953 c 0.48159,0.0771 1.04955,0.54454 1.31173,-0.12243 0.19265,-0.52888 -0.006,-1.13945 -0.0758,-1.69057 0.42596,-0.26346 1.01867,-0.48521 0.77949,-1.12539 0.0426,-0.42925 -0.31844,-1.21594 0.11017,-1.402 0.50154,0.13203 1.11064,0.62694 1.59838,0.28239 0.36818,-0.78309 0.84745,-1.53948 1.14795,-2.33884 -0.14817,-0.49942 -0.28659,-0.97187 0.24943,-1.3344 0.44603,-0.44426 0.82915,-0.99839 0.63111,-1.65697 0.0574,-0.72866 0.9916,-0.86564 1.47556,-1.28198 0.54501,-0.32255 1.04852,-0.94377 1.74595,-0.6548 0.39259,0.10095 1.43579,0.5104 1.03769,-0.26736 -0.36748,-0.77018 0.92656,-0.97141 0.71885,-1.74782 -0.0867,-0.53651 0.60802,-0.88351 0.97808,-0.44868 0.69883,0.3277 0.52641,1.19577 0.97235,1.70885 0.51423,0.0129 1.13873,-0.0606 0.99962,0.6794 0.10144,0.9444 0.3495,1.95552 -0.18433,2.81683 -0.30052,0.74077 -0.93122,1.24369 -1.605,1.62172 -0.30598,0.43975 -0.91129,0.85926 -0.67129,1.44905 0.29536,0.5412 -0.0107,1.01735 -0.061,1.55155 0.67505,0.21422 1.17305,-0.63296 1.87656,-0.51868 0.56976,-0.19022 1.06886,0.0333 0.97301,0.69553 0.12492,0.49149 0.0412,1.06072 0.38242,1.4716 0.37982,-0.0924 1.36667,-0.17868 1.03368,0.45142 -0.18561,0.50358 -0.55037,0.99727 -0.62669,1.5069 0.0964,0.68006 0.99298,0.18069 1.3591,0.38815 0.43373,0.46 0.45387,1.29406 1.20187,1.40353 0.48656,0.11467 1.11127,-0.70566 1.32485,-0.40144 0.49711,0.57261 -0.32124,0.6794 -0.57919,1.13878 -0.41399,0.53293 -0.83427,1.04327 -1.39091,1.43363 -0.39145,0.42708 -1.10243,0.12631 -1.53289,0.54663 -0.5595,0.1662 -0.56272,0.96919 -1.19916,0.96537 -0.55696,0.21349 -1.16385,0.2734 -1.74569,0.12703 -0.70884,0.50216 -0.42011,1.39585 -0.65497,2.10701 0.48982,0.78004 -0.80024,0.58829 -0.65903,0.91732 0.40534,0.4421 0.82606,0.90161 0.77297,1.54758 0.10286,0.48732 0.77132,0.69003 1.09005,1.0995 0.49397,0.42277 0.68134,1.10168 1.08196,1.6166 0.541,0.60183 -0.63633,0.60884 -0.59298,1.1212 0.0217,0.48749 0.50373,1.22037 -0.1928,1.42007 -0.7964,0.1424 -0.43123,0.66393 -0.19266,1.17561 0.19715,0.59204 0.46102,1.13263 0.99743,1.48384 0.74436,0.51545 0.95576,1.47408 0.74804,2.31927 0.15217,0.93888 0.70309,1.78822 1.08002,2.662 -0.34557,0.94655 -1.09043,1.71222 -1.54183,2.61985 -0.28638,0.36846 -0.52688,1.03835 -0.73355,1.27015 -0.47891,-0.16625 -0.44657,-0.99004 -0.10153,-1.3111 0.53987,-0.57099 0.28191,-1.45857 0.79091,-2.0379 -0.69117,0.18415 -0.73489,-0.45438 -0.42505,-0.90199 -0.0862,-1.15164 -0.25593,-2.32206 -0.92901,-3.29446 -0.38086,-0.86732 -0.73385,-1.76509 -1.02139,-2.66569 -0.25046,-1.25431 -0.2903,-2.54511 -0.50156,-3.80285 -0.80642,-0.0151 -0.54016,-1.059 -1.06532,-1.45233 -0.2591,-0.61163 -0.93047,-0.71708 -0.77053,0.10019 0.0791,0.95326 -0.8754,1.37173 -1.61033,1.67484 -0.55683,0.13434 -0.85502,0.53278 -1.10876,1.00702 -0.5029,0.81074 -0.63263,-0.19581 -0.8523,-0.33119 -0.20492,0.50656 -1.12746,0.42789 -0.7586,-0.20822 0.1937,-0.52576 -0.87249,-0.0374 -1.02745,0.23149 -0.6024,0.26807 -0.46762,-0.67815 -0.24856,-1.01154 0.50278,-1.1024 0.66186,-2.31954 0.45991,-3.5143 -0.18488,-0.84678 -0.57419,-1.66883 -0.93819,-2.45614 -0.19549,0.0416 -0.64294,0.65618 -1.13648,-0.0413 0.0396,-0.28118 1.10058,-0.10482 0.53905,-0.81262 -0.16917,-0.45323 -0.61226,-0.87552 -0.99033,-1.15185 -0.43328,0.16973 -1.11684,-0.0447 -0.80315,-0.62004 -0.22054,-0.39754 -0.90073,-0.13649 -1.17694,-0.67501 -0.29001,-0.36187 -0.94411,-0.87582 -0.29479,-1.23984 0.59319,-0.24639 0.8723,-0.63848 0.63091,-1.27204 -0.0331,-0.27336 -0.0658,-0.54678 -0.0991,-0.82012 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Viet-Nam\"\n\t\t\t\t\t\t\td=\"m 627.17297,150.01199 c 0.57428,-0.32967 1.3439,-0.56483 1.85893,-0.006 0.57426,0.43221 0.95182,-0.55795 1.58448,-0.38905 1.04135,-0.0611 2.26477,0.1096 3.03276,-0.75999 0.38068,-0.25385 0.94091,-0.82645 1.2853,-0.23904 0.6439,0.63543 1.66104,0.57617 2.50459,0.51471 0.59302,0.35068 0.0823,0.94759 -0.17902,1.34001 -0.008,0.83651 0.83959,1.24132 1.48368,1.54688 0.49297,0.23298 1.11723,0.0455 1.55532,0.37011 -0.33952,0.35476 -1.26786,0.41112 -0.91729,1.04714 -0.2552,0.48773 -0.97685,0.10592 -1.43849,0.19064 -0.17113,0.405 -0.1567,0.9037 -0.59139,1.2601 -0.24395,0.56541 -0.82669,0.71776 -1.29886,1.01613 -0.49771,0.67725 -0.57579,1.56042 -0.961,2.30299 0.6232,0.60808 1.18933,1.28022 1.849,1.85899 -0.0234,0.63133 0.15655,1.25728 0.71368,1.61629 0.9564,0.59672 1.63837,1.50664 2.49634,2.21571 0.57404,-0.0877 1.01704,0.31046 1.0678,0.87707 0.12092,0.72062 0.52608,1.33315 1.10322,1.77095 0.6918,1.52502 0.80126,3.23253 1.15796,4.85398 -0.37767,0.47321 -0.64708,1.02863 -0.48667,1.64248 -0.18268,0.4624 0.10239,1.0102 -0.15724,1.43079 -0.31993,0.59629 -0.86537,1.05992 -1.55842,1.10215 -0.94684,0.24413 -1.32472,1.43346 -2.33264,1.5096 -0.46128,0.0757 -1.02196,-0.94272 -1.18548,-0.39728 -0.15918,0.49721 0.18857,1.04368 -0.10931,1.53303 -0.0658,0.62939 -0.79389,0.63411 -1.08911,0.79145 -0.25471,0.87425 -1.4313,0.58933 -1.81223,1.3486 -0.32463,0.4461 -0.78371,1.03035 -1.40989,0.84318 0.17254,-0.92749 -0.0361,-1.97027 0.43653,-2.8095 0.37949,-0.53935 -0.4149,-1.01465 -0.89558,-1.09292 -0.77536,-0.19494 0.38968,-0.60332 0.69103,-0.70497 0.72487,-0.45553 1.58158,-0.98201 2.44712,-0.55691 0.65592,0.0385 0.15476,-0.7527 -0.25308,-0.85269 -0.4661,-0.47768 0.0872,-0.98585 0.55676,-1.15774 0.83842,-0.49435 1.76952,-0.83735 2.64607,-1.22498 0.81595,-0.52934 0.21382,-1.58728 0.49119,-2.35928 0.0621,-0.59897 -0.58064,-1.09589 -0.43831,-1.73958 0.0846,-0.99996 0.76969,-2.22732 -0.0457,-3.08742 -0.63959,-0.2726 -0.34178,-0.80535 -0.30088,-1.24702 -0.24983,-0.69531 -1.18753,-0.7407 -1.5387,-1.38693 -1.04295,-1.62578 -2.27554,-3.1424 -3.64143,-4.51205 -0.62316,-0.51675 -1.34189,-0.89157 -2.02802,-1.315 -0.22376,-0.55743 0.32432,-1.14939 0.89681,-0.91374 0.74315,0.13875 1.31683,-0.94939 0.62124,-1.38966 -0.44038,-0.37994 -0.70682,-0.95078 -1.09176,-1.33944 -0.6529,-0.25226 -0.95097,0.98761 -1.6095,0.55369 -0.74582,-0.23662 -1.10978,-0.92784 -1.31668,-1.63332 -0.24363,-1.01455 -1.38654,-1.41942 -1.75553,-2.37499 l -0.0366,-0.0606 -0.001,0.013 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Malaisie\"\n\t\t\t\t\t\t\td=\"m 627.40802,186.411 c 0.72369,0.01 1.02892,0.7389 1.50049,1.18624 0.47056,0.63593 1.0753,1.24604 1.34212,1.98774 0.19518,1.05111 -0.23871,2.08956 -0.0307,3.14302 -0.20782,0.76429 0.0859,1.57125 0.75305,2.00399 0.4917,0.69165 0.72972,1.51699 1.10498,2.27102 -0.57564,-0.12502 -1.20343,-0.15312 -1.74448,-0.015 -1.03038,-0.85741 -2.22893,-1.49417 -3.40168,-2.1428 -0.49754,-0.41176 -1.30652,-0.68521 -1.25005,-1.46044 -0.0276,-0.92244 -0.92026,-1.4271 -1.43287,-2.05501 -0.36675,-0.65972 0.1522,-1.47059 -0.3972,-2.06454 -0.48234,-0.80118 -0.37474,-1.82227 -0.69141,-2.69802 -0.29559,-0.60669 0.40496,-0.81511 0.88184,-0.74631 0.11751,0.42014 0.66282,0.51087 0.96185,0.90645 0.13645,0.32322 -0.36223,1.2904 0.27755,0.9186 0.17201,-0.62278 0.91544,-0.5959 0.78846,0.11808 0.80238,0.18603 0.54884,-0.59238 1.04415,-0.86919 0.23046,-0.0938 0.23927,-0.26983 0.29386,-0.48382 z m 16.54199,9.63101 c 0.33287,0.38061 0.75236,0.67985 1.29516,0.63561 0.84391,-0.10498 1.43014,0.96676 2.26484,0.58639 -0.52696,-0.32408 -0.57623,-0.84316 -0.19679,-1.31455 0.3804,-0.49881 0.46347,-1.20785 0.8364,-1.67475 1.07356,-0.58155 2.46639,-0.40565 3.4304,-1.19971 0.28175,-0.51013 0.4414,-1.13307 1.04699,-1.344 0.46672,-0.52644 0.78807,-1.22518 1.44599,-1.544 0.11647,0.53485 0.44115,0.58618 0.79999,1.014 0.45277,-0.39928 1.07361,-0.46926 1.617,-0.69101 -0.36356,-0.32244 -0.0819,-0.85828 -0.42795,-1.23519 0.24561,0.0214 1.15386,0.1918 1.00858,-0.48154 -0.60137,-0.26315 -0.51294,-1.00325 0.23395,-0.89016 0.70108,0.27217 0.35584,-0.76537 0.98443,-0.8841 0.34389,-0.66694 0.98481,-1.11567 1.20114,-1.8602 0.16744,-0.97937 0.51216,0.58402 0.94481,0.0186 0.32082,-0.63899 0.50996,0.55632 1.02238,0.57722 0.63437,0.22094 0.0777,0.89247 -0.0963,1.27241 0.0868,0.55114 1.0316,-0.34647 1.22057,0.10037 -0.48723,0.65599 -0.0588,0.58135 0.60025,0.42149 0.70992,-0.1404 1.16901,0.67375 1.83317,0.81416 0.29101,0.62392 -0.66404,0.8713 -1.14275,0.82866 -0.40573,-0.0639 -1.35859,-0.16577 -1.09399,0.48466 0.26317,0.32228 1.24473,0.61838 0.64726,1.04108 -0.47132,0.34129 -1.25457,0.0973 -1.60754,0.52759 -0.64127,-0.37171 -1.36495,-0.47457 -2.09317,-0.41497 -0.66179,-0.008 -1.42729,-0.3624 -2.02182,0.023 -0.53178,0.61857 -0.54886,1.43009 -0.39398,2.19101 -0.11189,0.62014 -1.0522,0.40336 -1.07506,1.05539 0.25569,0.78455 -0.39217,1.39622 -0.67067,2.07857 -0.30501,1.00169 -1.56848,0.58657 -2.18894,1.2275 -0.61086,0.43455 -1.35097,-0.18905 -1.95936,-0.38698 -0.67734,-0.42079 -1.43513,0.008 -1.80937,0.61842 -0.41155,0.53967 -1.1667,0.95729 -1.82025,0.57773 -0.51866,-0.38161 -1.05083,0.0786 -1.54538,0.26336 -0.471,-0.29303 -0.98116,-0.44719 -1.32026,-0.92356 -0.50161,-0.4083 -0.82164,-0.87924 -0.96972,-1.51243 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Thailande\"\n\t\t\t\t\t\t\td=\"m 627.40802,186.411 c -0.14736,0.50027 -0.72495,0.77595 -0.77905,1.27417 -0.76516,0.50391 -0.42738,-0.81448 -1.04041,-0.43829 -0.18667,0.62674 -0.96795,0.60898 -0.55188,-0.0872 0.21646,-0.55888 -0.46894,-0.78444 -0.77837,-0.96428 0.0931,-0.7574 -0.94132,-0.15216 -1.09427,-0.28453 0.38691,-0.81684 -0.46722,-0.0845 -0.79486,-0.41665 -0.53473,-0.2946 -0.32213,-0.90297 -0.45606,-1.35918 -0.16746,-0.57305 -0.92451,-0.11563 -0.97768,-0.85869 -0.2032,-0.5007 -0.43651,-1.01728 -0.98062,-1.21748 -0.32487,-0.71973 -1.01569,0.25995 -1.16582,-0.47584 -0.12768,-1.28392 0.55488,-2.46987 0.88325,-3.68248 0.0221,-0.42071 0.13364,-0.87881 0.46278,-1.28858 0.51152,-0.97178 1.22339,-1.84374 1.70258,-2.81994 -0.0922,-0.65657 -0.59564,-1.2627 -0.79078,-1.92494 -0.33061,-0.48795 -0.24116,-1.04329 -0.18254,-1.58612 0.0487,-0.97207 -0.774,-1.55979 -1.42526,-2.13493 -0.26009,-0.605 -0.4929,-1.22208 -0.77802,-1.816 0.4114,-0.25309 1.22569,-0.41924 0.89799,-1.06205 -0.24628,-0.56693 -0.1152,-1.07566 0.48871,-1.27317 0.29837,-0.42702 -0.39142,-0.90965 -0.54003,-1.34022 -0.28443,-0.69775 -0.94839,-1.1282 -1.5253,-1.57333 -0.30266,-0.35481 -0.0258,-1.06585 -0.50733,-1.3849 -0.67876,-0.54952 -0.35303,-0.6966 0.26995,-0.82697 -0.007,-0.5256 0.11028,-1.06108 0.12943,-1.60694 -0.0179,-0.45379 0.32113,-1.23385 0.86779,-1.00483 0.63528,0.0794 1.33136,-0.10175 1.87086,-0.38666 0.34443,-0.7344 1.16981,-1.10685 1.95394,-1.09493 0.34857,-0.29542 1.07561,0.0304 1.19405,0.44883 0.1151,0.54018 -0.36689,1.26593 0.15391,1.66016 0.45317,0.18581 1.16972,-0.57801 1.38761,-0.0477 0.13296,0.68544 0.36951,1.39413 0.006,2.05475 -0.18279,0.77529 -0.78081,1.61573 -0.38535,2.40397 0.58019,0.39158 0.82397,-0.35704 1.22718,-0.65076 0.41719,-0.37072 0.83306,-1.14176 1.47093,-0.69353 0.5224,0.12783 1.03881,0.70934 1.56083,0.29026 0.55197,-0.10369 0.39598,-0.96864 0.87687,-1.13134 0.49952,0.0335 1.03813,0.0924 1.4732,0.35436 0.0866,1.10003 1.62598,1.47613 1.48029,2.64071 -0.057,0.81971 0.12662,1.64501 0.72374,2.24461 0.65317,0.82367 1.42167,1.73595 1.23267,2.86532 0.079,0.62587 -0.53367,0.87811 -0.9287,1.22336 -0.89214,-0.53102 -1.95128,-0.15036 -2.91958,-0.30012 -0.73514,0.0451 -1.57764,0.0107 -2.04054,0.69733 -0.50178,0.71271 -1.28749,1.40656 -1.06702,2.37344 0.0438,0.75308 0.71666,1.23327 0.87016,1.94636 -0.23403,0.20582 -0.94549,-0.16128 -1.23242,-0.46585 -0.39881,-0.51761 -1.09245,-1.00037 -1.73452,-0.57928 -0.36281,0.007 -1.21541,-0.0744 -1.17705,-0.48588 -0.0419,-0.44615 0.42289,-1.16543 -0.006,-1.43378 -0.6791,-0.037 -1.5365,-0.35092 -2.01165,0.32872 3.1e-4,0.43282 0.24709,0.98019 -0.15303,1.42821 -0.33686,0.5539 0.25647,1.24135 -0.21398,1.77856 -0.66302,1.45562 -1.53737,2.90409 -1.60004,4.53629 0.0779,0.49439 -0.0626,1.32851 0.57739,1.44747 0.44979,0.0274 1.15269,-0.51234 1.24491,0.22053 0.0137,0.42007 -0.21263,1.14512 0.33193,1.25488 0.47566,-0.0768 0.37206,0.89965 0.54343,1.26383 -0.0373,0.7549 0.20397,1.55836 0.71863,2.1223 0.58141,0.19134 1.18184,0.49748 1.80701,0.33499 0.50759,0.26101 0.46539,0.97534 1.0411,1.20315 0.11784,0.11031 0.27843,0.20755 0.38889,0.30085 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Laos\"\n\t\t\t\t\t\t\td=\"m 634.03601,168.444 c 0.44874,-0.34759 1.05147,-0.67912 0.92845,-1.34455 0.20955,-1.53384 -1.29659,-2.44813 -1.83638,-3.71673 -0.2788,-0.75702 0.16108,-1.70429 -0.49273,-2.31704 -0.41317,-0.4964 -1.04907,-0.88822 -1.10733,-1.59568 -0.46322,-0.27059 -1.03158,-0.33659 -1.56202,-0.35699 -0.37722,0.36586 -0.2894,1.07513 -0.88756,1.18104 -0.54314,0.33001 -1.0689,-0.29437 -1.61051,-0.39948 -0.66077,-0.30925 -1.00561,0.57642 -1.46531,0.89983 -0.292,0.37238 -0.80552,0.96339 -1.15621,0.3444 -0.22801,-1.00137 0.49984,-1.94377 0.6537,-2.9238 0.0175,-0.52089 -0.14457,-1.06229 -0.26311,-1.573 -0.51489,-0.0554 -1.06886,0.53341 -1.51202,0.094 -0.24853,-0.63155 0.45836,-1.61027 -0.383,-1.94499 -0.91352,-0.0602 -0.17889,-0.49382 0.212,-0.78879 0.45637,-0.5569 0.85295,-1.19862 1.49601,-1.56321 0.29588,0.42596 0.97683,0.60118 1.40671,0.37493 0.56129,-0.4845 -0.10327,-1.1364 -0.19138,-1.67405 -0.28241,-0.6406 0.42201,-0.94695 0.90466,-1.12587 0.34036,0.86378 1.24694,1.29834 1.66678,2.09098 0.26664,0.77112 0.52462,1.66719 1.38237,1.95311 0.71363,0.52371 1.03988,-0.87034 1.75389,-0.5021 0.31073,0.66477 0.95608,1.13238 1.30554,1.73184 0.1625,0.69488 -0.66626,1.17681 -1.27154,0.92015 -0.58703,0.0279 -0.8489,0.97389 -0.23066,1.1535 1.50697,0.74172 2.65268,1.99229 3.65615,3.30911 0.67582,0.77399 1.23198,1.63731 1.82443,2.46696 0.3634,0.59934 1.50804,0.66772 1.43042,1.49544 -0.47218,0.49818 0.16505,0.85463 0.45474,1.19879 0.34359,0.55836 0.26181,1.36206 0.006,1.89576 -0.47033,0.16645 -0.99386,0.60193 -1.47071,0.51156 -0.3346,-0.45291 -0.94583,-0.59237 -1.37205,-0.18061 -0.72198,0.2501 0.66632,0.94431 -0.11927,1.14997 -0.522,-0.22928 -1.12056,-0.41978 -1.70136,-0.54732 -0.14577,-0.0724 -0.31835,-0.14224 -0.44861,-0.21715 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Iles oceaniennes\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Brunei\"\n\t\t\t\t\t\t\td=\"m 654.07501,190.187 c 0.49168,-0.21328 1.04515,-0.20353 1.24337,-0.82148 0.42268,-0.72113 0.383,-0.12397 0.82457,0.0337 0.11379,0.37606 0.2449,0.92202 0.26397,1.13744 -0.518,0.20703 -1.10384,0.28111 -1.5329,0.66239 -0.36005,-0.43123 -0.66573,-0.49687 -0.80005,-1.01401 l 10e-4,0.002 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Indonesie\"\n\t\t\t\t\t\t\td=\"m 713.62097,206.298 c 0.0563,2.65534 0.11267,5.31067 0.16901,7.96601 -0.31472,0.47763 -0.5672,0.96107 -0.2264,1.49993 0.47767,1.29992 0.17137,2.71765 0.24021,4.07158 0.0665,0.70281 -0.01,1.05768 -0.52278,0.34948 -0.60487,-0.54455 -1.16637,-1.12862 -1.64301,-1.79 -0.79121,-0.17575 -1.56312,0.25321 -2.35498,0.17501 -0.0445,-0.52591 0.73455,-0.88675 0.46688,-1.37547 -0.41625,-0.36882 -0.86228,-0.81837 -1.04997,-1.32372 0.19555,-0.11351 1.2898,0.0121 0.42905,-0.53303 -0.5924,-0.32742 -1.04329,-0.83118 -1.22297,-1.49479 -0.5697,-0.83875 -0.94573,-1.8881 -1.94133,-2.31665 -1.34495,-0.474 -2.73018,-0.89023 -4.11026,-1.25022 -0.63423,-0.0349 -1.22095,-0.31172 -1.77141,-0.61013 0.31121,-0.66162 -0.37491,-0.72843 -0.836,-0.535 -0.83502,-0.0266 -1.68663,-0.89797 -1.28503,-1.734 -0.32696,-0.57697 -0.68554,0.48247 -0.67234,0.80731 -0.0703,0.69841 -0.63187,1.10783 -1.24418,1.33891 -0.29549,-0.1329 -0.85535,-0.98419 -0.23575,-1.17362 0.20777,-0.40961 -0.37511,-0.88351 -0.74114,-1.08537 -0.31414,-0.38124 -1.13759,-0.29037 -1.14385,-0.78785 0.26176,-0.41695 0.99995,-0.013 1.40248,0.13079 0.47182,-0.0206 0.74343,-0.81843 1.22181,-0.71317 0.32342,0.41902 1.05242,0.30136 1.45169,0.10361 0.2024,-0.46551 0.10143,-1.30722 -0.51057,-0.73303 -0.79037,0.14007 -1.61384,0.0506 -2.41739,0.0671 -0.62726,0.0785 -1.30466,-0.30774 -1.31441,-0.99429 -0.0873,-0.91124 -1.16962,-0.72781 -1.8227,-0.83751 0.18024,-0.0757 0.13181,-1.07915 0.40475,-1.166 0.8298,-0.0597 1.46526,-0.67046 2.1396,-1.09489 1.26096,0.0401 2.27356,1.01228 3.54969,1.04316 0.32501,0.23574 0.67187,0.85498 0.58153,1.28806 -0.2121,0.46892 -0.41882,0.9937 -0.0461,1.43131 0.17612,0.60144 0.18694,1.401 0.80786,1.73247 0.12818,-0.91541 0.47766,-0.4611 0.57013,0.20165 0.0617,0.9413 1.36342,1.29253 1.96887,0.62229 0.65071,-0.5739 0.98169,-1.42424 1.49499,-2.11694 0.61423,-0.0756 1.3574,-0.0947 1.85303,-0.457 -0.18515,-0.67697 0.57307,-0.82391 1.01029,-1.10934 0.66612,-0.53817 1.37992,0.19574 2.04111,0.3846 1.71928,0.80903 3.48547,1.50428 5.31658,2.01774 l -0.007,0.001 z m -22.41296,2.409 c -0.92621,-0.0628 -1.48342,-0.99565 -2.31668,-1.231 -0.66001,-0.15098 -0.11154,1.03439 -0.89614,0.46962 -0.60847,0.007 -0.81251,-0.84778 -1.36256,-0.48389 -0.41218,0.27348 -0.90921,0.80083 -1.16485,0.033 -0.48085,-0.4006 -0.29816,-1.02059 0.36831,-0.80114 0.61016,0.0784 1.26906,-0.0645 1.77792,0.37041 0.52601,0.049 0.89284,-0.57568 1.44993,-0.3152 0.78874,0.14921 1.70065,0.34209 2.03464,1.17057 0.0606,0.26288 0.21582,0.52753 0.10943,0.78763 z m -9.16303,-0.008 c -0.58535,-0.037 -1.1564,-0.44887 -1.36596,-1 0.20369,-0.55664 0.98188,-0.31752 1.45858,-0.42377 0.36683,0.18182 0.89108,0.52945 0.95414,0.94195 -0.11113,0.33973 -0.75787,0.31671 -1.04676,0.48182 z m 25.59003,10.39599 c -0.44987,-0.14635 -1.49003,-0.0198 -0.84574,-0.67199 0.40328,-0.66577 0.83467,-1.57627 1.71873,-1.61802 0.47993,0.22049 0.94449,0.59767 0.45387,1.07879 -0.21996,0.48878 -0.75367,0.73293 -1.05684,1.18322 -0.09,0.009 -0.18001,0.0187 -0.27002,0.028 z M 673.797,218.703 c -0.61352,0.17565 -0.56653,0.6916 -1.27847,0.76613 -0.45527,0.34656 -1.01176,0.18359 -1.41752,0.54183 -0.44902,0.20907 -1.02552,-0.36771 -1.401,0.14004 -0.66463,0.16766 -1.26646,-0.36318 -1.94831,-0.23516 -0.57283,0.23236 -1.0536,-0.32734 -0.75676,-0.81464 0.71948,-0.43646 1.59901,-0.47732 2.34101,-0.0739 0.46049,0.10844 0.94043,0.80467 1.35077,0.20637 0.46402,-0.13866 1.01035,-0.14865 1.45652,0.0209 0.45496,-0.12187 0.5018,-0.54584 1.11457,-0.72552 -0.0336,-0.30658 -0.12352,-0.65559 0.46027,-0.20936 0.12354,0.0868 0.0505,0.27052 0.0789,0.3833 z m -11.13599,0.362 c -0.60949,0.0424 -0.79599,-0.81934 -0.11447,-0.82518 0.41744,0.24987 0.62155,0.36843 1.18805,0.34606 0.144,0.74319 0.11528,0.47854 0.61535,0.13398 0.44042,0.1794 0.51979,0.59912 0.6173,0.97116 -0.26728,-0.0126 -0.76172,-0.19991 -1.05375,0.13939 -0.77207,0.46584 -0.39845,-0.72088 -0.94151,-0.0564 -0.32582,0.37565 -0.94682,0.23462 -1.40891,0.51598 -0.47678,0.11149 -0.94675,0.17744 -1.4291,0.12002 -0.53857,-0.16335 -0.32119,-0.88267 -0.112,-1.10099 0.42525,-0.37813 0.95238,-0.18208 1.46898,-0.14129 0.27495,0.15362 0.78102,0.86199 1.09102,0.24527 0.39629,0.0742 0.46637,-0.23892 0.079,-0.34799 z m -6.367,0.53701 c -0.39012,-0.42691 -1.15073,-0.44551 -1.36603,-1 0.60452,0.0855 1.24176,-0.51262 1.78007,0.003 0.92323,0.31552 0.073,0.40858 -0.26927,0.8376 -0.0481,0.0515 -0.0966,0.11136 -0.14477,0.1594 z M 631.05298,200.125 c -0.21302,0.44805 -0.57048,0.85421 -0.87325,1.25544 -0.45992,0.42335 0.39652,0.86541 0.74663,1.06545 0.43976,0.33015 1.33933,-0.10778 1.42362,0.67011 0.19396,0.58706 -0.0705,1.40083 0.60003,1.722 0.89538,-0.17359 0.26303,0.53379 0.094,0.974 0.32244,0.48897 0.84775,-0.62687 1.36379,-0.0851 0.53823,0.0225 0.81836,0.44031 0.96401,0.89191 0.52825,0.355 0.75525,0.79448 0.4328,1.38805 -0.2174,0.79638 -0.52469,1.62752 -0.16468,2.43413 0.0428,0.9062 0.11901,1.88838 -0.19694,2.755 -0.51442,0.16119 -0.61658,-0.74854 -1.10871,-0.78667 -0.2549,0.46574 -0.34143,1.00025 -0.88512,0.42926 -0.65298,-0.57507 -0.84003,-0.0587 -0.35409,0.49168 -0.18267,0.58796 -0.66446,-0.42471 -0.95566,-0.59064 -1.14899,-1.31453 -2.50202,-2.42744 -3.92564,-3.42276 -0.52152,-0.41972 -0.46706,-1.27275 -1.17357,-1.50038 -1.05874,-0.59913 -1.77371,-1.65882 -2.45344,-2.62145 -0.0259,-0.5154 -0.10231,-1.00067 -0.34079,-1.48004 -0.83616,-1.35338 -1.48618,-2.9549 -2.85669,-3.8582 -0.66014,-0.0972 -0.70368,-0.73945 -0.90818,-1.25489 -0.17379,-0.62779 -0.62855,-1.24035 -0.55499,-1.88093 -0.31332,-0.73726 -1.17046,-1.08801 -1.85648,-1.42175 -0.60645,-0.0562 -0.81568,-0.53063 -0.78225,-1.09542 -0.16588,-1.02012 -1.20723,-1.55284 -1.7734,-2.34581 -0.60013,0.28937 -0.9888,-0.0391 -1.32181,-0.5302 -0.9535,-0.86563 -1.9342,-1.92935 -2.07816,-3.2608 0.16781,-0.62165 1.09972,-0.31481 1.42003,0.0473 0.55938,0.65085 1.51522,0.73446 2.3132,0.67285 0.49549,-0.0638 1.12391,-0.47724 1.46276,0.10085 0.45776,0.51093 0.77295,1.18396 1.432,1.466 -0.121,0.578 0.0628,0.95537 0.61187,1.27107 0.9032,0.7972 2.02351,1.32193 3.05058,1.91055 0.13369,0.55131 0.0235,0.9858 0.7206,0.97312 0.41947,0.49797 0.80266,1.15135 1.39067,1.41935 0.38383,-0.0928 -0.17645,-1.03623 0.63931,-0.46409 0.31593,0.52864 0.63677,1.28429 1.36597,1.23999 1.00058,0.20776 0.77285,1.55225 1.6408,1.92167 0.74697,0.37032 1.73841,0.10666 2.33222,0.82335 0.14755,0.2213 0.53365,0.4337 0.55896,0.67599 z m 53.14801,0 c -0.0457,-0.61402 -0.65411,-1.17048 -0.24097,-1.78101 -0.44376,-0.5751 -0.0183,-1.31624 0.24454,-1.87783 0.2398,-0.74649 0.61552,-0.504 0.78744,0.12584 -0.0658,0.6241 -0.79514,1.11081 -0.59997,1.76699 0.36634,0.25577 0.83052,-0.5269 0.85797,-0.933 0.27964,-0.15415 1.1431,-0.88866 1.09034,-0.2389 0.28483,0.63852 -0.23431,0.83574 -0.6912,1.16396 -0.54753,0.55444 0.50456,0.47607 0.79335,0.77603 0.38139,0.73289 -0.30991,0.39357 -0.79048,0.25324 -0.44995,-0.2696 -1.06723,0.004 -0.91442,0.57496 0.0438,0.80872 0.45633,1.49874 1.01081,2.06262 0.1276,0.73663 -0.70603,-0.25059 -0.95727,-0.48345 -0.32231,-0.39786 -0.70667,-0.78019 -0.5879,-1.33397 l -0.003,-0.0735 9.8e-4,-0.002 z m -46.83997,7.019 c -0.60914,-0.29646 -1.54046,-0.51276 -1.49005,-1.36701 -0.14897,-0.58303 -0.80022,-1.00934 -1.39996,-0.85998 -0.25258,-0.26925 0.32961,-1.41057 0.63038,-0.77018 0.31905,0.86925 0.55798,-0.99511 0.7764,-0.1846 0.19802,0.89722 0.69143,1.86032 1.63382,2.12828 -0.31693,0.18138 -0.39811,0.64255 -0.15059,1.05349 z m -3.04004,8.201 c -0.22679,-0.54403 1.03717,0.23248 1.0189,-0.42222 0.11451,-0.59688 0.36429,-0.47773 0.51216,-1.12454 0.0993,-0.6197 0.7801,0.11446 1.23022,-0.11154 0.32967,0.12788 0.82257,0.80241 1.12776,0.0363 0.003,-0.40598 0.93339,0.007 1.14218,0.29915 0.42289,0.15033 0.78569,0.55314 1.3203,0.30766 0.51884,-0.31417 0.885,0.46559 1.04611,0.86728 0.12981,0.59043 0.9984,0.0822 1.38787,0.47736 0.90884,-0.21172 1.93446,0.33826 2.79452,-0.13146 0.1036,-0.47007 0.32935,-1.08733 0.93097,-0.93401 0.36734,0.36527 0.5111,0.9042 1.14502,0.83001 0.74116,0.0738 1.57658,0.0283 2.23674,0.37652 0.63222,0.25303 0.20394,0.83565 0.59104,1.24207 0.54727,0.5042 1.38765,0.64341 2.12522,0.61641 0.45926,-0.29466 1.16229,-0.24977 1.51403,0.12433 -0.0397,0.44201 -0.67516,0.98801 -0.11462,1.38595 0.68218,0.7234 -0.26183,0.1 -0.70425,0.0822 -0.9416,-0.23474 -1.94187,-1.0314 -2.89114,-0.37445 -0.94905,0.0753 -1.91178,-0.17717 -2.86983,-0.21222 -0.98287,-0.0186 -1.95023,-0.26315 -2.76018,-0.83678 -1.05432,-0.29767 -2.14944,-0.74953 -3.2503,-0.60103 -0.63293,0.46925 -1.54215,0.30842 -2.18294,-0.0393 -0.79462,-0.70978 -1.94375,-0.16167 -2.82774,-0.59766 0.43966,-0.4181 0.62786,-0.85395 -0.1614,-0.92314 -0.77304,-0.21393 -1.57154,-0.27285 -2.36064,-0.33686 z m 40.68305,7.747 c 0.44236,-0.45035 0.0264,-1.26565 0.67424,-1.54945 0.90461,-0.71986 2.38414,-0.75216 2.85371,-1.95956 0.94605,-0.34611 2.0006,-0.11162 2.95404,-0.47299 0.51037,0.0354 1.05371,-0.24508 1.52796,-0.117 0.19235,0.48801 -0.70037,0.71892 -1.07954,0.88548 -1.43395,0.66758 -3.18621,0.75477 -4.3147,1.96897 -0.5169,0.46259 -1.03869,0.97048 -1.74699,1.06839 -0.27944,0.15706 -0.55384,0.18468 -0.86872,0.17616 z m -7.138,0.057 c -0.92966,-0.4237 -1.71142,-1.22099 -2.77405,-1.349 -0.72644,-0.39451 0.42493,-0.66947 0.80867,-0.56981 0.52967,-0.037 0.99488,-0.22043 1.3713,0.26769 0.40979,0.34327 1.16592,0.53991 1.23113,1.11305 -0.0741,0.30146 -0.32113,0.54146 -0.63705,0.53807 z m -6.04706,-31.908 c 0.0676,0.41989 0.52206,1.06174 -0.30627,0.9509 -0.76404,-0.0174 -0.70522,0.13389 -0.51092,0.69426 -0.19035,0.40794 0.70485,0.62835 0.77394,1.14637 0.24347,0.48085 0.98259,0.94536 0.49771,1.51073 -0.40545,0.59116 0.41782,1.07409 0.86354,1.33192 0.5789,0.32535 1.00725,0.83009 1.36205,1.38182 -0.66957,0.37723 -1.42797,0.0318 -2.0972,-0.0687 -0.70752,0.24752 -0.8963,1.14631 -1.05174,1.8102 -0.2035,0.73424 0.37758,1.43731 0.0708,2.17273 -0.27725,0.30643 -0.99426,-0.23214 -1.26571,0.47546 -0.63932,0.48781 -0.92283,1.28202 -1.63972,1.68842 0.13113,0.17413 0.77773,1.0013 0.43548,1.13691 -0.99647,-0.0997 0.12595,0.4343 -0.0836,0.91392 -0.31019,0.52029 -0.81439,0.93702 -0.94627,1.5611 -0.62488,0.94301 -1.85574,1.04841 -2.72205,1.68599 -0.31385,-0.43601 -0.12687,-1.01538 -0.47362,-1.47475 -0.18408,-0.43219 -0.80356,-0.93538 -1.12973,-0.3441 -0.43465,0.70207 -0.73935,-0.0922 -1.11222,-0.35413 -0.5628,-0.0296 -0.74432,-0.59597 -1.23545,-0.76392 -0.25622,0.3555 -0.30992,1.22775 -0.96869,1.02724 -0.55196,-0.32705 -0.83478,0.38427 -1.29289,0.44768 -0.32506,-0.20496 0.008,-0.96947 -0.28283,-1.35195 -0.0784,-0.98106 -0.43742,0.0728 -1.00377,0.0337 -0.5863,0.31433 -0.99569,0.23876 -1.4094,-0.12162 -0.44235,-0.1422 -1.20778,0.60082 -1.08491,-0.24665 0.0163,-0.95718 -0.29048,-1.8891 -0.35735,-2.82789 -0.21001,-0.74373 -0.82247,-1.21508 -1.5101,-1.49763 -0.18185,-0.33977 0.83889,-0.55254 -0.12201,-0.875 -0.58364,-0.34386 0.23155,-0.98243 -0.27799,-1.38941 -0.39655,-0.395 -0.53229,-0.70856 -0.48597,-1.27041 -0.17246,-0.73 0.30398,-1.42514 0.7002,-1.99835 -0.004,-0.58863 0.66131,-1.06259 0.88484,-0.33433 0.17148,0.80634 0.93741,1.23835 1.44992,1.81949 0.52891,0.24706 0.9529,0.4605 1.47968,0.0359 0.62841,-0.335 1.29635,0.58298 1.92132,0.0711 0.77014,-0.3085 1.01551,-1.40435 1.94098,-1.382 0.81429,0.13309 1.50759,0.80461 2.35803,0.70601 0.49994,-0.57784 1.32259,-0.50128 1.93658,-0.81165 0.58112,-0.49993 0.76023,-1.33587 1.17438,-1.97536 -0.13771,-0.51045 -0.0981,-1.17822 0.55762,-1.24497 0.80919,-0.27226 0.16979,-1.2167 0.41764,-1.8058 0.13363,-0.52275 0.49206,-1.17814 1.13778,-1.02923 0.82108,0.1256 1.64324,0.15087 2.46899,0.18399 0.31217,0.12865 0.638,0.2295 0.93897,0.38201 z m 4.742,8.884 c 0.27323,-0.67335 0.44245,-1.51896 1.21503,-1.789 0.42648,0.65006 0.76784,-0.0116 0.97343,-0.44976 0.21883,-0.62169 1.10683,-0.37827 1.51649,-0.0895 0.46495,0.55826 1.18953,0.38317 1.82411,0.36029 0.57626,0.13284 1.15656,0.63902 1.72307,0.23983 1.10141,-0.0943 2.42858,0.35492 3.334,-0.50406 0.0183,-0.4703 0.18622,-0.82733 0.68966,-1.148 0.40642,-0.73755 0.73153,0.067 0.45094,0.5374 -0.39482,0.79931 -1.00258,1.50837 -1.63371,2.13684 -0.86095,0.0987 -1.89443,0.67114 -2.62281,-0.0498 -0.57167,-0.26411 -1.29597,-0.14752 -1.92733,-0.14838 -0.90259,0.009 -1.81177,0.019 -2.71068,-0.007 -0.77422,-0.1481 -1.74874,-0.001 -2.04776,0.8394 -0.51888,0.7184 -0.52277,1.94081 0.37505,2.35606 0.59114,0.11566 0.42151,0.899 0.91688,1.06886 0.47809,0.0461 1.08658,0.20546 1.30139,-0.365 0.28047,-0.38081 0.52192,-1.1402 1.09092,-0.68125 0.52782,0.37928 0.99412,-0.18292 1.53255,-0.21506 0.54748,0.0111 0.86416,-0.37489 1.30877,-0.53292 0.64429,-0.0252 0.71112,0.90328 0.43683,1.09804 -0.43232,-0.36061 -1.1215,-0.37316 -1.40286,0.17554 -0.37767,0.68389 -1.07463,1.0018 -1.77994,1.24441 -0.0804,0.78458 -1.11895,-0.1442 -1.0818,0.41913 0.2045,0.40157 0.79184,0.62584 1.07672,1.03736 0.44761,0.46842 0.76162,1.04201 1.14308,1.5625 -0.21464,0.6101 -0.42292,1.36625 0.19081,1.8221 0.28006,0.22293 1.12366,0.90169 0.50092,1.04928 -0.62801,-0.13343 -1.43822,0.0796 -1.48792,0.82981 -0.12222,0.39565 -1.10137,0.12569 -1.11871,-0.28275 -0.13292,-0.52319 0.55684,-1.13534 -0.0873,-1.43088 -0.36087,-0.4411 -1.07847,-0.66147 -1.21963,-1.22142 0.1873,-0.44619 0.60052,-0.94578 0.31021,-1.46422 -0.2565,-0.36522 -1.00214,-0.21362 -1.36172,0.0567 -0.7034,0.24934 -0.14011,0.78853 -0.17039,1.30817 0.22386,0.85975 -0.56067,1.74945 -0.0233,2.54832 0.42238,0.54789 -0.24557,0.97724 -0.27499,1.49994 0.58155,0.65148 -0.0974,0.63105 -0.61183,0.81056 -0.43966,0.31626 -1.10039,0.32046 -1.15127,-0.34241 -0.20108,-0.50658 0.40948,-0.95241 0.28997,-1.50103 0.0677,-0.7347 0.12747,-1.47597 -0.0157,-2.19217 0.0569,-0.66895 -0.61995,-0.75079 -1.07866,-0.50398 -0.68727,0.21269 -0.2767,-0.77892 -0.53834,-1.17487 -0.29774,-0.59109 0.2239,-1.00863 0.57075,-1.41017 0.39455,-0.55434 0.71831,-1.19486 0.51551,-1.88841 -0.0965,-0.57307 0.10402,-1.27413 0.48768,-1.64896 0.72251,0.075 0.1028,-0.85704 0.39923,-1.25304 0.058,-0.23434 0.11224,-0.47746 0.17263,-0.70652 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Philippines\"\n\t\t\t\t\t\t\td=\"m 668.05298,167.79601 c -0.52038,-0.42432 -1.01805,-0.89403 -1.13769,-1.58486 -0.4295,-0.66048 0.22533,-1.51482 -0.3783,-2.09614 0.15675,-0.77838 0.76054,0.17035 1.15802,0.32199 0.53659,-0.69694 -0.17912,-1.55504 0.24298,-2.28901 0.0806,-1.03741 -0.0134,-2.20717 0.63466,-3.07273 0.89757,-0.65963 1.7749,0.49709 2.71605,0.39452 0.29587,-0.53616 1.01682,-0.29973 0.63408,0.31011 -0.34197,0.4508 -0.22142,1.15371 -0.007,1.60841 0.51721,0.23721 0.81675,0.74413 0.45313,1.25626 -0.1372,0.73621 -0.60822,1.31659 -1.2569,1.67183 -0.44553,0.23551 -0.89608,0.44567 -0.7865,1.02765 -0.18361,0.53735 -0.41002,0.90236 0.0352,1.41702 0.34152,0.62663 0.35401,1.48708 0.81831,2.00093 0.42692,0.46579 0.8476,0.44929 1.08662,-0.1288 0.26329,-0.63654 1.23673,-0.33145 1.24379,0.29688 0.0281,0.50608 0.71037,1.04539 0.98627,0.39489 0.11198,-0.46916 1.32056,0.0559 0.88528,0.33304 -0.80827,0.12395 -0.45744,0.68213 -0.0468,1.0742 0.6485,0.44 0.15647,0.92393 -0.42207,0.52991 -0.69085,0.0519 -0.41543,-0.75819 -0.92364,-1.02848 -0.46964,-0.34018 -0.88051,-0.95744 -1.47745,-0.99362 -0.29668,0.36691 0.64011,1.15815 -0.007,1.22018 -0.45351,-0.56689 -1.05211,-1.03885 -1.73695,-1.25389 -0.57005,-0.0937 -0.71175,0.63154 -1.28125,0.5357 -0.38573,-0.33454 -0.98987,-0.45417 -1.10803,-1.014 0.39854,-0.54896 0.74182,-0.62583 1.30901,-0.31582 0.8443,-0.18816 -0.0833,-0.54073 -0.45201,-0.66018 -0.26774,-0.32789 -1.05055,-0.90816 -1.10674,-0.14965 -0.0236,0.0634 -0.0539,0.13187 -0.0753,0.19366 z m 1.62305,5.17799 c -0.54938,-0.34778 -0.91312,-0.86564 -1.01761,-1.50674 0.13736,-0.47097 -0.94632,-1.12296 -0.39185,-1.15074 0.63336,-0.0131 1.56732,-0.25673 1.83211,0.52513 0.1364,0.62144 0.11282,1.34379 -0.30881,1.85905 -0.036,0.0886 -0.0828,0.19018 -0.11384,0.2733 z m 9.39697,2.394 c -0.41439,-0.15966 -0.93282,-0.48899 -1.0073,-0.89921 0.34424,-0.55333 -0.2699,-0.89296 -0.67964,-1.13596 -0.42285,-0.14178 -1.03664,-0.98033 -0.22901,-0.92583 0.5812,-0.0547 1.43035,-0.41726 1.71774,0.31931 0.11759,0.81517 0.14441,1.67852 0.47921,2.45669 -0.0677,0.10737 -0.15878,0.15915 -0.281,0.185 z m -7.66699,1.45601 c 0.0799,-0.95686 0.27029,-1.90265 0.26898,-2.86701 0.52667,0.52289 1.29996,0.9287 2.02105,0.52977 0.19238,0.40396 -0.0357,0.99701 -0.43649,1.2875 -0.5669,0.45383 -1.16449,0.81839 -1.85354,1.04974 z m -6.685,0.98799 c -0.83424,0.022 0.21876,-0.55312 0.31714,-0.89826 0.45447,-0.50514 0.0633,-1.4697 0.77087,-1.74374 0.0401,0.42936 0.14002,0.92946 0.41228,1.43185 0.0299,0.49433 -0.87796,0.51109 -1.11128,0.97317 -0.12606,0.0836 -0.25983,0.15806 -0.38901,0.23698 z m 9.06,2.169 c -0.386,-0.54976 -1.31132,-0.71298 -1.39593,-1.4228 0.0704,-0.54846 1.02084,-0.39324 0.95266,-1.10754 0.18233,-0.48413 0.19511,-1.11582 0.47708,-1.51323 0.47354,-0.43096 1.05805,0.12362 0.65376,0.61416 -0.32177,0.71608 -0.5657,1.53498 -0.5983,2.29302 0.24803,0.35495 0.54328,1.03092 -0.0893,1.13639 z m -12.60199,1.327 c -0.66883,0.002 0.14833,-0.84471 0.36843,-1.11281 0.65889,-0.5501 1.48504,-0.92381 1.97081,-1.67343 0.38734,-0.81881 0.65083,-0.13625 0.42744,0.41061 -0.19195,0.5763 -0.92601,0.57684 -1.25012,0.98535 -0.0926,0.5782 -0.57532,0.91037 -1.1296,0.97928 -0.129,0.13699 -0.25793,0.27405 -0.38696,0.411 z m 19.49896,4.09399 c -0.39041,-0.24791 -0.33983,-0.9049 -0.65997,-1.28399 -0.52395,-0.30265 -0.6627,0.64349 -0.89279,0.9839 -0.36893,0.47245 0.36904,0.84809 0.3227,1.3675 0.22434,0.52487 -0.11641,1.03231 -0.44993,1.4206 -0.68072,-0.28309 -0.23431,-0.76931 -0.35596,-1.256 -0.61497,-0.42185 -0.48616,0.9729 -1.05236,0.45269 -0.81632,-0.39782 -1.83104,-0.98257 -1.74752,-2.03319 -0.0308,-0.56018 0.69393,-0.98887 0.34688,-1.5755 -0.39684,-0.39229 -0.96292,-0.75567 -1.53601,-0.661 -0.13174,0.60076 -0.83203,0.70302 -1.35199,0.709 0.19284,-0.64333 -0.49491,-0.95943 -0.72383,-0.29895 -0.26954,0.54753 -0.58271,1.07038 -0.9052,1.58795 -0.73527,-0.20905 -0.15266,-1.03947 0.041,-1.468 0.0801,-0.69248 0.72322,-1.12178 1.39496,-1.048 0.35533,-0.33857 0.45992,-0.92245 1.10706,-0.98999 0.52196,-0.19334 1.16392,-0.071 1.11881,0.60388 -0.10693,0.63152 0.77688,0.13627 1.06118,-0.0299 0.07,-0.60069 0.60359,-1.03656 1.12498,-0.57343 0.38595,-9.1e-4 -0.0758,-1.21113 0.553,-1.05457 0.28096,0.9915 0.42271,-0.26674 0.95639,-0.1149 0.6116,0.10742 0.27675,-0.93714 0.17501,-1.30303 -0.0665,-0.92699 0.46633,0.0239 0.7522,0.32301 0.4563,0.46384 1.05622,1.18799 0.56578,1.82576 -0.42971,0.7894 0.89709,0.0454 0.72246,0.72596 -0.16488,0.56881 -0.08,1.18491 0.16175,1.71505 0.0579,0.73302 -0.42673,1.34649 -0.72861,1.97514 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Nouvelle Guinee\"\n\t\t\t\t\t\t\td=\"m 732.91998,214.323 c -0.21123,-0.43977 -0.77389,-0.73029 -1.18396,-0.36501 -0.356,-0.51704 -0.99966,-0.605 -1.47171,-0.92659 -0.29006,-0.55797 0.71885,-0.28187 1.0607,-0.4004 0.66254,0.12534 1.47479,0.41203 2.06201,-0.034 0.17733,-0.91707 0.46023,-0.0388 0.92499,0.16901 0.67547,-0.0298 1.60519,-0.0974 1.80641,-0.88982 0.14559,-0.658 0.86012,-0.33978 1.27959,-0.6142 0.15128,-0.40354 -0.19843,-1.14786 0.0156,-1.35028 0.49568,0.56853 1.07918,-0.27749 1.2689,0.0988 0.3585,0.41918 0.26678,0.95305 -0.0285,1.37646 -0.695,-0.14818 -0.81313,0.52606 -0.2477,0.83383 0.0934,0.4753 -0.70221,0.6598 -1.11239,0.48304 -0.61721,-0.23033 -0.65738,0.42738 -1.0389,0.75114 -0.80594,0.44621 -1.67794,0.82616 -2.61798,0.76654 -0.23747,0.0334 -0.4865,0.0703 -0.71704,0.10146 z m -19.125,6.373 c -0.0384,-1.46805 0.1414,-2.96006 -0.0684,-4.41248 -0.0761,-0.53193 -0.60377,-1.10605 -0.16798,-1.59018 0.45006,-0.67267 0.11358,-1.53376 0.19077,-2.29575 -0.0431,-2.03353 -0.0863,-4.06706 -0.12942,-6.10059 1.41869,0.39943 2.79586,0.92221 4.20032,1.35722 0.89584,0.22706 1.76692,0.51034 2.52988,1.04461 0.41043,0.36796 1.06871,0.24906 1.4733,0.34526 0.36767,1.00717 1.65664,1.05246 2.27281,1.85141 0.66867,0.32586 -0.11235,0.95227 0.0547,1.46951 0.44768,0.40677 1.12717,0.26154 1.626,0.61059 0.67641,0.32348 1.36431,0.55914 2.10167,0.67173 0.44032,0.18364 0.73614,0.73223 0.91904,1.17459 0.23217,0.61272 -0.82513,0.30543 -1.19072,0.43109 -0.68006,-0.0392 -0.82795,0.59443 -0.38636,1.03147 0.44616,1.01611 1.46511,1.51894 2.32539,2.12652 0.0993,0.74634 0.5205,1.40284 1.02279,1.93007 0.47844,0.30108 1.17056,-0.20084 1.59793,0.0953 -0.13672,0.43047 -0.48952,0.94612 0.31623,1.02067 0.32061,0.01 1.5164,0.15917 0.94923,0.53349 -0.92948,0.12049 0.0563,0.54974 0.49518,0.5784 0.54171,0.0967 1.07084,0.38198 1.0977,0.98849 0.22387,0.65616 -0.82215,0.35361 -1.17831,0.33089 -0.2103,-0.53078 -0.56623,-0.82941 -1.20963,-0.75454 -0.94727,-0.16968 -1.87351,-0.52292 -2.85276,-0.4057 -0.76247,0.0457 -1.69199,-0.29256 -1.88637,-1.10503 -0.44044,-0.561 -1.36713,-0.53417 -1.67264,-1.26014 -0.52144,-0.76833 -1.02841,-1.54699 -1.60238,-2.27785 -0.93665,-0.12637 -1.88108,-0.32156 -2.7374,-0.71085 -0.55129,-0.23953 -1.08495,0.49938 -1.57844,0.0322 -0.80302,-0.61198 -0.16,0.2063 -0.21258,0.66587 -0.32956,0.15196 -1.33107,-0.19301 -0.6506,0.47573 -0.50238,0.25718 -1.19902,0.14726 -1.76692,0.0587 -0.46291,-0.11455 -1.38704,-0.14644 -0.52773,0.21728 0.75205,0.1818 1.60858,0.50687 1.94266,1.26405 -0.75559,0.28305 -1.41094,1.06882 -2.276,0.74 -1.00874,-0.019 -2.01679,-0.0299 -3.021,-0.132 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Extreme orient\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Mongolie\"\n\t\t\t\t\t\t\td=\"m 660.04401,89.132004 c -0.70785,0.808123 -1.10317,1.849621 -1.73527,2.722605 -0.24179,0.480842 -0.69301,0.930572 -0.82455,1.417972 0.0417,0.661071 0.45796,1.000972 1.04365,0.561586 0.65741,-0.323896 1.45999,-0.362888 2.16717,-0.216171 0.33462,0.551385 0.90038,0.558723 1.31627,0.09448 0.40593,-0.390581 0.93962,-0.512561 1.46881,-0.297538 1.13864,0.153417 2.03932,0.91418 2.70894,1.802062 0.40108,0.221677 1.01035,0.855965 0.30413,1.115188 -0.46198,0.135452 -1.01386,-0.144515 -1.53061,-0.03981 -1.30839,-0.285136 -2.6314,0.178804 -3.85686,0.619554 -0.43212,0.307369 -1.00318,-0.193354 -1.46622,0.171194 -0.84131,0.19465 -0.59635,1.341292 -1.37584,1.593848 -0.89731,0.516452 -1.94246,0.437341 -2.93264,0.364021 -0.84929,0.586662 -1.63814,1.524515 -2.76682,1.390445 -0.75659,0.0606 -1.53556,-0.022 -2.15316,-0.502444 -0.67056,-0.294328 -1.44544,-0.06739 -1.85092,0.543274 -0.43618,0.3573 -0.54334,0.9899 -0.0892,1.37979 0.19181,0.37872 1.11833,0.50952 0.75215,1.03893 -0.61053,0.55597 -1.58019,0.33234 -2.20571,0.90788 -0.68233,0.57455 -1.24944,1.3497 -2.17888,1.53398 -0.83102,0.38243 -1.72252,0.63922 -2.64144,0.44954 -1.04001,0.0136 -2.09192,0.0499 -3.12833,0.0813 -1.76878,0.48062 -3.47395,1.19852 -5.18846,1.81441 -0.58481,0.20467 -0.869,-0.45592 -1.34315,-0.50924 -0.84917,-0.008 -1.7173,0.0391 -2.5374,-0.26246 -0.9912,-0.25987 -2.01707,-0.51393 -2.81966,-1.18644 -1.22603,-0.37629 -2.54815,-0.24936 -3.81911,-0.3199 -2.12597,-0.0402 -4.27791,0.23532 -6.37256,-0.25952 -0.76142,-0.1334 -1.59608,0.0909 -2.32256,-0.13781 -1.05401,-0.63501 -1.55149,-1.85004 -2.32775,-2.76577 0.11245,-0.76026 -0.63768,-0.51245 -1.09902,-0.73038 -1.44199,-0.51074 -2.72535,-1.50135 -4.30485,-1.570392 -1.5211,-0.197993 -3.20846,0.201322 -4.57649,-0.642496 -0.56854,-0.44255 -0.0448,-0.918782 0.25782,-1.306269 0.12442,-0.48782 0.54303,-1.050739 0.44528,-1.504321 -0.6003,-0.916831 -1.20978,-1.886428 -2.02912,-2.610416 -0.79276,-0.332452 -1.69317,-0.335329 -2.48828,-0.608465 -0.79027,-0.468335 -1.79448,-0.750535 -2.30219,-1.555988 -0.15002,-0.473988 -0.70015,-1.128332 0.0696,-1.242163 0.77652,-0.573857 1.74711,-0.461769 2.64378,-0.587461 1.34591,-0.292999 2.22594,-1.57383 3.61359,-1.79185 1.26425,-0.327563 2.51928,-1.018355 3.8545,-0.682127 1.15804,0.238958 2.34798,0.192627 3.51735,0.346332 0.52017,0.438034 0.84024,1.272228 1.61324,1.246074 0.93073,0.02148 1.86422,0.04173 2.79402,0.100836 0.78103,-0.0635 1.52768,0.144278 2.25753,0.363244 0.87662,0.01168 1.74484,-0.487985 2.30853,-1.114023 0.43886,-0.600615 -0.40036,-0.775595 -0.52793,-1.270077 -0.45123,-0.496633 -0.11586,-1.008459 0.36286,-1.315283 0.50244,-0.49642 1.10023,-0.879091 1.65275,-1.315771 1.24026,0.314255 2.53119,0.340593 3.77724,0.647863 1.15019,0.13041 2.1853,0.713242 3.33275,0.855135 0.28775,0.413331 0.025,1.072546 0.50981,1.423666 0.57751,0.780172 1.61209,0.861044 2.46847,1.14676 0.92604,0.186405 1.83636,-0.292276 2.7553,-0.406171 1.21757,-0.225133 2.47343,-0.06031 3.69856,-0.0409 1.28623,0.293743 2.25287,1.357691 3.58187,1.545104 0.68788,0.298167 1.37905,0.56841 2.13615,0.644113 1.62958,0.530368 3.355,0.382219 5.03462,0.249014 1.15606,-0.149693 2.34747,-0.179284 3.46921,-0.504588 0.88492,-0.302225 1.45573,-1.149277 2.37985,-1.395876 0.71501,-0.367435 1.60529,-0.369008 2.34685,-0.09047 0.72718,0.606817 1.74639,0.92772 2.65454,0.566376 0.48204,-0.132986 1.06603,-0.226518 1.49779,0.04598 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Chine\"\n\t\t\t\t\t\t\td=\"m 643.755,159.873 c -0.58077,-0.27681 -1.16594,-0.54491 -1.729,-0.85699 0.008,-0.60336 -0.53381,-1.46302 0.15006,-1.85123 0.57666,-0.19486 0.87526,-1.03211 1.55691,-0.76378 0.057,-0.81574 0.73974,-0.41978 1.16473,-0.37492 0.3406,-0.45152 0.99917,-0.18043 1.47819,-0.41862 0.35258,0.33533 0.89444,0.79523 0.17148,1.0784 -0.43367,0.36318 -0.79538,0.93867 -0.82438,1.48445 0.29359,0.58811 -0.62795,0.63714 -0.99267,0.82919 -0.50604,0.0627 -0.68691,0.522 -0.97532,0.8735 z m -16.58203,-9.86101 c -0.49162,0.17439 -1.19068,0.49736 -0.90146,1.1396 0.0812,0.52577 0.70185,1.10637 0.24611,1.61395 -0.3928,0.29647 -1.09265,0.12114 -1.40608,-0.26408 -0.27135,-0.58355 -0.39949,-0.81166 -0.95053,-0.27046 -0.49645,0.24929 -1.18722,0.14175 -1.38181,-0.43242 -0.18784,-0.42869 -0.41227,-1.09155 -1.00222,-0.83758 -0.57419,0.19884 -1.11658,-0.34257 -0.66626,-0.85055 0.1492,-0.48607 0.59338,-0.92623 0.51025,-1.44845 -0.45,-0.25359 -1.20083,0.27497 -1.29077,-0.43378 -0.13291,-0.5639 -0.10577,-1.22021 -0.3323,-1.73005 -0.44675,-0.13628 -1.04314,-0.0319 -1.49327,0.12022 -0.31983,0.15847 -1.21054,0.80671 -1.1906,0.10806 0.38741,-0.55573 0.0411,-1.1521 -0.014,-1.75144 0.37619,-0.53858 0.73286,-1.11488 1.36237,-1.37691 0.72355,-0.51092 1.15561,-1.38801 1.32156,-2.22875 -0.0241,-0.79952 -0.0661,-1.65977 -0.27504,-2.40785 -0.38517,-0.13752 -1.09387,0.10488 -1.13614,-0.56907 -0.0648,-0.66191 -0.51708,-1.3156 -1.18551,-1.42949 -0.48489,0.14109 -0.50077,0.7358 -1.1202,0.41606 -0.5783,-0.21025 -1.21751,-0.1724 -1.789,-0.371 0.18973,-0.41389 0.8141,-0.88823 0.25737,-1.29135 -0.38277,-0.23643 -0.74429,-1.08429 -1.20996,-0.77984 -0.6086,0.30424 -1.2211,1.02681 -1.94864,0.60706 -0.49269,-0.11541 -0.95734,-0.54811 -1.42759,-0.13284 -0.74908,0.39668 -1.38172,1.01331 -2.24619,1.15496 -1.04893,0.5748 -1.6289,1.94783 -2.95458,1.97049 -0.64754,0.13631 -0.94132,0.09 -1.19828,-0.54293 -0.83491,-0.51821 -2.00261,0.1 -2.81453,-0.5168 -0.48457,-0.60671 -1.15239,0.12992 -1.55784,0.47859 -0.55087,0.51569 -0.96497,1.16229 -1.4608,1.73066 -0.29239,-0.49981 -0.12824,-1.08559 -0.21372,-1.59375 -0.42888,-0.48571 -1.054,0.2871 -1.56399,-0.055 -0.46645,0.11881 -0.86661,0.17578 -1.43475,0.15212 -0.52741,0.0964 -0.76989,-0.65528 -1.35539,-0.62032 -0.44814,0.0599 -0.63492,0.72505 -1.21301,0.11229 -0.15241,0.1544 -0.37666,0.61938 -0.57455,-0.13839 -0.32257,-0.56097 -0.84316,-0.34263 -1.37137,-0.40744 -0.87793,0.23641 0.15449,-1.13925 -0.71072,-0.60032 -0.44563,0.28307 -0.93648,-0.45586 -1.40116,-0.60324 -0.38348,-0.16529 -0.0871,-1.10364 -0.8137,-0.94625 -0.60166,0.17969 -0.86348,0.27621 -1.20241,-0.36271 -0.33436,-0.56516 -0.77803,-0.25151 -1.22323,-0.54195 -0.44503,-0.44711 -0.97006,-0.74461 -1.59302,-0.85899 0.0869,-0.72811 -0.55762,-0.70249 -1.09309,-0.78926 -0.60919,-0.0269 -0.60432,0.40727 -0.94751,0.87419 -0.51733,0.13273 -0.61702,-0.73046 -1.16437,-0.83812 -0.27764,-0.32831 -1.41162,-0.0348 -1.0771,-0.71144 -0.41426,-0.19111 -0.92455,-0.76747 -1.43289,-0.48837 -0.37501,-0.37551 -0.67223,-0.84298 -1.15503,-1.09101 -0.38102,0.61335 -1.11389,0.0423 -0.55896,-0.39698 -0.47543,-0.3758 0.0548,-0.96742 -0.60178,-1.25575 -0.36429,-0.40054 -0.43215,-1.08169 0.30084,-0.99537 0.25514,-0.023 0.40677,0.94049 0.99107,0.47993 0.35327,-0.34737 1.21148,-0.49786 0.63365,-1.06308 0.0921,-0.7175 -0.36355,-0.57026 -0.73778,-0.91774 -0.34485,-0.22667 -1.18577,-0.0135 -1.12183,-0.66095 -0.063,-0.51264 -0.21434,-1.08339 0.42279,-1.28005 -0.331,-0.46353 -0.77522,-0.79668 -1.36632,-0.75865 -0.35472,-0.27909 -0.42738,-0.92856 -0.67636,-1.34613 -0.0212,-0.7889 -0.23532,-0.58659 -0.82377,-0.73261 -0.67321,-0.26692 -1.54145,0.0828 -2.05092,-0.56457 -0.31784,-0.47564 -0.76064,-0.25077 -1.17295,-0.21519 -0.29866,-0.47126 -0.97547,-0.45729 -0.37965,-1.01885 0.13413,-0.58215 -0.45311,-1.19546 -1.03722,-1.0646 -0.70881,0.36954 -0.21765,-0.54566 -0.9884,-0.43556 -0.5157,0.0511 -0.78701,0.0903 -1.25286,-0.19287 -0.27554,-0.48418 0.75947,-0.0731 1.02924,-0.48542 0.23301,-0.42228 0.32308,-0.81096 -0.01,-1.20255 0.25567,-0.52103 -0.1656,-0.71155 -0.1851,-1.24557 -0.18479,-0.65022 -0.89556,-0.45221 -1.38888,-0.59443 -0.41064,0.43446 -1.04579,0.11392 -1.08225,-0.44545 0.40278,-0.44013 0.0293,-1.1604 0.24895,-1.71882 0.0258,-0.91437 1.14025,-1.00372 1.75031,-1.41946 0.74548,-0.27431 1.44768,-0.75643 2.244,-0.83727 0.0967,0.59687 0.52034,0.87102 1.094,0.548 0.52407,-0.0533 1.14504,-0.0835 1.33372,-0.68102 0.27133,-0.47971 0.68044,-1.20447 1.33652,-0.91421 0.98005,0.31229 2.19914,0.20196 2.84055,-0.68902 0.69959,-0.92404 1.9688,-0.89606 2.98718,-1.21915 0.50931,-0.0172 1.03288,-0.34177 0.75247,-0.90274 -0.15096,-0.54568 -0.17143,-1.18542 0.38406,-1.50567 0.40541,-0.28921 1.00754,-0.66986 0.6675,-1.23719 -0.36313,-0.53744 -0.77375,-1.09326 -0.65071,-1.77862 0.19673,-0.61743 -0.30973,-0.91946 -0.86333,-0.72738 -0.55377,-0.29759 0.20686,-0.938289 0.61998,-0.91484 1.05134,-0.09906 2.10495,-0.375878 3.13845,-0.465476 0.64093,0.174538 1.3675,0.534522 2.01885,0.270083 0.64239,-0.303951 -0.002,-0.854538 -0.36219,-1.081548 -0.1085,-0.429156 0.33841,-0.963661 0.52061,-1.395408 0.45009,-0.688527 0.59207,-1.555408 1.20932,-2.13081 1.61464,0.355517 3.29669,0.871704 4.948,0.449997 0.50602,-0.292777 0.73732,-0.853591 0.42159,-1.3775 -0.16734,-0.526556 -0.17175,-1.115123 0.28404,-1.490777 0.59764,-0.535629 1.56223,-0.02568 2.14739,-0.600718 -0.0278,-0.491102 0.0469,-1.090542 0.66786,-1.108623 0.58093,-0.176152 1.21493,-0.0066 1.79113,-0.179379 0.22812,0.786203 0.58577,1.607884 1.42083,1.89922 0.72573,0.413043 1.44571,0.896795 2.30538,0.915357 0.73236,0.185992 1.60254,0.204743 2.02577,0.937755 0.54822,0.712572 1.11063,1.422733 1.55802,2.205669 -0.3736,0.635711 -0.36715,1.492209 -1.03498,1.932998 -0.15458,0.848565 0.90975,1.091662 1.5525,1.189563 1.72088,0.256627 3.56469,-0.104858 5.1933,0.665567 1.10134,0.47134 2.13626,1.21672 3.36919,1.27187 0.0847,0.88409 0.88209,1.45849 1.3066,2.19491 0.4363,0.6793 1.10623,1.38801 1.99114,1.20756 1.53936,-0.10633 3.0237,0.4562 4.56508,0.3477 2.24184,-0.0387 4.51002,-0.14254 6.73227,0.16137 0.69167,0.20278 1.18261,0.81472 1.91858,0.93718 1.17032,0.37364 2.38468,0.74619 3.62195,0.60668 0.56685,-0.0886 0.7835,0.68577 1.38577,0.53219 0.92457,-0.21594 1.80327,-0.69026 2.72686,-0.96259 1.23821,-0.43539 2.48312,-1.02945 3.82774,-0.88704 0.95532,-0.054 1.9106,-0.065 2.86192,-0.003 0.87625,-0.0701 1.67351,-0.53411 2.48959,-0.82979 0.84211,-0.63608 1.51407,-1.63897 2.66407,-1.7185 0.41216,-0.006 1.3055,-0.40528 0.85185,-0.86779 -0.54279,-0.32242 -1.35659,-0.98216 -0.8421,-1.65887 0.40274,-0.65696 1.18215,-1.208265 1.96676,-0.850042 0.58663,0.308542 1.20556,0.632012 1.903,0.527852 0.66887,0.0202 1.35027,0.008 1.88357,-0.452307 0.60335,-0.335717 1.05335,-1.115858 1.82258,-0.91724 0.97994,0.129088 2.07484,-0.05432 2.82876,-0.729734 0.15168,-0.699074 0.6298,-1.376772 1.41032,-1.382732 0.53211,0.124962 0.9585,0.01835 1.45598,-0.222205 1.07624,-0.346352 2.22118,-0.69971 3.34941,-0.436738 0.5118,-0.09337 1.05714,0.148165 1.51751,0.05088 0.68128,-0.215914 0.20178,-0.88376 -0.22944,-1.081229 -0.66762,-0.805859 -1.44632,-1.608749 -2.52762,-1.79334 -0.5562,-0.174958 -1.18325,-0.27859 -1.62526,0.191941 -0.38864,0.347703 -0.94313,0.658571 -1.28353,0.06492 -0.51481,-0.366459 -1.25262,-0.125785 -1.84012,-0.07773 -0.39439,0.08222 -1.16772,0.758468 -1.3219,0.122501 -0.38958,-0.558194 0.10068,-0.991276 0.38196,-1.463665 0.65149,-0.974373 1.19971,-2.023803 1.84519,-2.99333 0.3691,-0.400896 0.95202,0.259728 1.38289,0.371889 0.77262,0.514943 1.67134,-0.135464 2.46825,-0.286684 0.66393,-0.23132 1.43247,-0.358097 1.98685,-0.777053 0.39134,-0.511274 -0.75872,-0.794521 -0.22095,-1.266545 0.91285,-0.898736 1.53434,-2.215193 2.85367,-2.590075 0.59034,-0.06983 0.79659,-0.705249 0.65561,-1.205067 -0.41832,-0.61578 -1.25083,-0.380567 -1.88181,-0.339734 0.34118,-0.637611 1.14347,-0.868295 1.68701,-1.319001 1.28614,-0.497616 2.69879,-0.327716 4.03542,-0.591054 1.25249,-0.153272 2.59657,-0.247831 3.72795,0.417528 0.9023,0.572834 1.93856,0.125823 2.91961,0.233524 1.01714,0.45875 1.58453,1.47704 1.98419,2.469952 0.63154,1.580676 1.66506,2.950472 2.32599,4.518569 0.41694,0.970526 1.63183,0.995456 2.51411,1.264599 1.408,0.161317 2.75359,0.652917 4.07942,1.113949 0.41365,0.539153 0.4923,1.330043 0.77518,1.967464 0.0949,0.620441 0.54027,0.848085 1.12392,0.685007 1.03451,-0.07269 2.11303,0.09531 3.07485,-0.369513 1.33998,-0.415991 2.73016,-0.757732 4.13931,-0.778025 0.46628,0.167827 0.39931,0.844547 0.44306,1.265998 -0.46362,0.465119 -1.29623,0.571378 -1.42893,1.29297 -0.4982,1.624408 -1.33042,3.174278 -2.48258,4.427805 -0.51279,0.585755 -1.26966,0.02346 -1.87606,-0.116909 -0.49316,-0.278848 -1.02364,-0.201916 -1.44158,0.16839 -0.39372,0.335324 -1.20254,0.409334 -1.09003,1.063344 0.15349,0.65787 0.47759,1.31092 0.38068,2.02278 -0.0741,0.52075 0.0288,0.94349 -0.16856,1.39862 -0.48334,0.56107 -1.2398,0.64254 -1.87396,0.95 -0.28984,-0.35409 -0.6657,-1.01041 -1.14389,-0.48933 -0.54119,0.26788 -0.29572,1.09046 -0.93622,1.22652 -0.73129,0.49052 -1.66496,0.8198 -2.50992,0.41181 -0.60547,-0.0844 -0.93297,0.627 -0.44425,1.01408 0.62885,0.51664 -0.06,0.71403 -0.57368,0.68439 -0.69427,0.0962 -1.552,-0.104 -1.89406,-0.77147 -0.56734,-0.0888 -1.01373,0.22727 -1.2288,0.73805 -0.80582,1.36556 -2.51675,1.59415 -3.79253,2.31798 -0.46336,0.17279 -0.75299,0.95716 -1.06545,1.03679 -0.92098,0.3325 -2.04835,0.17678 -2.95639,0.68885 -1.03757,0.41635 -2.11613,0.79903 -2.95189,1.5637 -0.47882,0.38238 -1.21609,0.24578 -0.45022,-0.22588 0.21865,-0.24096 1.33061,-0.83497 0.56775,-0.89857 -0.68115,0.24854 -0.8055,-0.51037 -0.17712,-0.74882 0.54266,-0.3739 0.86099,-0.95249 1.41494,-1.30965 0.3221,-0.49904 -0.50075,-0.81787 -0.84888,-1.04591 -0.68083,-0.36558 -1.60773,-0.34153 -2.10404,0.31109 -0.56438,0.5275 -1.02242,1.34491 -1.90573,1.28304 -0.73978,0.15786 -1.49904,0.60117 -1.65722,1.39637 -0.18625,0.51864 -0.79105,0.60932 -1.27142,0.54596 -0.44667,0.63147 -0.82464,0.17473 -1.17679,-0.1845 -0.83017,-0.13028 -1.01405,0.88552 -1.31222,1.4495 0.0889,0.87357 1.08601,1.05838 1.77983,1.2407 0.46231,0.0575 1.22998,-0.27759 1.40807,0.30109 0.0574,0.61578 -0.42555,1.39131 0.1791,1.85121 0.78313,0.18297 1.57522,-0.0526 2.16207,-0.59298 0.45601,-0.53439 1.19748,-0.969 1.91093,-0.80302 0.62248,0.46801 1.31984,1.00349 2.14629,0.75776 0.49125,-0.13063 0.94103,0.15601 1.42073,0.14124 -0.33274,0.30603 -0.0529,1.38365 -0.55872,1.17833 -0.9565,-0.486 -1.92758,0.17844 -2.8573,0.41367 -0.53386,0.22133 -0.86856,0.56638 -0.77899,1.175 -0.67537,0.53298 -0.54108,-0.44451 -1.07191,-0.24986 -0.40255,0.11033 0.0948,0.96969 -0.56566,1.20647 -0.50626,0.56795 -1.28353,0.88591 -1.69739,1.52339 -0.20072,0.71775 0.56997,0.62328 0.95137,0.97704 0.70679,0.49275 1.60609,0.90719 1.76796,1.85043 0.1,0.59222 0.46906,1.01372 0.91965,1.38353 0.43939,0.4197 -0.29746,1.16825 0.38052,1.36651 0.61596,0.0366 0.67719,0.74025 1.17253,0.92691 0.48379,0.0614 1.02507,0.88694 0.30702,1.02714 -0.94621,0.21899 0.20711,0.45809 0.21,1.01128 0.34722,0.46304 0.0598,1.05794 -0.54407,0.90015 -0.87794,0.19282 -1.53001,0.9035 -2.448,0.97802 -0.90749,0.24936 -0.37848,0.44462 0.26678,0.53303 0.61732,0.0731 1.24782,-0.74826 1.8551,-0.3305 0.30393,0.4366 0.74407,0.79151 1.30811,0.72045 0.0809,0.54513 -0.83621,0.61579 -0.85658,1.00646 0.6842,-0.0113 0.51903,0.34638 0.23836,0.87532 -0.23977,0.47408 -0.29584,1.00832 -0.37555,1.49801 -0.1929,0.88887 -0.75548,-0.33607 -1.00657,0.4369 -0.52254,0.61926 -0.91045,1.31877 -1.15267,2.08932 -0.52102,0.20938 -0.68722,0.73875 -1.09998,1.047 -0.49329,-0.0688 -1.25719,0.17213 -0.75814,0.75299 0.0399,0.4721 -0.24703,0.96209 -0.15992,1.49095 -0.13917,0.55965 -0.94072,0.39034 -1.00645,1.01374 -0.19492,0.53495 -0.43038,1.04021 -1.0152,1.21918 -0.25998,0.62975 -0.73809,0.42712 -1.26246,0.30444 -0.64356,0.0485 -0.15731,0.86857 -0.33477,1.17898 -0.54264,0.43577 -1.04835,0.94036 -1.78144,1.01078 -0.42123,0.27374 -0.82597,0.60843 -1.30875,0.77546 0.0974,0.63003 -0.37207,0.78346 -0.92814,0.78198 -0.52416,0.11888 -0.68222,0.76866 -1.2854,0.30456 -0.57988,-0.33769 -0.8237,0.50409 -1.3781,0.50859 -0.78084,0.42561 -0.36157,-0.68363 -1.12223,-0.32165 -0.48303,-0.0105 -0.93524,0.59561 -1.36008,0.30008 -0.27927,-0.5871 -0.79394,-0.66299 -0.64084,0.0467 0.003,0.48252 -0.0435,1.14821 -0.68011,1.14018 -0.74963,-0.58707 -0.40689,0.58818 -1.03637,0.52002 -0.59178,0.05 -1.23019,0.38559 -1.77461,-0.021 -0.45623,0.22336 -0.70354,0.86552 -1.32662,0.6275 -0.58412,-0.0893 -1.12071,0.27147 -1.57206,0.5302 -0.66498,-0.23863 -0.64412,0.0994 -0.9293,0.59103 -0.23404,0.48395 0.59559,0.79107 0.71771,1.15592 -0.25426,0.29561 -1.02938,0.65395 -1.26595,0.22881 -0.46696,-0.5976 -0.83511,-1.47236 -0.27935,-2.13758 0.43996,-0.47279 -0.71611,-0.91781 -0.86633,-0.35484 -0.43856,0.30403 -1.20032,0.0622 -1.458,-0.40978 -0.46337,-0.8694 -0.46634,0.21675 -0.91293,0.38092 -0.52515,-0.0365 -0.96083,0.0282 -1.44713,-0.14572 -0.923,-0.032 -1.85018,-0.46073 -2.39307,-1.21145 -0.36454,-0.6037 0.46377,-0.97135 0.33716,-1.53469 -0.17433,-0.6006 -0.93529,-0.15263 -1.38538,-0.30776 -0.66921,-0.0216 -1.27584,-0.31592 -1.69976,-0.83455 -0.91505,0.24568 -1.44416,1.29435 -2.47147,1.22924 -0.88717,0.14485 -1.92787,-0.17235 -2.6263,0.55385 -0.5333,0.15312 -0.92195,-0.71067 -1.51154,-0.4036 -0.29725,0.0423 -0.56958,0.20264 -0.82771,0.3075 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Japon\"\n\t\t\t\t\t\t\td=\"m 704.40399,117.274 c 0.38872,-0.0791 1.27695,-0.62599 1.34737,-0.10684 -0.18647,0.32731 -0.89692,0.48387 -0.76637,1.06884 0.0729,0.71395 0.7961,0.31036 1.06903,-0.045 0.94109,-0.42356 2.03188,-0.67438 2.78763,-1.39895 0.14592,-0.5781 0.68577,-0.74687 1.13103,-1.03299 0.58154,-0.3566 0.48154,-1.12605 1.0375,-1.50178 0.35575,-0.69052 0.86988,-1.51886 0.70485,-2.37828 -0.80896,-0.24888 -0.082,-0.64838 -0.0847,-1.11069 -0.20578,-0.59179 -0.11325,-1.00681 0.4679,-1.26217 0.2682,-0.55376 0.75695,-0.63883 0.96987,-0.01 0.26286,0.11703 1.33009,-0.046 1.10234,-0.47538 -0.0201,-0.40915 -1.25908,-0.48772 -0.37721,-0.84022 0.32774,-0.36141 1.05301,-0.0134 1.11475,0.39499 0.0561,0.50152 -0.18189,1.21372 0.19588,1.56785 0.4895,0.50515 0.75717,1.23662 1.02628,1.871 0.0872,0.77309 -0.4257,1.38754 -0.95415,1.88215 -0.30032,0.4846 -0.0386,1.0253 -0.80923,1.07027 -0.73737,0.1805 -0.86531,1.0824 -0.5958,1.68305 0.12569,0.61462 0.23987,1.36745 -0.35746,1.76887 -0.4943,0.49968 -0.71813,1.4366 -0.29055,2.03081 0.83798,0.40972 -0.10572,0.50326 -0.45008,0.84156 -0.27302,0.44444 -0.12558,1.14668 -0.85413,1.17446 -0.70449,0.52863 -0.64243,-0.30852 -0.31139,-0.72711 0.45895,-0.61735 -0.16504,-0.81196 -0.5818,-0.35777 -0.26757,0.61312 -0.86334,0.42981 -1.25752,0.79686 -0.19308,0.34592 -0.0152,1.17419 -0.67781,1.06482 -0.094,-0.39402 -0.0166,-1.2552 -0.67321,-0.7557 -0.52547,0.1824 -0.53426,1.08504 -1.18338,0.84173 -0.52353,-0.0695 -1.04253,0.0559 -1.55866,0.13015 -0.26673,-0.39814 -0.74937,-0.86016 -1.20656,-0.80991 -0.31647,0.29231 -0.6705,0.91424 0.0136,0.98191 0.85912,0.40878 -0.19809,0.62955 -0.66715,0.64395 -0.74925,0.26942 -1.02449,1.11121 -1.45687,1.71605 -0.48083,-0.32745 -1.07061,-0.43375 -1.53803,-0.772 -0.004,-0.47019 -0.48621,-1.12817 0.18814,-1.33706 0.63088,-0.23851 0.29787,-1.04152 -0.29756,-0.60203 -0.64411,0.1733 -1.3309,-0.39536 -1.93548,0.0655 -0.43848,0.38583 -0.90574,0.22618 -1.4048,0.24432 -0.77139,0.1896 -1.55475,0.33965 -2.28828,0.65426 -0.19615,-0.60387 -0.98222,-0.32906 -1.07584,0.17485 0.23612,0.90011 -0.53818,0.26862 -1.02648,0.28294 -0.5547,-0.13811 -1.17896,0.21689 -1.6807,-0.0968 -0.0353,-0.76363 0.66507,-0.56497 1.1671,-0.70793 1.16254,-0.58334 2.01337,-1.62455 3.0179,-2.43507 0.72993,-0.35185 0.61034,0.28572 1.10708,0.19203 1.45277,-0.42632 3.00601,-0.25982 4.43693,-0.78203 -0.0732,0.58493 0.50605,0.85547 0.952,0.53154 0.62163,-0.0862 0.83869,-0.57562 0.84129,-1.13381 0.31662,-0.72713 1.28054,-1.02065 1.55878,-1.75445 0.0513,-0.40559 -0.23181,-0.94419 0.12394,-1.24128 z m -8.94,10.482 c -0.70837,-0.30023 -0.53731,-1.22709 -1.15383,-1.63339 -0.25345,-0.36918 0.81527,-0.41763 0.94102,-0.86404 0.27986,-0.78725 0.6845,-0.20138 1.25495,-0.2804 0.79694,0.0668 1.11946,-1.12339 1.9482,-0.82627 0.36815,0.31675 1.06025,0.0987 1.25264,0.6051 -0.13485,0.53033 -0.53955,0.85114 -0.9307,1.2328 -0.38698,0.76266 -0.6715,-0.005 -1.20924,-0.0887 -0.62921,-0.10302 -1.24026,0.31973 -1.36748,0.95042 -0.0713,0.45637 -0.33115,0.7211 -0.73556,0.9045 z m -4.34399,3.692 c -0.83587,0.062 -0.003,-0.72819 -0.0603,-1.15425 -0.22832,-0.69385 -0.6935,0.26001 -0.8655,0.59704 -0.39296,0.60647 -0.84914,-0.37164 -0.27223,-0.63978 0.23508,-0.45409 -0.57338,-1.02847 -0.15497,-1.32601 0.38041,-0.32184 1.0107,-0.67758 0.75428,-1.26067 -0.20474,-0.41695 -0.73471,-1.16346 -1.03471,-0.42051 -0.31748,0.71282 -0.729,0.23379 -0.91304,-0.24426 -0.56152,-0.19961 -0.70384,-0.92116 0.022,-0.88656 0.57905,0.10875 1.34547,0.0691 1.57739,-0.574 0.22268,-0.43681 1.01432,-0.4547 1.3004,-0.13637 0.26992,0.57074 0.99983,0.5304 1.47963,0.27037 0.75264,0.48967 -0.85113,0.74939 -0.0379,1.01363 0.44469,0.25502 0.8851,0.80569 0.23888,1.12116 -0.85142,0.63223 -0.393,1.85789 -0.99594,2.60821 -0.52115,0.14883 -0.73682,0.63345 -1.03802,1.032 z m 20.81799,-23.079 c -0.62212,-0.37112 0.0447,-0.86986 -0.002,-1.32945 -0.26524,-0.34984 -0.99396,-0.44324 -0.85382,-1.14768 -0.0387,-0.50113 0.7699,-0.60262 1.14598,-0.8023 0.65111,-0.13234 0.69282,-0.73566 0.34833,-1.03484 0.42217,-0.66281 0.93247,0.31531 1.47476,0.26227 0.75413,-0.0243 0.49486,-0.74657 0.52836,-1.26719 0.16441,-0.3958 1.13574,-0.31275 0.94863,-0.99287 0.0863,-0.65095 0.0889,-1.31241 -0.33476,-1.85292 -0.36174,-0.561676 0.20017,-0.894448 0.65977,-1.085017 1.65505,1.453267 3.34865,3.205047 5.65419,3.468307 0.85181,0.34138 1.27833,-0.74704 2.06077,-0.81931 -0.10008,0.43648 -0.89598,0.84107 -0.48765,1.33661 0.10856,0.37048 1.01898,0.93001 0.47083,1.16467 -0.6533,0.33306 -1.43787,0.84619 -2.15517,0.37372 -1.06978,-0.0814 -1.69226,0.97013 -2.31098,1.674 -0.0633,0.70034 -0.6342,0.67165 -1.08502,0.288 -1.01831,-0.38428 -1.9598,-1.23622 -3.11279,-1.01206 -0.42963,-0.0229 -1.02806,0.89686 -1.25864,0.35578 -0.26385,-0.58049 -0.90738,-0.43228 -1.31068,-0.0865 -0.44824,0.50128 0.64691,0.61415 0.97379,0.83868 0.28551,0.16332 1.34658,0.54661 0.64858,0.78076 -0.44193,0.18454 -0.97499,-0.29633 -1.27223,0.30137 -0.20818,0.25446 -0.38653,0.55406 -0.73004,0.586 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Taiwan\"\n\t\t\t\t\t\t\td=\"m 668.62701,151.36501 c -0.26086,-0.41496 -0.56405,-0.8957 -0.90833,-1.30027 -0.53004,-0.72769 -0.78884,-1.79156 -0.32784,-2.61303 0.63583,-0.86147 1.18357,-1.818 1.90203,-2.60063 0.49301,-0.0452 0.89732,-0.75486 1.3541,-0.49308 0.81798,0.28093 0.25106,0.61168 0.1492,1.1372 0.0852,0.53723 -0.18246,0.96656 -0.44217,1.40479 0.003,1.0514 -0.43845,2.01771 -1.03456,2.85692 -0.32133,0.4441 -0.34309,0.95483 -0.46544,1.46509 -0.0749,0.0474 -0.15568,0.0953 -0.22699,0.14301 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Coree du Nord\"\n\t\t\t\t\t\t\td=\"m 685.34302,114.455 c -0.32714,0.41423 -0.70749,1.00304 -1.31661,0.71097 -0.6381,-0.08 -1.47842,-0.29786 -1.85262,0.40123 -0.30756,0.26097 -0.71413,1.10819 -1.12978,0.6218 -0.37459,0.52836 -0.84504,0.65997 -1.04069,-0.0669 -0.53715,-0.44741 -0.77415,0.64898 -1.0887,0.58674 -0.12113,-0.61205 -0.87993,-0.64185 -1.13174,-1.09036 -0.34467,-0.67348 0.53674,-1.13508 1.09725,-1.21608 0.4652,-0.48371 -0.96142,-0.43748 -0.23714,-1.05719 0.33273,-0.46389 0.51164,-1.05355 -0.22931,-1.19267 -0.49471,-0.38455 -1.08277,0.33998 -1.51327,-0.15955 -0.66203,-0.23694 -0.36435,-0.76162 0.0312,-1.10457 0.83111,-0.94053 2.20556,-1.00508 3.21061,-1.70186 0.68514,-0.35795 1.0847,-1.02906 1.48978,-1.65859 0.53398,-0.31601 0.94757,-0.0941 1.26509,0.33013 0.70042,0.44557 1.58984,0.36894 2.34489,0.11787 -0.16321,-0.44459 -0.91625,-0.98026 -0.32988,-1.39722 0.49649,-0.3051 1.05319,0.19945 1.60612,0.044 0.64423,-0.0739 1.18608,-0.51407 1.75776,-0.79677 0.1008,-0.55909 0.45937,-1.24166 1.11298,-1.201 0.39391,0.46905 0.84469,0.91839 1.044,1.512 -0.65813,0.55585 -1.8187,0.89071 -1.85766,1.88094 0.14971,0.55736 -0.2371,1.09598 -0.26929,1.66406 -1.20025,-0.0122 -1.76873,1.32015 -2.8478,1.58793 -0.84062,-0.0894 -1.69232,0.40336 -1.88047,1.25873 -0.44129,0.60482 0.47559,0.90625 0.85203,1.23063 0.32115,0.21126 0.62752,0.43812 0.91323,0.69571 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Coree de Sud\"\n\t\t\t\t\t\t\td=\"m 681.31201,116.395 c 0.71452,-0.35406 0.97649,-1.50113 1.91017,-1.31379 0.60009,-0.0601 1.39517,0.46787 1.77874,-0.22003 0.31051,-0.74818 0.79291,0.0165 1.12899,0.35826 0.57577,0.91287 1.50054,1.70358 1.67158,2.80426 -0.005,0.72136 0.0265,1.45324 -0.16148,2.1563 0.66234,0.0397 0.72968,0.25994 0.31115,0.87103 -0.33633,0.42661 -0.57363,1.26514 -1.21345,1.20598 -0.53191,-0.40747 -0.96697,0.0963 -1.31787,0.47242 -0.48859,0.0382 -0.85376,-0.49005 -1.37593,-0.14899 -0.79497,0.15949 -1.25529,1.07412 -2.09292,1.04556 -0.61947,0.68164 -0.45843,-0.20141 -0.591,-0.66256 -0.0892,-0.55785 -0.51741,-1.23133 0.0814,-1.64879 0.29576,-0.29412 0.65016,-0.98155 0.34934,-1.31755 -0.66631,-0.27656 0.0498,-1.38268 -0.78477,-1.43836 -0.96454,0.0442 0.0403,-0.44831 0.44201,-0.59674 0.43858,0.45766 1.2773,0.0867 0.7054,-0.45824 -0.34811,-0.33323 -0.58123,-0.74565 -0.84139,-1.10876 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Oceanie\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Australie\"\n\t\t\t\t\t\td=\"m 726.60498,297.24701 c -0.90622,-0.49149 -2.11797,-0.62441 -2.61267,-1.65045 -0.15661,-0.32327 -1.00646,-0.93808 -0.61403,-1.13677 0.3708,0.1817 1.11083,0.39388 0.59871,-0.27379 -0.82693,-0.79591 -1.76284,-1.68227 -1.84718,-2.89152 -0.18572,-0.79763 0.71543,-0.22693 1.10551,-0.15746 0.92099,0.19788 1.83081,0.47529 2.72444,0.74163 0.8979,0.0753 1.70285,-0.50979 2.61025,-0.31664 0.32361,-0.3559 1.00634,-0.76966 1.3671,-0.26529 0.27836,0.42273 0.23756,1.09574 0.24073,1.62717 -0.27665,0.7755 -0.861,1.4612 -0.87584,2.3251 -0.32608,0.61062 -1.19487,0.35395 -1.62439,0.88119 -0.43462,0.28019 -0.52522,1.0317 -1.07263,1.11683 z M 716.883,224.34399 c 0.53651,0.21078 0.99062,0.63751 0.94064,1.25747 0.0365,0.49445 0.0367,1.32209 0.75058,1.18053 0.5555,0.30172 -0.68518,1.08893 -0.0422,1.27493 0.94923,0.24406 0.77859,1.4028 0.86152,2.16326 0.077,0.74552 0.33785,1.52175 0.74561,2.13374 0.45783,0.49611 0.84534,-0.20734 1.29588,-0.33492 0.11511,0.60532 0.59408,0.75057 1.04271,1.05067 0.53512,0.20469 0.88105,0.51192 0.75723,1.13189 -0.0515,0.76365 0.48959,1.41302 0.30424,2.18056 -0.0794,0.54046 0.58364,0.82019 0.77423,1.31712 0.71914,0.80283 0.9309,1.95209 0.54157,2.95677 0.49903,0.53647 0.48204,1.35899 0.95902,1.87931 0.76481,0.38694 1.44708,1.02117 2.34701,1.02369 0.33651,0.74736 1.11348,1.23759 1.90535,1.36356 0.41415,0.0211 1.42034,-0.06 0.89498,0.57743 -0.48427,0.48626 0.0582,0.98482 0.54277,1.16409 0.70558,0.23688 0.65116,1.13674 0.95333,1.71053 0.35213,0.69784 0.21008,1.81344 1.1257,2.05888 0.81434,0.66041 -0.16599,-1.04896 0.43791,-0.60709 0.43016,0.33262 0.97666,0.40112 1.43098,0.65859 0.33125,0.63983 0.0612,1.47072 0.30924,2.10601 0.57697,0.52311 1.18686,1.08102 1.99373,1.18099 0.55893,0.35915 0.40642,1.37985 1.18455,1.42987 0.53118,0.2242 0.13195,1.2731 0.8581,1.31654 0.73922,0.12413 0.62084,1.09839 0.87245,1.64104 0.0951,0.71676 0.16439,1.49602 0.0162,2.20526 -0.45341,0.50029 0.0817,0.92653 0.32531,1.39067 0.49734,0.74245 0.76358,1.71434 0.59145,2.5878 -0.46427,1.08564 -0.48936,2.30477 -0.97141,3.39186 -0.37902,0.63288 0.0784,1.31143 -0.10463,1.9859 -0.0853,1.00071 -1.028,1.63071 -1.18505,2.60606 -0.32917,0.48485 -0.65238,1.03749 -1.30856,1.06205 -0.53309,0.17941 -0.83372,0.81925 -1.11208,1.27881 -0.17545,0.73212 -0.1967,1.53436 -0.78633,2.07814 -0.50008,0.38869 -0.20125,0.98818 -0.45394,1.47655 -0.25463,0.7259 -1.38197,0.72824 -1.40732,1.61268 -0.35141,1.06999 -0.40589,2.22393 -0.43768,3.32803 -0.21708,0.79611 -0.95799,1.35646 -1.78608,1.31373 -1.04401,0.15242 -2.21385,-0.0963 -3.09669,0.61953 -0.63662,0.385 -1.2767,0.83371 -1.94976,1.09343 -0.18655,0.49082 -1.14973,0.1967 -1.26498,0.39838 0.6298,0.65804 0.28113,0.53348 -0.34442,0.16772 -0.41837,-0.30318 -1.09921,-0.37161 -1.40657,-0.70589 0.13191,-0.74272 -0.76614,-1.02717 -1.25857,-1.37117 -0.3434,-0.11005 -1.52049,0.24083 -1.01492,0.54117 0.8998,0.35495 0.0839,0.43952 -0.44809,0.56884 -0.70735,0.27942 -1.36678,0.72418 -2.104,0.89801 -1.00366,-0.38645 -1.9461,-0.92217 -3.01413,-1.13462 -0.54943,-0.34477 -0.92151,0.22566 -1.37077,0.08 -1.03213,-0.22041 -1.87036,-0.89489 -2.61373,-1.60659 -0.52519,-0.20129 -0.71968,-0.77773 -0.86568,-1.25927 0.16686,-0.84949 0.0644,-1.8102 -0.6598,-2.38025 -0.49266,-0.24382 -0.0762,-1.20167 -0.62431,-1.16323 -0.58875,-0.0256 -1.03531,0.53731 -1.65059,0.50498 -0.81055,0.2174 -0.64552,-0.40675 -0.13421,-0.71817 0.21669,-0.52456 0.48961,-1.27735 -0.0404,-1.69574 -0.3952,-0.28739 -0.7211,-1.30656 -1.01701,-0.43516 -0.44159,0.51035 -0.3204,1.36553 -0.78714,1.81191 -0.53963,-0.0508 -0.96846,0.15782 -1.48326,0.22316 0.23349,-0.49439 0.24797,-1.14373 0.97862,-0.85188 0.79366,-0.27267 -0.0221,-1.22513 0.44614,-1.71236 0.27581,-0.59048 0.82995,-1.06787 0.72124,-1.78076 0.52836,-0.11083 0.81196,-0.66612 0.31889,-1.09582 -0.39572,-0.75968 -0.43753,-0.51394 -0.59141,0.14971 -0.4229,0.34301 -0.94112,0.55865 -1.13648,1.1171 -0.11706,0.6189 -0.63419,0.93818 -1.21698,1.035 -0.74228,0.45012 -1.48821,0.96883 -1.79573,1.81597 -0.20271,0.62598 -0.75236,0.94137 -0.9496,0.13776 -0.22357,-1.03893 -0.64957,-2.0373 -1.44766,-2.76571 -0.17776,-0.47136 -0.34291,-1.1944 -1.00335,-0.89178 -0.536,0.12157 -0.85889,-0.7144 -0.29865,-0.93024 -0.0538,-0.54969 -0.62652,-0.89682 -1.01941,-1.21672 -0.55152,-0.15227 -1.21018,0.32072 -1.72938,-0.11364 -0.4318,-0.2828 -0.93417,-0.62713 -1.43127,-0.25964 -0.91147,0.0673 -1.40796,-0.86041 -2.23842,-1.07379 -0.56663,-0.2729 -1.15306,0.27614 -1.76005,0.16238 -1.6538,0.13942 -3.41686,-0.14845 -4.92976,0.70222 -0.91411,0.36257 -1.89606,0.62906 -2.87524,0.72616 -1.09034,0.11073 -2.22447,-0.089 -3.24385,0.41499 -0.89842,0.40663 -1.74911,0.94345 -2.73245,1.09894 -0.8035,0.42889 -1.13599,1.41672 -1.83221,1.94638 -0.73695,0.44258 -1.64429,0.011 -2.44347,0.28909 -0.55041,0.32772 -0.94707,0.0355 -1.45837,-0.22417 -1.21157,-0.12924 -2.4289,0.2588 -3.63265,0.28709 -0.65674,-0.10806 -1.34453,0.11205 -1.6319,0.75482 -0.3119,0.72617 -1.13106,0.19686 -1.67457,0.3519 -0.43446,0.63631 -0.99982,1.2092 -1.80202,1.30218 -0.99964,0.2336 -2.05795,0.0671 -3.06284,-0.0551 -1.20832,-0.15682 -1.80694,-1.53657 -3.04218,-1.58508 -0.32048,-0.33714 -0.32323,-1.06611 -0.28601,-1.55399 0.50769,0.2206 1.11851,0.0838 1.30553,-0.48085 0.57691,-1.47779 0.64619,-3.2803 -0.29706,-4.63209 -0.66224,-1.03412 -1.31697,-2.17094 -1.18492,-3.44797 0.0506,-1.63594 -1.09829,-2.97151 -2.09455,-4.15308 0.13559,-0.57622 0.18157,-1.18337 -0.2334,-1.66273 -0.39989,-0.76782 -1.05046,-1.34334 -1.59627,-1.99073 -0.50296,-0.63523 0.13065,-0.92693 0.23067,-0.10554 0.20206,0.30263 0.94563,1.0611 1.04729,0.55399 -0.162,-0.50891 -0.2217,-1.08266 -0.73326,-1.37 -0.53488,-0.76154 0.15125,-0.53654 0.44487,0.0335 0.44631,0.35674 0.36805,1.3084 1.09229,1.21544 -0.23572,-0.56356 0.38422,-0.52532 0.23084,-1.15297 -0.62777,-1.17263 -1.89936,-2.10334 -1.80798,-3.56167 -0.0309,-0.716 0.75116,-1.19407 0.82373,-1.91661 0.12383,-0.64437 -0.0845,-1.31091 -0.27984,-1.91022 0.0163,-0.54736 0.55748,-0.90554 0.6361,-1.45251 0.38866,0.36075 0.0264,1.28055 0.65272,1.2775 0.61281,-0.12323 0.25165,-1.17266 0.88641,-1.33697 0.98785,-0.6005 2.09748,-1.01307 2.91129,-1.86896 0.68884,-0.71443 1.67584,-0.9201 2.63454,-0.86856 0.67966,0.0406 1.43852,0.0196 1.86843,-0.59834 0.58423,-0.47941 1.74273,0.10161 1.99804,-0.82049 0.27658,-0.54916 1.01248,-0.0773 1.4603,-0.0333 1.0763,0.0731 2.08874,-0.50185 3.02887,-0.96623 0.74623,-0.55576 1.30746,-1.31724 1.61836,-2.19566 0.39967,-0.49685 1.11697,-0.67175 1.45703,-1.18998 -0.004,-0.67291 -0.7164,-1.5191 -0.0189,-2.03095 0.44698,-0.44762 0.8914,-0.89713 1.1439,-1.48807 0.88663,0.42083 0.82876,1.61504 1.513,2.21401 0.27026,-0.38665 -0.0277,-1.41955 0.63397,-0.80699 0.50728,0.2576 0.64601,-0.93798 -0.008,-0.85199 -0.45656,-0.0909 -0.53076,-1.2096 0.0772,-0.96618 0.65141,-0.0778 1.18848,0.4282 1.84497,0.24816 0.93361,0.11656 0.36023,-0.1357 -0.16044,-0.43763 -0.61548,-0.0391 -0.12524,-0.80152 -0.2202,-1.20401 0.0994,-0.49559 0.7202,-0.88943 1.12306,-0.4227 0.71982,0.47209 0.21211,-0.46835 0.46259,-0.83366 0.23038,-0.48791 -0.0507,-1.12263 0.71952,-1.13247 0.52424,-0.068 1.14231,0.18444 1.22846,-0.55987 0.12656,-0.42596 0.61514,-1.13838 1.02343,-0.58128 0.25589,0.79254 0.53621,-0.37105 0.81078,-0.65097 0.23611,-0.53278 0.68765,0.67519 1.22922,0.45837 0.5533,0.19423 0.63975,0.90094 1.15251,1.18442 0.37732,0.3568 0.29455,0.98675 0.22805,1.4668 0.35198,0.47446 0.63202,-0.54893 0.89905,-0.765 0.40657,-0.25307 1.0158,-0.0447 1.48407,0.009 0.50711,0.0911 0.78124,0.61093 1.27893,0.7333 0.0192,-0.52591 0.85827,-0.89161 0.21399,-1.34101 -0.42466,-0.16623 -1.04512,-0.71247 -0.39435,-1.03619 0.60954,-0.20421 0.29662,-0.85135 0.74728,-1.12741 0.38627,-0.19077 1.02261,-0.52803 0.76595,-1.02325 0.091,-0.41084 0.32901,-1.09248 0.81205,-1.14334 0.74341,0.11345 0.71231,-0.31937 0.70258,-0.74951 0.33191,-0.58508 0.95403,-0.19044 1.39145,0.0277 0.87179,-0.19861 1.88358,0.0609 2.651,-0.45801 -0.061,-0.54438 -0.22514,-1.29395 -0.8711,-1.48969 -0.45288,0.17746 -1.07419,-0.29144 -0.30089,-0.4583 0.6525,-0.28518 0.93874,0.89953 1.60803,0.477 0.665,0.6576 1.51386,1.05306 2.43978,1.16469 0.55059,0.2318 1.06907,0.0214 1.61635,0.0127 0.20335,0.37949 0.63665,0.98352 1.11302,0.58041 0.3415,-0.46608 0.94012,-0.37421 1.33642,-0.0333 0.28202,0.33275 0.87434,0.93948 1.02304,0.18415 -0.0621,-0.82467 0.44859,-0.52867 0.80261,-0.12253 0.85552,0.1592 -0.25539,0.64005 -0.21499,1.13133 -0.17657,0.46371 -0.12974,1.03654 -0.84438,0.88789 -0.48625,0.16193 -0.99232,0.50464 -0.82886,1.08274 0.50721,0.326 0.17368,0.9512 -0.0811,1.34203 -0.24223,0.49902 -1.07223,0.75392 -0.83691,1.41397 0.78373,0.79451 1.9387,1.13643 2.60241,2.07345 0.29141,0.6534 0.95489,0.0137 1.40569,0.42343 0.97336,0.30774 1.56543,1.16869 2.39602,1.68862 0.56109,0.25862 1.48585,-0.002 1.78676,0.65616 0.14158,0.80685 1.07488,1.00625 1.67859,1.37984 0.66678,0.31806 1.33927,-0.16433 1.96162,-0.36481 0.62185,-0.78635 1.05756,-1.77108 1.30192,-2.75348 0.0882,-0.90151 0.27887,-1.81328 0.85704,-2.53821 -0.0506,-0.58647 -0.82021,-0.99484 -0.42541,-1.60595 0.24398,-0.51349 0.4252,-0.99327 0.017,-1.47153 0.0157,-0.59142 0.0708,-1.2637 0.21207,-1.83935 0.34333,-0.32693 0.98513,-0.67486 0.27676,-1.06545 -0.3974,-0.39262 0.33309,-0.88162 0.45658,-1.29372 0.22032,-0.56987 0.38566,-1.15113 0.38397,-1.767 0.14348,-0.19406 0.30685,-0.3707 0.47602,-0.54201 z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Nouvelle-zelande\"\n\t\t\t\t\t\td=\"m 790.15002,283.022 c 0.65564,0.34619 0.96183,0.0694 0.50397,-0.55401 0.0641,-0.674 0.93804,0.027 0.94889,0.45793 0.30498,0.4333 0.10563,1.26257 0.79086,1.30537 0.89066,0.24288 1.74032,0.94175 2.69024,0.7537 0.59382,-0.40557 1.31505,-0.96244 2.06295,-0.7582 0.58301,0.23354 0.21073,1.02168 0.0742,1.45715 0.002,0.69424 -0.64578,0.67498 -1.1739,0.68607 -0.0357,0.44558 -0.10822,1.0881 -0.81291,0.8758 -0.53094,-0.0785 -1.44908,0.19693 -1.2303,0.8802 0.42096,0.47149 0.22827,1.01659 -0.31589,1.2693 -1.13422,1.02797 -1.76182,2.6681 -3.29415,3.21879 -0.43314,0.0307 -0.91748,-0.38196 -1.15998,-0.75811 0.067,-0.51132 0.52416,-0.86205 0.651,-1.371 0.50099,-0.37233 0.49945,-0.93328 -0.11572,-1.1329 -0.81539,-0.84566 -2.24669,-0.70903 -2.95929,-1.66709 0.44993,-0.35718 1.0994,-0.52381 1.6156,-0.83518 0.61269,-0.19861 0.4334,-0.94343 0.42828,-1.42741 0.14844,-0.45106 0.80774,-0.85535 0.31374,-1.35838 -0.50002,-0.422 -0.0345,-1.03444 -0.43204,-1.47873 -0.30477,-0.44308 -0.64846,-0.85551 -1.00059,-1.26129 0.23542,-0.42968 -0.37859,-0.8814 -0.74744,-1.05056 -0.6768,-0.26839 0.82445,0.76521 0.28143,0.76955 -0.60985,-0.76007 -1.20395,-1.53674 -1.87597,-2.24399 -0.32608,-0.33713 -0.14746,-0.82276 -0.45899,-1.23901 -0.29277,-0.40723 -1.09778,-0.84571 -0.18184,-0.65313 0.69104,-0.27962 0.0305,0.5231 0.54832,0.789 0.35616,0.52846 0.62657,0.0424 1.08598,0.39385 0.43017,0.1871 1.03784,0.2314 1.0997,0.69523 0.50783,-0.48524 0.39794,0.34912 0.8818,0.54906 0.29623,0.2234 0.0694,0.79081 -0.34361,0.56091 0.36313,0.38781 1.08368,0.63523 1.05461,1.26109 -0.78053,-0.16951 0.80577,0.84837 0.038,0.67898 -1.02053,-0.0847 0.25986,0.22186 0.12326,0.56145 0.30484,0.17933 1.09754,-0.0863 0.77872,0.56355 -0.0774,0.0187 0.18983,0.043 0.13104,0.062 z m -7.21099,14.672 c -0.34859,0.27528 -0.86109,0.42994 -1.27704,0.677 -0.13335,0.60386 -1.34401,-0.41306 -0.948,0.30399 0.5585,0.24278 0.32911,0.95388 0.15954,1.2505 -0.32165,-0.0626 -1.60578,-0.29372 -0.71994,0.0709 0.79201,0.15526 0.17039,0.68984 0.008,1.15061 -0.28885,0.56682 -0.40732,1.27376 -1.10252,1.48466 -0.4934,0.18336 -0.72253,0.69587 -1.27872,0.78265 -0.46031,0.21441 -0.86,0.69113 -1.41984,0.4306 -0.50581,-0.12852 -1.01131,-0.2714 -1.52385,-0.088 -0.4594,-0.51436 -1.13407,-0.55306 -1.76996,-0.66599 -0.18253,-0.63059 -0.83202,-0.32839 -1.10743,-0.0745 -0.49977,0.12849 -1.06052,-0.0624 -1.41337,-0.34574 0.33985,-0.19792 0.0291,-0.59737 0.79381,-0.54974 -0.85968,-0.70949 0.0685,-0.2634 0.31224,-0.28519 -0.65157,-0.50146 -0.23157,-0.80776 0.41404,-0.53616 0.8259,0.103 -0.53966,-0.66792 0.10665,-0.96146 0.48594,-0.23686 0.87298,-0.5798 1.29352,-0.92571 0.36407,-0.37033 0.66578,-0.76213 1.21434,-0.96739 0.85338,-0.29621 1.79346,-0.44521 2.51419,-1.05309 0.46541,-0.10863 1.00623,-0.45839 1.12484,-0.93503 0.41508,-0.41845 1.0303,-0.28214 1.51137,-0.60554 0.56296,-0.16095 0.85107,-0.62962 1.14818,-0.97133 0.72676,-0.16509 0.23455,-0.74114 0.50934,-1.20036 0.18214,-0.39681 0.70895,-0.36129 1.13103,-0.68316 0.91887,-0.31686 0.25859,-1.5215 0.91189,-2.04593 0.21381,-0.57455 1.0237,-0.16948 1.0928,0.18792 0.73381,0.0167 0.36495,1.0606 0.97954,1.27143 0.53451,-0.33225 1.09111,-0.93146 1.766,-0.561 0.4643,0.46236 -0.24586,0.93252 0.32397,1.328 0.19639,0.52431 -0.5974,0.753 -0.73885,1.22786 -0.72716,0.63692 -1.47202,1.32731 -2.34407,1.76171 -0.32508,0.32493 -1.24431,0.54649 -0.455,0.98227 0.49719,-0.0119 1.25845,0.51257 0.34413,0.52131 -0.49368,-0.0416 -0.9433,-0.44631 -1.45435,-0.024 0.15831,-0.076 -0.14944,0.069 -0.1068,0.0479 z\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Amerique\">\n\t\t\t\t\t<g id=\"Amerique du Nord\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Canada\"\n\t\t\t\t\t\t\td=\"m 105.98,81.688004 c -0.4756,-0.476142 -1.29968,-0.844437 -1.174,-1.644005 0.42269,-0.185986 1.02711,-0.07061 1.50822,0.0521 0.31617,-0.0201 1.32515,-0.15567 1.03541,0.348776 -0.37805,0.368349 -0.0718,1.213197 -0.83534,1.046371 -0.18272,0.03938 -0.35984,0.136788 -0.53429,0.196754 z M 125.24,92.375 c -0.96953,-0.233133 -2.02253,-0.37244 -2.875,-0.896004 0.42688,-0.605227 0.46666,-0.756838 -0.36264,-0.653436 -0.46514,0.116325 -0.88765,0.381379 -1.35136,-0.01156 0.4337,-0.530465 -0.30187,-0.849738 -0.7665,-0.820654 -0.92256,0.12348 -0.49037,-0.535149 -0.70234,-0.745432 -0.45264,-0.388217 -0.9387,-0.369242 -1.46896,-0.325315 -0.88865,-0.373537 -1.70222,-0.97406 -2.46435,-1.560602 -0.22221,-0.428236 0.89158,-0.304178 1.22115,-0.298996 1.50513,0.506851 3.04641,0.897856 4.63727,0.993198 0.67971,0.286985 1.19424,0.890194 1.58736,1.503811 0.6566,0.851069 1.93117,0.681167 2.682,1.362994 0.24887,0.428636 0.83965,1.021268 0.26937,1.436994 -0.13431,0.0046 -0.27578,0.01214 -0.406,0.015 z m 146.139,-0.286003 c -0.36779,-0.166565 -1.61183,-0.02813 -0.91181,-0.566367 0.26114,-0.484495 0.75127,-0.625729 1.25434,-0.50963 0.88785,-0.290078 -0.42408,-0.633676 -0.25623,-1.083153 0.76119,-1.471589 1.97396,-2.662948 3.26144,-3.679347 0.70178,-0.540947 1.61826,-0.686667 2.46762,-0.704766 0.59695,0.468162 -0.50508,0.493448 -0.81209,0.599851 0.25725,0.347773 0.19403,0.780594 -0.35521,1.125834 -0.56055,0.686866 -1.26252,1.28825 -1.63405,2.10558 0.13454,0.663146 0.86825,-0.04589 1.05929,-0.35416 0.46091,-0.50077 1.10219,-0.0738 1.64771,0.02816 -0.30453,0.299178 -1.3373,0.731543 -0.4655,0.943295 0.73862,0.241958 1.4308,0.735573 2.24049,0.553699 0.34529,-0.737162 1.25057,-0.412076 1.86983,-0.283364 0.50195,0.0948 1.29884,0.322246 0.47647,0.692507 -0.32235,0.291964 -1.32363,0.536474 -0.5913,0.938864 0.37935,0.506879 0.91651,0.354835 1.41037,0.142058 0.79473,-0.220702 0.37388,0.615435 -0.12698,0.71135 -0.32393,0.103731 -1.4296,-0.0177 -0.8594,0.534336 0.11942,0.508148 0.48925,0.945831 0.84932,0.338866 0.70651,-0.28728 0.50134,0.384628 0.68269,0.793386 0.61828,-0.08675 1.0757,0.07005 0.58439,0.685916 -0.23032,0.351062 -0.27934,1.315461 -0.83583,1.04932 -0.55436,-0.02147 -1.13219,-0.207131 -0.96361,-0.876892 -0.2346,0.09257 -0.97249,0.777339 -1.07194,0.116655 0.33699,-0.369295 0.80887,-0.93581 0.21437,-1.318369 -0.41396,-0.563994 -0.74846,0.286551 -1.16039,0.427158 -0.57799,0.197397 -1.06963,0.526628 -1.48269,0.974842 -0.38119,0.371887 -1.11198,0.396052 -1.49392,0.05605 0.24103,-0.394681 1.03075,-0.339807 1.4218,-0.649959 0.0521,-0.416705 1.36277,-0.780339 0.7767,-0.867094 -0.4952,-0.07187 -1.14632,-0.346859 -1.34182,0.300346 -0.82436,0.41408 -0.23387,-0.836826 -0.87536,-0.603457 -0.554,-0.127522 -0.67885,0.711262 -1.31476,0.531676 -1.55167,0.134459 -3.06582,-0.478661 -4.62206,-0.25024 -0.47307,-0.0938 -1.12657,0.381788 -1.4489,-0.02795 -0.51936,-0.56356 0.27934,-0.803714 0.68834,-1.058333 0.53889,-0.365479 1.17254,-0.467194 1.71868,-0.816667 z m -5.944,6.566002 c -0.74412,0.03927 -1.51671,-0.654844 -1.27021,-1.422572 0.33315,-0.548262 0.94815,-0.965338 1.34422,-1.504948 0.13593,-0.658219 1.20296,-0.10467 1.03997,0.18611 -0.42862,0.353046 -0.2835,1.129892 -0.94382,1.254228 -0.49736,0.132298 -1.08121,0.846394 -0.26321,0.949925 0.50263,-0.05895 0.77444,-0.707894 1.30066,-0.836767 0.38823,-0.335009 1.27479,0.307914 0.86491,0.719611 -0.57894,0.391403 -1.37932,0.658751 -2.07252,0.654413 z M 211.34,59.676998 c -0.85344,0.205059 -0.59945,-0.456403 -0.67844,-0.976994 -0.39273,-0.536098 -1.07431,-0.02688 -1.61933,-0.06993 -0.67408,0.08231 -1.34815,0.164615 -2.02223,0.246922 -0.002,-0.736562 0.89772,-0.787683 1.42379,-1.022249 0.58949,-0.155178 1.12419,-0.272101 0.56401,-0.86703 -0.19306,-0.72495 0.34395,-1.436289 0.74758,-2.00376 0.29419,-0.353329 0.34024,-1.106879 0.77377,-1.221599 0.32561,0.285361 1.39639,0.357598 0.80164,0.906187 -0.0345,0.343166 0.92706,0.675272 1.29303,0.502992 0.27164,-0.625378 0.94468,-0.302788 1.43236,-0.139598 0.9256,0.351445 1.73068,1.01688 2.75327,1.104689 0.65881,0.204853 1.53216,0.146035 1.91955,0.821369 -0.0911,0.537864 -0.2303,1.167756 0.53727,0.961934 1.0762,-0.160364 2.17318,0.06443 3.13572,0.560066 -0.62127,0.01813 -1.03806,0.671719 -1.68046,0.468191 -0.84376,-0.102342 -1.69729,-0.198517 -2.5383,-0.319317 -0.67966,-0.222059 -1.10416,-0.995111 -1.88488,-1.030697 -0.40732,-0.121821 -1.38229,-0.357788 -1.26493,0.322218 0.42181,0.7244 -0.63498,0.525926 -1.06069,0.643271 -0.66905,0.14223 -1.13328,0.842263 -1.86093,0.91485 -0.25727,0.06616 -0.51454,0.132321 -0.7718,0.198482 z M 200.125,19.1 c -0.65884,0.03042 -1.30397,-0.07904 -1.94701,-0.210001 -0.50952,-0.602546 -0.12806,-0.838296 0.51101,-0.967998 2.17195,-0.184429 4.35947,-0.138052 6.52934,-0.347725 0.95755,-0.133508 1.88625,0.203144 2.81912,0.284253 0.51428,-0.117081 0.80107,-0.653214 1.40169,-0.603422 1.42644,-0.336524 2.90336,-0.211784 4.34285,-0.02411 2.10617,-0.0238 4.19604,0.247874 6.28369,0.482416 0.87314,0.0089 1.75415,0.194543 2.61368,0.197876 0.8378,-0.199149 -0.54771,-0.322932 -0.82904,-0.484145 -0.91745,-0.269598 -1.91993,-0.279937 -2.72533,-0.851148 0.52127,-0.504157 1.35487,-0.220735 2.00085,-0.467496 1.49522,-0.334358 3.04819,-0.283064 4.56714,-0.470504 1.89198,0.167134 3.86041,0.125242 5.6146,0.956506 0.42957,0.406027 1.20474,-0.312861 0.42884,-0.448457 -0.34917,-0.291687 -1.18901,-0.433263 -1.31487,-0.631592 0.63642,-0.413465 1.42537,-0.03697 2.13487,-0.06312 1.15223,0.166814 2.33406,0.106846 3.4762,0.285685 0.58776,0.131275 1.15172,0.403493 1.76037,0.410975 -0.105,-0.628293 -0.32523,-0.870028 0.56064,-0.735797 1.2275,0.01389 2.50809,-0.113526 3.63252,0.48102 0.32128,0.226169 1.38361,0.355387 0.89108,-0.242201 -0.58788,-0.549049 0.59164,-0.307606 0.93513,-0.389782 2.19889,0.204126 4.39436,0.51053 6.59497,0.654171 1.98898,-0.07047 3.99377,-0.135272 5.97569,0.05423 1.13195,0.119541 2.27261,0.163054 3.39251,0.394371 1.06993,0.125463 2.16819,-0.02065 3.19348,0.387849 0.53855,0.264871 -0.6642,0.576703 -1.02929,0.507634 -0.88217,0.11897 -1.70989,0.5173 -2.61926,0.500055 -1.81947,0.210117 -3.64115,-0.239496 -5.4679,-0.119247 -1.16083,-0.008 -2.30056,0.276071 -3.46457,0.311694 -0.72792,0.358197 -0.53304,0.6202 0.153,0.831001 1.26757,0.176131 2.51229,-0.185664 3.76246,-0.275918 0.37541,-0.08299 1.39949,0.281726 1.18449,0.547695 -1.66981,0.155949 -3.3229,0.481813 -4.94231,0.932088 -1.29917,0.34169 -2.64402,0.468495 -3.90702,0.95149 -0.87865,0.306302 -1.83644,0.09317 -2.75163,0.159644 0.19441,0.401763 1.04708,0.986593 0.20101,1.099001 -1.19209,0.225821 -2.37353,0.573963 -3.59795,0.423573 -1.43982,0.01225 -2.84719,-0.352562 -4.28885,-0.364425 -0.30959,-0.189925 -1.58593,0.221652 -1.01576,0.356908 0.77785,0.208648 1.5557,0.417296 2.33356,0.625943 -1.04106,0.263602 -2.12834,0.02951 -3.19249,0.13049 -1.66353,0.05752 -3.31409,-0.325326 -4.98,-0.147362 -0.62359,-0.219979 -0.75634,1.048947 -0.0133,0.628497 1.48611,-0.162642 2.98952,0.06513 4.44482,0.345794 0.51001,0.143849 0.38683,1.09544 -0.25983,0.958397 -0.62254,-0.07049 -1.00584,0.269323 -1.28124,0.794183 -0.5326,0.03705 -1.08698,-0.0062 -1.60239,-0.0014 -0.84352,0.262932 0.71738,0.558585 0.65331,0.677398 -1.07668,0.257058 -2.24066,0.187685 -3.34678,0.08308 -0.45079,0.0056 -1.24121,-0.26464 -1.47226,0.04777 0.33451,0.434985 0.55774,1.066423 -0.19788,1.159976 -1.15452,0.445887 -2.40207,0.01973 -3.60232,0.05236 -1.30085,0.0274 -2.66538,-0.617921 -3.8991,0.03981 -0.97379,0.276387 -0.32255,0.322912 0.32805,0.369529 1.98307,0.185676 3.98437,0.216382 5.96321,0.472959 0.86716,0.08528 1.82442,-0.187756 2.57216,0.37249 0.22527,0.570418 -0.66193,0.623132 -1.03882,0.774649 -1.56126,0.157446 -3.13302,0.270006 -4.66646,0.604594 -0.55564,0.07495 -1.12993,0.129162 -1.54345,-0.326294 -0.38545,-0.42238 -0.83004,-0.620996 -1.39597,-0.487667 -0.65154,0.04428 -1.27077,-0.212411 -1.9063,-0.317281 0.39604,0.692249 0.233,0.757194 -0.55844,0.668374 -1.18393,-0.0046 -2.39469,-0.08119 -3.44862,-0.675536 -0.48156,-0.368197 -1.28787,-0.287013 -0.5676,0.309301 0.41484,0.490749 -0.67977,0.456319 -0.99102,0.513241 -1.67779,-0.189702 -3.38338,-0.01381 -5.05022,-0.258101 -0.61467,-0.171129 -1.22222,-0.371457 -1.85309,-0.47628 -0.18177,0.613699 -0.89982,0.668047 -1.42643,0.51491 -0.35095,-0.20213 -1.43541,0.06222 -1.24696,-0.482934 0.0436,-0.781009 0.9261,-0.552 1.46103,-0.645332 0.63962,-0.03966 1.20132,-0.420375 1.85779,-0.43506 0.58962,-0.05961 1.21378,0.148152 1.76455,-0.151585 -0.76413,-0.23087 -1.4617,-0.596968 -2.11599,-1.050998 0.28607,-0.450928 1.02646,-0.198079 1.50798,-0.244275 1.31235,0.05123 2.69439,0.01238 3.85568,0.725532 1.63316,0.605732 3.4468,0.635929 5.15334,0.361741 0.27629,-0.570723 0.89052,-0.617863 -0.11079,-0.571763 -1.11385,-0.02317 -2.23915,0.09219 -3.33321,-0.170236 -0.34385,-0.565507 0.33669,-1.197165 -0.47604,-1.050695 -1.23374,-0.05966 -2.47761,-0.315831 -3.70826,-0.210915 -0.67269,0.336343 -0.21944,-0.910477 0.23651,-0.882131 1.33431,-0.766158 2.93802,-0.474322 4.40923,-0.500677 1.74903,-0.02781 3.44893,0.424494 5.18856,0.516418 0.50941,-0.235335 1.07396,-0.159279 1.618,-0.198999 -1.76069,-0.431161 -3.53194,-0.832599 -5.30835,-1.174783 -1.12921,-0.403406 -2.25843,-0.806812 -3.38765,-1.210217 -0.4689,0.52248 -0.92352,-0.182392 -1.38414,-0.372309 -0.8373,-0.279056 -0.12367,-0.838273 0.45029,-0.598013 1.85076,0.183435 3.73784,-0.07704 5.57095,0.231485 1.32212,0.2388 2.57484,0.807183 3.88052,1.057561 0.703,-0.02548 1.40673,-0.06845 2.10338,0.05728 -0.91253,-0.434774 -1.87328,-0.694182 -2.87909,-0.789735 -1.00618,0.0032 0.11058,-0.418856 0.46093,-0.687388 1.05209,-0.503508 2.26089,-0.495028 3.41116,-0.491877 1.64755,-0.325921 3.33212,-0.224853 4.99437,-0.413607 0.4288,-0.03518 1.65951,0.02109 0.63289,-0.180066 -1.72397,-0.588496 -3.57305,-0.531544 -5.36352,-0.431558 -1.42842,0.283897 -2.88126,0.478237 -4.33156,0.590538 -0.76805,-0.02398 -1.54214,0.223587 -2.26901,-0.123116 -0.52627,-0.266395 -1.00028,-0.161098 -1.52016,0.04881 -1.13386,-0.0025 -2.27996,-0.116617 -3.37198,0.26198 -0.67424,0.392874 -0.1382,-0.922215 0.28357,-0.844464 0.74145,-0.03501 0.78945,-0.531228 0.0404,-0.639516 -1.8308,-0.336501 -3.67635,-0.06213 -5.49952,0.176659 -1.12149,0.04698 -2.17891,0.380784 -3.22586,0.761442 -0.29437,0.231773 -1.51458,-0.260011 -0.98401,-0.360156 0.65291,0.05307 1.12618,-0.252045 0.31748,-0.606995 -0.4896,-0.3452 -1.17589,-0.157116 -1.74405,-0.236917 z m 0,1.744 c 0.5909,-0.09508 1.27115,-0.148401 1.78086,0.17354 0.33076,0.533778 0.78849,1.116992 1.49351,0.994032 0.77425,0.171884 0.83393,-0.05711 0.93584,-0.637028 0.66353,-0.196755 1.3618,0.223086 1.9264,0.539645 0.47644,0.216029 -0.086,1.017928 0.3792,1.274796 0.71747,0.605236 1.68507,0.259159 2.53889,0.279431 0.67182,-0.02962 1.29498,0.345631 1.94631,0.486584 -0.63368,-0.171155 -1.26727,-0.356 -1.90356,-0.09032 -1.19412,0.358149 -2.64138,0.133566 -3.57784,1.097297 -0.4424,0.483003 -1.16776,-0.03967 -1.71241,-0.105844 -0.36356,-0.247929 -1.44333,0.209869 -0.70903,0.532479 0.46078,0.426114 -0.52921,0.714794 -0.86504,0.55061 -0.626,-0.170268 -1.24518,-0.36276 -1.85914,-0.572224 -0.0916,0.575987 -0.48784,0.917878 -1.08127,0.790684 -1.51714,0.01354 -3.03358,-0.187535 -4.53026,-0.381138 -0.77843,-0.009 -1.46149,-0.548694 -2.20019,-0.778741 -0.46203,-0.279468 -1.14686,-0.284406 -1.42227,-0.793806 1.27207,-0.204416 2.54989,-0.285959 3.83609,-0.188755 1.31119,-0.0088 2.6085,0.182963 3.91692,0.237755 -1.25981,-0.329759 -2.49263,-0.815632 -3.81444,-0.786796 -0.96239,-0.0905 -1.92342,-0.155477 -2.88142,0.0017 -0.68521,-0.01114 -1.37652,-0.07346 -2.02698,0.165995 -0.94031,0.175089 -1.78418,-0.276182 -2.59118,-0.69494 -0.59445,-0.268856 -1.359,-0.269339 -1.76599,-0.833999 1.33723,0.14134 2.67333,0.120335 4.00852,-0.03253 0.49008,-0.05807 -0.82712,-0.166891 -1.0951,-0.304889 -0.78458,-0.124364 -0.67853,-0.62935 0.0543,-0.681906 0.67984,-0.144397 1.38065,-0.07606 2.0693,-0.04968 0.37244,-0.452085 -0.78595,-0.48322 -1.06353,-0.756563 -0.98071,-0.292359 -0.17333,-0.307763 0.39218,-0.360631 0.83348,-0.174015 1.66944,-0.205718 2.51291,-0.110781 1.07594,0.184691 0.11943,-0.680703 0.30327,-0.676625 1.29442,0.170291 2.70594,0.03353 3.81365,0.85355 0.96455,0.538247 2.06126,1.097356 3.19151,0.859051 z m -21.058,6.372 c -0.85645,5.39e-4 -1.7677,-0.04895 -2.41848,-0.682681 -0.92974,-0.645053 -2.13597,-0.315436 -3.19761,-0.445058 -2.00886,-0.07638 -4.13213,0.39098 -6.03157,-0.484827 -0.66034,-0.408127 0.46532,-0.465779 0.78445,-0.40932 0.88174,0.07544 1.75405,0.307015 2.64521,0.210887 -0.0782,-0.724982 -1.02157,-0.677479 -1.53512,-0.966503 -1.029,-0.229007 -2.10116,-0.192295 -3.13789,-0.404498 -0.0616,-0.708832 0.86201,-0.320768 1.307,-0.46557 1.15655,-0.09989 2.33488,0.0096 3.47585,0.138555 0.85293,0.40284 1.68374,0.927966 2.66188,0.884879 1.86295,0.289109 3.97393,-0.128938 5.57541,1.083156 0.46536,0.349882 1.14194,0.580347 1.27387,1.208981 -0.43795,0.233109 -0.92335,0.253903 -1.403,0.331999 z m 6.84,-0.458001 c -1.33674,0.09395 -2.61907,-0.412435 -3.67607,-1.204651 -0.82636,-0.321208 -0.15566,-0.757544 0.4269,-0.595265 1.12523,-0.08207 2.23772,0.005 3.33808,0.252871 1.08454,0.188314 2.16869,0.378865 3.25308,0.568045 0.0599,0.710276 -0.64777,0.761288 -1.17842,0.771989 -0.71892,0.08799 -1.44404,0.160201 -2.16357,0.207011 z M 156.886,26.865 c -0.77863,0.276778 -1.52874,0.701389 -2.30865,0.920033 -1.43274,-0.0043 -2.85893,0.203629 -4.28566,-0.009 -0.42622,0.02882 -1.34552,-0.189343 -1.04872,-0.677732 0.44075,-0.355022 1.11107,-0.243549 1.65371,-0.345745 1.69023,0.126277 3.38661,-0.192077 5.07544,0.04764 0.30448,0.02194 0.61009,0.04139 0.91388,0.06483 z m -23.98401,4.44 c -0.88521,-0.207821 -1.71893,-1.123042 -2.65068,-0.552973 -0.74433,0.128186 -1.60465,0.220529 -2.25728,-0.233492 -0.58181,-0.570105 0.5863,-0.586494 0.97973,-0.600122 0.85434,-0.151758 1.70125,-0.332825 2.49346,-0.700866 0.73008,-0.191102 1.49875,-0.285813 2.12268,-0.724082 1.59888,-0.384459 3.26335,-0.303796 4.89395,-0.448618 0.84121,0.0045 1.69778,0.10856 2.47915,-0.274847 0.73911,-0.143943 1.45031,-0.01994 2.14692,0.244157 0.88567,0.192901 -0.49935,0.141112 -0.79068,0.328093 -0.74344,0.0022 -0.70858,0.730895 -0.14829,1.0277 -0.0136,0.210882 -1.00371,0.02789 -1.38815,0.184974 -0.61173,0.08515 -0.96313,0.898901 -1.65781,0.679015 -0.8226,0.207544 -0.92302,-1.049466 -1.68136,-1.06402 -0.59298,-0.306986 -0.88422,0.206012 -1.33864,0.453437 -0.4972,0.291479 -0.78018,0.896841 -1.429,0.892645 -0.35145,0.619567 -1.11683,0.797141 -1.774,0.788999 z M 191.827,30.313 c -1.38066,-0.02492 -2.77828,-0.212936 -4.14098,-0.209409 -0.72998,-0.349898 -1.4502,-0.733424 -2.24202,-0.94859 0.32492,-0.46812 1.03024,-0.138902 1.52454,-0.252003 1.28297,-0.142956 2.51389,0.350688 3.79671,0.286346 0.404,-0.01662 1.36449,0.162742 1.2742,0.513342 -0.18928,0.245301 0.27084,0.448189 -0.21245,0.610314 z m -47.139,1.426 c -0.74066,-0.131666 -1.48133,-0.263333 -2.222,-0.395 -0.52388,-0.662599 -0.1454,-0.744084 0.51972,-0.828634 1.15435,-0.182258 2.34616,-0.379466 3.51392,-0.330401 0.77889,0.255538 1.4869,0.935727 2.36372,0.633926 0.75483,-0.204705 1.52802,-0.08489 2.19412,0.325038 1.03425,0.52689 2.15018,1.006208 3.33696,0.82028 1.19414,-0.058 2.3993,0.19057 3.57973,-0.120847 0.39744,-0.40193 -0.42834,-0.899935 -0.81341,-1.035824 -0.59348,-0.287669 -1.24823,-0.393726 -1.87776,-0.574538 0.57123,-0.147203 1.09893,-0.385295 1.56984,-0.723931 0.78705,-0.174249 1.80901,-0.500358 2.42114,0.217867 0.60382,0.270648 0.28991,0.923914 0.80818,1.285604 0.51609,0.500063 1.38553,0.150938 2.03026,0.410949 0.33925,-0.01307 1.54091,0.544539 1.21607,0.09202 -0.51224,-0.564265 0.51459,-0.714534 0.90787,-0.520013 0.66897,0.05758 1.30041,0.246805 1.90063,0.545502 -0.47416,0.384219 -0.0699,1.015896 -0.61099,1.369999 -1.06698,0.624635 -2.35685,0.292636 -3.52932,0.469165 -1.32694,0.06943 -2.65222,-0.324027 -3.97025,-0.210823 -1.35785,0.329195 -2.73724,0.559153 -4.08777,0.9198 -1.42001,0.269419 -2.84792,0.547736 -4.29971,0.417784 -0.88909,-0.01791 -1.84657,-0.135422 -2.65434,-0.434681 -0.58182,-0.52278 0.62331,-0.398991 0.95722,-0.450854 1.08793,-0.03764 2.15476,-0.313559 3.25235,-0.290111 0.64875,-0.0041 1.36997,0.02976 1.96026,-0.208198 0.7752,-0.590025 0.0267,-0.516481 -0.5523,-0.516784 -1.28837,0.01889 -2.59002,-0.25542 -3.8531,0.09325 -1.39389,0.257544 -2.82478,0.244305 -4.22605,0.359489 -0.7239,-0.08657 -1.46071,-0.498071 -2.16155,-0.154819 -0.90609,0.137671 -1.83809,0.01088 -2.66443,-0.38922 0.29951,-0.362453 0.91218,-0.590763 1.41834,-0.56612 1.19165,-0.09684 2.40068,0.06516 3.57265,-0.209879 z m 33.791,1.495001 c -0.34925,-0.06801 -1.53647,-0.230534 -0.93947,-0.633943 0.22315,-0.283104 1.41659,-0.284547 0.83372,-0.706295 -0.42463,-0.338129 -1.05579,-0.173438 -1.57094,-0.208932 -1.1267,0.07468 -2.27399,0.344072 -3.3924,0.248523 -0.6888,0.0303 -0.9592,-0.725077 -0.113,-0.570776 0.33997,-0.153094 1.31798,-0.219174 1.22587,-0.446743 -0.57139,-0.321247 -0.19867,-1.106772 0.39517,-0.912528 1.16741,0.207571 2.2477,0.822529 3.36009,1.139904 0.87459,-0.09361 -0.27699,-0.624815 -0.59982,-0.761012 -0.35702,-0.08112 -1.2977,-0.630885 -0.43116,-0.62678 1.21977,-0.234939 2.3691,0.340291 3.54594,0.519581 0.0315,-0.66479 0.7757,-0.617477 1.25475,-0.490681 0.54827,0.108929 1.26699,0.162847 1.39357,0.83252 0.29153,0.458056 0.12709,1.180404 -0.47794,1.262042 -0.76749,0.04622 -0.49923,0.766592 -0.17108,1.174293 -0.77791,0.357874 -1.7034,-0.09802 -2.53496,0.131515 -0.58566,0.0882 -1.19492,0.02286 -1.77834,0.04931 z m 21.646,-2.662 c -0.61106,0.06271 -1.37022,-0.02819 -1.85835,0.354281 -0.64577,0.562844 0.60044,0.286147 0.96213,0.37829 0.78885,-0.02673 1.69725,-0.107746 2.38136,0.324423 0.501,0.474996 1.20834,1.007875 1.92886,0.783004 -0.0104,-0.643316 0.88722,-0.26929 1.30634,-0.371816 0.66375,-0.149283 1.34242,-0.255531 2.00291,-0.0038 0.71149,0.190517 1.37111,0.547297 2.13093,0.470831 0.49138,-0.154703 0.90535,-0.594233 1.47349,-0.581162 1.42738,-0.296067 2.90184,-0.242409 4.33851,-0.505428 1.53162,0.0586 3.07269,0.01145 4.60382,0.09141 1.24012,0.64321 2.65139,0.574417 3.982,0.864 0.83627,0.229125 0.33455,0.670618 -0.29169,0.667296 -0.46517,0.193942 -1.16795,0.07609 -1.48245,0.46775 0.0642,0.460443 0.77492,0.952849 -0.20451,0.782961 -1.15617,0.0089 -2.31477,0.09871 -3.4619,0.143527 -0.56331,-0.06763 -1.24758,-0.08129 -1.7015,-0.394289 -0.0846,-0.608829 -0.6596,-0.783082 -1.18575,-0.77471 -0.62539,0.08308 0.18672,1.107246 -0.72893,0.945371 -1.1383,-0.10967 -2.28796,0.210802 -3.42377,-0.03947 -0.65914,-0.01464 -1.24553,-0.378852 -1.9035,-0.343433 -0.10396,0.689239 -0.86887,0.394168 -1.36185,0.504052 -0.99784,0.06803 -2.02958,0.190153 -3.00761,-0.0019 -0.61258,-0.149052 -0.19137,-1.212085 -1.00276,-0.834819 -0.5308,0.01519 -1.09463,0.114912 -1.42177,0.579705 -1.25302,0.384969 -2.62649,0.187568 -3.74139,-0.495128 -0.49506,-0.260876 -0.83618,0.672345 -1.4337,0.346198 -0.61456,0.125285 -0.96066,-0.389014 -1.31154,-0.800703 -0.57486,-0.519092 -0.21499,-0.821002 0.19617,-1.211098 0.0792,-0.691542 -0.8583,-0.808389 -1.30181,-1.132132 -0.39047,-0.116554 -1.38842,-0.685085 -0.54087,-0.826882 1.4313,-0.195042 2.89854,-0.178478 4.33892,-0.118254 0.87457,0.109317 1.71996,0.382921 2.58821,0.535 -0.28555,0.07178 -0.58306,0.229057 -0.868,0.197001 z m -71.935,11.413 c -0.67144,-0.03147 -1.42909,0.03032 -2.0395,-0.188166 -0.77373,-1.162135 -2.23294,-1.581946 -3.56514,-1.54167 -0.60693,-0.08755 -1.34134,-0.03812 -1.79436,-0.512165 0.59282,-0.03746 1.06499,-0.41629 1.607,-0.615002 0.41755,-0.420707 -0.73998,-1.211418 -0.0904,-1.195482 0.58715,0.119155 0.86892,-0.434745 1.30048,-0.665404 0.54887,-0.22143 1.05292,-0.502377 1.38997,-1.005111 -0.1924,-0.623237 -1.00361,-0.709079 -1.48152,-1.080167 -0.75284,-0.462051 -0.33771,-0.635568 0.35452,-0.525836 1.70268,-0.118939 3.41681,0.130522 5.11612,-0.12115 1.06279,-0.109316 2.15684,-0.325432 3.18541,0.07302 1.57558,0.350299 3.15446,0.985505 4.79266,0.66346 1.53453,-0.202445 3.10525,-0.07105 4.55417,0.489422 0.68422,0.233417 1.36843,0.466834 2.05265,0.700251 -0.5749,0.275402 -1.26931,0.261687 -1.89235,0.44279 -1.98532,0.335315 -4.02538,0.633614 -5.8361,1.570133 -0.76617,0.329459 -1.43786,0.901619 -2.31611,0.87296 -0.77403,-0.14813 -0.62316,0.461559 -0.55545,1.003116 -0.26639,0.886216 -1.33544,0.806097 -2.08207,0.899274 -0.57744,0.06219 -1.29453,-0.303495 -1.66913,0.302962 -0.26397,0.260096 -0.70243,0.278479 -1.0308,0.432767 z M 190.483,39.666 c -0.45136,-0.179503 -1.28181,0.05676 -1.26524,-0.635942 -0.35434,-0.533458 -1.19831,-0.807767 -1.16166,-1.571934 0.0663,-0.633747 0.45133,-1.489227 1.22481,-1.265121 0.77136,0.140025 0.80396,-0.11399 0.16983,-0.481606 -0.29119,-0.522249 0.84045,-0.344312 1.19643,-0.397312 1.41632,-0.129866 2.81739,0.11722 4.21116,0.311512 1.55374,0.150176 3.1681,-0.436143 4.6667,0.212077 0.0131,0.382592 -0.78549,0.487311 -1.07361,0.770008 -0.7074,0.661481 -1.54919,1.200586 -2.40814,1.612991 -1.64959,0.19116 -3.29487,-0.200414 -4.94527,-0.03067 0.4043,0.277163 1.151,0.456412 1.34646,0.793296 -0.25277,0.43742 -0.8743,0.579746 -1.35187,0.634174 -0.20227,0.01694 -0.41229,0.02702 -0.6096,0.04853 z m -9.27901,1.856999 c -1.51542,-0.233919 -2.5518,-1.631882 -4.07752,-1.865522 -1.00078,-0.253137 -2.10487,-0.06362 -3.00876,-0.665284 -0.56424,-0.266731 -1.12847,-0.533461 -1.69271,-0.800192 0.44096,-0.277715 0.8134,-0.865004 1.38725,-0.542247 0.85454,0.380411 1.7355,0.728608 2.68674,0.781246 0.72086,-0.172984 1.1838,-0.939731 1.93801,-0.938 -0.021,-0.485439 -0.83641,-0.570828 -1.20915,-0.842569 -0.30022,-0.09063 -1.53572,-0.546195 -0.77038,-0.687364 0.74619,0.01426 1.51244,0.193075 2.21653,-0.138066 0.77896,-0.0596 1.4353,0.619396 2.24135,0.399836 0.52988,-0.07162 0.9701,-0.427132 1.54507,-0.361832 0.905,-0.07994 1.83179,-0.01959 2.70257,0.253996 -0.37388,0.39815 -0.98177,0.311003 -1.31334,0.751892 -0.61206,0.211669 -1.39603,0.19406 -1.88542,0.597818 0.0365,0.552849 0.90788,0.471262 1.33664,0.382953 0.87562,0.04569 1.72931,0.353864 2.57529,0.501199 0.69645,0.162621 0.67673,0.858212 -0.0426,0.951515 -0.34173,0.495695 -0.38314,1.318644 -1.10489,1.468833 -0.8273,0.288989 -1.6856,-0.0033 -2.43745,-0.351056 -0.91864,-0.286324 -0.41181,0.347468 0.15587,0.490361 0.76584,0.196457 -0.40899,0.580681 -0.73736,0.592933 -0.16753,0.005 -0.3424,0.02165 -0.50575,0.01955 z M 243.524,60.394001 c -0.53854,-0.484528 -1.40919,-0.249393 -1.99109,-0.717487 -0.66268,-0.413859 0.47773,-0.444002 0.69309,-0.850514 -0.80729,-0.337622 -1.624,-0.636036 -2.51,-0.646 -0.64783,-0.221192 -1.1673,-0.652425 -1.68901,-1.080002 0.18714,-0.76883 -0.67188,-0.478003 -1.14999,-0.572998 -0.65635,-0.167564 -1.29638,-0.436806 -1.98599,-0.396999 0.28412,0.47077 0.39314,1.095334 -0.36723,0.831008 -0.6554,-0.04489 -1.36667,-0.448517 -1.99066,-0.221315 -0.50405,0.666327 -1.35746,0.581892 -2.10124,0.602005 -1.14202,-0.181747 -2.32324,-0.199793 -3.41688,-0.604699 -0.18397,-0.657431 0.51879,-1.216396 1.1408,-1.167008 0.889,0.20738 0.29422,-0.82965 0.80976,-0.788815 1.08891,0.122825 2.23305,0.09555 3.26791,0.470282 0.35192,0.280515 1.23171,0.870806 0.8277,0.05264 -0.002,-0.504859 0.93822,-0.179238 1.32599,-0.352756 0.78376,-0.118855 1.5509,-0.412891 2.35219,-0.230824 0.85186,0.199668 0.67683,-0.509697 0.0372,-0.723864 -0.37635,-0.443142 -1.11186,-0.437859 -1.38258,-0.939655 0.39174,-0.325429 1.01656,-0.193493 1.473,-0.474998 0.62715,-0.332305 1.48436,-0.385712 1.76999,-1.132 0.40926,-0.288362 1.03515,-0.501955 1.24795,-0.926386 -0.0133,-0.820939 -0.96408,-1.100414 -1.33011,-1.758722 -0.34294,-0.456344 -0.86917,-0.435472 -1.36759,-0.537069 -0.69437,-0.162967 -1.43435,-0.382066 -1.99639,-0.799573 -0.18029,-0.450369 -0.70278,-1.000661 -1.17185,-0.570249 -0.5456,0.34414 -1.19637,0.06588 -1.75781,0.306575 -0.60111,-0.0085 -1.19151,0.11405 -1.78618,0.184422 -0.4801,-0.746367 0.13474,-0.735599 0.76209,-0.716182 0.47199,-0.139352 1.2115,0.145846 1.4489,-0.374818 -1.09856,-0.382515 -2.16178,-0.895526 -3.24484,-1.289514 -0.53443,-0.02426 -1.43662,0.105541 -1.4894,-0.62259 -0.35825,-0.521608 -1.12629,-0.42752 -1.6695,-0.675474 -0.70519,-0.172799 -1.34381,-0.84985 -2.09526,-0.44242 -0.8461,-0.170657 -1.70894,-0.440582 -2.55949,-0.479603 -0.66777,0.193723 0.54498,0.500107 0.85884,0.507844 0.97944,0.308551 2.05761,0.383552 2.96787,0.855749 0.59517,0.464776 -0.44371,0.684778 -0.83049,0.665701 -0.92297,0.05841 -1.81121,-0.15729 -2.68727,-0.420982 -0.55416,-0.08588 -1.19912,-0.414954 -1.71046,-0.06471 0.0516,0.264962 1.19932,0.998902 0.39098,0.768236 -0.8098,-0.236381 -1.65275,-0.718867 -2.49,-0.311331 -0.74974,0.22929 -1.49503,-0.442314 -2.27095,-0.183441 -1.04079,0.106861 -2.0839,-0.220107 -3.13259,-0.229228 -1.35716,-0.167627 -2.75345,0.157707 -4.08443,-0.244237 0.22698,-0.693093 -0.44107,-0.832002 -0.98705,-0.783662 -0.50102,-0.03582 -0.81298,0.560433 -1.39073,0.40908 -1.24709,-0.0088 -2.55854,-0.160371 -3.63591,-0.809727 -0.70334,-0.474089 0.27874,-0.658233 0.70767,-0.60169 1.09668,0.0055 2.2209,0.279201 3.29789,0.10279 0.53749,-0.264727 -0.68686,-0.513487 -0.94995,-0.69344 -0.92594,-0.322844 -1.94125,-0.358554 -2.91393,-0.392356 -0.73893,0.08511 -1.46275,-0.09326 -2.185,-0.220993 0.12024,-0.519276 0.35199,-1.210879 1.01162,-1.135205 0.941,-0.03662 -0.0122,-0.531996 -0.45533,-0.597693 -0.47342,-0.238437 0.18697,-0.936422 0.45114,-1.188426 0.73467,-0.66332 1.60087,-1.125397 2.54787,-1.401754 0.46973,-0.33519 1.03532,-0.348966 1.54255,-0.549051 0.93009,0.0024 1.83426,-0.299991 2.77468,-0.289845 0.89157,-0.05537 1.80265,-0.06528 2.66647,0.191973 -1.08651,0.415909 -2.04123,1.093281 -3.129,1.512001 -0.55557,0.358953 -0.44714,1.016884 0.22861,1.108889 0.75131,0.235843 0.76514,0.311448 0.28938,0.802716 -0.10877,0.590461 0.71089,0.771253 1.07601,1.094396 0.51967,0.206999 1.03934,0.413998 1.559,0.620998 -0.33235,0.399724 -1.20414,0.150028 -1.4082,0.625092 0.14771,0.324369 1.02671,0.0765 1.4591,0.205628 0.57716,0.08299 1.14473,0.139975 1.48051,-0.43146 0.4189,-0.450173 -0.34905,-0.99375 -0.82818,-0.909343 -0.57213,-0.04723 -1.02147,-0.430668 -1.50224,-0.703918 0.30974,-0.34338 0.87589,-0.59992 1.34466,-0.563271 0.52279,0.101786 1.04762,0.08545 1.57336,0.01727 -0.64386,-0.271046 -1.28644,-0.542644 -1.99083,-0.53349 -0.56307,-0.0743 -0.95,-0.388471 -0.71218,-0.98751 0.59063,-0.298001 1.21315,-0.365021 1.86088,-0.249541 0.57958,0.03338 1.16084,-0.03193 1.74111,-0.03946 -0.72118,-0.220311 -1.44639,-0.426843 -2.17199,-0.632 1.42709,-0.613789 3.03255,-0.494464 4.52125,-0.894174 0.97616,-0.111622 2.0103,-0.05607 2.95656,0.199511 0.75244,0.49372 1.60211,0.917136 2.27599,1.483833 -0.24268,0.528464 -0.81648,0.965092 -1.26779,1.37783 -0.14616,0.64556 0.2215,0.940116 0.84566,0.841526 0.4788,-0.06757 1.15368,-0.107755 1.43547,-0.530643 0.25665,-0.495723 0.98382,-0.249728 1.448,-0.286359 0.79036,-0.119401 0.3271,0.914704 0.9494,0.965751 0.64666,0.336721 0.98651,-0.06367 0.64531,-0.680616 0.10351,-0.374107 0.65196,-0.856202 1.15168,-0.891529 1.51192,-0.478414 3.05674,0.103808 4.57863,0.145017 0.74338,-0.09858 1.56686,-0.141514 2.14566,0.408437 0.55637,0.333724 1.20363,0.455729 1.76118,0.792416 -0.0892,0.365657 -0.85593,0.302438 -1.18423,0.612202 -0.59083,0.02983 -1.11692,0.562776 -0.25903,0.705772 0.69394,0.140883 1.26255,-0.571111 1.97665,-0.527995 0.63287,-0.05443 1.02541,0.442106 1.39334,0.861061 0.40859,0.616029 0.86205,-0.145793 1.32555,-0.311061 0.43851,-0.382495 0.93275,-0.502065 1.49046,-0.322102 0.71433,0.06049 1.41058,0.190719 2.05727,0.512122 -0.45233,0.311078 -0.96887,0.565457 -1.39701,0.932003 0.61589,-0.0048 1.22199,-0.0419 1.79886,-0.244228 0.60848,-0.137861 1.12329,-0.167485 0.93415,0.616226 0.52386,0.293231 1.09299,0.401096 1.66485,0.169098 1.05569,-0.272436 2.22494,-0.308713 3.18414,0.2849 -0.68986,0.629741 -1.76383,0.486567 -2.55151,0.87387 -0.43782,0.422668 0.6669,0.531848 0.97273,0.350478 0.71913,-0.291592 1.61674,0.0087 2.21479,-0.543344 0.95681,-0.323255 1.84332,0.432602 2.52999,1.011997 -0.87887,0.04013 -1.79809,-0.08877 -2.643,0.190002 0.0597,0.601619 0.89463,0.355447 1.31844,0.446273 0.70641,0.07752 1.59185,0.07489 2.08971,0.632503 -0.0747,0.240245 -0.93221,0.09244 -1.31383,0.103675 -0.8544,0.02974 -1.68235,-0.438782 -2.521,-0.296562 -0.55072,0.274962 0.72807,0.470264 0.96498,0.710931 -0.24224,0.408277 -0.97652,0.193738 -1.43048,0.309071 -0.71341,0.01351 0.38576,0.628939 0.72497,0.493713 0.97688,0.19382 1.96543,0.476778 2.91074,0.775098 0.26732,0.346238 0.46423,1.062306 1.07757,0.643131 0.9746,-0.245582 1.95301,0.549454 2.91773,0.108127 0.93517,-0.234715 1.73029,0.490372 2.50555,0.898203 0.7347,0.473923 -0.5565,0.322359 -0.90187,0.462888 -0.73564,0.181314 -0.0271,0.735563 0.49448,0.48295 0.73637,0.01284 1.46422,-0.09105 2.18117,-0.169727 1.12087,-0.247775 -0.0214,0.544611 0.50446,0.643737 0.70976,0.24528 1.43061,0.112896 2.07723,-0.237483 0.63361,0.29974 1.34398,0.546588 2.00414,0.833473 -0.5145,0.213385 -0.55636,0.796771 -1.16409,0.686483 -0.60293,0.07537 -1.17314,-0.44673 -1.76679,-0.102362 -0.63655,0.128929 0.62851,0.389622 0.84257,0.618108 0.57035,0.504334 -0.55045,0.423153 -0.87467,0.545768 -0.42472,0.334476 -0.86503,0.738787 -1.32955,0.2009 -0.58298,-0.704072 -0.65438,0.0042 -0.77799,0.568316 -0.11635,0.440286 0.72253,1.296508 -0.18955,1.09425 -0.48287,-0.290514 -1.12875,-0.208841 -1.54993,-0.578466 -0.0112,-0.75496 -0.81942,-0.388719 -1.263,-0.240998 -0.39813,-0.305629 -1.07067,-0.702562 -0.48397,-1.19316 -0.0837,-0.369378 -0.95577,-0.20051 -1.35164,-0.302262 -1.23356,-0.283337 -2.27373,-1.438865 -3.60457,-1.217285 -0.2717,0.298824 -1.50268,0.137112 -0.812,0.64491 0.19725,0.257599 1.42491,0.638976 0.85501,0.807 -0.58397,0.229441 -1.02906,-0.101289 -1.50891,-0.389264 -0.42179,-0.230142 -1.28471,-0.602002 -0.6649,0.12506 0.43802,0.384114 0.6956,1.155619 1.39192,0.985234 0.60719,-0.08844 0.94856,0.361926 1.26561,0.804224 0.30803,0.373002 0.63593,0.972277 1.09622,1.054429 0.46282,-0.434121 1.00183,-0.221157 1.41066,0.164373 0.61264,0.33848 1.30536,0.462961 1.96757,0.668742 -0.56297,-0.04901 -1.17841,0.406695 -0.35491,0.630872 0.62378,0.410492 1.66482,0.470505 1.79419,1.349534 0.23164,0.874302 -0.43392,0.366946 -0.7794,-0.04099 -0.26698,-0.231179 -1.0499,-1.033752 -1.15186,-0.505414 0.24371,0.631183 0.91374,1.043709 1.17003,1.639799 0.11187,0.538124 -1.39231,-0.288818 -0.751,0.413369 0.33118,0.283827 1.05904,1.100023 0.17112,0.650072 -0.65885,-0.195636 -1.10224,-0.786177 -1.70215,-1.053239 -1.14401,0.221503 -2.25034,-0.344917 -3.20152,-0.904394 -0.32651,-0.255071 -1.02371,-0.771474 -1.22771,-0.745223 0.40474,0.859223 -0.15287,0.618021 -0.74502,0.33732 -0.54947,-0.257723 -1.14832,-0.318307 -1.74777,-0.307705 0.68202,1.123493 2.08751,1.44928 3.25643,1.872546 1.28328,0.506698 2.65201,1.17071 3.27359,2.484456 -1.65729,-0.206547 -3.22739,-0.822399 -4.87382,-1.061697 -1.04025,-0.0741 -2.19516,-0.08857 -2.99221,-0.855099 -0.58439,-0.320774 -1.3481,-0.146159 -1.95998,-0.470205 -0.19821,0.0301 -0.6637,-0.315361 -0.692,0.005 z m -97.33,-21.695999 c 0.93198,0.02573 1.8406,-0.172714 2.63867,-0.663137 1.03576,-0.173011 2.12261,0.07633 3.14324,0.296529 0.93612,-0.155902 0.0579,0.967403 0.49912,0.995338 0.73381,-0.01984 1.43523,-0.159737 2.13692,-0.376164 0.3127,-0.186532 1.56207,0.170102 1.15427,-0.300718 -0.27055,-0.305805 -1.24834,-0.991829 -0.28859,-0.779488 1.02224,0.124819 2.15264,0.162715 3.03846,0.714753 0.28036,0.404814 0.43474,0.902205 0.86139,1.222951 0.35475,0.41634 0.90656,1.010857 1.49086,0.688723 0.6386,-0.01349 0.99048,-0.53209 0.34024,-0.907025 -0.46491,-0.491166 -0.97123,-0.958049 -1.07576,-1.660602 -0.39143,-0.547156 0.0217,-1.148538 0.65735,-0.831639 1.09557,0.219623 2.2393,0.173286 3.32009,0.422428 0.80537,0.377643 1.83192,0.421284 2.43974,1.121048 0.0546,1.091187 1.08452,1.652179 1.879,2.212002 0.14624,0.469116 -0.77034,0.886659 -0.28528,1.345771 1.33579,0.735532 2.80562,1.274008 4.34915,1.266543 1.0273,0.105333 2.02635,0.465743 3.00257,0.797384 0.49973,0.0087 0.9861,0.776716 0.72626,1.08286 -1.00769,0.07708 -1.95617,-0.415078 -2.92765,-0.514505 -0.69644,0.252148 -1.40608,0.42565 -2.15205,0.382947 -0.52339,0.135918 -0.0448,1.13598 0.48402,0.773227 0.67506,0.07481 1.36723,-0.417016 1.99655,-0.213484 0.52404,0.181351 1.11251,0.767936 0.20204,0.825352 -0.95477,0.51024 -2.09817,0.434067 -3.15248,0.469012 -1.97289,-0.03277 -3.93681,-0.419095 -5.82396,-0.964931 -0.44476,-0.236221 -0.84908,-0.622201 -1.40271,-0.409087 -0.52933,0.06205 -0.81713,0.625928 -1.36784,0.719378 -0.75941,0.408096 -1.66934,0.13898 -2.49637,0.301688 -0.91098,0.06088 -1.72552,0.590447 -2.65852,0.577184 -1.51618,0.277127 -3.05574,0.231962 -4.58633,0.330019 -0.85596,-0.03118 -1.71319,-0.08949 -2.55591,0.03928 -0.57276,0.05878 -1.10802,-0.138118 -1.64949,-0.292637 -0.17465,-0.491051 0.51016,-0.950448 -0.34284,-1.089794 -2.03923,-0.277627 -4.15846,-0.0059 -6.16037,-0.604346 -0.66073,-0.197954 -1.16434,-0.751726 -1.85158,-0.92917 -0.90802,-0.189336 0.16556,-0.3984 0.55238,-0.496789 0.70538,-0.017 1.41773,-0.0085 2.08623,-0.233353 1.36563,0.04549 2.72107,-0.166426 4.08803,-0.06174 1.95506,-0.01255 3.92476,0.126852 5.87044,-0.02572 0.74353,-0.185281 -0.57468,-0.365221 -0.87071,-0.455049 -2.11625,-0.561957 -4.30925,-0.631409 -6.48659,-0.624429 -2.04338,-0.07187 -4.08582,0.0036 -6.12698,0.07539 -0.55034,-0.176333 -1.10067,-0.352666 -1.651,-0.529 0.0665,-0.509256 0.89783,-0.195894 1.28949,-0.356891 1.1698,-0.279587 2.36867,-0.08325 3.55264,-0.261365 0.6122,-0.07806 1.27983,-0.01194 1.79385,-0.410743 -0.44995,-0.611151 -1.2585,-0.219875 -1.90145,-0.291533 -1.1235,-0.014 -2.33526,0.465833 -3.355,-0.224203 -0.53806,-0.353472 -1.17775,-0.384309 -1.78663,-0.348967 -0.69733,-0.02463 -0.85679,-0.613641 -0.1669,-0.866199 0.59373,-0.5911 1.37752,-0.816224 2.15949,-1.044855 0.75531,-0.304263 1.56118,-0.434933 2.33704,-0.629426 1.12482,-0.476663 2.42329,-0.284009 3.53447,-0.796817 0.72605,-0.117824 1.44058,-0.08605 2.13899,0.154999 -0.25888,0.445065 -0.86321,0.59886 -0.63641,1.276553 -0.0633,0.02319 0.01,0.07047 -0.004,0.102449 z m 105.07899,60.827999 c -0.7441,0.347134 0.28753,-0.719988 -0.25269,-0.694 -0.74587,-0.02054 -0.59165,-0.511965 -0.64328,-1.078216 -0.13485,-0.775724 -0.077,-1.619091 -0.33728,-2.350792 -0.39223,-0.520361 -1.20235,-0.554954 -1.74773,-0.260995 -0.5373,0.06092 -0.98124,-0.894531 -1.43218,-0.302647 -1.32735,1.00046 -1.51754,2.829249 -2.67044,3.983092 -0.26883,0.612714 -0.76748,0.680763 -1.36386,0.517196 -0.60673,-0.194013 -1.03994,0.315885 -1.21654,0.840361 -2.07835,-0.17848 -4.1709,-0.083 -6.25562,-0.12391 -0.59961,-0.0476 -1.17401,0.003 -1.66389,0.38501 -0.99476,0.54672 -2.01095,1.08933 -3.09748,1.4259 -0.18514,0.48238 -0.2108,1.13759 -0.83658,1.23592 -0.81391,0.23872 -1.6364,0.14178 -2.46226,0.0433 -0.81298,0.0149 -1.68828,-0.10053 -2.43417,0.28479 -0.37012,0.48735 0.047,1.00858 0.063,1.527 -1.31624,0.7085 -2.80467,1.04664 -4.28715,1.12935 -1.16199,0.19809 -2.04512,1.10695 -3.18285,1.33765 -0.62977,0.001 -1.59908,-0.28631 -1.43543,-1.08109 0.33738,-0.57925 1.22844,-0.74565 1.45367,-1.46108 0.24809,-0.55834 0.78003,-1.00032 0.65209,-1.66333 -0.0776,-1.31424 -0.63907,-2.54979 -0.92532,-3.829501 -0.85219,-0.38533 -1.77698,-0.674861 -2.584,-1.119793 -0.19337,-0.451696 -0.17818,-0.956687 -0.92499,-0.916546 -0.55478,-0.03284 -0.71033,-0.768941 -1.37651,-0.482907 -0.53185,-0.249348 -0.39153,-0.960705 -0.96588,-1.090349 -2.20495,-1.151916 -4.56502,-1.965415 -6.87453,-2.875079 -1.02788,-0.472669 -2.01451,0.393623 -2.98847,0.593429 -0.50987,-0.183096 -1.12383,0.190725 -1.51263,-0.274755 -0.50356,-0.159355 -1.07268,0.18577 -1.526,-0.074 0.007,-0.634692 -0.75804,0.08197 -1.11827,0.06523 -0.57151,0.30452 -0.9476,-0.09855 -1.4063,-0.227328 -0.31317,-0.504155 -0.93762,-0.143848 -1.12473,-0.204193 -0.33457,-0.41256 -0.58246,-0.528471 -1.14212,-0.597538 -0.51624,-0.201675 -1.09188,0.04498 -1.56198,-0.169081 -0.90559,-0.337352 -1.30401,-1.280289 -2.09587,-1.781429 -0.62677,-0.431308 -0.75015,0.231918 -0.27149,0.632427 0.28978,0.451629 -0.89786,0.103819 -1.24799,0.221583 -4.03962,0.01761 -8.07972,-0.0119 -12.11954,0.0021 -7.05188,-0.02262 -14.10498,-0.04218 -21.15653,-0.03268 -3.8693,0.01137 -7.73957,-0.01726 -11.60936,0.01008 -5.37494,-0.02743 -10.75086,0.03776 -16.12482,-0.0202 -0.47709,-0.270287 -0.98147,-0.613002 -0.693,-1.239006 -0.46682,0.219605 -1.1843,0.456242 -1.43959,-0.168458 -0.0296,-0.774547 -0.62037,-0.558863 -1.0508,-0.285995 -0.4963,0.08176 -1.09058,-0.373344 -1.14661,-0.882545 -0.0213,-0.686593 -0.31828,-0.983905 -0.99676,-0.742259 -0.61973,0.02384 -1.22178,-0.283824 -1.83162,-0.378659 -0.2226,-0.345438 -0.55434,-1.057367 -1.09049,-0.638867 -0.7337,0.121241 -1.63034,0.266946 -2.25513,-0.254215 -0.32949,-0.501888 0.37315,-1.007972 0.5547,-1.190329 -0.21263,-0.496255 -1.22,-0.112022 -1.34466,-0.3668 0.45239,-0.430931 0.96267,-0.796305 1.562,-0.948004 0.83775,-0.494583 0.22594,-0.511959 -0.42343,-0.424135 -0.41146,0.157963 -1.07654,0.199653 -1.31315,-0.196513 0.0616,-0.61962 0.002,-1.112574 -0.74625,-0.887418 -0.36033,-0.273261 -0.90556,-0.753033 -1.05012,-1.143502 0.40736,-0.595639 -0.15582,-0.905894 -0.65338,-0.498382 -0.49368,0.547189 -0.94057,0.164382 -1.38718,-0.22414 -0.58776,-0.373815 -1.08382,-0.993825 -1.13553,-1.708775 0.27089,-0.386659 0.93388,-0.752027 0.93407,-1.115683 -0.25476,-0.626441 -0.87471,-1.209806 -0.54308,-1.917371 0.0208,-0.499826 -0.83116,-0.525557 -1.19642,-0.747223 -0.81173,-0.354779 -1.7051,-0.568157 -2.50353,-0.900926 -1.08007,-0.899942 -1.8629,-2.112226 -2.92085,-3.046109 -1.01283,-1.235058 -2.49567,-1.878656 -3.81658,-2.703846 -0.46079,-0.36085 -0.70563,-1.105095 -1.414159,-0.991673 -0.947135,-0.191238 -1.577304,0.711692 -2.394969,1.016178 -0.447036,0.4216 -1.249155,0.180334 -1.531481,0.77365 -1.081158,-0.866687 -2.373136,-1.42547 -3.455002,-2.282997 -0.153387,-0.576987 -0.616133,-0.924165 -1.213536,-0.831568 -1.098168,0.01425 -2.199445,0.197666 -3.294459,0.04556 -0.418612,-0.628779 -0.226416,-1.483393 -0.295664,-2.213425 -0.06159,-3.590143 0.168692,-7.183197 -0.07929,-10.76923 -0.07432,-2.451683 -0.07975,-4.908938 -0.102406,-7.358275 -0.331964,-0.728336 0.758398,-0.215394 1.157036,-0.422778 1.250499,-0.06615 2.479047,0.347707 3.683461,0.641113 1.526806,0.592746 3.153206,0.800609 4.778248,0.875323 0.855463,0.01703 1.686274,0.26907 2.49368,0.479484 0.283156,-0.185646 -0.493885,-0.85257 -0.887507,-0.92949 -0.543101,-0.538241 0.451877,-0.636693 0.852455,-0.782809 0.568118,-0.250363 1.261393,0.160031 1.799993,-0.206914 1.14764,0.06319 2.35217,0.376102 3.43468,-0.160575 0.44591,-0.311694 0.96825,-0.202441 1.45352,-0.42162 1.09429,-0.252953 2.32393,-0.02139 3.29925,-0.684489 0.89817,-0.215984 1.85079,-0.172509 2.75955,-0.01731 -0.61851,0.822383 -1.75133,0.437652 -2.57064,0.889753 -0.97228,0.34757 -2.0972,0.232468 -3.02574,0.69157 -0.61515,0.684553 -1.61591,0.434187 -2.39589,0.722358 -0.81102,0.375671 -0.46714,0.56723 0.23727,0.701316 0.48033,0.249334 0.96067,0.498668 1.441,0.748001 -0.40343,-0.510146 -0.0924,-1.09349 0.55748,-1.029717 0.87228,-0.01639 1.42667,-0.960765 2.32517,-0.799361 0.72349,0.03736 1.41726,-0.07172 2.06535,-0.405922 1.01682,-0.46721 2.13021,-0.467195 3.224,-0.562001 0.85855,-0.594978 1.96522,-0.546115 2.861,-1.037998 -0.34241,-0.543135 -1.06984,-0.672087 -1.535,-1.108002 1.00974,0.07022 2.07743,0.377873 2.83108,1.072724 0.45017,0.659792 1.01941,1.239351 1.82512,1.422567 0.72757,0.311558 1.52451,0.522796 2.3178,0.492708 0.55957,-0.220711 -0.84389,-0.92267 -0.0647,-1.071323 0.53181,0.07408 1.18862,-0.572737 1.59266,-0.02145 0.37629,0.51907 -0.29528,1.020271 0.67791,0.932841 0.99284,0.07008 2.05194,-0.258445 2.7411,-0.995067 2.48122,-0.336743 4.82463,0.837976 7.25105,1.1426 1.59639,0.264278 3.18162,0.6046 4.78946,0.778116 1.38407,0.113873 2.76797,0.324221 4.15904,0.143017 1.21047,0.02383 2.41815,0.404159 3.48146,0.969268 0.52123,0.564891 -0.60916,0.458111 -0.95459,0.445724 -0.57921,0.0056 -1.279,0.01366 -1.76789,0.254877 -0.58732,0.688574 0.0169,0.723704 0.65719,0.739085 2.94989,0.356674 5.96488,0.557772 8.9008,-0.0094 1.07214,-0.172362 2.19376,-0.263997 3.20202,0.219627 0.9941,0.320679 2.09132,0.212458 3.04443,0.705994 0.88766,0.195234 0.2584,0.587747 -0.26175,0.719748 -0.12266,0.282185 0.87053,0.514885 1.19037,0.786783 0.60086,0.343562 0.9427,0.621925 0.62296,-0.225233 0.16564,-0.187022 1.34963,-0.0048 0.9338,-0.45894 -0.53688,-0.344189 -1.32943,-0.741462 -1.12861,-1.512396 -0.11111,-0.754639 0.7531,-0.460666 1.22595,-0.571708 0.70042,-0.07634 1.49854,-0.02667 2.12489,-0.304245 0.52357,-0.778823 1.58639,-0.398638 2.32642,-0.19695 1.13983,0.225906 2.3044,0.460275 3.465,0.241001 1.06055,0.859968 2.52255,0.721189 3.79985,0.919843 0.75209,0.08886 1.46847,-0.131721 2.20267,-0.204882 1.87158,-0.107792 3.78961,0.242381 5.61448,-0.30696 0.75885,0.370308 1.55719,0.850938 2.431,0.756001 0.50877,-0.435079 0.19088,-1.05499 -0.44,-1.058003 -0.69144,-0.168001 -1.40303,-0.156519 -2.10901,-0.195 -0.081,-0.737508 0.7859,-0.401099 1.24113,-0.531087 1.06723,0.05963 2.06431,0.578298 3.14887,0.522089 0.75817,0.06335 0.51444,0.620996 0.29413,1.102959 -0.27125,0.543343 0.2801,1.082863 0.83446,1.041444 0.47704,-0.06389 1.18258,0.409161 1.46723,0.287456 0.0787,-0.70933 -0.77952,-1.250896 -0.38882,-1.939859 0.32564,-0.510562 1.00483,-0.136131 1.5026,-0.273984 0.76114,-0.02273 1.18861,-1.002488 1.9994,-0.913016 0.39672,0.02685 1.35282,-0.005 0.89455,-0.613981 -0.31383,-0.616416 -0.98772,-0.319331 -1.50754,-0.202021 -0.54899,-0.0398 -1.37039,0.01804 -0.54201,-0.515482 0.41759,-0.197647 0.97979,-0.104989 1.41885,-0.323674 0.64038,-0.126769 1.08722,0.451703 1.68616,0.566157 0.0362,-0.388241 0.23349,-1.386245 -0.36988,-1.19118 -0.96085,0.102555 -1.94434,-0.02531 -2.82611,-0.429818 -1.3146,0.230914 -2.60321,-0.307774 -3.86601,-0.590649 -0.4473,-0.06007 -1.08437,-0.743857 -0.36201,-0.894352 0.50425,-0.248546 1.17268,-0.532323 0.27128,-0.710747 -0.31071,-0.205692 -1.48252,-0.162585 -0.89019,-0.683428 0.46007,-0.632958 1.29054,-1.012001 2.04043,-0.654533 0.66214,0.386099 0.98591,-0.484049 0.18657,-0.557113 -0.75336,-0.330028 0.21977,-0.599711 0.60181,-0.739052 1.31625,-0.07523 2.67363,-0.111734 3.90396,0.444641 0.51217,0.155758 1.2605,0.416196 1.26759,1.030499 -0.54386,0.643009 0.32324,0.701451 0.77046,0.933847 0.73863,0.370506 1.43297,0.82857 2.22109,1.104885 -0.39908,0.651553 -1.24486,0.108087 -1.74696,0.598719 -0.58227,0.433322 -0.50461,0.744225 0.22643,0.731943 0.71487,0.18761 1.47367,0.309346 2.18024,0.08904 0.64989,-0.03618 1.26384,0.236562 1.89629,0.350299 -0.19029,0.463591 -1.38754,0.520756 -0.49946,0.902838 0.7123,0.25465 0.95318,1.026423 0.87247,1.721163 0.68276,-0.06914 1.40933,-0.336175 1.65345,-1.039916 0.26863,-0.72752 1.12067,-1.302671 1.86683,-0.873379 0.77827,0.38077 1.82595,0.642658 2.14572,1.538295 -0.0334,0.726472 -0.82279,0.388588 -1.28865,0.369289 -0.45583,0.408633 -0.18195,1.045776 0.33372,1.242585 0.72959,0.335028 1.30277,0.89624 1.98793,1.298126 0.6045,-0.220987 1.26398,-0.222884 1.86,-0.465 0.0244,-0.642934 0.54071,-0.860297 1.04498,-1.108684 0.57278,-0.209679 0.66529,-0.777123 0.89114,-1.269239 0.12089,-0.606163 0.63399,-0.815872 1.19348,-0.652847 0.49417,0.05466 1.19385,0.160984 1.14739,-0.545231 -0.64081,-0.20965 -1.2759,-0.435208 -1.903,-0.682998 0.007,-0.54528 0.0243,-1.083005 0.683,-1.162003 0.88922,0.0603 1.77813,-0.138611 2.65273,0.135776 1.19266,0.271683 2.48385,0.24792 3.53604,0.940771 0.55372,0.495904 1.45885,-0.199189 1.90661,0.406936 0.14441,0.517054 0.40678,1.142253 -0.33688,1.237789 -0.72768,0.412696 -1.10822,-0.858258 -1.82111,-0.416222 -0.83937,0.01171 -0.3671,0.679343 -0.0529,1.079082 0.66124,0.852551 1.67242,1.276498 2.60049,1.768868 0.074,0.496629 -0.39429,0.997553 -0.8647,1.124338 -0.69488,0.317305 -1.30365,0.895055 -2.1093,0.866663 -0.5387,0.178733 -1.06331,0.716571 -1.6243,0.327661 -1.03344,-0.368139 -1.85979,-1.319102 -2.9987,-1.366662 -0.89637,0.211131 -0.54645,0.406719 0.14602,0.598035 0.73757,0.233025 1.34643,0.72968 2.01699,1.099967 -0.87963,0.123293 -1.75665,-0.08475 -2.64025,0.06695 -0.64507,0.01903 -0.78502,-0.947218 -1.46196,-0.751374 -0.86961,9.55e-4 -1.79606,1.5e-4 -2.62566,0.169045 -0.38389,0.364698 0.79778,0.440642 1.10362,0.630702 0.9051,0.07288 0.46304,0.518003 -0.13576,0.725675 -1.09457,0.478819 -2.12455,1.50787 -3.40008,1.237998 -0.85914,-0.104109 -1.4549,-0.861658 -2.34001,-0.873639 -0.90898,-0.15308 -1.76118,-0.625352 -2.71145,-0.46854 -0.55635,-0.01889 -1.1006,0.116297 -1.65045,0.180181 1.27583,0.275513 2.61999,0.329652 3.77669,0.990898 1.40372,0.641647 2.96025,0.862037 4.49532,0.861104 -0.33263,0.519677 -0.50249,1.201683 -1.15836,1.398958 -1.0306,0.653004 -2.21018,1.212686 -3.46181,0.991226 -0.57768,-0.02265 -1.09914,-0.275752 -1.63784,-0.458185 -0.34853,0.496183 0.38144,1.065341 0.13922,1.372713 -1.29666,0.120132 -2.56789,-0.178869 -3.81272,-0.496523 -1.25499,-0.105499 -2.50496,-0.261966 -3.7575,-0.392193 1.05475,0.381007 2.05149,0.998487 3.20701,0.969025 0.93633,0.160758 2.01763,0.151369 2.77399,0.790977 -0.0912,0.477044 -0.83864,0.545011 -1.26433,0.637416 -0.8174,0.216502 -1.70966,-0.06696 -2.50634,0.0071 -0.71385,0.360784 0.60836,0.406353 0.88331,0.614054 -0.0395,0.379882 -0.80333,0.60502 -1.24512,0.705253 -0.71436,0.271953 -1.42578,0.583108 -2.08353,0.976166 0.35165,0.532366 0.14009,1.042753 -0.52836,1.036733 -0.7873,0.05766 -1.14166,0.901285 -1.62075,1.40886 -0.14432,0.698445 -0.72438,1.280567 -0.78419,1.970518 -6.2e-4,0.529478 -0.21466,1.042549 -0.0174,1.585749 -0.0224,0.570144 0.45794,0.976425 0.99568,1.000143 0.77577,0.321405 1.66936,-0.161479 2.43072,0.111085 0.57412,0.426692 0.72597,1.208148 1.22111,1.724879 0.50895,0.553223 0.58628,1.307895 0.39018,2.008037 1.19975,0.103765 2.31525,-0.566312 3.524,-0.439573 1.32189,-0.04505 2.52088,0.640514 3.82272,0.783578 1.04191,0.121737 1.9567,0.68645 2.87103,1.149833 0.47757,0.399221 0.8436,1.017107 1.5391,0.989094 1.52665,0.313349 3.10529,0.466306 4.51515,1.181062 0.76374,0.208114 1.53824,0.451994 2.32943,0.274596 0.72214,0.0531 1.444,-0.108614 2.16165,0.08528 0.6935,0.144898 1.45371,0.08243 2.08392,0.437127 -0.21919,0.561198 -0.61231,1.266132 -0.285,1.834999 0.59232,0.441406 0.31797,1.258699 0.22095,1.861791 -0.49305,0.521869 -0.14793,0.892063 0.43068,1.039393 0.5657,0.261809 0.87556,0.888247 0.64237,1.483818 1.27412,0.01678 2.53263,0.755043 3.079,1.923996 0.8948,-0.124192 1.55013,0.62063 2.27299,1.025002 -0.105,-0.464338 -0.83389,-0.904395 -0.36298,-1.329035 0.41185,-0.560033 0.96662,-0.233342 1.24699,0.270037 0.30309,0.780737 0.63425,-0.365775 0.45822,-0.706735 -0.3699,-0.522983 0.66735,-0.727235 0.53331,-1.343884 -0.1336,-0.718558 -0.83711,-1.239667 -0.77548,-2.024927 0.1068,-0.448248 -0.42284,-1.050213 -0.33623,-1.30677 0.77989,0.26353 0.52177,-0.732798 -0.0393,-0.784475 -0.61096,-0.0288 -1.00924,-0.493155 -1.09625,-1.072426 -0.24238,-0.526183 0.8386,-0.313776 1.16272,-0.523784 1.44026,-0.298815 2.64933,-1.19664 3.95016,-1.822308 0.82153,-0.689237 1.81145,-1.51 1.68063,-2.699975 -0.15697,-0.869586 -0.44978,-1.79705 -1.28201,-2.244896 -0.87474,-0.787251 -2.12272,-0.993744 -3.02965,-1.677237 -0.48277,-0.45959 0.63766,-0.566722 0.81635,-0.918693 0.40713,-0.492605 0.59818,-1.446622 1.40367,-1.321401 0.64336,-0.142332 0.27869,-0.948036 -0.009,-1.298197 -0.69554,-0.325274 0.54243,-1.167096 -0.34594,-1.106568 -0.32159,-0.110778 -1.62229,0.105003 -1.19301,-0.256205 0.52808,-0.453589 1.17547,-0.896419 1.39077,-1.576521 -0.44587,-0.356915 -1.34365,-0.408736 -1.20472,-1.176808 0.17356,-0.63923 0.98353,-0.962237 1.59891,-1.00691 1.7984,0.127507 3.52003,0.885802 5.34696,0.743343 0.95197,0.03525 1.88038,-0.276403 2.79093,-0.460963 1.29383,0.126649 2.29138,1.071648 3.4958,1.470093 0.86112,0.168289 0.40826,0.611355 0.6553,0.917917 1.27125,0.508868 2.64957,0.793147 4.00834,0.942247 0.47801,0.13195 1.0676,-0.51746 1.25162,0.155883 0.11359,0.570417 -0.91388,0.530874 -0.68229,1.192567 0.27623,0.687917 0.41073,1.427151 0.63245,2.119969 0.39718,0.429537 -0.0961,0.969535 -0.5983,0.76666 -0.59052,-0.220134 -0.62731,1.006826 -0.0265,0.902535 0.82347,-0.340279 1.76977,-0.632737 2.6472,-0.387595 0.47642,0.158231 1.05861,0.548142 0.87549,1.04424 0.30134,0.516631 0.90472,-0.152768 1.39544,-0.0011 0.81393,0.0097 1.77544,-0.155816 2.12019,-1.002318 0.36215,-0.517385 0.8927,0.267927 1.17895,0.541176 0.38597,0.271431 0.13712,-0.928526 0.54192,-1.152314 0.16135,-0.34359 1.20541,-0.524315 0.93595,-0.870581 -0.57593,-0.177009 -0.71338,-0.941964 0.0347,-0.86853 0.56629,0.05649 1.03259,-0.185307 1.28709,-0.700356 0.34244,-0.354363 0.93529,0.365096 1.24227,0.634651 0.49504,0.425692 1.12408,0.686664 1.42818,1.308538 0.39563,0.504812 1.10182,0.6955 1.42612,1.272616 -0.78288,0.490388 0.091,0.590148 0.39956,0.755835 0.15651,0.543241 0.53672,0.996243 1.14503,0.984156 0.45185,-0.122142 1.18717,0.787213 0.46206,0.793844 -0.86214,0.106682 0.0146,0.520771 0.35837,0.721162 0.46282,0.111603 1.21775,0.189381 1.083,0.847 -0.6434,0.451644 -1.4915,-0.08327 -2.20202,0.094 0.34539,0.342878 0.66891,0.749406 0.96387,1.143811 0.49696,0.344382 1.18144,0.08655 1.65851,0.527956 0.54104,0.448089 1.37033,0.51104 1.75363,1.125237 0.0201,0.430555 -0.92088,1.122449 -0.0407,1.027248 0.89308,-0.242762 1.8542,-0.319765 2.72659,0.07099 0.76974,0.32997 1.53204,0.663317 2.38333,0.690722 0.35857,0.173329 1.42924,0.06636 1.32527,0.421753 -0.44207,0.31541 -1.09028,0.373755 -1.62213,0.535439 -0.75677,-0.0065 -1.47719,0.268565 -2.07531,0.710911 -0.68483,0.42126 -1.6382,-0.03488 -2.20803,0.599941 0.11481,0.559501 -0.56838,1.153112 0.35502,0.731714 0.80981,-0.320349 1.77135,-0.157637 2.44112,-0.796898 0.87779,-0.593006 1.95009,-0.966207 3.0095,-0.894875 0.48647,0.09673 1.285,0.528272 0.57341,0.945815 -0.007,0.662913 0.76605,0.333797 1.1667,0.148862 0.66314,-0.148205 1.29566,0.385707 1.91025,0.605379 0.56798,0.374604 -0.15045,0.829375 -0.16097,1.279568 -0.71656,0.424287 0.2014,0.781534 0.50059,1.16416 0.34247,0.42587 -0.65916,0.666774 -1.00563,0.795271 -0.81266,0.47112 -1.63745,1.062781 -2.6277,0.939223 -0.85582,0.110672 -1.71596,0.180514 -2.58029,0.204782 -1.07026,1.081738 -2.35226,2.109636 -3.93808,2.191642 -1.73708,0.247082 -3.48883,0.291407 -5.23688,0.155311 -1.56518,-0.122724 -3.12758,0.174692 -4.69401,-0.0095 -1.26927,-0.06609 -2.58118,-0.148623 -3.82147,0.125527 -0.78254,0.224801 -1.37558,0.858816 -1.62036,1.612531 -0.67157,0.80026 -1.9232,0.284085 -2.74438,0.868851 -1.53064,0.703231 -2.74202,1.894959 -3.92964,3.053142 -0.44521,0.608438 -1.18988,0.92693 -1.47286,1.667887 -0.50643,0.813322 -0.22439,0.572965 0.28299,0.03149 0.83902,-0.385484 1.55323,-1.0336 2.23769,-1.667836 0.99758,-0.821242 2.19297,-1.332583 3.37906,-1.81361 2.13031,-0.649956 4.29299,-1.357419 6.53331,-1.43362 0.80291,0.02295 1.73361,0.195325 2.28462,0.813224 0.39091,0.549826 -0.22445,0.970274 -0.73524,1.019085 -0.7764,0.05639 -1.32565,0.886053 -2.1362,0.623248 -0.66087,-0.26764 -1.38863,-0.195966 -2.04455,0.05167 0.63503,0.261167 1.59934,0.05258 1.835,0.875 0.34323,0.216108 1.11259,-0.488747 1.36158,-0.301888 0.10422,0.0904 1.32754,-0.04685 0.41489,0.436855 -0.12913,0.43954 -0.229,0.777853 -0.85542,0.975761 -0.81686,0.310444 0.56181,0.126194 0.86496,0.184278 -0.0789,0.504611 -0.0963,0.869972 0.30018,1.033405 0.0771,0.449029 0.37641,1.020294 0.91475,0.894454 0.28426,0.09429 1.2907,0.06473 1.04956,0.262697 -0.92775,0.09007 -0.27691,0.169888 0.12907,0.532987 0.47479,-0.0955 0.86654,0.112524 1.26233,0.236527 0.15583,-0.1464 1.04472,-0.193271 1.18637,0.105823 -0.265,0.20945 0.91665,0.02596 1.1555,-0.240874 0.57658,-0.511957 0.51584,0.662478 1.18828,0.30849 0.59087,-0.1668 0.88587,0.502426 0.41777,0.675801 0.35069,0.004 1.52403,0.154153 0.58846,0.340188 -0.55723,-0.196541 -0.44478,0.325529 -1.12134,0.09706 0.0331,0.297454 -0.58798,0.169428 -0.89963,0.446459 -0.51762,0.0222 -0.80225,0.30682 -1.24968,0.331 -0.46426,0.28256 -0.94514,0.34793 -1.23536,0.1321 -0.39372,0.32594 -0.51434,0.21705 -0.92813,0.64188 -0.78162,0.25532 -0.5266,-0.87348 -0.96053,-0.0746 -0.2235,-0.34485 -1.0359,0.0788 -0.54243,0.19482 0.26293,0.44333 -0.68384,0.3431 -0.95546,0.73119 0.2566,0.35972 -0.67435,0.39353 -0.36771,0.60061 -0.39156,0.0697 -0.37589,0.32634 -0.9145,0.29506 -0.43887,0.26679 -0.3765,0.38216 -0.95651,0.36994 -0.33305,-0.75195 -0.6334,-0.27028 -0.83448,-0.8259 -0.4138,-0.44438 0.0172,-1.01974 0.3853,-1.32632 0.56167,-0.56287 -0.99139,0.50753 -0.46303,0.003 0.25415,-0.42358 1.36636,-0.23766 0.842,-0.47063 0.92085,-0.45172 1.93559,-0.922169 2.85822,-1.447883 0.3859,0.03881 0.45081,0.911323 0.66798,0.575407 0.0294,-0.47697 0.90223,-0.401786 1.30813,-0.543747 0.82537,0.10002 -0.0732,-0.278721 -0.46861,-0.158778 -0.83881,0.124904 -1.73656,-0.228781 -2.53351,0.180112 0.0763,-0.521727 0.94127,-0.45413 1.18406,-0.862808 0.67803,-0.711901 -0.38242,0.187263 -0.31973,-0.348833 -0.79048,-0.753908 0.28449,0.07012 -0.33417,0.415574 -0.42176,0.212512 -1.01607,0.327876 -1.4894,0.580781 -0.50698,0.125346 -1.06703,0.694867 -1.55276,0.254288 -0.039,-0.176707 -0.35175,0.709207 -0.92412,0.424463 -0.42956,-0.220112 -1.04336,-0.01529 -1.37294,-0.06563 -0.0187,-0.01914 -0.25438,-0.150621 -0.21595,-0.14083 z M 186.19299,47.833 c -0.90694,-0.01125 -1.78773,-0.263397 -2.68934,-0.321292 -1.21866,-0.382795 -2.49181,-0.458883 -3.73764,-0.700707 0.62668,-0.632308 1.62513,-0.475027 2.35699,-0.926003 -0.0398,-0.582037 0.33172,-1.064486 0.95127,-0.953109 1.2144,-0.02602 2.23721,0.82396 3.41203,1.052182 0.52037,0.07838 0.52674,0.804886 1.1445,0.868441 0.82315,0.237179 0.63306,0.452757 -0.0933,0.634938 -0.43986,0.180346 -0.85853,0.361084 -1.34448,0.34555 z M 231.09,50.646 c -0.70723,-0.08092 -1.83388,0.230861 -2.09071,-0.674639 -0.18572,-0.540547 0.56157,-0.888151 0.86578,-1.265155 0.66117,-0.405133 1.50039,-0.463146 2.25461,-0.453648 0.53193,0.08288 1.03601,0.257211 1.52732,0.473444 -0.1044,0.502399 0.18648,1.22373 -0.42199,1.455997 -0.69071,0.286249 -1.38914,0.432271 -2.13501,0.464001 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"USA\"\n\t\t\t\t\t\t\td=\"m 60.074001,72.607002 c -0.383477,0.921891 -1.564475,1.152029 -2.406584,0.728716 -0.604307,-0.02835 -1.084106,-0.658708 -0.295485,-0.883533 0.424379,-0.431722 0.788992,-0.462186 1.280068,-0.06918 0.446411,0.213721 1.067638,-0.255209 1.043999,-0.748001 0.737351,-0.05032 1.633028,-0.07669 2.175061,0.497361 0.02372,0.366348 -0.987929,0.05887 -1.353521,0.278994 -0.149912,0.0588 -0.340278,0.06786 -0.443538,0.195645 z m -19.982002,4.963997 c -0.513933,0.249123 -1.250626,-0.412704 -0.559903,-0.646291 0.878845,-0.133677 1.411726,-1.06109 2.355027,-0.989286 0.789714,0.01595 1.595259,0.198556 2.342877,0.468577 -0.205424,0.53421 -0.958271,0.06194 -1.402027,0.199625 -0.605348,0.07896 -1.264543,0.07848 -1.736937,0.498659 -0.332204,0.156369 -0.670648,0.311682 -0.999037,0.468716 z m -1.666,0.407997 c -0.717467,0.012 -0.768311,-0.931037 -0.02557,-0.621874 0.587522,0.105872 0.702423,0.551103 0.02557,0.621874 z M 37.896,78.448997 c -0.636957,0.319172 -1.33699,0.175899 -2.006892,0.206267 -0.525142,0.07746 -0.740833,0.938346 -1.356505,0.606017 -0.896213,-0.02376 -0.520556,-0.628359 0.07892,-0.848361 0.592749,-0.365395 1.364822,-0.254175 1.971686,-0.636496 0.488074,-0.110667 1.055723,0.26649 1.312789,0.672573 z m -8.268,2.841004 c 0.08986,-0.487579 -0.924649,-1.196016 -0.05348,-1.141084 0.343387,-0.153096 1.489023,0.05088 1.081032,0.458182 C 30.202536,80.777251 30.2371,81.22007 29.628,81.290001 Z m -2.085001,0.301002 c -0.508805,-0.0735 -1.230482,0.496327 -1.529999,-0.115005 0.313565,-0.46196 0.859059,-0.573695 1.317999,-0.254997 0.0705,0.122815 0.14232,0.250256 0.212,0.370002 z m 26.851002,76.394987 c -0.67338,-0.17551 -0.573002,-0.77518 -0.633017,-1.32361 -0.525194,-0.56764 0.230043,-0.74217 0.234015,-1.19538 -0.460769,-0.69471 0.525931,-0.32689 0.831422,-0.12223 0.572878,0.10173 0.737988,0.69117 1.059581,0.85024 0.413348,0.44002 0.444652,0.64694 -0.144106,0.9639 -0.560723,0.10558 -1.092046,0.27067 -1.347895,0.82708 z M 23.014999,59.919998 c -1.249707,-0.529355 -2.561304,-1.112081 -3.952563,-0.855397 -0.483021,0.06324 -1.205577,-0.553757 -0.380083,-0.621801 0.832793,-4.98e-4 1.665432,0.374801 2.507648,0.115199 0.807454,-0.06834 1.520376,0.426445 2.322504,0.484727 0.306432,0.0106 1.482643,0.342628 1.066044,0.499917 -0.578603,-0.04174 -1.133117,-0.07545 -1.56355,0.377355 z m 76.840004,11.072998 c 0.131059,0.309982 0.843777,1.327933 0.05648,0.990942 -0.334253,-0.05226 -1.369697,-0.575098 -1.107104,0.109423 0.02878,0.67555 -0.715348,-0.255136 -1.057027,-0.328734 -0.691994,-0.157945 -0.849692,-0.551106 -0.167755,-0.901979 0.513754,-0.28608 1.04179,-0.02556 1.505399,0.23835 0.256007,-0.03595 0.517313,-0.07228 0.770004,-0.108002 z m 1.119997,2.613007 c 0.33453,0.289953 -0.27514,1.408901 -0.47702,0.734917 -0.32066,-0.55392 -0.833342,-1.037927 -0.994982,-1.658921 0.184277,-0.438815 1.144092,-0.116009 1.213612,0.33809 0.086,0.195336 0.17309,0.390435 0.25839,0.585914 z m 5.883,4.600998 c -0.82209,-0.561678 -1.77276,-0.959843 -2.438,-1.721001 0.21256,-0.560866 -0.49469,-0.934912 -0.49955,-1.383818 0.51136,-0.142914 0.81826,0.454932 1.32659,0.520747 0.7164,0.06549 0.61016,0.53055 0.56777,0.948092 0.1421,0.576073 1.20424,0.342686 1.03774,1.018368 0.002,0.205223 0.002,0.416351 0.005,0.617612 z M 140.19099,127.819 c -0.24552,-0.52391 -0.50391,-0.47919 -0.38812,-1.14294 -0.33705,-0.90019 -1.2611,-1.59006 -2.17638,-1.77678 -0.3752,0.39144 -0.2852,-0.40979 -0.61549,-0.58428 -0.53366,0.0699 -1.01377,-0.0361 -1.51442,-0.27246 -0.2924,-0.4521 -0.77511,-0.62742 -1.28472,-0.5646 -0.48684,-0.19059 -1.09735,-0.0257 -1.52622,-0.15348 -0.45783,-0.20994 -0.34974,-0.75446 -0.34119,-1.23169 0.13854,-0.4447 -0.83708,-0.23157 -0.49745,-0.84277 -0.40968,-0.27289 -0.84972,-0.54339 -1.1577,-0.91577 -0.27576,-0.41378 -0.5933,-0.76135 -1.04593,-0.99393 -0.35941,-0.55877 -0.0343,-0.69855 0.16538,-1.0993 0.0238,-0.67865 -0.85027,-0.2216 -1.10196,-0.71867 -0.43741,-0.32588 -0.30781,-0.82003 -0.51842,-1.27214 0.22064,-0.70841 0.25182,0.27868 0.69063,0.28581 0.72299,0.39606 -0.31986,-0.51624 -0.27001,-0.809 -0.42578,-0.61575 -0.27486,-0.33848 -0.42099,0.16 -0.39545,-0.21894 -0.96794,-0.35085 -1.064,-0.919 -0.39253,-0.69214 -1.17908,-0.99049 -1.655,-1.618 0.15169,-0.37442 -0.38333,-0.91575 -0.0936,-1.3605 -0.234,-0.69204 -0.89157,-1.10206 -1.22876,-1.70533 -0.16338,-0.86627 0.63498,-1.57553 0.52026,-2.45228 -0.0402,-1.23898 -1.19415,-2.23998 -0.99351,-3.50241 0.2116,-0.48279 0.87708,-0.51466 0.95479,-1.11774 0.16319,-0.4445 -0.63804,-0.87678 -0.25675,-1.40918 0.33923,-1.11666 0.58308,-2.249201 0.65659,-3.415559 -0.35426,-0.388057 0.11537,-0.653782 -0.126,-1.110001 0.66412,0.06338 0.60073,-0.103067 -0.14487,-0.175893 -0.06,-0.290643 -0.16864,-1.049723 -0.0322,-1.361904 0.98771,-0.06002 -0.11757,-0.522397 -0.14096,-0.193205 -0.34504,-0.08296 -0.0575,-1.009365 -0.49077,-1.302252 -0.23711,-0.514553 -0.90924,-1.022332 -0.64389,-1.616053 0.56089,-0.167466 1.16683,0.33405 1.77022,0.311919 0.81142,0.171531 1.72353,-0.199078 2.40644,0.425386 0.21018,0.577828 -0.46003,0.838899 -0.794,1.189003 0.51597,-0.103603 0.96587,0.904849 1.09731,0.129011 0.45258,-0.300034 0.66326,-0.783176 0.73884,-1.319156 0.0155,-0.645492 -0.28285,-1.3228 -0.62195,-1.856842 -0.72979,-0.443848 -0.51611,-0.518534 0.23074,-0.447775 6.08004,0.01916 12.16056,1.34e-4 18.24086,5.51e-4 3.63299,-0.03021 7.26596,0.02676 10.8983,-0.01063 8.99734,0.0048 17.99451,0.04859 26.99166,0.03721 1.8181,0.04206 3.6361,-0.0069 5.45424,-0.0044 -0.23655,-0.359313 -0.89292,-1.140229 -0.017,-0.971001 0.63597,0.441723 1.10214,1.03901 1.64301,1.579002 0.47612,0.332141 0.95791,0.508638 1.52683,0.400666 0.44937,0.117501 1.16122,0.0297 1.35792,0.363401 0.50749,0.331998 0.47871,0.395411 1.12433,0.236433 0.36831,0.304911 0.76344,0.446491 1.18082,0.611073 0.61087,0.07062 1.14279,-0.35583 1.73409,-0.436577 -0.0295,0.701368 0.84828,0.217952 1.25704,0.330316 0.47681,0.103691 0.83589,0.373528 1.36769,0.254183 0.89937,0.203727 1.6367,-0.583402 2.51825,-0.658344 0.79897,-0.131582 1.55501,0.416081 2.30781,0.644086 1.98493,0.788017 3.99418,1.521287 5.87722,2.53876 0.0454,0.537289 0.52505,1.058382 1.09369,0.873644 0.39859,0.267582 0.7399,0.620913 1.32894,0.597593 0.56482,0.17415 0.0595,0.956124 0.82959,1.028039 0.73359,0.304575 1.46718,0.609151 2.20076,0.913726 0.28963,1.26753 0.82765,2.49384 0.92668,3.79379 0.13538,0.73561 -0.47263,1.22912 -0.74193,1.85307 -0.23964,0.65806 -1.18591,0.75578 -1.38274,1.39414 -0.0286,0.86595 1.12104,1.10756 1.79985,0.91655 1.18402,-0.4827 2.2761,-1.39173 3.63033,-1.33339 1.21507,-0.12634 2.41196,-0.48581 3.49282,-1.05616 -0.0189,-0.52289 -0.53134,-1.26978 0.10013,-1.59746 1.19697,-0.42263 2.51632,-0.15007 3.75246,-0.0905 0.64628,-0.11179 1.60946,-0.11038 1.67013,-0.96505 0.004,-0.63054 0.70627,-0.50521 1.09524,-0.78903 1.01949,-0.40188 1.95265,-1.02781 2.9419,-1.45545 2.21738,0.008 4.4401,-0.0262 6.65374,0.0783 0.65619,0.30686 0.60409,-0.622988 1.09827,-0.781979 0.4947,-0.158495 1.08979,0.175162 1.53002,0.0072 0.73283,-0.852248 1.36331,-1.770092 1.81416,-2.803055 0.32585,-0.783893 0.86345,-1.456548 1.55495,-1.949073 0.50981,0.106048 0.93539,0.798249 1.48557,0.389809 0.63101,-0.164006 1.60453,0.09938 1.55527,0.90446 0.0485,0.87557 0.29203,1.772178 0.21452,2.634166 0.28755,0.345237 1.11103,0.149753 0.72865,0.770563 -0.55693,0.35904 0.78467,0.243428 0.38235,0.838589 -0.12423,0.18942 0.65125,0.19176 -0.18635,0.57941 -0.68392,-0.0794 -0.75619,0.31604 -1.20193,0.12785 -0.41578,-0.0125 -0.70129,0.94662 -0.93708,0.19115 -0.63723,0.19157 -0.97053,0.28232 -0.99926,0.54587 -0.82434,0.10667 -0.0405,-1.19613 -0.7015,-0.31493 -0.27703,0.29167 -0.48194,1.13907 -0.92877,0.9471 -0.19191,-0.20987 -0.88764,0.79127 -0.65146,-0.073 -0.23198,0.20709 -0.51126,1.08358 -0.72913,0.41184 -0.49106,-0.15969 -0.51966,0.5305 -0.85809,0.66874 -0.26081,0.4021 -0.71931,0.57924 -0.8663,1.1458 -0.54421,0.30201 -0.18558,0.98301 0.31251,0.77962 -0.4244,0.28922 -0.75133,0.2421 -1.04293,0.71869 0.33912,0.065 0.91368,0.40364 1.16169,0.874 -0.0598,0.70529 0.73,0.51932 1.14898,0.29897 0.0606,-0.24474 -0.92078,-0.78444 -0.15291,-0.51571 0.53554,0.41837 0.34851,1.07116 -0.37406,0.95474 -0.6112,0.29476 -0.94864,0.008 -1.09437,-0.20666 -0.26887,0.20788 -0.60816,0.60097 -0.99833,0.43093 0.32087,-0.65651 -0.1995,-0.60771 -0.48705,-0.43398 0.0702,0.72007 -0.34903,0.87752 -0.99875,0.82874 -1.41527,0.11576 -2.87476,0.1836 -4.14814,0.88538 -0.34985,0.43675 -0.91008,0.58141 -0.41747,-0.15208 0.21631,-0.70294 -0.31039,0.50392 -0.38366,0.73498 -0.68153,-0.12259 -0.39299,0.78935 0.25871,0.61841 -0.16793,0.60883 -0.28408,1.41239 -0.73471,1.94859 -0.35572,-0.18538 -0.30998,0.64563 -0.81616,0.81558 -0.42359,0.57677 -0.73416,0.57408 -0.61308,-0.0746 -0.48094,0.0423 -0.97869,-0.2999 -1.22742,-0.71464 -0.36113,-0.30338 0.78507,-1.03496 -0.0736,-0.49333 -0.56627,0.39945 0.44118,0.89184 0.28408,1.44187 0.17291,0.56015 0.8381,0.54481 0.739,1.17735 0.14677,0.6154 -0.50503,0.71985 -0.71192,1.19381 -0.30724,0.27666 -0.3891,1.08073 -0.66967,1.07946 -0.29062,-0.0156 -0.39347,1.32816 -0.74636,0.5961 0.17481,-0.44018 0.25634,-1.1064 0.77014,-1.2996 0.0465,-0.48016 -0.56286,-0.0655 -0.26738,-0.54396 -0.74115,0.0892 0.41382,-0.89636 -0.4243,-0.43135 -0.30297,0.19483 -1.17538,-0.47185 -0.41732,-0.62069 0.90062,-0.0415 -0.4795,-0.48539 -0.38806,-0.34834 0.26893,-0.36586 0.76725,-0.12353 0.0135,-0.5265 0.43031,-0.22981 0.71311,-0.32047 0.2141,-0.49861 0.3989,-0.62612 0.95359,-0.17728 0.60612,-0.75858 -0.12131,-0.4506 -0.41775,0.67596 -0.63681,0.15702 0.007,0.38973 -0.20377,0.11774 -0.4718,0.48008 -0.58542,-0.15464 0.55909,0.65169 -0.12118,1.0219 -0.0836,0.36601 0.66772,1.28992 -0.12315,0.71116 -0.54368,-0.54191 0.18459,0.37163 0.44467,0.46786 0.37381,0.82992 -0.5724,-0.14162 -0.90954,-0.069 -0.19633,-0.26129 -0.35237,-0.11906 -0.97842,-0.29493 -0.14736,-0.3437 0.70619,-0.92468 -0.11824,-0.36142 -0.39801,0.6661 0.61949,0.4385 0.82468,0.85676 0.60439,0.10565 0.81648,0.37968 1.33308,0.51476 0.51823,0.34362 -0.38337,1.01304 -0.66797,0.34717 -0.72379,-0.60644 -0.57537,-0.39189 -0.0356,0.19099 0.60015,0.36298 0.65276,0.25645 0.78071,0.56087 0.12317,0.46532 -0.4297,-0.008 -0.42997,0.42118 -0.45672,-0.34339 -0.98718,-0.79823 -0.30663,-0.064 0.36752,0.005 1.11194,0.5597 0.4461,0.71236 -0.31523,-0.22384 -0.7624,-0.97597 -1.20152,-0.56477 0.52959,0.0684 0.92074,0.63191 1.10419,0.79477 0.3415,-0.13689 1.11691,-0.25031 1.1948,0.36223 0.22062,0.69997 0.44321,1.39906 0.85401,2.015 -0.6688,-0.45676 -0.56348,-1.38787 -0.96701,-2.022 0.25394,0.61596 -0.39773,0.32178 0.138,0.824 0.43884,0.912 -0.0698,0.20422 -0.12542,0.32269 -0.41058,-0.17963 -0.62008,-0.31625 -0.39362,0.14388 -0.80351,0.004 -0.337,-0.16424 -0.84296,0.29143 -0.59437,0.10237 -0.37386,-1.17719 -0.50361,-0.27947 -0.0779,0.61845 0.4823,0.42134 0.99973,0.4226 0.85506,-0.42414 0.31618,0.3939 0.56488,0.66787 0.0304,-0.54347 0.5712,-1.0259 0.70087,-0.2455 -0.0994,0.50728 -0.57113,0.25991 -0.82929,0.8414 -0.44428,0.28977 -0.93431,-0.18309 -1.23358,-0.3269 0.46649,0.60842 -0.91892,-0.12614 -0.84947,0.0478 0.27936,0.26105 1.10211,0.2094 1.17146,0.59816 -0.53174,-0.0188 -0.0195,0.6135 -0.83906,0.48537 -0.70617,-0.72327 -0.16953,0.37633 0.33839,0.19485 0.44013,-0.16844 0.7969,-0.34442 0.86067,0.0452 -0.35693,0.39855 -0.7952,0.49228 -1.33464,0.52611 -0.57609,-0.0174 -1.02694,0.21051 -1.35006,0.68847 -0.49822,0.38376 -0.7042,1.21718 -1.45326,1.13661 -1.04915,0.11507 -2.34573,0.57541 -2.55202,1.7484 -0.76013,0.69186 -1.66091,1.37856 -2.73801,1.362 -0.54134,0.96528 -1.44011,1.72556 -1.67029,2.85079 -0.21807,0.58276 -0.5243,1.15706 -0.2839,1.78383 0.16619,1.5701 1.23217,2.83819 1.91676,4.20047 0.17308,0.98123 0.37112,1.95494 0.82043,2.85291 0.11907,0.32451 0.49096,0.87854 0.38813,1.40981 -0.0868,0.66547 -0.19414,1.37113 -0.4093,2.00337 -0.48433,0.39399 0.12054,1.06419 -0.47839,1.45382 0.034,-0.0653 -0.0895,-0.54008 -0.71397,-0.2173 -0.64626,0.0436 -0.85848,-0.0476 -0.94946,-0.75013 -0.22265,-0.53581 -0.48095,-1.02278 -1.14149,-0.95892 -0.53856,-0.30649 -0.0452,-1.26766 -0.7722,-1.39414 0.0179,-0.76592 -0.42764,-0.5156 -0.72367,-0.93621 -0.0878,-0.41277 -0.90574,-1.14079 -0.63096,-1.2523 0.47448,0.0591 0.74572,-1.19467 0.17263,-0.71572 -0.57353,0.60519 -0.56922,-0.4238 -0.36957,-0.80996 0.0475,-0.55145 0.34259,-1.17569 0.15759,-1.68843 -0.18825,-0.61855 -0.98769,-0.39167 -1.23666,-0.93755 -0.56511,-0.61692 -1.09135,-1.42427 -1.94868,-1.61933 -0.82339,0.0212 -1.28454,0.87644 -2.11177,0.89558 -0.64989,0.38657 -0.86512,-0.27806 -0.97893,-0.76855 -0.42683,-0.55055 -1.24775,-0.15863 -1.7223,-0.66904 -0.34727,-0.46522 -1.00715,0.0941 -1.51891,-0.008 -0.67487,-0.11058 -0.84154,-0.0935 -1.30831,0.19643 -0.61656,0.28822 -0.73169,-0.50549 -1.03634,-0.85978 -0.11208,0.4964 -0.24789,0.92951 -0.87614,0.62472 -0.64281,0.0674 -1.35437,-0.15666 -1.94907,0.0579 -0.39172,0.35921 -0.94396,0.53769 -1.39772,0.17444 -0.45159,-0.37703 -0.92494,-0.23271 -1.11551,0.31438 0.33198,0.55969 0.9752,-0.0152 1.4253,0.0613 0.42846,0.12178 1.31737,0.60419 0.4413,0.79112 -0.60675,0.38347 0.32392,0.88421 0.72789,0.93072 0.68396,0.37923 0.39146,0.73058 -0.28139,0.58198 -0.44216,-0.18819 -0.70579,-0.70419 -1.3061,-0.7301 -0.31494,-0.63179 -1.07523,0.12712 -0.35901,0.33252 0.0171,0.72508 -0.60723,-0.42655 -0.98859,-0.0196 -0.40962,0.55408 -0.89327,0.12415 -1.40185,-0.0959 -0.40276,-0.55808 -1.04136,-0.83501 -1.63556,-1.16204 -1.22383,-0.0675 0.33021,0.36699 -0.36451,0.64388 -1.04928,0.0588 -2.01688,-0.40553 -3.04378,-0.491 -0.71397,0.10755 -1.48108,0.0402 -2.0907,0.49112 -0.7168,0.24042 -0.80815,-0.45305 -1.22273,-0.49103 -0.54267,0.31805 0.80919,0.95702 -0.0671,1.18891 -0.9055,0.68763 -1.94506,1.53389 -3.16198,1.24573 -0.81305,-0.30088 -0.77339,0.20115 -0.37509,0.61346 -0.2967,0.74438 -1.23636,0.512 -1.81849,0.87744 -0.92201,0.24565 0.79558,0.48882 0.14787,0.90978 -0.43161,0.36001 -0.7551,0.83373 -0.63826,1.41959 0.0321,0.89836 0.46122,1.72659 0.8368,2.52712 -0.62796,-0.15919 -1.20534,-0.74659 -1.875,-0.379 -0.76086,-0.25214 -1.41248,-0.7782 -2.214,-0.94901 -0.73712,-0.58666 -0.91939,-1.59339 -1.18561,-2.41697 -1.11398,-0.86862 -1.89665,-2.05015 -2.59375,-3.26108 -0.40539,-0.80379 -1.06133,-1.46044 -1.95131,-1.69256 -0.78338,-0.29996 -1.71847,-0.13031 -2.22943,0.57224 -0.4823,0.38755 -0.78665,1.15675 -1.53021,0.98758 -1.00289,-0.14531 -1.90953,-0.7481 -2.73464,-1.30323 -0.7876,-0.72107 -0.60147,-2.12262 -1.68112,-2.58541 -0.89559,-0.53605 -1.7528,-1.14597 -2.43094,-1.94957 -0.70626,-0.2534 -1.52615,-0.0866 -2.27869,-0.15827 -0.5601,-9.1e-4 -1.1202,-0.002 -1.68031,-0.003 -0.0104,0.5218 -0.0269,1.20957 -0.75322,0.99561 -1.92289,0.002 -3.8507,-0.0368 -5.77016,-0.0961 -2.60306,-0.76264 -5.18778,-1.6253 -7.75257,-2.50585 -0.39847,-0.45374 -0.90599,-0.45944 -1.48278,-0.38515 -1.36295,0.027 -2.77421,0.14672 -4.10127,0.22254 z m -90.372989,24.957 c -0.418495,0.12575 -1.024662,0.11957 -1.286115,-0.31937 -0.330824,-0.32882 0.707329,-0.74832 0.754249,-0.26405 0.0409,0.31413 0.411762,0.28637 0.531866,0.58342 z m 2.966999,1.536 c -0.03908,-0.38336 -1.034953,-0.73747 -0.463001,-1.045 0.392099,0.30373 1.092598,0.25851 1.32342,0.70881 -0.09245,0.32297 -0.580956,0.28702 -0.860419,0.33619 z m 58.898,-77.088001 c -0.0126,0.689553 -0.87874,0.321025 -1.18449,0.823154 -0.65694,-0.01612 -0.50719,-0.67707 -0.37378,-1.120035 -0.093,-0.443348 -0.46655,-0.866392 -0.88273,-1.088121 -0.27457,-0.528081 -0.99377,-0.129184 -1.48,-0.215996 -0.37995,-0.05269 -1.08715,0.732341 -1.11197,0.07443 -0.13455,-0.549104 0.75419,-0.889568 -0.0824,-1.224552 -0.72087,-0.361706 -1.09512,-1.1777 -1.91161,-1.369296 -0.78942,-0.01192 -0.17523,-0.659945 -0.82402,-0.965985 -0.54137,-0.391142 0.59867,-0.783817 -0.41017,-0.889509 -0.65555,-0.09046 -0.97478,-0.810978 -1.6332,-0.951638 -0.53003,-0.166196 -1.01591,-0.384749 -1.21285,-0.945885 -0.25801,-0.424373 -0.3669,-1.290824 -1.042793,-1.128563 -0.15211,0.54989 -0.08189,1.063333 0.245677,1.534589 0.501456,0.709673 -0.256272,0.620333 -0.741816,0.427592 -0.447214,-0.183768 -0.693447,-0.814125 -1.097871,-0.968916 -0.547107,0.242313 -1.112701,-0.05589 -1.66999,-0.111269 0.39107,0.324452 1.110995,0.42336 1.289284,0.893746 -0.47649,0.115204 -1.154817,0.185554 -1.698897,0.182163 -1.141467,-0.191432 -1.931002,-1.07783 -2.939386,-1.562908 -1.049899,0.0153 -2.032852,-0.370181 -2.975998,-0.792 0.383578,-0.09663 1.496784,-0.259608 0.773464,-0.728886 -0.715427,-0.300099 -1.449999,0.332218 -2.203464,0.19289 -0.722452,-0.0046 -1.430229,-0.112527 -2.126,-0.305 0.133417,-0.657342 -0.839066,-0.634193 -1.213145,-0.349583 -1.319383,0.190661 -2.653449,-0.157031 -3.984027,-0.01208 -1.002282,0.09895 -2.162216,-0.07248 -2.75143,-0.982536 -0.302095,-0.107334 -0.893135,0.415801 -1.349182,0.206631 -0.613563,-0.02129 -0.831919,-0.580074 -1.372214,-0.702437 -1.275983,-0.458421 -2.726893,-0.303613 -3.898002,-1.068001 -0.335812,0.397222 -1.403935,0.0066 -1.179657,0.666097 -0.128758,0.151606 -1.208051,0.717226 -0.561489,0.869422 0.45636,0.09866 1.276589,0.201133 0.949785,0.864475 -0.242544,0.536565 -0.826131,0.600461 -1.325933,0.378744 -0.78548,-0.293247 -1.649818,-0.147961 -2.284997,0.399568 -0.627682,0.330049 -1.40839,0.263487 -2.008992,0.698928 -0.735718,0.38474 -1.504324,0.668291 -2.344718,0.659769 0.04824,-0.569076 0.943233,-0.551027 0.919277,-1.004731 0.0137,-0.457808 -1.195568,-0.698484 -0.411409,-1.047479 0.480401,-0.301205 0.958002,-0.697348 1.096132,-1.272787 1.184286,-0.646621 2.556706,-0.655434 3.856003,-0.442001 0.553482,-0.304622 -0.744498,-0.40613 -1,-0.622002 -0.5897,-0.292525 -1.197792,-0.475973 -1.858513,-0.347305 -0.414414,0.235321 -0.953009,0.309417 -1.324607,0.699011 -0.809689,0.548365 -1.896803,0.479821 -2.606972,1.191191 -0.548837,0.248307 -0.992828,0.269129 -0.838919,0.944732 -0.214074,0.724573 -1.141654,0.628709 -1.740856,0.800221 -0.568157,0.143 -1.129185,0.52697 -1.437708,0.999365 -0.02383,0.54154 0.86481,0.330865 1.242061,0.485454 0.738564,0.03226 0.621619,0.612319 0.01589,0.800408 -0.758795,0.133043 -1.305422,0.649142 -1.883625,1.103666 -0.567577,0.28942 -1.281355,0.23817 -1.898167,0.444153 -0.681462,0.129137 -1.211979,0.648757 -1.914495,0.755947 -0.520688,0.177319 -1.214004,0.450718 -0.44277,0.860231 0.08847,0.431902 -0.818347,0.423709 -1.134319,0.647928 -0.909128,0.11365 -1.788119,0.326824 -2.606877,0.737212 -0.509125,0.160729 -1.040204,0.343805 -1.268123,0.875787 -0.913908,0.682783 -2.103373,0.639248 -3.18,0.851997 -0.369916,-0.161862 -1.417999,-0.290523 -0.726677,-0.783145 0.486464,-0.286836 1.102543,-0.394492 1.49954,-0.857126 0.632447,-0.333588 1.336634,-0.63696 2.070701,-0.482173 0.950392,0.336502 0.159032,-0.53505 0.728246,-0.841318 0.626528,-0.406773 1.421969,-0.525311 1.99119,-1.030233 -0.04365,-0.686818 0.04387,-1.532949 0.755825,-1.839069 0.445099,-0.24172 0.652632,-1.270264 -0.110289,-0.840046 -0.683372,0.06713 -1.45116,0.350951 -2.093583,0.11 -0.268376,-0.620109 -0.781577,-0.532875 -1.295547,-0.26019 -0.391491,0.256207 0.582469,1.212715 -0.325473,0.908696 -0.844587,-0.263443 -1.379785,-1.232602 -2.351036,-1.093891 -0.542976,-0.123391 -1.088234,-0.07704 -1.633898,-5e-4 -0.10599,0.442791 -0.876169,0.523983 -1.321798,0.560093 -0.474728,0.06456 -1.338495,0.171755 -1.296375,-0.528693 -0.294987,-0.574859 0.232577,-1.023945 0.123766,-1.524567 -0.218395,-0.428464 -0.638003,-0.941895 -1.007563,-1.15387 -0.707277,0.238106 -1.428996,0.441429 -2.162576,0.528611 -0.437674,0.254612 -1.020025,0.247346 -1.494475,0.212138 -0.657042,-0.422973 -1.217488,-1.00026 -1.990232,-1.236873 -0.734839,-0.230555 0.06289,-0.752625 0.337421,-0.962629 0.891339,0.09672 1.811627,0.588499 2.68219,0.398495 0.369417,-0.363771 -0.498144,-0.980844 -0.924904,-0.917705 -0.503119,0.182539 -1.070457,0.354921 -1.580413,0.04637 -0.786849,-0.334051 -1.590844,-0.628417 -2.457429,-0.548386 -0.228466,-0.118998 -0.925496,-0.986089 -0.62184,-1.109542 0.76953,0.117423 0.480656,-0.682352 1.093882,-0.785557 0.229854,-0.413883 0.50869,-0.876948 1.0412,-1.028353 0.678352,-0.419698 1.144246,-1.180248 1.910147,-1.480536 1.060573,0.04604 2.155434,0.828244 3.165082,0.19073 0.52994,-0.373935 1.081454,-0.682394 1.74326,-0.725385 0.802376,-0.238041 1.715203,0.06248 2.464659,-0.335344 0.375902,-0.557403 -0.03823,-1.236099 -0.547583,-1.547798 -0.815044,-0.538779 0.328292,-0.323482 0.685784,-0.468346 0.609106,-0.3004 -0.259134,-0.836795 -0.648824,-0.880704 -0.715467,-0.02967 -1.448059,0.245361 -2.154695,0.382643 -0.795904,0.272285 -1.5288,0.972099 -2.418832,0.642501 -1.423707,-0.31405 -2.895426,-0.37836 -4.333678,-0.142333 -1.023341,-0.03342 -2.097971,-0.0037 -3.055173,-0.407963 -0.22363,-0.509847 -0.262955,-1.146272 0.493379,-0.961623 0.524658,-0.04322 1.082125,0.102439 1.557621,-0.186376 -1.845499,-0.423343 -3.729021,-0.655878 -5.592001,-0.992001 1.172571,-0.602059 2.545869,-0.44997 3.775443,-0.888901 1.395466,-0.281772 2.713478,-0.850969 4.131871,-1.044059 0.612397,-0.153586 1.245142,0.04999 1.866686,0.05696 -0.335064,0.567211 -0.104884,0.997428 0.567599,0.907628 1.621933,0.193743 3.400106,0.35064 4.857102,-0.537461 0.844658,-0.132772 1.707146,0.248704 2.567684,0.0765 C 45.30752,52.364826 44.731529,51.95924 44.175135,52.081817 43.133268,51.917566 42.092459,51.741941 41.034,51.756001 40.923146,51.131591 40.564957,50.836458 39.92715,50.913583 38.861573,50.78659 37.785069,50.806326 36.716,50.712002 36.566272,49.861392 35.560895,49.740558 34.910644,49.403328 33.216644,48.945716 31.502796,48.562285 29.816,48.076 c 0.359782,-0.308828 1.120955,-0.301471 1.175538,-0.831453 0.142092,-0.487044 1.015339,-0.123936 1.460594,-0.258476 1.267246,-0.02589 2.564915,-0.126302 3.776799,-0.484762 0.713654,-0.141026 0.863099,-0.948961 1.495477,-1.233916 0.852614,-0.77101 1.8969,-1.404345 3.080598,-1.427782 0.99372,-0.123584 1.967292,-0.418464 2.982159,-0.307813 0.498374,-0.0741 1.173389,0.229714 1.557828,-0.08815 0.09562,-0.40074 -1.342588,-0.560261 -0.679483,-0.827813 1.792427,-0.15625 3.62093,0.08569 5.38566,-0.305796 0.730265,-0.185627 1.376161,-0.691528 2.116326,-0.775334 0.614916,-0.04174 1.348547,-0.0032 1.803505,0.450291 -0.876438,0.234086 -0.01097,0.70041 0.515115,0.597233 0.540743,0.182686 1.005971,-0.135323 1.424883,-0.445233 1.58849,0.294955 3.218608,0.177344 4.813558,0.348204 0.888545,0.225271 1.619366,1.159108 2.611647,0.872664 1.851533,0.196338 3.725122,0.0825 5.582347,-0.01757 1.613244,0.08224 3.178256,0.582589 4.805013,0.518636 1.380457,0.02699 2.768544,0.100095 4.11427,0.411398 1.456348,0.01204 2.914344,-0.117489 4.364114,-0.159063 1.680347,0.267242 3.223406,1.100389 4.910052,1.31773 0.228907,1.359416 0.02864,2.760866 0.112802,4.13752 -10e-4,2.465269 0.170129,4.926871 0.196674,7.390066 0.0096,2.975933 -0.175428,5.96056 0.05552,8.930414 0.26527,0.511356 0.990664,0.294364 1.479688,0.330666 0.906577,-0.02296 1.814812,-0.158716 2.719318,-0.04067 0.403754,0.421076 0.558055,1.030566 1.156451,1.251993 0.946987,0.583097 1.917708,1.130217 2.803548,1.806006 0.287203,-0.599294 1.103236,-0.353168 1.553708,-0.785807 0.843353,-0.337953 1.518411,-1.256279 2.514341,-0.991597 0.81422,-0.0059 0.97657,1.052941 1.72328,1.26048 1.23744,0.683563 2.49749,1.375443 3.41932,2.476043 1.08701,0.952342 1.8612,2.22293 3.00835,3.100878 1.1684,0.308307 2.33022,0.731442 3.41909,1.24878 0.40776,0.295876 -0.27063,0.991149 0.25452,1.37593 0.0516,0.101355 0.10218,0.203296 0.15439,0.304291 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Mexique\"\n\t\t\t\t\t\t\td=\"m 184.444,142.729 c -0.30033,0.90177 -1.05021,1.59401 -1.09812,2.57961 -0.30104,1.3247 -0.004,2.68977 -0.26788,4.02139 -0.0842,0.77273 0.0382,1.51426 0.34071,2.22858 0.27118,1.06456 0.74292,2.06234 1.50677,2.86426 0.43804,0.41147 0.53732,1.03126 1.03152,1.40016 0.45227,0.77302 0.81816,1.63635 1.39748,2.31209 0.61744,0.51399 1.61926,-0.0321 2.2084,0.60905 0.46949,0.27177 0.7114,0.92032 1.34411,0.79126 1.34112,-0.0879 2.59893,-0.7319 3.93727,-0.91907 0.41208,-0.006 1.29781,-0.54271 1.05336,0.22961 0.27344,0.32388 0.97277,0.41455 1.24538,-0.0648 0.24292,-0.45807 -0.73915,-0.57533 0.26445,-0.87678 0.56648,-0.32006 1.24064,-0.76967 1.15488,-1.50298 0.18187,-0.4685 0.7055,-0.67606 0.43991,-1.29152 0.073,-0.68373 -0.006,-1.67779 0.80193,-1.91815 1.24835,-0.49003 2.65611,-0.42866 3.88083,-1.02272 0.80234,-0.20285 1.62059,0.22659 2.39776,0.11494 0.50393,-0.33873 1.08451,0.1737 1.34813,0.55781 0.17466,1.04489 -1.09556,1.43235 -1.52408,2.2257 -0.19329,0.46565 -0.0834,0.99811 -0.50983,1.38795 0.11026,0.35819 0.67395,0.0665 0.30901,0.87438 -0.1504,0.63398 -0.26254,1.27653 -0.41198,1.91022 -0.37305,-0.21415 -0.3713,-1.35273 -0.77903,-0.96483 -0.1625,0.61346 -0.41542,0.64786 -0.77446,1.059 -0.27316,0.33669 -0.53391,1.30823 -1.00955,0.71919 -0.37455,0.23679 -0.45275,0.57412 -1.16346,0.40635 -1.07851,-0.003 -2.15701,-0.006 -3.23551,-0.009 -0.1246,0.45482 0.27208,1.43103 -0.48401,1.25422 -0.99508,-0.0883 -0.0424,0.20496 0.20087,0.63408 0.41595,0.31127 0.97647,0.3823 1.08721,1.00925 0.59667,0.0319 0.68922,0.82623 0.17424,0.96474 -0.88144,-0.004 -1.76289,-0.009 -2.64431,7.1e-4 -0.35867,0.604 -0.71734,1.208 -1.076,1.81201 0.51748,0.38872 -0.0812,0.80787 0.16914,1.36486 0.11283,0.60514 -0.68413,-0.36688 -0.93703,-0.52029 -1.08677,-0.99278 -2.24355,-1.96336 -3.46941,-2.75377 -0.88631,-0.34359 -1.96952,-0.63569 -2.81801,-0.0422 -0.91695,0.44961 -1.84822,1.11265 -2.91974,0.84367 -0.82379,-0.22723 -1.61236,-0.54803 -2.47918,-0.59416 -1.16103,-0.43277 -2.09975,-1.39258 -3.3732,-1.56753 -1.19166,-0.19226 -2.30608,-0.64151 -3.37887,-1.17732 -0.98218,-0.28141 -1.73271,-0.97307 -2.4597,-1.65433 -0.51484,-0.11361 -1.07174,0.051 -1.58679,-0.17856 -0.83009,-0.31428 -1.83046,-0.35821 -2.37043,-1.15404 -0.59786,-0.97141 -1.7237,-1.36092 -2.67398,-1.86583 -0.62441,-0.60578 -1.15938,-1.32478 -1.5798,-2.08156 0.28987,-0.23245 1.29794,-0.33207 0.64297,-0.85892 -0.15571,-0.38685 0.67941,-0.8177 0.3435,-1.32978 -0.10469,-0.52855 -0.73133,-0.86559 -0.82095,-1.34058 0.47312,-0.47226 -0.0214,-0.88406 -0.42139,-1.19801 -0.7919,-0.90596 -1.53431,-1.85633 -2.42016,-2.67324 -0.67204,-0.77175 -1.35555,-1.54308 -2.27498,-2.02648 -0.25978,-0.41077 -0.13681,-1.05389 -0.77353,-1.15533 -0.57959,-0.0962 -1.02067,-0.50157 -1.29846,-1.00166 -0.46845,0.0245 -1.07901,0.17082 -1.08736,-0.52483 -0.0956,-0.50324 0.77936,-0.91016 0.26085,-1.36774 -0.36927,-0.66855 -0.95779,-0.2687 -1.25927,-0.5366 -0.2723,-0.41953 -0.35567,-0.99803 -0.9712,-1.02761 -0.63255,-0.0503 -0.99064,-0.75087 -0.66302,-1.29722 -0.47078,-0.60561 -1.45939,-0.3657 -1.92757,-1.0276 -0.95548,-0.66029 -1.27534,-1.81696 -2.03181,-2.64836 -0.66433,-0.81115 -1.04885,-1.79026 -1.61694,-2.65626 -0.36162,-0.41421 0.291,-1.21371 -0.37656,-1.32729 -0.39816,-0.26449 -1.21946,-0.0521 -1.08812,-0.74749 -0.42772,-0.70433 -0.79818,0.1597 -1.2879,-0.0422 -0.41887,-0.0453 -1.19443,-0.85881 -1.34089,-0.31733 -0.15194,0.55475 -0.49243,1.25717 0.0999,1.67488 0.50635,0.51729 -0.0405,1.44955 0.48124,1.9976 0.25537,0.50499 0.70628,0.75797 1.20193,0.95923 0.79955,0.58789 1.26473,1.46902 1.66169,2.35388 0.36998,0.37424 1.15608,0.21703 1.10559,0.9257 0.14932,0.4957 0.10731,1.35915 0.83729,1.31914 0.75282,0.0167 0.5288,1.04286 0.91554,1.4798 0.0773,0.87313 0.92173,0.0732 1.1106,0.50169 0.35441,0.83159 0.36319,1.79295 0.90005,2.56032 0.38859,0.76907 0.97056,1.50553 0.79902,2.42243 0.10936,0.59135 0.87378,0.72926 1.22839,0.24273 0.3449,0.31309 0.69425,0.85972 0.87653,1.35718 0.45579,0.22854 1.16754,0.3257 0.72567,0.99532 -0.27015,0.32163 -0.66211,0.8888 -1.12468,0.79968 -0.39955,-0.49435 -0.34043,-1.23075 -0.94489,-1.5682 -0.41537,-0.34115 -0.9643,-0.48966 -1.30411,-0.94081 -0.96884,-0.57083 -1.91283,-1.28178 -2.555,-2.21299 0.13107,-0.57707 0.37174,-1.20179 -0.0524,-1.72228 -0.25601,-0.55023 -0.55143,-1.26569 -1.25957,-1.28372 -0.51142,-0.17296 -0.82627,-0.80363 -1.25555,-0.9495 -0.67996,0.31221 -1.24923,-0.46463 -1.84947,-0.6975 -0.90395,-0.2203 -1.34247,-1.08844 -2.00299,-1.66401 0.7147,0.22643 1.68752,0.30876 2.11,-0.44699 0.1776,-0.52541 0.0813,-1.01718 -0.3328,-1.39649 -0.75504,-0.81299 -1.66116,-1.47945 -2.6622,-1.94869 -0.60789,-0.33178 -0.49984,-1.23206 -0.98552,-1.63092 -0.76329,-0.0278 -0.346,-0.95373 -0.69994,-1.365 -0.37023,-0.57132 -1.05312,-1.05897 -1.10054,-1.7729 0.53111,-0.53749 -0.44514,-0.71602 -0.67442,-1.14201 -0.58825,-0.59524 -0.1809,-0.80035 0.50737,-0.72182 1.40329,-0.10883 2.80947,-0.16038 4.21604,-0.20417 0.66412,0.73119 1.74828,0.74953 2.61227,1.13389 1.93432,0.62199 3.85608,1.31614 5.82174,1.82012 2.01368,-7.2e-4 4.02554,0.0977 6.039,0.065 0.54367,-0.14079 -0.0677,-1.28396 0.75324,-0.99227 1.12463,0.0184 2.27753,-0.0336 3.38407,0.0902 0.73514,0.67665 1.45372,1.4182 2.36469,1.88304 0.56712,0.30576 1.02118,0.74926 1.17101,1.395 0.19416,0.79294 0.67969,1.48666 1.44763,1.80916 0.82882,0.43816 1.80953,1.13943 2.76536,0.67084 0.51331,-0.59304 1.04092,-1.33789 1.83381,-1.52748 1.22387,-0.12216 2.49496,0.55092 3.02029,1.67767 0.73634,1.24128 1.50825,2.49265 2.66972,3.38479 0.28409,0.81812 0.44806,1.83972 1.19518,2.42601 0.80008,0.17416 1.45354,0.6959 2.214,0.94901 0.69822,-0.36911 1.2273,0.21954 1.879,0.382 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Amerique centrale\">\n\t\t\t\t\t\t<g id=\"Iles antillaises\">\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Cuba\"\n\t\t\t\t\t\t\t\td=\"m 217.961,150.38499 c 0.34361,-0.0857 1.51148,-0.19616 0.89037,-0.59702 -0.60954,-0.2179 -1.29056,-0.12323 -1.91802,-0.12195 -0.90749,0.0618 -1.33599,1.25849 -2.30289,1.06439 -0.69212,-0.21571 -0.6336,0.63639 -1.14747,0.8245 -0.33774,0.029 -1.51943,0.39111 -0.88199,-0.17091 0.80269,-0.16877 0.0833,-0.87994 0.60884,-1.26241 0.96794,-0.65277 2.13407,-1.02345 3.28097,-1.22346 0.89511,-0.0127 1.75699,-0.31147 2.65377,-0.19002 0.72039,-0.0875 1.41947,0.21784 2.13987,0.24148 0.53942,0.26128 1.16504,0.21887 1.70911,0.37849 0.68326,0.34629 1.1216,1.12715 1.96637,1.15362 1.21518,0.17009 2.48065,0.53164 3.43203,1.32477 0.1949,0.53009 0.708,0.6733 1.21803,0.68441 0.8686,0.26462 1.72802,0.56862 2.637,0.66012 0.77752,0.17673 -0.51552,0.98922 0.39321,0.98732 0.65341,0.0741 1.39733,-0.22179 1.91718,0.33783 0.29399,0.29726 1.11296,0.45689 1.11115,0.7743 -0.69104,0.12096 -1.40542,0.13976 -2.05413,0.46119 -1.06391,0.39019 -2.16034,-0.37664 -3.24209,-0.0269 -0.77958,0.12923 -1.58607,0.3269 -2.37431,0.17323 0.36038,-0.5267 1.06871,-0.76299 1.254,-1.401 -0.69147,-0.90304 -2.00015,-0.20302 -2.83113,-0.87664 -0.41154,-0.27501 -0.20634,-0.99205 -0.57688,-1.37637 -0.62075,-0.42394 -1.45214,0.035 -2.14486,-0.22543 -1.16847,-0.18339 -2.09806,-1.13469 -3.32983,-1.08179 -0.84636,-0.004 -1.65404,-0.11055 -2.4083,-0.51178 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Jamaique\"\n\t\t\t\t\t\t\t\td=\"m 228.82001,160.519 c -0.5141,-0.0919 -1.04152,-0.21903 -1.36121,-0.65719 -0.2773,-0.3266 -1.42387,-0.39347 -0.54522,-0.76163 0.87727,-0.3051 1.85045,0.02 2.7077,0.28621 0.45728,0.22867 1.22418,0.2781 1.38113,0.80569 -0.30997,0.49048 -0.91386,-0.26013 -1.37045,-0.0848 -0.38697,-0.0668 -0.4466,0.38119 -0.81195,0.4117 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Haiti\"\n\t\t\t\t\t\t\t\td=\"m 241.073,156.15199 c -0.0361,0.66621 0.18556,1.38489 0.0701,2.01528 -0.58564,0.38082 -0.15998,0.97942 -0.004,1.47713 0.40652,0.94246 -0.3465,-0.26482 -0.77716,-0.17267 -0.79869,0.0583 -1.63036,0.24463 -2.42719,-0.0197 -0.52738,-0.11072 -1.14794,-0.10492 -1.48336,0.38594 -0.45366,-0.25495 -1.09407,-0.39185 -1.29901,-0.916 0.11304,-0.63831 0.91698,-0.25601 1.36,-0.28501 1.10805,0.14341 2.2973,0.5853 3.34951,8.5e-4 -0.0801,-0.33155 -1.02261,-0.47178 -0.94712,-1.02383 0.2902,-0.48443 0.0884,-1.0653 -0.52221,-1.08448 -0.32682,-0.0654 -1.35888,-0.0698 -1.01787,-0.57317 1.1719,-0.51845 2.37083,0.2159 3.5527,0.28365 -0.0451,0.0436 0.1894,-0.1303 0.146,-0.088 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Rep Dominicaine\"\n\t\t\t\t\t\t\t\td=\"m 241.295,160.082 c -0.13607,-0.51241 -0.45183,-0.99963 -0.474,-1.528 0.52021,-0.35356 0.34262,-0.93361 0.30271,-1.46406 -0.0907,-0.50609 -0.14565,-1.21757 0.53599,-1.18712 0.478,0.37525 1.02663,-0.2449 1.45559,-0.0303 0.34094,0.37752 0.9605,0.47337 1.44235,0.5271 0.62687,-0.29683 0.63402,0.51437 1.10409,0.72682 0.88372,0.55623 2.09441,0.58619 2.79825,1.44486 0.33183,0.26185 -0.31322,1.08423 -0.6353,1.00701 -0.33924,-0.3938 -0.67877,-0.84114 -1.28211,-0.63825 -0.57693,0.0668 -1.2365,-0.28307 -1.71384,0.23897 -0.38104,0.47493 -1.01724,0.38583 -1.18772,-0.21606 -0.49721,0.006 -1.09409,0.2979 -1.19459,0.84255 -0.18144,0.35544 -0.52354,1.32721 -0.91769,0.67539 -0.0772,-0.13285 -0.15944,-0.26646 -0.23373,-0.39894 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Trinite et Tobago\"\n\t\t\t\t\t\t\t\td=\"m 264.76801,176.039 c -0.41981,0.36293 -0.2198,0.84147 -0.1823,1.31595 -0.0297,0.53112 -0.83785,0.40655 -1.23671,0.39105 -0.64896,0.0586 -0.73217,-0.0562 -0.17305,-0.38481 0.54631,0.16984 0.32293,-0.53464 0.30904,-0.82719 -0.78155,-0.27643 0.22408,-0.39853 0.60491,-0.39556 0.2196,-0.0555 0.44884,-0.13193 0.67811,-0.0994 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Porto Rico\"\n\t\t\t\t\t\t\t\td=\"m 251.89799,160.229 c -0.76873,0.098 -0.53896,-0.57147 -0.64247,-1.03679 0.0367,-0.58364 0.86394,-0.13552 1.25647,-0.26521 0.66171,0.13192 1.5049,-0.10742 2.011,0.41899 -0.1666,0.58113 -0.75047,0.86435 -1.31746,0.67342 -0.43673,-0.0529 -0.92753,-0.0247 -1.30754,0.20959 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Costa Rica\"\n\t\t\t\t\t\t\td=\"m 214.474,175.91299 c 0.55,0.50022 0.94383,1.12158 1.39209,1.69784 0.48709,0.18738 0.65578,0.74437 1.09568,1.04388 0.49098,0.5054 -0.89032,-0.25994 -0.63338,0.54658 -0.41179,0.66438 0.83409,0.81354 0.24426,1.18365 0.0414,0.40382 -0.37662,0.95586 -0.17214,1.18797 -0.21436,0.87941 -0.0104,0.39149 -0.41719,-0.0898 0.21317,-0.48311 -0.52572,-1.06295 -0.71013,-0.71752 0.66586,0.61544 0.0609,0.71296 -0.4852,0.32836 -0.30132,-0.42366 0.50597,-0.8845 -0.021,-1.34098 -0.39051,-0.35764 -0.99168,-0.44994 -1.34787,-0.76814 -0.57474,0.0498 -1.03724,-0.34469 -0.95427,-0.91497 -0.28985,-0.37292 -0.84948,-0.50144 -1.22629,-0.82036 -0.23353,0.10108 0.34406,0.83052 0.71639,0.85037 -0.004,0.52712 -0.58108,0.84194 -0.88554,0.20942 -0.53564,-0.21923 -1.22388,-0.47753 -1.19994,-1.18605 -0.1085,-0.48127 0.9361,-0.90465 0.19257,-1.19457 -0.419,-0.10012 0.17605,-0.45072 -0.0887,-0.55246 0.46008,-0.37911 1.024,0.2072 1.53251,0.27829 0.499,0.33344 0.96318,-0.27876 1.48093,-0.0217 0.36413,0.0251 0.6892,0.78586 1.27084,0.49315 0.0709,-0.0709 0.14902,-0.14207 0.21639,-0.21299 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Belize\"\n\t\t\t\t\t\t\td=\"m 204.31,158.989 c -0.59508,0.86012 0.74851,-0.21775 0.46299,0.668 -0.0588,0.50053 -0.62081,1.06658 -0.24099,1.51001 -0.34107,0.52363 -0.0372,0.95394 -0.12823,1.45921 -0.23302,0.48224 -0.33236,1.36528 -1.02978,1.30779 -0.22376,0.3846 -0.39118,0.89135 -0.88611,0.82029 -0.52197,-0.02 -0.0684,-0.98966 -0.17484,-1.41412 0.0282,-1.06858 0.15906,-2.13848 0.11897,-3.20618 0.54138,-0.0187 0.84276,0.27691 1.12209,-0.48041 0.28737,-0.32498 0.16557,-0.8118 0.7559,-0.66459 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Guatemala\"\n\t\t\t\t\t\t\td=\"m 200.276,169.481 c -0.57951,-0.22016 -1.14681,-0.50038 -1.78178,-0.3697 -1.09603,0.11609 -1.90961,-0.72574 -2.70722,-1.3423 -0.13524,-0.49012 -0.009,-1.0487 7.4e-4,-1.38591 -0.43604,-0.4317 0.35411,-0.93656 0.48374,-1.40201 0.186,-0.64589 0.67295,-0.76709 1.284,-0.67195 0.6445,-0.002 1.28901,0.004 1.93352,0.006 0.46917,-0.68204 -0.10369,-0.71859 -0.44402,-1.14246 -0.10716,-0.65019 -0.88438,-0.4926 -1.15987,-1.01229 -0.63627,-0.47212 -0.5979,-0.47674 0.20813,-0.46185 0.54884,-0.004 -0.0951,-1.21543 0.41745,-1.24591 1.31544,0.004 2.63087,0.007 3.94631,0.0105 -0.0717,1.43233 -0.14333,2.86466 -0.215,4.29699 0.5369,-0.24242 1.13321,0.33273 1.40905,0.23769 -0.30069,-0.79295 0.71268,-0.0912 0.69363,0.15089 -0.64515,0.46414 -1.18903,1.08965 -1.93668,1.39043 -0.43694,0.45215 0.33528,1.13942 -0.38073,1.34918 -0.84397,-0.0369 -0.22511,0.55219 -0.8155,0.69769 -0.17208,0.32696 -0.972,0.34875 -0.93577,0.89513 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Honduras\"\n\t\t\t\t\t\t\td=\"m 204.41299,165.093 c 0.61446,-0.0662 1.17597,-0.51422 1.8258,-0.31344 0.86846,0.14311 1.79232,0.28002 2.65462,0.10779 0.49735,-0.15252 0.92285,-0.50409 1.39159,-0.0773 1.08812,0.002 2.25308,-0.40528 3.245,0.24701 -0.27358,0.57621 0.0555,1.00193 0.68331,1.04103 0.42584,-0.0377 1.24252,0.34286 0.8245,0.70831 -0.66246,0.20328 -1.30354,0.45485 -1.92882,0.74365 -0.47955,0.009 -0.96472,-0.59348 -1.34399,-0.05 -0.35621,0.78548 -1.06704,1.25832 -1.71001,1.791 -0.49344,-0.43977 -0.91913,-0.46512 -1.23799,0.16299 -0.6889,-0.10272 -1.06888,0.0933 -0.88617,0.83365 -0.0617,0.78597 -0.98287,0.77702 -1.58484,0.84136 -0.0648,-0.56974 -0.66517,-0.82342 -0.79347,-1.22252 0.29151,-0.68265 -0.25748,-0.72707 -0.73125,-0.93136 -0.33872,-0.0467 -0.93878,0.64311 -1.08481,-0.0679 -0.4298,-0.32565 -0.97873,-0.33037 -1.19263,-0.82285 -1.07245,-0.0788 0.14839,-0.33348 -0.29093,-0.96525 -0.0997,-0.61935 0.57368,-0.70765 0.9294,-1.0424 0.40997,-0.32676 0.82198,-0.6626 1.23069,-0.98371 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Salvador\"\n\t\t\t\t\t\t\td=\"m 205.532,170.08501 c -0.16183,0.27109 -0.33969,1.00129 -1.01553,0.69001 -1.37223,-0.18345 -2.69324,-0.66949 -3.98909,-1.13124 -0.6306,-0.22336 0.17866,-0.90297 0.54663,-0.82978 0.63398,-0.32453 0.15701,-0.75062 0.76753,-0.86233 0.64123,-0.13931 0.81455,0.47879 1.26005,0.6275 0.59243,0.004 0.62715,0.7529 1.14341,0.66583 0.35772,-0.57726 0.86691,-0.0764 1.29845,0.008 0.16627,0.20501 -0.0275,0.58917 -0.0114,0.8323 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Nicaragua\"\n\t\t\t\t\t\t\td=\"m 209.823,175.47 c -0.50166,-0.98814 -1.4968,-1.57794 -2.16437,-2.4464 -0.53837,-0.61791 -1.17043,-1.12666 -1.84851,-1.57387 -0.31815,-0.53247 0.75323,-0.21127 1.06486,-0.38378 0.64741,0.0666 1.2149,-0.49717 1.05779,-1.14704 -0.23248,-0.83253 0.90625,-0.11656 1.119,-0.72872 0.30402,-0.79132 0.8973,0.51237 1.27723,-0.12252 0.57672,-0.43511 1.12047,-0.89929 1.436,-1.56466 0.4389,-0.6374 1.04445,0.31302 1.59199,-0.036 0.56872,-0.34731 1.23192,-0.47839 1.849,-0.715 0.57648,0.94195 0.0838,2.10041 -0.54599,2.88 -0.19211,0.83819 0.0625,1.7007 -0.24627,2.52132 -0.26092,0.97493 -0.42311,2.01259 -0.2821,3.01433 0.28891,0.40745 0.47056,1.20891 -0.2905,0.95258 -0.60217,-0.0815 -0.60974,-0.66801 -1.2871,-0.55738 -0.49237,0.28225 -0.98692,0.19691 -1.48926,-0.0669 -0.44767,-0.14677 -0.86621,-0.4641 -1.24177,-0.026 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Panama\"\n\t\t\t\t\t\t\td=\"m 217.11099,178.79201 c 0.5192,0.1674 0.76912,0.66729 0.735,1.19299 0.42935,0.36429 1.06608,0.0196 1.35571,0.10441 0.38498,0.53193 1.2599,0.44882 1.77176,0.12562 0.50667,-0.24212 0.95489,-0.67405 1.55153,-0.62403 0.49304,-0.26827 0.96203,-0.75644 1.4699,-0.889 0.52454,0.14844 1.00779,0.2231 1.45843,0.32935 1.29707,-0.0451 2.65798,0.86677 3.00067,2.13665 0.36135,0.21112 0.68006,0.94756 0.64976,1.2038 -0.30723,0.024 -0.63088,1.16455 -0.96017,0.71294 -0.25698,-0.48342 -0.25502,0.48811 -0.55357,0.73487 -0.17296,0.74033 -0.39857,-0.56252 -0.66903,-0.80021 -0.23997,-0.36165 -0.67542,-1.08386 -9.8e-4,-1.23141 0.8707,0.1255 0.65509,0.22666 0.28951,-0.40611 0.0277,-0.62926 -0.88742,0.61768 -1.04944,-0.32212 -0.007,-0.54118 -0.43001,-0.55534 -0.69507,-0.58976 -0.25441,-0.61463 -1.17112,-0.57416 -1.64901,-0.22999 -0.76032,-0.001 -0.0965,0.89902 -0.82788,0.97564 -0.37768,0.27695 -1.16673,0.21163 -1.09709,0.84167 0.2002,0.51228 1.01611,0.73007 0.96698,1.37968 -0.57787,-0.061 -0.82243,0.48832 -1.39184,0.51076 -0.75748,0.18019 -0.51012,-0.4446 -0.7915,-0.9014 -0.3152,-0.96793 -0.35985,-0.13562 -0.68836,-0.0183 -0.64967,-0.0646 -0.72955,-0.74267 -0.96745,-1.06881 -0.56022,0.0417 -1.12884,-0.10512 -1.60269,-0.36527 -0.5125,-0.32751 -1.22231,0.63419 -1.12872,0.43951 0.0749,-0.5912 0.0402,-0.69579 0.21759,-1.25299 -0.003,-0.55057 0.53299,-0.67263 -0.17503,-1.03637 -0.0761,-0.4594 0.005,-1.3256 0.6476,-0.85755 0.0861,0.0962 0.10309,-0.0758 0.13339,-0.0946 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Amerique de Sud\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Colombie\"\n\t\t\t\t\t\t\td=\"m 242.38,173.617 c -0.43871,-0.20115 -1.02207,0.13664 -1.50199,0.222 -0.71291,0.0871 -0.31565,0.80075 -0.50458,1.23844 -0.36535,0.14316 -0.92804,0.24276 -1.04681,0.87132 -0.41433,0.62853 -0.70081,1.3013 -0.85401,2.03607 -0.15353,0.61523 -0.56975,1.11014 -0.86562,1.66017 0.49521,0.0868 1.14792,-0.38923 1.26279,0.3826 0.296,0.72343 1.0381,1.33733 0.99043,2.15066 -0.0989,0.53842 -0.41885,1.29604 0.25968,1.5819 0.34279,0.42693 0.7338,1.00725 1.37111,0.82083 1.0812,-0.0532 2.27362,-0.44122 3.24809,0.21017 0.62398,0.38913 0.96361,1.13943 1.52427,1.62899 0.35126,0.6289 1.04693,0.0733 1.5799,0.0511 0.92336,-0.0947 1.86091,-0.34588 2.78774,-0.1782 -0.47807,0.38697 -0.46013,0.96813 -0.49401,1.52901 -0.36708,0.4024 -0.64837,0.88843 -0.47168,1.44525 0.0269,0.86501 0.36057,1.64498 0.84333,2.35039 0.12914,0.39562 0.96896,0.87746 0.47898,1.23046 -0.25793,0.31051 -1.10857,0.71438 -0.87761,1.09014 0.50883,0.41925 0.79489,1.0257 1.17899,1.54976 -0.82098,0.38344 -1.49771,1.2281 -2.49544,1.02322 -1.06184,-0.0331 -2.12399,-0.0569 -3.18556,-0.0982 0.0137,0.48399 -0.24338,1.1539 0.123,1.51001 0.5314,0.0639 1.24505,0.0429 1.37846,0.70197 0.13724,0.63646 -0.83953,-0.0725 -1.20522,0.1497 -0.62468,-0.0427 -1.03274,0.37332 -0.8479,0.99412 0.0245,0.45419 -0.16851,1.08738 0.42741,1.2356 0.69993,0.13411 0.63937,0.74037 0.66469,1.27106 0.47596,0.39757 0.37768,0.95995 0.20059,1.48114 -0.42095,1.81742 -0.54692,3.711 -0.97657,5.51516 -0.3658,0.21743 -0.59079,-0.75992 -1.04982,-0.84387 -0.8325,0.34985 -0.48014,-0.23225 -0.15887,-0.67694 0.22945,-0.46913 0.61889,-0.8791 0.73822,-1.38894 -0.65448,-0.35707 -1.21933,-0.88008 -1.93499,-1.118 -0.43445,0.39781 -0.96534,0.56704 -1.38184,0.0371 -0.41878,-0.48808 -0.72864,0.60021 -1.30119,0.40249 -0.60913,-0.0192 -1.38635,0.14528 -1.86862,-0.23007 -0.0223,-0.52915 -0.141,-1.0476 -0.79533,-0.9593 -0.63104,-0.13499 -0.27174,-1.15148 -0.90589,-1.35113 -0.48462,-0.42889 -1.30681,-0.60738 -1.38969,-1.34153 -0.43075,-0.94233 -1.55819,-1.35799 -2.53907,-1.39348 -0.49411,-0.29722 -0.94348,-0.74984 -1.42838,-1.08411 -0.68508,0.38756 -1.49311,0.62625 -2.24383,0.26811 -0.63197,-0.0355 -0.6647,-0.71746 -1.00347,-1.07277 -0.99287,-0.47814 -2.00404,-0.94541 -2.96569,-1.49636 -0.20065,-0.47692 -0.3801,-1.09234 0.43838,-0.96619 0.76448,0.30815 0.4565,-0.55148 0.23428,-0.88487 0.0215,-0.72915 0.94118,-0.62534 1.45334,-0.57993 0.93445,-0.44057 1.03401,-1.63944 1.63026,-2.39711 0.50806,-0.43246 0.2356,-0.93731 -0.29894,-1.16513 -0.30546,-0.43721 0.35626,-0.94956 0.26668,-1.46976 -0.0591,-0.60767 -0.24739,-1.17688 -0.51999,-1.721 0.082,-0.42025 1.17357,-0.47244 0.41868,-0.97937 -0.68418,-0.28549 -0.21197,-0.80714 -0.0337,-1.23258 -0.19261,-0.61265 -0.89337,-0.94827 -1.26494,-1.47506 0.10865,-0.5198 0.50897,-0.96006 0.52057,-1.24978 0.12594,0.59725 0.84159,0.0728 0.85333,-0.40241 0.63582,-0.11727 -0.0467,-0.74478 -0.1689,-1.1828 -0.68734,-0.53667 0.0781,-0.44037 0.35956,0.0769 0.38095,0.21521 0.39429,1.21714 0.87755,0.95668 0.56947,-0.4216 -0.49712,-1.03036 0.0348,-1.5129 0.50535,-0.43746 1.08587,-0.80555 1.38511,-1.44069 0.39715,-0.31312 1.22869,-0.0348 1.2046,-0.72472 -0.17814,-0.56419 0.20185,-1.13669 0.16041,-1.72228 0.2566,-0.77532 1.08061,-1.26937 1.83899,-1.444 0.47465,0.27357 0.76682,1.00516 0.89382,0.0431 -0.0178,-0.6587 0.40356,-0.90991 0.96443,-0.65536 0.73811,0.0819 1.58057,0.0857 2.08606,-0.5439 0.56765,-0.45864 1.51756,-0.34814 1.80376,-1.14083 0.32625,-0.83474 1.54976,-0.98356 2.13488,-0.33098 0.31392,0.247 0.23933,0.52995 -0.037,0.73895 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Venezuela\"\n\t\t\t\t\t\t\td=\"m 266.01501,188.95599 c 0.28216,0.51363 -0.54905,0.77168 -0.88876,1.00246 -1.03023,0.52986 -2.1198,1.23952 -3.33224,1.02754 -0.68848,0.1141 -0.10438,1.31666 -0.86402,1.347 -0.43692,-0.44342 -0.89384,-1.02885 -1.59364,-0.82305 -0.79508,0.18505 -1.42552,-0.3309 -2.11736,-0.60995 -0.54181,0.26334 0.4795,0.72725 0.54743,1.13291 0.53446,0.78608 0.38355,1.84073 0.74196,2.67805 0.42557,0.31233 1.34952,-0.12374 1.60862,0.52205 -0.36188,0.50468 -1.03813,0.53408 -1.54944,0.7352 -0.35114,0.3551 -0.30764,1.11454 -0.97708,1.10694 -0.97105,0.2202 -1.6214,1.04806 -2.24748,1.76086 -0.60491,0.28551 -0.21008,-1.32003 -0.73609,-0.76245 -0.34231,0.40371 -0.87352,0.81224 -1.3781,0.40292 -0.3753,-0.4355 -1.02843,-0.4992 -1.31528,-0.87905 -0.31765,-0.82096 -0.19515,-1.8202 -0.8719,-2.48076 -0.30599,-0.47428 -0.61188,-0.94865 -1.05863,-1.30466 0.35062,-0.43429 0.77839,-0.78814 1.20999,-1.138 -0.48323,-0.93962 -1.34989,-1.74456 -1.45039,-2.85179 -0.103,-0.6365 -0.27147,-1.3646 0.28105,-1.84903 0.31679,-0.4736 -0.0271,-1.20023 0.52697,-1.57872 -0.0323,-0.30648 -0.97479,-0.13221 -1.35724,-0.096 -0.89128,0.0402 -1.75356,0.28427 -2.62137,0.43856 -0.64242,-0.57628 -1.10808,-1.3576 -1.74785,-1.90666 -0.61941,-0.42218 -1.34527,-0.4724 -2.06737,-0.37671 -0.75014,-0.0357 -1.7253,0.47426 -2.26733,-0.25055 -0.24092,-0.47469 -1.02031,-0.69315 -0.76728,-1.33147 0.1798,-0.5897 0.24225,-1.22879 -0.19995,-1.72481 -0.30969,-0.52588 -0.63083,-1.04546 -0.89422,-1.5968 -0.45097,0.025 -1.37685,0.34198 -0.74732,-0.36607 0.536,-0.67987 0.65231,-1.54916 0.9365,-2.33176 0.34559,-0.51672 0.57107,-1.20683 0.99061,-1.61677 0.67902,0.14562 0.68062,-0.48412 0.61815,-0.99861 0.12246,-0.47846 0.83583,-0.46696 1.24824,-0.60996 0.94176,-0.23039 0.55386,0.11229 -0.16944,0.13418 -0.50407,0.14262 -1.1667,0.42719 -0.7405,1.03674 0.17667,0.53261 0.45906,0.76448 0.50675,1.35525 -0.14812,0.51811 -0.63156,0.83539 -0.73854,1.38579 -0.33413,0.43996 -0.11375,0.96611 0.31154,1.25076 0.17665,0.41326 0.33361,1.29106 0.95924,1.01576 0.38363,-0.18489 0.99755,-0.40947 0.94326,-0.9439 0.0485,-0.75331 -0.52461,-1.34038 -0.85656,-1.96801 -0.36046,-0.52087 -0.33484,-0.64842 -0.17653,-1.04864 -0.12881,-0.25801 0.85716,-0.41194 1.20887,-0.57431 0.56752,-0.23099 1.29029,-0.27312 1.77444,-0.57944 0.16641,-0.31649 1.34286,-0.0965 0.66528,-0.62701 -0.29904,-0.29574 -1.00402,0.13329 -1.0871,-0.63369 0.0384,-0.45243 0.95281,-0.80192 0.99187,-0.15918 0.36126,0.31494 0.15569,0.87773 0.57707,1.16361 0.8078,0.0404 1.75408,0.0638 2.40315,0.61526 0.45071,0.36458 0.35416,1.01802 0.74664,1.37785 0.57917,0.48727 1.3888,-0.009 2.0714,0.0663 0.84365,-0.002 1.77644,-0.3261 2.55592,0.051 0.69334,0.97958 2.05501,1.10549 3.15404,0.95581 0.82614,-0.38253 1.42296,-1.42155 2.44159,-1.18375 1.05485,-0.0246 2.17236,-0.31236 3.18943,0.0277 -0.29303,0.66249 -1.23795,0.0497 -1.66939,0.38274 -0.1508,0.5578 0.80365,0.45056 1.00189,0.91811 0.41592,0.30994 0.33576,1.25937 0.64949,0.30915 0.38204,-0.17227 0.92147,0.24817 1.4268,0.22808 0.36684,0.58116 1.16587,0.58897 1.67019,1.03492 -0.54589,0.24638 -0.83746,0.65331 -0.95108,1.21051 -0.14565,0.34278 -1.53005,0.50237 -0.94353,0.61233 0.54388,0.0972 1.10958,0.20639 1.62043,-0.0457 0.81237,-0.0481 1.77488,-0.0449 2.43234,0.41447 0.31526,0.71174 -0.57675,0.9778 -0.98892,1.36687 -0.3305,0.24106 -1.09055,0.64729 -0.55896,1.08453 0.42223,0.29211 0.93688,0.92663 0.15806,1.11988 -0.4126,0.28657 -1.35773,-0.0405 -1.32186,0.62732 0.12221,0.56057 -0.20525,0.9368 -0.4569,1.38729 0.28715,0.76957 1.13063,1.24353 1.54044,1.9605 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Guyane francaise\"\n\t\t\t\t\t\t\td=\"m 285.85901,190.71899 c 0.10588,0.69676 -0.59491,1.16397 -0.87474,1.75096 -0.72166,0.88953 -0.86477,2.16837 -1.75903,2.91019 -0.58362,0.2048 -1.186,-0.2034 -1.75225,-0.35515 -0.4193,0.20203 -0.87329,0.92287 -1.31736,0.38032 -0.75096,-0.25957 -0.1455,-0.82223 0.0441,-1.29197 0.1544,-0.77508 0.77165,-1.67304 0.12125,-2.37597 -0.43719,-0.59334 -0.2916,-1.39649 -0.55499,-2.07036 0.11768,-0.85706 0.66858,-1.55137 1.17502,-2.22101 0.92336,0.32328 1.93233,0.48284 2.66742,1.18984 0.72161,0.646 1.54954,1.21203 2.05856,2.05515 0.0589,0.009 0.13672,0.0194 0.19202,0.028 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Surinam\"\n\t\t\t\t\t\t\td=\"m 274.556,195.884 c 0.0976,-0.4987 -0.46613,-0.91787 -0.55541,-1.42686 -0.33014,-0.48983 -0.25025,-1.27301 -0.72581,-1.61268 -0.69606,0.0703 -0.91703,-0.73722 -1.30668,-1.17083 -0.56321,-0.42972 0.14056,-0.90835 0.12976,-1.4339 0.006,-0.482 -0.22837,-1.25379 0.55797,-1.10136 0.6464,0.12968 1.02016,-0.31699 0.93008,-0.94452 0.14273,-0.48267 0.042,-1.08873 0.5061,-1.38985 0.7747,-0.16959 1.45484,0.49526 2.23898,0.448 -0.0527,-0.76471 0.80571,-0.38485 1.27173,-0.45776 1.11901,-0.11677 2.24208,0.0704 3.23698,0.60689 0.0985,0.32074 -0.60109,0.79196 -0.71082,1.23411 -0.42466,0.58194 -0.36904,1.28349 -0.1598,1.93237 0.004,0.61686 0.27641,1.13149 0.63093,1.62139 0.0582,0.73704 -0.26205,1.46629 -0.5157,2.14766 -0.1724,0.6849 -0.5305,0.83281 -1.09346,0.38832 -0.49599,-0.43544 -0.90097,0.1407 -1.35364,0.26108 -0.50387,0.14304 -1.24485,-0.59092 -1.54712,0.0774 -0.36286,0.34318 0.78683,1.11015 0.32713,1.17045 -0.63452,-0.032 -1.22617,-0.33285 -1.86122,-0.34992 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Guyana\"\n\t\t\t\t\t\t\td=\"m 266.01501,188.95599 c -0.44279,-0.70534 -1.17623,-1.16911 -1.55902,-1.91299 0.22257,-0.47528 0.61144,-0.84132 0.4699,-1.41905 -0.0705,-0.67265 0.85134,-0.3532 1.24876,-0.61283 0.77325,-0.13814 0.45823,-0.80695 -0.0361,-1.10011 -0.59277,-0.4188 0.12218,-0.88322 0.49261,-1.11624 0.39819,-0.39669 1.29594,-0.63027 1.02157,-1.33897 0.0931,-0.15708 0.84405,0.53558 1.21037,0.67594 0.75145,0.50946 1.78404,1.17964 1.55682,2.23072 0.0178,0.35646 0.0614,1.61507 0.33758,0.74959 0.22954,-0.57143 0.93309,-0.0998 1.24992,0.14801 0.76933,0.45198 1.57509,1.13308 1.75176,2.02946 -0.13618,0.5187 -0.16327,1.08107 -0.28099,1.59303 -0.2795,0.4979 -1.0994,0.003 -1.43315,0.45745 0.15903,0.6763 0.0189,1.35189 -0.345,1.938 0.38336,0.50312 0.69844,1.15156 1.19122,1.51653 0.75186,-0.12117 0.72239,0.77773 0.93921,1.26495 0.24011,0.54742 0.45285,1.10881 0.78656,1.60852 -0.17644,0.50515 -1.02755,-0.0612 -1.40669,0.37542 -0.85815,0.40674 -1.82845,0.57211 -2.53546,1.25829 -0.45693,0.35518 -1.07583,0.21362 -1.47866,-0.16464 -0.48892,-0.49494 -1.47357,-0.82765 -1.25749,-1.68513 0.19601,-0.62253 -0.77517,-1.03606 -0.49208,-1.69618 0.15726,-0.86906 0.52033,-1.68507 0.88138,-2.48576 -0.24178,-0.46157 -0.31463,-1.12414 -0.96801,-1.096 -0.67591,0.0765 0.23083,-0.79966 0.13153,-1.1763 -0.22184,-0.35755 -0.97238,-0.48411 -1.32137,-0.15102 -0.0408,0.0419 -0.11927,0.0649 -0.15514,0.10931 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Equateur\"\n\t\t\t\t\t\t\td=\"m 222.291,207.80099 c 0.53925,-0.39068 0.83735,-1.07407 1.06186,-1.67494 -0.17191,-0.26877 -0.0704,-1.47322 -0.3011,-1.00634 -0.32211,0.37245 -0.72989,0.9812 -1.21722,0.97912 -0.35501,-0.14034 -1.2826,-0.53038 -1.02785,-0.88437 0.70141,-0.32478 -0.0637,-1.06882 0.23208,-1.60633 0.35735,-0.48393 -0.57616,-0.98162 -0.25343,-1.34358 0.32923,-0.24692 1.29041,-0.44262 1.14902,-0.8428 -0.57859,-0.52685 0.24652,-1.09259 0.62164,-1.44474 0.0978,-0.49719 0.21913,-1.01915 -0.058,-1.48401 0.25694,-0.466 1.02792,-0.23882 1.45984,-0.58107 0.44937,-0.19217 0.94303,-0.46439 1.18716,-0.89592 0.96654,0.56509 2.00412,1.01421 2.9911,1.52154 0.30986,0.3812 0.39415,1.0368 1.02682,1.06139 0.73626,0.35006 1.52556,0.0898 2.19508,-0.28194 0.46709,0.31386 0.87668,0.74339 1.35507,1.03899 0.26683,0.53305 0.62898,1.09595 0.71033,1.67379 -0.24902,0.44809 -0.62631,0.83811 -0.78785,1.35618 -0.53764,1.12623 -1.48932,2.07656 -2.58057,2.64858 -1.49885,0.38285 -3.25107,0.93836 -3.84109,2.53079 -0.38764,0.83415 -0.58229,1.78439 -1.0952,2.54319 -0.47302,0.48593 -1.09477,-0.12134 -1.23041,-0.62511 -0.21066,-0.78839 -1.112,-0.31037 -1.66327,-0.58841 -0.42756,-0.51617 0.0883,-0.93934 0.057,-1.47449 0.009,-0.20535 0.003,-0.41808 0.009,-0.61952 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Perou\"\n\t\t\t\t\t\t\td=\"m 245.93401,224.314 c 0.71914,1.23196 1.52473,2.4299 2.11099,3.729 -0.70648,0.97131 -0.90734,2.27569 -0.4706,3.4026 0.066,0.78045 -1.08262,1.13608 -0.94365,1.92458 0.33887,0.50745 0.31891,0.97322 -0.0473,1.45276 -0.17447,0.86611 1.05206,1.57575 0.48742,2.41163 -0.29741,0.53854 -1.23597,0.76761 -0.93387,1.53243 0.5495,0.67966 -0.74027,0.39685 -0.64927,1.08192 -0.0511,0.54814 -0.31644,1.09613 -0.93105,1.13583 -0.59872,0.39374 -0.41272,-0.74614 -0.99764,-0.78658 -0.62608,-0.35491 -1.63943,-0.42192 -1.74529,-1.29032 -0.23269,-0.73464 -1.12451,-0.76644 -1.67427,-1.18271 -1.38538,-0.70539 -2.73886,-1.48074 -4.19246,-2.03533 -1.76169,-1.20238 -3.70684,-2.36326 -4.79702,-4.26182 0.024,-0.77465 0.11751,-1.62562 -0.474,-2.23147 -0.93166,-1.07159 -1.29107,-2.51306 -2.08645,-3.65825 -0.45271,-0.26468 -0.87996,-0.44868 -0.64602,-1.06701 -0.0865,-0.9556 -0.81235,-1.71265 -1.1912,-2.5722 -0.92051,-1.73026 -1.70713,-3.54565 -2.94857,-5.08095 -0.70563,-0.80029 -1.02932,-1.96695 -2.07537,-2.41449 -0.58045,-0.34918 -1.26624,-0.48317 -1.81339,-0.89862 0.2159,-0.54067 1.19792,-0.0258 1.01872,-0.80396 -0.35012,-0.86452 -1.30432,-1.47188 -1.27671,-2.47104 0.34903,-0.89989 1.20977,-1.47092 1.92789,-2.05749 0.60126,-0.3771 0.84482,-0.42388 0.68972,0.36888 -0.0483,0.45315 -0.48479,1.02053 0.0366,1.36998 0.51121,0.243 1.31984,-0.1965 1.55057,0.50068 0.13708,0.5037 0.69057,1.15934 1.22094,0.73344 0.7033,-0.99499 0.83292,-2.32034 1.53981,-3.32642 0.86126,-1.17957 2.38455,-1.44874 3.67537,-1.88757 1.20651,-0.77712 2.1592,-1.90217 2.67025,-3.24805 0.37793,-0.37516 0.6409,-0.8308 0.24743,-1.31954 -0.1294,-0.44409 -0.84809,-1.21895 0.056,-0.91178 0.98134,0.12467 2.03752,0.76047 2.21323,1.81252 0.46587,0.42469 1.13234,0.69409 1.55202,1.15072 0.20576,0.41544 0.13303,1.12345 0.75572,1.10585 0.74811,-0.1712 0.39732,0.76742 0.73733,1.02756 0.69721,0.19097 1.48819,0.20397 2.18219,0.0312 0.46213,-0.41725 0.76517,-0.59162 1.2317,-0.0509 0.50822,0.43395 0.90937,-0.64921 1.43518,-0.1283 0.52831,0.27804 1.00157,0.65794 1.52405,0.94928 -0.26287,0.76747 -0.81517,1.42792 -1.19,2.15399 0.53532,-0.15436 0.978,-0.001 1.23977,0.51842 0.46164,0.2758 0.6032,1.05876 -0.12333,0.79584 -0.59001,-0.2062 -1.31047,-0.43178 -1.78298,0.13109 -0.48792,0.4729 -1.18722,-0.0308 -1.70707,0.377 -0.82296,0.29493 -1.60134,0.67224 -2.34433,1.12551 -0.4708,0.47438 -0.52124,1.30753 -0.9643,1.85199 -0.38899,0.4617 0.60212,1.17956 -0.0937,1.48262 -0.5247,0.46864 -1.38499,0.63538 -1.51281,1.44199 -0.14673,0.84333 0.6733,1.45706 1.00073,2.17722 0.37709,0.5834 0.70388,1.20299 1.11302,1.76333 -0.23812,0.49443 -0.73017,0.99215 0.16318,0.87535 0.59039,0.0199 1.44662,0.0975 1.47303,0.86044 -0.0756,0.71857 0.85754,0.29202 1.3015,0.42079 0.95716,0.20087 1.4952,-0.85392 2.3353,-1.08659 -0.005,0.92329 -0.11695,1.85554 -0.131,2.76897 0.0785,0.57845 0.72318,0.82699 1.21077,0.54541 0.34119,-0.11002 0.68511,-0.25977 1.04324,-0.23938 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Bresil\"\n\t\t\t\t\t\t\td=\"m 279.28799,257.29501 c -0.28807,-1.29443 0.4254,-2.51448 0.79314,-3.69207 -0.33745,-0.44924 -0.90735,-0.59503 -1.40407,-0.26915 -0.52994,0.3618 -1.05661,0.16979 -1.1129,-0.49203 -0.20257,-0.95663 -0.33259,-1.93027 -0.59117,-2.87376 -0.54865,-0.24659 -1.0902,-0.5751 -1.682,-0.681 -0.46286,0.34196 -1.00892,0.58956 -1.5735,0.31912 -0.5257,-0.12628 -1.05786,-0.23526 -1.59649,-0.28712 -0.11658,-1.16536 0.52293,-2.39172 -0.0167,-3.49081 -0.39291,-0.41459 -0.3769,-0.97197 -0.56195,-1.45721 -0.36871,-0.4629 0.42558,-0.90289 0.49881,-1.40042 0.37524,-0.88892 0.63101,-1.90905 0.51109,-2.87114 -0.20593,-0.64191 -0.51494,-1.30842 -1.22703,-1.4862 -0.6043,-0.26334 -0.72196,-0.97465 -0.43717,-1.52504 0.41821,-0.73551 -0.39706,-0.6736 -0.89956,-0.64931 -0.95692,-0.0405 -1.95932,0.0421 -2.88717,-0.11635 -0.49131,-0.92806 -0.3507,-2.08765 -0.47209,-3.12429 0.0515,-0.75131 -0.32662,-1.46203 -0.19123,-2.21123 -0.38058,-0.55325 -1.21183,-0.62717 -1.83828,-0.6831 -0.59758,0.0741 -1.36246,0.16935 -1.66786,-0.486 -0.11297,-0.656 -0.63159,-0.71164 -1.20079,-0.66242 -0.69026,-0.11861 -1.07746,-0.85051 -1.78217,-0.99413 -0.66818,-0.43823 -1.46137,-0.0979 -2.17289,-0.35735 -1.02803,-0.89788 -2.37796,-1.85797 -2.40072,-3.35929 -0.10094,-0.85274 0.21911,-1.69061 0.0737,-2.54272 -1.05799,2.7e-4 -2.22254,-0.17641 -3.12084,0.5148 -0.82679,0.4099 -1.44758,1.21759 -2.3049,1.53059 -0.58611,-0.16701 -1.01466,0.1071 -1.39724,0.53719 -0.54546,0.62489 -1.34967,-0.0723 -2.01682,-0.0718 -0.77333,-0.2634 -1.49667,0.12019 -2.23921,0.27819 -0.70265,-0.0787 -0.78924,-0.90837 -0.65082,-1.46632 0.0639,-0.65664 0.0652,-1.31712 0.0978,-1.97568 -0.74388,0.19089 -1.22248,1.06219 -2.00251,1.09238 -0.50347,-0.0683 -1.21302,0.0974 -1.58922,-0.11531 0.0579,-0.65409 -0.47529,-1.21563 -1.13958,-1.12983 -0.4985,-0.0775 -1.3226,0.0476 -0.70935,-0.58123 0.39305,-0.48055 -0.35177,-0.90191 -0.49715,-1.37101 -0.443,-0.81231 -1.06051,-1.55279 -1.42602,-2.38963 -0.24101,-0.77651 0.46472,-1.43659 1.14282,-1.68136 0.58317,-0.28016 0.7408,-0.72505 0.3951,-1.28657 -0.17338,-0.51998 0.45463,-0.90903 0.52337,-1.42217 0.16445,-0.53632 0.39154,-0.98268 0.95401,-1.15642 0.7496,-0.48041 1.62919,-0.79085 2.45895,-1.06412 0.59232,0.18398 1.12611,-0.1097 1.55558,-0.49872 0.65919,-0.30565 1.35974,0.53516 1.94901,0.073 -0.23375,-0.4658 0.2053,-0.98037 0.16828,-1.51813 0.28198,-1.77408 0.54918,-3.56447 0.92086,-5.31278 -0.26479,-0.45858 -0.54732,-0.88736 -0.38616,-1.46309 -0.34722,-0.42329 -1.28647,-0.4497 -1.07199,-1.18725 0.11592,-0.42275 -0.2745,-1.17599 0.27815,-1.32878 0.58033,-0.29295 1.21374,-0.0792 1.81486,-0.006 0.0214,-0.57571 -0.49098,-0.99033 -1.05023,-0.93091 -0.74082,0.0951 -0.51995,-0.71515 -0.53346,-1.18134 -0.0951,-0.68911 0.80235,-0.23277 1.21555,-0.3392 0.9653,-0.0253 1.9625,0.17121 2.90804,-0.0142 0.57838,-0.22923 1.02562,-0.70191 1.6001,-0.95038 0.51509,0.66796 0.29185,1.63811 0.73399,2.35501 0.77654,-0.0474 1.19515,1.08013 2.022,0.75 0.35692,-0.30779 0.90397,-1.07496 0.92284,-0.1684 0.0453,0.88159 0.71158,0.1086 0.9584,-0.25498 0.54229,-0.57798 1.20143,-1.06868 2.00676,-1.18262 0.47421,-0.28863 0.32365,-1.1972 1.04543,-1.14801 0.36956,-0.0903 1.21439,-0.3039 1.04693,-0.75585 -0.37122,-0.45414 -1.193,-0.03 -1.55473,-0.42209 -0.3241,-1.03473 -0.21157,-2.30923 -1.0737,-3.12182 -0.67665,-0.4483 -0.175,-0.86674 0.36708,-0.38928 0.63715,0.50125 1.44198,0.36591 2.19298,0.34405 0.51289,0.14337 0.74418,1.0461 1.30946,0.73048 0.19533,-0.41416 0.005,-1.34757 0.70305,-1.21498 1.36247,0.11184 2.54637,-0.74357 3.69042,-1.36425 0.63104,-0.19572 0.15966,-0.87447 0.81633,-0.96001 0.39083,-0.0765 1.32005,0.0788 0.92866,0.65198 -0.28494,0.57006 -0.5129,0.97071 0.29814,0.93185 0.36615,0.19271 0.74567,0.92656 0.4685,1.32652 -0.30285,0.81415 -0.73083,1.63941 -0.7553,2.51065 0.0916,0.55931 0.75847,0.92236 0.50555,1.52759 -0.0528,0.7816 0.86833,1.07071 1.33404,1.54804 0.40598,0.41198 1.08196,0.44907 1.50995,0.0579 0.8009,-0.74483 1.91963,-0.85405 2.84721,-1.37575 0.96206,-0.0842 1.87114,0.22945 2.80457,0.37416 0.44393,-0.0947 -0.75085,-0.85377 -0.29719,-1.22336 0.34205,-0.59 1.05383,0.14644 1.5563,-0.0309 0.44131,-0.21074 0.89316,-0.65979 1.39017,-0.21868 0.59178,0.14987 0.97101,0.67504 1.52115,0.87477 0.44691,-0.25432 0.84757,-0.84868 1.38508,-0.4367 0.5486,0.26034 1.38237,0.44384 1.66605,-0.27 0.5814,-0.90077 0.8905,-1.96183 1.57473,-2.80877 0.23097,-0.46303 0.78249,-0.83484 0.64215,-1.40354 0.45369,-0.52729 0.94616,0.0844 0.97409,0.58401 0.20312,0.95 0.53804,1.86721 0.74669,2.81335 0.29827,0.76886 0.46603,1.99183 1.49843,2.03257 0.68144,-0.0532 0.76766,0.73789 0.64578,1.24108 -1.07473,0.5722 -1.23358,2.05557 -2.35981,2.59122 -1.1994,0.57781 -1.82207,1.82986 -2.26019,3.02478 -0.75005,0.5019 0.0258,0.7071 0.54609,0.42722 0.59343,-0.19696 1.06964,-0.64576 1.6459,-0.86922 0.22859,0.6079 0.37867,1.38365 0.90369,1.77845 0.69749,0.21207 1.47836,0.0794 2.18869,-0.0118 0.82424,-0.47736 0.52459,-0.0285 0.37245,0.59193 -0.12426,0.87337 0.41131,-0.328 0.78269,-0.42861 0.60738,-0.57284 1.46102,-0.89448 1.7539,-1.73609 0.23465,-0.50302 0.55001,-1.14145 1.21983,-0.95924 0.53878,0.17637 1.03284,-0.51718 1.43579,0.0777 0.41887,0.44405 1.01942,0.50423 1.56602,0.59737 0.68843,0.31205 1.61774,0.40598 2.03836,1.08612 0.14985,0.90485 0.6634,0.0301 1.11786,0.12497 0.52775,0.30286 0.79955,0.93055 1.09972,1.44621 -0.30264,0.49593 -0.75791,1.02518 -0.42776,1.63557 0.18779,0.69982 0.65811,-0.43304 1.04262,-0.54117 0.67574,-0.20388 1.3328,-0.46742 1.97932,-0.74242 1.01341,0.0201 1.78207,0.95172 2.81158,0.9923 1.2128,0.20988 2.48112,0.33513 3.66905,-0.0377 1.36522,0.0547 2.54245,0.92651 3.60407,1.72092 1.23306,1.02985 2.36726,2.22352 3.74769,3.04281 1.03813,0.4443 2.21767,0.24288 3.28594,0.47163 0.76202,0.27972 0.52445,1.2694 0.83587,1.87873 0.46956,1.52222 1.00139,3.14136 0.50656,4.72959 -0.28347,1.17811 -0.72447,2.38017 -1.49485,3.32154 -0.92294,0.75982 -1.77106,1.62011 -2.6821,2.38267 -0.50633,0.15565 -0.92602,0.26813 -1.10299,0.84153 -0.0813,0.91651 -0.53343,1.73517 -1.02877,2.50421 -0.38924,0.55157 -0.71675,1.18413 -1.2472,1.61079 -0.30871,0.0244 -0.44568,-1.08819 -0.92521,-0.69943 0.0197,1.10277 -0.71754,2.05344 -0.65498,3.16357 -0.13038,1.29146 0.26377,2.58075 0.30113,3.87687 0.0483,1.26378 -0.70398,2.4736 -0.5495,3.74769 0.35782,0.58831 -0.16937,0.78375 -0.61346,1.0553 -0.65914,0.6619 -0.82949,1.66613 -0.55873,2.54437 0.25804,0.63184 -0.0812,1.24666 -0.61763,1.59812 -0.68013,0.62332 -0.80447,1.65186 -1.4475,2.32595 -0.55486,0.65592 -1.05552,1.4901 -0.74306,2.37424 0.0675,0.52494 -0.88664,0.37689 -1.24489,0.65333 -0.62284,0.19878 -1.04088,0.78474 -0.88319,1.44298 -0.69277,0.21956 -1.43849,-0.0246 -2.1401,0.22676 -0.98208,0.14433 -1.93357,-0.26262 -2.90891,-0.0758 -0.70494,-0.22382 -0.79599,0.27138 -1.09753,0.70804 -0.61999,0.29158 -1.34737,0.51778 -1.63346,1.21798 -0.48709,-0.24202 -1.02794,-0.35384 -1.50168,-0.0127 -1.20211,0.68403 -2.28081,1.57333 -3.49255,2.23717 -0.63869,0.32948 -0.858,1.24903 -1.6812,1.23711 -0.87138,-0.0749 -0.43023,0.28951 -0.18033,0.74955 0.0888,0.42269 0.0338,1.08057 -0.43025,1.25088 -0.0712,0.46753 0.51677,0.93329 0.32158,1.51347 0.0933,1.24205 0.12206,2.60958 -0.68,3.64758 -0.55606,0.73616 -1.5311,1.01516 -2.00517,1.83732 -0.81394,0.95615 -0.95613,2.31424 -1.80145,3.26273 -0.5045,0.78234 -1.2998,1.29922 -1.92196,1.97989 0.22719,-0.79786 0.72942,-1.46879 1.38602,-1.96798 0.12293,-0.42228 0.81724,-1.10858 0.46245,-1.3791 -0.42572,0.39742 -1.10648,-0.29435 -1.37847,0.0401 -0.056,0.7006 -0.29752,1.43838 -0.74799,1.992 -0.5875,0.35442 -1.30802,0.80189 -1.23853,1.58497 -0.23392,0.97661 -0.44538,1.99565 -1.19272,2.72576 -0.4468,0.60026 -1.03082,1.06842 -1.57674,1.57327 -0.13251,-0.53535 -0.61573,-1.17039 -0.0294,-1.60178 0.44075,-0.30349 0.60368,-0.94631 0.004,-1.15473 -0.67047,-0.69729 -1.16734,-1.7171 -2.14617,-2.11356 -0.56335,-0.48827 -1.52591,-0.30923 -1.87301,-1.04139 -0.2823,-0.61379 -0.71287,-0.54754 -1.15794,-0.12306 -0.51263,0.12711 -0.57674,-0.67626 -0.93136,-0.93198 -0.35157,-0.43422 -0.78696,-1.05157 -1.37022,-1.07422 -0.56733,0.17925 -1.15725,0.35791 -1.75963,0.31672 1.88248,-2.0921 3.91366,-4.06473 6.06591,-5.87845 0.77429,-0.52199 1.83613,-0.63914 2.50605,-1.28153 0.23015,-0.66239 0.20032,-1.41887 0.18972,-2.1021 -0.26621,-0.39812 -0.28944,-1.10255 -0.77546,-1.26566 -0.45225,-0.01 -0.8916,0.11672 -1.33623,0.17276 z m 9.67801,-53.35202 c -0.60206,0.0371 -0.87127,-0.52291 -0.93701,-1.043 0.32326,-0.39722 -0.089,-0.99484 0.16738,-1.47514 0.002,-0.5622 0.25893,-1.05165 0.89795,-0.9041 0.758,-0.005 1.57469,0.39587 2.27668,-0.002 0.56082,0.0663 1.12512,0.21716 1.64499,0.434 -0.60365,0.67855 -0.31408,1.81121 -1.15082,2.33464 -0.66857,0.56329 -1.54071,0.44766 -2.34402,0.50626 -0.18466,0.05 -0.37211,0.0979 -0.55515,0.14909 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Bolivie\"\n\t\t\t\t\t\t\td=\"m 245.93401,224.314 c 0.7983,0.014 1.54347,0.41611 2.32659,0.41755 0.53026,-0.16593 0.80949,-1.01876 1.46013,-0.80093 0.79155,0.0964 1.30619,-0.72084 1.9414,-1.07841 0.73098,-0.54414 1.55949,-1.03415 2.50387,-0.97221 0.42067,0.14 1.39953,-0.30316 1.30435,0.37576 0.0272,1.17634 -0.41637,2.49661 0.32053,3.55301 0.59039,0.78751 1.30825,1.5532 2.155,2.04637 0.65555,0.15384 1.35734,-0.0967 1.96412,0.28787 0.68778,0.15665 1.09543,0.79545 1.73801,1.00799 0.54014,0.005 1.15943,-0.0854 1.25497,0.60786 0.26302,0.66106 1.01884,0.65203 1.61252,0.54968 0.64172,0.008 1.40695,0.13151 1.87742,0.58784 0.016,0.55008 0.0583,1.13032 0.21008,1.68362 0.094,1.23154 0.0266,2.49613 0.41699,3.68199 0.52704,0.26384 1.20933,0.0888 1.79771,0.1621 0.71018,0.0102 1.42063,0.009 2.1303,0.0409 0.14701,0.59781 -0.5305,1.29055 -0.0221,1.81525 0.41173,0.48968 1.2031,0.50898 1.38488,1.20934 0.57138,1.0002 0.14008,2.16481 -0.12678,3.19242 -0.23144,0.497 -0.49235,0.97742 -0.80099,1.431 -0.70381,-0.40806 -1.45054,-0.83076 -2.21663,-1.10196 -0.64497,-0.0562 -1.29887,0.0212 -1.94738,-0.0171 -0.47451,0.32982 -1.16467,0.27027 -1.72944,0.4094 -0.58756,0.0788 -1.21345,0.2175 -1.74873,0.39773 -0.49316,0.59436 -0.90378,1.28764 -1.29474,1.9338 -0.15438,0.54565 0.006,1.12763 -0.29121,1.64825 -0.21854,0.65284 -0.42241,1.31451 -0.70986,1.94083 -0.85573,-0.17654 -1.73705,-0.18214 -2.608,-0.18201 -0.34467,0.59466 -0.68934,1.18933 -1.034,1.78399 -0.23002,-0.64497 -0.43398,-1.45222 -1.21517,-1.59912 -0.91264,-0.17761 -1.99361,0.33301 -2.75629,-0.38341 -0.47101,-0.33278 -0.77581,0.55237 -1.15543,0.77005 -0.50795,0.46152 -0.94295,1.09418 -1.49597,1.44999 -0.47119,-0.0226 -1.31757,0.19545 -1.29486,-0.52596 -0.28353,-1.48461 -0.43942,-3.09749 -1.48006,-4.27998 -0.40111,-0.52688 -0.41675,-1.19649 -0.15196,-1.7893 0.0956,-0.51221 0.56271,-1.20268 -0.0659,-1.54882 -0.76715,-0.50401 -0.74071,-1.45608 -0.92414,-2.24785 -0.31362,-0.87801 -1.21999,-1.47845 -1.17221,-2.4816 0.31438,-0.6053 1.31593,-0.88685 1.11523,-1.72004 -0.21028,-0.68552 -0.99035,-1.41621 -0.42519,-2.14312 0.42785,-0.49624 -0.45831,-1.02748 -0.079,-1.58783 0.42353,-0.48699 1.15234,-1.06674 0.77406,-1.77774 -0.32618,-1.01831 -0.0319,-2.15822 0.57194,-3.01525 -0.58769,-1.29739 -1.39236,-2.50255 -2.11399,-3.73201 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Paraguay\"\n\t\t\t\t\t\t\td=\"m 279.28799,257.29501 c -0.0181,0.6443 -0.35622,1.27874 -0.57954,1.87833 -0.52466,0.7766 -1.55902,1.04493 -1.97945,1.91867 -0.45983,-0.32258 -1.05567,-0.66191 -1.58099,-0.259 -1.00937,0.27815 -2.06084,0.10986 -3.01102,-0.293 -0.68863,-0.18191 -1.32773,0.34509 -1.98397,0.25098 0.10652,-0.59382 1.00328,-0.75065 1.05644,-1.31812 -0.36556,-0.52249 -0.0181,-1.00485 0.33986,-1.40637 0.301,-0.52716 0.71285,-1.06812 0.78668,-1.67749 -0.84551,-0.54644 -1.8436,-0.71207 -2.70979,-1.22251 -1.16783,-0.57698 -2.11651,-1.68945 -3.50556,-1.72274 -1.51252,-0.36239 -2.43846,-1.76501 -3.47764,-2.81476 -0.38361,-0.40266 -0.71647,-0.90247 -1.09225,-1.27512 -0.11877,-0.29742 0.32703,-0.92756 0.40341,-1.35975 0.22306,-0.65705 0.49502,-1.30764 0.4273,-2.00909 0.16878,-0.70564 0.76722,-1.21731 1.08652,-1.86904 0.3045,-0.55881 1.003,-0.4447 1.53392,-0.6419 0.76395,-0.14104 1.63064,-0.16529 2.30693,-0.48005 0.89802,0.0767 1.88773,-0.2276 2.66794,0.36472 0.64388,0.39472 1.71427,0.57098 1.70489,1.51381 0.0472,0.65667 0.73761,1.09329 0.62739,1.80073 0.0653,0.88069 -0.26995,1.75261 -0.18705,2.64369 0.83672,0.0205 1.63184,0.42667 2.461,0.381 0.43392,-0.33152 0.91028,-0.56093 1.40462,-0.19106 0.42149,0.24093 1.10741,0.29027 1.10737,0.89606 0.25695,1.02584 0.27093,2.12877 0.741,3.08701 0.66401,0.19485 1.38129,-0.76383 1.96799,-0.12747 0.62863,0.26392 -0.0688,0.884 -0.12057,1.32749 -0.31732,0.83355 -0.58475,1.70821 -0.39543,2.60498 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Uruguay\"\n\t\t\t\t\t\t\td=\"m 270.93399,276.12299 c 0.14095,-0.58263 -0.41337,-1.20121 0.0261,-1.75677 0.25757,-0.47148 0.90069,-0.8354 0.60834,-1.46214 -0.30191,-1.08184 -0.0109,-2.1639 0.28654,-3.20935 0.1993,-0.5344 0.18731,-1.16943 0.44879,-1.65444 0.25594,-0.59926 0.91124,-0.28381 1.39712,-0.51378 0.46225,-0.10149 0.96052,-0.38973 1.32013,0.0911 0.58869,0.46572 0.9903,1.12176 1.39004,1.74738 0.50275,0.10526 0.9371,-0.83185 1.26531,-0.11749 0.28336,0.4114 0.56914,0.79944 1.11167,0.83749 1.10854,0.33919 2.05689,1.07965 2.67304,2.06112 0.17637,0.48633 0.9126,0.55336 0.81296,1.1359 -0.30076,0.43342 -0.99114,0.86892 -0.59179,1.45482 0.40102,0.55609 -0.0193,0.96637 -0.36812,1.41046 -0.67676,0.95024 -1.82791,1.70639 -3.02198,1.61475 -0.79478,-0.48244 -1.75446,-0.2774 -2.5331,0.13597 -0.70325,0.0128 -1.02953,-0.8187 -1.72173,-0.91411 -0.56653,-0.25927 -1.14311,-0.17301 -1.72214,-0.0319 -0.62404,0.10122 -0.82411,-0.72579 -1.38114,-0.82898 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Chili\"\n\t\t\t\t\t\t\td=\"m 248.453,316.57599 c -0.57036,0.18874 -1.2412,0.0641 -1.736,-0.27899 -0.65998,-0.0708 -0.94551,0.81989 -1.64015,0.75195 -0.69368,0.0605 -1.73213,-0.0256 -1.89642,0.8638 -0.32383,0.5306 0.046,1.17429 -0.32451,1.69895 -0.38544,0.10067 -0.9611,0.31348 -1.36618,0.0694 -0.86207,-0.14628 -0.45052,-0.52181 0.0373,-0.91106 0.0564,-0.48139 1.1877,-0.7161 0.77256,-1.06735 -0.56,-0.45806 -1.14959,0.13097 -1.72422,0.27164 -0.54471,0.11722 -1.14208,-0.0789 -1.66833,0.19473 -0.56045,-0.59747 0.47249,-0.65795 0.86727,-0.79406 0.51813,0.0648 1.01094,-0.21159 1.51673,-0.30296 -0.62646,-0.25169 -1.30062,-0.13565 -1.957,-0.159 -0.17419,-0.4571 0.69314,-1.03018 -0.202,-0.987 -0.2878,-0.8399 -0.76375,0.0684 -1.27387,-0.12345 -0.95726,0.12848 0.47738,-1.04158 -0.43104,-0.77254 -0.31552,0.39023 -1.2176,-0.37833 -0.79621,-0.51221 0.64887,-0.37131 0.0344,-0.76675 -0.42258,-0.75597 -0.83072,-0.31543 -0.58013,-0.44745 0.16971,-0.54682 0.24237,-0.25804 0.85491,-0.80328 0.70952,-1.04672 -0.44032,-0.0535 -1.15003,0.45074 -1.24805,-0.24939 -0.45833,-0.5547 0.99997,-0.69035 4.4e-4,-1.03132 -0.73759,-0.54728 0.52777,-0.69758 0.45901,-1.12318 -0.11735,-0.61168 -1.04309,0.75147 -0.80172,-0.36255 -0.0366,-0.53845 -0.17169,-1.10363 0.28678,-1.50765 0.17428,-0.34227 -0.52556,-1.28282 0.2363,-1.11379 0.45232,0.0302 0.96497,0.50234 1.40942,0.24864 0.39165,-0.45201 -0.61292,-0.72683 -0.94894,-0.74953 -0.55396,0.25789 -0.98753,-0.16291 -1.53866,0.002 0.0841,-0.38857 0.34336,-0.73918 0.45988,-1.09833 0.51985,0.30377 1.14519,-0.58575 0.46214,-0.74758 -0.50539,-0.41966 -1.13773,-0.32566 -1.73414,-0.33028 -0.32099,-0.40519 -0.39506,-0.72001 -1.14686,-0.41589 -0.40353,-0.28699 0.71225,-0.53429 0.97497,-0.75579 0.47277,-0.12292 0.65628,-0.69748 1.00653,-0.91587 0.42283,-0.22369 1.42604,0.11977 0.90172,0.54628 -0.5306,0.0157 -1.09733,0.58067 -0.57434,0.98611 0.25125,-0.25319 0.9308,-0.98914 0.847,-0.16098 -0.0711,0.97096 0.50026,-0.0832 0.82468,-0.359 0.49501,-0.54412 0.002,-1.65479 0.81935,-1.94879 1.06538,-0.24517 -0.47085,-0.13276 -0.17038,-0.69789 0.35808,-0.30961 0.99398,-0.38871 1.36117,-0.78659 0.57984,-0.41817 0.28143,-0.91745 -0.31812,-1.05034 -0.66927,-0.16991 -0.43838,-0.76328 -0.2683,-1.2228 0.0494,-0.48549 -0.21911,-1.10318 0.41401,-1.30278 0.89987,-0.11188 0.29892,-0.49103 0.1506,-1.00112 -0.33681,-0.72403 0.42895,-0.75405 0.6761,-1.09684 0.22743,-0.6123 -1.11769,-0.46886 -0.44813,-1.03587 0.3041,-0.53595 -0.7308,-0.6899 -0.95011,-0.23605 -0.33745,0.43798 -1.26368,0.42695 -1.31042,-0.23838 -0.35155,-0.66658 -0.76253,-1.40758 -0.45476,-2.17868 0.0362,-0.9016 0.96147,-1.28862 1.32795,-2.03686 0.3539,-0.54958 -0.19101,-1.20268 -0.27183,-1.78312 -0.43114,-0.82078 0.27843,-1.82284 -0.40859,-2.55553 -0.45336,-0.3831 -0.30644,-1.18951 0.37569,-0.84275 0.81401,-0.14504 0.66317,-1.23078 1.03455,-1.80303 0.488,-0.80751 0.40393,-1.88148 1.16123,-2.5264 0.79084,-0.91898 0.68734,-2.27447 1.35661,-3.23537 0.55585,-0.31763 0.40408,-0.95397 0.15401,-1.4228 -0.20654,-0.55451 0.74822,-0.75324 0.69727,-1.33154 -0.34546,-1.3656 -0.51948,-2.80903 -0.63185,-4.21992 -0.029,-0.75605 0.83457,-1.17068 0.95633,-1.9066 0.18864,-0.53354 0.0175,-1.05517 -0.29877,-1.48836 -0.1665,-0.66448 0.33133,-1.30176 0.37811,-1.97504 0.0696,-0.53544 0.25208,-1.01678 0.64558,-1.39855 0.2386,-1.44258 0.78455,-2.86806 0.55901,-4.35001 0.33696,-0.53022 0.83524,-1.11306 0.4895,-1.76315 -0.10717,-0.48936 -0.20695,-1.04657 0.0204,-1.48867 -0.1072,-0.52893 0.0795,-1.04312 0.17491,-1.51717 -0.37894,-0.24219 -0.62565,-0.6629 -0.30789,-1.13699 0.50782,-0.16015 0.7179,-0.62826 0.62478,-1.14624 -0.008,-0.99419 0.40069,-1.94757 0.26952,-2.95197 0.0431,-1.66382 -0.22241,-3.31658 -0.23354,-4.97795 0.0781,-0.44113 -0.56471,-1.21624 -0.073,-1.35573 0.54787,-0.0589 0.97195,-0.4397 0.98389,-1.00898 -0.0783,-0.50938 0.75875,-1.08429 0.98945,-0.54815 0.58835,0.65973 0.9786,1.46498 1.01258,2.35719 0.018,0.71716 0.73823,1.07919 1.05577,1.60149 0.006,0.89967 -0.79246,1.81008 -0.25038,2.68594 0.45042,0.72555 1.02814,1.39828 1.16148,2.27796 0.29612,0.85418 0.27974,1.84694 0.60239,2.65383 0.5108,0.35218 1.3206,-0.16001 1.72516,0.4766 -0.0745,0.74881 -0.37167,1.49796 -0.70641,2.14448 -0.75341,0.53106 -1.76177,0.64692 -2.50121,1.18087 -0.41374,0.42565 0.41833,1.01834 -0.12915,1.43841 -0.3986,0.54222 -0.21435,1.35076 0.24877,1.80324 0.057,0.48547 -0.65378,0.86356 -0.30654,1.41041 0.31162,0.25789 0.9289,0.91733 0.22807,1.09764 -0.59329,-0.0128 -1.146,0.0625 -1.20709,0.75824 -0.36165,1.06449 -1.38223,1.70963 -1.71278,2.79048 -0.25608,0.61583 -0.69058,1.20401 -0.45221,1.89643 -0.005,0.55757 0.28713,1.20621 0.0166,1.7068 -0.74065,0.21826 -0.93318,0.96881 -1.11179,1.62555 -0.16278,0.59677 -0.32872,1.23965 0.0688,1.78043 0.49511,1.38117 0.91696,2.8033 1.21319,4.2357 0.18788,1.00546 -0.6924,1.74698 -1.07192,2.59884 -0.35766,0.43822 -0.40663,0.91982 -0.22088,1.44334 0.15345,0.50773 0.21564,1.11941 -0.36117,1.37611 -0.52926,0.47347 -1.3255,0.86625 -1.23666,1.69761 -0.18977,1.24838 0.0128,2.55087 0.63945,3.6534 -0.45073,0.41897 -1.38031,0.47133 -1.35031,1.24097 -0.26702,0.99315 -0.27843,2.08292 -0.83187,2.96681 -0.14082,0.74413 0.0183,1.54049 0.0919,2.29093 0.0954,0.45273 0.48521,1.18951 -0.19497,1.33092 -0.75921,0.2861 -0.37101,1.17828 -0.38779,1.77737 0.47595,0.19957 0.90468,0.30903 0.75647,0.98211 -0.0529,0.70316 -0.43584,1.63697 0.28972,2.10943 0.31666,0.10454 1.46952,0.0893 0.98971,0.60951 -0.54841,0.39858 -1.29325,0.15632 -1.91289,0.39795 0.35913,0.43221 1.23183,0.47194 1.331,1.07 -0.34026,0.40941 -0.9294,0.71036 -0.79571,1.32633 -0.12074,0.80303 0.30666,1.59746 -0.0597,2.37405 -0.11469,0.53422 -0.50023,0.95162 -1.06459,0.97562 -0.3781,0.24497 -0.69198,0.93345 -0.32752,1.29276 0.46571,0.43527 -0.0487,1.04317 -0.0763,1.57927 -0.23172,0.59655 -1.02106,0.74207 -1.502,1.11722 -0.50119,0.22384 -1.07707,0.62675 -0.84905,1.25352 0.1137,0.79766 0.37984,1.54519 0.75082,2.25823 0.61577,0.062 1.2037,-0.33938 1.83301,-0.36099 0.39747,0.53339 0.20973,1.29607 0.35679,1.92756 -0.113,0.62256 0.45028,0.95702 0.92789,1.17886 1.34307,0.0392 2.6883,-0.0442 4.03162,0.0789 1.13831,-0.0394 2.19818,0.51349 3.3047,0.64469 z m -11.811,-19.80298 c -0.39733,-0.1534 -1.2931,-0.0596 -1.0928,-0.70248 0.36549,-0.58452 0.21687,-1.242 0.2098,-1.88053 0.15569,-0.59889 0.53305,-0.88997 1.1557,-0.8404 0.63787,0.2658 0.41815,0.8744 -0.16833,1.03621 -0.63128,0.38003 0.47298,0.82488 0.20856,1.32037 -0.094,0.36067 -0.0575,0.76887 -0.31293,1.06683 z m 1.535,21.164 c -0.87428,0.0896 0.0127,-1.12112 -0.62751,-0.99555 -0.66585,0.40736 -0.88783,-0.62711 -0.26215,-0.64861 0.46083,0.31895 1.09562,-0.35307 1.36556,0.0648 0.19916,0.58883 -0.14972,0.98056 -0.41634,1.46128 0.0173,-0.11899 -0.0607,0.16826 -0.0596,0.11806 z m 9.62399,4.125 c -0.70192,0.12618 -1.42081,0.13167 -2.04998,-0.25302 -0.79838,-0.0508 -1.5348,0.37992 -2.332,0.36102 0.37454,-0.40944 0.0369,-1.09517 0.66127,-1.03957 0.6424,-0.11652 1.35131,-0.0806 1.97293,0.0337 0.22268,0.38878 1.49297,0.41815 0.7701,-0.0669 -0.33084,-0.52442 -1.00739,-0.65918 -1.5573,-0.69826 -0.44171,-0.34235 -0.81188,-0.91897 0.0181,-0.952 0.34579,-0.18999 1.41505,-0.24824 0.84926,-0.78419 -0.61384,-0.027 -1.31927,0.28313 -1.92205,0.20243 -0.48947,-0.26489 0.22583,-0.91233 0.58758,-0.99882 0.57323,-0.22285 1.05581,-0.59624 1.54215,-0.96339 0.41596,0.43055 1.03037,0.27053 1.567,0.34198 -0.003,1.60479 -0.0688,3.21978 -0.10701,4.81701 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Argentine\"\n\t\t\t\t\t\t\td=\"m 247.899,318.38699 c 0.0659,-0.47086 -0.24839,-1.48253 0.51085,-0.96697 0.81862,0.16498 -0.0768,0.73766 -0.42667,0.91448 l -0.0751,0.0474 -0.008,0.005 -9.9e-4,0 z m 0.554,-1.811 c -1.25545,-0.21751 -2.45682,-0.75164 -3.75454,-0.67401 -1.22059,-0.12641 -2.44336,0.0101 -3.66346,-0.063 -0.49508,-0.30359 -0.95747,-0.62593 -0.84949,-1.27518 -0.13823,-0.5997 0.0396,-1.32324 -0.34651,-1.8258 -0.62928,0.0201 -1.2171,0.42626 -1.833,0.36099 -0.43368,-0.89333 -0.83674,-1.87404 -0.751,-2.88199 0.62073,-0.73508 1.74857,-0.90145 2.32798,-1.65134 0.0323,-0.4829 0.41716,-1.03584 0.24328,-1.46605 -0.46172,-0.37091 -0.3184,-1.01994 0.0437,-1.39211 0.46079,-0.22985 1.04129,-0.30628 1.15902,-0.93169 0.26277,-0.64014 0.23288,-1.30363 0.075,-1.96582 0.0674,-0.52547 -0.11192,-1.15847 0.42937,-1.47742 0.65217,-0.3566 0.29438,-0.8518 -0.25157,-1.05184 -0.74394,-0.24614 -0.72379,-0.56531 0.0742,-0.57475 0.44737,-0.0129 1.24219,0.0271 1.30001,-0.55099 -0.45619,-0.37619 -1.35707,-0.0332 -1.49162,-0.7914 -0.27571,-0.70918 0.2534,-1.50214 0.009,-2.24494 -0.31671,-0.22585 -0.95481,-0.29806 -0.74457,-0.98579 -0.15439,-0.53626 0.0418,-1.10909 0.62377,-1.25748 0.48339,-0.26365 -0.003,-0.96832 -0.0392,-1.4024 0.005,-0.92321 -0.38396,-1.96398 0.293,-2.746 0.2161,-0.93163 0.36229,-1.90109 0.6169,-2.81036 0.2917,-0.37167 1.05381,-0.44856 1.18838,-0.85108 -0.72328,-1.28133 -0.8298,-2.86512 -0.46741,-4.26095 0.39364,-0.61609 1.23409,-0.88863 1.5536,-1.52338 0.13036,-0.69808 -0.51659,-1.47414 0.0114,-2.09105 0.37394,-0.81084 1.06185,-1.50171 1.22512,-2.38918 -0.0947,-1.28979 -0.59887,-2.51302 -0.92786,-3.75728 -0.12978,-0.58763 -0.53853,-1.13115 -0.57568,-1.71112 0.15222,-0.79718 0.24793,-1.70593 0.80754,-2.32658 0.62118,-0.13833 0.69138,-0.6837 0.56199,-1.21802 -0.0417,-0.71776 -0.34682,-1.47632 0.12335,-2.11479 0.34252,-0.85141 0.74252,-1.6858 1.42264,-2.32319 0.31865,-0.53103 0.59002,-1.08437 0.79302,-1.67002 0.45899,-0.13902 1.35352,0.13935 1.26739,-0.59448 -0.31455,-0.32484 -0.85911,-0.74955 -0.54288,-1.27913 0.45087,-0.41999 0.29976,-0.85604 -0.0618,-1.26639 -0.24049,-0.5857 -0.027,-1.17462 0.33725,-1.65199 -0.20211,-0.46215 -0.40843,-1.14266 0.27757,-1.27598 0.71197,-0.41947 1.66853,-0.48531 2.23234,-1.09431 0.22395,-0.66405 0.56416,-1.29836 0.60308,-2.00971 -0.75384,-0.31474 -0.19237,-0.64962 0.20076,-1.05125 0.54773,-0.54989 1.06575,-1.13021 1.63724,-1.65576 0.53183,0.3977 1.16101,0.65062 1.84029,0.51721 0.77014,-0.13337 1.84198,-0.0425 2.08705,0.85061 0.16888,0.78652 0.39788,0.81766 0.68964,0.0604 0.33757,-0.35079 0.37663,-1.21615 0.98841,-1.09425 0.81656,0.0247 1.65122,0.0125 2.44261,0.24008 0.88757,1.18487 1.90246,2.29742 2.99929,3.29032 0.62963,0.5552 1.407,0.84435 2.23814,0.90536 1.24823,0.39212 2.14738,1.46054 3.38625,1.89675 0.68227,0.3389 1.44023,0.47189 2.07633,0.91758 -0.0905,0.63701 -0.50465,1.21609 -0.84538,1.75742 -0.41592,0.39171 -0.57628,0.90317 -0.25264,1.41058 -0.25094,0.49139 -0.9376,0.67519 -1.08499,1.23398 0.68057,0.0993 1.35948,-0.47786 2.06824,-0.22271 1.07084,0.4701 2.3248,0.56115 3.40193,0.0818 0.50743,-0.20765 1.03934,0.81059 1.3077,0.1494 0.59204,-0.84397 1.87211,-1.13357 2.03675,-2.28318 0.311,-0.40833 0.0983,-1.28409 0.67086,-1.28031 0.47756,-0.0621 1.2365,-0.35988 1.3835,0.32021 0.25692,0.51539 0.51876,1.02988 0.36731,1.6204 -0.0437,0.60864 0.0611,1.45019 -0.67125,1.6699 -0.9898,0.45927 -2.09098,0.75407 -2.83084,1.61394 -2.00205,1.79435 -3.96462,3.65401 -5.69819,5.71152 -0.19281,1.57291 -1.06891,3.09727 -0.62448,4.70551 0.33899,0.73375 -0.52362,1.09791 -0.71334,1.70924 -0.27493,0.62691 0.46679,1.32897 -0.1347,1.87463 -0.57402,0.48206 0.31887,0.84892 0.60326,1.19457 0.61501,0.51641 1.76285,0.44908 2.08342,1.26263 -0.0283,0.49156 -0.66625,0.86421 -0.3443,1.41004 0.17114,0.59998 0.87401,0.6604 1.29713,0.95938 0.16639,0.51359 0.3435,1.04072 -0.13752,1.44238 -0.44118,0.68143 -1.1342,1.18389 -1.52767,1.87895 -0.22211,0.93355 -1.33265,1.02841 -2.08403,1.33971 -2.09748,0.61383 -4.3004,0.77033 -6.47425,0.86067 -0.68467,-0.0423 -1.36145,-0.13195 -2.02052,-0.32771 -0.21519,0.39444 -0.21281,1.05994 0.22998,1.319 0.65656,0.1978 -0.0582,0.82358 -0.21359,1.17905 -0.45489,0.41373 -0.40255,0.99506 -0.009,1.42621 0.35898,0.60872 -0.57497,0.72458 -0.95718,0.90455 -1.08936,0.43039 -2.35526,0.38893 -3.42102,-0.1028 -0.57252,-0.0835 -1.13991,-0.4563 -1.716,-0.33902 -0.51616,0.43337 -0.0651,1.12562 0.23999,1.55301 0.21039,0.51996 -0.53141,1.13349 0.0327,1.52776 0.40868,0.37268 0.95907,0.59873 1.50145,0.47989 0.49775,-0.27012 -0.49676,-0.73593 0.59871,-0.70545 0.68506,-0.35161 0.66031,0.38625 0.77452,0.87235 0.29452,0.56274 -0.4083,0.69132 -0.81933,0.71745 -0.34755,-0.42069 -0.65231,-0.66194 -1.27771,-0.47134 -0.34743,0.003 -1.59011,0.29993 -0.80284,0.55424 0.38361,0.0544 1.2346,0.16324 1.31548,0.33951 -0.68753,0.39881 -1.5839,0.44323 -2.05078,1.15173 -0.34643,0.53924 0.46358,1.37985 -0.25316,1.79948 -0.46935,0.3231 -0.80428,0.8439 -0.11899,1.15137 -1.08464,0.26831 -2.3237,0.0528 -3.24839,0.82066 -0.57137,0.43227 -1.15247,1.02969 -1.31194,1.73855 -0.043,1.13412 1.11056,1.77194 1.9829,2.23167 0.56663,0.33022 1.34533,0.15694 1.86285,0.49024 0.1837,0.43315 -0.0458,0.99301 -0.23215,1.4104 -0.48486,0.80929 -1.53057,0.92551 -2.26534,1.43499 -0.71091,0.33807 -1.48895,0.82003 -1.76091,1.58853 -0.11296,0.47143 0.21307,0.99288 -0.22137,1.39233 -0.56899,0.59951 -1.49092,0.66583 -2.229,0.96424 -0.72164,0.33452 -0.88189,1.29972 -0.82237,2.01149 0.15725,1.07257 1.04186,1.78365 1.63671,2.6189 0.0208,0.0821 -0.0929,-0.002 -0.105,0.039 z m -0.554,1.811 c 0.34159,0.53869 1.13834,-0.11798 1.45663,0.51175 0.67672,0.81209 1.62524,1.34386 2.45321,1.98187 0.64387,0.23046 1.21043,0.72021 1.92334,0.65879 0.57422,0.23339 1.21752,0.13565 1.82382,0.1456 0.027,0.67843 -0.87064,0.43242 -1.30812,0.54062 -0.78447,-0.011 -1.5562,0.48639 -2.3144,0.0611 -1.20066,-0.38455 -2.49887,-0.30404 -3.74263,-0.26159 -0.71959,0.24312 -0.24114,-0.79939 -0.35569,-1.20555 0.0209,-0.81071 0.0446,-1.62251 0.0638,-2.43255 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Afrique\">\n\t\t\t\t\t<g id=\"Mahgreb\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Maroc\"\n\t\t\t\t\t\t\td=\"m 395.70401,122.189 c 0.0894,0.58576 0.70125,0.60387 1.01099,0.998 0.32119,1.03081 0.014,2.12423 0.18418,3.16125 0.21828,0.58212 0.64281,1.12044 1.20583,1.40675 0.0469,0.37469 -0.0591,1.27831 -0.53657,1.24341 -1.08412,-0.0194 -2.16776,0.0316 -3.25145,-0.007 -0.16003,0.5551 -0.66055,0.83112 -1.22036,0.79266 -0.48684,-0.0126 -1.21191,0.0922 -0.97723,0.76202 0.39018,0.50591 0.29045,1.03301 -0.39518,1.14879 -0.65657,0.34082 -1.35013,0.58381 -2.06422,0.77253 -0.60637,1.13607 -1.97735,1.48085 -3.17599,1.444 0.0201,0.65351 -0.42785,0.88186 -1.02141,0.72466 -0.55925,-0.11756 -1.06844,-0.0169 -1.51846,0.34155 -0.83826,0.46036 -1.56118,1.12115 -2.46413,1.46179 -0.0777,0.79322 -0.0666,1.59227 -0.10602,2.388 -3.32022,0.0312 -6.64151,-0.0414 -9.961,0.045 0.30273,-0.86846 1.30321,-0.7937 2.04031,-1.00498 1.63535,-0.36012 2.82163,-1.61553 4.14671,-2.55102 0.69183,-0.79983 1.84087,-1.59837 1.58599,-2.79998 -0.53749,-0.71898 -0.73758,-1.76952 -0.0893,-2.48998 0.41725,-0.59418 1.15223,-1.17758 0.92127,-1.98804 0.065,-0.64351 0.80497,-0.91094 1.17362,-1.38527 1.26613,-1.23412 3.42779,-1.01775 4.4811,-2.54027 0.80803,-1.00796 1.19402,-2.26289 1.72726,-3.42245 0.44944,-0.27114 1.0322,-0.43931 1.27791,0.17377 0.36549,0.65501 1.12421,0.8818 1.77994,1.1081 1.15516,-0.0235 2.45532,0.2574 3.43016,-0.53087 0.23062,0.52854 0.7122,0.75127 1.27139,0.72505 0.18,0.0353 0.36301,0.0174 0.54462,0.0229 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Algerie\"\n\t\t\t\t\t\t\td=\"m 381.40201,139.70399 c -0.0458,-1.08776 0.002,-2.17892 0.079,-3.26399 1.16889,-0.45077 2.08833,-1.42203 3.24969,-1.84853 0.52459,0.008 1.05412,0.13098 1.57331,0.0135 -0.0251,-0.70685 0.44595,-0.79612 1.04501,-0.726 0.9268,-0.12948 1.8551,-0.55312 2.31201,-1.411 0.93009,-0.24708 1.87702,-0.60351 2.6729,-1.11025 0.16915,-0.41343 -0.57224,-1.03522 -0.0753,-1.42787 0.64347,-0.28354 1.6885,0.088 1.96708,-0.77269 0.30145,-0.38001 1.00646,-0.0288 1.46956,-0.15273 0.71338,-0.018 1.42718,-0.001 2.14074,-0.004 0.0797,-0.47182 0.67016,-1.1892 -0.03,-1.43454 -0.604,-0.4619 -1.10272,-1.20592 -0.95615,-2.00635 -0.0318,-0.82828 0.18117,-1.76752 -0.25339,-2.50347 -0.29708,-0.12732 -1.14707,-0.69593 -0.71473,-0.86564 0.69309,-0.0338 1.46975,-0.25801 1.74329,-0.965 0.4641,-0.47022 1.17966,-0.38323 1.73382,-0.71915 0.40725,-0.25465 0.9259,0.51862 1.3086,-0.0503 0.75344,-1.03649 2.07661,-1.48098 3.32149,-1.49865 0.95061,-0.10409 1.99345,0.10905 2.83308,-0.45391 0.59818,0.37267 1.26355,0.13103 1.81232,-0.19887 0.6805,-0.12953 1.41633,-0.0919 2.10398,-0.006 0.88455,0.32687 1.84572,0.40749 2.74367,0.0719 0.5722,0.0849 0.85226,-0.74593 1.30426,-0.62463 0.53085,0.24616 1.19016,0.81734 1.69824,0.22084 0.38288,-0.42822 1.18984,-0.22658 1.40855,0.27329 0.53978,0.26514 1.17099,-0.10482 1.75229,-0.0998 0.41228,0.23381 -0.70282,0.60504 -0.6383,1.05082 -0.15162,1.2002 0.0857,2.42908 -0.005,3.63301 -0.23044,0.78254 -1.17633,1.06843 -1.59612,1.70577 -0.21867,0.72416 0.31915,1.41221 0.54412,2.08423 0.87375,0.001 1.03341,0.95603 1.44244,1.53298 0.3556,0.34502 0.97799,0.46155 1.18113,1.01055 0.41468,1.26973 0.78646,2.55977 1.28143,3.80448 -0.64465,0.3178 -0.32907,0.87842 -0.0179,1.31807 0.68786,0.95329 0.69956,2.18236 0.56373,3.29997 0.23523,0.63732 -0.14089,1.25921 -0.19623,1.85957 0.23574,0.60548 0.68341,1.37682 0.20474,1.95861 -0.26221,0.32353 -1.159,0.47525 -0.88801,0.97211 0.54635,0.78909 1.30618,1.47415 1.41461,2.47666 0.31204,0.35195 0.52656,1.28908 1.13938,0.90383 0.64755,-0.15507 1.308,0.2826 1.94061,0.43417 0.49754,0.4863 0.66687,1.24286 1.13602,1.744 -1.60034,0.90955 -3.24883,1.74959 -4.8446,2.67546 -1.91223,1.09118 -3.84518,2.17765 -5.60828,3.49844 -1.14431,0.90311 -2.20994,1.94663 -3.37625,2.79552 -1.85651,0.37794 -3.71845,0.72821 -5.58088,1.07558 -0.3593,-0.62013 0.28127,-1.32905 -0.19389,-1.90465 -0.39437,-0.64067 -1.36656,-0.0468 -1.7918,-0.69852 -0.32821,-0.79215 -0.79607,0.23833 -1.22411,-0.21221 -0.45002,-0.44578 -0.95152,-0.86807 -1.41054,-1.2787 0.17062,-0.55048 -0.23066,-0.90819 -0.74171,-1.11404 -4.07559,-2.32948 -7.83337,-5.15553 -11.77478,-7.69356 -2.36596,-1.50959 -4.77337,-2.96712 -7.2385,-4.31429 -0.65261,-0.35213 -1.32335,-0.69782 -1.96466,-1.05404 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Tunisie\"\n\t\t\t\t\t\t\td=\"m 426.06799,126.434 c -0.0856,0.54185 -0.0803,1.0958 -0.058,1.62897 -0.21013,0.45293 -0.86771,0.52232 -1.25647,0.82481 -0.58768,0.39432 -1.20237,0.83279 -1.69129,1.32393 -0.27447,0.54673 0.40995,1.11424 0.0605,1.67177 -0.19903,0.54464 -0.85207,0.72138 -1.26869,1.07653 -0.51283,-1.25696 -0.85607,-2.58136 -1.31376,-3.85092 -0.18891,-0.54744 -0.84363,-0.60195 -1.15668,-0.97764 -0.40395,-0.57457 -0.57046,-1.51793 -1.43455,-1.51945 -0.2371,-0.69866 -0.79883,-1.41595 -0.525,-2.171 0.50787,-0.55203 1.34253,-0.87099 1.577,-1.619 0.10545,-1.2289 -0.1749,-2.489 0.025,-3.70999 0.18335,-0.41886 0.68229,-0.74466 0.91096,-1.05281 0.70848,-0.25308 1.26528,-0.9672 2.09801,-0.81933 0.51477,0.0126 1.13058,0.20296 1.19391,0.79328 0.098,0.67512 0.81779,0.42304 1.14597,0.076 0.40873,-0.50021 1.03516,-0.37356 0.58466,0.27983 -0.23147,0.56551 -1.14243,0.76975 -1.0225,1.50703 0.16395,0.48414 0.56664,0.89324 1.06098,1.031 0.20948,0.48743 0.46081,1.02063 -0.0477,1.42255 -0.32108,0.59991 -1.05785,0.74091 -1.46729,1.2779 -0.3903,0.296 -0.87971,0.74984 -0.35298,1.17355 0.4081,0.36759 0.88777,0.94576 1.47607,0.85682 0.60531,-0.56627 0.70116,0.37 1.04329,0.60368 0.13944,0.0577 0.27971,0.11407 0.41863,0.1725 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Sahara\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Egypte\"\n\t\t\t\t\t\t\td=\"m 476.45801,130.735 c 0.54854,1.34257 1.09672,2.68481 1.754,3.979 -0.75496,0.68847 -0.9,1.78804 -1.14514,2.73654 -0.063,0.46066 -0.28556,1.26815 -0.86381,0.81409 -0.58702,-0.77997 -1.6331,-1.23813 -1.78813,-2.29615 -0.13326,-0.5482 -0.8025,-0.72967 -0.89133,-1.32935 -0.12063,-0.46618 -0.40382,-1.22522 -0.901,-0.64 -0.47114,0.51222 0.13327,1.05055 0.28455,1.57787 0.30499,1.0726 1.28231,1.75527 1.85606,2.6543 0.29632,0.99197 0.94914,1.82232 1.21079,2.8247 0.83313,0.99783 1.25083,2.27226 1.95685,3.36132 0.4637,0.90744 0.99926,1.79314 1.88315,2.34869 0.2933,0.39476 -0.84564,0.46793 -0.30398,1.12874 0.0931,0.72877 0.48259,1.40297 1.14951,1.74181 0.51135,0.19132 0.80151,0.60315 1.16526,0.98921 0.43434,0.3515 0.76035,1.00327 -0.0917,0.75987 -8.29552,-0.0123 -16.59107,0.008 -24.88609,-0.0156 -0.68886,0.22735 -0.98733,0.0177 -0.82234,-0.71064 0.0134,-3.89431 -0.0612,-7.7882 7.8e-4,-11.68278 -0.0232,-1.23723 0.0679,-2.4804 -0.0154,-3.71358 -0.28512,-0.69737 -0.71064,-1.49413 -0.47229,-2.24878 0.23415,-0.452 0.68997,-0.89055 0.36648,-1.41511 -0.24308,-0.50761 -0.26994,-1.13376 0.3668,-1.33712 0.2021,-0.33033 0.89321,0.15279 1.33998,-0.11088 1.39189,-0.19733 2.74095,0.37961 4.11581,0.52201 0.60686,-0.11397 0.72019,0.68858 1.29521,0.52589 0.71749,-0.0317 1.35883,0.25499 2.01432,0.48669 0.82215,0.30222 1.25767,-0.6663 1.99455,-0.81595 0.71363,-0.30695 1.49693,-0.41018 2.22665,-0.67625 0.5949,-0.0293 1.21166,0.0196 1.80449,0.1425 0.12081,0.51442 0.70999,0.99768 1.22335,0.7029 0.44655,0.003 1.00353,0.54973 1.40377,0.0594 0.37843,-0.3474 0.88765,0.22674 1.40056,0.15846 0.49548,0.003 0.97127,-0.26119 1.36832,-0.52179 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<g id=\"Soudan\">\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Soudan (contour)\"\n\t\t\t\t\t\t\t\td=\"m 453.05315,178.58684 c 0.003,-0.0519 0.003,-0.10391 10e-4,-0.1561 -0.26318,-1.02983 -1.18959,-1.72586 -1.77156,-2.58475 0.38868,-0.62155 -0.0693,-1.29769 -0.586,-1.66398 -0.43738,-0.68288 -0.26195,-1.58408 -0.65399,-2.27001 -0.47416,0.0776 -1.37129,0.10715 -0.91032,-0.59146 0.17261,-0.54116 1.11217,-0.91587 0.6182,-1.54528 -0.51821,-0.56725 0.30739,-0.78445 0.6432,-1.08695 0.17879,-0.43735 -0.2293,-1.06753 0.24476,-1.47055 0.53737,-0.50554 0.56834,-1.3056 0.91952,-1.88482 0.64772,-0.23382 1.41493,-0.10362 2.10939,-0.13832 0.36106,-0.21947 0.0624,-0.99817 0.13912,-1.4363 -0.033,-1.47132 -0.0103,-2.94236 -0.0799,-4.41403 0.0731,-1.22179 0.0258,-2.4483 0.13999,-3.6683 0.69356,0.0167 1.38733,0.0202 2.081,0.03 0.20244,-0.69489 0.014,-1.48275 0.0661,-2.21341 -0.0131,-0.67927 -0.0108,-1.35847 0.01,-2.03758 1.93535,-0.20165 3.88877,-0.0137 5.83187,-0.0895 6.83133,0.0333 13.66346,-0.002 20.49515,0.0165 0.45547,0.80168 0.85924,1.648 0.81329,2.59177 0.12454,1.38511 0.14319,2.82296 0.57272,4.1425 0.59068,0.5421 1.38919,0.82903 1.96098,1.41072 0.71698,0.14515 0.8287,0.53163 0.23001,0.94602 -0.19992,0.73652 -0.95518,0.94345 -1.61301,1.09599 -0.29765,0.37077 -0.46954,0.95855 -1.09102,0.82505 -0.62121,-0.13576 -0.55149,0.69956 -0.63726,1.10745 -0.14703,1.11025 -0.78846,2.07553 -1.01309,3.15158 0.10274,1.17454 0.12418,2.39915 -0.33562,3.51579 -0.18774,0.49318 -0.25445,1.01802 -0.366,1.53113 -0.70048,0.17184 -1.44843,0.41816 -1.73199,1.15588 -0.73858,0.89838 -0.73256,2.08791 -0.90101,3.18112 -0.30932,0.53433 -1.1013,-0.17859 -1.33885,0.4066 -0.12597,0.84217 -0.28129,1.68886 -0.38184,2.53557 l -0.0743,-0.009 c -0.0398,-0.001 -0.1724,-0.002 -0.38572,-0.002 -0.17348,1e-4 0.41935,-1.44953 0.14574,-1.44875 -0.32498,9.2e-4 -0.71099,-0.98583 -1.11001,-1.09094 -0.18223,-0.048 -0.50842,0.0239 -0.52322,-0.17014 -0.0483,-0.63266 -0.0819,-1.20342 -0.22333,-1.70066 -0.0642,-0.22569 0.3907,-1.30465 0.30874,-1.5041 -0.29012,-0.0289 -0.86836,-0.0754 -1.32394,-0.0742 -0.0734,2.1e-4 0.0236,0.25068 -0.0609,0.61262 -0.29725,0.0805 -0.81821,-0.087 -1.24121,0.026 -0.32245,0.0862 0.54505,0.2116 0.56162,0.58592 0.0173,0.39004 0.0216,0.16404 -0.002,0.86822 -0.0122,0.35967 0.44742,0.33202 0.23176,0.51808 -0.18231,0.15728 -0.71304,0.45695 -1.14516,0.97477 -0.0953,0.1142 -0.09,0.31007 -0.18334,0.42968 -0.56833,0.72839 -1.17883,1.41556 -1.36969,1.43156 -0.5088,0.0427 -0.76009,0.10416 -0.98627,-0.016 -0.38276,-0.20342 -0.5329,-0.32739 -0.831,-0.60271 -0.35068,-0.32386 -0.78294,-0.58463 -1.12635,-0.56459 -0.30715,0.0179 -0.53384,0.27454 -0.86502,0.46544 -0.0117,0.14997 -0.01,0.34936 -0.10522,0.67971 -0.36301,0.0842 -0.89517,-0.0799 -1.2067,0.22271 l -0.008,-0.0351 c -0.19272,0.34582 -0.42473,0.52167 -0.46637,0.6608 -0.8631,0.0426 -0.89927,0.0544 -1.62199,0.003 -0.17481,0.0661 -0.17708,-0.27169 -0.33717,-0.53137 l 0.009,-0.003 c -0.66753,0.0367 -1.33344,-0.0518 -1.90998,-0.025 -0.28033,0.013 -0.46827,0.27398 -0.72813,0.28519 -0.26849,0.0116 -0.71807,-0.005 -0.81968,-0.21817 -0.0808,-0.16952 -0.83211,-1.37027 -1.08214,-1.78667 -0.73691,-0.0842 -1.34025,0.24748 -1.77864,0.25079 -0.21862,0.002 -0.14829,0.3863 -0.24902,0.65914 -0.0947,0.25658 -0.38184,0.41021 -0.53656,0.44032 l 0.002,0.0116 c -0.33059,-0.0611 -1.06025,0.17939 -1.56156,0.26259 -0.52441,0.087 -0.81356,0.0182 -0.81335,0.004 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Soudan: region d'Abiye (taille)\"\n\t\t\t\t\t\t\t\td=\"m 462.60403,178.67948 c -0.001,-0.0352 -0.13727,-0.14362 -0.18915,-0.3546 -0.0626,-0.2546 -0.0397,-0.6311 0.002,-0.84964 0.61767,-0.013 2.02227,-0.0175 2.59021,0.004 -0.01,0.42543 0.0691,0.95025 -0.0129,1.0974\"\n\t\t\t\t\t\t\t\tclassName=\"carved-out\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g id=\"Soudan du Sud\">\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Soudan du Sud (contour)\"\n\t\t\t\t\t\t\t\td=\"m 476.11401,191.13901 c -0.42839,0.42161 -1.06975,1.08971 -1.7052,0.77348 -0.72187,-0.45655 -1.57818,0.0961 -2.30653,0.27018 -0.95179,0.22919 -1.87163,-0.47242 -2.80395,-0.0774 -0.53639,0.4874 -0.82545,-0.36485 -1.22199,-0.63494 -0.54546,-0.52345 -1.06221,-1.13469 -1.72035,-1.5023 -0.45024,0.0639 -0.60854,1.15167 -1.04989,0.65827 -0.31694,-0.47708 -0.90996,-0.64202 -1.30895,-0.15672 -0.35071,0.51261 -0.99238,0.31437 -1.3312,-0.11154 -0.48001,-0.48815 -0.86489,-1.06357 -1.40496,-1.50301 -0.40026,-0.41583 0.18178,-1.10916 -0.38306,-1.45546 -0.43963,-0.64868 -1.48058,-0.26051 -1.79838,-1.04803 -0.20733,-0.47052 -0.0314,-1.18208 -0.63856,-1.43852 -0.62754,-0.45702 -1.53223,-0.73633 -1.817,-1.51199 0.39793,-0.5646 -0.26539,-0.95767 -0.76695,-1.04428 -0.69991,-0.20442 -1.48842,-0.54668 -1.73003,-1.29971 -0.39995,-0.37609 -1.15423,0.19453 -1.43902,-0.317 -0.14951,-0.74933 0.32531,-1.43831 0.36516,-2.15317 l 0.0474,0.003 c -2.1e-4,0.0138 0.28894,0.0827 0.81335,-0.004 0.50131,-0.0832 1.23097,-0.32367 1.56156,-0.26259 l -0.002,-0.0116 c 0.15472,-0.0301 0.44184,-0.18374 0.53656,-0.44032 0.10073,-0.27284 0.0304,-0.65749 0.24902,-0.65914 0.43839,-0.003 1.04173,-0.33499 1.77864,-0.25079 0.25003,0.4164 1.0013,1.61715 1.08214,1.78667 0.10161,0.21307 0.55119,0.22974 0.81968,0.21817 0.25986,-0.0112 0.4478,-0.27215 0.72813,-0.28519 0.57654,-0.0268 1.24245,0.0618 1.90998,0.025 l -0.009,0.003 c 0.16009,0.25968 0.16236,0.59747 0.33717,0.53137 0.72272,0.0514 0.75889,0.0397 1.62199,-0.003 0.0416,-0.13913 0.27365,-0.31498 0.46637,-0.6608 l 0.008,0.0351 c 0.31153,-0.3026 0.84369,-0.13849 1.2067,-0.22271 0.0952,-0.33035 0.0935,-0.52974 0.10522,-0.67971 0.33118,-0.1909 0.55787,-0.44751 0.86502,-0.46544 0.34341,-0.02 0.77567,0.24073 1.12635,0.56459 0.2981,0.27532 0.44824,0.39929 0.831,0.60271 0.22618,0.12021 0.47747,0.0587 0.98627,0.016 0.19086,-0.016 0.80136,-0.70317 1.36969,-1.43156 0.0933,-0.11961 0.088,-0.31548 0.18334,-0.42968 0.43212,-0.51782 0.96285,-0.81749 1.14516,-0.97477 0.21566,-0.18606 -0.24391,-0.15841 -0.23176,-0.51808 0.0238,-0.70418 0.0195,-0.47818 0.002,-0.86822 -0.0166,-0.37432 -0.88407,-0.49971 -0.56162,-0.58592 0.423,-0.11308 0.94396,0.0545 1.24121,-0.026 0.0845,-0.36194 -0.0125,-0.61241 0.0609,-0.61262 0.45558,-0.001 1.03382,0.0452 1.32394,0.0742 0.082,0.19945 -0.37294,1.27841 -0.30874,1.5041 0.14144,0.49724 0.17507,1.068 0.22333,1.70066 0.0148,0.19404 0.34099,0.12213 0.52322,0.17014 0.39902,0.10511 0.78503,1.09186 1.11001,1.09094 0.27361,-7.8e-4 -0.31922,1.44885 -0.14574,1.44875 0.21332,-2.2e-4 0.34597,3.6e-4 0.38572,0.002 l 0.0743,0.009 c -0.0376,0.31696 -0.0676,0.63392 -0.0855,0.95064 l 0,0 c -0.0348,0.48715 -0.0224,1.16132 -0.3597,1.51072 -0.52724,0.46676 -1.24111,-0.0596 -1.85614,0.0995 -0.0155,0.44291 -0.47446,1.12974 -0.0614,1.4329 0.64229,0.17303 1.44509,0.10545 1.81296,0.77997 0.65314,0.82608 1.59963,1.41954 1.95852,2.44973 0.44722,0.80536 0.72349,1.97854 1.80598,2.10829 0.50078,0.27296 0.42114,0.98653 0.42093,1.48313 -0.23712,0.2496 -1.00206,0.0931 -1.44187,0.24611 -0.55177,0.0988 -1.18817,-0.0826 -1.69019,0.0362 -0.30832,0.34768 -0.61912,0.70534 -0.90792,1.06264 z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tid=\"Soudan du Sud: Parc national de Radom (taille)\"\n\t\t\t\t\t\t\t\td=\"m 455.47543,178.32256 c 0.26028,0.0481 0.0123,0.54953 -0.0135,0.63563 -0.0276,0.0922 -0.19236,0.13009 -0.21902,0.23013 -0.0267,0.10033 -0.052,0.20275 -0.0736,0.30347 -0.0841,0.39214 -0.0662,0.78295 -0.0999,0.80793 -0.17481,0.0661 -0.75156,0.41671 -0.91166,0.50883\"\n\t\t\t\t\t\t\t\tclassName=\"carved-out\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Mali\"\n\t\t\t\t\t\t\td=\"m 389.76501,144.543 c 4.0314,2.49298 7.79874,5.40598 11.90169,7.79284 0.4884,0.36233 1.15736,0.52811 1.50731,1.04116 -0.34764,0.59683 0.40722,0.79041 0.70346,1.16243 0.39174,0.27162 0.80007,1.10724 1.31105,0.56515 0.43198,-0.26055 0.6866,0.69923 1.22627,0.61526 0.58121,-0.0867 1.31848,0.13403 1.31143,0.83333 0.0593,0.40762 -0.36954,1.31959 0.19242,1.38308 0.66713,-0.12508 1.33425,-0.25016 2.00137,-0.37525 0.0729,2.02003 0.26799,4.07993 -0.15523,6.07291 -0.2736,0.92042 -0.67931,1.96126 -1.62977,2.3561 -1.51446,0.0804 -3.05891,0.024 -4.55002,0.28099 -0.50981,0.4322 -1.12115,0.85221 -1.819,0.64601 -0.81748,-0.11205 -1.65814,-0.2409 -2.44615,-0.42081 -0.84857,0.24595 -1.54302,0.8888 -2.38269,1.19433 -0.61263,0.0839 -0.3668,1.14508 -0.9504,1.02733 -0.42541,-0.25325 -1.03462,-0.61794 -1.37661,-0.0421 -0.69164,0.54277 -0.98542,1.38306 -1.44315,2.0923 -0.51772,0.27753 -0.93695,-0.22611 -1.294,-0.543 -0.85659,0.13531 -0.81709,1.1826 -1.07273,1.83016 -0.11356,0.62837 -0.34761,1.30387 -1.03824,1.48289 -0.47245,0.17038 -1.13089,0.21783 -0.87773,0.90486 0.0133,0.89399 -0.19609,1.89131 -0.66829,2.62709 -0.35917,0.14988 -0.88124,0.81965 -1.20855,0.40692 -0.23529,-0.34854 -0.0631,-1.26715 -0.73983,-0.94143 -0.56725,0.28318 -0.81714,0.919 -1.36161,1.21751 -0.37043,-0.34928 -0.9972,-1.0569 -1.49652,-0.57025 -0.42198,0.79807 -0.66476,-0.0788 -0.95749,-0.48876 -0.0983,-0.86129 -0.2851,-1.78356 -1.017,-2.339 -0.35857,-0.49516 -0.47651,-1.13298 -0.61651,-1.68885 -0.37103,-0.58656 -1.0388,0.0248 -1.37469,0.35526 -0.37217,0.53261 -0.99126,0.30882 -1.47081,0.0686 -0.55198,-0.25966 -0.77916,0.74073 -1.22429,0.56424 -0.60299,-0.23417 -1.0177,-0.80089 -1.55171,-1.11223 0.13094,-0.50752 0.0645,-1.1165 -0.0709,-1.60985 -0.30533,-0.47698 -1.02911,-0.54615 -1.1305,-1.18986 -0.12658,-0.71714 -0.4779,-1.44688 -0.37259,-2.1773 0.38892,-0.34459 1.01626,-0.59212 0.85381,-1.21586 0.006,-0.55396 0.51534,-1.21165 1.09821,-0.84414 0.33688,0.4381 0.56704,1.12694 1.23599,1.08001 0.086,-0.53248 0.0377,-0.97806 0.73426,-0.63624 0.78076,0.22139 1.60332,0.23332 2.33264,-0.16069 2.50953,-0.13471 5.05019,-0.0395 7.57175,-0.0746 0.6052,0.0649 1.16193,0.0686 1.11094,-0.69341 0.18823,-0.55391 0.31731,-1.09229 -0.26481,-1.44417 -0.47758,-0.42184 -0.26363,-1.16492 -0.42878,-1.7319 -0.41511,-4.91236 -1.09632,-9.79725 -1.61985,-14.69892 -0.0859,-0.79327 -0.20052,-1.584 -0.23214,-2.38207 1.24113,-0.0961 2.54944,0.0633 3.75,-0.22 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Lybie\"\n\t\t\t\t\t\t\td=\"m 456.02802,151.46001 c -0.0702,1.38315 0.0636,2.79316 -0.0289,4.15989 -0.40453,0.21529 -1.05952,0.0132 -1.55749,0.0727 -0.78021,-0.26615 -0.57344,0.54105 -0.6394,1.05235 -0.37033,-0.021 -0.98019,-0.45382 -1.44261,-0.63316 -4.11749,-2.07478 -8.26002,-4.09806 -12.41795,-6.09049 -1.29124,-0.63044 -2.58248,-1.26088 -3.87372,-1.89132 -1.0209,0.19311 -1.90838,0.83389 -2.86881,1.22454 -0.4813,0.0706 -0.98704,0.83273 -1.39156,0.36265 -0.63336,-0.51395 -1.27207,-1.02939 -2.09562,-1.18376 -0.86996,-0.27721 -1.79114,-0.44776 -2.656,-0.67543 -0.39391,-0.54571 -0.57173,-1.30868 -1.12218,-1.70241 -0.71092,-0.17539 -1.47882,-0.7128 -2.18983,-0.28259 -0.62503,-0.43274 -0.8955,-1.22318 -1.05499,-1.944 -0.42401,-0.56733 -0.84801,-1.13466 -1.27201,-1.70199 0.22648,-0.5984 1.30227,-0.61264 1.18553,-1.40492 0.14505,-0.68989 -0.70463,-1.28671 -0.27052,-1.9611 0.31168,-0.67349 -0.0629,-1.37977 0.14091,-2.07605 0.0442,-0.92348 -0.15377,-1.85171 -0.69351,-2.61483 -0.38884,-0.42629 -0.43313,-0.99266 0.15209,-1.25753 0.55207,-0.38895 1.37731,-0.73833 1.28744,-1.54211 -0.14377,-0.48623 -0.46733,-1.17097 0.15731,-1.45875 0.78385,-0.66759 1.64453,-1.21813 2.57277,-1.66273 0.17317,-0.51792 -0.0501,-1.08755 0.10447,-1.62906 0.13929,-0.38647 0.9364,0.31655 1.33246,0.35533 0.79313,0.35315 1.6535,0.47263 2.50005,0.24274 0.74348,0.0351 1.5207,0.11267 2.22606,0.30465 0.49112,0.53116 1.23387,0.64047 1.90094,0.6917 0.70294,0.29689 0.50217,1.24625 1.05175,1.7092 0.47988,0.60536 1.19854,0.88598 1.95739,0.9237 1.55922,0.0528 3.10526,0.49823 4.37454,1.42386 0.66345,0.3931 1.41848,1.0134 2.20344,0.53854 0.70648,-0.37708 1.62276,-0.89344 1.6859,-1.76865 -0.48178,-0.77653 -0.57709,-1.95779 0.29368,-2.4986 0.90085,-0.73741 2.06856,-1.04776 3.16732,-1.3784 1.02123,0.0142 2.13956,0.0785 2.965,0.742 -0.12896,0.63947 0.44857,0.85845 0.97732,0.8216 0.71529,-0.002 1.29119,0.53227 2.02109,0.42269 0.50212,0.0454 1.4278,-0.16037 1.38959,0.6097 0.72594,0.46069 -0.4476,0.65162 -0.37838,1.15766 0.1069,0.57618 0.5427,1.19297 0.0547,1.69912 -0.62402,0.7281 -0.15166,1.70951 0.16358,2.46854 0.25519,0.9211 0.029,1.91694 0.0966,2.86741 -0.0342,3.45138 -0.0389,6.90294 -0.005,10.35383 -0.0217,1.04879 0.0112,2.1164 -0.003,3.15346 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Sahara occidental\"\n\t\t\t\t\t\t\td=\"m 362.76401,152.72301 c -0.002,-0.9358 0.58334,-1.6965 1.21907,-2.32217 0.68137,-0.88034 0.98139,-2.00356 1.50093,-2.98594 0.41099,-1.03238 1.77283,-1.34272 2.16591,-2.37861 -0.009,-1.15391 0.3955,-2.33917 1.20496,-3.16517 0.68788,-0.51148 1.68878,-0.75882 1.93947,-1.69662 0.25793,-0.41156 0.34196,-1.1669 0.79928,-1.30585 3.26036,-0.0791 6.52237,-0.0104 9.78338,-0.0406 0.0281,1.14758 0.0393,2.31144 -0.0461,3.44987 -0.16036,0.47669 -0.98208,0.0851 -1.4185,0.2102 -1.88078,0.0307 -3.77135,-0.0907 -5.64575,0.0394 -0.31177,0.29387 -0.10659,1.03534 -0.19387,1.50137 -0.0359,1.29507 -0.0904,2.58949 -0.13876,3.88412 -0.81459,0.50453 -2.01986,0.58165 -2.50299,1.54001 -0.0498,1.12098 0.21487,2.22611 0.20499,3.34799 -2.95244,0.005 -5.91633,-0.0285 -8.87198,-0.078 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Mauritanie\"\n\t\t\t\t\t\t\td=\"m 374.125,167.166 c -1.13898,-0.70111 -2.36311,-1.47222 -2.82314,-2.80375 -0.23873,-0.74317 -1.16799,-0.39506 -1.669,-0.82819 -0.53409,-0.41804 -1.09979,-0.89651 -1.83467,-0.81763 -1.0695,0.094 -2.18672,0.15214 -3.22267,0.36396 -0.63684,0.75462 -0.44163,-0.19544 -0.1818,-0.62964 0.69618,-1.44998 0.93594,-3.26316 0.15033,-4.72093 -0.53131,-0.44665 -0.58239,-0.7703 -0.15988,-1.2884 0.14517,-0.79034 0.25954,-1.81332 -0.50503,-2.34146 -0.31202,-0.63678 -0.93125,-0.49235 -1.14703,-0.19753 -0.0145,-0.3894 -0.22139,-1.33177 0.39116,-1.17169 2.83705,0.0338 5.68045,0.0759 8.51372,0.0673 0.0402,-1.14207 -0.32914,-2.30466 -0.15656,-3.42249 0.50123,-0.90328 1.66548,-0.96901 2.45457,-1.46551 0.0913,-1.7891 0.0935,-3.58336 0.216,-5.37001 1.80524,-0.16365 3.63041,-0.0173 5.44368,-0.0561 0.55947,0.003 1.119,-3e-5 1.67833,0.0151 0.21121,-0.90886 0.0615,-1.86784 0.13199,-2.79799 2.85595,1.49044 5.65148,3.09973 8.36301,4.83899 -1.22263,0.28346 -2.50593,0.1221 -3.754,0.21901 0.3908,4.31253 0.98256,8.60633 1.43957,12.9126 0.26443,1.87224 0.32623,3.76533 0.59842,5.6364 0.31043,0.40654 0.96111,0.72385 0.60206,1.30596 -0.17515,0.47615 -0.0443,1.33789 -0.79015,1.09486 -2.6517,0.0298 -5.31787,-0.0484 -7.9604,0.0656 -0.70632,0.36745 -1.4976,0.41757 -2.25701,0.19002 -0.59703,-0.24545 -0.87449,-0.13323 -0.79518,0.5127 -0.37704,0.31194 -0.88469,-0.28951 -1.06057,-0.65938 -0.22189,-0.69173 -1.22247,-0.42605 -1.24249,0.23897 -0.18176,0.42077 0.10028,0.86956 -0.42326,1.1093 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Burkina Faso\"\n\t\t\t\t\t\t\td=\"m 400.72,175.49899 c -0.55722,-0.23083 -1.06818,-0.0789 -1.56034,0.22646 -0.93511,0.20659 -1.94771,-0.0102 -2.91184,0.0461 -0.64193,0.087 -1.37118,-0.13869 -1.94582,0.18941 -0.27,0.66665 0.10431,1.40388 0.11264,2.10102 0.26776,0.76772 -0.3446,0.83787 -0.77765,0.31898 -0.87874,-0.33506 -1.84949,-0.0533 -2.63659,0.378 -0.75807,0.16565 -1.51905,-0.55606 -1.67441,-1.27099 -0.17999,-0.46691 -1.21798,-0.0319 -1.00686,-0.54523 0.42467,-0.9051 0.66729,-1.9393 0.52886,-2.94177 0.22236,-0.45954 0.93834,-0.30409 1.323,-0.66707 0.66102,-0.51838 0.58181,-1.48882 0.89893,-2.2166 0.0263,-0.40432 0.52261,-1.11615 0.92933,-0.76834 0.32197,0.32949 0.90823,0.7694 1.27386,0.27896 0.41994,-0.85029 0.91072,-1.77605 1.75547,-2.26182 0.41899,-0.13728 0.90434,0.57661 1.25413,0.29625 0.12729,-0.53488 0.43396,-0.97772 0.98523,-1.13181 0.75089,-0.27279 1.34856,-0.90264 2.13706,-1.05058 0.56622,0.22278 1.18644,0.2338 1.77801,0.35701 -0.27046,0.60469 -0.17579,1.24189 0.17899,1.78799 0.2699,0.8265 1.41902,0.98577 1.60003,1.82606 -0.55559,0.43004 -0.14348,0.86729 0.34231,1.13725 0.41109,0.4433 0.99372,0.53717 1.56195,0.46854 0.55014,-0.0261 0.65549,0.76934 0.92345,1.15151 0.13133,0.5331 -0.21247,1.16265 -0.66117,1.46936 -0.52213,0.30276 -1.23401,-0.24616 -1.71115,0.26459 -0.36515,0.26939 -0.54716,0.99684 -1.04935,0.89138 -0.53701,-0.16927 -1.10137,-0.24499 -1.64807,-0.3347 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Niger\"\n\t\t\t\t\t\t\td=\"m 405.733,173.03999 c -0.3104,-0.4251 -0.42454,-1.17541 -1.10056,-0.99467 -0.78432,0.1824 -1.40236,-0.5108 -1.92545,-0.97465 0.0347,-0.37887 0.54248,-0.92485 -0.14042,-1.23671 -0.63593,-0.43613 -1.21664,-0.96688 -1.44157,-1.73397 -0.18069,-0.35142 -0.1751,-1.33754 0.325,-1.22718 0.65828,0.15886 1.35248,0.10737 1.85697,-0.38982 0.62765,-0.52925 1.53939,-0.25767 2.29603,-0.40799 0.89344,-0.0742 1.8273,0.0274 2.69534,-0.15722 1.03325,-0.60446 1.41714,-1.86319 1.5936,-2.98212 0.24064,-1.7792 0.1026,-3.58716 0.0291,-5.37466 1.18158,-0.25297 2.41313,-0.40864 3.55975,-0.74248 1.78839,-1.47842 3.46229,-3.12098 5.50411,-4.25641 2.63475,-1.65924 5.40154,-3.10405 8.12333,-4.60525 1.18829,0.0739 2.38146,0.5212 3.53281,0.87914 0.49566,0.34756 0.96569,0.73001 1.45001,1.093 0.54452,-0.36279 1.17153,-0.58223 1.75,-0.886 0.23657,1.19538 0.36053,2.42098 0.6002,3.60749 0.29372,0.90251 0.8314,1.71586 1.60979,2.26951 -0.81809,1.36965 -0.87287,3.03861 -0.90628,4.59153 -0.13672,1.02354 0.062,2.12465 -0.20821,3.10553 -1.32158,1.44282 -2.76567,2.79839 -3.73748,4.5184 -0.30817,0.4962 -0.83607,0.9108 -0.67143,1.55846 -0.0167,0.40804 0.45642,1.25805 -0.30755,1.05996 -0.94699,-0.10577 -1.5611,0.76567 -2.24473,1.23354 -0.66882,-0.0332 -1.33828,-0.38272 -2.02249,-0.49171 -1.06171,-0.24731 -2.30067,-0.14128 -3.2158,0.47323 -0.49769,0.46157 -1.12265,0.73338 -1.8088,0.62087 -0.93337,8.7e-4 -1.67305,-0.61691 -2.44774,-1.03809 -0.88704,-0.22915 -1.64471,0.7661 -2.52192,0.56156 -0.65947,-0.4219 -0.95123,-1.37653 -1.81288,-1.48211 -1.19339,-0.33223 -2.47833,-0.14997 -3.65714,0.14207 -0.59195,0.18628 -0.78754,0.7198 -0.98231,1.25403 -0.16466,0.66191 -0.76555,1.1042 -0.77101,1.80818 -0.17825,0.38808 0.1264,1.55441 -0.52422,0.98219 -0.63542,-0.24529 -1.08743,-0.89113 -1.66663,-1.13594 -0.29841,0.0399 -0.55137,0.22877 -0.81137,0.35829 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Tchad\"\n\t\t\t\t\t\t\td=\"m 431.763,171.063 c -0.38504,-0.56578 -1.19765,-0.88778 -1.12799,-1.67757 -0.11898,-0.61844 -0.27144,-1.34551 0.26252,-1.81406 0.82769,-1.26105 1.65703,-2.52802 2.75857,-3.57349 0.43132,-0.51893 1.00433,-0.97213 1.35151,-1.53009 0.21871,-2.29933 -0.0831,-4.68397 0.69744,-6.90006 0.52103,-0.52486 0.19951,-0.89296 -0.32798,-1.22274 -0.75951,-0.877 -1.11582,-2.00658 -1.17208,-3.15299 -0.12133,-0.715 -0.24266,-1.43 -0.36399,-2.145 0.74748,-0.28966 1.42432,-0.81437 2.228,-0.917 5.32573,2.61985 10.69955,5.14069 15.98872,7.83454 0.58043,0.28215 1.16086,0.56431 1.74129,0.84646 -0.0518,1.73982 -0.0777,3.47687 0.008,5.21574 -0.098,1.05645 0.0985,2.12108 -0.007,3.17426 -0.71516,0.007 -1.4676,-0.0464 -2.15934,0.0881 -0.46861,0.41532 -0.34249,1.25136 -0.83037,1.70135 -0.42985,0.41751 -0.52126,1.01382 -0.31427,1.56359 -0.18149,0.45737 -1.24417,0.49101 -0.79767,1.11682 0.47384,0.4948 -0.0331,1.00079 -0.40533,1.35678 -0.40142,0.37255 -0.34928,1.19848 0.33693,0.89085 0.72038,-0.20101 0.59571,0.73962 0.73117,1.18543 0.0713,0.58075 0.26529,1.1615 0.78389,1.49011 0.29945,0.30191 0.43359,1.0617 0.0587,1.22602 -0.64804,-0.42032 -1.33697,-0.0388 -1.86271,0.38268 -0.54926,0.19752 -0.783,0.6845 -0.78747,1.22044 -0.8362,0.91438 -1.87756,1.64416 -2.79453,2.48587 -0.99579,0.25329 -2.10104,-0.0397 -3.06536,0.26227 -0.34816,0.3712 -0.11557,1.02327 -0.51831,1.41097 -0.21272,0.4227 -0.4312,0.98387 -1.01533,0.88276 -1.06728,-0.15447 -2.03279,0.39685 -2.91901,0.921 -0.62584,0.32082 -0.67633,-0.94847 -1.18108,-0.58017 -0.59656,0.23139 -1.15011,0.75119 -1.81391,0.69718 -0.6018,-0.434 -0.51224,-1.3174 -1.00452,-1.8582 -0.4982,-0.96279 -1.54519,-1.45897 -2.23342,-2.27471 -0.57928,-0.31212 -0.53853,-0.77298 -0.0731,-1.17625 0.4351,-0.55438 1.18745,-0.0427 1.76722,-0.0587 0.31049,0.0479 1.37833,0.17765 1.09927,-0.31528 -0.70598,-0.7758 -0.95168,-1.92049 -0.82881,-2.93397 0.1779,-1.0849 -0.20119,-2.21091 -0.92962,-3.03098 -0.2521,-0.5115 -0.69117,-0.79451 -1.2658,-0.78645 l -0.0142,-0.002 -0.001,-0.003 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Corne\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Erythree\"\n\t\t\t\t\t\t\td=\"m 494.64001,172.627 c -0.49462,-0.23199 -0.59219,-0.93579 -1.212,-0.95799 -0.23389,-0.49189 -0.39614,-1.04785 -0.9644,-1.24068 -0.52183,-0.23153 -0.87237,-0.60137 -1.07945,-1.11916 -0.33758,-0.49139 -0.82059,-0.67449 -1.35411,-0.82454 -0.39853,-0.46142 -0.9645,-0.35847 -1.4017,-0.50529 -0.45849,-0.17909 -0.85114,-0.0883 -1.37835,0.0477 -0.234,-0.81234 -0.56268,0.1341 -1.13623,0.0255 -0.6407,0.34711 -0.77987,-0.57477 -1.31876,-0.54146 -0.51307,-0.71316 -0.63845,0.34101 -0.91282,0.71597 -0.2503,0.92055 -0.50074,0.35921 -0.75118,-0.24098 -0.584,-0.0246 -0.71186,0.63115 -1.32449,0.37575 -0.36273,-0.1211 -0.0592,-1.02206 -0.24058,-1.45426 0.0319,-1.08038 0.79723,-1.98678 0.94142,-3.059 0.17095,-0.45473 0.0417,-1.1463 0.4314,-1.4375 0.52299,0.0501 1.11521,-0.0817 1.21749,-0.68175 0.49952,-0.42282 1.46529,-0.29038 1.67801,-1.07702 0.20954,-0.47899 0.79796,-1.00605 0.85133,-0.15181 0.68803,1.76007 0.98784,3.66705 1.81136,5.36625 0.21988,0.57182 0.89617,0.90663 0.65101,0.038 0.19471,-0.62234 0.64053,0.49015 0.85898,0.72803 0.24791,0.62712 0.96089,0.02 1.29053,0.4867 0.73907,0.65925 1.40049,1.3976 2.07854,2.11258 0.65865,-0.12983 0.96973,0.3523 1.27026,0.85301 -0.002,0.5146 0.20468,0.84478 0.73917,0.96918 0.22407,0.37529 1.16341,0.67309 0.62595,1.12241 -0.22323,0.77268 -0.66585,0.32912 -1.18481,0.29419 -0.0617,0.0418 -0.18527,0.0686 -0.18657,0.15622 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Djibouti\"\n\t\t\t\t\t\t\td=\"m 495.97299,175.881 c -0.62419,-0.3662 -1.29741,-0.17121 -1.93588,0.024 -0.68254,0.29625 -0.43455,-0.69585 -0.61411,-1.096 -0.0348,-0.8283 0.80193,-1.29599 1.10358,-2.00668 0.18194,-0.66414 0.86119,-0.10608 1.1583,-0.13987 0.29008,-0.46759 0.58173,-1.11589 1.00491,-0.37196 0.31495,0.27142 0.81746,0.98871 0.142,1.14907 -0.63928,0.14448 -1.21194,0.48633 -1.68778,0.94243 0.49978,0.28452 1.12903,-0.10573 1.65299,0.206 -0.19495,0.47289 -0.6138,0.82465 -0.82401,1.293 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Ethiopie\"\n\t\t\t\t\t\t\td=\"m 495.97299,175.881 c -0.25861,0.48037 -0.53264,1.04788 -0.10061,1.5228 0.63499,1.06236 1.4056,2.13749 2.4807,2.77773 1.85112,0.79616 3.80785,1.33364 5.7082,2.00535 0.85856,0.42878 1.8109,0.2241 2.73071,0.23911 0.53297,0.28496 -0.53263,0.74768 -0.69286,1.10971 -1.87034,1.92473 -3.76133,3.83108 -5.53312,5.8483 -1.4003,0.1037 -3.02228,-0.40786 -4.19528,0.60001 -0.43469,0.32857 -0.61757,1.02596 -1.27272,0.93006 -0.58004,0.0457 -1.29208,-0.0512 -1.60865,0.56086 -0.41447,0.19982 -1.07139,0.0343 -1.53318,-0.12381 -0.42564,-0.24971 -0.86194,-0.70254 -1.35265,-0.27861 -0.80757,0.2697 -1.47883,0.78229 -2.00352,1.44649 -0.44268,0.24187 -1.04235,-0.024 -1.51929,-0.12757 -0.85619,-0.20818 -1.84893,0.018 -2.53676,-0.65434 -1.12695,-0.73088 -2.2445,-1.62029 -3.65078,-1.66315 -0.76185,0.0813 -0.78386,-0.34262 -0.76787,-0.97133 0.10246,-0.64914 -0.50559,-0.81351 -0.96627,-1.00276 -0.8075,-0.50658 -0.9486,-1.56701 -1.45424,-2.32256 -0.44131,-0.89009 -1.35292,-1.43281 -1.93017,-2.23638 -0.40806,-0.61065 -1.3492,-0.24972 -1.79962,-0.7209 0.13357,-0.40799 -0.0317,-1.28027 0.50739,-1.29681 0.59172,0.007 1.2653,0.34528 1.74059,-0.1702 0.16986,-0.64275 0.22985,-1.28949 0.23141,-1.94432 0.17644,-1.01177 0.26443,-2.03607 0.46061,-3.04468 0.3645,-0.44567 1.14094,0.23901 1.33557,-0.4071 0.15856,-1.06727 0.17108,-2.22193 0.8914,-3.09622 0.28435,-0.73814 1.03065,-0.97956 1.73003,-1.15269 0.13598,-1.13809 0.70355,-2.17211 0.76099,-3.32199 0.63331,0.15815 0.84232,-0.23574 1.37258,-0.3753 0.40253,0.0771 0.50999,1.38384 0.79895,0.37354 0.2948,-0.30091 0.39388,-1.4941 0.87093,-0.96414 0.53771,-0.0153 0.68486,0.85585 1.26418,0.65362 0.54924,0.24647 1.0179,-0.80545 1.22293,-0.17874 0.37954,0.3037 0.95212,-0.26818 1.37065,0.0665 0.40443,0.22727 0.99183,-0.0418 1.37454,0.45005 0.46724,0.2886 1.06143,0.24772 1.36786,0.79413 0.33749,0.41414 0.4661,0.96524 1.0501,1.14115 0.55353,0.22298 0.85727,0.66936 1.04855,1.21632 0.46457,0.19268 0.78788,0.61938 1.15366,0.99728 0.12349,0.34388 -0.47693,0.89074 -0.70493,1.26916 -0.6572,0.55695 -0.29862,1.42979 -0.198,2.13947 0.77412,-0.0655 1.54576,-0.56266 2.29504,-0.10356 l 0.053,0.0186 0,-0.003 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Somalie\"\n\t\t\t\t\t\t\td=\"m 493.04401,204.258 c -0.39053,-0.62584 -0.91567,-1.20756 -1.22557,-1.85981 -0.0884,-2.78073 -0.11689,-5.56242 -0.0774,-8.34419 0.70797,-0.98702 1.2786,-2.08003 2.10199,-2.978 0.6939,-0.32763 1.79509,0.17365 2.15201,-0.72 0.75803,-0.99207 2.0836,-1.0972 3.23261,-0.98263 0.46648,-0.0641 1.08927,0.18587 1.45686,-0.12182 2.03028,-2.30279 4.21311,-4.4629 6.34355,-6.67155 -0.52745,-0.33456 -1.23318,-0.0454 -1.83495,-0.11989 -0.93883,-0.0858 -1.8215,-0.55571 -2.7329,-0.80817 -1.49025,-0.57263 -3.10247,-0.89058 -4.48962,-1.69102 -0.95169,-0.8473 -1.8295,-1.85636 -2.3129,-3.03807 -0.0594,-0.60286 0.41943,-1.16378 0.71044,-1.67855 0.30007,-0.57051 0.61783,-0.85969 0.9769,-0.13307 0.48165,0.61024 1.03222,1.17313 1.50902,1.77245 0.41899,0.13143 0.98693,-0.0217 1.46727,0.0387 0.99523,-0.15987 1.87516,-1.27267 2.9262,-0.71999 0.92755,0.53515 1.74614,-0.3629 2.47555,-0.82598 0.58016,-0.23845 1.26653,0.28997 1.84256,-0.12331 0.5306,-0.26386 1.09863,-0.47904 1.66576,-0.17482 0.94725,0.14706 1.93575,-0.19848 2.78048,-0.59894 0.45176,-0.26976 0.85647,-0.74947 1.31328,-0.92035 0.39569,0.11532 1.1189,0.21786 1.09939,0.70606 -0.3392,0.56271 -0.49358,1.19943 -0.26413,1.83653 0.15838,0.65048 -0.71272,1.01007 -0.52236,1.6801 0.0565,0.84872 -0.21115,1.64759 -0.69276,2.34053 -0.4218,0.75363 -0.77218,1.56302 -1.49914,2.07845 -0.44517,0.36142 0.0338,0.94315 -0.45776,1.32691 -0.4122,0.86594 -1.06549,1.61437 -1.45852,2.4738 -0.21028,1.30352 -1.14838,2.32466 -1.86965,3.38549 -1.2724,1.76903 -2.74822,3.38319 -4.26171,4.94345 -0.85637,0.7276 -1.65881,1.53525 -2.72195,1.95589 -2.2341,0.97394 -3.78211,2.92882 -5.47052,4.60633 -0.78938,0.85368 -1.47033,1.80429 -2.167,2.73451 0.0825,0.231 0.13885,0.40464 0.005,0.631 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Afrique guineene\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Gambie\"\n\t\t\t\t\t\t\td=\"m 364.01099,169.929 c 0.55466,0 1.10933,0 1.664,0 0.0969,-0.59644 0.71272,-0.40031 1.11502,-0.464 0.476,0.0904 0.61255,0.41845 1.14499,0.401 0.1124,0.67087 0.7597,0.11523 1.16101,0.093 0.68809,0.24205 0.14783,0.64086 -0.30902,0.64999 -0.48651,0.3919 -0.87232,-0.26986 -1.37015,-0.16745 -0.27576,-0.0818 -0.89785,-0.74053 -1.06624,-0.33085 -0.11457,0.53103 -0.876,0.19482 -1.29245,0.34431 0.081,0.63471 -0.7054,0.39239 -1.22114,0.42446 -0.71405,0.33599 -0.71346,-0.76252 -0.0838,-0.71477 0.14563,0.0226 0.28022,-0.093 0.25778,-0.23569 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Senegal\"\n\t\t\t\t\t\t\td=\"m 370.147,172.035 c -1.13274,0.017 -2.31395,-0.1268 -3.41673,0.0168 -0.48697,0.53126 -1.19724,0.54963 -1.86169,0.5034 -0.48201,-0.13958 -1.03729,0.41643 -1.38935,-0.0514 -0.29644,-0.45917 0.0343,-0.97022 -0.17028,-1.4733 0.14033,-0.36071 0.99692,-0.0444 1.41258,-0.14377 0.40384,-0.0818 0.3289,-0.66123 1.04167,-0.5032 0.65027,0.36676 0.52834,-0.87293 1.04615,-0.25868 0.43073,0.26 0.80577,0.2778 1.24024,0.48207 0.40445,0.33048 0.9292,-0.14569 1.34076,-0.17293 0.233,-0.51892 -0.64155,-0.58565 -0.89435,-0.25802 -0.53078,0.20124 -0.63421,-0.71884 -1.17017,-0.3635 -0.18295,-0.55958 -0.8014,-0.33548 -1.15266,-0.30232 -0.46984,0.0682 -0.62161,0.66581 -1.2948,0.41883 -0.69676,0.14802 -0.82549,-0.11652 -1.18903,-0.54191 -0.24734,-0.38568 -0.28792,-0.92641 -0.65417,-1.28821 -0.29514,-0.42089 -0.68172,-0.79258 -1.19417,-0.91788 1.15994,-0.65596 1.91847,-1.90931 2.21672,-3.17866 -0.0795,-0.55473 0.40657,-1.02233 0.94369,-1.01599 1.13397,-0.055 2.28694,-0.39485 3.41277,-0.19701 0.79013,0.17689 1.26182,1.07816 2.13868,1.04074 0.84824,0.008 0.81535,1.06115 1.31738,1.53286 0.54877,0.81785 1.46889,1.25397 2.25775,1.80205 -0.58017,0.24056 -0.65424,0.81438 -0.42462,1.34437 0.19094,0.77168 0.22642,1.80003 1.11852,2.10052 0.57953,0.38447 0.39122,1.18669 0.43611,1.78912 -0.32087,0.24768 -1.04347,0.10127 -1.52416,0.23072 -0.90201,0.20027 -1.66853,-0.43079 -2.50551,-0.57869 -0.36027,-0.005 -0.72185,-0.0149 -1.08133,-0.016 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Guinee Bisau\"\n\t\t\t\t\t\t\td=\"m 363.763,172.73199 c 0.92818,-0.42524 2.10885,0.18851 2.88563,-0.6179 0.49978,-0.26476 1.16507,-0.0548 1.72937,-0.11113 0.58933,0.011 1.17867,0.022 1.768,0.033 -0.12795,0.54605 -0.10974,1.09243 0.004,1.639 -0.31206,0.87517 -1.42559,0.23472 -1.952,0.84394 -0.42031,0.16015 -0.80026,0.98026 -1.10785,0.77406 -0.57763,0.0715 -1.01586,-0.48864 -0.54122,-0.94592 0.48449,-0.37473 0.53128,-0.81303 -0.20453,-0.75573 -0.5158,0.0496 -0.99116,0.33835 -1.46225,-0.0785 -0.45953,-0.30623 -0.50936,-0.68126 -1.11914,-0.78089 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Guinee\"\n\t\t\t\t\t\t\td=\"m 383.005,177.59599 c -0.39804,0.34818 -0.90674,1.0562 -0.35224,1.47374 0.37008,0.18449 1.10679,0.55052 0.63089,1.0194 -0.61178,0.40067 0.3058,0.79537 0.57374,1.12011 0.50214,0.58919 -0.58506,0.5131 -0.8804,0.22976 -0.725,-0.0547 -0.41485,0.74011 -0.0807,1.04024 0.11863,0.45381 -0.58591,0.70358 -0.77328,1.08176 -0.46631,-0.51623 -1.00087,-0.22226 -1.26968,0.31465 -0.26438,0.66982 -0.92545,0.24405 -1.20383,-0.17799 -0.18861,-0.42096 0.0596,-1.01598 -0.18029,-1.48361 -0.0299,-0.59052 -0.42932,-1.0642 -1.05376,-0.8405 -0.58461,-0.18856 -0.86591,1.18829 -1.02838,0.43806 -0.35502,-0.96263 -0.10941,-2.17243 -0.92468,-2.94902 -0.44162,-0.63341 -1.2096,-0.97657 -1.96702,-0.74178 -0.53454,0.20684 -1.28793,-0.21852 -1.59926,0.41119 -0.46346,0.67802 -1.03596,1.26779 -1.57208,1.88701 0.22217,-0.79454 -0.71332,-1.2276 -1.04141,-1.80433 0.0909,-0.67107 -0.56799,-0.72582 -1.02111,-0.9745 -0.39846,-0.32587 -1.33335,-0.54054 -1.01949,-1.20817 0.0983,-0.64897 -1.02125,-0.0713 -1.02143,-0.69231 -0.0433,-0.63936 0.7087,-0.92895 1.11442,-1.33569 0.54716,-0.42115 1.53294,0.0805 1.814,-0.73201 -0.11253,-0.54657 -0.12927,-1.09294 -0.004,-1.639 0.70725,-0.004 1.42009,-0.0366 2.05002,0.34099 0.96709,0.58129 2.09096,0.0173 3.108,0.19501 0.48495,0.44577 0.98019,0.90997 1.59799,1.16299 0.3562,-0.34759 0.76668,-0.93191 1.30989,-0.53774 0.48263,0.29141 1.03638,0.17023 1.34636,-0.30512 0.36044,-0.29985 0.97755,-0.78909 1.30085,-0.17073 0.0557,0.83961 0.47296,1.6253 1.08275,2.19351 0.51774,0.69325 0.25324,1.65532 0.83204,2.30958 0.0773,0.12486 0.15507,0.24949 0.23211,0.3745 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Sierra Leone\"\n\t\t\t\t\t\t\td=\"m 371.32401,180.41901 c 0.64027,-0.68352 1.22198,-1.42896 1.80515,-2.14994 0.45775,-0.21025 1.04567,0.002 1.55079,-0.17229 1.02725,-0.27613 1.87804,0.66805 2.24484,1.51226 0.35017,0.8108 0.14801,1.75125 0.59322,2.53296 -0.43591,0.95043 -1.43722,1.47045 -2.02624,2.32326 -0.35105,0.65776 -0.68611,0.15714 -1.09939,-0.15693 -0.30591,-0.38703 -1.28839,-0.32831 -1.04776,-0.95943 -0.10568,-0.46251 -0.86404,-0.43249 -1.15779,-0.83484 -0.28044,-0.24586 -1.09086,-0.78089 -0.81213,-1.05297 0.73362,-0.198 0.43235,-0.67299 -0.0747,-0.86909 0.059,1.9e-4 -0.0365,-0.175 0.024,-0.17299 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Liberia\"\n\t\t\t\t\t\t\td=\"m 377.51801,182.142 c 0.18136,-0.70017 1.17992,-1.03709 1.71452,-0.62899 0.28389,0.64217 0.44688,1.36405 0.31346,2.06399 0.26817,0.35657 0.89918,1.03444 1.22735,0.39618 0.29432,-0.42433 0.71823,-1.02882 1.23304,-0.48923 0.11429,0.3285 0.27724,0.9775 0.0256,1.38881 -0.24725,0.34418 -0.68641,1.00314 0.004,1.12242 0.5626,-0.003 1.02618,0.0527 1.33913,0.60028 0.39745,0.44396 1.07869,0.88975 0.76119,1.57284 -0.25267,0.72429 -0.37676,1.48083 -0.36818,2.2477 -1.32697,-0.56191 -2.6894,-1.12872 -3.86858,-1.95266 -0.95266,-1.03189 -2.00022,-2.01509 -3.31982,-2.5497 -0.53308,-0.29171 -1.03734,-0.62428 -1.48461,-1.03763 0.68898,-0.80148 1.47355,-1.54693 2.20074,-2.31297 0.0747,-0.1373 0.14429,-0.29402 0.22227,-0.42104 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Cote d'Ivoire\"\n\t\t\t\t\t\t\td=\"m 383.772,190.418 c -0.0703,-0.96241 0.31192,-1.85407 0.452,-2.785 -0.31439,-0.64098 -0.94667,-1.06601 -1.39499,-1.616 -0.41608,0.0364 -1.10776,0.11578 -1.20502,-0.431 0.3674,-0.55143 0.7429,-1.17916 0.44101,-1.853 0.0916,-0.5206 0.93405,-0.71496 0.84136,-1.24462 -0.30765,-0.29192 -0.68081,-1.05906 0.0359,-1.04356 0.29661,0.19234 1.33805,0.4387 0.96255,-0.19597 -0.24214,-0.32901 -1.2145,-0.71291 -0.65246,-1.11838 0.5275,-0.46126 -0.18994,-0.87637 -0.59148,-1.05634 -0.53902,-0.37914 -0.0981,-1.06424 0.2759,-1.40046 0.31632,-0.34942 0.76493,-0.96064 1.25536,-0.49935 0.43015,0.22575 0.78602,0.90873 1.17044,0.21301 0.33707,-0.38253 0.75034,-0.99587 1.32044,-0.88432 0.28932,0.28532 0.0514,1.26371 0.67887,1.08393 0.43084,-0.11645 0.7649,-0.72781 1.19996,-0.34643 0.63142,-0.19527 0.80764,0.43738 1.03486,0.84492 0.40508,0.59557 1.26993,0.9913 1.88125,0.44512 0.89373,-0.41413 2.04252,-0.44476 2.78905,0.28645 0.41111,0.42021 0.21602,1.15628 0.4273,1.69863 0.15227,0.64453 0.4363,1.33581 -0.0221,1.92492 -0.63355,0.88217 -0.82191,1.97539 -1.19222,2.97846 0.019,1.01348 0.66229,1.85727 0.93575,2.78498 0.2703,1.08528 -0.27148,-0.19952 -0.65671,0.33366 -0.36643,0.33197 -0.9745,-0.0541 -1.42109,-0.0767 -1.06412,-0.1124 -2.15965,-0.0587 -3.22111,0.0573 -1.68018,0.29605 -3.28245,0.98204 -4.76971,1.80203 -0.1626,0.14106 -0.38528,0.20561 -0.57514,0.0976 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Ghana\"\n\t\t\t\t\t\t\td=\"m 394.26599,178.814 c 0.41781,-0.37117 0.0161,-1.04816 0.0403,-1.54857 -0.0422,-0.48818 -0.36759,-1.36349 0.35453,-1.46416 1.44267,-0.0638 2.88338,0.003 4.32618,0.004 0.51074,-0.22352 1.00066,-0.61961 1.57261,-0.33887 0.3572,0.23213 -0.44225,1.06007 0.1616,1.42715 0.29624,0.48784 0.88155,0.98242 0.54029,1.58957 -0.13258,0.80267 0.22308,1.62569 0.46032,2.38205 0.34036,0.44771 0.66536,0.88058 0.12752,1.27183 -0.22038,0.7396 -0.0285,1.56787 -0.098,2.34307 -0.0903,0.95577 0.73507,1.6086 1.41764,2.12621 -0.27808,0.46179 -0.63938,0.94241 -1.25115,0.77126 -0.98269,-0.027 -1.8594,0.41725 -2.68986,0.89274 -1.11399,0.30948 -2.19804,0.73132 -3.163,1.377 -0.49005,-0.3625 -1.17055,-0.47749 -1.59701,-0.884 0.0408,-1.14872 -0.93602,-2.0207 -0.95996,-3.17052 0.0675,-0.83242 0.50866,-1.63008 0.73339,-2.44412 0.36538,-0.6218 0.951,-1.31051 0.58786,-2.06518 -0.23396,-0.70231 -0.21319,-1.50608 -0.44948,-2.17531 -0.0433,0.0526 -0.0718,-0.12651 -0.11381,-0.0939 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Togo\"\n\t\t\t\t\t\t\td=\"m 400.72,175.49899 c 0.65013,0.0668 1.2747,0.25575 1.914,0.37001 -0.006,0.53224 -0.44092,1.25197 0.21872,1.55479 0.53746,0.22854 0.77612,0.69281 0.83765,1.2504 0.25405,0.67386 0.48899,1.34335 0.41847,2.07176 -0.0687,1.39143 0.47542,2.8115 -0.0198,4.17005 -0.0327,0.40649 0.65006,1.2884 0.13525,1.29757 -0.51207,-0.12287 -0.97522,0.64094 -1.33261,0.17099 -0.71469,-0.48359 -1.28617,-1.2664 -1.14191,-2.16923 0.0909,-0.7429 -0.17932,-1.55492 0.17228,-2.23832 0.65449,-0.31648 -0.17525,-0.84418 -0.27497,-1.26997 -0.23639,-0.88866 -0.65272,-1.83341 -0.25204,-2.73805 -0.20331,-0.61575 -0.90654,-1.04832 -0.90191,-1.70522 0.076,-0.25458 0.14861,-0.5121 0.22692,-0.76478 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Benin\"\n\t\t\t\t\t\t\td=\"m 408.60001,174.03999 c -0.15151,0.79053 0.0408,1.59444 0.48999,2.25701 -0.31416,0.77375 -0.34591,1.82391 -1.25497,2.15793 -0.5732,0.31072 0.3066,1.32568 -0.44231,1.45871 -0.56891,-0.0188 -0.7617,0.54691 -0.66861,1.03905 0.0624,1.08035 -0.22721,2.15781 0.0589,3.22157 0.14227,0.59877 -0.097,1.20247 -0.057,1.80674 -0.74766,0.0324 -1.48585,0.17718 -2.23401,0.211 -0.25765,-0.62094 -0.53455,-1.31207 -0.21859,-1.964 0.12292,-1.20087 -0.21368,-2.38027 -0.1692,-3.58159 0.12171,-0.9688 -0.46808,-1.8096 -0.60421,-2.74842 -0.40225,-0.39318 -1.28571,-0.63798 -0.96892,-1.35778 -0.0195,-0.59531 0.31499,-0.91584 0.65209,-1.34167 0.34157,-0.61227 1.10793,-0.51563 1.69284,-0.40354 0.60705,-0.20151 0.95206,-0.88049 0.95912,-1.47368 -0.30505,-0.42798 0.74802,-0.83069 1.00237,-0.48658 0.53767,0.48213 1.11875,0.88334 1.76251,1.20525 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Nigeria\"\n\t\t\t\t\t\t\td=\"m 431.763,171.063 c -0.11495,0.53264 -0.011,1.16445 0.20318,1.63516 0.39315,0.21606 1.05466,0.18729 0.92977,0.84941 -0.0592,0.54348 0.0691,1.37982 -0.67452,1.46775 -0.5662,0.0502 -1.08727,0.32173 -1.24968,0.9035 -0.51289,0.9491 -0.96652,1.94252 -1.16374,3.00917 -0.51767,0.10284 -0.97455,0.21226 -0.89394,0.86592 -0.079,0.4613 0.0179,1.32597 -0.68107,1.23308 -0.82975,1.04167 -1.12566,2.40769 -1.73474,3.58263 -0.26766,0.51141 -0.6254,1.24277 -1.22915,1.31737 -0.48316,-0.34145 -0.6304,-1.29772 -1.3729,-1.15409 -0.52575,-0.0718 -1.07442,-0.0811 -1.37962,0.43212 -0.73447,0.76682 -1.58962,1.40708 -2.2986,2.19798 0.11829,0.79262 -0.09,1.55653 -0.54499,2.21201 -0.63242,-0.46041 -0.67255,-0.0944 -0.7295,0.39046 -0.53727,0.30633 -1.21607,0.14786 -1.81249,0.28553 -0.45323,-0.32329 -0.97954,-0.34856 -1.2409,0.19181 -0.49058,0.0751 -1.07088,-0.0615 -1.60027,-0.0142 -1.0348,-0.10404 -1.74635,-1.16551 -1.84335,-2.1339 0.56947,-0.66628 -0.24409,-0.65129 -0.53744,-1.02373 -0.5107,-0.79407 -1.34159,-1.23833 -2.21956,-1.5123 -0.34214,-0.58799 -0.88845,-0.20093 -1.26136,0.0711 -0.56086,0.0869 -1.13554,0.0678 -1.70212,0.10826 0.0414,-0.83033 0.18594,-1.6555 -0.044,-2.47627 -0.0978,-0.93141 0.11991,-1.8767 0.0405,-2.81857 -0.11065,-0.60072 0.45036,-0.78067 0.92548,-0.84916 0.22872,-0.49678 -0.35,-1.24194 0.35753,-1.48968 0.79411,-0.35912 0.76682,-1.3518 1.08446,-2.05031 -0.58326,-0.78549 -0.60374,-1.77214 -0.44767,-2.69923 0.06,-0.68546 0.11416,-1.40437 0.59547,-1.93154 0.36203,-0.60851 0.37373,-1.52396 1.11101,-1.80372 0.80973,-0.34294 1.75584,-0.37604 2.63183,-0.40528 0.81083,0.0716 1.76288,0.14332 2.22948,0.90831 0.34936,0.39285 0.75262,1.04912 1.36448,0.72247 0.74945,-0.2443 1.64671,-0.95175 2.36883,-0.27253 0.84857,0.64698 2.00977,0.99991 3.04459,0.66992 0.69583,-0.46994 1.37609,-1.0126 2.25704,-1.05169 1.25248,-0.25331 2.46526,0.32218 3.64563,0.57887 0.72544,-0.35229 1.25419,-1.30217 2.17847,-1.24729 0.70231,-0.26335 0.72523,0.5019 1.23013,0.78987 0.17554,0.14886 0.31231,0.34153 0.46371,0.51083 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Cameroun\"\n\t\t\t\t\t\t\td=\"m 425.50601,195.522 c -0.99,-0.007 -1.97998,-0.0241 -2.97,-0.01 -0.0686,-0.50005 -0.256,-0.97289 0.0323,-1.4832 0.1072,-0.74198 -0.2828,-1.49682 -0.68932,-2.10879 0.6956,-0.25112 0.23558,-0.99124 -0.3592,-0.7923 -0.59004,0.12701 -1.17613,-0.38649 -1.09755,-1.00192 0.015,-0.55777 -1.16894,-0.25954 -0.53673,-0.90034 0.38021,-0.53992 0.37729,-1.19239 0.33149,-1.82244 0.8661,-0.92602 1.8648,-1.71679 2.746,-2.63001 0.48702,6.7e-4 1.09763,-0.1185 1.50382,0.14343 0.35795,0.27308 0.52739,1.14718 1.04457,0.96607 1.13128,-0.87945 1.38185,-2.41372 2.00555,-3.6388 0.28586,-0.46585 0.40433,-1.31585 1.10005,-1.2617 0.41632,-0.54151 0.1542,-1.30286 0.46701,-1.89498 0.63585,0.10265 0.88212,-0.379 0.91109,-0.93622 0.33523,-0.98005 0.75091,-1.98708 1.35533,-2.82217 0.42018,-0.39364 1.43971,-0.15047 1.47669,-0.93076 0.0144,-0.52333 0.3177,-1.52723 -0.4949,-1.54312 -0.69999,-0.0598 -0.50145,-0.94805 -0.63721,-1.43773 -0.085,-0.62393 0.88512,-0.2768 1.0613,0.0517 0.65748,0.8015 1.28355,1.71327 1.24637,2.79546 0.0603,0.56211 -0.20896,1.107 -0.006,1.671 0.0254,0.78664 0.46411,1.47459 0.91309,2.07184 -0.74219,0.41027 -1.64065,-0.0153 -2.43634,-0.0757 -0.47155,-0.0546 -0.92144,0.64557 -0.92023,0.99094 0.76148,0.83761 1.70287,1.50999 2.45857,2.33642 0.41521,0.60815 0.71431,1.27128 0.92901,1.97437 0.46853,0.31198 -0.64828,0.57549 -0.5912,1.10141 -0.40198,0.80019 -0.7316,1.71215 -1.55681,2.17558 -0.46323,0.73389 0.0379,1.64936 0.14336,2.43699 0.12922,0.80171 0.72679,1.41261 1.07981,2.09258 -0.0299,0.60615 0.15224,1.17655 0.66753,1.53292 0.686,0.62256 1.30217,1.3853 1.41029,2.33552 0.33343,0.47657 -0.0742,0.92829 0.15,1.497 -0.57674,0.18496 -1.1524,-0.29448 -1.71411,-0.43025 -1.04398,-0.46893 -2.19143,-0.57047 -3.31434,-0.45385 -1.15521,-0.0459 -2.28695,-0.36796 -3.45325,-0.33392 -0.73786,-0.0344 -1.47615,-0.0635 -2.20928,-0.15898 -0.0163,0.16336 -0.0277,0.33606 -0.047,0.494 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Guinee Eq\"\n\t\t\t\t\t\t\td=\"m 422.53601,195.513 c 0.99002,-0.0141 1.98,0.003 2.97,0.01 0.0122,0.84742 0.0199,1.695 0.047,2.54201 -1.19084,0.0801 -2.38631,-0.059 -3.577,0.046 0.29122,-0.71295 -1.03363,-0.44148 -0.29688,-1.07917 0.37392,-0.44244 0.82152,-0.91154 0.85688,-1.51882 z m -2.90002,-2.24001 c -0.80543,0.11577 -0.44849,-0.59582 -0.21799,-0.88984 -0.12112,-0.50587 0.98765,-0.52081 0.80614,-0.0716 -0.29002,0.24335 -0.38648,0.65029 -0.58815,0.96145 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Afrique centrale\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Rep Centrafricaine\"\n\t\t\t\t\t\t\td=\"m 436.30399,195.35899 c -0.33754,-0.62831 -0.32284,-1.38455 -0.82481,-1.93432 -0.46246,-0.72199 -1.53078,-1.13899 -1.441,-2.12546 -0.0503,-0.74049 -0.83008,-1.21183 -0.97748,-1.94969 -0.22105,-0.85573 -0.5506,-1.75141 -0.41071,-2.64153 0.47014,-0.49259 1.08625,-0.89102 1.3092,-1.5854 0.3517,-0.5968 0.50215,-1.3979 1.1908,-1.70659 0.54818,0.30372 1.13553,-0.31062 1.65801,-0.48638 0.57655,-0.60623 0.68955,0.29807 1.15388,0.46647 0.68292,-0.0641 1.22499,-0.68185 1.92052,-0.81073 0.64202,-0.38108 1.74311,0.27036 2.07472,-0.60886 0.32598,-0.51373 0.58622,-1.04947 0.59189,-1.6705 0.48119,-0.46742 1.27211,-0.18474 1.88647,-0.28936 0.63921,-0.009 1.36884,0.0667 1.79535,-0.51585 0.77306,-0.73412 1.7084,-1.32224 2.37317,-2.15379 -0.12989,-0.61221 0.35727,-0.97387 0.83959,-1.21428 0.49611,-0.43046 1.17841,-0.69343 1.78403,-0.3068 0.62183,0.72452 1.32677,1.469 1.76811,2.33072 0.30707,0.88705 -0.5961,1.76711 -0.25048,2.65648 0.36149,0.40754 1.30556,-0.24707 1.50707,0.48323 0.39184,0.839 1.44089,0.92624 2.1824,1.2926 0.65643,0.24895 -0.11679,0.99614 0.5058,1.3191 0.55556,0.54821 1.4,0.76523 1.87463,1.3758 0.26253,0.46409 0.024,1.17445 0.61454,1.45973 0.44866,0.30281 1.09691,0.13769 1.43453,0.64282 0.41109,0.25703 0.37404,1.0962 0.0872,1.28146 -0.65624,0.12054 -1.35188,0.7306 -1.97637,0.21427 -0.59755,-0.21331 -1.22311,-0.49605 -1.83857,-0.56567 -0.62317,-0.0172 -0.13456,1.09699 -0.87217,0.94676 -0.70445,-0.0667 -1.42161,-0.40126 -2.0952,0.007 -0.6376,0.15822 -1.15169,0.68098 -1.80113,0.7427 -0.3953,-0.25985 -1.07354,-0.79884 -1.3742,-0.15792 -0.27451,0.43998 -0.3834,1.00643 -0.77381,1.35792 -1.30189,-0.1432 -2.52562,-0.6976 -3.84611,-0.75359 -0.74474,-0.20408 -0.97684,-1.07836 -1.69075,-1.37235 -0.78522,-0.66505 -1.77636,0.0644 -2.23604,0.76653 -0.3301,0.38956 -0.78633,0.8299 -0.5081,1.38141 0.0329,0.59312 -0.0386,1.14532 -0.73797,1.1953 -0.89881,0.30603 -1.83894,-0.41767 -2.75118,-0.0784 -0.51033,0.0688 -1.23903,0.14507 -1.17236,0.8329 -0.0947,0.83239 -0.28666,1.6455 -0.9735,2.17421 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Gabon\"\n\t\t\t\t\t\t\td=\"m 425.50601,195.522 c -0.16612,-0.8178 0.71738,-0.32457 1.19121,-0.38879 1.12149,0.073 2.2517,0.0519 3.35979,0.26179 -0.58841,0.46616 -0.51484,1.30692 -0.36059,1.95796 0.31856,0.50461 0.95971,-0.0338 1.34881,-0.21654 0.62341,-0.29072 1.2396,0.2626 1.36206,0.87768 0.41704,0.55641 -0.26008,0.94356 -0.64545,1.23766 -0.82967,0.37095 -0.63839,1.74857 0.24749,1.88907 0.50299,0.007 0.9531,0.42061 0.69772,0.93936 -0.26704,1.22774 -0.29863,2.49818 -0.71105,3.69781 -0.55837,0.38194 -0.81808,-0.29586 -0.93896,-0.70241 -0.42914,-0.54602 -0.51151,0.74392 -1.06003,0.5314 -0.69072,-0.16884 -0.79594,-1.12794 -1.41322,-1.32429 -0.67647,0.11927 -0.16073,1.29557 -0.94649,1.35594 -0.38579,0.30311 -1.22028,-0.022 -1.33098,0.53285 -0.18765,0.64899 0.45799,1.09253 0.75807,1.54602 0.0594,0.53483 -0.34853,1.15334 -0.88733,0.66739 -0.56663,-0.33732 -0.77584,0.87534 -1.19128,0.10945 -0.48628,-0.35889 -0.80164,-0.87129 -1.15272,-1.33426 -0.33238,-0.3744 -1.00378,-0.73128 -1.12501,-1.11659 0.60818,-0.57631 -0.69315,-0.41433 -0.81449,-0.80816 -0.13717,-0.42799 -0.89001,-0.96223 -0.63428,-1.3224 0.73007,-0.31911 -0.12334,-0.7584 -0.47291,-0.90196 -0.0103,-0.43523 -0.98624,-0.91936 -0.29937,-1.10598 0.81214,-0.38588 0.89539,-1.31808 1.14401,-2.078 0.53169,0.20788 1.32745,0.0315 0.46987,-0.36441 -0.37222,-0.27411 -1.09512,-0.6178 -0.26589,-0.73659 -0.0713,-0.72399 0.51774,-0.67616 1.06086,-0.65924 0.88612,-0.0113 1.77339,0.0625 2.65814,-0.004 -0.0283,-0.84595 -0.0332,-1.69867 -0.048,-2.541 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Congo\"\n\t\t\t\t\t\t\td=\"m 429.505,210.68401 c -0.39069,-0.39332 -0.89618,-0.72585 -1.3297,-0.18897 -0.37546,0.14269 -0.93142,1.08843 -1.11799,0.37427 -0.26331,-0.89413 -1.1022,-1.38313 -1.69931,-2.04231 0.23584,-0.62862 0.87424,-0.52547 1.3439,-0.23845 0.28641,-0.22819 0.63227,-0.95498 0.0731,-1.20855 -0.35671,-0.37243 -0.74087,-1.04719 -0.32098,-1.48201 0.6235,-0.13508 1.69307,-0.0822 1.71002,-0.95001 -0.0902,-0.65124 0.68988,-0.90964 0.90707,-0.24346 0.28413,0.39553 0.71683,1.1334 1.26942,0.82092 0.25084,-0.5416 0.77982,-0.83254 0.88212,-0.047 0.0441,0.59585 0.993,0.48886 0.88939,-0.12625 0.37701,-1.17836 0.34702,-2.42722 0.67096,-3.61619 -0.0648,-0.77125 -1.14793,-0.38566 -1.40568,-1.03513 -0.35583,-0.5785 -0.0581,-1.26908 0.52268,-1.55785 0.49428,-0.25759 0.86043,-0.7786 0.4389,-1.28452 -0.13577,-0.73273 -1.0569,-1.041 -1.60942,-0.55093 -0.36869,0.33811 -1.19327,0.3991 -1.10205,-0.29396 -0.0824,-0.56234 -0.0759,-1.38702 0.5168,-1.59863 1.1524,0.2783 2.34393,-0.13051 3.48427,0.24928 0.82024,0.21518 1.60394,0.68311 2.42721,0.80187 0.45725,-0.19834 -0.2395,-1.057 0.431,-1.29634 0.75691,-0.61618 0.6266,-1.68322 0.92853,-2.487 0.46789,-0.36043 1.16193,-0.33585 1.73069,-0.43285 0.81567,0.11066 1.69289,0.48744 2.46204,0.0183 0.48053,0.15418 -0.11426,0.93846 -0.15084,1.33196 -0.38703,0.77569 -1.01517,1.48495 -1.06411,2.39977 -0.30807,1.47906 -0.29516,3.00603 -0.67186,4.47624 -0.19701,0.69203 -0.14994,1.60009 -0.89759,1.95429 -1.14768,0.43115 -1.92625,1.45018 -2.35403,2.56738 -0.23567,0.6247 -0.33038,1.33687 -0.35885,1.99629 0.11568,0.55609 0.19626,1.2931 -0.38695,1.61069 -0.73442,0.65986 -1.51831,1.25632 -2.28722,1.87774 -0.40826,0.39399 -1.08078,0.66 -0.93855,-0.18699 0.15143,-0.84862 -0.45893,-0.54199 -0.98875,-0.31698 -0.67346,0.002 -0.68804,0.73821 -1.20438,0.97081 -0.28493,0.258 -0.56019,-0.14217 -0.79983,-0.26546 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Rep dem du Congo (Zaire)\"\n\t\t\t\t\t\t\td=\"m 429.505,210.68401 c 0.38508,0.50845 1.07653,0.34493 1.27832,-0.23173 0.25642,-0.5353 1.01279,-0.47706 1.492,-0.74788 0.46459,-0.0564 -0.034,1.18055 0.4757,1.19928 0.99717,-0.52434 1.77454,-1.36131 2.6697,-2.02259 0.44956,-0.35085 0.85819,-0.72278 0.78324,-1.34367 -0.23664,-0.78327 0.0424,-1.58322 0.18195,-2.35625 0.40522,-0.98167 0.94118,-1.95352 1.90015,-2.48887 0.5384,-0.2508 1.19471,-0.56121 1.21794,-1.24931 0.41218,-1.59182 0.60767,-3.22395 0.76956,-4.8551 0.12196,-1.01924 0.47017,-1.99393 1.12143,-2.79889 0.0726,-0.4966 0.53874,-1.03657 0.3322,-1.50802 0.2457,-0.28466 0.24797,-1.02136 0.11651,-1.48753 0.20815,-0.64531 0.76954,-1.14471 1.23131,-1.63445 0.53449,-0.46249 1.30281,-0.4376 1.80554,0.0595 0.66488,0.33102 0.89265,1.28651 1.74174,1.26736 1.23437,0.0567 2.37266,0.60807 3.59472,0.72017 0.55638,-0.44524 0.48845,-1.44026 1.20599,-1.70298 0.52499,0.12165 0.9923,0.80704 1.52797,0.32239 0.89091,-0.45529 1.90372,-1.05105 2.91556,-0.60969 0.5845,0.23763 1.01801,-0.18689 0.94793,-0.78 0.55923,-0.33506 1.21773,0.17411 1.80236,0.30291 0.48079,0.16978 0.95541,0.55785 1.46249,0.2118 0.47097,-0.11836 1.05408,-0.58961 1.31017,0.0234 0.73162,0.53229 1.08147,1.56444 1.99527,1.80917 0.5501,0.0336 0.90447,-0.92124 1.49955,-0.55172 0.35964,0.47044 0.82745,0.76263 1.09832,0.0441 0.33556,-0.63399 0.85647,0.005 1.17655,0.30469 0.68979,0.59746 1.29215,1.30023 1.94682,1.92297 0.007,0.79746 -0.26973,1.60622 -0.23788,2.38328 0.19831,0.43449 1.07469,0.002 1.11874,0.67366 -0.0996,0.75227 -0.95638,1.10195 -1.43413,1.63366 -0.84677,0.65292 -1.85928,1.34609 -1.95114,2.51372 -0.2972,1.00108 -0.16097,2.05809 -0.16566,3.0792 -0.12816,0.69112 -0.92303,0.8925 -1.26042,1.40687 -0.11526,0.60081 -0.51873,1.19642 -0.54275,1.77437 0.36729,0.69872 1.13699,1.29281 0.8902,2.16805 -0.0815,0.6632 0.39182,1.2202 0.25814,1.89192 0.0433,0.72782 -0.17165,1.46161 0.17041,2.14716 0.37184,0.68402 -0.0409,1.42311 0.20435,2.13263 0.47297,0.93856 1.57017,1.42569 1.89584,2.47248 0.21911,0.57366 0.43822,1.14733 0.65732,1.721 -1.22013,0.17144 -2.45932,0.34877 -3.65362,0.61362 -0.60663,0.35181 -0.80691,1.10546 -1.22238,1.64137 -0.14903,0.97248 0.36638,1.93022 0.2887,2.87921 -0.18359,0.77035 -0.63148,1.5279 -0.57972,2.32179 0.51258,0.64996 1.04835,1.41605 1.82683,1.72907 0.57455,0.2501 0.81225,-0.71587 1.28918,-0.55976 0.21865,0.72166 0.0772,1.56184 0.14299,2.32968 0.19529,0.77449 -0.54689,0.50911 -1.03253,0.49734 -0.56557,0.0432 -1.1691,-0.11458 -1.35297,-0.71869 -0.47827,-0.85583 -1.2473,-1.56908 -2.24644,-1.72204 -0.80836,-0.19902 -0.9131,-1.16071 -1.32106,-1.76561 -0.32769,0.44848 -0.65794,1.36086 -1.35225,1.03686 -0.81684,-0.19446 -1.75275,-0.2504 -2.45285,-0.70898 -0.29434,-0.36131 -0.37565,-1.19613 -0.96934,-0.80069 -0.43169,0.067 -1.13333,0.50429 -1.25455,-0.18418 -0.44096,-0.65463 -1.33575,-0.41778 -2.01354,-0.59005 -0.93983,-0.13983 -1.79764,0.45704 -2.72947,0.37806 -0.5156,-0.43559 0.13114,-1.14494 -0.006,-1.7114 -0.10235,-0.88089 -1.12647,-1.31653 -1.28731,-2.15161 0.34983,-1.05629 0.60661,-2.31083 -0.046,-3.30499 -0.0623,-0.40741 0.51787,-1.08776 0.012,-1.28175 -0.75757,-0.10906 -1.59326,0.18192 -2.33264,0.0106 -0.18899,-0.35651 -0.0445,-1.07723 -0.801,-0.79615 -0.53182,0.0193 -1.06341,0.048 -1.59537,0.0613 -0.15987,0.53788 0.016,1.10928 -0.27901,1.62386 -0.0337,0.69387 -0.58886,0.69054 -1.14145,0.63152 -0.63249,-0.10065 -1.25517,-0.15781 -1.86729,0.0867 -0.57627,0.0986 -1.30609,0.19627 -1.60951,-0.44079 -0.75184,-0.91315 -1.25591,-2.04422 -1.52075,-3.1865 -0.0354,-0.46723 -0.0869,-1.17323 -0.7336,-1.07837 -1.72102,-0.0167 -3.44244,0.0611 -5.16121,-0.0752 -0.82182,-0.0282 -1.61623,0.17043 -2.42121,0.24713 -0.371,0.14788 -1.10923,0.59473 -1.34854,0.15684 -0.37847,-0.59836 -0.22471,-1.00274 0.48857,-1.10724 0.0398,-0.46583 -0.0778,-1.1353 0.49402,-1.317 0.19312,-0.18261 0.3975,-0.39863 0.58499,-0.56099 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Zambie\"\n\t\t\t\t\t\t\td=\"m 452.198,239.34 c -0.89146,-0.97317 -1.88613,-1.85534 -2.74399,-2.853 -0.2737,-1.58201 -0.0731,-3.21099 -0.11736,-4.81195 0.008,-0.84574 -0.0419,-1.69224 0.0383,-2.53604 1.32707,-0.0425 2.69944,-0.0643 3.99819,-0.10137 0.0361,-0.57022 0.54729,-0.88696 0.73181,-1.40416 -0.15023,-0.46472 -0.51629,-0.84567 -0.49081,-1.3969 -0.11332,-0.53683 0.1261,-1.07793 0.16383,-1.61658 0.56574,-0.0344 1.04141,0.28149 1.21499,0.82701 0.50001,0.0918 1.02665,-0.17974 1.51599,-0.304 0.31674,0.48712 0.47054,1.17749 1.1548,1.23108 0.73819,0.19661 1.52224,0.40362 2.25908,0.45981 0.47019,-0.0651 0.69128,-0.96899 0.96759,-1.0028 0.39538,0.66059 0.58075,1.65489 1.49376,1.74915 1.11926,0.19615 1.79404,1.19411 2.30376,2.11876 0.59634,0.40462 1.38602,0.21681 2.074,0.31298 0.0509,-0.93935 0.0666,-1.92853 -0.072,-2.8403 -0.44677,-0.31272 -0.70753,0.75883 -1.24831,0.52103 -0.71133,-0.16969 -1.18068,-0.88245 -1.65561,-1.40953 -0.60241,-0.55467 0.0144,-1.33377 0.12349,-1.9756 0.26243,-0.55533 0.29468,-1.12612 0.11258,-1.71131 -0.11068,-0.78156 -0.48356,-1.7033 0.14231,-2.36278 0.33124,-0.58496 0.71335,-1.2936 1.49447,-1.24755 1.01774,-0.15726 2.02877,-0.36143 3.05206,-0.47995 0.50917,0.51482 1.05417,0.98495 1.77533,1.15397 1.12672,0.64884 2.44776,0.88515 3.55572,1.54558 0.58479,0.6416 1.08697,1.44063 1.32408,2.26601 0.0831,0.66785 -1.135,0.46041 -0.87922,1.15338 0.0914,0.78591 -0.17528,1.59021 0.0111,2.36307 0.30115,0.2581 1.19223,0.51018 0.52405,0.9146 -0.41346,0.38914 -1.29957,0.20237 -1.34289,0.90257 0.0318,0.55162 -0.30209,1.06109 -0.34892,1.5648 -0.0938,0.55257 1.02478,0.9369 0.57496,1.03309 -1.2737,0.56224 -2.61953,0.94301 -3.90371,1.47068 -0.68843,0.2336 -1.45907,0.28821 -2.09447,0.63725 -0.16516,0.44342 0.34207,1.12463 0.1427,1.3814 -1.14761,-0.24239 -2.59574,0.0617 -3.11378,1.22997 -10e-4,0.48433 -0.14057,1.08178 -0.78296,0.98614 -0.70034,-0.0147 -1.46548,0.12815 -1.8301,0.79367 -0.71646,0.78198 -1.27871,1.77409 -2.082,2.43202 -0.52231,0.0564 -1.09939,-0.0696 -1.48986,-0.4402 -0.54447,0.20941 -1.08819,0.66661 -1.67807,0.28456 -0.59101,-0.15322 -0.98345,-0.60987 -1.48626,-0.9179 -0.51375,-0.13414 -1.10877,0.012 -1.54667,-0.28666 -0.6118,0.1224 -1.2411,0.24144 -1.84201,0.366 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Angola\"\n\t\t\t\t\t\t\td=\"m 427.24301,211.207 c 0.52176,-0.35085 0.95744,-0.86342 1.56699,-1.05701 0.64242,0.3281 0.80111,0.6848 0.12225,1.09103 -0.56774,0.18554 -0.47373,0.8537 -0.50424,1.32697 -0.75345,0.43018 -0.7071,0.20486 -0.65447,-0.49315 -0.14457,-0.30349 -0.35831,-0.57843 -0.53053,-0.86784 z m 0.75498,2.636 c 0.74601,0.10452 1.32842,-0.51783 2.0801,-0.41007 1.77041,-0.38022 3.60229,0.079 5.39994,-0.0978 0.63321,0.0737 1.40122,-0.17154 1.93915,0.20251 0.21467,0.682 0.20424,1.41919 0.56189,2.06563 0.39009,0.92855 0.8595,1.95123 1.71792,2.52072 0.71245,0.0719 1.38798,-0.22783 2.07709,-0.2561 0.56667,0.11275 1.14118,0.10424 1.71591,0.0921 0.29293,-0.62406 0.52952,-1.29109 0.46469,-1.98218 0.0748,-0.5575 0.92345,-0.16623 1.33341,-0.31577 0.49572,-0.0888 1.28592,-0.098 0.99234,0.6313 0.29712,0.41845 0.98199,0.11002 1.44197,0.16087 0.38917,0.006 1.38415,-0.29124 1.20662,0.38695 -0.16604,0.48846 -0.28016,1.00143 0.0885,1.43093 0.3041,0.93964 -0.011,1.92322 -0.22375,2.8373 0.28531,0.85649 1.43564,1.38757 1.27625,2.41859 -0.0233,0.4242 -0.48805,1.18209 0.0968,1.35542 0.97718,0.0271 1.90529,-0.58652 2.90053,-0.34666 0.78569,-0.12966 0.75732,0.35626 0.57091,0.96168 -0.1155,0.545 -0.0226,1.18429 0.23443,1.66211 0.49775,0.39755 0.0482,0.96298 -0.32371,1.24845 0.079,0.77741 -0.5624,0.68931 -1.12129,0.64948 -1.01757,0.0272 -2.03515,0.0543 -3.05272,0.0815 -0.0727,2.13225 -0.0533,4.27047 -0.0396,6.40478 -0.10217,0.73392 0.31324,1.34381 0.88297,1.75971 0.66173,0.67695 1.3221,1.35539 1.97959,2.03651 -1.35905,0.29876 -2.7364,0.62431 -4.11059,0.7803 -0.81336,-0.2097 -1.74531,0.27509 -2.4614,-0.29031 -1.13098,-0.0582 -2.3416,0.21891 -3.4123,-0.20461 -0.41975,-0.31551 -0.6941,-0.85902 -1.31118,-0.73458 -3.05334,-0.01 -6.11333,-0.0234 -9.16299,-0.0443 -0.66531,-0.0218 -1.09178,-0.56589 -1.54804,-0.94161 -0.77883,-0.17803 -1.45071,0.45038 -2.07651,0.82813 -0.42562,-0.31967 -0.9454,-0.64881 -1.358,-0.12098 0.0315,-1.08754 0.0745,-2.17603 0.002,-3.263 1.15847,-0.80859 0.99161,-2.39069 1.26727,-3.62062 0.20505,-0.86322 0.39086,-1.78759 1.10172,-2.38639 0.09,-0.59627 0.47776,-1.06562 1.091,-1.147 1.26826,-1.39695 1.36244,-3.52255 0.67002,-5.21201 -0.48004,-0.72728 -1.12123,-1.45866 -1.21198,-2.34153 0.015,-0.65505 0.96475,-0.74612 0.85485,-1.46031 0.0881,-1.20664 -1.26355,-1.89357 -1.27119,-3.08956 -0.11109,-0.89016 -0.89448,-1.4707 -1.2627,-2.24959 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Afrique des lacs\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Ouganda\"\n\t\t\t\t\t\t\td=\"m 466.19601,203.27499 c 0.49528,-0.61218 0.0907,-1.42719 0.22886,-2.13878 -0.0407,-0.73879 0.16167,-1.49596 0.39528,-2.18492 0.52665,-1.09697 1.73105,-1.59114 2.53118,-2.45789 0.43283,-0.25669 0.97562,-1.0054 0.3244,-1.32701 -0.49608,0.011 -1.06764,-0.1653 -0.78687,-0.79344 0.0357,-0.63616 0.29835,-1.32443 0.15885,-1.93102 -0.31791,-0.33205 0.73,-0.47992 1.06277,-0.45401 0.79391,0.10454 1.63132,0.42745 2.41432,0.0664 0.63569,-0.22496 1.45307,-0.56172 2.03419,-0.0444 0.63781,0.0357 1.13987,-0.4441 1.556,-0.86999 0.21002,0.62065 1.06496,0.88604 0.91694,1.62603 -0.044,1.29218 1.47877,2.03077 1.39811,3.35206 0.0111,1.40593 -1.38238,2.18374 -2.1837,3.15451 -0.82825,0.95925 -1.15437,2.22579 -1.74033,3.3334 -2.08501,0.0196 -4.17214,-0.0526 -6.255,0.067 -0.54456,0.23444 -0.86213,1.02492 -1.52525,0.83641 -0.17356,-0.0823 -0.37015,-0.12778 -0.52975,-0.23442 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Ruanda\"\n\t\t\t\t\t\t\td=\"m 464.78601,206.235 c -0.42098,-0.45755 0.14652,-1.00503 0.22518,-1.50804 0.0695,-0.54996 0.43303,-0.89822 0.88754,-1.1635 0.3298,-0.63273 0.92954,0.28872 1.40426,-0.12905 0.37798,-0.30844 0.73684,-0.80723 1.26601,-0.78141 0.006,0.79265 0.52896,1.46378 0.63323,2.21584 0.0151,0.8013 -0.9178,0.75062 -1.48623,0.76916 -0.63968,-0.0285 -0.67429,0.75457 -1.22584,0.86643 -0.51751,0.16692 -0.98698,-0.41645 -1.54893,-0.26401 l -0.0888,-0.003 -0.0664,-0.002 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Burundi\"\n\t\t\t\t\t\t\td=\"m 465.79001,210.65199 c 0.006,-0.70117 0.0259,-1.40443 -0.25596,-2.05182 -0.038,-0.62318 0.16482,-1.32354 -0.36171,-1.80502 -0.69222,-0.60827 -0.0284,-0.68444 0.54867,-0.43597 0.46151,0.34318 1.12881,0.18405 1.34818,-0.36089 0.1497,-0.33146 1.32181,-0.65421 1.16321,-0.12817 -0.2292,0.53588 -0.0705,1.05149 0.57739,1.02887 0.72178,0.27663 0.007,0.77475 -0.27271,1.0868 -0.6939,0.66204 -0.87797,1.72693 -1.58268,2.343 -0.38667,0.10718 -0.78471,0.21871 -1.16439,0.3232 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Kenya\"\n\t\t\t\t\t\t\td=\"m 493.04401,204.258 c -0.44677,0.2948 -0.9929,0.71778 -1.54401,0.44799 -0.003,0.52634 -0.11752,1.28015 -0.80586,1.21916 -0.59534,0.0632 -0.78233,0.73719 -0.70815,1.25484 -0.33651,0.74329 -0.99518,1.35318 -1.30497,2.06758 0.19463,0.51454 -0.17274,1.10813 -0.59515,1.37891 -0.46799,0.45496 -0.85314,-0.27698 -1.32497,-0.52383 -0.82377,-0.64603 -1.77966,-1.19512 -2.52687,-1.89391 -0.008,-0.4702 0.21969,-1.15035 -0.4539,-1.30333 -2.60067,-1.46084 -5.21475,-2.8975 -7.82813,-4.3354 -0.38068,-0.0934 -1.4118,0.23989 -1.37354,-0.12836 0.66189,-1.32686 1.08184,-2.844 2.28093,-3.81055 0.8487,-0.76633 1.87529,-1.79086 1.50592,-3.04249 -0.28595,-1.12137 -1.5463,-1.85901 -1.3446,-3.11906 -0.0641,-0.56068 -0.74319,-0.78853 -0.9077,-1.33256 0.39375,-0.3353 0.64348,-1.0227 1.14616,-1.10826 0.96296,0.16598 1.9266,-0.13495 2.87782,-0.0887 1.1582,0.18374 2.38181,0.31011 3.32249,1.09058 0.68433,0.361 1.26965,0.99458 2.0211,1.17081 0.83911,0.0379 1.65229,0.20373 2.46664,0.37381 0.75595,0.28839 1.02655,-0.6626 1.57484,-0.975 0.52378,-0.2676 1.0923,-0.62551 1.6575,-0.70698 0.51939,0.27068 1.00065,0.69482 1.63908,0.63577 0.94755,-0.13881 0.23062,0.51186 -0.0201,0.94142 -0.33409,0.56204 -0.80519,1.0822 -1.05685,1.66943 -0.041,2.78176 -0.007,5.56345 0.0803,8.34415 0.40639,0.59146 0.8203,1.18189 1.22202,1.77401 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Tanzanie\"\n\t\t\t\t\t\t\td=\"m 468.56799,202.653 c 2.45965,-0.11488 4.9234,0.004 7.38401,-0.083 2.74371,1.50823 5.48593,3.01914 8.216,4.55198 0.33988,0.44246 -0.29844,1.13181 0.37916,1.38003 1.07306,0.77764 2.1568,1.54082 3.20583,2.35098 -0.46583,0.89743 -0.78782,1.93417 -0.75851,2.94733 0.10419,0.5902 0.52499,1.12411 0.95263,1.52378 0.64823,0.25034 0.61651,0.76046 0.20849,1.22036 -0.21146,0.5234 -0.49546,1.05336 0.11365,1.24706 -0.0972,0.70432 -0.28177,1.49994 -0.0361,2.22609 0.24232,0.91671 0.26331,2.08179 1.24223,2.54922 0.24405,0.26722 1.19637,0.54257 0.88263,0.90323 -0.80535,0.60749 -1.61353,1.23087 -2.62484,1.43595 -0.64502,0.15185 -1.29465,0.84761 -1.96113,0.53312 -0.43335,-0.41872 -0.92677,-0.51835 -1.13716,0.13731 -0.22882,0.52575 -0.73109,0.81458 -1.2937,0.6391 -0.6821,-0.0767 -1.44478,0.1783 -2.06931,-0.10728 -0.45823,-0.2695 -0.74992,-0.94178 -1.26676,-0.33812 -0.84216,0.56635 -1.84755,-0.0285 -2.77507,0.10485 -0.55674,-1.2 -0.12755,-2.70644 -1.036,-3.75198 -0.38392,-0.45344 -0.9052,-0.57592 -1.47759,-0.57526 -0.55003,0.0925 -0.74821,-0.6049 -1.29982,-0.67242 -1.10614,-0.40383 -2.19682,-0.84505 -3.26409,-1.34241 -0.62413,-0.17572 -1.15839,-0.6757 -1.5079,-1.19094 -0.43949,-1.10588 -0.74031,-2.36145 -1.75886,-3.09461 -0.61639,-0.50435 -0.9871,-1.27684 -0.7751,-2.07466 0.0967,-0.83867 -0.59035,-1.60656 -0.32717,-2.46603 0.453,-0.32055 1.32838,-0.15977 1.56798,-0.83435 0.50061,-0.86331 0.91874,-1.83366 1.75453,-2.43434 0.20528,-0.66223 -0.71768,-0.47354 -0.96646,-0.83248 0.057,-0.45366 -0.0448,-1.15015 0.60453,-1.08037 0.70411,-0.21369 0.42955,-1.08715 0.17514,-1.56499 -0.21309,-0.4109 -0.29159,-0.85449 -0.35121,-1.30716 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g id=\"Afrique australe\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Nanibie\"\n\t\t\t\t\t\t\td=\"m 444.673,255.519 c -0.0405,2.55239 0.0537,5.11287 0.0262,7.65959 -0.36874,0.53198 -1.14899,0.67351 -1.57188,1.20198 -0.61277,0.18586 -1.23774,-0.24497 -1.88302,-0.13379 -0.52168,-0.0276 -1.33308,0.251 -1.6255,-0.29615 0.0246,-0.56054 -0.14763,-1.10651 -0.74862,-1.2622 -0.51271,-0.4456 -0.97163,-0.0208 -1.21143,0.46691 -0.4322,0.36643 -0.95137,0.51385 -1.24175,-0.0903 -0.73844,-0.70145 -1.59234,-1.3887 -1.79142,-2.44598 -0.20259,-0.60615 -0.7382,-1.20666 -0.4002,-1.84858 -0.0367,-0.51499 -0.59175,-0.91027 -0.59353,-1.48415 -0.16758,-0.68315 0.34381,-1.44597 -0.12394,-2.0954 -0.46898,-0.96586 -0.57201,-2.04539 -0.83291,-3.07588 0.70342,0.17045 0.93914,-0.21758 0.79384,-0.87477 0.20521,-0.81162 -0.71767,-0.31343 -0.58161,-1.0747 -0.44007,-1.10552 -1.49718,-1.84819 -1.92007,-2.98045 -1.07977,-2.05868 -2.01622,-4.22903 -3.54814,-6.0051 -0.44962,-0.78506 -0.8022,-1.64512 -0.663,-2.569 0.41559,-0.54052 0.9317,-0.19786 1.358,0.121 0.64584,-0.3902 1.35664,-1.05796 2.16199,-0.804 0.50809,0.73464 1.39132,1.04879 2.25979,0.93381 2.87746,-0.006 5.75511,0.0211 8.63221,0.0342 0.65327,0.0302 0.83996,0.91475 1.54572,0.8888 0.98023,0.17713 2.01877,-0.04 2.98741,0.09 0.76346,0.5082 1.71944,0.0157 2.56187,0.26421 1.93465,-0.34913 3.8498,-0.78866 5.77899,-1.164 0.59535,0.40983 1.55404,-0.0366 2.03782,0.65102 -0.23644,0.26965 -0.9824,0.4266 -1.46941,0.37592 -0.73031,0.0127 -1.00039,0.98728 -1.6664,1.11405 -0.33355,-0.42639 -0.609,-0.99664 -1.23692,-0.69412 -1.52787,0.16893 -3.0299,0.599 -4.57607,0.54612 0.0308,2.71384 -0.12106,5.42483 -0.068,8.13899 -0.76241,0.0869 -1.5357,0.0398 -2.29599,0.12601 -0.11155,2.09323 -0.13575,4.19739 -0.094,6.286 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Malawi\"\n\t\t\t\t\t\t\td=\"m 477.23099,225.87399 c -0.0799,0.78855 -0.51155,1.58103 -0.14264,2.34939 0.21106,0.77387 0.13198,1.78741 0.98608,2.18707 0.80247,0.6306 1.62326,1.33234 2.11244,2.23785 0.24098,0.88576 -0.0523,1.82995 -0.0399,2.74071 0.1343,0.70541 -0.6424,0.65902 -1.07305,0.77351 -0.54458,0.54864 0.0785,1.40264 -0.22697,2.04547 -0.94527,-0.50668 -1.30785,-1.58146 -2.03699,-2.31174 -0.60403,-0.63411 0.59529,-1.00258 0.46962,-1.66062 -0.0164,-0.62144 0.0713,-1.44375 -0.39148,-1.88427 -0.53247,-0.1373 -1.12304,0.18778 -1.62013,0.10094 -0.56415,-0.32134 -0.66495,-1.18626 -1.37406,-1.23391 -0.38959,-0.251 -0.75012,-0.89381 -0.44615,-1.34779 0.34141,-0.49275 -0.0389,-1.48745 0.72301,-1.60506 0.37955,-0.15052 1.18086,-0.30275 1.06219,-0.81444 -0.37465,-0.22151 -0.9531,-0.42782 -0.80838,-0.99454 0.0439,-0.74192 0.0963,-1.48474 0.0524,-2.22556 0.45726,-0.16837 1.16932,-0.5088 0.79887,-1.09661 -0.25486,-0.55711 -0.58108,-1.07382 -0.91285,-1.58739 0.6072,0.008 1.29978,-0.0375 1.71994,0.48289 1.00957,0.92981 0.59835,2.44323 1.06865,3.61849 0.0266,0.0752 0.0524,0.15062 0.0794,0.22561 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Lesotho\"\n\t\t\t\t\t\t\td=\"m 462.46201,268.50101 c -0.79112,-0.51316 -1.43804,-1.29718 -1.72602,-2.194 0.66338,-0.42401 0.95911,-1.18072 1.55828,-1.65814 0.58832,-0.32778 1.23046,-0.54277 1.87373,-0.73386 0.61948,0.3842 1.10446,0.94485 1.71899,1.34698 0.24026,0.49641 -0.5075,0.845 -0.61822,1.33148 -0.26062,0.90144 -1.32392,0.72751 -1.95935,1.18217 -0.49553,0.11176 -0.19534,0.90006 -0.84741,0.72537 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Mozambique\"\n\t\t\t\t\t\t\td=\"m 473.57501,260.04001 c -0.48418,-0.0416 -1.19134,0.0864 -1.53858,-0.0185 -0.0983,-0.59689 -0.4033,-1.15804 -0.26425,-1.76467 -0.36078,-1.21503 0.15934,-2.52118 -0.20848,-3.75119 -0.13115,-0.74372 -0.47958,-1.41969 -0.85939,-2.05093 -0.18864,-0.74297 -0.2063,-1.59624 -0.61831,-2.24074 0.90351,-0.80524 1.74608,-1.69705 2.56386,-2.58139 0.0786,-0.46017 -0.0997,-1.03729 0.13553,-1.50906 0.29459,-0.67143 1.12434,-0.97107 1.26161,-1.75455 -0.39412,-0.48754 -0.72834,-0.99894 -0.71201,-1.65001 -0.47284,-0.84532 0.89818,-1.30278 0.6065,-2.13471 -0.24703,-1.07088 -0.003,-2.26115 -0.43688,-3.26519 -0.80252,-0.76634 -2.02025,-0.72556 -2.95441,-1.27594 -0.69434,-0.3802 -1.47949,-0.27756 -2.2392,-0.29014 -0.31387,-0.3828 -0.0643,-1.00269 -0.31522,-1.45391 -0.28992,-0.5339 -0.0206,-1.07886 0.61428,-1.0566 1.06802,-0.22494 2.07553,-0.61603 3.0868,-1.01167 0.8696,-0.23201 1.69956,-0.6776 2.5421,-0.91555 0.45035,0.26424 0.62759,1.06094 1.19037,1.17331 0.50834,-0.0811 1.03858,-0.24171 1.54967,-0.12059 0.34087,0.68711 0.40634,1.56085 0.21413,2.29024 -0.29038,0.39779 -0.84385,0.83577 -0.33614,1.31376 0.7362,0.69048 1.06035,1.75423 1.99402,2.23399 0.31615,-0.65957 -0.36333,-1.58646 0.292,-2.10598 0.52681,0.0523 1.15037,-0.1568 1.01385,-0.80167 -0.0171,-0.91025 0.29932,-1.85696 0.009,-2.73734 -0.63694,-1.04243 -1.63727,-1.78853 -2.56399,-2.54787 -0.47513,-0.69948 -0.35018,-1.64202 -0.68144,-2.41685 0.0661,-0.56896 0.22288,-1.14905 0.31443,-1.72429 0.84656,-0.11117 1.70624,0.33326 2.52075,0.036 0.45362,-0.30483 0.9442,-0.64711 1.24026,0.036 0.6725,0.53653 1.57321,0.1749 2.36348,0.26848 0.57953,0.19157 1.0636,-0.15175 1.30259,-0.67036 0.20293,-0.67852 0.7226,-0.46887 1.13936,-0.0901 0.71713,0.26932 1.3714,-0.4515 2.06869,-0.59257 1.0283,-0.20106 1.80634,-0.91045 2.63687,-1.49644 0.54871,0.5224 0.2208,1.25948 -0.20149,1.74817 -0.27218,0.39901 0.25661,0.94623 0.1642,1.44463 -0.0872,0.79761 0.49913,1.74314 -0.18671,2.39719 0.47302,0.66995 0.60676,1.46237 0.52227,2.26517 0.0349,0.45113 -0.21159,1.22842 0.4819,1.24515 0.26425,0.42431 -0.22787,0.99102 -0.57624,1.29071 0.14837,0.41463 0.0387,0.938 -0.38191,1.29896 -0.9042,0.98878 -1.67514,2.17383 -2.96734,2.6944 -1.28725,0.77196 -2.79568,1.05663 -4.087,1.80501 -1.31642,0.89539 -2.09622,2.38725 -3.45413,3.24492 -0.68629,0.47638 -1.32939,1.03233 -2.06953,1.42068 0.0373,0.52722 -0.12854,1.08295 -0.06,1.582 0.43269,0.30622 1.17574,0.71766 0.75384,1.33302 -0.20533,0.50694 0.249,1.05467 0.317,1.57869 0.0319,0.48223 0.16706,1.24097 0.73516,0.67129 0.0742,0.99751 -0.0916,2.01301 -0.24916,2.99291 -0.53743,0.64864 0.26886,0.71434 0.22615,1.23009 -0.64798,1.23223 -2.01564,1.82641 -3.302,2.16699 -1.04754,0.40888 -2.21801,0.69884 -2.93882,1.635 -0.50889,0.37392 -0.43449,0.92232 0.17108,1.1189 0.62455,0.21225 0.15826,1.05187 0.17075,1.51312 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Madagascar\"\n\t\t\t\t\t\t\td=\"m 499.85001,236.166 c 0.52665,0.10433 0.875,-0.44379 1.346,-0.412 0.54084,0.36694 0.79512,-0.39083 1.27431,-0.39633 0.53043,-0.41026 0.99361,0.49027 1.34883,-0.005 -0.40234,-0.52192 0.4133,-0.7415 0.77679,-1.00936 0.3432,-0.10646 1.28616,0.25323 0.73801,-0.48665 -0.10855,-0.2972 0.68847,-1.16052 0.86805,-0.52803 0.44371,0.0923 1.05475,-0.61925 0.48877,-0.96168 -0.43497,-0.66282 0.65242,-0.27961 0.66622,-0.87631 -0.11114,-0.36355 -0.61854,-1.34881 0.0942,-1.21139 0.25902,0.62991 0.64673,0.62164 0.91543,0.0441 0.75304,-0.36089 0.94135,-1.18057 1.08734,-1.92773 -0.40208,-0.38252 0.18369,-1.16342 0.53841,-0.92839 0.43867,0.36983 0.61293,0.99943 1.24479,1.11191 0.4851,0.65469 0.42724,1.59633 0.61321,2.38218 0.11161,0.96929 0.30034,1.93942 0.82589,2.77617 0.39818,0.67448 -0.2369,1.27152 -0.56834,1.81013 -0.42769,-0.28774 -0.58913,-0.86603 -0.96396,-1.24099 -0.63672,0.18887 -0.20337,0.98101 -0.15402,1.44198 0.38705,0.3738 0.64585,0.9324 0.24326,1.3971 -0.31215,0.62383 -1.04822,1.0924 -0.85398,1.87918 0.11976,1.56057 -0.7255,2.97484 -1.1045,4.45116 -1.07256,3.30474 -2.18417,6.59653 -3.11903,9.94407 -0.29753,0.88738 -0.47566,1.84728 -1.18891,2.51323 -0.55654,0.45888 -1.42014,0.0876 -2.05603,0.43448 -0.61305,-0.008 -0.82386,0.72187 -1.40424,0.69417 -0.63329,0.30668 -0.69511,-0.61121 -1.27142,-0.64267 -0.46335,-0.14991 -1.01559,0.10452 -1.34194,-0.42466 -0.58385,-0.25185 -0.5416,-0.83594 -0.6481,-1.34499 -0.43691,-0.3198 -0.7574,-0.76055 -0.61624,-1.34601 0.0745,-0.61013 0.60611,-1.26523 0.0685,-1.8169 -0.43493,-0.71788 -1.16556,-1.44073 -0.81394,-2.34859 0.24453,-0.57283 0.14959,-1.48875 0.92568,-1.62678 0.48189,-0.39951 0.66954,-1.13163 1.04541,-1.65691 0.44728,-0.64372 0.76462,-1.35321 0.77604,-2.14915 0.16911,-0.55745 -0.4279,-0.80189 -0.71151,-1.16773 0.33536,-0.49318 0.3276,-0.93182 -0.096,-1.37713 -0.30236,-0.64172 -0.2064,-1.41588 -0.52401,-2.06886 0.41277,-0.7736 1.24227,-1.47817 1.07005,-2.45893 -0.0758,-0.48925 0.0366,-0.49345 0.48095,-0.46707 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Botswana\"\n\t\t\t\t\t\t\td=\"m 456.133,239.67 c 0.52303,0.28329 0.76443,0.43393 0.84605,0.97982 0.46376,0.62877 1.13313,1.16009 1.18343,2.00179 0.31676,1.22999 1.60787,1.67532 2.64251,2.14839 0.18101,0.36359 -0.11334,1.17375 0.63149,1.00851 0.7452,-0.24421 0.61388,0.49044 0.65787,0.96221 0.14785,0.48391 0.38911,1.05183 0.80062,1.33712 0.80739,0.25337 1.8964,0.1488 2.35456,1.02926 0.58043,0.32071 -0.15583,0.77353 -0.49265,1.0313 -0.53753,0.41415 -1.41487,0.0314 -1.76571,0.733 -0.55442,0.72207 -1.23442,1.3482 -2.10717,1.65359 -0.7321,0.40654 -0.28777,1.53311 -1.04141,1.94161 -0.52768,0.43297 -1.28913,0.40296 -1.78558,0.8574 -0.30619,0.72833 -0.31884,1.74599 -1.08701,2.154 -0.71119,0.1292 -1.45196,0.18221 -2.17098,0.0982 -0.88573,-0.13268 -1.65202,-0.60818 -2.36903,-1.11723 -0.56716,-0.19253 -0.99817,0.16423 -1.12494,0.70284 -0.55165,1.28698 -1.70613,2.37565 -3.06461,2.71927 -0.62409,-0.0607 -1.37983,0.25684 -1.91323,-0.10028 -0.3354,-0.76083 0.65524,-1.48138 0.20615,-2.24778 -0.27341,-0.76229 -0.77642,-1.52237 -1.41951,-1.98924 -0.73035,0.11023 -0.35392,-0.76372 -0.4497,-1.2172 -0.0397,-1.70996 0.0287,-3.41871 0.10486,-5.12662 0.76034,-0.0858 1.53355,-0.0393 2.29599,-0.126 -0.0534,-2.71417 0.0985,-5.42517 0.068,-8.139 1.75326,0.0444 3.45469,-0.46789 5.19299,-0.625 0.29772,0.32313 0.65824,1.16362 1.08737,0.49995 0.44234,-0.40893 0.86569,-0.99838 1.55161,-0.84891 0.42498,0.056 0.78286,-0.2037 1.16803,-0.32104 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Zimbabwe\"\n\t\t\t\t\t\t\td=\"m 468.138,234.908 c -0.0976,0.58071 0.14118,1.04816 0.79494,0.8496 1.24633,-0.15629 2.26692,0.73465 3.45287,0.94996 0.63216,0.16049 1.33785,0.5366 1.31843,1.27916 0.12463,0.97724 0.0806,1.98019 0.29475,2.95028 -0.18334,0.62859 -1.03948,1.06333 -0.664,1.78399 -0.003,0.59524 0.24285,1.09156 0.62897,1.53188 0.14752,0.47869 -0.38843,0.98097 -0.74584,1.29218 -0.64525,0.45496 -0.58522,1.35665 -0.534,2.02135 -0.7315,0.88372 -1.5919,1.69258 -2.41996,2.49689 -0.36812,0.25351 -0.90254,-0.3644 -1.422,-0.21636 -0.50403,0.13519 -1.03248,0.24631 -1.50222,-0.0784 -0.55418,-0.30522 -1.20773,-0.28594 -1.79795,-0.37251 -0.41142,-0.26098 -0.59655,-0.84624 -1.14098,-0.95072 -0.6549,-0.29198 -1.67519,-0.003 -1.94336,-0.86136 -0.38462,-0.46222 -0.40744,-1.0739 -0.42234,-1.62338 -0.20033,-0.42786 -1.18227,0.18845 -1.16692,-0.539 0.26972,-0.62587 -0.42394,-0.80237 -0.86129,-0.98642 -1.00861,-0.35218 -1.84626,-1.1921 -1.97355,-2.28266 -0.15072,-0.75102 -1.09445,-1.15851 -1.19884,-1.88536 0.27522,-0.26991 0.98216,0.36503 1.37582,-0.12511 0.50574,-0.52205 0.86025,0.14132 1.39961,0.15442 0.55423,0.2642 0.95861,-0.14166 1.24587,-0.57344 0.69607,-0.7742 1.25056,-1.71533 2.03048,-2.39045 0.61228,-0.38595 1.51637,0.057 1.98851,-0.54952 -0.12303,-1.07054 0.96839,-1.84994 1.93847,-1.92571 0.44418,-0.027 0.90306,-0.0709 1.32453,0.0507 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Zwaziland\"\n\t\t\t\t\t\t\td=\"m 471.71899,258.047 c 0.1013,0.52137 -0.0433,1.05265 0.22928,1.55827 0.41974,0.61989 -0.4939,0.49397 -0.42581,1.07899 0.0982,0.73101 -0.82678,0.33874 -1.26237,0.32202 -0.63406,-0.26388 -0.95613,-0.97774 -1.21072,-1.56112 0.0729,-0.69773 0.6146,-1.28448 1.01296,-1.83376 0.45727,-0.30247 1.02156,0.29854 1.52488,0.38481 0.007,-0.0795 0.11173,0.097 0.13178,0.0508 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tid=\"Afrique de Sud\"\n\t\t\t\t\t\t\td=\"m 444.673,255.519 c 0.67138,-0.0565 1.02364,0.61808 1.37773,1.08455 0.41952,0.63822 0.83143,1.44632 0.39142,2.17749 -0.22728,0.39466 -0.37653,1.21483 0.29784,1.20395 0.81571,-0.0881 1.68815,0.0774 2.40209,-0.41716 1.15075,-0.62253 1.97302,-1.71206 2.40891,-2.93084 0.68492,-0.53972 1.34845,0.22297 1.93862,0.53312 0.81319,0.43033 1.74038,0.56395 2.64275,0.43961 0.67979,0.0978 1.40318,-0.2799 1.51146,-1.00194 0.29166,-0.55617 0.20562,-1.48024 0.99799,-1.58019 0.72052,-0.22524 1.62614,-0.53456 1.72086,-1.40462 0.0151,-0.55662 0.27476,-1.05244 0.84099,-1.22021 0.94861,-0.3169 1.46862,-1.23996 2.15746,-1.8702 0.62737,-0.16382 1.35487,-0.13016 1.81458,-0.68785 0.24605,-0.57622 0.80385,-0.41586 1.32537,-0.34642 0.737,0.087 1.39644,0.77041 2.15238,0.36827 0.7114,-0.10395 1.71153,0.1756 1.71791,1.04709 0.2424,0.78885 0.20573,1.67286 0.78965,2.31635 0.56599,1.24296 0.60205,2.61548 0.48208,3.95235 -0.002,0.65029 0.17132,1.06872 -0.58421,0.59754 -0.49509,-0.30841 -1.08498,-0.42668 -1.31644,0.249 -0.33485,0.54948 -1.0391,1.25767 -0.47244,1.88692 0.28632,0.62914 0.79894,1.20924 1.5469,1.17791 0.76768,0.27202 0.62105,-0.3963 0.86842,-0.83221 0.55361,-0.36775 1.26247,-0.16287 1.88969,-0.22452 -0.11903,0.76692 -0.17038,1.63256 -0.716,2.22802 -0.86382,3.1e-4 -0.15064,0.77033 -0.37526,1.22288 -0.38871,1.00308 -1.70895,1.13436 -2.20667,2.0664 -1.30549,1.84392 -2.5612,3.76843 -4.33618,5.20579 -0.69972,0.70346 -1.39292,1.40597 -2.24599,1.92937 -1.27724,0.92751 -2.45733,2.08831 -3.96503,2.62293 -0.73427,0.16462 -1.48749,0.004 -2.22289,0.14862 -0.008,0.69164 -0.52206,0.54822 -1.02352,0.38904 -0.57527,-0.27612 -0.826,0.39756 -1.25746,0.59097 -0.67016,-0.0797 -1.1857,-0.61915 -1.88702,-0.63202 -0.54628,-0.20582 -0.95084,0.32056 -1.40606,0.33424 -0.52187,-0.12244 -0.98743,-0.34684 -1.51388,-0.1553 -0.705,-0.0557 -1.22183,0.48748 -1.77827,0.78762 -1.04801,0.24686 -2.25781,-0.34536 -3.17797,0.37456 -0.37912,0.38722 -0.72734,0.94937 -1.26576,0.43478 -0.67228,-0.0762 -0.66157,-0.61911 -0.99606,-1.00789 -0.62592,0.0847 -0.82049,-0.12392 -1.19137,-0.47862 -0.216,0.28697 -0.91131,0.63001 -0.65609,-0.14798 0.41895,-0.49342 0.10385,-1.00443 -0.23172,-1.43516 -0.0826,-0.48975 -0.95159,-0.81967 -0.71207,-1.23579 0.54734,0.0336 0.96191,-0.24674 0.88023,-0.86791 0.10035,-1.21718 -0.63093,-2.32977 -1.29131,-3.29516 -1.2197,-1.55049 -1.49966,-3.63582 -2.74728,-5.16231 -0.78432,-0.49611 0.16883,-0.50335 0.46832,-0.88142 0.21883,-0.59961 0.81244,-0.74201 1.29419,-0.31025 0.59876,0.15113 0.57742,0.77716 0.61511,1.2726 0.65283,0.51894 1.56266,0.0642 2.32597,0.23801 0.49406,0.098 1.10687,0.36892 1.46933,-0.15013 0.41984,-0.47843 1.48996,-0.55666 1.29574,-1.38927 -0.0329,-2.40238 -0.0661,-4.8254 -0.047,-7.21461 z m 17.78901,12.98201 c 0.66067,0.0989 0.46258,-0.85027 1.15281,-0.89332 0.60545,-0.24836 1.43529,-0.25018 1.65093,-1.01025 0.10452,-0.46937 0.79425,-0.80669 0.65196,-1.27388 -0.52663,-0.44457 -1.06999,-0.91972 -1.62735,-1.33507 -0.48078,-0.12703 -1.01732,0.2819 -1.50364,0.40863 -0.93148,0.2817 -1.19121,1.3232 -1.95776,1.82556 -0.21319,0.45367 0.40667,0.93113 0.61004,1.34833 0.24442,0.41163 0.66781,0.63521 1.02301,0.93 z M 432.95499,250.661 c 0.70901,-0.21929 0.48448,0.67818 0.51208,1.10978 0.14306,0.53943 -1.07488,0.50131 -0.87534,-0.0994 -0.14649,-0.44574 0.40807,-0.54514 0.36326,-1.01037 z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<path\n\t\t\t\t\tid=\"Antarctique\"\n\t\t\t\t\td=\"m 238.10699,361.75299 c 0.27593,-0.55352 0.68963,-0.83184 1.31465,-0.68799 0.36607,-0.23671 1.326,-0.25058 1.20926,-0.77642 0.096,-0.82778 -0.63709,-0.52225 -1.17855,-0.47866 -1.36347,0.0986 -2.70145,0.33909 -4.01392,0.72148 -0.54156,-0.0789 -1.19525,-0.16481 -1.66915,-0.40058 -0.39355,-0.50396 -0.63769,-0.95577 0.1963,-1.03129 1.63067,-0.68515 3.46887,-0.37167 5.16781,-0.67191 0.36683,-0.27706 1.38625,-0.17755 1.14908,-0.80316 -0.33731,-0.66121 0.2007,-0.91866 0.72433,-1.18274 -0.037,-0.45604 0.18462,-1.13212 -0.11791,-1.4973 -0.30811,-0.32135 -1.05216,-0.68818 -1.10742,-0.98315 1.12482,-0.65318 2.45257,-0.93565 3.732,-0.93422 1.22034,0.32548 1.85342,1.52448 2.59281,2.44861 0.73364,0.72058 1.60266,1.31562 2.13785,2.22029 0.54525,0.38958 0.17494,0.96416 0.0784,1.48342 -0.14106,0.53844 -0.13474,1.21326 -0.84644,1.22364 -0.94572,0.20125 -1.72466,0.81751 -2.58882,1.18142 -2.25945,0.14738 -4.51786,0.19674 -6.78027,0.16856 z M 172.686,360.379 c 1.46945,-0.2757 2.90916,-0.8223 4.42373,-0.68701 2.49992,0.0225 5.01766,-0.0451 7.50642,0.0338 0.94562,0.3894 1.89124,0.77879 2.83685,1.16819 -1.00641,0.1964 -1.99571,0.61247 -3.01348,0.66318 -2.96876,-0.31263 -5.95418,-0.44726 -8.92544,-0.70707 -0.94236,-0.15665 -1.88737,-0.31643 -2.82808,-0.47112 z M 65.129997,371.08499 c 0.769984,-0.23471 1.549917,-0.30813 2.343811,-0.15521 0.341998,0.008 1.519469,0.64623 0.594947,0.48721 -0.964853,0.0456 -1.918291,-0.006 -2.842177,-0.30898 l -0.08643,-0.0206 -0.01015,-0.002 z M 277.944,379.95401 c 0.29509,-0.51057 0.30785,-1.30346 1.00502,-1.41195 0.94692,-0.36189 1.83541,-0.96921 2.88942,-0.88113 1.3017,-0.0965 2.63071,-0.12768 3.91121,-0.32511 0.47622,-0.31527 1.10772,-0.5147 1.48662,-0.90257 0.19275,-0.4877 0.0921,-1.20442 0.48267,-1.53771 0.78178,-0.45912 1.61829,-0.76419 2.51595,-0.8971 1.02773,-0.25301 2.0567,-0.49477 3.12284,-0.39843 1.90197,0.0237 3.8133,-0.0469 5.70951,0.0349 1.08659,0.2177 2.17317,0.43539 3.25976,0.65308 0.30568,0.94194 0.84043,1.84352 0.68701,2.86635 -0.0498,0.52012 -0.86267,0.60174 -1.22827,0.94039 -0.51376,0.373 -1.07619,0.59256 -1.71789,0.56221 -3.8918,0.31298 -7.77763,0.72762 -11.67329,0.97494 -3.48352,0.10738 -6.96704,0.21475 -10.45056,0.32213 z M 36.004002,376.43399 c 0.624861,-0.42335 1.18162,-1.01124 1.990793,-0.98927 0.802775,-0.18714 1.608066,-0.25028 2.418328,-0.0685 1.486126,0.20944 3.009096,0.2518 4.413427,0.83218 0.951483,0.30453 1.902966,0.60907 2.85445,0.9136 -0.539378,0.35816 -1.115235,0.59243 -1.773002,0.54847 -1.113909,0.12137 -2.226245,0.17207 -3.332679,-0.0424 -1.700931,-0.17293 -3.391984,-0.40288 -5.045873,-0.8474 -0.50849,-0.1155 -1.016913,-0.23159 -1.525444,-0.34671 z m 741.839018,9.026 c 1.57438,0.1342 3.14101,0.3838 4.72198,0.42001 0.92454,0.63548 2.13261,0.52956 3.21092,0.59174 1.90032,0.0158 3.7991,0.0403 5.6943,0.20576 1.84705,0.0571 3.67915,0.33407 5.51523,0.48336 1.05484,-0.1337 2.10017,1.3e-4 3.26455,0.33973 0,1.59183 0,3.30255 0,4.94049 0,2.56165 0,5.12329 0,7.68493 -266.79167,0 -533.45833,0 -800.375,0.12399 0,-4.343 0,-8.562 0,-12.78101 2.478678,0.18129 4.7071136,0.36903 6.9453231,0.297 3.4053209,0.0397 6.8172429,-0.1229 10.2137999,0.18537 3.16341,0.23369 6.329548,0.40702 9.501941,0.44187 3.182507,7e-5 6.333828,0.49992 9.49964,0.76756 2.855231,0.26297 5.714064,0.53367 8.576952,0.68016 3.777439,0.0407 7.556319,0.25999 11.331661,0.0405 2.739892,-0.0812 5.485892,-0.19242 8.22359,-0.2013 1.003036,0.0671 2.023162,0.50754 3.006021,0.13373 1.323432,-0.25543 2.614654,-0.81286 3.982853,-0.64856 5.792914,0.0935 11.584743,0.30569 17.378442,0.31342 0.855842,-0.0478 1.747529,0.0855 2.581279,-0.074 0.504182,-0.20921 1.408381,-0.48905 0.357012,-0.42361 -4.994455,-0.21666 -9.994495,-0.33164 -14.985234,-0.61593 -3.029216,-0.18506 -6.053865,-0.49795 -9.086074,-0.59925 -1.683466,0.003 -3.380742,-0.0393 -5.047883,-0.25882 -0.690494,-0.19089 -1.481121,-0.20789 -2.098508,-0.54802 -0.609046,-0.29486 -0.230857,-0.9629 -0.242691,-1.48351 0.05398,-0.48709 0.499711,-0.94572 0.884844,-1.20445 0.57401,-0.20906 1.148021,-0.41812 1.722031,-0.62718 -1.823151,-0.3904 -3.644507,-0.79066 -5.494999,-1.031 -0.36942,-0.24171 -1.433085,-0.54216 -0.446438,-0.66911 0.403345,-0.16658 1.585596,-0.37689 0.560467,-0.46324 -1.394985,-0.31698 -2.794656,-0.59976 -4.230605,-0.61761 -0.364008,-0.0851 -1.420568,0.0921 -1.228099,-0.35271 1.657373,-0.20968 3.317268,-0.37302 4.989903,-0.30233 3.387801,0.0901 6.768872,0.43635 10.16149,0.34298 1.028107,-0.005 2.055778,0.34763 3.072293,0.2994 2.293949,-0.59784 4.595564,-1.16755 6.867991,-1.84438 -1.470672,-0.55114 -2.921145,-1.16973 -4.480859,-1.42354 -1.366325,-0.3659 -2.756596,-0.58117 -4.168509,-0.6603 -1.380567,-0.0939 -2.751203,-0.24867 -4.083604,-0.63761 -1.389259,-0.3648 -2.849393,-0.25456 -4.27273,-0.36857 -1.260179,-0.0624 -2.566526,0.19594 -3.764218,-0.30067 -0.632027,-0.18577 -1.264054,-0.37154 -1.896081,-0.55731 1.290064,-0.26574 2.591897,-0.48107 3.855999,-0.858 -0.649558,-0.2305 -1.274877,-0.69221 -1.97994,-0.39327 -1.442515,0.25962 -2.931425,0.63704 -4.380357,0.20027 -0.955451,-0.10922 -1.770688,-0.65408 -2.647702,-1.00701 0.245142,-0.38904 0.05372,-1.33562 0.698167,-1.21471 1.156872,0.0316 2.290834,-0.17917 3.428529,-0.3303 2.30978,0.0335 4.62978,-0.1253 6.922676,0.22597 1.607444,0.13001 3.198921,0.35908 4.763309,0.75626 1.127606,0.23806 2.30109,0.55132 3.435349,0.19059 1.229431,-0.19201 2.44742,-0.55913 3.684048,-0.64099 1.274307,0.0757 2.548613,0.15145 3.822919,0.22717 -0.162454,-0.44326 0.329049,-1.25854 -0.187588,-1.40808 -1.009527,-0.30046 -1.987807,-0.78367 -3.067248,-0.6752 -1.492645,0.0281 -2.966585,-0.1795 -4.440164,-0.3917 1.094784,-0.23738 2.147489,-0.82836 3.291727,-0.65017 1.427172,-0.0133 2.88112,0.3166 4.278808,-0.0747 3.599823,-0.74438 7.271139,-1.00051 10.90974,-1.48571 2.926465,-0.38872 5.889425,-0.41453 8.805833,-0.8953 1.949109,-0.2323 3.905967,-0.51878 5.858224,-0.65211 1.50231,0.21109 3.0061,0.39854 4.52635,0.32098 2.48251,-0.0408 4.96173,0.0321 7.43777,0.21531 1.45882,0.096 2.90154,-0.29146 4.35325,-0.40903 1.58251,-0.12013 3.17888,0.1023 4.76704,0.12176 1.83334,0.0609 3.67007,0.2653 5.49543,-0.011 2.01752,-0.14949 4.03265,-0.43514 6.05168,-0.4983 0.93657,0.0249 1.89334,0.15976 2.81732,0.11611 0.5173,-0.18172 1.02554,-0.55097 1.54811,-0.6237 0.76892,0.24892 1.52025,0.61821 2.34875,0.45915 1.47832,-0.0478 2.95665,-0.0955 4.43497,-0.1433 -0.0341,-0.66221 0.20067,-1.06269 0.90977,-1.00145 0.64658,-0.18189 1.28743,-0.16574 1.92236,0.0546 0.40618,0.0331 1.22072,0.45818 0.94284,0.89928 -0.61592,0.66985 0.0937,0.65567 0.66805,0.71127 0.7885,0.12951 1.57732,0.27145 2.35592,0.0106 0.85602,0.16257 0.0211,-1.06641 0.67613,-1.06701 0.71217,-0.17761 1.42454,-0.27438 2.13775,-0.0448 0.67444,-0.13188 0.71487,0.79523 0.64824,1.16384 -0.50703,0.20765 -1.2633,0.34017 -0.58191,0.90604 0.26832,0.53701 1.01337,0.044 1.4997,0.10993 0.91986,-0.11061 1.8422,-0.2983 2.74919,-0.007 1.40415,0.28592 2.85014,0.2091 4.27396,0.32451 1.18151,-0.24543 2.32339,-0.82256 3.55309,-0.66474 2.8,-0.0194 5.58476,0.31878 8.37969,0.39769 1.02941,-0.0102 2.05734,0.0161 3.08222,0.11806 0.62818,-0.33024 0.82733,-0.70163 -0.007,-0.81992 -0.70442,-0.039 -1.40885,-0.0781 -2.11328,-0.11709 0.39836,-0.22398 1.31164,0.011 1.33165,-0.55021 -0.11041,-0.60972 -0.95555,-0.28682 -1.41466,-0.29354 -0.54523,0.0524 -1.15189,0.21164 -1.42638,-0.39945 -0.28292,-0.56165 -0.85349,-0.60041 -1.41246,-0.66024 -0.62444,-0.14052 -1.41662,-0.10266 -1.9116,-0.46625 -0.47068,-0.81357 0.37483,-0.49918 0.90079,-0.45865 1.4997,0.1478 2.99528,0.45991 4.50408,0.24601 0.78886,-0.0499 1.57772,-0.0998 2.36659,-0.14966 -0.70429,-0.31414 -1.41374,-0.6032 -2.20099,-0.51538 -1.94322,-0.0848 -3.89533,-0.0356 -5.83202,-0.21863 -0.55554,-0.26045 -0.78635,-0.68341 -0.653,-1.28863 0.75306,0.0333 1.62399,-6.2e-4 2.37042,0.14509 0.41657,0.34019 0.79949,0.78268 1.39106,0.59063 1.76547,-0.0191 3.53724,-0.23933 5.29828,-0.1173 2.27065,0.2097 4.54008,0.50198 6.81149,0.66055 2.65447,-0.17864 5.31421,-0.43363 7.97468,-0.23553 1.77615,0.0394 3.55701,0.19469 5.32726,0.22663 0.68662,-0.2306 1.491,-0.25328 2.10046,-0.62009 0.34067,-0.53142 0.85261,-0.64934 1.44985,-0.56133 0.66161,-0.17557 0.30782,1.00484 0.83364,1.05345 1.15203,0.10821 2.30526,0.47218 3.45536,0.16894 0.61,-0.013 1.29846,-0.41414 1.80557,0.082 0.78802,0.49162 1.78614,0.44016 2.66601,0.69433 2.09075,0.44161 4.2427,0.4679 6.36358,0.69554 0.62674,0.20274 1.1355,-0.20735 1.67434,-0.46121 0.34023,-0.37001 0.39825,-1.19311 0.95303,-1.21866 0.85045,-0.0236 1.72531,-0.16736 2.56043,-0.1156 0.88368,0.45601 1.81458,0.87157 2.75626,1.1583 1.62178,-0.0936 3.2441,-0.24366 4.86287,-0.0273 1.89952,0.25718 3.7964,-0.12138 5.69441,-0.22579 2.83971,-0.28101 5.67941,-0.56216 8.49042,-1.06427 1.71663,-0.28107 3.45681,-0.51271 5.15169,-0.86884 0.36245,-0.34035 1.23824,-0.38305 1.12489,-0.99928 0.001,-0.54715 0.13657,-1.155 -0.4681,-1.4271 -0.58007,-0.45207 -1.10265,-0.9506 -1.38082,-1.64668 -0.19856,-0.5616 -0.62255,-0.90055 -1.1552,-1.13218 -0.58876,-0.15466 -0.56956,-0.80766 -0.77487,-1.27663 0.60281,-0.4518 1.07586,-1.17029 1.89901,-1.16924 0.54198,-0.11057 1.16177,-0.10081 1.38132,-0.70998 0.4539,-0.43281 0.57434,-0.90576 0.19983,-1.4383 -0.22241,-0.45556 0.0417,-1.23667 -0.62639,-1.32073 -0.66482,-0.13923 -0.9462,-0.47475 -0.61999,-1.12128 -0.0307,-0.71654 0.40694,-0.90048 1.05504,-0.84505 0.64751,-6.6e-4 1.25554,-0.12673 1.77556,-0.53231 0.94443,-0.57118 1.90012,-1.11718 2.98124,-1.38267 0.62531,-0.30735 0.9831,-1.02512 1.64668,-1.31885 1.03202,-0.66192 2.24716,-0.98005 3.35768,-1.49459 1.24963,-0.21533 2.54352,-0.28893 3.76496,-0.59449 0.81375,-0.35537 1.57793,-0.89156 2.4223,-1.13521 1.02119,-0.13823 2.12735,0.0537 3.03348,-0.5316 0.91366,-0.48525 1.87613,-0.82585 2.8998,-0.98505 0.14912,0.2497 0.74488,1.16907 -0.003,1.17027 -1.09464,0.39936 -2.2059,0.79186 -3.27885,1.21807 -0.94369,0.0481 -1.94288,-0.18426 -2.79271,0.33831 -1.24874,0.49839 -2.53132,0.96396 -3.54367,1.88378 -0.41821,0.38747 -0.9901,0.68716 -1.31337,1.12887 -0.0977,0.56897 -0.0339,1.21874 -0.59918,1.55383 -0.36731,0.50209 -1.03091,-0.0662 -1.54004,-0.0765 -0.70338,-0.10648 -1.39042,0.007 -2.00927,0.36522 -0.90327,0.43862 -1.81079,0.9504 -2.58003,1.58259 -0.12743,0.46848 -0.90329,0.97689 -0.4299,1.40838 0.43475,0.56729 0.90439,1.22087 1.67853,1.26311 0.73784,0.30079 1.55927,0.0815 2.30566,0.2171 0.49242,0.2503 0.94766,0.537 1.13453,1.08639 0.59458,1.14371 1.78991,1.81517 2.49016,2.89379 0.45919,0.4587 1.21642,0.63135 1.38428,1.33839 0.32941,0.87612 1.02951,1.57659 1.32476,2.45091 0.0973,0.62746 0.46482,1.27691 0.0547,1.86308 -0.3178,0.69059 -0.63178,1.42445 -1.04514,2.04598 -0.98223,0.60503 -1.92776,1.30807 -2.93237,1.85332 -0.60908,0.0795 -1.25171,0.0836 -1.66018,0.61435 -0.68106,0.59008 -1.50198,1.03431 -2.28923,1.44238 -2.36214,0.1906 -4.69803,0.57043 -7.02722,0.99857 -1.90204,0.33368 -3.82947,0.51537 -5.69258,1.04699 -1.25557,0.35058 -2.57859,0.0673 -3.866,0.1187 -2.69722,-0.0212 -5.39132,-0.1133 -8.0792,-0.34593 -0.59893,0.0691 -1.08939,-0.23196 -1.60476,-0.4701 -1.56969,-0.26193 -3.11277,-0.79478 -4.72088,-0.66953 -0.47159,0.2764 -1.17111,0.49579 -0.53892,1.04824 0.24844,0.58982 1.03941,0.5035 1.54336,0.77489 1.62659,0.52137 3.27604,1.0039 4.92241,1.44058 1.63538,0.0131 3.27076,0.0262 4.90614,0.0393 0.23412,0.24185 1.33712,0.65526 1.02698,0.78965 -1.41719,0.18329 -2.81643,0.68431 -4.25589,0.47358 -3.04506,-0.14605 -6.08125,-0.40015 -9.10962,-0.74949 -1.27671,-0.081 -2.55757,-0.33256 -3.83343,-0.2832 -0.59935,0.0705 -1.19869,0.14098 -1.79804,0.21148 0.60409,0.58507 1.34559,1.06143 2.16445,1.24336 1.79863,0.12118 3.60472,0.17215 5.40276,0.18416 0.34675,0.21605 1.57245,0.0751 1.10066,0.6236 -0.40673,0.26683 -1.05148,0.17676 -1.53646,0.37268 -0.91361,0.24802 -1.83263,0.44035 -2.7826,0.31392 -1.78448,-0.11094 -3.60755,0.0146 -5.36003,-0.34385 -0.7513,-0.3717 -1.47353,-0.85872 -2.24262,-1.15987 -0.77172,0 -1.54344,0 -2.31516,0 0.0171,0.58452 0.10253,1.1173 0.77941,1.20142 1.20162,0.49948 2.43862,1.28685 3.79017,0.91829 0.84338,-0.16082 1.63419,0.44163 2.49522,0.28529 2.26578,0.0955 4.51036,-0.37949 6.75994,-0.49674 1.01132,0.26088 2.09716,0.39462 3.06246,0.73399 0.48317,0.29216 0.46046,1.21122 -0.24643,1.00908 -1.80003,0.12941 -3.60965,0.31912 -5.41315,0.25566 -0.66253,-0.047 -1.32507,-0.094 -1.98761,-0.14099 1.33074,0.27023 2.65079,0.67417 3.98833,0.85945 1.1865,-0.0554 2.38337,-0.19845 3.56354,-0.20018 1.82907,0.55039 3.66266,1.14942 5.57838,1.29121 4.72482,0.65481 9.4788,1.05115 14.21946,1.5647 3.69855,0.44764 7.38484,1.01306 11.09158,1.38187 1.87537,0.16685 3.76828,0.26096 5.63272,0.47309 0.66364,0.3144 1.41977,0.51639 2.02828,0.89777 0.34057,0.40341 0.50181,1.19187 1.16754,0.89712 1.35328,-0.15489 2.72462,-0.21914 4.01175,-0.70606 1.44223,-0.36899 2.84704,-0.92875 4.31423,-1.1705 2.96155,-0.28134 5.91178,-0.74115 8.89353,-0.71224 5.30495,-0.0415 10.60549,-0.25493 15.90667,-0.44324 0.65405,0.0831 1.327,0.3129 1.96949,0.30643 1.12247,-0.43579 2.14033,-1.23642 3.37741,-1.27239 2.63,-0.29681 5.25314,-0.69353 7.88745,-0.92743 3.80598,-0.0813 7.61719,-0.0683 11.41986,-0.2091 2.82893,-0.27184 5.65786,-0.54367 8.48678,-0.81551 0.26018,-0.3001 1.28648,-0.68267 1.03871,-0.9281 -0.46628,-0.25564 -1.2017,-0.28151 -1.16959,-0.96267 0.0523,-0.70968 -0.66688,-0.67071 -1.16534,-0.84592 -1.76008,-0.0915 -3.54818,3.3e-4 -5.31837,-0.003 -1.30495,0.13536 -2.61008,0.20556 -3.91586,0.0384 -2.03803,-0.18882 -4.08034,-0.25764 -6.12656,-0.21718 0.0975,-0.48702 -0.28636,-1.27875 0.40151,-1.39211 1.49231,-0.69701 2.94544,-1.49538 4.56147,-1.87234 1.14955,-0.33159 2.27201,-0.80918 3.48974,-0.77333 1.70034,-0.0406 3.30399,-0.68738 4.95597,-1.03117 3.06207,-0.48316 6.15589,-0.79732 9.23026,-1.21506 2.0799,-0.25678 4.1373,-0.73451 6.22044,-0.92699 2.26184,-0.0391 4.53188,0.0805 6.78826,-0.0641 1.47117,-0.18367 2.9892,-0.24774 4.43144,-0.50521 0.92582,-0.66579 1.8111,-1.41622 2.762,-2.02965 1.98431,-0.50635 3.96861,-1.0127 5.95291,-1.51904 -0.60603,-0.20396 -1.1818,-0.70607 -1.83981,-0.39784 -0.94656,0.14142 -1.88869,0.5577 -2.84255,0.24757 -0.34481,-0.13236 -1.65797,-0.057 -0.815,-0.44415 0.6357,-0.43135 1.24447,-0.92585 2.04275,-0.97613 1.03235,-0.25881 2.10535,-0.26461 3.15762,-0.39943 0.37326,-0.39957 0.69366,-0.89504 1.30672,-0.8597 1.62715,-0.34994 3.32418,-0.53484 4.88156,-1.10259 0.74608,-0.41423 0.38446,-0.67719 -0.25268,-0.90252 -0.48361,-0.25586 -1.12287,-0.39951 -1.01861,-1.07919 0.47309,0.0395 1.21636,-0.53469 1.44044,0.0703 0.17142,0.67014 0.87826,0.36298 1.37459,0.30951 1.02446,-0.39022 2.02685,-0.94178 3.09611,-1.14948 0.61838,-0.006 1.01816,0.34243 1.31694,0.8545 0.3494,0.3687 0.55784,1.08649 1.18471,0.76802 0.62508,-0.089 1.25015,-0.17791 1.87523,-0.26687 0.10605,-0.55485 0.24786,-1.08699 0.78607,-1.36737 0.59657,-0.61615 1.54125,-0.56823 2.30491,-0.86563 0.31117,0.2029 1.44201,0.36496 1.2147,0.59469 -0.4515,0.27706 -1.16812,0.34446 -1.12226,1.01482 0.31424,0.15984 1.0819,-0.0797 1.5719,-0.0747 1.88547,-0.30507 3.7852,0.009 5.67887,0.0592 1.32987,0.0865 2.65987,-0.0975 3.98979,-0.133 0.44069,0.22283 0.75995,0.94678 1.29018,0.80007 1.51915,-0.26919 2.94598,-0.91436 4.4962,-1.02067 4.0511,-0.62529 8.12172,-1.13184 12.16652,-1.79033 1.34791,-0.22443 2.67818,-0.62702 4.03751,-0.73608 0.60792,0.0656 1.29539,-0.13169 1.8535,0.0985 0.89025,0.49843 1.63192,1.35564 2.69719,1.43148 0.71689,0.25536 1.43709,0.13176 2.15767,-0.0359 1.08937,-0.0133 1.80995,-1.15558 2.92029,-1.01148 3.5453,-0.14112 7.09053,-0.35885 10.63508,-0.46852 2.05181,0.0889 4.11188,0.0861 6.13732,0.46721 1.70797,0.19053 3.40156,0.58605 5.1195,0.63465 2.39512,0.10823 4.75299,-0.39469 7.12881,-0.6169 3.60484,-0.41619 7.21972,-0.79466 10.7995,-1.38577 1.35806,-0.32079 2.73289,-0.55043 4.11374,-0.74733 0.34289,-0.62971 0.76679,-1.18301 1.40537,-1.53388 0.5438,-0.48936 1.35573,-0.22748 2.02862,-0.35513 0.49079,0.47054 0.87765,1.1095 1.61576,1.17923 1.1521,0.22106 1.92402,1.37728 3.14042,1.3559 0.6178,0.0502 0.99981,-0.77323 1.66627,-0.68908 0.46158,-0.16627 1.23219,-0.15826 1.00733,0.43706 -0.79451,0.1857 -0.81458,0.37414 -0.007,0.55407 0.52567,0.34895 0.9688,0.18933 1.26773,-0.34057 0.63697,-0.43422 0.2288,0.52158 0.28232,0.9014 0.83434,-0.24591 1.66999,-0.48736 2.505,-0.73099 0.13933,-0.568 0.27867,-1.136 0.418,-1.70401 1.74889,-0.4189 3.53623,-0.72959 5.26096,-1.21646 0.64472,-0.31676 1.25968,-0.74739 2.01379,-0.64565 0.98343,-0.0921 2.01159,-0.005 2.96685,-0.21 0.66451,-0.33251 1.32033,-0.69996 2.08997,-0.61044 0.62347,-0.0285 1.24695,-0.057 1.87043,-0.0854 0.1426,-0.4795 0.17538,-0.83438 0.91309,-0.7732 0.54929,0.0802 1.23761,-0.007 1.24099,0.73144 0.73898,0.45472 1.53071,-0.0528 2.29958,-0.17192 0.58723,-0.16451 1.19312,-0.24083 1.79136,-0.35331 -0.36793,-0.27164 -1.36215,-0.277 -1.2167,-0.81811 0.32949,-0.26818 1.01599,-0.10056 1.4797,-0.2049 0.74605,0.13024 1.53509,0.10669 2.20899,0.495 0.81342,0.0804 0.80557,-0.56472 0.099,-0.792 -0.20268,-0.62409 0.37469,-0.89145 0.89496,-0.96205 1.62387,-0.34137 3.25234,-0.7233 4.89485,-0.94984 1.77101,-0.15855 3.54373,-0.1562 5.31757,-0.0476 0.82632,0.0953 1.53753,0.66529 2.31693,0.95407 0.72864,0.30914 1.58395,0.0174 2.34171,0.30041 0.29713,0.78168 -0.94028,0.10798 -0.97753,0.72898 -0.10074,0.45842 0.95993,0.21145 1.33503,0.38086 2.90884,0.3886 5.81503,0.8002 8.74678,0.97321 1.28261,0.0593 2.56247,0.28489 3.83989,0.31039 1.60317,-0.29129 3.20924,0.0592 4.81418,0.16072 2.19448,0.19398 4.38509,0.47321 6.59254,0.38184 0.97469,0 1.94938,0 2.92407,0 0.42804,0.37995 0.8367,0.77011 0.81703,1.38581 0.20766,0.61189 -0.45611,1.06928 -0.65999,1.60821 -0.52434,0.22988 -0.84492,0.62403 -0.95727,1.18602 -0.0963,0.52169 -0.84912,0.82256 -1.27574,0.50463 -0.45937,-0.40253 -0.97798,-0.0228 -1.38282,0.25105 -0.23572,0.406 -1.08635,1.01091 -0.16606,1.04299 0.68913,0.19333 1.51608,0.62238 2.11984,0.0202 0.40218,-0.55837 1.18731,0.15509 0.50158,0.51016 -0.29108,0.52692 -0.72246,0.77473 -1.32618,0.67968 -0.70048,-0.0429 -1.10513,0.69324 -1.66505,1.0205 -0.52191,0.17482 -0.66741,1.01699 -0.30132,1.29356 0.8836,0.30077 1.73666,0.77466 2.69935,0.62718 0.89843,-0.065 1.87898,0.21792 2.65688,-0.35761 1.19302,-0.48573 2.10957,-1.4188 3.08025,-2.23486 0.76586,-0.70383 1.37995,-1.6181 2.40242,-1.96611 1.1247,-0.54831 2.41009,-0.66254 3.60322,-1.02601 1.54134,-0.30942 2.98133,-1.05383 4.57427,-1.08114 0.96144,-0.13104 1.98319,-0.0557 2.81185,-0.64118 0.7376,-0.32311 1.4338,-0.70367 1.94066,-1.34699 0.51811,-0.55476 1.38946,-0.51803 2.06332,-0.812 2.06755,-0.62192 4.15526,-1.1941 6.20031,-1.87548 2.8152,-0.1855 5.61118,-0.64192 8.42072,-0.83956 1.19491,0.0269 2.41077,0.16325 3.59276,0.12246 0.4367,-0.29042 1.22985,-0.28098 1.23334,-0.93585 0.18418,-0.45409 0.46274,-1.08099 1.03376,-1.07736 0.39023,0.36419 0.62799,1.00603 0.83089,1.5397 2.5761,-0.18048 5.14958,-0.43433 7.73514,-0.35 2.71824,0.0598 5.43618,-0.12066 8.15046,-0.15234 1.41318,0.11763 2.82521,0.46755 4.24034,0.18997 0.7464,-0.086 1.55728,-0.12304 2.26754,0.0949 0.46736,0.27844 0.93847,0.72996 1.38762,0.16803 1.0128,-0.7148 2.2546,-0.97843 3.37888,-1.47359 1.3495,-0.17946 2.71988,-0.32343 4.07505,-0.30319 0.76438,0.18283 1.52878,0.3644 2.30485,0.13256 1.14563,0.0609 2.28517,0.41309 3.42847,0.58588 1.58224,0.19931 3.1806,0.36916 4.77561,0.41575 0.77054,-0.0847 1.29421,0.7482 2.0897,0.64596 1.54339,0.0214 3.11175,-0.0845 4.55888,-0.67288 0.44303,0.006 -0.066,-0.99496 0.74541,-0.87912 0.96185,-0.0775 1.92691,-0.23149 2.88666,-0.14474 0.76027,-0.11956 1.52164,-0.45535 2.28122,-0.43994 0.65344,0.19009 1.37323,0.26146 1.98702,0.52249 0.4304,0.28653 0.69103,0.95971 1.17542,1.04662 1.22124,-0.0371 2.48287,-0.3661 3.65422,0.12301 1.09306,0.43772 2.20498,0.80512 3.38045,0.93547 0.79702,0.17528 1.59541,0.30269 2.40295,0.1127 2.68419,-0.40405 5.42108,-0.2694 8.08863,-0.80137 2.02169,-0.12156 4.0376,0.11156 6.04949,0.29579 0.37552,-0.40273 0.69169,-0.92884 1.32216,-0.80154 0.51722,0.0147 1.13309,-0.18998 1.59166,-0.0448 0.37874,0.32201 0.52728,1.07271 1.07511,1.07982 1.5477,0.10183 3.09539,0.20366 4.64309,0.3055 0.47108,-0.48737 0.75106,-1.25571 1.51038,-1.31928 0.76539,-0.2785 1.53869,-0.50503 2.36178,-0.40439 1.6664,-0.0176 3.34801,0.0494 5.00499,-0.0205 0.82702,-0.45637 1.77589,-0.11756 2.66881,-0.14387 -0.21069,-0.72746 -0.55653,-1.43916 -0.37799,-2.21198 0.47153,-0.006 1.17819,-0.66817 1.43241,-0.0665 0.19153,0.45355 0.95605,0.89019 0.44314,1.36452 -0.5078,0.5543 -0.41148,0.86554 0.35308,0.90791 1.73069,0.33674 3.4718,0.59917 5.23621,0.66207 2.84152,0.23647 5.70016,0.33597 8.53531,0.59307 1.4778,0.38207 2.999,0.88533 4.53569,0.54175 1.11793,-0.0214 2.20451,0.60183 3.33846,0.34079 0.6182,-0.0775 1.23698,-0.15907 1.7947,0.18641 -0.43303,0.28639 -0.87669,0.99816 -0.0298,0.94687 0.99745,0.14977 2.01063,0.24682 2.89576,0.77313 0.90202,-0.0447 1.80404,-0.0893 2.70606,-0.134 0.19577,0.62244 0.75989,0.71862 1.33173,0.80379 1.62744,0.19598 3.26131,0.35244 4.89123,0.53321 -0.41141,0.63468 0.3891,0.83525 0.888,0.75633 1.82346,-0.13611 3.64421,-0.0144 5.46502,0.10165 -0.17192,-0.52242 -0.59596,-1.20205 0.28741,-1.06646 0.46064,0.11813 1.01339,0.36477 1.1231,0.89652 0.23363,0.46783 0.9583,0.35773 1.41493,0.54384 1.15435,0.15566 2.2984,0.65785 3.46635,0.35611 0.82839,-0.0939 1.66577,-0.34921 2.46943,4.3e-4 1.72672,0.47748 3.53611,0.74861 5.17477,1.48481 0.64447,0.29832 1.23341,0.81669 1.98873,0.67582 0.52041,-0.0315 1.02727,0.0243 1.50806,0.19643 0.86648,0.009 1.87169,-0.29957 2.56815,0.37296 0.38231,0.32608 0.915,0.30486 1.38506,0.38655 0.2115,-0.51949 0.96129,-0.14369 1.4122,-0.28485 1.18182,-0.0668 2.33169,0.33278 3.51668,0.34213 1.53034,0.16804 3.10398,0.21852 4.60763,0.45905 0.7488,0.75733 1.88756,0.54759 2.81301,0.92185 0.85183,0.26994 1.70367,0.53987 2.55551,0.80981 0.33595,-0.51706 1.02563,-0.27842 1.23018,0.22377 0.54138,0.51383 -0.64483,0.4619 -0.97563,0.58254 -0.50711,-0.18156 -1.29545,0.58965 -0.55555,0.70824 0.68603,-0.22907 0.37715,0.92147 -0.1092,0.67371 -0.29981,0.28738 -0.74331,0.68647 -1.15105,0.93527 -0.54026,0.0771 -1.06817,0.36127 -1.05426,0.97072 -0.43752,0.17732 -1.09675,0.0873 -1.61954,0.16176 -0.738,-0.14298 -1.47656,-0.33957 -2.2102,-0.0647 -1.87385,0.34584 -3.73673,0.73509 -5.55008,1.3287 -0.20243,0.22846 0.73364,0.70669 0.98607,1.03494 0.11529,0.27159 -0.99193,0.16232 -1.37096,0.27991 -0.75613,0.17434 -1.50282,-0.44573 -2.23507,-0.0434 -0.22743,0.40547 -0.22601,0.92736 -1.00436,0.73928 -0.47991,0.0932 -1.25979,-0.028 -1.55367,0.19812 -0.0348,0.63901 0.83581,0.70652 1.02269,1.14774 0.11163,0.73129 -0.5145,0.67736 -0.87095,1.13773 0.027,0.3199 0.74445,0.66834 0.54014,1.26207 -0.44615,0.33741 -1.06524,0.54186 -0.12061,0.73558 0.65587,-0.0236 1.53312,-0.007 1.82254,0.69868 0.0664,0.6707 0.32753,0.94173 1.00477,0.67107 0.61996,-0.29018 0.87606,0.44586 1.27552,0.77755 0.6588,0.25042 1.49371,0.16019 2.15103,0.41751 0.46397,0.53813 1.29789,0.39026 1.9294,0.61771 0.53605,0.11142 1.4577,0.26226 0.39682,0.21046 -2.21116,0.0159 -4.4438,-0.0724 -6.63624,0.21831 -1.0378,0.23177 -2.06429,0.58789 -3.13962,0.40691 -1.00821,-0.10849 -1.95933,0.3702 -2.95324,0.49182 -0.50533,0.0666 -1.05275,-0.33206 -1.529,-0.23738 -0.87434,0.39046 0.0168,0.58604 0.48746,0.82803 0.25153,0.34152 -0.72795,0.64578 -1.09307,0.764 -0.5847,0.41954 -1.16587,0.84708 -1.90635,0.91455 -0.58666,0.14359 -1.17332,0.28718 -1.75997,0.43077 0.37463,0.53192 0.983,0.35667 1.53981,0.33739 0.84123,-0.0202 1.83104,-0.24162 2.51648,0.33025 0.091,0.61352 1.2077,0.28515 1.09548,0.99804 0.055,0.44509 0.0792,1.22539 0.71877,1.08196 1.32215,0.15696 2.69293,0.0775 3.93373,0.63002 2.34797,0.86205 4.84598,1.16986 7.25827,1.80354 1.56123,0.32141 3.09032,0.87785 4.70345,0.81981 0.4127,0.0108 1.49219,0.23301 0.60568,0.44561 -0.63128,0.14564 -1.33731,0.0761 -1.87668,0.48637 1.191,0.22662 2.36514,-0.14595 3.54806,-0.1902 0.60156,0.051 1.21427,0.0999 1.80894,0.1522 z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { IWeather } from \"../../../../../interfaces/weather_interface\";\nimport \"./mapLocation.scss\";\n\nexport const MapLocation = ({\n\tlocation,\n\tindex,\n\tsetIsActiveLocation,\n\tisActiveLocation,\n}: {\n\tlocation: IWeather;\n\tindex: number;\n\tsetIsActiveLocation: React.Dispatch<React.SetStateAction<number | undefined>>;\n\tisActiveLocation: number | undefined;\n}) => {\n\tconsole.log(location);\n\tconst [latitide, setLatitude] = useState(0);\n\tconst [longitude, setLongitude] = useState(0);\n\tuseEffect(() => {\n\t\tsetLatitude(50 - (location.latitude * 50) / 90);\n\t\tsetLongitude(50 + (location.longitude * 50) / 180);\n\t}, [location]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"location\"\n\t\t\tstyle={{ top: `${latitide}%`, left: `${longitude}%` }}\n\t\t\ttitle={location.resolvedAddress}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={`location_marker ${isActiveLocation === index ? \"isActiveLocation\" : \"\"}`}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetIsActiveLocation((prev) => (prev !== undefined && index === prev ? undefined : index));\n\t\t\t\t}}\n\t\t\t></div>\n\t\t\t{isActiveLocation === index && (\n\t\t\t\t<div className={`location_pin`} onClick={() => setIsActiveLocation(undefined)}></div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { IIconType, IWeather } from \"../../../../../interfaces/weather_interface\";\nimport { addressHandler } from \"../../../../../utils/addressHandler\";\nimport { CurrentConditionIcon } from \"../../current_condition_icon/CurrentConditionIcon\";\nimport \"./mapAdress.scss\";\nimport { WeatherIcon } from \"../../WeatherIcon\";\n\nexport const MapAddress = ({\n\tlocation,\n\tindex,\n\tsetIsActiveLocation,\n\tisActiveLocation,\n}: {\n\tlocation: IWeather;\n\tindex: number;\n\tsetIsActiveLocation: React.Dispatch<React.SetStateAction<number | undefined>>;\n\tisActiveLocation: number | undefined;\n}) => {\n\tconst { cityName, country } = addressHandler(location.resolvedAddress);\n\treturn (\n\t\t<div className={`map-address ${isActiveLocation === index ? \"isActiveAddress\" : \"\"}`}>\n\t\t\t<div className=\"map-address_description\">\n\t\t\t\t<div className=\"map-address_description_location-address\">\n\t\t\t\t\t<span>{cityName}</span>,<span>{country}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"map-address_description_forecast\">\n\t\t\t\t\t<div className=\"map-address_description_forecast_temp\">\n\t\t\t\t\t\t{location.currentConditions.temp}\n\t\t\t\t\t\t<span>°C</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"map-address_description_forecast_icon\">\n\t\t\t\t\t\t<WeatherIcon condition={location.currentConditions.icon as IIconType} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={`map-address_border ${isActiveLocation === index ? \"isActiveBorder\" : \"\"}`}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetIsActiveLocation((prev) => (prev !== undefined && index === prev ? undefined : index));\n\t\t\t\t}}\n\t\t\t></div>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport \"./map.scss\";\nimport { WorldMap } from \"../../../../assets/icons/WorldMap\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../../../redux/store\";\nimport { MapLocation } from \"./map_components/MapLocation\";\nimport { MapAddress } from \"./map_components/MapAddress\";\n\nexport const Map = () => {\n\tconst forecasts = useSelector((state: RootStore) => state.forecastsReducer);\n\tconst [isActiveLocation, setIsActiveLocation] = useState<number | undefined>(undefined);\n\tconsole.log(isActiveLocation);\n\treturn (\n\t\t<div className=\"map\">\n\t\t\t<div className=\"map_container\">\n\t\t\t\t<WorldMap />\n\t\t\t\t{forecasts.map((location, index) => (\n\t\t\t\t\t<MapLocation\n\t\t\t\t\t\tkey={location.address}\n\t\t\t\t\t\tlocation={location}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tisActiveLocation={isActiveLocation}\n\t\t\t\t\t\tsetIsActiveLocation={setIsActiveLocation}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"map_location\">\n\t\t\t\t{forecasts.map((location, index) => (\n\t\t\t\t\t<MapAddress\n\t\t\t\t\t\tlocation={location}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tisActiveLocation={isActiveLocation}\n\t\t\t\t\t\tsetIsActiveLocation={setIsActiveLocation}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from \"react\";\nimport { CitySearch } from \"../../components/CitySearch\";\nimport { GeolocationSearch } from \"../../components/GeolocationSearch\";\nimport { ForecastPage } from \"./ForecastPage\";\nimport { locationsContext } from \"../../App\";\nimport \"./weatherPage.scss\";\nimport { MapBtn } from \"./components/buttons/MapBtn\";\nimport { ArrowBtn } from \"./components/buttons/ArrowBtn\";\nimport { Map } from \"./components/map/Map\";\n\nexport const WeatherPage = () => {\n\tconst { locations } = useContext(locationsContext);\n\tconst [isMap, setIsMap] = useState<boolean>(false);\n\tconst [translate, setTranslate] = useState(0);\n\tconst [paginationCounter, setPaginationCounter] = useState(0);\n\n\treturn (\n\t\t<div className=\"weather\">\n\t\t\t<header className=\"weather_header\">\n\t\t\t\t<CitySearch />\n\t\t\t\t<GeolocationSearch />\n\t\t\t\t<MapBtn setIsMap={setIsMap} />\n\t\t\t</header>\n\t\t\t<main className=\"main\">\n\t\t\t\t<ArrowBtn\n\t\t\t\t\tdirection=\"left\"\n\t\t\t\t\tsetTranslate={setTranslate}\n\t\t\t\t\tcounter={paginationCounter}\n\t\t\t\t\tsetCounter={setPaginationCounter}\n\t\t\t\t/>\n\t\t\t\t<div className=\"weather_container\">\n\t\t\t\t\t<div className=\"weather_forecast\" style={{ transform: `translateX(${translate}px)` }}>\n\t\t\t\t\t\t{locations.map((city, index) => (\n\t\t\t\t\t\t\t<ForecastPage city={city} key={index} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ArrowBtn\n\t\t\t\t\tdirection=\"right\"\n\t\t\t\t\tsetTranslate={setTranslate}\n\t\t\t\t\tcounter={paginationCounter}\n\t\t\t\t\tsetCounter={setPaginationCounter}\n\t\t\t\t/>\n\t\t\t\t{isMap && <Map />}\n\t\t\t\t<div className=\"pagination-dots\">\n\t\t\t\t\t{locations.map((location, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`pagination-dots_dot ${index === paginationCounter ? \"active-dot\" : \"\"}`}\n\t\t\t\t\t\t\tkey={location}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { SplashPage } from \"./pages/SplashPage\";\nimport { useLocalStorage } from \"./hooks/useLocalStorage\";\nimport { WeatherPage } from \"./pages/weather_page/WeatherPage\";\nimport { createContext } from \"react\";\n\nexport const locationsContext = createContext({\n\tlocations: [],\n\tsetLocations: (newValue: any) => {},\n});\n\nfunction App() {\n\tconst [locations, setLocations] = useLocalStorage([]);\n\treturn (\n\t\t<div className=\"App night\">\n\t\t\t<locationsContext.Provider value={{ locations, setLocations }}>\n\t\t\t\t{locations.length > 0 ? <WeatherPage /> : <SplashPage />}\n\t\t\t</locationsContext.Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { weatherApi } from \"./api\";\nimport { forecastsReducer } from \"./forecastsSlice\";\nexport const store = configureStore({\n\treducer: { forecastsReducer, [weatherApi.reducerPath]: weatherApi.reducer },\n\tmiddleware: (gDM) => gDM().concat(weatherApi.middleware),\n});\nexport type RootStore = ReturnType<typeof store.getState>;\n","import { formatProdErrorMessage as _formatProdErrorMessage7 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage6 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Reducer, ReducersMapObject, Middleware, Action, StoreEnhancer, Store, UnknownAction } from 'redux';\nimport { applyMiddleware, createStore, compose, combineReducers, isPlainObject } from 'redux';\nimport type { DevToolsEnhancerOptions as DevToolsOptions } from './devtoolsExtension';\nimport { composeWithDevTools } from './devtoolsExtension';\nimport type { ThunkMiddlewareFor, GetDefaultMiddleware } from './getDefaultMiddleware';\nimport { buildGetDefaultMiddleware } from './getDefaultMiddleware';\nimport type { ExtractDispatchExtensions, ExtractStoreExtensions, ExtractStateExtensions, UnknownIfNonSpecific } from './tsHelpers';\nimport type { Tuple } from './utils';\nimport type { GetDefaultEnhancers } from './getDefaultEnhancers';\nimport { buildGetDefaultEnhancers } from './getDefaultEnhancers';\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production';\n/**\n * Options for `configureStore()`.\n *\n * @public\n */\n\nexport interface ConfigureStoreOptions<S = any, A extends Action = UnknownAction, M extends Tuple<Middlewares<S>> = Tuple<Middlewares<S>>, E extends Tuple<Enhancers> = Tuple<Enhancers>, P = S> {\n  /**\n   * A single reducer function that will be used as the root reducer, or an\n   * object of slice reducers that will be passed to `combineReducers()`.\n   */\n  reducer: Reducer<S, A, P> | ReducersMapObject<S, A, P>;\n  /**\n   * An array of Redux middleware to install, or a callback receiving `getDefaultMiddleware` and returning a Tuple of middleware.\n   * If not supplied, defaults to the set of middleware returned by `getDefaultMiddleware()`.\n   *\n   * @example `middleware: (gDM) => gDM().concat(logger, apiMiddleware, yourCustomMiddleware)`\n   * @see https://redux-toolkit.js.org/api/getDefaultMiddleware#intended-usage\n   */\n\n  middleware?: (getDefaultMiddleware: GetDefaultMiddleware<S>) => M;\n  /**\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\n   *\n   * Additional configuration can be done by passing Redux DevTools options\n   */\n\n  devTools?: boolean | DevToolsOptions;\n  /**\n   * The initial state, same as Redux's createStore.\n   * You may optionally specify it to hydrate the state\n   * from the server in universal apps, or to restore a previously serialized\n   * user session. If you use `combineReducers()` to produce the root reducer\n   * function (either directly or indirectly by passing an object as `reducer`),\n   * this must be an object with the same shape as the reducer map keys.\n   */\n  // we infer here, and instead complain if the reducer doesn't match\n\n  preloadedState?: P;\n  /**\n   * The store enhancers to apply. See Redux's `createStore()`.\n   * All enhancers will be included before the DevTools Extension enhancer.\n   * If you need to customize the order of enhancers, supply a callback\n   * function that will receive a `getDefaultEnhancers` function that returns a Tuple,\n   * and should return a Tuple of enhancers (such as `getDefaultEnhancers().concat(offline)`).\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\n   */\n\n  enhancers?: (getDefaultEnhancers: GetDefaultEnhancers<M>) => E;\n}\nexport type Middlewares<S> = ReadonlyArray<Middleware<{}, S>>;\ntype Enhancers = ReadonlyArray<StoreEnhancer>;\n/**\n * A Redux store returned by `configureStore()`. Supports dispatching\n * side-effectful _thunks_ in addition to plain actions.\n *\n * @public\n */\n\nexport type EnhancedStore<S = any, A extends Action = UnknownAction, E extends Enhancers = Enhancers> = ExtractStoreExtensions<E> & Store<S, A, UnknownIfNonSpecific<ExtractStateExtensions<E>>>;\n/**\n * A friendly abstraction over the standard Redux `createStore()` function.\n *\n * @param options The store configuration.\n * @returns A configured Redux store.\n *\n * @public\n */\n\nexport function configureStore<S = any, A extends Action = UnknownAction, M extends Tuple<Middlewares<S>> = Tuple<[ThunkMiddlewareFor<S>]>, E extends Tuple<Enhancers> = Tuple<[StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>, StoreEnhancer]>, P = S>(options: ConfigureStoreOptions<S, A, M, E, P>): EnhancedStore<S, A, E> {\n  const getDefaultMiddleware = buildGetDefaultMiddleware<S>();\n  const {\n    reducer = undefined,\n    middleware,\n    devTools = true,\n    preloadedState = undefined,\n    enhancers = undefined\n  } = options || {};\n  let rootReducer: Reducer<S, A, P>;\n\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = ((combineReducers(reducer) as unknown) as Reducer<S, A, P>);\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(1) : '`reducer` is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\n  }\n\n  if (!IS_PRODUCTION && middleware && typeof middleware !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(2) : '`middleware` field must be a callback');\n  }\n\n  let finalMiddleware: Tuple<Middlewares<S>>;\n\n  if (typeof middleware === 'function') {\n    finalMiddleware = middleware(getDefaultMiddleware);\n\n    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(3) : 'when using a middleware builder function, an array of middleware must be returned');\n    }\n  } else {\n    finalMiddleware = getDefaultMiddleware();\n  }\n\n  if (!IS_PRODUCTION && finalMiddleware.some((item: any) => typeof item !== 'function')) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(4) : 'each middleware provided to configureStore must be a function');\n  }\n\n  let finalCompose = compose;\n\n  if (devTools) {\n    finalCompose = composeWithDevTools({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION,\n      ...(typeof devTools === 'object' && devTools)\n    });\n  }\n\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware);\n  const getDefaultEnhancers = buildGetDefaultEnhancers<M>(middlewareEnhancer);\n\n  if (!IS_PRODUCTION && enhancers && typeof enhancers !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(5) : '`enhancers` field must be a callback');\n  }\n\n  let storeEnhancers = typeof enhancers === 'function' ? enhancers(getDefaultEnhancers) : getDefaultEnhancers();\n\n  if (!IS_PRODUCTION && !Array.isArray(storeEnhancers)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(6) : '`enhancers` callback must return an array');\n  }\n\n  if (!IS_PRODUCTION && storeEnhancers.some((item: any) => typeof item !== 'function')) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(7) : 'each enhancer provided to configureStore must be a function');\n  }\n\n  if (!IS_PRODUCTION && finalMiddleware.length && !storeEnhancers.includes(middlewareEnhancer)) {\n    console.error('middlewares were provided, but middleware enhancer was not included in final enhancers - make sure to call `getDefaultEnhancers`');\n  }\n\n  const composedEnhancer: StoreEnhancer<any> = finalCompose(...storeEnhancers);\n  return createStore(rootReducer, (preloadedState as P), composedEnhancer);\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport compose from './compose';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\nimport { StoreEnhancer, Dispatch } from './types/store';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns A store enhancer applying the middleware.\n *\n * @template Ext Dispatch signature added by a middleware.\n * @template S The type of the state supported by a middleware.\n */\nexport default function applyMiddleware(): StoreEnhancer;\nexport default function applyMiddleware<Ext1, S>(middleware1: Middleware<Ext1, S, any>): StoreEnhancer<{\n  dispatch: Ext1;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, Ext5, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>, middleware5: Middleware<Ext5, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4 & Ext5;\n}>;\nexport default function applyMiddleware<Ext, S = any>(...middlewares: Middleware<any, S, any>[]): StoreEnhancer<{\n  dispatch: Ext;\n}>;\nexport default function applyMiddleware(...middlewares: Middleware[]): StoreEnhancer<any> {\n  return createStore => (reducer, preloadedState) => {\n    const store = createStore(reducer, preloadedState);\n    let dispatch: Dispatch = () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n    };\n    const middlewareAPI: MiddlewareAPI = {\n      getState: store.getState,\n      dispatch: (action, ...args) => dispatch(action, ...args)\n    };\n    const chain = middlewares.map(middleware => middleware(middlewareAPI));\n    dispatch = compose<typeof dispatch>(...chain)(store.dispatch);\n    return {\n      ...store,\n      dispatch\n    };\n  };\n}","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement);\nroot.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>\n);\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","exports","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","useSyncExternalStoreWithSelector","hasValue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","getOwnPropertyNames","definition","o","prop","toStringTag","CitySearch","locations","setLocations","locationsContext","_jsx","className","onChange","onKeyDown","prev","LocationIcon","xmlns","viewBox","fill","GeolocationSearch","success","position","latitude","coords","longitude","fetch","response","json","address","city","geolocation","getCurrentPosition","_jsxs","World","SplashPage","STORAGE_KEY","formatProdErrorMessage","symbol_observable_default","observable","randomString","actionTypes_default","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","createStore","reducer","preloadedState","enhancer","currentReducer","currentState","currentListeners","nextListeners","listenerIdCounter","isDispatching","ensureCanMutateNextListeners","getState","subscribe","isSubscribed","listenerId","replaceReducer","nextReducer","outerSubscribe","observer","observeState","observerAsObserver","unsubscribe","combineReducers","reducers","reducerKeys","finalReducers","i","process","finalReducerKeys","shapeAssertionError","assertReducerShape","hasChanged","nextState","previousStateForKey","nextStateForKey","compose","_len2","funcs","_key2","arg","reduce","isAction","_typeof","toPropertyKey","toPrimitive","TypeError","Number","writable","NOTHING","DRAFTABLE","DRAFT_STATE","die","isDraft","isDraftable","_value$constructor","isMap","isSet","objectCtorString","Ctor","Function","each","iter","getArchtype","entries","_ref","entry","thing","type_","propOrOldValue","latest","copy_","base_","shallowCopy","strict","descriptors","getOwnPropertyDescriptors","ownKeys","desc","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","_key","currentScope","plugins","getPlugin","pluginKey","plugin","loadPlugin","getCurrentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer2","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","path","childValue","finalizeProperty","scope_","finalized_","resultEach","isSet2","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","autoFreeze_","objectTraps","_desc$get","getDescriptorFromProto","draft_","readPropFromProto","peek","prepareCopy","createProxy","current2","markChanged","deleteProperty","owner","setPrototypeOf","arrayTraps","useStrictShallowCopy_","fn","parent","proxyMap_","proxySet_","isManual_","traps","revoke","proxy","Proxy","revocable","createProxyProxy","currentImpl","copy","enablePatches","ADD","REMOVE","deepClonePatchValue","from","_ref2","cloned","clonePatchValueIfNeeded","applyPatches_","patches","patch","op","parentType","errorOffset","basePath","inversePatches","assignedValue","origValue","generatePatchesFromAssigned","generateArrayPatches","generateSetPatches","baseValue","replacement","immer","config","_this","produce","recipe","defaultBase","self","base2","args","_key3","hasError","ip","produceWithPatches","_len3","_key4","autoFreeze","setAutoFreeze","useStrictShallowCopy","setUseStrictShallowCopy","createDraft","finishDraft","applyPatches","applyPatchesImpl","assertIsFunction","func","errorMessage","ensureIsArray","item","getDependencies","createSelectorArgs","array","every","itemTypes","assertIsArrayOfFunctions","Ref","WeakRef","deref","UNTERMINATED","TERMINATED","createCacheNode","s","weakMapMemoize","fnNode","resultEqualityCheck","lastResult","resultsCount","memoized","cacheNode","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","clearCache","resetResultsCount","createSelectorCreator","memoizeOrOptions","_len","memoizeOptionsFromArgs","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","selector","inputSelectorResults","inputSelectorArgs","collectInputSelectorResults","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","composition","createThunkMiddleware","extraArgument","thunk","withExtraArgument","composeWithDevTools","createDraftSafeSelector2","wrappedSelector","rest","createDraftSafeSelectorCreator","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","hasMatchFunction","__REDUX_DEVTOOLS_EXTENSION__","createAction","prepareAction","actionCreator","prepared","Tuple","_Tuple","super","species","arr","prepend","freezeDraftable","val","createNextState","emplace","handler","update","insert","inserted","SHOULD_AUTOBATCH","prepareAutoBatched","createQueueWithTimer","timeout","notify","rAF","requestAnimationFrame","buildGetDefaultEnhancers","middlewareEnhancer","autoBatch","enhancerArray","store","notifying","shouldNotifyAtEndOfTick","notificationQueued","queueCallback","queueNotification","notifyListeners","listener2","wrappedListener","_action$meta","autoBatchEnhancer","executeReducerBuilderCallback","builderCallback","actionsMap","actionMatchers","defaultCaseReducer","builder","addCase","typeOrActionCreator","addMatcher","matcher","addDefaultCase","nanoid","matches","isAnyOf","_len4","matchers","some","isAllOf","_len5","_key5","hasExpectedRequestMetadata","validStatus","hasValidRequestId","requestId","hasValidRequestStatus","requestStatus","isAsyncThunkArray","isPending","_len6","asyncThunks","_key6","asyncThunk","combinedMatcher","isRejected","_len7","_key7","rejected","isRejectedWithValue","_len8","_key8","hasFlag","rejectedWithValue","isFulfilled","_len9","_key9","fulfilled","isAsyncThunkAction","_len10","_key10","commonProperties","RejectWithValue","_defineProperty","FulfillWithMeta","miniSerializeError","simpleError","property","createAsyncThunk","createAsyncThunk2","typePrefix","payloadCreator","serializeError","aborted","condition","extra","idGenerator","abortController","AbortController","abortHandler","abortReason","abort","reason","promise","async","finalAction","_options$condition","_options$getPendingMe","conditionResult","signal","abortedPromise","_","reject","getPendingMeta","race","rejectWithValue","fulfillWithValue","dispatchConditionRejection","unwrap","unwrapResult","settled","asyncThunkSymbol","getType","actionKey","buildCreateSlice","_creators$asyncThunk","creators","cAT","reducerPath","_reducerDefinitionType","caseReducer","preparedReducer","prepare","buildReducerCreators","reducerNames","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","sliceMatchers","contextMethods","reducer2","exposeAction","name2","exposeCaseReducer","buildReducer","extraReducers","finalCaseReducers","initialState","mapOrBuilderCallback","getInitialState","finalActionMatchers","finalDefaultCaseReducer","frozenInitialState","caseReducers","filter","_ref3","cr","previousState","isDraft2","isDraftable2","createNextState2","createReducer","sM","reducerName","reducerDefinition","reducerDetails","createNotation","isAsyncThunkSliceReducerDefinition","_ref4","maybeReducerWithPrepare","prepareCallback","isCaseReducerWithPrepareDefinition","handleNormalReducerDefinition","_ref5","noop","handleThunkCaseReducerDefinition","selectSelf","injectedSelectorCache","_reducer","makeSelectorProps","reducerPath2","injected","selectSlice","sliceState","getSelectors","selectState","selectorCache","_options$selectors","selectors","wrapSelector","actions","injectInto","injectable","pathOpt","newReducerPath","wrapper","rootState","_len11","_key11","unwrapped","createSlice","completed","cancelled","assertFunction","expected","alm","getListenerEntryPropsFrom","predicate","effect","createListenerEntry","addListener","removeListener","QueryStatus","QueryStatus2","withoutTrailingSlash","withoutLeadingSlash","joinUrls","RegExp","isAbsoluteUrl","delimiter","endsWith","startsWith","flatten","isPlainObject2","copyWithStructuralSharing","oldObj","newObj","newKeys","oldKeys","isSameObject","mergeObj","defaultFetchFn","defaultValidateStatus","status","defaultIsJsonContentType","headers","stripUndefined","HandledError","onFocus","onFocusLost","onOnline","onOffline","isQueryDefinition","calculateProvidedBy","description","queryArg","assertTagTypes","expandTagDescription","isNotNullish","countObjectKeys","forceQueryFnSymbol","isUpsertQuery","defaultTransformResponse","baseQueryReturnValue","calculateProvidedByThunk","endpointDefinitions","assertTagType","endpointName","originalArgs","baseQueryMeta","updateQuerySubstateIfExists","queryCacheKey","substate","getMutationCacheKey","_ref6","fixedCacheKey","updateMutationSubstateIfExists","buildSlice","_ref7","queryThunk","mutationThunk","definitions","apiUid","extractRehydrationInfo","hasRehydrationInfo","resetApiState","querySlice","removeQueryResult","_ref8","queryResultPatched","_ref9","_ref10","_arg$queryCacheKey","_draft$_arg$queryCach","upserting","startedTimeStamp","_ref11","merge","_definitions$meta$arg","fulfilledTimeStamp","newData","draftSubstateData","structuralSharing","_ref12","queries","mutationSlice","removeMutationResult","_ref13","cacheKey","_ref14","_ref15","_ref16","mutations","invalidationSlice","updateProvidedBy","providedTags","tagTypeSubscriptions","values","idSubscriptions","foundAt","_draft$type","_ref17","_draft$type$_ref","_draft$type2","subscribedQueries","_ref18","provided","incomingTags","cacheKeys","_draft$type3","_ref19","_draft$type3$_ref","_draft$type4","subscriptionSlice","updateSubscriptionOptions","unsubscribeQueryResult","internal_getRTKQSubscriptions","internalSubscriptionsSlice","subscriptionsUpdated","configSlice","online","onLine","focused","visibilityState","middlewareRegistered","_ref20","combinedReducer","subscriptions","skipToken","initialSubState","defaultQuerySubState","defaultMutationSubState","defaultSerializeQueryArgs","_ref23","queryArgs","serialized","cached","stringified","sort","acc","key2","buildCreateApi","modules","_options$extractRehyd","_options$reducerPath","optionsWithDefaults","keepUnusedDataFor","refetchOnMountOrArgChange","refetchOnFocus","refetchOnReconnect","invalidationBehavior","serializeQueryArgs","queryArgsApi","finalSerializeQueryArgs","endpointDefinition","endpointSQA","queryArgsApi2","initialResult","tagTypes","batch","api","injectEndpoints","evaluatedEndpoints","endpoints","query","mutation","overrideExisting","_formatProdErrorMessage2","initializedModules","injectEndpoint","enhanceEndpoints","_ref24","addTagTypes","eT","partialDefinition","init","buildCacheCollectionHandler","_ref25","internalState","internalActions","anySubscriptionsRemainingForKey","currentSubscriptions","isObjectEmpty","currentRemovalTimeouts","handleUnsubscribe","api2","_endpointDefinition$k","finalKeepUnusedDataFor","max","currentTimeout","mwApi","internalState2","_state$queries$queryC","util","queryState","buildInvalidationByTagsHandler","_ref26","refetchQuery","isThunkActionWithTags","isQueryEnd","pendingTagInvalidations","invalidateTags","newTags","_state$queries$key","_state$mutations$key","hasPendingRequests","tags","toInvalidate","selectInvalidatedBy","valuesArray","_internalState$curren","querySubState","subscriptionSubState","buildPollingHandler","_ref27","currentPolls","startNextPoll","_ref28","lowestPollingInterval","skipPollingIfUnfocused","findLowestPollingInterval","isFinite","currentPoll","nextPollTimestamp","pollingInterval","updatePollingInterval","_ref29","cleanupPollForKey","existingPoll","subscribers","POSITIVE_INFINITY","clearPolls","neverResolvedError","buildCacheLifecycleHandler","_ref31","isQueryThunk","isMutationThunk","isFulfilledThunk","lifecycleMap","handleNewKey","onCacheEntryAdded","lifecycle","cacheEntryRemoved","cacheDataLoaded","valueResolved","select","__","extra2","lifecycleApi","getCacheEntry","updateCachedData","updateRecipe","updateQueryData","runningHandler","stateBefore","_action$meta$arg$fixe","getCacheKey","oldState","cacheKey2","buildQueryLifecycleHandler","_ref32","isPendingThunk","isRejectedThunk","isFullfilledThunk","onQueryStarted","queryFulfilled","_lifecycleMap$request","_lifecycleMap$request2","_action$payload","isUnhandledError","buildDevCheckHandler","_ref33","buildBatchedActionsHandler","_ref34","subscriptionsPrefix","previousSubscriptions","updateSyncTimer","getSubscriptions","subscriptionSelectors","getSubscriptionCount","_subscriptions$queryC","isRequestSubscribed","_subscriptions$queryC2","parse","didMutate","actuallyMutateSubscriptions","mutableState","_mutableState$queryCa","_arg$queryCacheKey2","_mutableState$_arg$qu","_ref35","_arg$subscriptionOpti","subscriptionOptions","mutated","_arg$queryCacheKey3","_mutableState$_arg$qu2","_ref36","_arg$subscriptionOpti2","actionShouldContinue","newSubscriptions","produceWithPatches2","isSubscriptionSliceAction","isAdditionalSubscriptionAction","buildMiddleware","isThisApiSliceAction","handlerBuilders","middleware","initialized2","builderArgs","handlers","build","batchedActionsHandler","windowEventsHandler","_ref30","refetchValidQueries","sub","buildWindowEventHandler","mwApiWithNext","internalProbeResult","override","forceRefetch","safeAssign","coreModuleName","coreModule","_ref37","baseQuery","patchQueryData","upsertQueryData","prefetch","buildMatchThunkActions","executeEndpoint","transformResponse","baseQueryApi","endpoint","forced","isForcedQuery","forceQueryFn","extraOptions","queryFn","arg2","catchedError","transformErrorResponse","_state$reducerPath","_state$reducerPath2","_arg$forceRefetch","requestState","baseFetchOnMountOrArgChange","fulfilledVal","refetchVal","queryThunkArgs","_state$reducerPath3","_endpointDefinition$f","currentArg","previousArg","endpointState","matchesEndpoint","force","hasTheForce","maxAge","hasMaxAge","ifOlderThan","queryAction","options2","isPrefetch","initiate","latestStateValue","lastFulfilledTs","updateProvided","newValue","ret","undo","providesTags","matchPending","matchFulfilled","matchRejected","buildThunks","sliceActions","middlewareActions","buildQuerySelector","buildMutationSelector","selectCachedArgsForQuery","_ref21","selectSkippedQuery","selectSkippedMutation","serializedArgs","_selectInternalState$","_selectInternalState","selectInternalState","withRequestFlags","mutationId","_getMutationCacheKey","_selectInternalState$2","_selectInternalState2","apiState","_ref22","invalidateSubscriptions","invalidate","queryName","isUninitialized","isLoading","isSuccess","isError","buildSelectors","buildInitiateQuery","buildInitiateMutation","getRunningMutationThunk","getRunningMutationsThunk","getRunningQueriesThunk","getRunningQueryThunk","runningQueries","runningMutations","_runningQueries$get2","thunkResult","stateAfter","middlewareWarning","skippedSynchronously","runningQuery","selectFromState","statePromise","all","refetch","running","returnValuePromise","reset","_runningQueries$get","_endpointName","fixedCacheKeyOrRequestId","_runningMutations$get","buildInitiate","_anyApi$endpoints","_anyApi$endpoints$end","anyApi","React","ReactOriginal","ContextKey","gT","globalThis","getContext","_gT$ContextKey","contextMap","realContext","ReactReduxContext","notInitialized","createReduxContextHook","useReduxContext","refEquality","createSelectorHook","useReduxContext2","useSelector2","equalityFnOrOptions","equalityFn","subscription","getServerState","stabilityCheck","identityFunctionCheck","selectedState","addNestedSub","useSelector","defaultNoopBatch","nullListeners","createSubscription","parentSub","subscriptionsAmount","selfSubscribed","handleChangeWrapper","onStateChange","trySubscribe","first","createListenerCollection","tryUnsubscribe","cleanupListener","removed","notifyNestedSubs","getListeners","useIsomorphicLayoutEffect","shallowEqual","objA","objB","keysA","keysB","getOwnPropertySymbols","Provider_default","serverState","contextValue","Context","createStoreHook","useStore2","useStore","createDispatchHook","useDispatch2","useDispatch","capitalize","str","useSyncExternalStoreWithSelector2","initializeConnect","React2","UNINITIALIZED_VALUE","useStableQueryArgs","serialize","incoming","cache2","useShallowStableValue","useRef2","useEffect2","useEffect3","noPendingQueryStateSelector","isFetching","reactHooksModuleName","createApi","rrBatch","hooks","rrUseDispatch","rrUseSelector","rrUseStore","_createSelector","unstable__sideEffectsInRender","buildQueryHooks","buildMutationHook","usePrefetch","moduleOptions","usePossiblyImmediateEffect","useQuerySubscription","skip","subscriptionSelectorsRef","useRef3","returnedValue","stableArg","stableSubscriptionOptions","lastRenderHadSubscription","promiseRef","currentRenderHasSubscription","subscriptionRemoved","_promiseRef$current","lastPromise","lastSubscriptionOptions","_promiseRef$current2","useMemo2","_promiseRef$current3","useLazyQuerySubscription","setArg","_promiseRef$current4","_promiseRef$current5","subscriptionOptionsRef","trigger","preferCacheValue","_promiseRef$current6","_promiseRef$current7","useQueryState","selectFromResult","lastValue","selectDefaultResult","queryStatePreSelector","shallowEqual2","querySelector","newLastValue","useLazyQuery","queryStateResults","info","lastArg","useQuery","querySubscriptionResults","setPromise","triggerMutation","promise2","mutationSelector","finalState","defaultOptions","stableDefaultOptions","_lastResult2","hasData","currentData","buildHooks","isMutationDefinition","useMutation","reactHooksModule","weatherApi","baseUrl","prepareHeaders","fetchFn","paramsSerializer","isJsonContentType","jsonContentType","jsonReplacer","defaultTimeout","responseHandler","globalResponseHandler","validateStatus","globalValidateStatus","baseFetchOptions","warn","Headers","params","isJsonifiable","toJSON","divider","URLSearchParams","request","Request","timedOut","timeoutId","responseClone","clone","resultData","responseText","handleResponseError","handleResponse","originalStatus","fetchBaseQuery","getForecastByCity","useGetForecastByCityQuery","addressHandler","addressArray","cityName","country","Clock","setTime","minutes","getMinutes","hours","getHours","intervalId","setInterval","clearInterval","CityDate","adress","currentDate","getCurrentDate","day","getDate","getMonth","year","getFullYear","ClearDay","ClearNight","Cloudy","Fog","CloudyDay","CloudyNight","Rain","Snow","Windy","WeatherIcon","conditionHandler","CurrentConditionIcon","currentCondition","setCurrentCondition","Compass","fillRule","CompassArrow","deg","transform","x1","y1","x2","y2","gradientUnits","stopColor","WindInfo","windspeed","windgust","CloseIcon","HourlyForecast","hourly","isPopup","setIsPopup","dataTime","setDataTime","isHoverColumnIndex","setIsHoverColumnIndex","isCurrentTimeIndex","setIsCurrentTimeIndex","currentTime","currentHourlyDate","reverse","mouseOn","mouseLeave","newTime","onMouseEnter","onMouseLeave","hour","icon","temp","feelslike","precip","precipprob","DayForecast","forecast","setPopupForecastIndex","setIsHourslyForecastForDate","WeeklyForecast","weekly","isHourlyForecastForDate","popupForecastIndex","dayForecast","forecasts","addForecast","forecastsReducer","ForecastPage","newLocations","resolvedAddress","currentConditions","winddir","days","_Fragment","WorldMapIcon","points","MapBtn","setIsMap","isActive","setIsActive","ArrowForwardIcon","ArrowBackIcon","ArrowBtn","direction","setTranslate","counter","setCounter","windowWidth","innerWidth","WorldMap","MapLocation","setIsActiveLocation","isActiveLocation","latitide","setLatitude","setLongitude","title","MapAddress","WeatherPage","translate","paginationCounter","setPaginationCounter","getTasks","storage","localStorage","getItem","setItem","useLocalStorage","getDefaultMiddleware","immutableCheck","serializableCheck","actionCreatorCheck","middlewareArray","thunkMiddleware","devTools","enhancers","rootReducer","finalMiddleware","finalCompose","compose2","trace","middlewares","createStore2","middlewareAPI","chain","applyMiddleware","getDefaultEnhancers","storeEnhancers","configureStore","gDM","ReactDOM","getElementById","App"],"sourceRoot":""}